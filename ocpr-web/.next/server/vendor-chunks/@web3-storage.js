"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@web3-storage";
exports.ids = ["vendor-chunks/@web3-storage"];
exports.modules = {

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/access.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/access.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GrantedAccess: () => (/* binding */ GrantedAccess),\n/* harmony export */   accountAccess: () => (/* binding */ accountAccess),\n/* harmony export */   claim: () => (/* binding */ claim),\n/* harmony export */   createPendingAccessRequest: () => (/* binding */ createPendingAccessRequest),\n/* harmony export */   delegate: () => (/* binding */ delegate),\n/* harmony export */   request: () => (/* binding */ request),\n/* harmony export */   spaceAccess: () => (/* binding */ spaceAccess),\n/* harmony export */   toCapabilities: () => (/* binding */ toCapabilities)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_access__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/access */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/access.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./agent.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/encoding.js\");\n\n\n\n\n\n/**\n * Takes array of delegations and propagates them to their respective audiences\n * through a given space (or the current space if none is provided).\n *\n * Returns error result if agent has no current space and no space was provided.\n * Also returns error result if invocation fails.\n *\n * @param {Agent} agent - Agent connected to the w3up service.\n * @param {object} input\n * @param {API.Delegation[]} input.delegations - Delegations to propagate.\n * @param {API.SpaceDID} [input.space] - Space to propagate through.\n * @param {API.Delegation[]} [input.proofs] - Optional set of proofs to be\n * included in the invocation.\n */\nconst delegate = async (agent, { delegations, proofs = [], space = agent.currentSpace() }) => {\n    if (!space) {\n        return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_2__.fail)('Space must be specified');\n    }\n    const entries = Object.values(delegations).map((proof) => [\n        proof.cid.toString(),\n        proof.cid,\n    ]);\n    const { out } = await agent.invokeAndExecute(_web3_storage_capabilities_access__WEBPACK_IMPORTED_MODULE_0__.delegate, {\n        with: space,\n        nb: {\n            delegations: Object.fromEntries(entries),\n        },\n        // must be embedded here because it's referenced by cid in .nb.delegations\n        proofs: [...delegations, ...proofs],\n    });\n    return out;\n};\n/**\n * Requests specified `access` level from specified `account`. It invokes\n * `access/authorize` capability, if invocation succeeds it will return a\n * `PendingAccessRequest` object that can be used to poll for the requested\n * delegation through `access/claim` capability.\n *\n * @param {API.Agent} agent\n * @param {object} input\n * @param {API.AccountDID} input.account - Account from which access is requested.\n * @param {API.ProviderDID} [input.provider] - Provider that will receive the invocation.\n * @param {API.DID} [input.audience] - Principal requesting an access.\n * @param {API.Access} [input.access] - Access been requested.\n * @returns {Promise<API.Result<PendingAccessRequest, API.AccessAuthorizeFailure|API.InvocationError>>}\n */\nconst request = async (agent, { account, provider = /** @type {API.ProviderDID} */ (agent.connection.id.did()), audience: audience = agent.did(), access = spaceAccess, }) => {\n    // Request access from the account.\n    const { out: result } = await agent.invokeAndExecute(_web3_storage_capabilities_access__WEBPACK_IMPORTED_MODULE_0__.authorize, {\n        audience: _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.DID.parse(provider),\n        with: audience,\n        nb: {\n            iss: account,\n            // New ucan spec moved to recap style layout for capabilities and new\n            // `access/request` will use similar format as opposed to legacy one,\n            // in the meantime we translate new format to legacy format here.\n            att: [...toCapabilities(access)],\n        },\n    });\n    return result.error\n        ? result\n        : {\n            ok: new PendingAccessRequest({\n                ...result.ok,\n                agent,\n                audience,\n                provider,\n            }),\n        };\n};\n/**\n * Claims access that has been delegated to the given audience, which by\n * default is the agent's DID.\n *\n * @param {API.Agent} agent\n * @param {object} input\n * @param {API.DID} [input.audience] - Principal requesting an access.\n * @param {API.ProviderDID} [input.provider] - Provider handling the invocation.\n * @returns {Promise<API.Result<GrantedAccess, API.AccessClaimFailure|API.InvocationError>>}\n */\nconst claim = async (agent, { provider = /** @type {API.ProviderDID} */ (agent.connection.id.did()), audience = agent.did(), } = {}) => {\n    const { out: result } = await agent.invokeAndExecute(_web3_storage_capabilities_access__WEBPACK_IMPORTED_MODULE_0__.claim, {\n        audience: _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.DID.parse(provider),\n        with: audience,\n    });\n    if (result.error) {\n        return result;\n    }\n    else {\n        const delegations = Object.values(result.ok.delegations);\n        const proofs = /** @type {API.Tuple<API.Delegation>} */ (delegations.flatMap((proof) => (0,_encoding_js__WEBPACK_IMPORTED_MODULE_4__.bytesToDelegations)(proof)));\n        return { ok: new GrantedAccess({ agent, proofs }) };\n    }\n};\n/**\n * Creates a new `PendingAccessRequest` object that can be used to poll for the\n * requested delegation through `access/claim` capability.\n *\n * @param {API.Agent} agent\n * @param {object} input\n * @param {API.Link} input.request - Link to the `access/authorize` invocation.\n * @param {API.UTCUnixTimestamp} input.expiration - Seconds in UTC.\n * @param {API.DID} [input.audience] - Principal requesting an access.\n * @param {API.ProviderDID} [input.provider] - Provider handling request.\n */\nconst createPendingAccessRequest = (agent, { request, expiration, provider = /** @type {API.ProviderDID} */ (agent.connection.id.did()), audience: audience = agent.did(), }) => new PendingAccessRequest({ agent, request, expiration, provider, audience });\n/**\n * Represents a pending access request. It can be used to poll for the requested\n * delegation.\n */\nclass PendingAccessRequest {\n    /**\n     * @typedef {object} PendingAccessRequestModel\n     * @property {API.Agent} agent - Agent handling interaction.\n     * @property {API.DID} audience - Principal requesting an access.\n     * @property {API.ProviderDID} provider - Provider handling request.\n     * @property {API.UTCUnixTimestamp} expiration - Seconds in UTC.\n     * @property {API.Link} request - Link to the `access/authorize` invocation.\n     *\n     * @param {PendingAccessRequestModel} model\n     */\n    constructor(model) {\n        this.model = model;\n    }\n    get agent() {\n        return this.model.agent;\n    }\n    get audience() {\n        return this.model.audience;\n    }\n    get expiration() {\n        return new Date(this.model.expiration * 1000);\n    }\n    get request() {\n        return this.model.request;\n    }\n    get provider() {\n        return this.model.provider;\n    }\n    /**\n     * Low level method and most likely you want to use `.claim` instead. This method will poll\n     * fetch delegations **just once** and will return proofs matching to this request. Please note\n     * that there may not be any matches in which case result will be `{ ok: [] }`.\n     *\n     * If you do want to continuously poll until request is approved or expired, you should use\n     * `.claim` method instead.\n     *\n     * @returns {Promise<API.Result<API.Delegation[], API.InvocationError|API.AccessClaimFailure|RequestExpired>>}\n     */\n    async poll() {\n        const { agent, audience, provider, expiration } = this.model;\n        const timeout = expiration * 1000 - Date.now();\n        if (timeout <= 0) {\n            return { error: new RequestExpired(this.model) };\n        }\n        else {\n            const result = await claim(agent, { audience, provider });\n            return result.error\n                ? result\n                : {\n                    ok: result.ok.proofs.filter((proof) => isRequestedAccess(proof, this.model)),\n                };\n        }\n    }\n    /**\n     * Continuously polls delegations until this request is approved or expired. Returns\n     * a `GrantedAccess` object (view over the delegations) that can be used in the\n     * invocations or can be saved in the agent (store) using `.save()` method.\n     *\n     * @param {object} options\n     * @param {number} [options.interval]\n     * @param {AbortSignal} [options.signal]\n     * @returns {Promise<API.Result<GrantedAccess, Error>>}\n     */\n    async claim({ signal, interval = 250 } = {}) {\n        while (signal?.aborted !== true) {\n            const result = await this.poll();\n            // If polling failed, return the error.\n            if (result.error) {\n                return result;\n            }\n            // If we got some matching proofs, return them.\n            else if (result.ok.length > 0) {\n                return {\n                    ok: new GrantedAccess({\n                        agent: this.agent,\n                        proofs: /** @type {API.Tuple<API.Delegation>} */ (result.ok),\n                    }),\n                };\n            }\n            await new Promise((resolve) => setTimeout(resolve, interval));\n        }\n        return {\n            error: Object.assign(new Error('Aborted'), { reason: signal.reason }),\n        };\n    }\n}\n/**\n * Error returned when pending access request expires.\n */\nclass RequestExpired extends _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.Failure {\n    /**\n     * @param {PendingAccessRequestModel} model\n     */\n    constructor(model) {\n        super();\n        this.model = model;\n    }\n    get name() {\n        return 'RequestExpired';\n    }\n    get request() {\n        return this.model.request;\n    }\n    get expiredAt() {\n        return new Date(this.model.expiration * 1000);\n    }\n    describe() {\n        return `Access request expired at ${this.expiredAt} for ${this.request} request.`;\n    }\n}\n/**\n * View over the UCAN Delegations that grant access to a specific principal.\n */\nclass GrantedAccess {\n    /**\n     * @typedef {object} GrantedAccessModel\n     * @property {API.Agent} agent - Agent that processed the request.\n     * @property {API.Tuple<API.Delegation>} proofs - Delegations that grant access.\n     *\n     * @param {GrantedAccessModel} model\n     */\n    constructor(model) {\n        this.model = model;\n    }\n    get proofs() {\n        return this.model.proofs;\n    }\n    /**\n     * Saves access into the agents proofs store so that it can be retained\n     * between sessions.\n     *\n     * @param {object} input\n     * @param {API.Agent} [input.agent]\n     */\n    save({ agent = this.model.agent } = {}) {\n        return (0,_agent_js__WEBPACK_IMPORTED_MODULE_3__.importAuthorization)(agent, this);\n    }\n}\n/**\n * Checks if the given delegation is caused by the passed `request` for access.\n *\n * @param {API.Delegation} delegation\n * @param {object} selector\n * @param {API.Link} selector.request\n * @returns\n */\nconst isRequestedAccess = (delegation, { request }) => \n// `access/confirm` handler adds facts to the delegation issued by the account\n// so that principal requesting access can identify correct delegation when\n// access is granted.\ndelegation.facts.some((fact) => `${fact['access/request']}` === `${request}`);\n/**\n * Maps access object that uses UCAN 0.10 capabilities format as opposed\n * to legacy UCAN 0.9 format used by w3up  which predates new format.\n *\n * @param {API.Access} access\n * @returns {{ can: API.Ability }[]}\n */\nconst toCapabilities = (access) => {\n    const abilities = [];\n    const entries = /** @type {[API.Ability, API.Unit][]} */ (Object.entries(access));\n    for (const [can, details] of entries) {\n        if (details) {\n            abilities.push({ can });\n        }\n    }\n    return abilities;\n};\n/**\n * Set of capabilities required by the agent to manage a space.\n */\nconst spaceAccess = {\n    'space/*': {},\n    'blob/*': {},\n    'index/*': {},\n    'store/*': {},\n    'upload/*': {},\n    'access/*': {},\n    'filecoin/*': {},\n    'usage/*': {},\n};\n/**\n * Set of capabilities required for by the agent to manage an account.\n */\nconst accountAccess = {\n    '*': {},\n};\n//# sourceMappingURL=access.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/access.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/agent-data.js":
/*!******************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/agent-data.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentData: () => (/* binding */ AgentData),\n/* harmony export */   getSessionProofs: () => (/* binding */ getSessionProofs),\n/* harmony export */   isSessionProof: () => (/* binding */ isSessionProof)\n/* harmony export */ });\n/* harmony import */ var _ucanto_principal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/principal */ \"(ssr)/./node_modules/@ucanto/principal/src/lib.js\");\n/* harmony import */ var _ucanto_principal_ed25519__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/principal/ed25519 */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519.js\");\n/* harmony import */ var _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/core/delegation */ \"(ssr)/./node_modules/@ucanto/core/src/delegation.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/index.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _delegations_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./delegations.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/delegations.js\");\n/* harmony import */ var _utils_buffers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/buffers.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/utils/buffers.js\");\n\n\n\n\n\n\n\n\n/** @typedef {import('./types.js').AgentDataModel} AgentDataModel */\n/** @implements {AgentDataModel} */\nclass AgentData {\n    /** @type {(data: import('./types.js').AgentDataExport) => Promise<void> | void} */\n    #save;\n    /**\n     * @param {import('./types.js').AgentDataModel} data\n     * @param {import('./types.js').AgentDataOptions} [options]\n     */\n    constructor(data, options = {}) {\n        this.meta = data.meta;\n        this.principal = data.principal;\n        this.spaces = data.spaces;\n        this.delegations = data.delegations;\n        this.currentSpace = data.currentSpace;\n        this.#save = (data) => options.store ? options.store.save(data) : undefined;\n    }\n    /**\n     * Create a new AgentData instance from the passed initialization data.\n     *\n     * @param {Partial<import('./types.js').AgentDataModel>} [init]\n     * @param {import('./types.js').AgentDataOptions} [options]\n     */\n    static async create(init = {}, options = {}) {\n        const agentData = new AgentData({\n            meta: { name: 'agent', type: 'device', ...init.meta },\n            principal: init.principal ?? (await _ucanto_principal_ed25519__WEBPACK_IMPORTED_MODULE_1__.Signer.generate()),\n            spaces: init.spaces ?? new Map(),\n            delegations: init.delegations ?? new Map(),\n            currentSpace: init.currentSpace,\n        }, options);\n        if (options.store) {\n            await options.store.save(agentData.export());\n        }\n        return agentData;\n    }\n    /**\n     * Instantiate AgentData from previously exported data.\n     *\n     * @param {import('./types.js').AgentDataExport} raw\n     * @param {import('./types.js').AgentDataOptions} [options]\n     */\n    static fromExport(raw, options) {\n        /** @type {import('./types.js').AgentDataModel['delegations']} */\n        const dels = new Map();\n        for (const [key, value] of raw.delegations) {\n            dels.set(key, {\n                delegation: (0,_ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_2__.importDAG)(value.delegation.map((d) => ({\n                    cid: multiformats__WEBPACK_IMPORTED_MODULE_4__.CID.parse(d.cid).toV1(),\n                    bytes: d.bytes instanceof Uint8Array ? d.bytes : new Uint8Array(d.bytes),\n                }))),\n                meta: value.meta,\n            });\n        }\n        return new AgentData({\n            meta: raw.meta,\n            // @ts-expect-error for some reason TS thinks this is a EdSigner\n            principal: _ucanto_principal__WEBPACK_IMPORTED_MODULE_0__.Signer.from(raw.principal),\n            currentSpace: raw.currentSpace,\n            spaces: raw.spaces,\n            delegations: dels,\n        }, options);\n    }\n    /**\n     * Export data in a format safe to pass to `structuredClone()`.\n     */\n    export() {\n        /** @type {import('./types.js').AgentDataExport} */\n        const raw = {\n            meta: this.meta,\n            principal: this.principal.toArchive(),\n            currentSpace: this.currentSpace,\n            spaces: this.spaces,\n            delegations: new Map(),\n        };\n        for (const [key, value] of this.delegations) {\n            raw.delegations.set(key, {\n                meta: value.meta,\n                delegation: [...value.delegation.export()].map((b) => ({\n                    cid: b.cid.toString(),\n                    bytes: (0,_utils_buffers_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToArrayBuffer)(b.bytes),\n                })),\n            });\n        }\n        return raw;\n    }\n    /**\n     * @param {import('@ucanto/interface').DID} did\n     * @param {import('./types.js').SpaceMeta} meta\n     * @param {import('@ucanto/interface').Delegation} [proof]\n     */\n    async addSpace(did, meta, proof) {\n        this.spaces.set(did, meta);\n        await (proof ? this.addDelegation(proof) : this.#save(this.export()));\n    }\n    /**\n     * @deprecated\n     * @param {import('@ucanto/interface').DID<'key'>} did\n     */\n    async setCurrentSpace(did) {\n        this.currentSpace = did;\n        await this.#save(this.export());\n    }\n    /**\n     * @param {import('@ucanto/interface').Delegation} delegation\n     * @param {import('./types.js').DelegationMeta} [meta]\n     */\n    async addDelegation(delegation, meta) {\n        this.delegations.set(delegation.cid.toString(), {\n            delegation,\n            meta: meta ?? {},\n        });\n        await this.#save(this.export());\n    }\n    /**\n     * @param {import('@ucanto/interface').UCANLink} cid\n     */\n    async removeDelegation(cid) {\n        this.delegations.delete(cid.toString());\n        await this.#save(this.export());\n    }\n}\n/**\n * Is the given capability a session attestation?\n *\n * @param {Ucanto.Capability} cap\n * @returns {boolean}\n */\nconst isSessionCapability = (cap) => cap.can === _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_5__.UCAN.attest.can;\n/**\n * Is the given delegation a session proof?\n *\n * @param {Ucanto.Delegation} delegation\n * @returns {delegation is Ucanto.Delegation<[import('./types.js').UCANAttest]>}\n */\nconst isSessionProof = (delegation) => delegation.capabilities.some((cap) => isSessionCapability(cap));\n/**\n * @typedef {string} SessionProofAuthorizationCid - the nb.proof CID of the ucan/attest in the session proof\n * @typedef {Ucanto.DID} SessionProofIssuer - issuer of ucan/attest session proof\n * @typedef {Record<SessionProofAuthorizationCid, Record<SessionProofIssuer, [Ucanto.Delegation, ...Ucanto.Delegation[]]>>} SessionProofIndexedByAuthorizationAndIssuer\n */\n/**\n * Get a map from CIDs to the session proofs that reference them\n *\n * @param {AgentData} data\n * @returns {SessionProofIndexedByAuthorizationAndIssuer}\n */\nfunction getSessionProofs(data) {\n    /** @type {SessionProofIndexedByAuthorizationAndIssuer} */\n    const proofs = {};\n    for (const { delegation } of data.delegations.values()) {\n        if (isSessionProof(delegation)) {\n            const cap = delegation.capabilities[0];\n            if (cap && !(0,_delegations_js__WEBPACK_IMPORTED_MODULE_6__.isExpired)(delegation)) {\n                const proof = cap.nb.proof;\n                if (proof) {\n                    const proofCid = proof.toString();\n                    const issuerDid = delegation.issuer.did();\n                    proofs[proofCid] = proofs[proofCid] ?? {};\n                    proofs[proofCid][issuerDid] = proofs[proofCid][issuerDid] ?? [];\n                    proofs[proofCid][issuerDid].push(delegation);\n                }\n            }\n        }\n    }\n    return proofs;\n}\n//# sourceMappingURL=agent-data.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/agent-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/agent-use-cases.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/agent-use-cases.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addProvider: () => (/* binding */ addProvider),\n/* harmony export */   addProviderAndDelegateToAccount: () => (/* binding */ addProviderAndDelegateToAccount),\n/* harmony export */   authorizeAndWait: () => (/* binding */ authorizeAndWait),\n/* harmony export */   authorizeWaitAndClaim: () => (/* binding */ authorizeWaitAndClaim),\n/* harmony export */   claimAccess: () => (/* binding */ claimAccess),\n/* harmony export */   delegationsIncludeSessionProof: () => (/* binding */ delegationsIncludeSessionProof),\n/* harmony export */   getAccountPlan: () => (/* binding */ getAccountPlan),\n/* harmony export */   pollAccessClaimUntil: () => (/* binding */ pollAccessClaimUntil),\n/* harmony export */   requestAccess: () => (/* binding */ requestAccess),\n/* harmony export */   waitForAuthorizationByPolling: () => (/* binding */ waitForAuthorizationByPolling)\n/* harmony export */ });\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./agent.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent.js\");\n/* harmony import */ var _web3_storage_capabilities_access__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/access */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/access.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/encoding.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _agent_data_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./agent-data.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent-data.js\");\n/* harmony import */ var _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-storage/did-mailto */ \"(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\");\n\n\n\n\n\n\n\n\n\nconst DIDWeb = _ucanto_core__WEBPACK_IMPORTED_MODULE_4__.Schema.DID.match({ method: 'web' });\n/**\n * Request access by a session allowing this agent to issue UCANs\n * signed by the account.\n *\n * @param {AccessAgent} access\n * @param {API.Principal<API.AccountDID>} account\n * @param {Iterable<{ can: API.Ability }>} capabilities\n */\nasync function requestAccess(access, account, capabilities) {\n    const res = await access.invokeAndExecute(_web3_storage_capabilities_access__WEBPACK_IMPORTED_MODULE_1__.authorize, {\n        audience: access.connection.id,\n        with: access.issuer.did(),\n        nb: {\n            iss: account.did(),\n            att: [...capabilities],\n        },\n    });\n    if (res?.out.error) {\n        throw res.out.error;\n    }\n}\n/**\n * claim delegations delegated to an audience\n *\n * @param {AccessAgent} access\n * @param {API.DID} [audienceOfClaimedDelegations] - audience of claimed delegations. defaults to access.connection.id.did()\n * @param {object} opts\n * @param {string} [opts.nonce] - nonce to use for the claim\n * @param {boolean} [opts.addProofs] - whether to addProof to access agent\n */\nasync function claimAccess(access, audienceOfClaimedDelegations = access.connection.id.did(), { addProofs = false, nonce } = {}) {\n    const res = await access.invokeAndExecute(_web3_storage_capabilities_access__WEBPACK_IMPORTED_MODULE_1__.claim, {\n        audience: access.connection.id,\n        with: audienceOfClaimedDelegations,\n        nonce,\n    });\n    if (res.out.error) {\n        throw res.out.error;\n    }\n    const delegations = Object.values(res.out.ok.delegations).flatMap((bytes) => (0,_encoding_js__WEBPACK_IMPORTED_MODULE_2__.bytesToDelegations)(bytes));\n    if (addProofs) {\n        for (const d of delegations) {\n            await access.addProof(d);\n        }\n        await (0,_agent_js__WEBPACK_IMPORTED_MODULE_0__.addSpacesFromDelegations)(access, delegations);\n    }\n    return delegations;\n}\n/**\n * @param {object} opts\n * @param {AccessAgent} opts.access\n * @param {API.SpaceDID} opts.space\n * @param {API.Principal<API.AccountDID>} opts.account\n * @param {API.ProviderDID} opts.provider - e.g. 'did:web:staging.web3.storage'\n */\nasync function addProvider({ access, space, account, provider }) {\n    const result = await access.invokeAndExecute(_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_3__.Provider.add, {\n        audience: access.connection.id,\n        with: account.did(),\n        nb: {\n            provider,\n            consumer: space,\n        },\n    });\n    if (result.out.error) {\n        throw result.out.error;\n    }\n}\n/**\n * @typedef {(delegations: API.Delegation[]) => boolean} DelegationsChecker\n */\n/**\n * @type DelegationsChecker\n */\nfunction delegationsIncludeSessionProof(delegations) {\n    return delegations.some((d) => (0,_agent_data_js__WEBPACK_IMPORTED_MODULE_5__.isSessionProof)(d));\n}\n/**\n * @param {DelegationsChecker} delegationsMatch\n * @param {AccessAgent} access\n * @param {API.DID} delegee\n * @param {object} [opts]\n * @param {number} [opts.interval]\n * @param {AbortSignal} [opts.signal]\n * @returns {Promise<Iterable<API.Delegation>>}\n */\nasync function pollAccessClaimUntil(delegationsMatch, access, delegee, opts) {\n    const interval = opts?.interval || 250;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if (opts?.signal?.aborted)\n            throw opts.signal.reason ?? new Error('operation aborted');\n        const res = await access.invokeAndExecute(_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_3__.Access.claim, {\n            with: delegee,\n        });\n        if (res.out.error)\n            throw res.out.error;\n        const claims = Object.values(res.out.ok.delegations).flatMap((d) => (0,_encoding_js__WEBPACK_IMPORTED_MODULE_2__.bytesToDelegations)(d));\n        if (delegationsMatch(claims))\n            return claims;\n        await new Promise((resolve) => setTimeout(resolve, interval));\n    }\n}\n/**\n * @template [T={}]\n * @typedef {{ signal?: AbortSignal } & T} AuthorizationWaiterOpts\n */\n/**\n * @template [U={}]\n * @typedef {(accessAgent: AccessAgent, opts: AuthorizationWaiterOpts<U>) => Promise<Iterable<API.Delegation>>} AuthorizationWaiter\n */\n/**\n * Wait for authorization process to complete by polling executions of the\n * `access/claim` capability and waiting for the result to include\n * a session delegation.\n *\n * @type AuthorizationWaiter<{interval?: number}>\n */\nasync function waitForAuthorizationByPolling(access, opts = {}) {\n    const claimed = await pollAccessClaimUntil(delegationsIncludeSessionProof, access, access.issuer.did(), {\n        signal: opts?.signal,\n        interval: opts?.interval,\n    });\n    return [...claimed];\n}\n/**\n * Request authorization of a session allowing this agent to issue UCANs\n * signed by the passed email address.\n *\n * @param {AccessAgent} access\n * @param {`${string}@${string}`} email\n * @param {object} [opts]\n * @param {AbortSignal} [opts.signal]\n * @param {boolean} [opts.dontAddProofs] - whether to skip adding proofs to the agent\n * @param {Iterable<{ can: API.Ability }>} [opts.capabilities]\n * @param {AuthorizationWaiter} [opts.expectAuthorization] - function that will resolve once account has confirmed the authorization request\n */\nasync function authorizeAndWait(access, email, opts = {}) {\n    const expectAuthorization = opts.expectAuthorization || waitForAuthorizationByPolling;\n    const account = { did: () => _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_6__.fromEmail(email) };\n    await requestAccess(access, account, opts?.capabilities || [\n        { can: 'space/*' },\n        { can: 'store/*' },\n        { can: 'provider/add' },\n        { can: 'subscription/list' },\n        { can: 'upload/*' },\n        { can: 'ucan/*' },\n        { can: 'plan/*' },\n        { can: 'usage/*' },\n        { can: 'w3up/*' },\n    ]);\n    const sessionDelegations = [...(await expectAuthorization(access, opts))];\n    if (!opts?.dontAddProofs) {\n        await Promise.all(sessionDelegations.map(async (d) => access.addProof(d)));\n    }\n}\n/**\n * Request authorization of a session allowing this agent to issue UCANs\n * signed by the passed email address.\n *\n * @param {AccessAgent} accessAgent\n * @param {`${string}@${string}`} email\n * @param {object} [opts]\n * @param {AbortSignal} [opts.signal]\n * @param {Iterable<{ can: API.Ability }>} [opts.capabilities]\n * @param {boolean} [opts.addProofs]\n * @param {AuthorizationWaiter} [opts.expectAuthorization] - function that will resolve once account has confirmed the authorization request\n */\nasync function authorizeWaitAndClaim(accessAgent, email, opts) {\n    await authorizeAndWait(accessAgent, email, opts);\n    await claimAccess(accessAgent, accessAgent.issuer.did(), {\n        addProofs: opts?.addProofs ?? true,\n    });\n}\n/**\n * Provisions space with the specified account and sets up a recovery with the\n * same account.\n *\n * @param {AccessAgent} access\n * @param {AgentData} agentData\n * @param {string} email\n * @param {object} [opts]\n * @param {AbortSignal} [opts.signal]\n * @param {API.DID<'key'>} [opts.space]\n * @param {API.ProviderDID} [opts.provider] - provider to register - defaults to this.connection.id\n */\nasync function addProviderAndDelegateToAccount(access, agentData, email, opts) {\n    const space = opts?.space || access.currentSpace();\n    const spaceMeta = space ? agentData.spaces.get(space) : undefined;\n    const provider = opts?.provider ||\n        (() => {\n            const service = access.connection.id.did();\n            if (DIDWeb.is(service)) {\n                // connection.id did is a valid provider value. Try using that.\n                return service;\n            }\n            throw new Error(`unable to determine provider to use to addProviderAndDelegateToAccount using access.connection.id did ${service}. expected a did:web:`);\n        })();\n    if (!space || !spaceMeta) {\n        throw new Error('No space selected');\n    }\n    if (spaceMeta) {\n        throw new Error('Space already registered with web3.storage.');\n    }\n    const account = { did: () => _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_6__.fromEmail(_web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_6__.email(email)) };\n    await addProvider({ access, space, account, provider });\n    const delegateSpaceAccessResult = await delegateSpaceAccessToAccount(access, space, account);\n    if (delegateSpaceAccessResult.out.error) {\n        throw delegateSpaceAccessResult.out.error;\n    }\n    await agentData.addSpace(space, spaceMeta);\n}\n/**\n * @param {AccessAgent} access\n * @param {API.SpaceDID} space\n * @param {API.Principal<API.AccountDID>} account\n */\nasync function delegateSpaceAccessToAccount(access, space, account) {\n    const issuerSaysAccountCanAdminSpace = await createIssuerSaysAccountCanAdminSpace(access.issuer, space, account, undefined, access.proofs([{ with: space, can: '*' }]), \n    // we want to sign over control of this space forever\n    Infinity);\n    return access.invokeAndExecute(_web3_storage_capabilities_access__WEBPACK_IMPORTED_MODULE_1__.delegate, {\n        audience: access.connection.id,\n        with: space,\n        expiration: Infinity,\n        nb: {\n            delegations: {\n                [issuerSaysAccountCanAdminSpace.cid.toString()]: issuerSaysAccountCanAdminSpace.cid,\n            },\n        },\n        proofs: [\n            // must be embedded here because it's referenced by cid in .nb.delegations\n            issuerSaysAccountCanAdminSpace,\n        ],\n    });\n}\n/**\n * @param {API.Signer<API.DIDKey>} issuer\n * @param {API.SpaceDID} space\n * @param {API.Principal<API.AccountDID>} account\n * @param {API.Capabilities} capabilities\n * @param {API.Delegation[]} proofs\n * @param {number} expiration\n * @returns\n */\nasync function createIssuerSaysAccountCanAdminSpace(issuer, space, account, capabilities = [\n    {\n        can: '*',\n        with: space,\n    },\n], proofs = [], expiration) {\n    return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_4__.delegate)({\n        issuer,\n        audience: account,\n        capabilities,\n        proofs,\n        expiration,\n    });\n}\n/**\n *\n * @param {AccessAgent} agent\n * @param {API.AccountDID} account\n */\nasync function getAccountPlan(agent, account) {\n    const receipt = await agent.invokeAndExecute(_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_3__.Plan.get, {\n        with: account,\n    });\n    return receipt.out;\n}\n//# sourceMappingURL=agent-use-cases.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/agent-use-cases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/agent.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Access: () => (/* reexport module object */ _access_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   Agent: () => (/* binding */ Agent),\n/* harmony export */   AgentData: () => (/* reexport safe */ _agent_data_js__WEBPACK_IMPORTED_MODULE_9__.AgentData),\n/* harmony export */   AppName: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_11__.AppName),\n/* harmony export */   Delegation: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Delegation),\n/* harmony export */   Schema: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Schema),\n/* harmony export */   Space: () => (/* reexport module object */ _space_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   addProvider: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.addProvider),\n/* harmony export */   addProviderAndDelegateToAccount: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.addProviderAndDelegateToAccount),\n/* harmony export */   addSpacesFromDelegations: () => (/* binding */ addSpacesFromDelegations),\n/* harmony export */   authorizeAndWait: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.authorizeAndWait),\n/* harmony export */   authorizeWaitAndClaim: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.authorizeWaitAndClaim),\n/* harmony export */   canDelegateCapability: () => (/* reexport safe */ _delegations_js__WEBPACK_IMPORTED_MODULE_8__.canDelegateCapability),\n/* harmony export */   claimAccess: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.claimAccess),\n/* harmony export */   connection: () => (/* binding */ connection),\n/* harmony export */   delegationsIncludeSessionProof: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.delegationsIncludeSessionProof),\n/* harmony export */   email: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_11__.email),\n/* harmony export */   fromEmail: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_11__.fromEmail),\n/* harmony export */   fromString: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_11__.fromString),\n/* harmony export */   getAccountPlan: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.getAccountPlan),\n/* harmony export */   importAuthorization: () => (/* binding */ importAuthorization),\n/* harmony export */   isExpired: () => (/* reexport safe */ _delegations_js__WEBPACK_IMPORTED_MODULE_8__.isExpired),\n/* harmony export */   isTooEarly: () => (/* reexport safe */ _delegations_js__WEBPACK_IMPORTED_MODULE_8__.isTooEarly),\n/* harmony export */   matchResource: () => (/* reexport safe */ _delegations_js__WEBPACK_IMPORTED_MODULE_8__.matchResource),\n/* harmony export */   pollAccessClaimUntil: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.pollAccessClaimUntil),\n/* harmony export */   requestAccess: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.requestAccess),\n/* harmony export */   toEmail: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_11__.toEmail),\n/* harmony export */   validate: () => (/* reexport safe */ _delegations_js__WEBPACK_IMPORTED_MODULE_8__.validate),\n/* harmony export */   waitForAuthorizationByPolling: () => (/* reexport safe */ _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__.waitForAuthorizationByPolling)\n/* harmony export */ });\n/* harmony import */ var _ucanto_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/client */ \"(ssr)/./node_modules/@ucanto/client/src/lib.js\");\n/* harmony import */ var _ucanto_transport_car__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/transport/car */ \"(ssr)/./node_modules/@ucanto/transport/src/car.js\");\n/* harmony import */ var _ucanto_transport_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/transport/http */ \"(ssr)/./node_modules/@ucanto/transport/src/http.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_space__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @web3-storage/capabilities/space */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/space.js\");\n/* harmony import */ var _web3_storage_capabilities_ucan__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @web3-storage/capabilities/ucan */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/ucan.js\");\n/* harmony import */ var _access_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./access.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/access.js\");\n/* harmony import */ var _space_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./space.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/space.js\");\n/* harmony import */ var _delegations_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./delegations.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/delegations.js\");\n/* harmony import */ var _agent_data_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./agent-data.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent-data.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\");\n/* harmony import */ var _agent_use_cases_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./agent-use-cases.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent-use-cases.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst HOST = 'https://up.web3.storage';\nconst PRINCIPAL = _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.DID.parse('did:web:web3.storage');\n/**\n * Keeps track of AgentData for all Agents constructed.\n * Used by addSpacesFromDelegations - so it can only accept Agent as param, but\n * still mutate corresponding AgentData\n *\n * @deprecated - remove this when deprecated addSpacesFromDelegations is removed\n */\n/** @type {WeakMap<Agent<Record<string, any>>, AgentData>} */\nconst agentToData = new WeakMap();\n/**\n * @typedef {API.Service} Service\n * @typedef {API.Receipt<any, any>} Receipt\n */\n/**\n * Creates a Ucanto connection for the w3access API\n *\n * Usage:\n *\n * ```js\n * import { connection } from '@web3-storage/access/agent'\n * ```\n *\n * @template {API.DID} T - DID method\n * @template {Record<string, any>} [S=Service]\n * @param {object} [options]\n * @param {API.Principal<T>} [options.principal] - w3access API Principal\n * @param {URL} [options.url] - w3access API URL\n * @param {API.Transport.Channel<S>} [options.channel] - Ucanto channel to use\n * @param {typeof fetch} [options.fetch] - Fetch implementation to use\n * @returns {API.ConnectionView<S>}\n */\nfunction connection(options = {}) {\n    return _ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect({\n        id: options.principal ?? PRINCIPAL,\n        codec: _ucanto_transport_car__WEBPACK_IMPORTED_MODULE_1__.outbound,\n        channel: options.channel ??\n            _ucanto_transport_http__WEBPACK_IMPORTED_MODULE_2__.open({\n                url: options.url ?? new URL(HOST),\n                method: 'POST',\n                fetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n            }),\n    });\n}\n/**\n * Agent\n *\n * Usage:\n *\n * ```js\n * import { Agent } from '@web3-storage/access/agent'\n * ```\n *\n * @template {Record<string, any>} [S=Service]\n */\nclass Agent {\n    /** @type {import('./agent-data.js').AgentData} */\n    #data;\n    /**\n     * @param {import('./agent-data.js').AgentData} data - Agent data\n     * @param {import('./types.js').AgentOptions<S>} [options]\n     */\n    constructor(data, options = {}) {\n        /** @type { Client.Channel<S> & { url?: URL } | undefined } */\n        const channel = options.connection?.channel;\n        this.url = options.url ?? channel?.url ?? new URL(HOST);\n        this.connection =\n            options.connection ??\n                connection({\n                    principal: options.servicePrincipal,\n                    url: this.url,\n                });\n        this.#data = data;\n        agentToData.set(this, this.#data);\n    }\n    /**\n     * Create a new Agent instance, optionally with the passed initialization data.\n     *\n     * @template {Record<string, any>} [R=Service]\n     * @param {Partial<import('./types.js').AgentDataModel>} [init]\n     * @param {import('./types.js').AgentOptions<R> & import('./types.js').AgentDataOptions} [options]\n     */\n    static async create(init, options = {}) {\n        const data = await _agent_data_js__WEBPACK_IMPORTED_MODULE_9__.AgentData.create(init, options);\n        return new Agent(data, options);\n    }\n    /**\n     * Instantiate an Agent from pre-exported agent data.\n     *\n     * @template {Record<string, any>} [R=Service]\n     * @param {import('./types.js').AgentDataExport} raw\n     * @param {import('./types.js').AgentOptions<R> & import('./types.js').AgentDataOptions} [options]\n     */\n    static from(raw, options = {}) {\n        const data = _agent_data_js__WEBPACK_IMPORTED_MODULE_9__.AgentData.fromExport(raw, options);\n        return new Agent(data, options);\n    }\n    get issuer() {\n        return this.#data.principal;\n    }\n    get meta() {\n        return this.#data.meta;\n    }\n    get spaces() {\n        return this.#data.spaces;\n    }\n    did() {\n        return this.#data.principal.did();\n    }\n    /**\n     * Add a proof to the agent store.\n     *\n     * @param {API.Delegation} delegation\n     */\n    async addProof(delegation) {\n        return await this.addProofs([delegation]);\n    }\n    /**\n     * Adds set of proofs to the agent store.\n     *\n     * @param {Iterable<API.Delegation>} delegations\n     */\n    async addProofs(delegations) {\n        for (const proof of delegations) {\n            await this.#data.addDelegation(proof, { audience: this.meta });\n        }\n        await this.removeExpiredDelegations();\n        return {};\n    }\n    /**\n     * Query the delegations store for all the delegations matching the capabilities provided.\n     *\n     * @param {API.CapabilityQuery[]} [caps]\n     */\n    #delegations(caps) {\n        const _caps = new Set(caps);\n        /** @type {Array<{ delegation: API.Delegation, meta: API.DelegationMeta }>} */\n        const values = [];\n        for (const [, value] of this.#data.delegations) {\n            // check expiration\n            if (!(0,_delegations_js__WEBPACK_IMPORTED_MODULE_8__.isExpired)(value.delegation) && // check if delegation can be used\n                !(0,_delegations_js__WEBPACK_IMPORTED_MODULE_8__.isTooEarly)(value.delegation)) {\n                // check if we need to filter for caps\n                if (Array.isArray(caps) && caps.length > 0) {\n                    for (const cap of _caps) {\n                        if ((0,_delegations_js__WEBPACK_IMPORTED_MODULE_8__.canDelegateCapability)(value.delegation, cap)) {\n                            values.push(value);\n                        }\n                    }\n                }\n                else {\n                    values.push(value);\n                }\n            }\n        }\n        return values;\n    }\n    /**\n     * Clean up any expired delegations.\n     */\n    async removeExpiredDelegations() {\n        for (const [, value] of this.#data.delegations) {\n            if ((0,_delegations_js__WEBPACK_IMPORTED_MODULE_8__.isExpired)(value.delegation)) {\n                await this.#data.removeDelegation(value.delegation.cid);\n            }\n        }\n    }\n    /**\n     * Revoke a delegation by CID.\n     *\n     * If the delegation was issued by this agent (and therefore is stored in the\n     * delegation store) you can just pass the CID. If not, or if the current agent's\n     * delegation store no longer contains the delegation, you MUST pass a chain of\n     * proofs that proves your authority to revoke this delegation as `options.proofs`.\n     *\n     * @param {API.UCANLink} delegationCID\n     * @param {object} [options]\n     * @param {API.Delegation[]} [options.proofs]\n     */\n    async revoke(delegationCID, options = {}) {\n        const additionalProofs = options.proofs ?? [];\n        // look for the identified delegation in the delegation store and the passed proofs\n        const delegation = [...this.delegations(), ...additionalProofs].find((delegation) => delegation.cid.equals(delegationCID));\n        if (!delegation) {\n            return {\n                error: new Error(`could not find delegation ${delegationCID.toString()} - please include the delegation in options.proofs`),\n            };\n        }\n        const receipt = await this.invokeAndExecute(_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_10__.UCAN.revoke, {\n            // per https://github.com/storacha/w3up/blob/main/packages/capabilities/src/ucan.js#L38C6-L38C6 the resource here should be\n            // the current issuer - using the space DID here works for simple cases but falls apart when a delegee tries to revoke a delegation\n            // they have re-delegated, since they don't have \"ucan/revoke\" capabilities on the space\n            with: this.issuer.did(),\n            nb: {\n                ucan: delegation.cid,\n            },\n            proofs: [delegation, ...additionalProofs],\n        });\n        return receipt.out;\n    }\n    /**\n     * Get all the proofs matching the capabilities.\n     *\n     * Proofs are delegations with an audience matching agent DID, or with an\n     * audience matching the session DID.\n     *\n     * Proof of session will also be included in the returned proofs if any\n     * proofs matching the passed capabilities require it.\n     *\n     * @param {API.CapabilityQuery[]} [caps] - Capabilities to filter by. Empty or undefined caps with return all the proofs.\n     * @param {object} [options]\n     * @param {API.DID} [options.sessionProofIssuer] - only include session proofs for this issuer\n     */\n    proofs(caps, options) {\n        /** @type {Map<string, API.Delegation<API.Capabilities>>} */\n        const authorizations = new Map();\n        for (const { delegation } of this.#delegations(caps)) {\n            if (delegation.audience.did() === this.issuer.did()) {\n                authorizations.set(delegation.cid.toString(), delegation);\n            }\n        }\n        // now let's add any session proofs that refer to those authorizations\n        const sessions = (0,_agent_data_js__WEBPACK_IMPORTED_MODULE_9__.getSessionProofs)(this.#data);\n        for (const proof of [...authorizations.values()]) {\n            const proofsByIssuer = sessions[proof.asCID.toString()] ?? {};\n            const sessionProofs = options?.sessionProofIssuer\n                ? proofsByIssuer[options.sessionProofIssuer] ?? []\n                : Object.values(proofsByIssuer).flat();\n            for (const sessionProof of sessionProofs) {\n                authorizations.set(sessionProof.cid.toString(), sessionProof);\n            }\n        }\n        return [...authorizations.values()];\n    }\n    /**\n     * Get delegations created by the agent for others.\n     *\n     * @param {API.CapabilityQuery[]} [caps] - Capabilities to filter by. Empty or undefined caps with return all the delegations.\n     */\n    delegations(caps) {\n        const arr = [];\n        for (const { delegation } of this.delegationsWithMeta(caps)) {\n            arr.push(delegation);\n        }\n        return arr;\n    }\n    /**\n     * Get delegations created by the agent for others and their metadata.\n     *\n     * @param {API.CapabilityQuery[]} [caps] - Capabilities to filter by. Empty or undefined caps with return all the delegations.\n     */\n    delegationsWithMeta(caps) {\n        const arr = [];\n        for (const value of this.#delegations(caps)) {\n            const { delegation } = value;\n            const isSession = delegation.capabilities.some((c) => c.can === _web3_storage_capabilities_ucan__WEBPACK_IMPORTED_MODULE_5__.attest.can);\n            if (!isSession && delegation.audience.did() !== this.issuer.did()) {\n                arr.push(value);\n            }\n        }\n        return arr;\n    }\n    /**\n     * Creates a space signer and a delegation to the agent\n     *\n     * @param {string} name\n     */\n    async createSpace(name) {\n        return await _space_js__WEBPACK_IMPORTED_MODULE_7__.generate({ name, agent: this });\n    }\n    /**\n     * @param {string} secret\n     * @param {object} options\n     * @param {string} options.name\n     */\n    async recoverSpace(secret, { name }) {\n        return await _space_js__WEBPACK_IMPORTED_MODULE_7__.fromMnemonic(secret, { name, agent: this });\n    }\n    /**\n     * Import a space from a delegation.\n     *\n     * @param {API.Delegation} delegation\n     * @param {object} options\n     * @param {string} [options.name]\n     */\n    async importSpaceFromDelegation(delegation, { name = '' } = {}) {\n        const space = name === ''\n            ? _space_js__WEBPACK_IMPORTED_MODULE_7__.fromDelegation(delegation)\n            : _space_js__WEBPACK_IMPORTED_MODULE_7__.fromDelegation(delegation).withName(name);\n        this.#data.spaces.set(space.did(), { ...space.meta, name: space.name });\n        await this.addProof(space.delegation);\n        // if we do not have a current space, make this one current\n        if (!this.currentSpace()) {\n            await this.setCurrentSpace(space.did());\n        }\n        return space;\n    }\n    /**\n     * Sets the current selected space\n     *\n     * Other methods will default to use the current space if no resource is defined\n     *\n     * @param {API.SpaceDID} space\n     */\n    async setCurrentSpace(space) {\n        if (!this.#data.spaces.has(space)) {\n            throw new Error(`Agent has no proofs for ${space}.`);\n        }\n        await this.#data.setCurrentSpace(space);\n        return space;\n    }\n    /**\n     * Get current space DID\n     */\n    currentSpace() {\n        return this.#data.currentSpace;\n    }\n    /**\n     * Get current space DID, proofs and abilities\n     */\n    currentSpaceWithMeta() {\n        if (!this.#data.currentSpace) {\n            return;\n        }\n        const proofs = this.proofs([\n            {\n                can: 'space/info',\n                with: this.#data.currentSpace,\n            },\n        ]);\n        const caps = new Set();\n        for (const p of proofs) {\n            for (const cap of p.capabilities) {\n                caps.add(cap.can);\n            }\n        }\n        return {\n            did: this.#data.currentSpace,\n            proofs,\n            capabilities: [...caps],\n            meta: this.#data.spaces.get(this.#data.currentSpace),\n        };\n    }\n    /**\n     *\n     * @param {import('./types.js').DelegationOptions} options\n     */\n    async delegate(options) {\n        const space = this.currentSpaceWithMeta();\n        if (!space) {\n            throw new Error('no space selected.');\n        }\n        const caps = /** @type {API.Capabilities} */ (options.abilities.map((a) => {\n            return {\n                with: space.did,\n                can: a,\n            };\n        }));\n        // Verify agent can provide proofs for each requested capability\n        for (const cap of caps) {\n            if (!this.proofs([cap]).length) {\n                throw new Error(`cannot delegate capability ${cap.can} with ${cap.with}`);\n            }\n        }\n        const delegation = await (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_3__.delegate)({\n            issuer: this.issuer,\n            capabilities: caps,\n            proofs: this.proofs(caps),\n            facts: [{ space: space.meta ?? {} }],\n            ...options,\n        });\n        await this.#data.addDelegation(delegation, {\n            audience: options.audienceMeta,\n        });\n        await this.removeExpiredDelegations();\n        return delegation;\n    }\n    /**\n     * Invoke and execute the given capability on the Access service connection\n     *\n     * ```js\n     *\n     * await agent.invokeAndExecute(Space.recover, {\n     *   nb: {\n     *     identity: 'mailto: email@gmail.com',\n     *   },\n     * })\n     *\n     * // sugar for\n     * const recoverInvocation = await agent.invoke(Space.recover, {\n     *   nb: {\n     *     identity: 'mailto: email@gmail.com',\n     *   },\n     * })\n     *\n     * await recoverInvocation.execute(agent.connection)\n     * ```\n     *\n     * @template {API.Ability} A\n     * @template {API.URI} R\n     * @template {API.Caveats} C\n     * @param {API.TheCapabilityParser<API.CapabilityMatch<A, R, C>>} cap\n     * @param {API.InvokeOptions<A, R, API.TheCapabilityParser<API.CapabilityMatch<A, R, C>>>} options\n     * @returns {Promise<API.InferReceipt<API.Capability<A, R, C>, S>>}\n     */\n    async invokeAndExecute(cap, options) {\n        const inv = await this.invoke(cap, options);\n        const out = inv.execute(/** @type {*} */ (this.connection));\n        return /** @type {*} */ (out);\n    }\n    /**\n     * Execute invocations on the agent's connection\n     *\n     * @example\n     * ```js\n     * const i1 = await agent.invoke(Space.info, {})\n     * const i2 = await agent.invoke(Space.recover, {\n     *   nb: {\n     *     identity: 'mailto:hello@web3.storage',\n     *   },\n     * })\n     *\n     * const results = await agent.execute2(i1, i2)\n     *\n     * ```\n     * @template {API.Capability} C\n     * @template {API.Tuple<API.ServiceInvocation<C, S>>} I\n     * @param {I} invocations\n     */\n    execute(...invocations) {\n        return this.connection.execute(...invocations);\n    }\n    /**\n     * Creates an invocation for the given capability with Agent's proofs, service, issuer and space.\n     *\n     * @example\n     * ```js\n     * const recoverInvocation = await agent.invoke(Space.recover, {\n     *   nb: {\n     *     identity: 'mailto: email@gmail.com',\n     *   },\n     * })\n     *\n     * await recoverInvocation.execute(agent.connection)\n     * // or\n     * await agent.execute(recoverInvocation)\n     * ```\n     *\n     * @template {API.Ability} A\n     * @template {API.URI} R\n     * @template {API.TheCapabilityParser<API.CapabilityMatch<A, R, C>>} CAP\n     * @template {API.Caveats} [C={}]\n     * @param {CAP} cap\n     * @param {import('./types.js').InvokeOptions<A, R, CAP>} options\n     */\n    async invoke(cap, options) {\n        const audience = options.audience || this.connection.id;\n        const space = options.with || this.currentSpace();\n        if (!space) {\n            throw new Error('No space or resource selected, you need pass a resource.');\n        }\n        const proofs = [\n            ...(options.proofs || []),\n            ...this.proofs([\n                {\n                    with: space,\n                    can: cap.can,\n                },\n            ], { sessionProofIssuer: audience.did() }),\n        ];\n        if (proofs.length === 0 && options.with !== this.did()) {\n            throw new Error(`no proofs available for resource ${space} and ability ${cap.can}`);\n        }\n        const inv = (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_3__.invoke)({\n            ...options,\n            audience,\n            // @ts-ignore\n            capability: cap.create({\n                with: space,\n                nb: options.nb,\n            }),\n            issuer: this.issuer,\n            proofs: [...proofs],\n            nonce: options.nonce,\n        });\n        return /** @type {API.IssuedInvocationView<API.InferInvokedCapability<CAP>>} */ (inv);\n    }\n    /**\n     * Get Space information from Access service\n     *\n     * @param {API.URI<\"did:\">} [space]\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async getSpaceInfo(space, options) {\n        const _space = space || this.currentSpace();\n        if (!_space) {\n            throw new Error('No space selected, you need pass a resource.');\n        }\n        const inv = await this.invokeAndExecute(_web3_storage_capabilities_space__WEBPACK_IMPORTED_MODULE_4__.info, {\n            ...options,\n            with: _space,\n        });\n        if (inv.out.error) {\n            throw inv.out.error;\n        }\n        return /** @type {import('./types.js').SpaceInfoResult} */ (inv.out.ok);\n    }\n}\n/**\n * Given a list of delegations, add to agent data spaces list.\n *\n * @deprecated - trying to remove explicit space tracking from Agent/AgentData\n * in favor of functions that derive the space set from access.delegations\n *\n * @template {Record<string, any>} [S=Service]\n * @param {Agent<S>} agent\n * @param {API.Delegation[]} delegations\n */\nasync function addSpacesFromDelegations(agent, delegations) {\n    const data = agentToData.get(agent);\n    if (!data) {\n        throw Object.assign(new Error(`cannot determine AgentData for Agent`), {\n            agent: agent,\n        });\n    }\n    // spaces we find along the way.\n    const spaces = new Map();\n    // only consider ucans with this agent as the audience\n    const ours = delegations.filter((x) => x.audience.did() === agent.did());\n    // space names are stored as facts in proofs in the special `ucan:*` delegation from email to agent.\n    const ucanStars = ours.filter((x) => x.capabilities[0].can === '*' && x.capabilities[0].with === 'ucan:*');\n    for (const delegation of ucanStars) {\n        for (const proof of delegation.proofs) {\n            if (!(0,_ucanto_core__WEBPACK_IMPORTED_MODULE_3__.isDelegation)(proof) ||\n                !proof.capabilities[0].with.startsWith('did:key')) {\n                continue;\n            }\n            const space = _space_js__WEBPACK_IMPORTED_MODULE_7__.fromDelegation(proof);\n            spaces.set(space.did(), space.meta);\n        }\n    }\n    // Find any other spaces the user may have access to\n    for (const delegation of ours) {\n        // TODO: we need a more robust way to determine which spaces a user has access to\n        // it may or may not involve look at delegations\n        const allows = _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Delegation.allows(delegation);\n        for (const [resource, value] of Object.entries(allows)) {\n            // If we discovered a delegation to any DID, we add it to the spaces list.\n            if (resource.startsWith('did:key') && Object.keys(value).length > 0) {\n                if (!spaces.has(resource)) {\n                    spaces.set(resource, {});\n                }\n            }\n        }\n    }\n    for (const [did, meta] of spaces) {\n        await data.addSpace(did, meta);\n    }\n}\n/**\n * Stores given delegations in the agent's data store and adds discovered spaces\n * to the agent's space list.\n *\n * @param {Agent} agent\n * @param {object} authorization\n * @param {API.Delegation[]} authorization.proofs\n * @returns {Promise<API.Result<API.Unit, Error>>}\n */\nconst importAuthorization = async (agent, { proofs }) => {\n    try {\n        await agent.addProofs(proofs);\n        await addSpacesFromDelegations(agent, proofs);\n        return { ok: {} };\n    }\n    catch (error) {\n        return /** @type {{error:Error}} */ ({ error });\n    }\n};\n//# sourceMappingURL=agent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/agent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/delegations.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/delegations.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canDelegateCapability: () => (/* binding */ canDelegateCapability),\n/* harmony export */   isExpired: () => (/* binding */ isExpired),\n/* harmony export */   isTooEarly: () => (/* binding */ isTooEarly),\n/* harmony export */   matchResource: () => (/* binding */ matchResource),\n/* harmony export */   validate: () => (/* binding */ validate)\n/* harmony export */ });\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\n/**\n *\n * @param {API.Delegation} delegation\n */\nfunction isExpired(delegation) {\n    if (delegation.expiration === undefined ||\n        delegation.expiration <= Math.floor(Date.now() / 1000)) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @param {API.Delegation} delegation\n */\nfunction isTooEarly(delegation) {\n    if (!delegation.notBefore) {\n        return false;\n    }\n    return delegation.notBefore > Math.floor(Date.now() / 1000);\n}\n/**\n *\n * @param {API.Delegation} delegation\n * @param {object} [opts]\n * @param {API.Principal} [opts.checkAudience]\n * @param {boolean} [opts.checkIsExpired]\n * @param {boolean} [opts.checkIsTooEarly]\n */\nfunction validate(delegation, opts) {\n    const { checkAudience, checkIsExpired = true, checkIsTooEarly = true, } = opts ?? {};\n    if (checkAudience && delegation.audience.did() !== checkAudience.did()) {\n        throw new Error(`Delegation audience ${delegation.audience.did()} does not match required DID ${checkAudience.did()}`);\n    }\n    if (checkIsExpired && isExpired(delegation)) {\n        throw new Error(`Delegation expired.`);\n    }\n    if (checkIsTooEarly && isTooEarly(delegation)) {\n        throw new Error(`Delegation is not active yet (too early).`);\n    }\n}\n/**\n * Returns true if the delegation includes capability been queried.\n *\n * @param {API.Delegation} delegation\n * @param {API.CapabilityQuery} capability\n */\nfunction canDelegateCapability(delegation, capability) {\n    const allowsCapabilities = _ucanto_core__WEBPACK_IMPORTED_MODULE_0__.Delegation.allows(delegation);\n    for (const [uri, abilities] of Object.entries(allowsCapabilities)) {\n        if (matchResource(/** @type {API.Resource} */ (uri), capability.with)) {\n            const cans = /** @type {API.Ability[]} */ (Object.keys(abilities));\n            for (const can of cans) {\n                if ((0,_web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_2__.canDelegateAbility)(can, capability.can)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n/**\n * Returns true if given `resource` matches the resource query per UCAN\n * specification.\n *\n * @param {API.Resource} resource\n * @param {API.ResourceQuery} query\n */\nconst matchResource = (resource, query) => {\n    if (query === 'ucan:*') {\n        return true;\n    }\n    else if (typeof query === 'string') {\n        return resource === query;\n    }\n    else {\n        return query.test(resource);\n    }\n};\n//# sourceMappingURL=delegations.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvZGVsZWdhdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBdUM7QUFDTDtBQUNvQztBQUN0RTtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEI7QUFDTztBQUNQLFlBQVksZ0VBQWdFO0FBQzVFO0FBQ0EsK0NBQStDLDJCQUEyQiw4QkFBOEIsb0JBQW9CO0FBQzVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLHFCQUFxQjtBQUNoQztBQUNPO0FBQ1AsK0JBQStCLDJEQUF3QjtBQUN2RDtBQUNBLHFDQUFxQyxjQUFjO0FBQ25ELG9DQUFvQyxlQUFlO0FBQ25EO0FBQ0Esb0JBQW9CLG9GQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsbUJBQW1CO0FBQzlCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvZGVsZWdhdGlvbnMuanM/YzllZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB1Y2FudG8gZnJvbSAnQHVjYW50by9jb3JlJztcbmltcG9ydCAqIGFzIEFQSSBmcm9tICcuL3R5cGVzLmpzJztcbmltcG9ydCB7IGNhbkRlbGVnYXRlQWJpbGl0eSB9IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3V0aWxzJztcbi8qKlxuICpcbiAqIEBwYXJhbSB7QVBJLkRlbGVnYXRpb259IGRlbGVnYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRXhwaXJlZChkZWxlZ2F0aW9uKSB7XG4gICAgaWYgKGRlbGVnYXRpb24uZXhwaXJhdGlvbiA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgIGRlbGVnYXRpb24uZXhwaXJhdGlvbiA8PSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKlxuICogQHBhcmFtIHtBUEkuRGVsZWdhdGlvbn0gZGVsZWdhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNUb29FYXJseShkZWxlZ2F0aW9uKSB7XG4gICAgaWYgKCFkZWxlZ2F0aW9uLm5vdEJlZm9yZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBkZWxlZ2F0aW9uLm5vdEJlZm9yZSA+IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xufVxuLyoqXG4gKlxuICogQHBhcmFtIHtBUEkuRGVsZWdhdGlvbn0gZGVsZWdhdGlvblxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRzXVxuICogQHBhcmFtIHtBUEkuUHJpbmNpcGFsfSBbb3B0cy5jaGVja0F1ZGllbmNlXVxuICogQHBhcmFtIHtib29sZWFufSBbb3B0cy5jaGVja0lzRXhwaXJlZF1cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdHMuY2hlY2tJc1Rvb0Vhcmx5XVxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGUoZGVsZWdhdGlvbiwgb3B0cykge1xuICAgIGNvbnN0IHsgY2hlY2tBdWRpZW5jZSwgY2hlY2tJc0V4cGlyZWQgPSB0cnVlLCBjaGVja0lzVG9vRWFybHkgPSB0cnVlLCB9ID0gb3B0cyA/PyB7fTtcbiAgICBpZiAoY2hlY2tBdWRpZW5jZSAmJiBkZWxlZ2F0aW9uLmF1ZGllbmNlLmRpZCgpICE9PSBjaGVja0F1ZGllbmNlLmRpZCgpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRGVsZWdhdGlvbiBhdWRpZW5jZSAke2RlbGVnYXRpb24uYXVkaWVuY2UuZGlkKCl9IGRvZXMgbm90IG1hdGNoIHJlcXVpcmVkIERJRCAke2NoZWNrQXVkaWVuY2UuZGlkKCl9YCk7XG4gICAgfVxuICAgIGlmIChjaGVja0lzRXhwaXJlZCAmJiBpc0V4cGlyZWQoZGVsZWdhdGlvbikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEZWxlZ2F0aW9uIGV4cGlyZWQuYCk7XG4gICAgfVxuICAgIGlmIChjaGVja0lzVG9vRWFybHkgJiYgaXNUb29FYXJseShkZWxlZ2F0aW9uKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYERlbGVnYXRpb24gaXMgbm90IGFjdGl2ZSB5ZXQgKHRvbyBlYXJseSkuYCk7XG4gICAgfVxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIGRlbGVnYXRpb24gaW5jbHVkZXMgY2FwYWJpbGl0eSBiZWVuIHF1ZXJpZWQuXG4gKlxuICogQHBhcmFtIHtBUEkuRGVsZWdhdGlvbn0gZGVsZWdhdGlvblxuICogQHBhcmFtIHtBUEkuQ2FwYWJpbGl0eVF1ZXJ5fSBjYXBhYmlsaXR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjYW5EZWxlZ2F0ZUNhcGFiaWxpdHkoZGVsZWdhdGlvbiwgY2FwYWJpbGl0eSkge1xuICAgIGNvbnN0IGFsbG93c0NhcGFiaWxpdGllcyA9IHVjYW50by5EZWxlZ2F0aW9uLmFsbG93cyhkZWxlZ2F0aW9uKTtcbiAgICBmb3IgKGNvbnN0IFt1cmksIGFiaWxpdGllc10gb2YgT2JqZWN0LmVudHJpZXMoYWxsb3dzQ2FwYWJpbGl0aWVzKSkge1xuICAgICAgICBpZiAobWF0Y2hSZXNvdXJjZSgvKiogQHR5cGUge0FQSS5SZXNvdXJjZX0gKi8gKHVyaSksIGNhcGFiaWxpdHkud2l0aCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGNhbnMgPSAvKiogQHR5cGUge0FQSS5BYmlsaXR5W119ICovIChPYmplY3Qua2V5cyhhYmlsaXRpZXMpKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2FuIG9mIGNhbnMpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2FuRGVsZWdhdGVBYmlsaXR5KGNhbiwgY2FwYWJpbGl0eS5jYW4pKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBnaXZlbiBgcmVzb3VyY2VgIG1hdGNoZXMgdGhlIHJlc291cmNlIHF1ZXJ5IHBlciBVQ0FOXG4gKiBzcGVjaWZpY2F0aW9uLlxuICpcbiAqIEBwYXJhbSB7QVBJLlJlc291cmNlfSByZXNvdXJjZVxuICogQHBhcmFtIHtBUEkuUmVzb3VyY2VRdWVyeX0gcXVlcnlcbiAqL1xuZXhwb3J0IGNvbnN0IG1hdGNoUmVzb3VyY2UgPSAocmVzb3VyY2UsIHF1ZXJ5KSA9PiB7XG4gICAgaWYgKHF1ZXJ5ID09PSAndWNhbjoqJykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHF1ZXJ5ID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gcmVzb3VyY2UgPT09IHF1ZXJ5O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5LnRlc3QocmVzb3VyY2UpO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxlZ2F0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/delegations.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/drivers/conf.js":
/*!********************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/drivers/conf.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfDriver: () => (/* binding */ ConfDriver)\n/* harmony export */ });\n/* harmony import */ var conf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! conf */ \"(ssr)/./node_modules/conf/dist/source/index.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/json.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/utils/json.js\");\n\n\n/**\n * @template T\n * @typedef {import('./types.js').Driver<T>} Driver\n */\n/**\n * Driver implementation with \"[conf](https://github.com/sindresorhus/conf)\"\n *\n * Usage:\n *\n * ```js\n * import { ConfDriver } from '@web3-storage/access/drivers/conf'\n * ```\n *\n * @template {Record<string, any>} T\n * @implements {Driver<T>}\n */\nclass ConfDriver {\n    /**\n     * @type {Conf<T>}\n     */\n    #config;\n    /**\n     * @param {{ profile: string }} opts\n     */\n    constructor(opts) {\n        this.#config = new conf__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n            projectName: 'w3access',\n            projectSuffix: '',\n            configName: opts.profile,\n            serialize: (v) => _utils_json_js__WEBPACK_IMPORTED_MODULE_0__.stringify(v),\n            deserialize: (v) => _utils_json_js__WEBPACK_IMPORTED_MODULE_0__.parse(v),\n        });\n        this.path = this.#config.path;\n    }\n    async open() { }\n    async close() { }\n    async reset() {\n        this.#config.clear();\n    }\n    /** @param {T} data */\n    async save(data) {\n        if (typeof data === 'object') {\n            data = { ...data };\n            for (const [k, v] of Object.entries(data)) {\n                if (v === undefined) {\n                    delete data[k];\n                }\n            }\n        }\n        this.#config.set(data);\n    }\n    /** @returns {Promise<T|undefined>} */\n    async load() {\n        const data = this.#config.store ?? {};\n        if (Object.keys(data).length === 0)\n            return;\n        return data;\n    }\n}\n//# sourceMappingURL=conf.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvZHJpdmVycy9jb25mLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3QjtBQUNpQjtBQUN6QztBQUNBO0FBQ0EsYUFBYSxnQ0FBZ0M7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBLGNBQWMscUJBQXFCO0FBQ25DLGdCQUFnQjtBQUNoQjtBQUNPO0FBQ1A7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBO0FBQ0EsMkJBQTJCLDRDQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixxREFBYztBQUM1QyxnQ0FBZ0MsaURBQVU7QUFDMUMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLEdBQUc7QUFDbkI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvZHJpdmVycy9jb25mLmpzPzQxMDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbmYgZnJvbSAnY29uZic7XG5pbXBvcnQgKiBhcyBKU09OIGZyb20gJy4uL3V0aWxzL2pzb24uanMnO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi90eXBlcy5qcycpLkRyaXZlcjxUPn0gRHJpdmVyXG4gKi9cbi8qKlxuICogRHJpdmVyIGltcGxlbWVudGF0aW9uIHdpdGggXCJbY29uZl0oaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9jb25mKVwiXG4gKlxuICogVXNhZ2U6XG4gKlxuICogYGBganNcbiAqIGltcG9ydCB7IENvbmZEcml2ZXIgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2FjY2Vzcy9kcml2ZXJzL2NvbmYnXG4gKiBgYGBcbiAqXG4gKiBAdGVtcGxhdGUge1JlY29yZDxzdHJpbmcsIGFueT59IFRcbiAqIEBpbXBsZW1lbnRzIHtEcml2ZXI8VD59XG4gKi9cbmV4cG9ydCBjbGFzcyBDb25mRHJpdmVyIHtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7Q29uZjxUPn1cbiAgICAgKi9cbiAgICAjY29uZmlnO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7eyBwcm9maWxlOiBzdHJpbmcgfX0gb3B0c1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICAgICAgdGhpcy4jY29uZmlnID0gbmV3IENvbmYoe1xuICAgICAgICAgICAgcHJvamVjdE5hbWU6ICd3M2FjY2VzcycsXG4gICAgICAgICAgICBwcm9qZWN0U3VmZml4OiAnJyxcbiAgICAgICAgICAgIGNvbmZpZ05hbWU6IG9wdHMucHJvZmlsZSxcbiAgICAgICAgICAgIHNlcmlhbGl6ZTogKHYpID0+IEpTT04uc3RyaW5naWZ5KHYpLFxuICAgICAgICAgICAgZGVzZXJpYWxpemU6ICh2KSA9PiBKU09OLnBhcnNlKHYpLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wYXRoID0gdGhpcy4jY29uZmlnLnBhdGg7XG4gICAgfVxuICAgIGFzeW5jIG9wZW4oKSB7IH1cbiAgICBhc3luYyBjbG9zZSgpIHsgfVxuICAgIGFzeW5jIHJlc2V0KCkge1xuICAgICAgICB0aGlzLiNjb25maWcuY2xlYXIoKTtcbiAgICB9XG4gICAgLyoqIEBwYXJhbSB7VH0gZGF0YSAqL1xuICAgIGFzeW5jIHNhdmUoZGF0YSkge1xuICAgICAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBkYXRhID0geyAuLi5kYXRhIH07XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhkYXRhKSkge1xuICAgICAgICAgICAgICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGRhdGFba107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuI2NvbmZpZy5zZXQoZGF0YSk7XG4gICAgfVxuICAgIC8qKiBAcmV0dXJucyB7UHJvbWlzZTxUfHVuZGVmaW5lZD59ICovXG4gICAgYXN5bmMgbG9hZCgpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuI2NvbmZpZy5zdG9yZSA/PyB7fTtcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKGRhdGEpLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/drivers/conf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/encoding.js":
/*!****************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/encoding.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytesToDelegations: () => (/* binding */ bytesToDelegations),\n/* harmony export */   delegationToString: () => (/* binding */ delegationToString),\n/* harmony export */   delegationsToBytes: () => (/* binding */ delegationsToBytes),\n/* harmony export */   delegationsToString: () => (/* binding */ delegationsToString),\n/* harmony export */   expirationToDate: () => (/* binding */ expirationToDate),\n/* harmony export */   stringToDelegation: () => (/* binding */ stringToDelegation),\n/* harmony export */   stringToDelegations: () => (/* binding */ stringToDelegations)\n/* harmony export */ });\n/* harmony import */ var _ipld_car_buffer_reader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/car/buffer-reader */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-reader.js\");\n/* harmony import */ var _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/car/buffer-writer */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-writer.js\");\n/* harmony import */ var _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/core/delegation */ \"(ssr)/./node_modules/@ucanto/core/src/delegation.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/index.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/**\n * Encoding utilities\n *\n * It is recommended that you import directly with:\n * ```js\n * import * as Encoding from '@web3-storage/access/encoding'\n *\n * // or\n *\n * import { encodeDelegations } from '@web3-storage/access/encoding'\n * ```\n *\n * @module\n */\n\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n/**\n * Encode delegations as bytes\n *\n * @param {Types.Delegation[]} delegations\n */\nfunction delegationsToBytes(delegations) {\n    if (!Array.isArray(delegations) || delegations.length === 0) {\n        throw new Error('Delegations required to be an non empty array.');\n    }\n    const roots = delegations.map((d) => /** @type {CarBufferWriter.CID} */ (d.root.cid));\n    const cids = new Set();\n    /** @type {CarBufferWriter.Block[]} */\n    const blocks = [];\n    let byteLength = 0;\n    for (const delegation of delegations) {\n        for (const block of delegation.export()) {\n            const cid = block.cid.toV1().toString();\n            if (!cids.has(cid)) {\n                byteLength += _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_1__.blockLength(\n                /** @type {CarBufferWriter.Block} */ (block));\n                blocks.push(/** @type {CarBufferWriter.Block} */ (block));\n                cids.add(cid);\n            }\n        }\n    }\n    const headerLength = _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_1__.estimateHeaderLength(roots.length);\n    const writer = _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_1__.createWriter(new ArrayBuffer(headerLength + byteLength), { roots });\n    for (const block of blocks) {\n        writer.write(block);\n    }\n    return writer.close();\n}\n/**\n * Decode bytes into Delegations\n *\n * @template {Types.Capabilities} [T=Types.Capabilities]\n * @param {import('./types.js').BytesDelegation<T>} bytes\n */\nfunction bytesToDelegations(bytes) {\n    if (!(bytes instanceof Uint8Array) || bytes.length === 0) {\n        throw new TypeError('Input should be a non-empty Uint8Array.');\n    }\n    const reader = _ipld_car_buffer_reader__WEBPACK_IMPORTED_MODULE_0__.CarBufferReader.fromBytes(bytes);\n    const roots = reader.getRoots();\n    /** @type {Types.Delegation<T>[]} */\n    const delegations = [];\n    for (const root of roots) {\n        const rootBlock = reader.get(root);\n        if (rootBlock) {\n            const blocks = new Map();\n            for (const block of reader.blocks()) {\n                if (block.cid.toString() !== root.toString())\n                    blocks.set(block.cid.toString(), block);\n            }\n            // @ts-ignore\n            delegations.push(new _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_2__.Delegation(rootBlock, blocks));\n        }\n        else {\n            throw new Error('Failed to find root from raw delegation.');\n        }\n    }\n    return delegations;\n}\n/**\n * @param {Types.Delegation[]} delegations\n * @param {import('uint8arrays/to-string').SupportedEncodings} encoding\n */\nfunction delegationsToString(delegations, encoding = 'base64url') {\n    const bytes = delegationsToBytes(delegations);\n    return uint8arrays__WEBPACK_IMPORTED_MODULE_3__.toString(bytes, encoding);\n}\n/**\n * Encode one {@link Types.Delegation Delegation} into a string\n *\n * @param {Types.Delegation<Types.Capabilities>} delegation\n * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding]\n */\nfunction delegationToString(delegation, encoding) {\n    return delegationsToString([delegation], encoding);\n}\n/**\n * Decode string into {@link Types.Delegation Delegation}\n *\n * @template {Types.Capabilities} [T=Types.Capabilities]\n * @param {import('./types.js').EncodedDelegation<T>} raw\n * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding]\n */\nfunction stringToDelegations(raw, encoding = 'base64url') {\n    const bytes = uint8arrays__WEBPACK_IMPORTED_MODULE_3__.fromString(raw, encoding);\n    return bytesToDelegations(bytes);\n}\n/**\n * Decode string into a {@link Types.Delegation Delegation}\n *\n * @template {Types.Capabilities} [T=Types.Capabilities]\n * @param {import('./types.js').EncodedDelegation<T>} raw\n * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding]\n */\nfunction stringToDelegation(raw, encoding) {\n    const delegations = stringToDelegations(raw, encoding);\n    return /** @type {Types.Delegation<T>} */ (delegations[0]);\n}\n/**\n * @param {number} [expiration]\n */\nfunction expirationToDate(expiration) {\n    const expires = expiration === Infinity || !expiration\n        ? undefined\n        : new Date(expiration * 1000);\n    return expires;\n}\n//# sourceMappingURL=encoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvZW5jb2RpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDMEQ7QUFDQztBQUNOO0FBQ25CO0FBQ2xDO0FBQzJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0JBQW9CO0FBQy9CO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxvREFBb0QscUJBQXFCO0FBQ3pFO0FBQ0EsZUFBZSx5QkFBeUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGdFQUEyQjtBQUN6RCwyQkFBMkIsdUJBQXVCO0FBQ2xELHVDQUF1Qyx1QkFBdUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIseUVBQW9DO0FBQzdELG1CQUFtQixpRUFBNEIsK0NBQStDLE9BQU87QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsb0JBQW9CO0FBQ2xDLFdBQVcseUNBQXlDO0FBQ3BEO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsb0VBQWU7QUFDbEM7QUFDQSxlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQywrREFBVTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvQkFBb0I7QUFDL0IsV0FBVyxvREFBb0Q7QUFDL0Q7QUFDTztBQUNQO0FBQ0EsV0FBVyxpREFBVztBQUN0QjtBQUNBO0FBQ0EsZUFBZSxtQ0FBbUM7QUFDbEQ7QUFDQSxXQUFXLHNDQUFzQztBQUNqRCxXQUFXLG9EQUFvRDtBQUMvRDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsY0FBYyxvQkFBb0I7QUFDbEMsV0FBVywyQ0FBMkM7QUFDdEQsV0FBVyxvREFBb0Q7QUFDL0Q7QUFDTztBQUNQLGtCQUFrQixtREFBYTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxjQUFjLG9CQUFvQjtBQUNsQyxXQUFXLDJDQUEyQztBQUN0RCxXQUFXLG9EQUFvRDtBQUMvRDtBQUNPO0FBQ1A7QUFDQSxzQkFBc0IscUJBQXFCO0FBQzNDO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL2Rpc3Qvc3JjL2VuY29kaW5nLmpzPzM5NmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFbmNvZGluZyB1dGlsaXRpZXNcbiAqXG4gKiBJdCBpcyByZWNvbW1lbmRlZCB0aGF0IHlvdSBpbXBvcnQgZGlyZWN0bHkgd2l0aDpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBFbmNvZGluZyBmcm9tICdAd2ViMy1zdG9yYWdlL2FjY2Vzcy9lbmNvZGluZydcbiAqXG4gKiAvLyBvclxuICpcbiAqIGltcG9ydCB7IGVuY29kZURlbGVnYXRpb25zIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZW5jb2RpbmcnXG4gKiBgYGBcbiAqXG4gKiBAbW9kdWxlXG4gKi9cbmltcG9ydCB7IENhckJ1ZmZlclJlYWRlciB9IGZyb20gJ0BpcGxkL2Nhci9idWZmZXItcmVhZGVyJztcbmltcG9ydCAqIGFzIENhckJ1ZmZlcldyaXRlciBmcm9tICdAaXBsZC9jYXIvYnVmZmVyLXdyaXRlcic7XG5pbXBvcnQgeyBEZWxlZ2F0aW9uIH0gZnJvbSAnQHVjYW50by9jb3JlL2RlbGVnYXRpb24nO1xuaW1wb3J0ICogYXMgdTggZnJvbSAndWludDhhcnJheXMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5pbXBvcnQgKiBhcyBUeXBlcyBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSc7XG4vKipcbiAqIEVuY29kZSBkZWxlZ2F0aW9ucyBhcyBieXRlc1xuICpcbiAqIEBwYXJhbSB7VHlwZXMuRGVsZWdhdGlvbltdfSBkZWxlZ2F0aW9uc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsZWdhdGlvbnNUb0J5dGVzKGRlbGVnYXRpb25zKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGRlbGVnYXRpb25zKSB8fCBkZWxlZ2F0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEZWxlZ2F0aW9ucyByZXF1aXJlZCB0byBiZSBhbiBub24gZW1wdHkgYXJyYXkuJyk7XG4gICAgfVxuICAgIGNvbnN0IHJvb3RzID0gZGVsZWdhdGlvbnMubWFwKChkKSA9PiAvKiogQHR5cGUge0NhckJ1ZmZlcldyaXRlci5DSUR9ICovIChkLnJvb3QuY2lkKSk7XG4gICAgY29uc3QgY2lkcyA9IG5ldyBTZXQoKTtcbiAgICAvKiogQHR5cGUge0NhckJ1ZmZlcldyaXRlci5CbG9ja1tdfSAqL1xuICAgIGNvbnN0IGJsb2NrcyA9IFtdO1xuICAgIGxldCBieXRlTGVuZ3RoID0gMDtcbiAgICBmb3IgKGNvbnN0IGRlbGVnYXRpb24gb2YgZGVsZWdhdGlvbnMpIHtcbiAgICAgICAgZm9yIChjb25zdCBibG9jayBvZiBkZWxlZ2F0aW9uLmV4cG9ydCgpKSB7XG4gICAgICAgICAgICBjb25zdCBjaWQgPSBibG9jay5jaWQudG9WMSgpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBpZiAoIWNpZHMuaGFzKGNpZCkpIHtcbiAgICAgICAgICAgICAgICBieXRlTGVuZ3RoICs9IENhckJ1ZmZlcldyaXRlci5ibG9ja0xlbmd0aChcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0NhckJ1ZmZlcldyaXRlci5CbG9ja30gKi8gKGJsb2NrKSk7XG4gICAgICAgICAgICAgICAgYmxvY2tzLnB1c2goLyoqIEB0eXBlIHtDYXJCdWZmZXJXcml0ZXIuQmxvY2t9ICovIChibG9jaykpO1xuICAgICAgICAgICAgICAgIGNpZHMuYWRkKGNpZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgaGVhZGVyTGVuZ3RoID0gQ2FyQnVmZmVyV3JpdGVyLmVzdGltYXRlSGVhZGVyTGVuZ3RoKHJvb3RzLmxlbmd0aCk7XG4gICAgY29uc3Qgd3JpdGVyID0gQ2FyQnVmZmVyV3JpdGVyLmNyZWF0ZVdyaXRlcihuZXcgQXJyYXlCdWZmZXIoaGVhZGVyTGVuZ3RoICsgYnl0ZUxlbmd0aCksIHsgcm9vdHMgfSk7XG4gICAgZm9yIChjb25zdCBibG9jayBvZiBibG9ja3MpIHtcbiAgICAgICAgd3JpdGVyLndyaXRlKGJsb2NrKTtcbiAgICB9XG4gICAgcmV0dXJuIHdyaXRlci5jbG9zZSgpO1xufVxuLyoqXG4gKiBEZWNvZGUgYnl0ZXMgaW50byBEZWxlZ2F0aW9uc1xuICpcbiAqIEB0ZW1wbGF0ZSB7VHlwZXMuQ2FwYWJpbGl0aWVzfSBbVD1UeXBlcy5DYXBhYmlsaXRpZXNdXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi90eXBlcy5qcycpLkJ5dGVzRGVsZWdhdGlvbjxUPn0gYnl0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzVG9EZWxlZ2F0aW9ucyhieXRlcykge1xuICAgIGlmICghKGJ5dGVzIGluc3RhbmNlb2YgVWludDhBcnJheSkgfHwgYnl0ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0lucHV0IHNob3VsZCBiZSBhIG5vbi1lbXB0eSBVaW50OEFycmF5LicpO1xuICAgIH1cbiAgICBjb25zdCByZWFkZXIgPSBDYXJCdWZmZXJSZWFkZXIuZnJvbUJ5dGVzKGJ5dGVzKTtcbiAgICBjb25zdCByb290cyA9IHJlYWRlci5nZXRSb290cygpO1xuICAgIC8qKiBAdHlwZSB7VHlwZXMuRGVsZWdhdGlvbjxUPltdfSAqL1xuICAgIGNvbnN0IGRlbGVnYXRpb25zID0gW107XG4gICAgZm9yIChjb25zdCByb290IG9mIHJvb3RzKSB7XG4gICAgICAgIGNvbnN0IHJvb3RCbG9jayA9IHJlYWRlci5nZXQocm9vdCk7XG4gICAgICAgIGlmIChyb290QmxvY2spIHtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgYmxvY2sgb2YgcmVhZGVyLmJsb2NrcygpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGJsb2NrLmNpZC50b1N0cmluZygpICE9PSByb290LnRvU3RyaW5nKCkpXG4gICAgICAgICAgICAgICAgICAgIGJsb2Nrcy5zZXQoYmxvY2suY2lkLnRvU3RyaW5nKCksIGJsb2NrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGRlbGVnYXRpb25zLnB1c2gobmV3IERlbGVnYXRpb24ocm9vdEJsb2NrLCBibG9ja3MpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZpbmQgcm9vdCBmcm9tIHJhdyBkZWxlZ2F0aW9uLicpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkZWxlZ2F0aW9ucztcbn1cbi8qKlxuICogQHBhcmFtIHtUeXBlcy5EZWxlZ2F0aW9uW119IGRlbGVnYXRpb25zXG4gKiBAcGFyYW0ge2ltcG9ydCgndWludDhhcnJheXMvdG8tc3RyaW5nJykuU3VwcG9ydGVkRW5jb2RpbmdzfSBlbmNvZGluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsZWdhdGlvbnNUb1N0cmluZyhkZWxlZ2F0aW9ucywgZW5jb2RpbmcgPSAnYmFzZTY0dXJsJykge1xuICAgIGNvbnN0IGJ5dGVzID0gZGVsZWdhdGlvbnNUb0J5dGVzKGRlbGVnYXRpb25zKTtcbiAgICByZXR1cm4gdTgudG9TdHJpbmcoYnl0ZXMsIGVuY29kaW5nKTtcbn1cbi8qKlxuICogRW5jb2RlIG9uZSB7QGxpbmsgVHlwZXMuRGVsZWdhdGlvbiBEZWxlZ2F0aW9ufSBpbnRvIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtUeXBlcy5EZWxlZ2F0aW9uPFR5cGVzLkNhcGFiaWxpdGllcz59IGRlbGVnYXRpb25cbiAqIEBwYXJhbSB7aW1wb3J0KCd1aW50OGFycmF5cy90by1zdHJpbmcnKS5TdXBwb3J0ZWRFbmNvZGluZ3N9IFtlbmNvZGluZ11cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGVnYXRpb25Ub1N0cmluZyhkZWxlZ2F0aW9uLCBlbmNvZGluZykge1xuICAgIHJldHVybiBkZWxlZ2F0aW9uc1RvU3RyaW5nKFtkZWxlZ2F0aW9uXSwgZW5jb2RpbmcpO1xufVxuLyoqXG4gKiBEZWNvZGUgc3RyaW5nIGludG8ge0BsaW5rIFR5cGVzLkRlbGVnYXRpb24gRGVsZWdhdGlvbn1cbiAqXG4gKiBAdGVtcGxhdGUge1R5cGVzLkNhcGFiaWxpdGllc30gW1Q9VHlwZXMuQ2FwYWJpbGl0aWVzXVxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5FbmNvZGVkRGVsZWdhdGlvbjxUPn0gcmF3XG4gKiBAcGFyYW0ge2ltcG9ydCgndWludDhhcnJheXMvdG8tc3RyaW5nJykuU3VwcG9ydGVkRW5jb2RpbmdzfSBbZW5jb2RpbmddXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdUb0RlbGVnYXRpb25zKHJhdywgZW5jb2RpbmcgPSAnYmFzZTY0dXJsJykge1xuICAgIGNvbnN0IGJ5dGVzID0gdTguZnJvbVN0cmluZyhyYXcsIGVuY29kaW5nKTtcbiAgICByZXR1cm4gYnl0ZXNUb0RlbGVnYXRpb25zKGJ5dGVzKTtcbn1cbi8qKlxuICogRGVjb2RlIHN0cmluZyBpbnRvIGEge0BsaW5rIFR5cGVzLkRlbGVnYXRpb24gRGVsZWdhdGlvbn1cbiAqXG4gKiBAdGVtcGxhdGUge1R5cGVzLkNhcGFiaWxpdGllc30gW1Q9VHlwZXMuQ2FwYWJpbGl0aWVzXVxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5FbmNvZGVkRGVsZWdhdGlvbjxUPn0gcmF3XG4gKiBAcGFyYW0ge2ltcG9ydCgndWludDhhcnJheXMvdG8tc3RyaW5nJykuU3VwcG9ydGVkRW5jb2RpbmdzfSBbZW5jb2RpbmddXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdUb0RlbGVnYXRpb24ocmF3LCBlbmNvZGluZykge1xuICAgIGNvbnN0IGRlbGVnYXRpb25zID0gc3RyaW5nVG9EZWxlZ2F0aW9ucyhyYXcsIGVuY29kaW5nKTtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHtUeXBlcy5EZWxlZ2F0aW9uPFQ+fSAqLyAoZGVsZWdhdGlvbnNbMF0pO1xufVxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gW2V4cGlyYXRpb25dXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHBpcmF0aW9uVG9EYXRlKGV4cGlyYXRpb24pIHtcbiAgICBjb25zdCBleHBpcmVzID0gZXhwaXJhdGlvbiA9PT0gSW5maW5pdHkgfHwgIWV4cGlyYXRpb25cbiAgICAgICAgPyB1bmRlZmluZWRcbiAgICAgICAgOiBuZXcgRGF0ZShleHBpcmF0aW9uICogMTAwMCk7XG4gICAgcmV0dXJuIGV4cGlyZXM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbmNvZGluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/encoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/errors.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvZXJyb3JzLmpzPzY2MDUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/provider.js":
/*!****************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/provider.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountDID: () => (/* binding */ AccountDID),\n/* harmony export */   ProviderDID: () => (/* binding */ ProviderDID),\n/* harmony export */   add: () => (/* binding */ add)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\");\n/* harmony import */ var _web3_storage_capabilities_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/provider */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/provider.js\");\n\n\nconst { Provider: ProviderDID, AccountDID } = _web3_storage_capabilities_provider__WEBPACK_IMPORTED_MODULE_1__;\n/**\n * Provisions specified `space` with the specified `account`. It is expected\n * that delegation from the account authorizing agent is either stored in the\n * agent proofs or provided explicitly.\n *\n * @template {Record<string, any>} [S=API.Service]\n * @param {API.Agent<S>} agent\n * @param {object} input\n * @param {API.AccountDID} input.account - Account provisioning the space.\n * @param {API.SpaceDID} input.consumer - Space been provisioned.\n * @param {API.ProviderDID} [input.provider] - Provider been provisioned.\n * @param {API.Delegation[]} [input.proofs] - Delegation from the account\n * authorizing agent to call `provider/add` capability.\n */\nconst add = async (agent, { account, consumer, provider = /** @type {API.ProviderDID} */ (agent.connection.id.did()), proofs, }) => {\n    if (!ProviderDID.is(provider)) {\n        throw new Error(`Unable to determine provider from agent.connection.id did ${provider}. expected a did:web:`);\n    }\n    const { out } = await agent.invokeAndExecute(_web3_storage_capabilities_provider__WEBPACK_IMPORTED_MODULE_1__.add, {\n        with: account,\n        nb: {\n            provider,\n            consumer,\n        },\n        proofs,\n    });\n    return out;\n};\n//# sourceMappingURL=provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBa0M7QUFDOEI7QUFDekQsUUFBUSxvQ0FBb0MsRUFBRSxnRUFBUTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQkFBcUI7QUFDbkMsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsUUFBUTtBQUNuQixXQUFXLGdCQUFnQjtBQUMzQixXQUFXLGNBQWM7QUFDekIsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxrQkFBa0I7QUFDN0I7QUFDQTtBQUNPLDRCQUE0Qix5Q0FBeUMsaUJBQWlCLHlDQUF5QztBQUN0STtBQUNBLHFGQUFxRixTQUFTO0FBQzlGO0FBQ0EsWUFBWSxNQUFNLCtCQUErQixvRUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9kaXN0L3NyYy9wcm92aWRlci5qcz8yOGU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICcuL3R5cGVzLmpzJztcbmltcG9ydCAqIGFzIFByb3ZpZGVyIGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3Byb3ZpZGVyJztcbmV4cG9ydCBjb25zdCB7IFByb3ZpZGVyOiBQcm92aWRlckRJRCwgQWNjb3VudERJRCB9ID0gUHJvdmlkZXI7XG4vKipcbiAqIFByb3Zpc2lvbnMgc3BlY2lmaWVkIGBzcGFjZWAgd2l0aCB0aGUgc3BlY2lmaWVkIGBhY2NvdW50YC4gSXQgaXMgZXhwZWN0ZWRcbiAqIHRoYXQgZGVsZWdhdGlvbiBmcm9tIHRoZSBhY2NvdW50IGF1dGhvcml6aW5nIGFnZW50IGlzIGVpdGhlciBzdG9yZWQgaW4gdGhlXG4gKiBhZ2VudCBwcm9vZnMgb3IgcHJvdmlkZWQgZXhwbGljaXRseS5cbiAqXG4gKiBAdGVtcGxhdGUge1JlY29yZDxzdHJpbmcsIGFueT59IFtTPUFQSS5TZXJ2aWNlXVxuICogQHBhcmFtIHtBUEkuQWdlbnQ8Uz59IGFnZW50XG4gKiBAcGFyYW0ge29iamVjdH0gaW5wdXRcbiAqIEBwYXJhbSB7QVBJLkFjY291bnRESUR9IGlucHV0LmFjY291bnQgLSBBY2NvdW50IHByb3Zpc2lvbmluZyB0aGUgc3BhY2UuXG4gKiBAcGFyYW0ge0FQSS5TcGFjZURJRH0gaW5wdXQuY29uc3VtZXIgLSBTcGFjZSBiZWVuIHByb3Zpc2lvbmVkLlxuICogQHBhcmFtIHtBUEkuUHJvdmlkZXJESUR9IFtpbnB1dC5wcm92aWRlcl0gLSBQcm92aWRlciBiZWVuIHByb3Zpc2lvbmVkLlxuICogQHBhcmFtIHtBUEkuRGVsZWdhdGlvbltdfSBbaW5wdXQucHJvb2ZzXSAtIERlbGVnYXRpb24gZnJvbSB0aGUgYWNjb3VudFxuICogYXV0aG9yaXppbmcgYWdlbnQgdG8gY2FsbCBgcHJvdmlkZXIvYWRkYCBjYXBhYmlsaXR5LlxuICovXG5leHBvcnQgY29uc3QgYWRkID0gYXN5bmMgKGFnZW50LCB7IGFjY291bnQsIGNvbnN1bWVyLCBwcm92aWRlciA9IC8qKiBAdHlwZSB7QVBJLlByb3ZpZGVyRElEfSAqLyAoYWdlbnQuY29ubmVjdGlvbi5pZC5kaWQoKSksIHByb29mcywgfSkgPT4ge1xuICAgIGlmICghUHJvdmlkZXJESUQuaXMocHJvdmlkZXIpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGRldGVybWluZSBwcm92aWRlciBmcm9tIGFnZW50LmNvbm5lY3Rpb24uaWQgZGlkICR7cHJvdmlkZXJ9LiBleHBlY3RlZCBhIGRpZDp3ZWI6YCk7XG4gICAgfVxuICAgIGNvbnN0IHsgb3V0IH0gPSBhd2FpdCBhZ2VudC5pbnZva2VBbmRFeGVjdXRlKFByb3ZpZGVyLmFkZCwge1xuICAgICAgICB3aXRoOiBhY2NvdW50LFxuICAgICAgICBuYjoge1xuICAgICAgICAgICAgcHJvdmlkZXIsXG4gICAgICAgICAgICBjb25zdW1lcixcbiAgICAgICAgfSxcbiAgICAgICAgcHJvb2ZzLFxuICAgIH0pO1xuICAgIHJldHVybiBvdXQ7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/space.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/space.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OwnedSpace: () => (/* binding */ OwnedSpace),\n/* harmony export */   SESSION_LIFETIME: () => (/* binding */ SESSION_LIFETIME),\n/* harmony export */   SharedSpace: () => (/* binding */ SharedSpace),\n/* harmony export */   createAuthorization: () => (/* binding */ createAuthorization),\n/* harmony export */   createRecovery: () => (/* binding */ createRecovery),\n/* harmony export */   fromDelegation: () => (/* binding */ fromDelegation),\n/* harmony export */   fromMnemonic: () => (/* binding */ fromMnemonic),\n/* harmony export */   generate: () => (/* binding */ generate),\n/* harmony export */   provision: () => (/* binding */ provision),\n/* harmony export */   toMnemonic: () => (/* binding */ toMnemonic)\n/* harmony export */ });\n/* harmony import */ var _ucanto_principal_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/principal/ed25519 */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _scure_bip39__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @scure/bip39 */ \"(ssr)/./node_modules/@scure/bip39/esm/index.js\");\n/* harmony import */ var _scure_bip39_wordlists_english__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @scure/bip39/wordlists/english */ \"(ssr)/./node_modules/@scure/bip39/esm/wordlists/english.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\");\n/* harmony import */ var _access_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./access.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/access.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./provider.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/provider.js\");\n\n\n\n\n\n\n\n/**\n * Data model for the (owned) space.\n *\n * @typedef {object} Model\n * @property {ED25519.EdSigner} signer\n * @property {string} name\n * @property {API.Agent} [agent]\n */\n/**\n * Generates a new space.\n *\n * @param {object} options\n * @param {string} options.name\n * @param {API.Agent} [options.agent]\n */\nconst generate = async ({ name, agent }) => {\n    const { signer } = await _ucanto_principal_ed25519__WEBPACK_IMPORTED_MODULE_0__.generate();\n    return new OwnedSpace({ signer, name, agent });\n};\n/**\n * Recovers space from the saved mnemonic.\n *\n * @param {string} mnemonic\n * @param {object} options\n * @param {string} options.name - Name to give to the recovered space.\n * @param {API.Agent} [options.agent]\n */\nconst fromMnemonic = async (mnemonic, { name, agent }) => {\n    const secret = _scure_bip39__WEBPACK_IMPORTED_MODULE_2__.mnemonicToEntropy(mnemonic, _scure_bip39_wordlists_english__WEBPACK_IMPORTED_MODULE_3__.wordlist);\n    const signer = await _ucanto_principal_ed25519__WEBPACK_IMPORTED_MODULE_0__.derive(secret);\n    return new OwnedSpace({ signer, name, agent });\n};\n/**\n * Turns (owned) space into a BIP39 mnemonic that later can be used to recover\n * the space using `fromMnemonic` function.\n *\n * @param {object} space\n * @param {ED25519.EdSigner} space.signer\n */\nconst toMnemonic = ({ signer }) => {\n    /** @type {Uint8Array} */\n    // @ts-expect-error - Field is defined but not in the interface\n    const secret = signer.secret;\n    return _scure_bip39__WEBPACK_IMPORTED_MODULE_2__.entropyToMnemonic(secret, _scure_bip39_wordlists_english__WEBPACK_IMPORTED_MODULE_3__.wordlist);\n};\n/**\n * Creates a (UCAN) delegation that gives full access to the space to the\n * specified `account`. At the moment we only allow `did:mailto` principal\n * to be used as an `account`.\n *\n * @param {Model} space\n * @param {API.AccountDID} account\n */\nconst createRecovery = (space, account) => createAuthorization(space, {\n    audience: _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.DID.parse(account),\n    access: _access_js__WEBPACK_IMPORTED_MODULE_5__.accountAccess,\n    expiration: Infinity,\n});\n// Default authorization session is valid for 1 year\nconst SESSION_LIFETIME = 60 * 60 * 24 * 365;\n/**\n * Creates (UCAN) delegation that gives specified `agent` an access to\n * specified ability (passed as `access.can` field) on this space.\n * Optionally, you can specify `access.expiration` field to set the\n * expiration time for the authorization. By default the authorization\n * is valid for 1 year and gives access to all capabilities on the space\n * that are needed to use the space.\n *\n * @param {Model} space\n * @param {object} options\n * @param {API.Principal} options.audience\n * @param {API.Access} [options.access]\n * @param {API.UTCUnixTimestamp} [options.expiration]\n */\nconst createAuthorization = async ({ signer, name }, { audience, access = _access_js__WEBPACK_IMPORTED_MODULE_5__.spaceAccess, expiration = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.UCAN.now() + SESSION_LIFETIME, }) => {\n    return await (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.delegate)({\n        issuer: signer,\n        audience: audience,\n        capabilities: toCapabilities({\n            [signer.did()]: access,\n        }),\n        ...(expiration ? { expiration } : {}),\n        facts: [{ space: { name } }],\n    });\n};\n/**\n * @param {Record<API.Resource, API.Access>} allow\n * @returns {API.Capabilities}\n */\nconst toCapabilities = (allow) => {\n    const capabilities = [];\n    for (const [subject, access] of Object.entries(allow)) {\n        const entries = /** @type {[API.Ability, API.Unit][]} */ (Object.entries(access));\n        for (const [can, details] of entries) {\n            if (details) {\n                capabilities.push({ can, with: subject });\n            }\n        }\n    }\n    return /** @type {API.Capabilities} */ (capabilities);\n};\n/**\n * Represents an owned space, meaning a space for which we have a private key\n * and consequently have full authority over.\n */\nclass OwnedSpace {\n    /**\n     * @param {Model} model\n     */\n    constructor(model) {\n        this.model = model;\n    }\n    get signer() {\n        return this.model.signer;\n    }\n    get name() {\n        return this.model.name;\n    }\n    did() {\n        return this.signer.did();\n    }\n    /**\n     * Creates a renamed version of this space.\n     *\n     * @param {string} name\n     */\n    withName(name) {\n        return new OwnedSpace({ signer: this.signer, name });\n    }\n    /**\n     * Saves account in the agent store so it can be accessed across sessions.\n     *\n     * @param {object} input\n     * @param {API.Agent} [input.agent]\n     * @returns {Promise<API.Result<API.Unit, Error>>}\n     */\n    async save({ agent = this.model.agent } = {}) {\n        if (!agent) {\n            return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.fail)('Please provide an agent to save the space into');\n        }\n        const proof = await createAuthorization(this, { audience: agent });\n        await agent.importSpaceFromDelegation(proof);\n        await agent.setCurrentSpace(this.did());\n        return { ok: {} };\n    }\n    /**\n     * @param {Authorization} authorization\n     * @param {object} options\n     * @param {API.Agent} [options.agent]\n     */\n    provision({ proofs }, { agent = this.model.agent } = {}) {\n        if (!agent) {\n            return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.fail)('Please provide an agent to save the space into');\n        }\n        return provision(this, { proofs, agent });\n    }\n    /**\n     * Creates a (UCAN) delegation that gives full access to the space to the\n     * specified `account`. At the moment we only allow `did:mailto` principal\n     * to be used as an `account`.\n     *\n     * @param {API.AccountDID} account\n     */\n    async createRecovery(account) {\n        return createRecovery(this, account);\n    }\n    /**\n     * Creates (UCAN) delegation that gives specified `agent` an access to\n     * specified ability (passed as `access.can` field) on the this space.\n     * Optionally, you can specify `access.expiration` field to set the\n     *\n     * @param {API.Principal} principal\n     * @param {object} [input]\n     * @param {API.Access} [input.access]\n     * @param {API.UCAN.UTCUnixTimestamp} [input.expiration]\n     */\n    createAuthorization(principal, input) {\n        return createAuthorization(this, { ...input, audience: principal });\n    }\n    /**\n     * Derives BIP39 mnemonic that can be used to recover the space.\n     *\n     * @returns {string}\n     */\n    toMnemonic() {\n        return toMnemonic(this);\n    }\n}\nconst SpaceDID = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.did({ method: 'key' });\n/**\n * Creates a (shared) space from given delegation.\n *\n * @param {API.Delegation} delegation\n */\nconst fromDelegation = (delegation) => {\n    const result = SpaceDID.read(delegation.capabilities[0].with);\n    if (result.error) {\n        throw Object.assign(new Error(`Invalid delegation, expected capabilities[0].with to be DID, ${result.error}`), {\n            cause: result.error,\n        });\n    }\n    /** @type {{name?:string}} */\n    const meta = delegation.facts[0]?.space ?? {};\n    return new SharedSpace({ id: result.ok, delegation, meta });\n};\n/**\n * @typedef {object} Authorization\n * @property {API.Delegation[]} proofs\n *\n * @typedef {object} Space\n * @property {() => API.SpaceDID} did\n */\n/**\n * @param {Space} space\n * @param {object} options\n * @param {API.Delegation[]} options.proofs\n * @param {API.Agent} options.agent\n */\nconst provision = async (space, { proofs, agent }) => {\n    const [capability] = proofs[0].capabilities;\n    const { ok: account, error: reason } = _provider_js__WEBPACK_IMPORTED_MODULE_6__.AccountDID.read(capability.with);\n    if (reason) {\n        return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.error)(reason);\n    }\n    return await _provider_js__WEBPACK_IMPORTED_MODULE_6__.add(agent, {\n        consumer: space.did(),\n        account,\n        proofs,\n    });\n};\n/**\n * Represents a shared space, meaning a space for which we have a delegation\n * and consequently have limited authority over.\n */\nclass SharedSpace {\n    /**\n     * @typedef {object} SharedSpaceModel\n     * @property {API.SpaceDID} id\n     * @property {API.Delegation} delegation\n     * @property {{name?:string}} meta\n     * @property {API.Agent} [agent]\n     *\n     * @param {SharedSpaceModel} model\n     */\n    constructor(model) {\n        this.model = model;\n    }\n    get delegation() {\n        return this.model.delegation;\n    }\n    get meta() {\n        return this.model.meta;\n    }\n    get name() {\n        return this.meta.name ?? '';\n    }\n    did() {\n        return this.model.id;\n    }\n    /**\n     * @param {string} name\n     */\n    withName(name) {\n        return new SharedSpace({\n            ...this.model,\n            meta: { ...this.meta, name },\n        });\n    }\n}\n//# sourceMappingURL=space.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/space.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/stores/store-conf.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/stores/store-conf.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoreConf: () => (/* binding */ StoreConf)\n/* harmony export */ });\n/* harmony import */ var _drivers_conf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../drivers/conf.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/drivers/conf.js\");\n\n/**\n * Store implementation with \"[conf](https://github.com/sindresorhus/conf)\"\n *\n * Usage:\n *\n * ```js\n * import { StoreConf } from '@web3-storage/access/stores/store-conf'\n * ```\n *\n * @extends {ConfDriver<import('../types.js').AgentDataExport>}\n */\nclass StoreConf extends _drivers_conf_js__WEBPACK_IMPORTED_MODULE_0__.ConfDriver {\n}\n//# sourceMappingURL=store-conf.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvc3RvcmVzL3N0b3JlLWNvbmYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxZQUFZO0FBQ3hCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDTyx3QkFBd0Isd0RBQVU7QUFDekM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL2Rpc3Qvc3JjL3N0b3Jlcy9zdG9yZS1jb25mLmpzP2I5NGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uZkRyaXZlciB9IGZyb20gJy4uL2RyaXZlcnMvY29uZi5qcyc7XG4vKipcbiAqIFN0b3JlIGltcGxlbWVudGF0aW9uIHdpdGggXCJbY29uZl0oaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9jb25mKVwiXG4gKlxuICogVXNhZ2U6XG4gKlxuICogYGBganNcbiAqIGltcG9ydCB7IFN0b3JlQ29uZiB9IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL3N0b3Jlcy9zdG9yZS1jb25mJ1xuICogYGBgXG4gKlxuICogQGV4dGVuZHMge0NvbmZEcml2ZXI8aW1wb3J0KCcuLi90eXBlcy5qcycpLkFnZW50RGF0YUV4cG9ydD59XG4gKi9cbmV4cG9ydCBjbGFzcyBTdG9yZUNvbmYgZXh0ZW5kcyBDb25mRHJpdmVyIHtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0b3JlLWNvbmYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/stores/store-conf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/types.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/types.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppName: () => (/* binding */ AppName),\n/* harmony export */   email: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_3__.email),\n/* harmony export */   fromEmail: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_3__.fromEmail),\n/* harmony export */   fromString: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_3__.fromString),\n/* harmony export */   toEmail: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_3__.toEmail)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/types */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/types.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/errors.js\");\n/* harmony import */ var _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3-storage/did-mailto */ \"(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/index.js\");\n// export other types\n\n\n\n\nvar AppName;\n(function (AppName) {\n    AppName[\"BskyBackups\"] = \"bsky-backups\";\n})(AppName || (AppName = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDa0M7QUFDZTtBQUNyQjtBQUNhO0FBQ2xDO0FBQ1A7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvdHlwZXMuanM/NTgwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHBvcnQgb3RoZXIgdHlwZXNcbmV4cG9ydCAqIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJztcbmV4cG9ydCAqIGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3R5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vZXJyb3JzLmpzJztcbmV4cG9ydCAqIGZyb20gJ0B3ZWIzLXN0b3JhZ2UvZGlkLW1haWx0byc7XG5leHBvcnQgdmFyIEFwcE5hbWU7XG4oZnVuY3Rpb24gKEFwcE5hbWUpIHtcbiAgICBBcHBOYW1lW1wiQnNreUJhY2t1cHNcIl0gPSBcImJza3ktYmFja3Vwc1wiO1xufSkoQXBwTmFtZSB8fCAoQXBwTmFtZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/utils/buffers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/utils/buffers.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uint8ArrayToArrayBuffer: () => (/* binding */ uint8ArrayToArrayBuffer)\n/* harmony export */ });\n/**\n * Convert a Uint8Array to an ArrayBuffer, taking into account\n * that we may be looking at a \"data view\".\n * thanks, https://stackoverflow.com/a/54646864\n *\n * If we aren't looking at a data view, simply returns the underlying ArrayBuffer\n * directly.\n *\n * @param {Uint8Array} array\n * @returns ArrayBuffer\n */\nfunction uint8ArrayToArrayBuffer(array) {\n    if (array.byteOffset === 0 && array.byteLength === array.buffer.byteLength) {\n        return array.buffer;\n    }\n    else {\n        return array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\n    }\n}\n//# sourceMappingURL=buffers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvdXRpbHMvYnVmZmVycy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvdXRpbHMvYnVmZmVycy5qcz9lOGRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29udmVydCBhIFVpbnQ4QXJyYXkgdG8gYW4gQXJyYXlCdWZmZXIsIHRha2luZyBpbnRvIGFjY291bnRcbiAqIHRoYXQgd2UgbWF5IGJlIGxvb2tpbmcgYXQgYSBcImRhdGEgdmlld1wiLlxuICogdGhhbmtzLCBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNTQ2NDY4NjRcbiAqXG4gKiBJZiB3ZSBhcmVuJ3QgbG9va2luZyBhdCBhIGRhdGEgdmlldywgc2ltcGx5IHJldHVybnMgdGhlIHVuZGVybHlpbmcgQXJyYXlCdWZmZXJcbiAqIGRpcmVjdGx5LlxuICpcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYXJyYXlcbiAqIEByZXR1cm5zIEFycmF5QnVmZmVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1aW50OEFycmF5VG9BcnJheUJ1ZmZlcihhcnJheSkge1xuICAgIGlmIChhcnJheS5ieXRlT2Zmc2V0ID09PSAwICYmIGFycmF5LmJ5dGVMZW5ndGggPT09IGFycmF5LmJ1ZmZlci5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBhcnJheS5idWZmZXI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gYXJyYXkuYnVmZmVyLnNsaWNlKGFycmF5LmJ5dGVPZmZzZXQsIGFycmF5LmJ5dGVMZW5ndGggKyBhcnJheS5ieXRlT2Zmc2V0KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1idWZmZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/utils/buffers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/dist/src/utils/json.js":
/*!******************************************************************!*\
  !*** ./node_modules/@web3-storage/access/dist/src/utils/json.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   replacer: () => (/* binding */ replacer),\n/* harmony export */   reviver: () => (/* binding */ reviver),\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n// JSON.stringify and JSON.parse with URL, Map and Uint8Array type support.\n/**\n * @param {string} k\n * @param {any} v\n */\nconst replacer = (k, v) => {\n    if (v instanceof URL) {\n        return { $url: v.toString() };\n    }\n    else if (v instanceof Map) {\n        return { $map: [...v.entries()] };\n    }\n    else if (v instanceof Uint8Array) {\n        return { $bytes: [...v.values()] };\n    }\n    else if (v instanceof ArrayBuffer) {\n        return { $bytes: [...new Uint8Array(v).values()] };\n    }\n    else if (v?.type === 'Buffer' && Array.isArray(v.data)) {\n        return { $bytes: v.data };\n    }\n    return v;\n};\n/**\n * @param {string} k\n * @param {any} v\n */\nconst reviver = (k, v) => {\n    if (!v)\n        return v;\n    if (v.$url)\n        return new URL(v.$url);\n    if (v.$map)\n        return new Map(v.$map);\n    if (v.$bytes)\n        return new Uint8Array(v.$bytes);\n    return v;\n};\n/**\n * @param {any} value\n * @param {number|string} [space]\n */\nconst stringify = (value, space) => JSON.stringify(value, replacer, space);\n/** @param {string} value */\nconst parse = (value) => JSON.parse(value, reviver);\n//# sourceMappingURL=json.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3MvZGlzdC9zcmMvdXRpbHMvanNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEtBQUs7QUFDaEI7QUFDTztBQUNQO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxLQUFLO0FBQ2hCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLFdBQVcsZUFBZTtBQUMxQjtBQUNPO0FBQ1AsWUFBWSxRQUFRO0FBQ2I7QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL2Rpc3Qvc3JjL3V0aWxzL2pzb24uanM/Y2U0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBKU09OLnN0cmluZ2lmeSBhbmQgSlNPTi5wYXJzZSB3aXRoIFVSTCwgTWFwIGFuZCBVaW50OEFycmF5IHR5cGUgc3VwcG9ydC5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IGtcbiAqIEBwYXJhbSB7YW55fSB2XG4gKi9cbmV4cG9ydCBjb25zdCByZXBsYWNlciA9IChrLCB2KSA9PiB7XG4gICAgaWYgKHYgaW5zdGFuY2VvZiBVUkwpIHtcbiAgICAgICAgcmV0dXJuIHsgJHVybDogdi50b1N0cmluZygpIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKHYgaW5zdGFuY2VvZiBNYXApIHtcbiAgICAgICAgcmV0dXJuIHsgJG1hcDogWy4uLnYuZW50cmllcygpXSB9O1xuICAgIH1cbiAgICBlbHNlIGlmICh2IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4geyAkYnl0ZXM6IFsuLi52LnZhbHVlcygpXSB9O1xuICAgIH1cbiAgICBlbHNlIGlmICh2IGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIHsgJGJ5dGVzOiBbLi4ubmV3IFVpbnQ4QXJyYXkodikudmFsdWVzKCldIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKHY/LnR5cGUgPT09ICdCdWZmZXInICYmIEFycmF5LmlzQXJyYXkodi5kYXRhKSkge1xuICAgICAgICByZXR1cm4geyAkYnl0ZXM6IHYuZGF0YSB9O1xuICAgIH1cbiAgICByZXR1cm4gdjtcbn07XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBrXG4gKiBAcGFyYW0ge2FueX0gdlxuICovXG5leHBvcnQgY29uc3QgcmV2aXZlciA9IChrLCB2KSA9PiB7XG4gICAgaWYgKCF2KVxuICAgICAgICByZXR1cm4gdjtcbiAgICBpZiAodi4kdXJsKVxuICAgICAgICByZXR1cm4gbmV3IFVSTCh2LiR1cmwpO1xuICAgIGlmICh2LiRtYXApXG4gICAgICAgIHJldHVybiBuZXcgTWFwKHYuJG1hcCk7XG4gICAgaWYgKHYuJGJ5dGVzKVxuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkodi4kYnl0ZXMpO1xuICAgIHJldHVybiB2O1xufTtcbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcGFyYW0ge251bWJlcnxzdHJpbmd9IFtzcGFjZV1cbiAqL1xuZXhwb3J0IGNvbnN0IHN0cmluZ2lmeSA9ICh2YWx1ZSwgc3BhY2UpID0+IEpTT04uc3RyaW5naWZ5KHZhbHVlLCByZXBsYWNlciwgc3BhY2UpO1xuLyoqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSAqL1xuZXhwb3J0IGNvbnN0IHBhcnNlID0gKHZhbHVlKSA9PiBKU09OLnBhcnNlKHZhbHVlLCByZXZpdmVyKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWpzb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/dist/src/utils/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-decoder.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-decoder.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytesReader: () => (/* binding */ bytesReader),\n/* harmony export */   fromBytes: () => (/* binding */ fromBytes),\n/* harmony export */   limitReader: () => (/* binding */ limitReader),\n/* harmony export */   readBlockHead: () => (/* binding */ readBlockHead),\n/* harmony export */   readHeader: () => (/* binding */ readHeader)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decoder-common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/decoder-common.js\");\n/* harmony import */ var _header_validator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./header-validator.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/header-validator.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockHeader} BlockHeader\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./coding.js').BytesBufferReader} BytesBufferReader\n * @typedef {import('./coding.js').CarHeader} CarHeader\n * @typedef {import('./coding.js').CarV2Header} CarV2Header\n * @typedef {import('./coding.js').CarV2FixedHeader} CarV2FixedHeader\n */\n\n/**\n * Reads header data from a `BytesReader`. The header may either be in the form\n * of a `CarHeader` or `CarV2Header` depending on the CAR being read.\n *\n * @name decoder.readHeader(reader)\n * @param {BytesBufferReader} reader\n * @param {number} [strictVersion]\n * @returns {CarHeader | CarV2Header}\n */\nfunction readHeader (reader, strictVersion) {\n  const length = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)')\n  }\n  const header = reader.exactly(length, true)\n  const block = (0,_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__.decode)(header)\n  if (_header_validator_js__WEBPACK_IMPORTED_MODULE_4__.CarV1HeaderOrV2Pragma.toTyped(block) === undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  if ((block.version !== 1 && block.version !== 2) || (strictVersion !== undefined && block.version !== strictVersion)) {\n    throw new Error(`Invalid CAR version: ${block.version}${strictVersion !== undefined ? ` (expected ${strictVersion})` : ''}`)\n  }\n  if (block.version === 1) {\n    // CarV1HeaderOrV2Pragma makes roots optional, let's make it mandatory\n    if (!Array.isArray(block.roots)) {\n      throw new Error('Invalid CAR header format')\n    }\n    return block\n  }\n  // version 2\n  if (block.roots !== undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  const v2Header = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeV2Header)(reader.exactly(_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.V2_HEADER_LENGTH, true))\n  reader.seek(v2Header.dataOffset - reader.pos)\n  const v1Header = readHeader(reader, 1)\n  return Object.assign(v1Header, v2Header)\n}\n\n/**\n * Reads CID sync\n *\n * @param {BytesBufferReader} reader\n * @returns {CID}\n */\nfunction readCid (reader) {\n  const first = reader.exactly(2, false)\n  if (first[0] === _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.SHA2_256 && first[1] === _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.LENGTH) {\n    // cidv0 32-byte sha2-256\n    const bytes = reader.exactly(34, true)\n    const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__.decode(bytes)\n    return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.create(0, _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.DAG_PB, multihash)\n  }\n\n  const version = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${version})`)\n  }\n  const codec = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  const bytes = reader.exactly((0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.getMultihashLength)(reader.upTo(8)), true)\n  const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__.decode(bytes)\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.create(version, codec, multihash)\n}\n\n/**\n * Reads the leading data of an individual block from CAR data from a\n * `BytesBufferReader`. Returns a `BlockHeader` object which contains\n * `{ cid, length, blockLength }` which can be used to either index the block\n * or read the block binary data.\n *\n * @name async decoder.readBlockHead(reader)\n * @param {BytesBufferReader} reader\n * @returns {BlockHeader}\n */\nfunction readBlockHead (reader) {\n  // length includes a CID + Binary, where CID has a variable length\n  // we have to deal with\n  const start = reader.pos\n  let length = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)')\n  }\n  length += (reader.pos - start)\n  const cid = readCid(reader)\n  const blockLength = length - Number(reader.pos - start) // subtract CID length\n\n  return { cid, length, blockLength }\n}\n\n/**\n * Returns Car header and blocks from a Uint8Array\n *\n * @param {Uint8Array} bytes\n * @returns {{ header : CarHeader | CarV2Header , blocks: Block[]}}\n */\nfunction fromBytes (bytes) {\n  let reader = bytesReader(bytes)\n  const header = readHeader(reader)\n  if (header.version === 2) {\n    const v1length = reader.pos - header.dataOffset\n    reader = limitReader(reader, header.dataSize - v1length)\n  }\n\n  const blocks = []\n  while (reader.upTo(8).length > 0) {\n    const { cid, blockLength } = readBlockHead(reader)\n\n    blocks.push({ cid, bytes: reader.exactly(blockLength, true) })\n  }\n\n  return {\n    header, blocks\n  }\n}\n\n/**\n * Creates a `BytesBufferReader` from a `Uint8Array`.\n *\n * @name decoder.bytesReader(bytes)\n * @param {Uint8Array} bytes\n * @returns {BytesBufferReader}\n */\nfunction bytesReader (bytes) {\n  let pos = 0\n\n  /** @type {BytesBufferReader} */\n  return {\n    upTo (length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos))\n    },\n\n    exactly (length, seek = false) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data')\n      }\n\n      const out = bytes.subarray(pos, pos + length)\n      if (seek) {\n        pos += length\n      }\n      return out\n    },\n\n    seek (length) {\n      pos += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * Wraps a `BytesBufferReader` in a limiting `BytesBufferReader` which limits maximum read\n * to `byteLimit` bytes. It _does not_ update `pos` of the original\n * `BytesBufferReader`.\n *\n * @name decoder.limitReader(reader, byteLimit)\n * @param {BytesBufferReader} reader\n * @param {number} byteLimit\n * @returns {BytesBufferReader}\n */\nfunction limitReader (reader, byteLimit) {\n  let bytesRead = 0\n\n  /** @type {BytesBufferReader} */\n  return {\n    upTo (length) {\n      let bytes = reader.upTo(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead)\n      }\n      return bytes\n    },\n\n    exactly (length, seek = false) {\n      const bytes = reader.exactly(length, seek)\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data')\n      }\n      if (seek) {\n        bytesRead += length\n      }\n      return bytes\n    },\n\n    seek (length) {\n      bytesRead += length\n      reader.seek(length)\n    },\n\n    get pos () {\n      return reader.pos\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-decoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-reader-browser.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-reader-browser.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarBufferReader: () => (/* binding */ CarBufferReader),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var _buffer_decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer-decoder.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-decoder.js\");\n\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').CarBufferReader} ICarBufferReader\n * @typedef {import('./coding.js').CarHeader} CarHeader\n * @typedef {import('./coding.js').CarV2Header} CarV2Header\n */\n\n/**\n * Provides blockstore-like access to a CAR.\n *\n * Implements the `RootsBufferReader` interface:\n * {@link ICarBufferReader.getRoots `getRoots()`}. And the `BlockBufferReader` interface:\n * {@link ICarBufferReader.get `get()`}, {@link ICarBufferReader.has `has()`},\n * {@link ICarBufferReader.blocks `blocks()`} and\n * {@link ICarBufferReader.cids `cids()`}.\n *\n * Load this class with either `import { CarBufferReader } from '@ipld/car/buffer-reader'`\n * (`const { CarBufferReader } = require('@ipld/car/buffer-reader')`). Or\n * `import { CarBufferReader } from '@ipld/car'` (`const { CarBufferReader } = require('@ipld/car')`).\n * The former will likely result in smaller bundle sizes where this is\n * important.\n *\n * @name CarBufferReader\n * @class\n * @implements {ICarBufferReader}\n * @property {number} version The version number of the CAR referenced by this\n * reader (should be `1` or `2`).\n */\nclass CarBufferReader {\n  /**\n   * @constructs CarBufferReader\n   * @param {CarHeader|CarV2Header} header\n   * @param {Block[]} blocks\n   */\n  constructor (header, blocks) {\n    this._header = header\n    this._blocks = blocks\n    this._cids = undefined\n  }\n\n  /**\n   * @property {number} version of the CAR\n   * @memberof CarBufferReader\n   * @instance\n   */\n  get version () {\n    return this._header.version\n  }\n\n  /**\n   * Get the list of roots defined by the CAR referenced by this reader. May be\n   * zero or more `CID`s.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {CID[]}\n   */\n  getRoots () {\n    return this._header.roots\n  }\n\n  /**\n   * Check whether a given `CID` exists within the CAR referenced by this\n   * reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @param {CID} key\n   * @returns {boolean}\n   */\n  has (key) {\n    return this._blocks.some(b => b.cid.equals(key))\n  }\n\n  /**\n   * Fetch a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) from the CAR\n   * referenced by this reader matching the provided `CID`. In the case where\n   * the provided `CID` doesn't exist within the CAR, `undefined` will be\n   * returned.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @param {CID} key\n   * @returns {Block | undefined}\n   */\n  get (key) {\n    return this._blocks.find(b => b.cid.equals(key))\n  }\n\n  /**\n   * Returns a `Block[]` of the `Block`s (`{ cid:CID, bytes:Uint8Array }` pairs) contained within\n   * the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {Block[]}\n   */\n  blocks () {\n    return this._blocks\n  }\n\n  /**\n   * Returns a `CID[]` of the `CID`s contained within the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {CID[]}\n   */\n  cids () {\n    if (!this._cids) {\n      this._cids = this._blocks.map(b => b.cid)\n    }\n    return this._cids\n  }\n\n  /**\n   * Instantiate a {@link CarBufferReader} from a `Uint8Array` blob. This performs a\n   * decode fully in memory and maintains the decoded state in memory for full\n   * access to the data via the `CarReader` API.\n   *\n   * @static\n   * @memberof CarBufferReader\n   * @param {Uint8Array} bytes\n   * @returns {CarBufferReader}\n   */\n  static fromBytes (bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array')\n    }\n\n    const { header, blocks } = _buffer_decoder_js__WEBPACK_IMPORTED_MODULE_0__.fromBytes(bytes)\n    return new CarBufferReader(header, blocks)\n  }\n}\n\nconst __browser = true\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvYnVmZmVyLXJlYWRlci1icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRDs7QUFFcEQ7QUFDQSxhQUFhLDRCQUE0QjtBQUN6QyxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLG9DQUFvQztBQUNqRCxhQUFhLGlDQUFpQztBQUM5QyxhQUFhLG1DQUFtQztBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksNkNBQTZDO0FBQ2pELElBQUksbUNBQW1DLEdBQUcsbUNBQW1DO0FBQzdFLElBQUksMENBQTBDO0FBQzlDLElBQUkscUNBQXFDO0FBQ3pDO0FBQ0EseUNBQXlDLGtCQUFrQjtBQUMzRCxhQUFhLGtCQUFrQjtBQUMvQixhQUFhLGtCQUFrQiw0QkFBNEIsa0JBQWtCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLHVCQUF1QjtBQUNwQyxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJCQUEyQiwyQkFBMkI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLEtBQUs7QUFDbEIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkNBQTZDLDJCQUEyQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQix1QkFBdUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLGlCQUFpQixFQUFFLHlEQUF1QjtBQUN0RDtBQUNBO0FBQ0E7O0FBRU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvQGlwbGQvY2FyL3NyYy9idWZmZXItcmVhZGVyLWJyb3dzZXIuanM/OTQwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBCdWZmZXJEZWNvZGVyIGZyb20gJy4vYnVmZmVyLWRlY29kZXIuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzJykuQ0lEfSBDSURcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYXBpLmpzJykuQmxvY2t9IEJsb2NrXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkNhckJ1ZmZlclJlYWRlcn0gSUNhckJ1ZmZlclJlYWRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5DYXJIZWFkZXJ9IENhckhlYWRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5DYXJWMkhlYWRlcn0gQ2FyVjJIZWFkZXJcbiAqL1xuXG4vKipcbiAqIFByb3ZpZGVzIGJsb2Nrc3RvcmUtbGlrZSBhY2Nlc3MgdG8gYSBDQVIuXG4gKlxuICogSW1wbGVtZW50cyB0aGUgYFJvb3RzQnVmZmVyUmVhZGVyYCBpbnRlcmZhY2U6XG4gKiB7QGxpbmsgSUNhckJ1ZmZlclJlYWRlci5nZXRSb290cyBgZ2V0Um9vdHMoKWB9LiBBbmQgdGhlIGBCbG9ja0J1ZmZlclJlYWRlcmAgaW50ZXJmYWNlOlxuICoge0BsaW5rIElDYXJCdWZmZXJSZWFkZXIuZ2V0IGBnZXQoKWB9LCB7QGxpbmsgSUNhckJ1ZmZlclJlYWRlci5oYXMgYGhhcygpYH0sXG4gKiB7QGxpbmsgSUNhckJ1ZmZlclJlYWRlci5ibG9ja3MgYGJsb2NrcygpYH0gYW5kXG4gKiB7QGxpbmsgSUNhckJ1ZmZlclJlYWRlci5jaWRzIGBjaWRzKClgfS5cbiAqXG4gKiBMb2FkIHRoaXMgY2xhc3Mgd2l0aCBlaXRoZXIgYGltcG9ydCB7IENhckJ1ZmZlclJlYWRlciB9IGZyb20gJ0BpcGxkL2Nhci9idWZmZXItcmVhZGVyJ2BcbiAqIChgY29uc3QgeyBDYXJCdWZmZXJSZWFkZXIgfSA9IHJlcXVpcmUoJ0BpcGxkL2Nhci9idWZmZXItcmVhZGVyJylgKS4gT3JcbiAqIGBpbXBvcnQgeyBDYXJCdWZmZXJSZWFkZXIgfSBmcm9tICdAaXBsZC9jYXInYCAoYGNvbnN0IHsgQ2FyQnVmZmVyUmVhZGVyIH0gPSByZXF1aXJlKCdAaXBsZC9jYXInKWApLlxuICogVGhlIGZvcm1lciB3aWxsIGxpa2VseSByZXN1bHQgaW4gc21hbGxlciBidW5kbGUgc2l6ZXMgd2hlcmUgdGhpcyBpc1xuICogaW1wb3J0YW50LlxuICpcbiAqIEBuYW1lIENhckJ1ZmZlclJlYWRlclxuICogQGNsYXNzXG4gKiBAaW1wbGVtZW50cyB7SUNhckJ1ZmZlclJlYWRlcn1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSB2ZXJzaW9uIFRoZSB2ZXJzaW9uIG51bWJlciBvZiB0aGUgQ0FSIHJlZmVyZW5jZWQgYnkgdGhpc1xuICogcmVhZGVyIChzaG91bGQgYmUgYDFgIG9yIGAyYCkuXG4gKi9cbmV4cG9ydCBjbGFzcyBDYXJCdWZmZXJSZWFkZXIge1xuICAvKipcbiAgICogQGNvbnN0cnVjdHMgQ2FyQnVmZmVyUmVhZGVyXG4gICAqIEBwYXJhbSB7Q2FySGVhZGVyfENhclYySGVhZGVyfSBoZWFkZXJcbiAgICogQHBhcmFtIHtCbG9ja1tdfSBibG9ja3NcbiAgICovXG4gIGNvbnN0cnVjdG9yIChoZWFkZXIsIGJsb2Nrcykge1xuICAgIHRoaXMuX2hlYWRlciA9IGhlYWRlclxuICAgIHRoaXMuX2Jsb2NrcyA9IGJsb2Nrc1xuICAgIHRoaXMuX2NpZHMgPSB1bmRlZmluZWRcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkge251bWJlcn0gdmVyc2lvbiBvZiB0aGUgQ0FSXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQGluc3RhbmNlXG4gICAqL1xuICBnZXQgdmVyc2lvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2hlYWRlci52ZXJzaW9uXG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBsaXN0IG9mIHJvb3RzIGRlZmluZWQgYnkgdGhlIENBUiByZWZlcmVuY2VkIGJ5IHRoaXMgcmVhZGVyLiBNYXkgYmVcbiAgICogemVybyBvciBtb3JlIGBDSURgcy5cbiAgICpcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQGluc3RhbmNlXG4gICAqIEByZXR1cm5zIHtDSURbXX1cbiAgICovXG4gIGdldFJvb3RzICgpIHtcbiAgICByZXR1cm4gdGhpcy5faGVhZGVyLnJvb3RzXG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgd2hldGhlciBhIGdpdmVuIGBDSURgIGV4aXN0cyB3aXRoaW4gdGhlIENBUiByZWZlcmVuY2VkIGJ5IHRoaXNcbiAgICogcmVhZGVyLlxuICAgKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIENhckJ1ZmZlclJlYWRlclxuICAgKiBAaW5zdGFuY2VcbiAgICogQHBhcmFtIHtDSUR9IGtleVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICovXG4gIGhhcyAoa2V5KSB7XG4gICAgcmV0dXJuIHRoaXMuX2Jsb2Nrcy5zb21lKGIgPT4gYi5jaWQuZXF1YWxzKGtleSkpXG4gIH1cblxuICAvKipcbiAgICogRmV0Y2ggYSBgQmxvY2tgIChhIGB7IGNpZDpDSUQsIGJ5dGVzOlVpbnQ4QXJyYXkgfWAgcGFpcikgZnJvbSB0aGUgQ0FSXG4gICAqIHJlZmVyZW5jZWQgYnkgdGhpcyByZWFkZXIgbWF0Y2hpbmcgdGhlIHByb3ZpZGVkIGBDSURgLiBJbiB0aGUgY2FzZSB3aGVyZVxuICAgKiB0aGUgcHJvdmlkZWQgYENJRGAgZG9lc24ndCBleGlzdCB3aXRoaW4gdGhlIENBUiwgYHVuZGVmaW5lZGAgd2lsbCBiZVxuICAgKiByZXR1cm5lZC5cbiAgICpcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQGluc3RhbmNlXG4gICAqIEBwYXJhbSB7Q0lEfSBrZXlcbiAgICogQHJldHVybnMge0Jsb2NrIHwgdW5kZWZpbmVkfVxuICAgKi9cbiAgZ2V0IChrZXkpIHtcbiAgICByZXR1cm4gdGhpcy5fYmxvY2tzLmZpbmQoYiA9PiBiLmNpZC5lcXVhbHMoa2V5KSlcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgYEJsb2NrW11gIG9mIHRoZSBgQmxvY2tgcyAoYHsgY2lkOkNJRCwgYnl0ZXM6VWludDhBcnJheSB9YCBwYWlycykgY29udGFpbmVkIHdpdGhpblxuICAgKiB0aGUgQ0FSIHJlZmVyZW5jZWQgYnkgdGhpcyByZWFkZXIuXG4gICAqXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbWVtYmVyb2YgQ2FyQnVmZmVyUmVhZGVyXG4gICAqIEBpbnN0YW5jZVxuICAgKiBAcmV0dXJucyB7QmxvY2tbXX1cbiAgICovXG4gIGJsb2NrcyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Jsb2Nrc1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBgQ0lEW11gIG9mIHRoZSBgQ0lEYHMgY29udGFpbmVkIHdpdGhpbiB0aGUgQ0FSIHJlZmVyZW5jZWQgYnkgdGhpcyByZWFkZXIuXG4gICAqXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbWVtYmVyb2YgQ2FyQnVmZmVyUmVhZGVyXG4gICAqIEBpbnN0YW5jZVxuICAgKiBAcmV0dXJucyB7Q0lEW119XG4gICAqL1xuICBjaWRzICgpIHtcbiAgICBpZiAoIXRoaXMuX2NpZHMpIHtcbiAgICAgIHRoaXMuX2NpZHMgPSB0aGlzLl9ibG9ja3MubWFwKGIgPT4gYi5jaWQpXG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9jaWRzXG4gIH1cblxuICAvKipcbiAgICogSW5zdGFudGlhdGUgYSB7QGxpbmsgQ2FyQnVmZmVyUmVhZGVyfSBmcm9tIGEgYFVpbnQ4QXJyYXlgIGJsb2IuIFRoaXMgcGVyZm9ybXMgYVxuICAgKiBkZWNvZGUgZnVsbHkgaW4gbWVtb3J5IGFuZCBtYWludGFpbnMgdGhlIGRlY29kZWQgc3RhdGUgaW4gbWVtb3J5IGZvciBmdWxsXG4gICAqIGFjY2VzcyB0byB0aGUgZGF0YSB2aWEgdGhlIGBDYXJSZWFkZXJgIEFQSS5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyb2YgQ2FyQnVmZmVyUmVhZGVyXG4gICAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAgICogQHJldHVybnMge0NhckJ1ZmZlclJlYWRlcn1cbiAgICovXG4gIHN0YXRpYyBmcm9tQnl0ZXMgKGJ5dGVzKSB7XG4gICAgaWYgKCEoYnl0ZXMgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZnJvbUJ5dGVzKCkgcmVxdWlyZXMgYSBVaW50OEFycmF5JylcbiAgICB9XG5cbiAgICBjb25zdCB7IGhlYWRlciwgYmxvY2tzIH0gPSBCdWZmZXJEZWNvZGVyLmZyb21CeXRlcyhieXRlcylcbiAgICByZXR1cm4gbmV3IENhckJ1ZmZlclJlYWRlcihoZWFkZXIsIGJsb2NrcylcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgX19icm93c2VyID0gdHJ1ZVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-reader-browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-reader.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-reader.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarBufferReader: () => (/* binding */ CarBufferReader),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var _buffer_reader_browser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer-reader-browser.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-reader-browser.js\");\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./api.js').CarBufferReader} ICarBufferReader\n */\n\nconst fsread = fs__WEBPACK_IMPORTED_MODULE_0__.readSync\n\n/**\n * @class\n * @implements {ICarBufferReader}\n */\nclass CarBufferReader extends _buffer_reader_browser_js__WEBPACK_IMPORTED_MODULE_1__.CarBufferReader {\n  /**\n   * Reads a block directly from a file descriptor for an open CAR file. This\n   * function is **only available in Node.js** and not a browser environment.\n   *\n   * This function can be used in connection with {@link CarIndexer} which emits\n   * the `BlockIndex` objects that are required by this function.\n   *\n   * The user is responsible for opening and closing the file used in this call.\n   *\n   * @static\n   * @memberof CarBufferReader\n   * @param {number} fd - A file descriptor from the\n   * Node.js `fs` module. An integer, from `fs.open()`.\n   * @param {BlockIndex} blockIndex - An index pointing to the location of the\n   * Block required. This `BlockIndex` should take the form:\n   * `{cid:CID, blockLength:number, blockOffset:number}`.\n   * @returns {Block} A `{ cid:CID, bytes:Uint8Array }` pair.\n   */\n  static readRaw (fd, blockIndex) {\n    const { cid, blockLength, blockOffset } = blockIndex\n    const bytes = new Uint8Array(blockLength)\n    let read\n    if (typeof fd === 'number') {\n      read = fsread(fd, bytes, 0, blockLength, blockOffset)\n    } else {\n      throw new TypeError('Bad fd')\n    }\n    if (read !== blockLength) {\n      throw new Error(`Failed to read entire block (${read} instead of ${blockLength})`)\n    }\n    return { cid, bytes }\n  }\n}\n\nconst __browser = false\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvYnVmZmVyLXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1CO0FBQ21FOztBQUV0RjtBQUNBLGFBQWEsMEJBQTBCO0FBQ3ZDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsb0NBQW9DO0FBQ2pEOztBQUVBLGVBQWUsd0NBQVc7O0FBRTFCO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTyw4QkFBOEIsc0VBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGtCQUFrQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQSxhQUFhLFlBQVk7QUFDekI7QUFDQSxPQUFPLGdEQUFnRDtBQUN2RCxlQUFlLE9BQU8sS0FBSywyQkFBMkI7QUFDdEQ7QUFDQTtBQUNBLFlBQVksZ0NBQWdDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNLGFBQWEsWUFBWTtBQUNyRjtBQUNBLGFBQWE7QUFDYjtBQUNBOztBQUVPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvYnVmZmVyLXJlYWRlci5qcz9mNDk1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcydcbmltcG9ydCB7IENhckJ1ZmZlclJlYWRlciBhcyBCcm93c2VyQ2FyQnVmZmVyUmVhZGVyIH0gZnJvbSAnLi9idWZmZXItcmVhZGVyLWJyb3dzZXIuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja30gQmxvY2tcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYXBpLmpzJykuQmxvY2tJbmRleH0gQmxvY2tJbmRleFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5DYXJCdWZmZXJSZWFkZXJ9IElDYXJCdWZmZXJSZWFkZXJcbiAqL1xuXG5jb25zdCBmc3JlYWQgPSBmcy5yZWFkU3luY1xuXG4vKipcbiAqIEBjbGFzc1xuICogQGltcGxlbWVudHMge0lDYXJCdWZmZXJSZWFkZXJ9XG4gKi9cbmV4cG9ydCBjbGFzcyBDYXJCdWZmZXJSZWFkZXIgZXh0ZW5kcyBCcm93c2VyQ2FyQnVmZmVyUmVhZGVyIHtcbiAgLyoqXG4gICAqIFJlYWRzIGEgYmxvY2sgZGlyZWN0bHkgZnJvbSBhIGZpbGUgZGVzY3JpcHRvciBmb3IgYW4gb3BlbiBDQVIgZmlsZS4gVGhpc1xuICAgKiBmdW5jdGlvbiBpcyAqKm9ubHkgYXZhaWxhYmxlIGluIE5vZGUuanMqKiBhbmQgbm90IGEgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAgICpcbiAgICogVGhpcyBmdW5jdGlvbiBjYW4gYmUgdXNlZCBpbiBjb25uZWN0aW9uIHdpdGgge0BsaW5rIENhckluZGV4ZXJ9IHdoaWNoIGVtaXRzXG4gICAqIHRoZSBgQmxvY2tJbmRleGAgb2JqZWN0cyB0aGF0IGFyZSByZXF1aXJlZCBieSB0aGlzIGZ1bmN0aW9uLlxuICAgKlxuICAgKiBUaGUgdXNlciBpcyByZXNwb25zaWJsZSBmb3Igb3BlbmluZyBhbmQgY2xvc2luZyB0aGUgZmlsZSB1c2VkIGluIHRoaXMgY2FsbC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyb2YgQ2FyQnVmZmVyUmVhZGVyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBmZCAtIEEgZmlsZSBkZXNjcmlwdG9yIGZyb20gdGhlXG4gICAqIE5vZGUuanMgYGZzYCBtb2R1bGUuIEFuIGludGVnZXIsIGZyb20gYGZzLm9wZW4oKWAuXG4gICAqIEBwYXJhbSB7QmxvY2tJbmRleH0gYmxvY2tJbmRleCAtIEFuIGluZGV4IHBvaW50aW5nIHRvIHRoZSBsb2NhdGlvbiBvZiB0aGVcbiAgICogQmxvY2sgcmVxdWlyZWQuIFRoaXMgYEJsb2NrSW5kZXhgIHNob3VsZCB0YWtlIHRoZSBmb3JtOlxuICAgKiBge2NpZDpDSUQsIGJsb2NrTGVuZ3RoOm51bWJlciwgYmxvY2tPZmZzZXQ6bnVtYmVyfWAuXG4gICAqIEByZXR1cm5zIHtCbG9ja30gQSBgeyBjaWQ6Q0lELCBieXRlczpVaW50OEFycmF5IH1gIHBhaXIuXG4gICAqL1xuICBzdGF0aWMgcmVhZFJhdyAoZmQsIGJsb2NrSW5kZXgpIHtcbiAgICBjb25zdCB7IGNpZCwgYmxvY2tMZW5ndGgsIGJsb2NrT2Zmc2V0IH0gPSBibG9ja0luZGV4XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShibG9ja0xlbmd0aClcbiAgICBsZXQgcmVhZFxuICAgIGlmICh0eXBlb2YgZmQgPT09ICdudW1iZXInKSB7XG4gICAgICByZWFkID0gZnNyZWFkKGZkLCBieXRlcywgMCwgYmxvY2tMZW5ndGgsIGJsb2NrT2Zmc2V0KVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdCYWQgZmQnKVxuICAgIH1cbiAgICBpZiAocmVhZCAhPT0gYmxvY2tMZW5ndGgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHJlYWQgZW50aXJlIGJsb2NrICgke3JlYWR9IGluc3RlYWQgb2YgJHtibG9ja0xlbmd0aH0pYClcbiAgICB9XG4gICAgcmV0dXJuIHsgY2lkLCBieXRlcyB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IF9fYnJvd3NlciA9IGZhbHNlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-writer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-writer.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBlock: () => (/* binding */ addBlock),\n/* harmony export */   addRoot: () => (/* binding */ addRoot),\n/* harmony export */   blockLength: () => (/* binding */ blockLength),\n/* harmony export */   calculateHeaderLength: () => (/* binding */ calculateHeaderLength),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   createWriter: () => (/* binding */ createWriter),\n/* harmony export */   estimateHeaderLength: () => (/* binding */ estimateHeaderLength),\n/* harmony export */   headerLength: () => (/* binding */ headerLength),\n/* harmony export */   resizeHeader: () => (/* binding */ resizeHeader)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/cborg.js\");\n/* harmony import */ var cborg_length__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cborg/length */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/length.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n\n\n\n\n\n/**\n * @typedef {import('./api.js').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').CarBufferWriter} Writer\n * @typedef {import('./api.js').CarBufferWriterOptions} Options\n * @typedef {import('./coding.js').CarEncoder} CarEncoder\n */\n\n/**\n * A simple CAR writer that writes to a pre-allocated buffer.\n *\n * @class\n * @name CarBufferWriter\n * @implements {Writer}\n */\nclass CarBufferWriter {\n  /**\n   * @param {Uint8Array} bytes\n   * @param {number} headerSize\n   */\n  constructor (bytes, headerSize) {\n    /** @readonly */\n    this.bytes = bytes\n    this.byteOffset = headerSize\n\n    /**\n     * @readonly\n     * @type {CID[]}\n     */\n    this.roots = []\n    this.headerSize = headerSize\n  }\n\n  /**\n   * Add a root to this writer, to be used to create a header when the CAR is\n   * finalized with {@link CarBufferWriter.close `close()`}\n   *\n   * @param {CID} root\n   * @param {{resize?:boolean}} [options]\n   * @returns {CarBufferWriter}\n   */\n  addRoot (root, options) {\n    addRoot(this, root, options)\n    return this\n  }\n\n  /**\n   * Write a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) to the archive.\n   * Throws if there is not enough capacity.\n   *\n   * @param {Block} block - A `{ cid:CID, bytes:Uint8Array }` pair.\n   * @returns {CarBufferWriter}\n   */\n  write (block) {\n    addBlock(this, block)\n    return this\n  }\n\n  /**\n   * Finalize the CAR and return it as a `Uint8Array`.\n   *\n   * @param {object} [options]\n   * @param {boolean} [options.resize]\n   * @returns {Uint8Array}\n   */\n  close (options) {\n    return close(this, options)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {CID} root\n * @param {{resize?:boolean}} [options]\n */\nconst addRoot = (writer, root, options = {}) => {\n  const { resize = false } = options\n  const { bytes, headerSize, byteOffset, roots } = writer\n  writer.roots.push(root)\n  const size = headerLength(writer)\n  // If there is not enough space for the new root\n  if (size > headerSize) {\n    // Check if we root would fit if we were to resize the head.\n    if (size - headerSize + byteOffset < bytes.byteLength) {\n      // If resize is enabled resize head\n      if (resize) {\n        resizeHeader(writer, size)\n      // otherwise remove head and throw an error suggesting to resize\n      } else {\n        roots.pop()\n        throw new RangeError(`Header of size ${headerSize} has no capacity for new root ${root}.\n  However there is a space in the buffer and you could call addRoot(root, { resize: root }) to resize header to make a space for this root.`)\n      }\n    // If head would not fit even with resize pop new root and throw error\n    } else {\n      roots.pop()\n      throw new RangeError(`Buffer has no capacity for a new root ${root}`)\n    }\n  }\n}\n\n/**\n * Calculates number of bytes required for storing given block in CAR. Useful in\n * estimating size of an `ArrayBuffer` for the `CarBufferWriter`.\n *\n * @name CarBufferWriter.blockLength(Block)\n * @param {Block} block\n * @returns {number}\n */\nconst blockLength = ({ cid, bytes }) => {\n  const size = cid.bytes.byteLength + bytes.byteLength\n  return varint__WEBPACK_IMPORTED_MODULE_3__.encodingLength(size) + size\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {Block} block\n */\nconst addBlock = (writer, { cid, bytes }) => {\n  const byteLength = cid.bytes.byteLength + bytes.byteLength\n  const size = varint__WEBPACK_IMPORTED_MODULE_3__.encode(byteLength)\n  if (writer.byteOffset + size.length + byteLength > writer.bytes.byteLength) {\n    throw new RangeError('Buffer has no capacity for this block')\n  } else {\n    writeBytes(writer, size)\n    writeBytes(writer, cid.bytes)\n    writeBytes(writer, bytes)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {object} [options]\n * @param {boolean} [options.resize]\n */\nconst close = (writer, options = {}) => {\n  const { resize = false } = options\n  const { roots, bytes, byteOffset, headerSize } = writer\n\n  const headerBytes = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__.encode({ version: 1, roots })\n  const varintBytes = varint__WEBPACK_IMPORTED_MODULE_3__.encode(headerBytes.length)\n\n  const size = varintBytes.length + headerBytes.byteLength\n  const offset = headerSize - size\n\n  // If header size estimate was accurate we just write header and return\n  // view into buffer.\n  if (offset === 0) {\n    writeHeader(writer, varintBytes, headerBytes)\n    return bytes.subarray(0, byteOffset)\n    // If header was overestimated and `{resize: true}` is passed resize header\n  } else if (resize) {\n    resizeHeader(writer, size)\n    writeHeader(writer, varintBytes, headerBytes)\n    return bytes.subarray(0, writer.byteOffset)\n  } else {\n    throw new RangeError(`Header size was overestimated.\nYou can use close({ resize: true }) to resize header`)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {number} byteLength\n */\nconst resizeHeader = (writer, byteLength) => {\n  const { bytes, headerSize } = writer\n  // Move data section to a new offset\n  bytes.set(bytes.subarray(headerSize, writer.byteOffset), byteLength)\n  // Update header size & byteOffset\n  writer.byteOffset += byteLength - headerSize\n  writer.headerSize = byteLength\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {number[]|Uint8Array} bytes\n */\n\nconst writeBytes = (writer, bytes) => {\n  writer.bytes.set(bytes, writer.byteOffset)\n  writer.byteOffset += bytes.length\n}\n/**\n * @param {{bytes:Uint8Array}} writer\n * @param {number[]} varint\n * @param {Uint8Array} header\n */\nconst writeHeader = ({ bytes }, varint, header) => {\n  bytes.set(varint)\n  bytes.set(header, varint.length)\n}\n\nconst headerPreludeTokens = [\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.map, 2),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.string, 'version'),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.uint, 1),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.string, 'roots')\n]\n\nconst CID_TAG = new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.tag, 42)\n\n/**\n * Calculates header size given the array of byteLength for roots.\n *\n * @name CarBufferWriter.calculateHeaderLength(rootLengths)\n * @param {number[]} rootLengths\n * @returns {number}\n */\nconst calculateHeaderLength = (rootLengths) => {\n  const tokens = [...headerPreludeTokens]\n  tokens.push(new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.array, rootLengths.length))\n  for (const rootLength of rootLengths) {\n    tokens.push(CID_TAG)\n    tokens.push(new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, { length: rootLength + 1 }))\n  }\n  const length = (0,cborg_length__WEBPACK_IMPORTED_MODULE_2__.tokensToLength)(tokens) // no options needed here because we have simple tokens\n  return varint__WEBPACK_IMPORTED_MODULE_3__.encodingLength(length) + length\n}\n\n/**\n * Calculates header size given the array of roots.\n *\n * @name CarBufferWriter.headerLength({ roots })\n * @param {object} options\n * @param {CID[]} options.roots\n * @returns {number}\n */\nconst headerLength = ({ roots }) =>\n  calculateHeaderLength(roots.map(cid => cid.bytes.byteLength))\n\n/**\n * Estimates header size given a count of the roots and the expected byte length\n * of the root CIDs. The default length works for a standard CIDv1 with a\n * single-byte multihash code, such as SHA2-256 (i.e. the most common CIDv1).\n *\n * @name CarBufferWriter.estimateHeaderLength(rootCount[, rootByteLength])\n * @param {number} rootCount\n * @param {number} [rootByteLength]\n * @returns {number}\n */\nconst estimateHeaderLength = (rootCount, rootByteLength = 36) =>\n  calculateHeaderLength(new Array(rootCount).fill(rootByteLength))\n\n/**\n * Creates synchronous CAR writer that can be used to encode blocks into a given\n * buffer. Optionally you could pass `byteOffset` and `byteLength` to specify a\n * range inside buffer to write into. If car file is going to have `roots` you\n * need to either pass them under `options.roots` (from which header size will\n * be calculated) or provide `options.headerSize` to allocate required space\n * in the buffer. You may also provide known `roots` and `headerSize` to\n * allocate space for the roots that may not be known ahead of time.\n *\n * Note: Incorrect `headerSize` may lead to copying bytes inside a buffer\n * which will have a negative impact on performance.\n *\n * @name CarBufferWriter.createWriter(buffer[, options])\n * @param {ArrayBuffer} buffer\n * @param {object} [options]\n * @param {CID[]} [options.roots]\n * @param {number} [options.byteOffset]\n * @param {number} [options.byteLength]\n * @param {number} [options.headerSize]\n * @returns {CarBufferWriter}\n */\nconst createWriter = (buffer, options = {}) => {\n  const {\n    roots = [],\n    byteOffset = 0,\n    byteLength = buffer.byteLength,\n    headerSize = headerLength({ roots })\n  } = options\n  const bytes = new Uint8Array(buffer, byteOffset, byteLength)\n\n  const writer = new CarBufferWriter(bytes, headerSize)\n  for (const root of roots) {\n    writer.addRoot(root)\n  }\n\n  return writer\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvYnVmZmVyLXdyaXRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQ0g7QUFDVTtBQUNsQjs7QUFFM0I7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLG9DQUFvQztBQUNqRCxhQUFhLDJDQUEyQztBQUN4RCxhQUFhLGtDQUFrQztBQUMvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxhQUFhLEtBQUs7QUFDbEIsY0FBYyxrQkFBa0I7QUFDaEMsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkIsMkJBQTJCO0FBQ3REO0FBQ0E7QUFDQSxhQUFhLE9BQU8sYUFBYSwyQkFBMkI7QUFDNUQsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsS0FBSztBQUNoQixZQUFZLGtCQUFrQjtBQUM5QjtBQUNPLDJDQUEyQztBQUNsRCxVQUFVLGlCQUFpQjtBQUMzQixVQUFVLHVDQUF1QztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLCtDQUErQyxZQUFZLCtCQUErQixLQUFLO0FBQy9GLDRFQUE0RSxjQUFjO0FBQzFGO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxvRUFBb0UsS0FBSztBQUN6RTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDTyx1QkFBdUIsWUFBWTtBQUMxQztBQUNBLFNBQVMsa0RBQXFCO0FBQzlCOztBQUVBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxPQUFPO0FBQ2xCO0FBQ08sNEJBQTRCLFlBQVk7QUFDL0M7QUFDQSxlQUFlLDBDQUFhO0FBQzVCO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEI7QUFDTyxtQ0FBbUM7QUFDMUMsVUFBVSxpQkFBaUI7QUFDM0IsVUFBVSx1Q0FBdUM7O0FBRWpELHNCQUFzQixrREFBVyxHQUFHLG1CQUFtQjtBQUN2RCxzQkFBc0IsMENBQWE7O0FBRW5DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxhQUFhO0FBQ3RELElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBOztBQUVBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxRQUFRO0FBQ25CO0FBQ087QUFDUCxVQUFVLG9CQUFvQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLHFCQUFxQjtBQUNoQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsWUFBWTtBQUN2QjtBQUNBLHVCQUF1QixPQUFPO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0sd0NBQUssQ0FBQyx1Q0FBSTtBQUNoQixNQUFNLHdDQUFLLENBQUMsdUNBQUk7QUFDaEIsTUFBTSx3Q0FBSyxDQUFDLHVDQUFJO0FBQ2hCLE1BQU0sd0NBQUssQ0FBQyx1Q0FBSTtBQUNoQjs7QUFFQSxvQkFBb0Isd0NBQUssQ0FBQyx1Q0FBSTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLGtCQUFrQix3Q0FBSyxDQUFDLHVDQUFJO0FBQzVCO0FBQ0E7QUFDQSxvQkFBb0Isd0NBQUssQ0FBQyx1Q0FBSSxVQUFVLHdCQUF3QjtBQUNoRTtBQUNBLGlCQUFpQiw0REFBYztBQUMvQixTQUFTLGtEQUFxQjtBQUM5Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsT0FBTztBQUMvQyxXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNPLHdCQUF3QixPQUFPO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPLDBDQUEwQztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxPQUFPO0FBQ3ZDLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvYnVmZmVyLXdyaXRlci5qcz82MDkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENCT1IgZnJvbSAnQGlwbGQvZGFnLWNib3InXG5pbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJ2Nib3JnJ1xuaW1wb3J0IHsgdG9rZW5zVG9MZW5ndGggfSBmcm9tICdjYm9yZy9sZW5ndGgnXG5pbXBvcnQgdmFyaW50IGZyb20gJ3ZhcmludCdcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkNJRH0gQ0lEXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkJsb2NrfSBCbG9ja1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5DYXJCdWZmZXJXcml0ZXJ9IFdyaXRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5DYXJCdWZmZXJXcml0ZXJPcHRpb25zfSBPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkNhckVuY29kZXJ9IENhckVuY29kZXJcbiAqL1xuXG4vKipcbiAqIEEgc2ltcGxlIENBUiB3cml0ZXIgdGhhdCB3cml0ZXMgdG8gYSBwcmUtYWxsb2NhdGVkIGJ1ZmZlci5cbiAqXG4gKiBAY2xhc3NcbiAqIEBuYW1lIENhckJ1ZmZlcldyaXRlclxuICogQGltcGxlbWVudHMge1dyaXRlcn1cbiAqL1xuY2xhc3MgQ2FyQnVmZmVyV3JpdGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAgICogQHBhcmFtIHtudW1iZXJ9IGhlYWRlclNpemVcbiAgICovXG4gIGNvbnN0cnVjdG9yIChieXRlcywgaGVhZGVyU2l6ZSkge1xuICAgIC8qKiBAcmVhZG9ubHkgKi9cbiAgICB0aGlzLmJ5dGVzID0gYnl0ZXNcbiAgICB0aGlzLmJ5dGVPZmZzZXQgPSBoZWFkZXJTaXplXG5cbiAgICAvKipcbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7Q0lEW119XG4gICAgICovXG4gICAgdGhpcy5yb290cyA9IFtdXG4gICAgdGhpcy5oZWFkZXJTaXplID0gaGVhZGVyU2l6ZVxuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBhIHJvb3QgdG8gdGhpcyB3cml0ZXIsIHRvIGJlIHVzZWQgdG8gY3JlYXRlIGEgaGVhZGVyIHdoZW4gdGhlIENBUiBpc1xuICAgKiBmaW5hbGl6ZWQgd2l0aCB7QGxpbmsgQ2FyQnVmZmVyV3JpdGVyLmNsb3NlIGBjbG9zZSgpYH1cbiAgICpcbiAgICogQHBhcmFtIHtDSUR9IHJvb3RcbiAgICogQHBhcmFtIHt7cmVzaXplPzpib29sZWFufX0gW29wdGlvbnNdXG4gICAqIEByZXR1cm5zIHtDYXJCdWZmZXJXcml0ZXJ9XG4gICAqL1xuICBhZGRSb290IChyb290LCBvcHRpb25zKSB7XG4gICAgYWRkUm9vdCh0aGlzLCByb290LCBvcHRpb25zKVxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICAvKipcbiAgICogV3JpdGUgYSBgQmxvY2tgIChhIGB7IGNpZDpDSUQsIGJ5dGVzOlVpbnQ4QXJyYXkgfWAgcGFpcikgdG8gdGhlIGFyY2hpdmUuXG4gICAqIFRocm93cyBpZiB0aGVyZSBpcyBub3QgZW5vdWdoIGNhcGFjaXR5LlxuICAgKlxuICAgKiBAcGFyYW0ge0Jsb2NrfSBibG9jayAtIEEgYHsgY2lkOkNJRCwgYnl0ZXM6VWludDhBcnJheSB9YCBwYWlyLlxuICAgKiBAcmV0dXJucyB7Q2FyQnVmZmVyV3JpdGVyfVxuICAgKi9cbiAgd3JpdGUgKGJsb2NrKSB7XG4gICAgYWRkQmxvY2sodGhpcywgYmxvY2spXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5hbGl6ZSB0aGUgQ0FSIGFuZCByZXR1cm4gaXQgYXMgYSBgVWludDhBcnJheWAuXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5yZXNpemVdXG4gICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgKi9cbiAgY2xvc2UgKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gY2xvc2UodGhpcywgb3B0aW9ucylcbiAgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Q2FyQnVmZmVyV3JpdGVyfSB3cml0ZXJcbiAqIEBwYXJhbSB7Q0lEfSByb290XG4gKiBAcGFyYW0ge3tyZXNpemU/OmJvb2xlYW59fSBbb3B0aW9uc11cbiAqL1xuZXhwb3J0IGNvbnN0IGFkZFJvb3QgPSAod3JpdGVyLCByb290LCBvcHRpb25zID0ge30pID0+IHtcbiAgY29uc3QgeyByZXNpemUgPSBmYWxzZSB9ID0gb3B0aW9uc1xuICBjb25zdCB7IGJ5dGVzLCBoZWFkZXJTaXplLCBieXRlT2Zmc2V0LCByb290cyB9ID0gd3JpdGVyXG4gIHdyaXRlci5yb290cy5wdXNoKHJvb3QpXG4gIGNvbnN0IHNpemUgPSBoZWFkZXJMZW5ndGgod3JpdGVyKVxuICAvLyBJZiB0aGVyZSBpcyBub3QgZW5vdWdoIHNwYWNlIGZvciB0aGUgbmV3IHJvb3RcbiAgaWYgKHNpemUgPiBoZWFkZXJTaXplKSB7XG4gICAgLy8gQ2hlY2sgaWYgd2Ugcm9vdCB3b3VsZCBmaXQgaWYgd2Ugd2VyZSB0byByZXNpemUgdGhlIGhlYWQuXG4gICAgaWYgKHNpemUgLSBoZWFkZXJTaXplICsgYnl0ZU9mZnNldCA8IGJ5dGVzLmJ5dGVMZW5ndGgpIHtcbiAgICAgIC8vIElmIHJlc2l6ZSBpcyBlbmFibGVkIHJlc2l6ZSBoZWFkXG4gICAgICBpZiAocmVzaXplKSB7XG4gICAgICAgIHJlc2l6ZUhlYWRlcih3cml0ZXIsIHNpemUpXG4gICAgICAvLyBvdGhlcndpc2UgcmVtb3ZlIGhlYWQgYW5kIHRocm93IGFuIGVycm9yIHN1Z2dlc3RpbmcgdG8gcmVzaXplXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByb290cy5wb3AoKVxuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihgSGVhZGVyIG9mIHNpemUgJHtoZWFkZXJTaXplfSBoYXMgbm8gY2FwYWNpdHkgZm9yIG5ldyByb290ICR7cm9vdH0uXG4gIEhvd2V2ZXIgdGhlcmUgaXMgYSBzcGFjZSBpbiB0aGUgYnVmZmVyIGFuZCB5b3UgY291bGQgY2FsbCBhZGRSb290KHJvb3QsIHsgcmVzaXplOiByb290IH0pIHRvIHJlc2l6ZSBoZWFkZXIgdG8gbWFrZSBhIHNwYWNlIGZvciB0aGlzIHJvb3QuYClcbiAgICAgIH1cbiAgICAvLyBJZiBoZWFkIHdvdWxkIG5vdCBmaXQgZXZlbiB3aXRoIHJlc2l6ZSBwb3AgbmV3IHJvb3QgYW5kIHRocm93IGVycm9yXG4gICAgfSBlbHNlIHtcbiAgICAgIHJvb3RzLnBvcCgpXG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihgQnVmZmVyIGhhcyBubyBjYXBhY2l0eSBmb3IgYSBuZXcgcm9vdCAke3Jvb3R9YClcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBDYWxjdWxhdGVzIG51bWJlciBvZiBieXRlcyByZXF1aXJlZCBmb3Igc3RvcmluZyBnaXZlbiBibG9jayBpbiBDQVIuIFVzZWZ1bCBpblxuICogZXN0aW1hdGluZyBzaXplIG9mIGFuIGBBcnJheUJ1ZmZlcmAgZm9yIHRoZSBgQ2FyQnVmZmVyV3JpdGVyYC5cbiAqXG4gKiBAbmFtZSBDYXJCdWZmZXJXcml0ZXIuYmxvY2tMZW5ndGgoQmxvY2spXG4gKiBAcGFyYW0ge0Jsb2NrfSBibG9ja1xuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGNvbnN0IGJsb2NrTGVuZ3RoID0gKHsgY2lkLCBieXRlcyB9KSA9PiB7XG4gIGNvbnN0IHNpemUgPSBjaWQuYnl0ZXMuYnl0ZUxlbmd0aCArIGJ5dGVzLmJ5dGVMZW5ndGhcbiAgcmV0dXJuIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKSArIHNpemVcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0NhckJ1ZmZlcldyaXRlcn0gd3JpdGVyXG4gKiBAcGFyYW0ge0Jsb2NrfSBibG9ja1xuICovXG5leHBvcnQgY29uc3QgYWRkQmxvY2sgPSAod3JpdGVyLCB7IGNpZCwgYnl0ZXMgfSkgPT4ge1xuICBjb25zdCBieXRlTGVuZ3RoID0gY2lkLmJ5dGVzLmJ5dGVMZW5ndGggKyBieXRlcy5ieXRlTGVuZ3RoXG4gIGNvbnN0IHNpemUgPSB2YXJpbnQuZW5jb2RlKGJ5dGVMZW5ndGgpXG4gIGlmICh3cml0ZXIuYnl0ZU9mZnNldCArIHNpemUubGVuZ3RoICsgYnl0ZUxlbmd0aCA+IHdyaXRlci5ieXRlcy5ieXRlTGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBoYXMgbm8gY2FwYWNpdHkgZm9yIHRoaXMgYmxvY2snKVxuICB9IGVsc2Uge1xuICAgIHdyaXRlQnl0ZXMod3JpdGVyLCBzaXplKVxuICAgIHdyaXRlQnl0ZXMod3JpdGVyLCBjaWQuYnl0ZXMpXG4gICAgd3JpdGVCeXRlcyh3cml0ZXIsIGJ5dGVzKVxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtDYXJCdWZmZXJXcml0ZXJ9IHdyaXRlclxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5yZXNpemVdXG4gKi9cbmV4cG9ydCBjb25zdCBjbG9zZSA9ICh3cml0ZXIsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCB7IHJlc2l6ZSA9IGZhbHNlIH0gPSBvcHRpb25zXG4gIGNvbnN0IHsgcm9vdHMsIGJ5dGVzLCBieXRlT2Zmc2V0LCBoZWFkZXJTaXplIH0gPSB3cml0ZXJcblxuICBjb25zdCBoZWFkZXJCeXRlcyA9IENCT1IuZW5jb2RlKHsgdmVyc2lvbjogMSwgcm9vdHMgfSlcbiAgY29uc3QgdmFyaW50Qnl0ZXMgPSB2YXJpbnQuZW5jb2RlKGhlYWRlckJ5dGVzLmxlbmd0aClcblxuICBjb25zdCBzaXplID0gdmFyaW50Qnl0ZXMubGVuZ3RoICsgaGVhZGVyQnl0ZXMuYnl0ZUxlbmd0aFxuICBjb25zdCBvZmZzZXQgPSBoZWFkZXJTaXplIC0gc2l6ZVxuXG4gIC8vIElmIGhlYWRlciBzaXplIGVzdGltYXRlIHdhcyBhY2N1cmF0ZSB3ZSBqdXN0IHdyaXRlIGhlYWRlciBhbmQgcmV0dXJuXG4gIC8vIHZpZXcgaW50byBidWZmZXIuXG4gIGlmIChvZmZzZXQgPT09IDApIHtcbiAgICB3cml0ZUhlYWRlcih3cml0ZXIsIHZhcmludEJ5dGVzLCBoZWFkZXJCeXRlcylcbiAgICByZXR1cm4gYnl0ZXMuc3ViYXJyYXkoMCwgYnl0ZU9mZnNldClcbiAgICAvLyBJZiBoZWFkZXIgd2FzIG92ZXJlc3RpbWF0ZWQgYW5kIGB7cmVzaXplOiB0cnVlfWAgaXMgcGFzc2VkIHJlc2l6ZSBoZWFkZXJcbiAgfSBlbHNlIGlmIChyZXNpemUpIHtcbiAgICByZXNpemVIZWFkZXIod3JpdGVyLCBzaXplKVxuICAgIHdyaXRlSGVhZGVyKHdyaXRlciwgdmFyaW50Qnl0ZXMsIGhlYWRlckJ5dGVzKVxuICAgIHJldHVybiBieXRlcy5zdWJhcnJheSgwLCB3cml0ZXIuYnl0ZU9mZnNldClcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihgSGVhZGVyIHNpemUgd2FzIG92ZXJlc3RpbWF0ZWQuXG5Zb3UgY2FuIHVzZSBjbG9zZSh7IHJlc2l6ZTogdHJ1ZSB9KSB0byByZXNpemUgaGVhZGVyYClcbiAgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Q2FyQnVmZmVyV3JpdGVyfSB3cml0ZXJcbiAqIEBwYXJhbSB7bnVtYmVyfSBieXRlTGVuZ3RoXG4gKi9cbmV4cG9ydCBjb25zdCByZXNpemVIZWFkZXIgPSAod3JpdGVyLCBieXRlTGVuZ3RoKSA9PiB7XG4gIGNvbnN0IHsgYnl0ZXMsIGhlYWRlclNpemUgfSA9IHdyaXRlclxuICAvLyBNb3ZlIGRhdGEgc2VjdGlvbiB0byBhIG5ldyBvZmZzZXRcbiAgYnl0ZXMuc2V0KGJ5dGVzLnN1YmFycmF5KGhlYWRlclNpemUsIHdyaXRlci5ieXRlT2Zmc2V0KSwgYnl0ZUxlbmd0aClcbiAgLy8gVXBkYXRlIGhlYWRlciBzaXplICYgYnl0ZU9mZnNldFxuICB3cml0ZXIuYnl0ZU9mZnNldCArPSBieXRlTGVuZ3RoIC0gaGVhZGVyU2l6ZVxuICB3cml0ZXIuaGVhZGVyU2l6ZSA9IGJ5dGVMZW5ndGhcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0NhckJ1ZmZlcldyaXRlcn0gd3JpdGVyXG4gKiBAcGFyYW0ge251bWJlcltdfFVpbnQ4QXJyYXl9IGJ5dGVzXG4gKi9cblxuY29uc3Qgd3JpdGVCeXRlcyA9ICh3cml0ZXIsIGJ5dGVzKSA9PiB7XG4gIHdyaXRlci5ieXRlcy5zZXQoYnl0ZXMsIHdyaXRlci5ieXRlT2Zmc2V0KVxuICB3cml0ZXIuYnl0ZU9mZnNldCArPSBieXRlcy5sZW5ndGhcbn1cbi8qKlxuICogQHBhcmFtIHt7Ynl0ZXM6VWludDhBcnJheX19IHdyaXRlclxuICogQHBhcmFtIHtudW1iZXJbXX0gdmFyaW50XG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGhlYWRlclxuICovXG5jb25zdCB3cml0ZUhlYWRlciA9ICh7IGJ5dGVzIH0sIHZhcmludCwgaGVhZGVyKSA9PiB7XG4gIGJ5dGVzLnNldCh2YXJpbnQpXG4gIGJ5dGVzLnNldChoZWFkZXIsIHZhcmludC5sZW5ndGgpXG59XG5cbmNvbnN0IGhlYWRlclByZWx1ZGVUb2tlbnMgPSBbXG4gIG5ldyBUb2tlbihUeXBlLm1hcCwgMiksXG4gIG5ldyBUb2tlbihUeXBlLnN0cmluZywgJ3ZlcnNpb24nKSxcbiAgbmV3IFRva2VuKFR5cGUudWludCwgMSksXG4gIG5ldyBUb2tlbihUeXBlLnN0cmluZywgJ3Jvb3RzJylcbl1cblxuY29uc3QgQ0lEX1RBRyA9IG5ldyBUb2tlbihUeXBlLnRhZywgNDIpXG5cbi8qKlxuICogQ2FsY3VsYXRlcyBoZWFkZXIgc2l6ZSBnaXZlbiB0aGUgYXJyYXkgb2YgYnl0ZUxlbmd0aCBmb3Igcm9vdHMuXG4gKlxuICogQG5hbWUgQ2FyQnVmZmVyV3JpdGVyLmNhbGN1bGF0ZUhlYWRlckxlbmd0aChyb290TGVuZ3RocylcbiAqIEBwYXJhbSB7bnVtYmVyW119IHJvb3RMZW5ndGhzXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgY2FsY3VsYXRlSGVhZGVyTGVuZ3RoID0gKHJvb3RMZW5ndGhzKSA9PiB7XG4gIGNvbnN0IHRva2VucyA9IFsuLi5oZWFkZXJQcmVsdWRlVG9rZW5zXVxuICB0b2tlbnMucHVzaChuZXcgVG9rZW4oVHlwZS5hcnJheSwgcm9vdExlbmd0aHMubGVuZ3RoKSlcbiAgZm9yIChjb25zdCByb290TGVuZ3RoIG9mIHJvb3RMZW5ndGhzKSB7XG4gICAgdG9rZW5zLnB1c2goQ0lEX1RBRylcbiAgICB0b2tlbnMucHVzaChuZXcgVG9rZW4oVHlwZS5ieXRlcywgeyBsZW5ndGg6IHJvb3RMZW5ndGggKyAxIH0pKVxuICB9XG4gIGNvbnN0IGxlbmd0aCA9IHRva2Vuc1RvTGVuZ3RoKHRva2VucykgLy8gbm8gb3B0aW9ucyBuZWVkZWQgaGVyZSBiZWNhdXNlIHdlIGhhdmUgc2ltcGxlIHRva2Vuc1xuICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGxlbmd0aCkgKyBsZW5ndGhcbn1cblxuLyoqXG4gKiBDYWxjdWxhdGVzIGhlYWRlciBzaXplIGdpdmVuIHRoZSBhcnJheSBvZiByb290cy5cbiAqXG4gKiBAbmFtZSBDYXJCdWZmZXJXcml0ZXIuaGVhZGVyTGVuZ3RoKHsgcm9vdHMgfSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge0NJRFtdfSBvcHRpb25zLnJvb3RzXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgaGVhZGVyTGVuZ3RoID0gKHsgcm9vdHMgfSkgPT5cbiAgY2FsY3VsYXRlSGVhZGVyTGVuZ3RoKHJvb3RzLm1hcChjaWQgPT4gY2lkLmJ5dGVzLmJ5dGVMZW5ndGgpKVxuXG4vKipcbiAqIEVzdGltYXRlcyBoZWFkZXIgc2l6ZSBnaXZlbiBhIGNvdW50IG9mIHRoZSByb290cyBhbmQgdGhlIGV4cGVjdGVkIGJ5dGUgbGVuZ3RoXG4gKiBvZiB0aGUgcm9vdCBDSURzLiBUaGUgZGVmYXVsdCBsZW5ndGggd29ya3MgZm9yIGEgc3RhbmRhcmQgQ0lEdjEgd2l0aCBhXG4gKiBzaW5nbGUtYnl0ZSBtdWx0aWhhc2ggY29kZSwgc3VjaCBhcyBTSEEyLTI1NiAoaS5lLiB0aGUgbW9zdCBjb21tb24gQ0lEdjEpLlxuICpcbiAqIEBuYW1lIENhckJ1ZmZlcldyaXRlci5lc3RpbWF0ZUhlYWRlckxlbmd0aChyb290Q291bnRbLCByb290Qnl0ZUxlbmd0aF0pXG4gKiBAcGFyYW0ge251bWJlcn0gcm9vdENvdW50XG4gKiBAcGFyYW0ge251bWJlcn0gW3Jvb3RCeXRlTGVuZ3RoXVxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVzdGltYXRlSGVhZGVyTGVuZ3RoID0gKHJvb3RDb3VudCwgcm9vdEJ5dGVMZW5ndGggPSAzNikgPT5cbiAgY2FsY3VsYXRlSGVhZGVyTGVuZ3RoKG5ldyBBcnJheShyb290Q291bnQpLmZpbGwocm9vdEJ5dGVMZW5ndGgpKVxuXG4vKipcbiAqIENyZWF0ZXMgc3luY2hyb25vdXMgQ0FSIHdyaXRlciB0aGF0IGNhbiBiZSB1c2VkIHRvIGVuY29kZSBibG9ja3MgaW50byBhIGdpdmVuXG4gKiBidWZmZXIuIE9wdGlvbmFsbHkgeW91IGNvdWxkIHBhc3MgYGJ5dGVPZmZzZXRgIGFuZCBgYnl0ZUxlbmd0aGAgdG8gc3BlY2lmeSBhXG4gKiByYW5nZSBpbnNpZGUgYnVmZmVyIHRvIHdyaXRlIGludG8uIElmIGNhciBmaWxlIGlzIGdvaW5nIHRvIGhhdmUgYHJvb3RzYCB5b3VcbiAqIG5lZWQgdG8gZWl0aGVyIHBhc3MgdGhlbSB1bmRlciBgb3B0aW9ucy5yb290c2AgKGZyb20gd2hpY2ggaGVhZGVyIHNpemUgd2lsbFxuICogYmUgY2FsY3VsYXRlZCkgb3IgcHJvdmlkZSBgb3B0aW9ucy5oZWFkZXJTaXplYCB0byBhbGxvY2F0ZSByZXF1aXJlZCBzcGFjZVxuICogaW4gdGhlIGJ1ZmZlci4gWW91IG1heSBhbHNvIHByb3ZpZGUga25vd24gYHJvb3RzYCBhbmQgYGhlYWRlclNpemVgIHRvXG4gKiBhbGxvY2F0ZSBzcGFjZSBmb3IgdGhlIHJvb3RzIHRoYXQgbWF5IG5vdCBiZSBrbm93biBhaGVhZCBvZiB0aW1lLlxuICpcbiAqIE5vdGU6IEluY29ycmVjdCBgaGVhZGVyU2l6ZWAgbWF5IGxlYWQgdG8gY29weWluZyBieXRlcyBpbnNpZGUgYSBidWZmZXJcbiAqIHdoaWNoIHdpbGwgaGF2ZSBhIG5lZ2F0aXZlIGltcGFjdCBvbiBwZXJmb3JtYW5jZS5cbiAqXG4gKiBAbmFtZSBDYXJCdWZmZXJXcml0ZXIuY3JlYXRlV3JpdGVyKGJ1ZmZlclssIG9wdGlvbnNdKVxuICogQHBhcmFtIHtBcnJheUJ1ZmZlcn0gYnVmZmVyXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gKiBAcGFyYW0ge0NJRFtdfSBbb3B0aW9ucy5yb290c11cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5ieXRlT2Zmc2V0XVxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmJ5dGVMZW5ndGhdXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuaGVhZGVyU2l6ZV1cbiAqIEByZXR1cm5zIHtDYXJCdWZmZXJXcml0ZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVXcml0ZXIgPSAoYnVmZmVyLCBvcHRpb25zID0ge30pID0+IHtcbiAgY29uc3Qge1xuICAgIHJvb3RzID0gW10sXG4gICAgYnl0ZU9mZnNldCA9IDAsXG4gICAgYnl0ZUxlbmd0aCA9IGJ1ZmZlci5ieXRlTGVuZ3RoLFxuICAgIGhlYWRlclNpemUgPSBoZWFkZXJMZW5ndGgoeyByb290cyB9KVxuICB9ID0gb3B0aW9uc1xuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlciwgYnl0ZU9mZnNldCwgYnl0ZUxlbmd0aClcblxuICBjb25zdCB3cml0ZXIgPSBuZXcgQ2FyQnVmZmVyV3JpdGVyKGJ5dGVzLCBoZWFkZXJTaXplKVxuICBmb3IgKGNvbnN0IHJvb3Qgb2Ygcm9vdHMpIHtcbiAgICB3cml0ZXIuYWRkUm9vdChyb290KVxuICB9XG5cbiAgcmV0dXJuIHdyaXRlclxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/buffer-writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/decoder-common.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/@ipld/car/src/decoder-common.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CIDV0_BYTES: () => (/* binding */ CIDV0_BYTES),\n/* harmony export */   V2_HEADER_LENGTH: () => (/* binding */ V2_HEADER_LENGTH),\n/* harmony export */   decodeV2Header: () => (/* binding */ decodeV2Header),\n/* harmony export */   decodeVarint: () => (/* binding */ decodeVarint),\n/* harmony export */   getMultihashLength: () => (/* binding */ getMultihashLength)\n/* harmony export */ });\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n\n\nconst CIDV0_BYTES = {\n  SHA2_256: 0x12,\n  LENGTH: 0x20,\n  DAG_PB: 0x70\n}\n\nconst V2_HEADER_LENGTH = /* characteristics */ 16 /* v1 offset */ + 8 /* v1 size */ + 8 /* index offset */ + 8\n\n/**\n * Decodes varint and seeks the buffer\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @param {import('./coding.js').Seekable} seeker\n * @returns {number}\n */\nfunction decodeVarint (bytes, seeker) {\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data')\n  }\n  const i = varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes)\n  seeker.seek(/** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes))\n  return i\n}\n\n/**\n * Decode v2 header\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.exactly(V2_HEADER_LENGTH, true) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @returns {import('./coding.js').CarV2FixedHeader}\n */\nfunction decodeV2Header (bytes) {\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  let offset = 0\n  const header = {\n    version: 2,\n    /** @type {[bigint, bigint]} */\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  }\n  return header\n}\n\n/**\n * Checks the length of the multihash to be read afterwards\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n */\nfunction getMultihashLength (bytes) {\n  // | code | length | .... |\n  // where both code and length are varints, so we have to decode\n  // them first before we can know total length\n\n  varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes) // code\n  const codeLength = /** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes)\n  const length = varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes.subarray(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes))\n  const lengthLength = /** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes)\n  const mhLength = codeLength + lengthLength + length\n\n  return mhLength\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvZGVjb2Rlci1jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJCOztBQUVwQjtBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxnQ0FBZ0M7QUFDM0MsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxZQUFZLDBDQUFhO0FBQ3pCLHlCQUF5QixRQUFRLEdBQUcsMENBQWE7QUFDakQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtCQUFrQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUEsRUFBRSwwQ0FBYTtBQUNmLGdDQUFnQyxRQUFRLEdBQUcsMENBQWE7QUFDeEQsaUJBQWlCLDBDQUFhLGdCQUFnQiwwQ0FBYTtBQUMzRCxrQ0FBa0MsUUFBUSxHQUFHLDBDQUFhO0FBQzFEOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvQGlwbGQvY2FyL3NyYy9kZWNvZGVyLWNvbW1vbi5qcz8wOTA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAndmFyaW50J1xuXG5leHBvcnQgY29uc3QgQ0lEVjBfQllURVMgPSB7XG4gIFNIQTJfMjU2OiAweDEyLFxuICBMRU5HVEg6IDB4MjAsXG4gIERBR19QQjogMHg3MFxufVxuXG5leHBvcnQgY29uc3QgVjJfSEVBREVSX0xFTkdUSCA9IC8qIGNoYXJhY3RlcmlzdGljcyAqLyAxNiAvKiB2MSBvZmZzZXQgKi8gKyA4IC8qIHYxIHNpemUgKi8gKyA4IC8qIGluZGV4IG9mZnNldCAqLyArIDhcblxuLyoqXG4gKiBEZWNvZGVzIHZhcmludCBhbmQgc2Vla3MgdGhlIGJ1ZmZlclxuICpcbiAqIGBgYGpzXG4gKiAvLyBuZWVkcyBieXRlcyB0byBiZSByZWFkIGZpcnN0XG4gKiBjb25zdCBieXRlcyA9IHJlYWRlci51cFRvKDgpIC8vIG1heWJlIGFzeW5jXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5TZWVrYWJsZX0gc2Vla2VyXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVmFyaW50IChieXRlcywgc2Vla2VyKSB7XG4gIGlmICghYnl0ZXMubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIGVuZCBvZiBkYXRhJylcbiAgfVxuICBjb25zdCBpID0gdmFyaW50LmRlY29kZShieXRlcylcbiAgc2Vla2VyLnNlZWsoLyoqIEB0eXBlIHtudW1iZXJ9ICovKHZhcmludC5kZWNvZGUuYnl0ZXMpKVxuICByZXR1cm4gaVxufVxuXG4vKipcbiAqIERlY29kZSB2MiBoZWFkZXJcbiAqXG4gKiBgYGBqc1xuICogLy8gbmVlZHMgYnl0ZXMgdG8gYmUgcmVhZCBmaXJzdFxuICogY29uc3QgYnl0ZXMgPSByZWFkZXIuZXhhY3RseShWMl9IRUFERVJfTEVOR1RILCB0cnVlKSAvLyBtYXliZSBhc3luY1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHJldHVybnMge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5DYXJWMkZpeGVkSGVhZGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVjJIZWFkZXIgKGJ5dGVzKSB7XG4gIGNvbnN0IGR2ID0gbmV3IERhdGFWaWV3KGJ5dGVzLmJ1ZmZlciwgYnl0ZXMuYnl0ZU9mZnNldCwgYnl0ZXMuYnl0ZUxlbmd0aClcbiAgbGV0IG9mZnNldCA9IDBcbiAgY29uc3QgaGVhZGVyID0ge1xuICAgIHZlcnNpb246IDIsXG4gICAgLyoqIEB0eXBlIHtbYmlnaW50LCBiaWdpbnRdfSAqL1xuICAgIGNoYXJhY3RlcmlzdGljczogW1xuICAgICAgZHYuZ2V0QmlnVWludDY0KG9mZnNldCwgdHJ1ZSksXG4gICAgICBkdi5nZXRCaWdVaW50NjQob2Zmc2V0ICs9IDgsIHRydWUpXG4gICAgXSxcbiAgICBkYXRhT2Zmc2V0OiBOdW1iZXIoZHYuZ2V0QmlnVWludDY0KG9mZnNldCArPSA4LCB0cnVlKSksXG4gICAgZGF0YVNpemU6IE51bWJlcihkdi5nZXRCaWdVaW50NjQob2Zmc2V0ICs9IDgsIHRydWUpKSxcbiAgICBpbmRleE9mZnNldDogTnVtYmVyKGR2LmdldEJpZ1VpbnQ2NChvZmZzZXQgKz0gOCwgdHJ1ZSkpXG4gIH1cbiAgcmV0dXJuIGhlYWRlclxufVxuXG4vKipcbiAqIENoZWNrcyB0aGUgbGVuZ3RoIG9mIHRoZSBtdWx0aWhhc2ggdG8gYmUgcmVhZCBhZnRlcndhcmRzXG4gKlxuICogYGBganNcbiAqIC8vIG5lZWRzIGJ5dGVzIHRvIGJlIHJlYWQgZmlyc3RcbiAqIGNvbnN0IGJ5dGVzID0gcmVhZGVyLnVwVG8oOCkgLy8gbWF5YmUgYXN5bmNcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE11bHRpaGFzaExlbmd0aCAoYnl0ZXMpIHtcbiAgLy8gfCBjb2RlIHwgbGVuZ3RoIHwgLi4uLiB8XG4gIC8vIHdoZXJlIGJvdGggY29kZSBhbmQgbGVuZ3RoIGFyZSB2YXJpbnRzLCBzbyB3ZSBoYXZlIHRvIGRlY29kZVxuICAvLyB0aGVtIGZpcnN0IGJlZm9yZSB3ZSBjYW4ga25vdyB0b3RhbCBsZW5ndGhcblxuICB2YXJpbnQuZGVjb2RlKGJ5dGVzKSAvLyBjb2RlXG4gIGNvbnN0IGNvZGVMZW5ndGggPSAvKiogQHR5cGUge251bWJlcn0gKi8odmFyaW50LmRlY29kZS5ieXRlcylcbiAgY29uc3QgbGVuZ3RoID0gdmFyaW50LmRlY29kZShieXRlcy5zdWJhcnJheSh2YXJpbnQuZGVjb2RlLmJ5dGVzKSlcbiAgY29uc3QgbGVuZ3RoTGVuZ3RoID0gLyoqIEB0eXBlIHtudW1iZXJ9ICovKHZhcmludC5kZWNvZGUuYnl0ZXMpXG4gIGNvbnN0IG1oTGVuZ3RoID0gY29kZUxlbmd0aCArIGxlbmd0aExlbmd0aCArIGxlbmd0aFxuXG4gIHJldHVybiBtaExlbmd0aFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/decoder-common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/header-validator.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/@ipld/car/src/header-validator.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarV1HeaderOrV2Pragma: () => (/* binding */ CarV1HeaderOrV2Pragma)\n/* harmony export */ });\n/* eslint-disable jsdoc/check-indentation, max-depth */\n\n/**\n * Auto-generated with @ipld/schema@v4.2.0 at Thu Sep 14 2023 from IPLD Schema:\n *\n * # CarV1HeaderOrV2Pragma is a more relaxed form, and can parse {version:x} where\n * # roots are optional. This is typically useful for the {verison:2} CARv2\n * # pragma.\n *\n * type CarV1HeaderOrV2Pragma struct {\n *   roots optional [&Any]\n *   # roots is _not_ optional for CarV1 but we defer that check within code to\n *   # gracefully handle the V2 case where it's just {version:X}\n *   version Int\n * }\n *\n * # CarV1Header is the strict form of the header, and requires roots to be\n * # present. This is compatible with the CARv1 specification.\n *\n * # type CarV1Header struct {\n * #   roots [&Any]\n * #   version Int\n * # }\n *\n */\n\nconst Kinds = {\n  Null: /**\n         * @param obj\n         * @returns {undefined|null}\n         */ (/** @type {any} */ obj) => obj === null ? obj : undefined,\n  Int: /**\n        * @param obj\n        * @returns {undefined|number}\n        */ (/** @type {any} */ obj) => Number.isInteger(obj) ? obj : undefined,\n  Float: /**\n          * @param obj\n          * @returns {undefined|number}\n          */ (/** @type {any} */ obj) => typeof obj === 'number' && Number.isFinite(obj) ? obj : undefined,\n  String: /**\n           * @param obj\n           * @returns {undefined|string}\n           */ (/** @type {any} */ obj) => typeof obj === 'string' ? obj : undefined,\n  Bool: /**\n         * @param obj\n         * @returns {undefined|boolean}\n         */ (/** @type {any} */ obj) => typeof obj === 'boolean' ? obj : undefined,\n  Bytes: /**\n          * @param obj\n          * @returns {undefined|Uint8Array}\n          */ (/** @type {any} */ obj) => obj instanceof Uint8Array ? obj : undefined,\n  Link: /**\n         * @param obj\n         * @returns {undefined|object}\n         */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID === obj ? obj : undefined,\n  List: /**\n         * @param obj\n         * @returns {undefined|Array<any>}\n         */ (/** @type {any} */ obj) => Array.isArray(obj) ? obj : undefined,\n  Map: /**\n        * @param obj\n        * @returns {undefined|object}\n        */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID !== obj && !Array.isArray(obj) && !(obj instanceof Uint8Array) ? obj : undefined\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Types = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /**\n                                           * @param obj\n                                           * @returns {undefined|any}\n                                           */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /**\n                          * @param obj\n                          * @returns {undefined|any}\n                          */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Types['CarV1HeaderOrV2Pragma > roots (anon)'](obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Types.Int(obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Reprs = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /**\n                                           * @param obj\n                                           * @returns {undefined|any}\n                                           */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /**\n                          * @param obj\n                          * @returns {undefined|any}\n                          */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Reprs['CarV1HeaderOrV2Pragma > roots (anon)'](value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Reprs.Int(value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n\nconst CarV1HeaderOrV2Pragma = {\n  toTyped: Types.CarV1HeaderOrV2Pragma,\n  toRepresentation: Reprs.CarV1HeaderOrV2Pragma\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/car/src/header-validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/dag-cbor/src/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/@ipld/dag-cbor/src/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeOptions: () => (/* binding */ decodeOptions),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeOptions: () => (/* binding */ encodeOptions),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   toByteView: () => (/* binding */ toByteView)\n/* harmony export */ });\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/cborg.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/cid.js\");\n\n\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.tag, CID_CBOR_TAG),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nconst encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nconst decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nconst name = 'dag-cbor'\nconst code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nconst encode = (node) => cborg__WEBPACK_IMPORTED_MODULE_0__.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nconst decode = (data) => cborg__WEBPACK_IMPORTED_MODULE_0__.decode(toByteView(data), _decodeOptions)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1jYm9yL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEI7QUFDUTs7QUFFdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxxREFBcUQ7QUFDbEU7O0FBRUE7QUFDQTtBQUNBLGFBQWEsNERBQTREO0FBQ3pFOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGtDQUFrQztBQUM3QyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlEQUFHO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdDQUFXLENBQUMsdUNBQVU7QUFDOUIsUUFBUSx3Q0FBVyxDQUFDLHVDQUFVO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0EsU0FBUyxpREFBRztBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVPO0FBQ0E7O0FBRVA7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWE7QUFDYjtBQUNPLHlCQUF5Qix5Q0FBWTs7QUFFNUM7QUFDQTtBQUNBLFdBQVcsa0NBQWtDO0FBQzdDLGFBQWE7QUFDYjtBQUNPLHlCQUF5Qix5Q0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctY2Jvci9zcmMvaW5kZXguanM/MjMzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjYm9yZyBmcm9tICdjYm9yZydcbmltcG9ydCB7IENJRCB9IGZyb20gJ211bHRpZm9ybWF0cy9jaWQnXG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9pcGZzL2dvLWlwZnMvaXNzdWVzLzM1NzAjaXNzdWVjb21tZW50LTI3MzkzMTY5MlxuY29uc3QgQ0lEX0NCT1JfVEFHID0gNDJcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NvZGVjcy9pbnRlcmZhY2UnKS5CeXRlVmlldzxUPn0gQnl0ZVZpZXdcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvY29kZWNzL2ludGVyZmFjZScpLkFycmF5QnVmZmVyVmlldzxUPn0gQXJyYXlCdWZmZXJWaWV3XG4gKi9cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtCeXRlVmlldzxUPiB8IEFycmF5QnVmZmVyVmlldzxUPn0gYnVmXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0J5dGVWaWV3IChidWYpIHtcbiAgaWYgKGJ1ZiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1ZiwgMCwgYnVmLmJ5dGVMZW5ndGgpXG4gIH1cblxuICByZXR1cm4gYnVmXG59XG5cbi8qKlxuICogY2lkRW5jb2RlciB3aWxsIHJlY2VpdmUgYWxsIE9iamVjdHMgZHVyaW5nIGVuY29kZSwgaXQgbmVlZHMgdG8gZmlsdGVyIG91dFxuICogYW55dGhpbmcgdGhhdCdzIG5vdCBhIENJRCBhbmQgcmV0dXJuIGBudWxsYCBmb3IgdGhhdCBzbyBpdCdzIGVuY29kZWQgYXNcbiAqIG5vcm1hbC5cbiAqXG4gKiBAcGFyYW0ge2FueX0gb2JqXG4gKiBAcmV0dXJucyB7Y2JvcmcuVG9rZW5bXXxudWxsfVxuICovXG5mdW5jdGlvbiBjaWRFbmNvZGVyIChvYmopIHtcbiAgaWYgKG9iai5hc0NJRCAhPT0gb2JqICYmIG9ialsnLyddICE9PSBvYmouYnl0ZXMpIHtcbiAgICByZXR1cm4gbnVsbCAvLyBhbnkgb3RoZXIga2luZCBvZiBvYmplY3RcbiAgfVxuICBjb25zdCBjaWQgPSBDSUQuYXNDSUQob2JqKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIHZlcnkgdW5saWtlbHkgY2FzZSwgYW5kIGl0J2xsIHByb2JhYmx5IHRocm93IGEgcmVjdXJzaW9uIGVycm9yIGluIGNib3JnXG4gIGlmICghY2lkKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGNpZC5ieXRlcy5ieXRlTGVuZ3RoICsgMSlcbiAgYnl0ZXMuc2V0KGNpZC5ieXRlcywgMSkgLy8gcHJlZml4IGlzIDB4MDAsIGZvciBoaXN0b3JpY2FsIHJlYXNvbnNcbiAgcmV0dXJuIFtcbiAgICBuZXcgY2JvcmcuVG9rZW4oY2JvcmcuVHlwZS50YWcsIENJRF9DQk9SX1RBRyksXG4gICAgbmV3IGNib3JnLlRva2VuKGNib3JnLlR5cGUuYnl0ZXMsIGJ5dGVzKVxuICBdXG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc2RvYy9yZXF1aXJlLXJldHVybnMtY2hlY2tcbi8qKlxuICogSW50ZXJjZXB0IGFsbCBgdW5kZWZpbmVkYCB2YWx1ZXMgZnJvbSBhbiBvYmplY3Qgd2FsayBhbmQgcmVqZWN0IHRoZSBlbnRpcmVcbiAqIG9iamVjdCBpZiB3ZSBmaW5kIG9uZS5cbiAqXG4gKiBAcmV0dXJucyB7bnVsbH1cbiAqL1xuZnVuY3Rpb24gdW5kZWZpbmVkRW5jb2RlciAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignYHVuZGVmaW5lZGAgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgSVBMRCBEYXRhIE1vZGVsIGFuZCBjYW5ub3QgYmUgZW5jb2RlZCcpXG59XG5cbi8qKlxuICogSW50ZXJjZXB0IGFsbCBgbnVtYmVyYCB2YWx1ZXMgZnJvbSBhbiBvYmplY3Qgd2FsayBhbmQgcmVqZWN0IHRoZSBlbnRpcmVcbiAqIG9iamVjdCBpZiB3ZSBmaW5kIHNvbWV0aGluZyB0aGF0IGRvZXNuJ3QgZml0IHRoZSBJUExEIGRhdGEgbW9kZWwgKE5hTiAmXG4gKiBJbmZpbml0eSkuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bVxuICogQHJldHVybnMge251bGx9XG4gKi9cbmZ1bmN0aW9uIG51bWJlckVuY29kZXIgKG51bSkge1xuICBpZiAoTnVtYmVyLmlzTmFOKG51bSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2BOYU5gIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIElQTEQgRGF0YSBNb2RlbCBhbmQgY2Fubm90IGJlIGVuY29kZWQnKVxuICB9XG4gIGlmIChudW0gPT09IEluZmluaXR5IHx8IG51bSA9PT0gLUluZmluaXR5KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdgSW5maW5pdHlgIGFuZCBgLUluZmluaXR5YCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBJUExEIERhdGEgTW9kZWwgYW5kIGNhbm5vdCBiZSBlbmNvZGVkJylcbiAgfVxuICByZXR1cm4gbnVsbFxufVxuXG5jb25zdCBfZW5jb2RlT3B0aW9ucyA9IHtcbiAgZmxvYXQ2NDogdHJ1ZSxcbiAgdHlwZUVuY29kZXJzOiB7XG4gICAgT2JqZWN0OiBjaWRFbmNvZGVyLFxuICAgIHVuZGVmaW5lZDogdW5kZWZpbmVkRW5jb2RlcixcbiAgICBudW1iZXI6IG51bWJlckVuY29kZXJcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZW5jb2RlT3B0aW9ucyA9IHtcbiAgLi4uX2VuY29kZU9wdGlvbnMsXG4gIHR5cGVFbmNvZGVyczoge1xuICAgIC4uLl9lbmNvZGVPcHRpb25zLnR5cGVFbmNvZGVyc1xuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHJldHVybnMge0NJRH1cbiAqL1xuZnVuY3Rpb24gY2lkRGVjb2RlciAoYnl0ZXMpIHtcbiAgaWYgKGJ5dGVzWzBdICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIENJRCBmb3IgQ0JPUiB0YWcgNDI7IGV4cGVjdGVkIGxlYWRpbmcgMHgwMCcpXG4gIH1cbiAgcmV0dXJuIENJRC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoMSkpIC8vIGlnbm9yZSBsZWFkaW5nIDB4MDBcbn1cblxuY29uc3QgX2RlY29kZU9wdGlvbnMgPSB7XG4gIGFsbG93SW5kZWZpbml0ZTogZmFsc2UsXG4gIGNvZXJjZVVuZGVmaW5lZFRvTnVsbDogdHJ1ZSxcbiAgYWxsb3dOYU46IGZhbHNlLFxuICBhbGxvd0luZmluaXR5OiBmYWxzZSxcbiAgYWxsb3dCaWdJbnQ6IHRydWUsIC8vIHRoaXMgd2lsbCBsZWFkIHRvIEJpZ0ludCBmb3IgaW50cyBvdXRzaWRlIG9mXG4gIC8vIHNhZmUtaW50ZWdlciByYW5nZSwgd2hpY2ggbWF5IHN1cnByaXNlIHVzZXJzXG4gIHN0cmljdDogdHJ1ZSxcbiAgdXNlTWFwczogZmFsc2UsXG4gIHJlamVjdER1cGxpY2F0ZU1hcEtleXM6IHRydWUsXG4gIC8qKiBAdHlwZSB7aW1wb3J0KCdjYm9yZycpLlRhZ0RlY29kZXJbXX0gKi9cbiAgdGFnczogW11cbn1cbl9kZWNvZGVPcHRpb25zLnRhZ3NbQ0lEX0NCT1JfVEFHXSA9IGNpZERlY29kZXJcblxuZXhwb3J0IGNvbnN0IGRlY29kZU9wdGlvbnMgPSB7XG4gIC4uLl9kZWNvZGVPcHRpb25zLFxuICB0YWdzOiBfZGVjb2RlT3B0aW9ucy50YWdzLnNsaWNlKClcbn1cblxuZXhwb3J0IGNvbnN0IG5hbWUgPSAnZGFnLWNib3InXG5leHBvcnQgY29uc3QgY29kZSA9IDB4NzFcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtUfSBub2RlXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGUgPSAobm9kZSkgPT4gY2JvcmcuZW5jb2RlKG5vZGUsIF9lbmNvZGVPcHRpb25zKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFQ+IHwgQXJyYXlCdWZmZXJWaWV3PFQ+fSBkYXRhXG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChkYXRhKSA9PiBjYm9yZy5kZWNvZGUodG9CeXRlVmlldyhkYXRhKSwgX2RlY29kZU9wdGlvbnMpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/@ipld/dag-cbor/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/cborg.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/cborg.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Token),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokeniser),\n/* harmony export */   Type: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Type),\n/* harmony export */   decode: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   tokensToObject: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/encode.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/decode.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _lib_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n\n\n\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDd0M7QUFDcEM7O0FBRTVDO0FBQ0E7QUFDQSxhQUFhLGtDQUFrQztBQUMvQztBQUNBLGFBQWEsMkNBQTJDO0FBQ3hELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEscUNBQXFDO0FBQ2xEOztBQVVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzP2E0ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlIH0gZnJvbSAnLi9saWIvZW5jb2RlLmpzJ1xuaW1wb3J0IHsgZGVjb2RlLCBkZWNvZGVGaXJzdCwgVG9rZW5pc2VyLCB0b2tlbnNUb09iamVjdCB9IGZyb20gJy4vbGliL2RlY29kZS5qcydcbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi9saWIvdG9rZW4uanMnXG5cbi8qKlxuICogRXhwb3J0IHRoZSB0eXBlcyB0aGF0IHdlcmUgcHJlc2VudCBpbiB0aGUgb3JpZ2luYWwgbWFudWFsIGNib3JnLmQudHNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuVGFnRGVjb2Rlcn0gVGFnRGVjb2RlclxuICogVGhlcmUgd2FzIG9yaWdpbmFsbHkganVzdCBgVHlwZUVuY29kZXJgIHNvIGRvbid0IGJyZWFrIHR5cGVzIGJ5IHJlbmFtaW5nIG9yIG5vdCBleHBvcnRpbmdcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuT3B0aW9uYWxUeXBlRW5jb2Rlcn0gVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5FbmNvZGVPcHRpb25zfSBFbmNvZGVPcHRpb25zXG4gKi9cblxuZXhwb3J0IHtcbiAgZGVjb2RlLFxuICBkZWNvZGVGaXJzdCxcbiAgVG9rZW5pc2VyIGFzIFRva2VuaXplcixcbiAgdG9rZW5zVG9PYmplY3QsXG4gIGVuY29kZSxcbiAgVG9rZW4sXG4gIFR5cGVcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/cborg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUint16: () => (/* binding */ decodeUint16),\n/* harmony export */   decodeUint32: () => (/* binding */ decodeUint32),\n/* harmony export */   decodeUint64: () => (/* binding */ decodeUint64),\n/* harmony export */   decodeUint8: () => (/* binding */ decodeUint8),\n/* harmony export */   encodeUint: () => (/* binding */ encodeUint),\n/* harmony export */   encodeUintValue: () => (/* binding */ encodeUintValue),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint64: () => (/* binding */ readUint64),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   uintBoundaries: () => (/* binding */ uintBoundaries)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n/* globals BigInt */\n\n\n\n\nconst uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint8 (data, offset, options) {\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint16 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint32 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nfunction readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nfunction encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/1negint.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/1negint.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNegint16: () => (/* binding */ decodeNegint16),\n/* harmony export */   decodeNegint32: () => (/* binding */ decodeNegint32),\n/* harmony export */   decodeNegint64: () => (/* binding */ decodeNegint64),\n/* harmony export */   decodeNegint8: () => (/* binding */ decodeNegint8),\n/* harmony export */   encodeNegint: () => (/* binding */ encodeNegint)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n/* eslint-env es2020 */\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint64 (data, pos, _minor, options) {\n  const int = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8xbmVnaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRXdDO0FBQ047QUFDVzs7QUFFN0M7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxjQUFjLGdEQUFjO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLGNBQWMsaURBQWU7QUFDcEQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksY0FBYyxpREFBZTtBQUNwRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsY0FBYyxpREFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNENBQUssQ0FBQywyQ0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQTtBQUNBLEVBQUUsc0RBQW9CO0FBQ3RCOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMW5lZ2ludC5qcz85MDkyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXMyMDIwICovXG5cbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQ4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCAyKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgLTEgLSB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgNSlcbn1cblxuY29uc3QgbmVnMWIgPSBCaWdJbnQoLTEpXG5jb25zdCBwb3MxYiA9IEJpZ0ludCgxKVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQ2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgaW50ID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgaW50ICE9PSAnYmlnaW50Jykge1xuICAgIGNvbnN0IHZhbHVlID0gLTEgLSBpbnRcbiAgICBpZiAodmFsdWUgPj0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIpIHtcbiAgICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIHZhbHVlLCA5KVxuICAgIH1cbiAgfVxuICBpZiAob3B0aW9ucy5hbGxvd0JpZ0ludCAhPT0gdHJ1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGludGVnZXJzIG91dHNpZGUgb2YgdGhlIHNhZmUgaW50ZWdlciByYW5nZSBhcmUgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgbmVnMWIgLSBCaWdJbnQoaW50KSwgOSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVOZWdpbnQgKGJ1ZiwgdG9rZW4pIHtcbiAgY29uc3QgbmVnaW50ID0gdG9rZW4udmFsdWVcbiAgY29uc3QgdW5zaWduZWQgPSAodHlwZW9mIG5lZ2ludCA9PT0gJ2JpZ2ludCcgPyAobmVnaW50ICogbmVnMWIgLSBwb3MxYikgOiAobmVnaW50ICogLTEgLSAxKSlcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCB0b2tlbi50eXBlLm1ham9yRW5jb2RlZCwgdW5zaWduZWQpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZU5lZ2ludC5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICBjb25zdCBuZWdpbnQgPSB0b2tlbi52YWx1ZVxuICBjb25zdCB1bnNpZ25lZCA9ICh0eXBlb2YgbmVnaW50ID09PSAnYmlnaW50JyA/IChuZWdpbnQgKiBuZWcxYiAtIHBvczFiKSA6IChuZWdpbnQgKiAtMSAtIDEpKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIGhhbmRsZWQgYnkgcXVpY2tFbmNvZGUsIHdlIHNob3VsZG4ndCBnZXQgaGVyZSBidXQgaXQncyBpbmNsdWRlZCBmb3IgY29tcGxldGVuZXNzXG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMF0pIHtcbiAgICByZXR1cm4gMVxuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMV0pIHtcbiAgICByZXR1cm4gMlxuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMl0pIHtcbiAgICByZXR1cm4gM1xuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbM10pIHtcbiAgICByZXR1cm4gNVxuICB9XG4gIHJldHVybiA5XG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rMVxuICogQHBhcmFtIHtUb2tlbn0gdG9rMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlTmVnaW50LmNvbXBhcmVUb2tlbnMgPSBmdW5jdGlvbiBjb21wYXJlVG9rZW5zICh0b2sxLCB0b2syKSB7XG4gIC8vIG9wcG9zaXRlIG9mIHRoZSB1aW50IGNvbXBhcmlzb24gc2luY2Ugd2Ugc3RvcmUgdGhlIHVpbnQgdmVyc2lvbiBpbiBieXRlc1xuICByZXR1cm4gdG9rMS52YWx1ZSA8IHRvazIudmFsdWUgPyAxIDogdG9rMS52YWx1ZSA+IHRvazIudmFsdWUgPyAtMSA6IC8qIGM4IGlnbm9yZSBuZXh0ICovIDBcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/1negint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/2bytes.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/2bytes.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareBytes: () => (/* binding */ compareBytes),\n/* harmony export */   decodeBytes16: () => (/* binding */ decodeBytes16),\n/* harmony export */   decodeBytes32: () => (/* binding */ decodeBytes32),\n/* harmony export */   decodeBytes64: () => (/* binding */ decodeBytes64),\n/* harmony export */   decodeBytes8: () => (/* binding */ decodeBytes8),\n/* harmony export */   decodeBytesCompact: () => (/* binding */ decodeBytesCompact),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, prefix + length)\n  const buf = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.slice)(data, pos + prefix, pos + prefix + length)\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.compare)(b1, b2)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8yYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDdUI7QUFDN0I7QUFDMEI7O0FBRTVEO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxFQUFFLDREQUFnQjtBQUNsQixjQUFjLHFEQUFLO0FBQ25CLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsMkNBQUksVUFBVSwwREFBVTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQSxFQUFFLHNEQUFvQjtBQUN0QjtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3Qjs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQLGtFQUFrRSx1REFBTztBQUN6RSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMmJ5dGVzLmpzPzI2ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0IHsgYXNzZXJ0RW5vdWdoRGF0YSwgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBjb21wYXJlLCBmcm9tU3RyaW5nLCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoZGF0YSwgcG9zLCBwcmVmaXgsIGxlbmd0aCkge1xuICBhc3NlcnRFbm91Z2hEYXRhKGRhdGEsIHBvcywgcHJlZml4ICsgbGVuZ3RoKVxuICBjb25zdCBidWYgPSBzbGljZShkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHByZWZpeCArIGxlbmd0aClcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmJ5dGVzLCBidWYsIHByZWZpeCArIGxlbmd0aClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXNDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXM2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgYnl0ZXMgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogYGVuY29kZWRCeXRlc2AgYWxsb3dzIGZvciBjYWNoaW5nIHdoZW4gd2UgZG8gYSBieXRlIHZlcnNpb24gb2YgYSBzdHJpbmdcbiAqIGZvciBrZXkgc29ydGluZyBwdXJwb3Nlc1xuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5mdW5jdGlvbiB0b2tlbkJ5dGVzICh0b2tlbikge1xuICBpZiAodG9rZW4uZW5jb2RlZEJ5dGVzID09PSB1bmRlZmluZWQpIHtcbiAgICB0b2tlbi5lbmNvZGVkQnl0ZXMgPSB0b2tlbi50eXBlID09PSBUeXBlLnN0cmluZyA/IGZyb21TdHJpbmcodG9rZW4udmFsdWUpIDogdG9rZW4udmFsdWVcbiAgfVxuICAvLyBAdHMtaWdub3JlIGMnbW9uXG4gIHJldHVybiB0b2tlbi5lbmNvZGVkQnl0ZXNcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCeXRlcyAoYnVmLCB0b2tlbikge1xuICBjb25zdCBieXRlcyA9IHRva2VuQnl0ZXModG9rZW4pXG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgdG9rZW4udHlwZS5tYWpvckVuY29kZWQsIGJ5dGVzLmxlbmd0aClcbiAgYnVmLnB1c2goYnl0ZXMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUJ5dGVzLmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIGNvbnN0IGJ5dGVzID0gdG9rZW5CeXRlcyh0b2tlbilcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKGJ5dGVzLmxlbmd0aCkgKyBieXRlcy5sZW5ndGhcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2sxXG4gKiBAcGFyYW0ge1Rva2VufSB0b2syXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVCeXRlcy5jb21wYXJlVG9rZW5zID0gZnVuY3Rpb24gY29tcGFyZVRva2VucyAodG9rMSwgdG9rMikge1xuICByZXR1cm4gY29tcGFyZUJ5dGVzKHRva2VuQnl0ZXModG9rMSksIHRva2VuQnl0ZXModG9rMikpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiMVxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVCeXRlcyAoYjEsIGIyKSB7XG4gIHJldHVybiBiMS5sZW5ndGggPCBiMi5sZW5ndGggPyAtMSA6IGIxLmxlbmd0aCA+IGIyLmxlbmd0aCA/IDEgOiBjb21wYXJlKGIxLCBiMilcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/2bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/3string.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/3string.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString16: () => (/* binding */ decodeString16),\n/* harmony export */   decodeString32: () => (/* binding */ decodeString32),\n/* harmony export */   decodeString64: () => (/* binding */ decodeString64),\n/* harmony export */   decodeString8: () => (/* binding */ decodeString8),\n/* harmony export */   decodeStringCompact: () => (/* binding */ decodeStringCompact),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, totLength)\n  const tok = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.toString)(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.slice)(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nconst encodeString = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8zc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3VCO0FBQzdCO0FBQ087QUFDUTs7QUFFakQ7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNkRBQWdCO0FBQ2xCLGtCQUFrQiw0Q0FBSyxDQUFDLDJDQUFJLFNBQVMsd0RBQVE7QUFDN0M7QUFDQSxvQkFBb0IscURBQUs7QUFDekI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFTyxxQkFBcUIsbURBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzNzdHJpbmcuanM/MjM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgeyBhc3NlcnRFbm91Z2hEYXRhLCBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGVuY29kZUJ5dGVzIH0gZnJvbSAnLi8yYnl0ZXMuanMnXG5pbXBvcnQgeyB0b1N0cmluZywgc2xpY2UgfSBmcm9tICcuL2J5dGUtdXRpbHMuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoZGF0YSwgcG9zLCBwcmVmaXgsIGxlbmd0aCwgb3B0aW9ucykge1xuICBjb25zdCB0b3RMZW5ndGggPSBwcmVmaXggKyBsZW5ndGhcbiAgYXNzZXJ0RW5vdWdoRGF0YShkYXRhLCBwb3MsIHRvdExlbmd0aClcbiAgY29uc3QgdG9rID0gbmV3IFRva2VuKFR5cGUuc3RyaW5nLCB0b1N0cmluZyhkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHRvdExlbmd0aCksIHRvdExlbmd0aClcbiAgaWYgKG9wdGlvbnMucmV0YWluU3RyaW5nQnl0ZXMgPT09IHRydWUpIHtcbiAgICB0b2suYnl0ZVZhbHVlID0gc2xpY2UoZGF0YSwgcG9zICsgcHJlZml4LCBwb3MgKyB0b3RMZW5ndGgpXG4gIH1cbiAgcmV0dXJuIHRva1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZ0NvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vciwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmczMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBzdHJpbmcgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwsIG9wdGlvbnMpXG59XG5cbmV4cG9ydCBjb25zdCBlbmNvZGVTdHJpbmcgPSBlbmNvZGVCeXRlc1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/3string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/4array.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/4array.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray16: () => (/* binding */ decodeArray16),\n/* harmony export */   decodeArray32: () => (/* binding */ decodeArray32),\n/* harmony export */   decodeArray64: () => (/* binding */ decodeArray64),\n/* harmony export */   decodeArray8: () => (/* binding */ decodeArray8),\n/* harmony export */   decodeArrayCompact: () => (/* binding */ decodeArrayCompact),\n/* harmony export */   decodeArrayIndefinite: () => (/* binding */ decodeArrayIndefinite),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeArray (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi80YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNOO0FBQ1c7O0FBRTdDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGdEQUFjO0FBQzdDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLGlEQUFlO0FBQzNCO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQLEVBQUUsc0RBQW9CLE1BQU0sMkNBQUk7QUFDaEM7O0FBRUE7QUFDQTtBQUNBLDRCQUE0QixpREFBZTs7QUFFM0M7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNGFycmF5LmpzP2JiZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoX2RhdGEsIF9wb3MsIHByZWZpeCwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5hcnJheSwgbGVuZ3RoLCBwcmVmaXgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5Q29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vcilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXk4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXkzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5NjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIGFycmF5IGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheUluZGVmaW5pdGUgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93SW5kZWZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbmRlZmluaXRlIGxlbmd0aCBpdGVtcyBub3QgYWxsb3dlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBJbmZpbml0eSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVBcnJheSAoYnVmLCB0b2tlbikge1xuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIFR5cGUuYXJyYXkubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuLy8gdXNpbmcgYW4gYXJyYXkgYXMgYSBtYXAga2V5LCBhcmUgeW91IHN1cmUgYWJvdXQgdGhpcz8gd2UgY2FuIG9ubHkgc29ydFxuLy8gYnkgbWFwIGxlbmd0aCBoZXJlLCBpdCdzIHVwIHRvIHRoZSBlbmNvZGVyIHRvIGRlY2lkZSB0byBsb29rIGRlZXBlclxuZW5jb2RlQXJyYXkuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUFycmF5LmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIHJldHVybiB1aW50LmVuY29kZVVpbnRWYWx1ZS5lbmNvZGVkU2l6ZSh0b2tlbi52YWx1ZSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/4array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/5map.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/5map.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMap16: () => (/* binding */ decodeMap16),\n/* harmony export */   decodeMap32: () => (/* binding */ decodeMap32),\n/* harmony export */   decodeMap64: () => (/* binding */ decodeMap64),\n/* harmony export */   decodeMap8: () => (/* binding */ decodeMap8),\n/* harmony export */   decodeMapCompact: () => (/* binding */ decodeMapCompact),\n/* harmony export */   decodeMapIndefinite: () => (/* binding */ decodeMapIndefinite),\n/* harmony export */   encodeMap: () => (/* binding */ encodeMap)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeMap (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi81bWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTjtBQUNXOztBQUU3QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUCxFQUFFLHNEQUFvQixNQUFNLDJDQUFJO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzVtYXAuanM/NzQ3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChfZGF0YSwgX3BvcywgcHJlZml4LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm1hcCwgbGVuZ3RoLCBwcmVmaXgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcENvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXA2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgbWFwIGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXBJbmRlZmluaXRlIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5hbGxvd0luZGVmaW5pdGUgPT09IGZhbHNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW5kZWZpbml0ZSBsZW5ndGggaXRlbXMgbm90IGFsbG93ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgSW5maW5pdHkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlTWFwIChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS5tYXAubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuLy8gdXNpbmcgYSBtYXAgYXMgYSBtYXAga2V5LCBhcmUgeW91IHN1cmUgYWJvdXQgdGhpcz8gd2UgY2FuIG9ubHkgc29ydFxuLy8gYnkgbWFwIGxlbmd0aCBoZXJlLCBpdCdzIHVwIHRvIHRoZSBlbmNvZGVyIHRvIGRlY2lkZSB0byBsb29rIGRlZXBlclxuZW5jb2RlTWFwLmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVNYXAuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/5map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/6tag.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/6tag.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTag16: () => (/* binding */ decodeTag16),\n/* harmony export */   decodeTag32: () => (/* binding */ decodeTag32),\n/* harmony export */   decodeTag64: () => (/* binding */ decodeTag64),\n/* harmony export */   decodeTag8: () => (/* binding */ decodeTag8),\n/* harmony export */   decodeTagCompact: () => (/* binding */ decodeTagCompact),\n/* harmony export */   encodeTag: () => (/* binding */ encodeTag)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeTagCompact (_data, _pos, minor, _options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeTag (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi82dGFnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ047O0FBRWxDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxnREFBYztBQUMzQzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxNQUFNLGlEQUFlO0FBQzVDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0saURBQWU7QUFDNUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxpREFBZTtBQUM1Qzs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1AsRUFBRSxzREFBb0IsTUFBTSwyQ0FBSTtBQUNoQzs7QUFFQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzZ0YWcuanM/MWM0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnQ29tcGFjdCAoX2RhdGEsIF9wb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCBtaW5vciwgMSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnRhZywgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDIpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDUpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVGFnIChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS50YWcubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuZW5jb2RlVGFnLmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVUYWcuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/6tag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/7float.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/7float.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBreak: () => (/* binding */ decodeBreak),\n/* harmony export */   decodeFloat16: () => (/* binding */ decodeFloat16),\n/* harmony export */   decodeFloat32: () => (/* binding */ decodeFloat32),\n/* harmony export */   decodeFloat64: () => (/* binding */ decodeFloat64),\n/* harmony export */   decodeUndefined: () => (/* binding */ decodeUndefined),\n/* harmony export */   encodeFloat: () => (/* binding */ encodeFloat)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nfunction encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/7float.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/bl.js":
/*!************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/bl.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ Bl)\n/* harmony export */ });\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/byte-utils.js\");\n/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\n\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nclass Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.slice)(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ3NEOztBQUV0RDtBQUNBO0FBQ0E7O0FBRUE7O0FBRU87QUFDUDtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QztBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxREFBSztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLGVBQWUscURBQUs7QUFDcEI7QUFDQSxNQUFNO0FBQ047QUFDQSxhQUFhLHNEQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcz80YTFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmwgaXMgYSBsaXN0IG9mIGJ5dGUgY2h1bmtzLCBzaW1pbGFyIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9ydmFnZy9ibCBidXQgZm9yXG4gKiB3cml0aW5nIHJhdGhlciB0aGFuIHJlYWRpbmcuXG4gKiBBIEJsIG9iamVjdCBhY2NlcHRzIHNldCgpIG9wZXJhdGlvbnMgZm9yIGluZGl2aWR1YWwgYnl0ZXMgYW5kIGNvcHlUbygpIGZvclxuICogaW5zZXJ0aW5nIGJ5dGUgYXJyYXlzLiBUaGVzZSB3cml0ZSBvcGVyYXRpb25zIGRvbid0IGF1dG9tYXRpY2FsbHkgaW5jcmVtZW50XG4gKiB0aGUgaW50ZXJuYWwgY3Vyc29yIHNvIGl0cyBcImxlbmd0aFwiIHdvbid0IGJlIGNoYW5nZWQuIEluc3RlYWQsIGluY3JlbWVudCgpXG4gKiBtdXN0IGJlIGNhbGxlZCB0byBleHRlbmQgaXRzIGxlbmd0aCB0byBjb3ZlciB0aGUgaW5zZXJ0ZWQgZGF0YS5cbiAqIFRoZSB0b0J5dGVzKCkgY2FsbCB3aWxsIGNvbnZlcnQgYWxsIGludGVybmFsIG1lbW9yeSB0byBhIHNpbmdsZSBVaW50OEFycmF5IG9mXG4gKiB0aGUgY29ycmVjdCBsZW5ndGgsIHRydW5jYXRpbmcgYW55IGRhdGEgdGhhdCBpcyBzdG9yZWQgYnV0IGhhc24ndCBiZWVuXG4gKiBpbmNsdWRlZCBieSBhbiBpbmNyZW1lbnQoKS5cbiAqIGdldCgpIGNhbiByZXRyaWV2ZSBhIHNpbmdsZSBieXRlLlxuICogQWxsIG9wZXJhdGlvbnMgKGV4Y2VwdCB0b0J5dGVzKCkpIHRha2UgYW4gXCJvZmZzZXRcIiBhcmd1bWVudCB0aGF0IHdpbGwgcGVyZm9ybVxuICogdGhlIHdyaXRlIGF0IHRoZSBvZmZzZXQgX2Zyb20gdGhlIGN1cnJlbnQgY3Vyc29yXy4gRm9yIG1vc3Qgb3BlcmF0aW9ucyB0aGlzXG4gKiB3aWxsIGJlIGAwYCB0byB3cml0ZSBhdCB0aGUgY3VycmVudCBjdXJzb3IgcG9zaXRpb24gYnV0IGl0IGNhbiBiZSBhaGVhZCBvZlxuICogdGhlIGN1cnJlbnQgY3Vyc29yLiBOZWdhdGl2ZSBvZmZzZXRzIHByb2JhYmx5IHdvcmsgYnV0IGFyZSB1bnRlc3RlZC5cbiAqL1xuXG4vLyBUT0RPOiBpcGpzIGRvZXNuJ3Qgc3VwcG9ydCB0aGlzLCBvbmx5IGZvciB0ZXN0IGZpbGVzOiBodHRwczovL2dpdGh1Yi5jb20vbWlrZWFsL2lwanMvYmxvYi9tYXN0ZXIvc3JjL3BhY2thZ2UvdGVzdEZpbGUuanMjTDM5XG5pbXBvcnQgeyBhbGxvYywgY29uY2F0LCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLy8gdGhlIHRzLWlnbm9yZXMgaW4gdGhpcyBmaWxlIGFyZSBhbG1vc3QgYWxsIGZvciB0aGUgYFVpbnQ4QXJyYXl8bnVtYmVyW11gIGR1YWxpdHkgdGhhdCBleGlzdHNcbi8vIGZvciBwZXJmIHJlYXNvbnMuIENvbnNpZGVyIGJldHRlciBhcHByb2FjaGVzIHRvIHRoaXMgb3IgcmVtb3ZpbmcgaXQgZW50aXJlbHksIGl0IGlzIHF1aXRlXG4vLyByaXNreSBiZWNhdXNlIG9mIHNvbWUgYXNzdW1wdGlvbnMgYWJvdXQgc21hbGwgY2h1bmtzID09PSBudW1iZXJbXSBhbmQgZXZlcnl0aGluZyBlbHNlID09PSBVaW50OEFycmF5LlxuXG5jb25zdCBkZWZhdWx0Q2h1bmtTaXplID0gMjU2XG5cbmV4cG9ydCBjbGFzcyBCbCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2NodW5rU2l6ZV1cbiAgICovXG4gIGNvbnN0cnVjdG9yIChjaHVua1NpemUgPSBkZWZhdWx0Q2h1bmtTaXplKSB7XG4gICAgdGhpcy5jaHVua1NpemUgPSBjaHVua1NpemVcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLmN1cnNvciA9IDBcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLm1heEN1cnNvciA9IC0xXG4gICAgLyoqIEB0eXBlIHsoVWludDhBcnJheXxudW1iZXJbXSlbXX0gKi9cbiAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgLy8ga2VlcCB0aGUgZmlyc3QgY2h1bmsgYXJvdW5kIGlmIHdlIGNhbiB0byBzYXZlIGFsbG9jYXRpb25zIGZvciBmdXR1cmUgZW5jb2Rlc1xuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXxudW1iZXJbXXxudWxsfSAqL1xuICAgIHRoaXMuX2luaXRSZXVzZUNodW5rID0gbnVsbFxuICB9XG5cbiAgcmVzZXQgKCkge1xuICAgIHRoaXMuY3Vyc29yID0gMFxuICAgIHRoaXMubWF4Q3Vyc29yID0gLTFcbiAgICBpZiAodGhpcy5jaHVua3MubGVuZ3RoKSB7XG4gICAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgfVxuICAgIGlmICh0aGlzLl9pbml0UmV1c2VDaHVuayAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5jaHVua3MucHVzaCh0aGlzLl9pbml0UmV1c2VDaHVuaylcbiAgICAgIHRoaXMubWF4Q3Vyc29yID0gdGhpcy5faW5pdFJldXNlQ2h1bmsubGVuZ3RoIC0gMVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl8bnVtYmVyW119IGJ5dGVzXG4gICAqL1xuICBwdXNoIChieXRlcykge1xuICAgIGxldCB0b3BDaHVuayA9IHRoaXMuY2h1bmtzW3RoaXMuY2h1bmtzLmxlbmd0aCAtIDFdXG4gICAgY29uc3QgbmV3TWF4ID0gdGhpcy5jdXJzb3IgKyBieXRlcy5sZW5ndGhcbiAgICBpZiAobmV3TWF4IDw9IHRoaXMubWF4Q3Vyc29yICsgMSkge1xuICAgICAgLy8gd2UgaGF2ZSBhdCBsZWFzdCBvbmUgY2h1bmsgYW5kIHdlIGNhbiBmaXQgdGhlc2UgYnl0ZXMgaW50byB0aGF0IGNodW5rXG4gICAgICBjb25zdCBjaHVua1BvcyA9IHRvcENodW5rLmxlbmd0aCAtICh0aGlzLm1heEN1cnNvciAtIHRoaXMuY3Vyc29yKSAtIDFcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHRvcENodW5rLnNldChieXRlcywgY2h1bmtQb3MpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGNhbid0IGZpdCBpdCBpblxuICAgICAgaWYgKHRvcENodW5rKSB7XG4gICAgICAgIC8vIHRyaXAgdGhlIGxhc3QgY2h1bmsgdG8gYGN1cnNvcmAgaWYgd2UgbmVlZCB0b1xuICAgICAgICBjb25zdCBjaHVua1BvcyA9IHRvcENodW5rLmxlbmd0aCAtICh0aGlzLm1heEN1cnNvciAtIHRoaXMuY3Vyc29yKSAtIDFcbiAgICAgICAgaWYgKGNodW5rUG9zIDwgdG9wQ2h1bmsubGVuZ3RoKSB7XG4gICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgIHRoaXMuY2h1bmtzW3RoaXMuY2h1bmtzLmxlbmd0aCAtIDFdID0gdG9wQ2h1bmsuc3ViYXJyYXkoMCwgY2h1bmtQb3MpXG4gICAgICAgICAgdGhpcy5tYXhDdXJzb3IgPSB0aGlzLmN1cnNvciAtIDFcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGJ5dGVzLmxlbmd0aCA8IDY0ICYmIGJ5dGVzLmxlbmd0aCA8IHRoaXMuY2h1bmtTaXplKSB7XG4gICAgICAgIC8vIG1ha2UgYSBuZXcgY2h1bmsgYW5kIGNvcHkgdGhlIG5ldyBvbmUgaW50byBpdFxuICAgICAgICB0b3BDaHVuayA9IGFsbG9jKHRoaXMuY2h1bmtTaXplKVxuICAgICAgICB0aGlzLmNodW5rcy5wdXNoKHRvcENodW5rKVxuICAgICAgICB0aGlzLm1heEN1cnNvciArPSB0b3BDaHVuay5sZW5ndGhcbiAgICAgICAgaWYgKHRoaXMuX2luaXRSZXVzZUNodW5rID09PSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSB0b3BDaHVua1xuICAgICAgICB9XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgdG9wQ2h1bmsuc2V0KGJ5dGVzLCAwKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gcHVzaCB0aGUgbmV3IGJ5dGVzIGluIGFzIGl0cyBvd24gY2h1bmtcbiAgICAgICAgdGhpcy5jaHVua3MucHVzaChieXRlcylcbiAgICAgICAgdGhpcy5tYXhDdXJzb3IgKz0gYnl0ZXMubGVuZ3RoXG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuY3Vyc29yICs9IGJ5dGVzLmxlbmd0aFxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3Jlc2V0XVxuICAgKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAgICovXG4gIHRvQnl0ZXMgKHJlc2V0ID0gZmFsc2UpIHtcbiAgICBsZXQgYnl0c1xuICAgIGlmICh0aGlzLmNodW5rcy5sZW5ndGggPT09IDEpIHtcbiAgICAgIGNvbnN0IGNodW5rID0gdGhpcy5jaHVua3NbMF1cbiAgICAgIGlmIChyZXNldCAmJiB0aGlzLmN1cnNvciA+IGNodW5rLmxlbmd0aCAvIDIpIHtcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGJ5dHMgPSB0aGlzLmN1cnNvciA9PT0gY2h1bmsubGVuZ3RoID8gY2h1bmsgOiBjaHVuay5zdWJhcnJheSgwLCB0aGlzLmN1cnNvcilcbiAgICAgICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSBudWxsXG4gICAgICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYnl0cyA9IHNsaWNlKGNodW5rLCAwLCB0aGlzLmN1cnNvcilcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgYnl0cyA9IGNvbmNhdCh0aGlzLmNodW5rcywgdGhpcy5jdXJzb3IpXG4gICAgfVxuICAgIGlmIChyZXNldCkge1xuICAgICAgdGhpcy5yZXNldCgpXG4gICAgfVxuICAgIHJldHVybiBieXRzXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/bl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/byte-utils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/byte-utils.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   asU8A: () => (/* binding */ asU8A),\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   decodeCodePointsArray: () => (/* binding */ decodeCodePointsArray),\n/* harmony export */   fromArray: () => (/* binding */ fromArray),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   useBuffer: () => (/* binding */ useBuffer)\n/* harmony export */ });\n// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nconst useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nfunction asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nconst toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nconst fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nconst fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nconst slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nconst concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nconst alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nconst toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nconst fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/byte-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnoughData: () => (/* binding */ assertEnoughData),\n/* harmony export */   decodeErrPrefix: () => (/* binding */ decodeErrPrefix),\n/* harmony export */   encodeErrPrefix: () => (/* binding */ encodeErrPrefix),\n/* harmony export */   uintMinorPrefixBytes: () => (/* binding */ uintMinorPrefixBytes)\n/* harmony export */ });\nconst decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBOztBQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanM/NTE0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWNvZGVFcnJQcmVmaXggPSAnQ0JPUiBkZWNvZGUgZXJyb3I6J1xuY29uc3QgZW5jb2RlRXJyUHJlZml4ID0gJ0NCT1IgZW5jb2RlIGVycm9yOidcblxuY29uc3QgdWludE1pbm9yUHJlZml4Qnl0ZXMgPSBbXVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjNdID0gMVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjRdID0gMlxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjVdID0gM1xudWludE1pbm9yUHJlZml4Qnl0ZXNbMjZdID0gNVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjddID0gOVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG5lZWRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0RW5vdWdoRGF0YSAoZGF0YSwgcG9zLCBuZWVkKSB7XG4gIGlmIChkYXRhLmxlbmd0aCAtIHBvcyA8IG5lZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBub3QgZW5vdWdoIGRhdGEgZm9yIHR5cGVgKVxuICB9XG59XG5cbmV4cG9ydCB7XG4gIGRlY29kZUVyclByZWZpeCxcbiAgZW5jb2RlRXJyUHJlZml4LFxuICB1aW50TWlub3JQcmVmaXhCeXRlcyxcbiAgYXNzZXJ0RW5vdWdoRGF0YVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/decode.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/decode.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokeniser: () => (/* binding */ Tokeniser),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   tokensToObject: () => (/* binding */ tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/jump.js\");\n\n\n\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = _jump_js__WEBPACK_IMPORTED_MODULE_2__.quick[byt]\n    if (token === undefined) {\n      const decoder = _jump_js__WEBPACK_IMPORTED_MODULE_2__.jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/encode.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/encode.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ref: () => (/* binding */ Ref),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeCustom: () => (/* binding */ encodeCustom),\n/* harmony export */   makeCborEncoders: () => (/* binding */ makeCborEncoders),\n/* harmony export */   objectToTokens: () => (/* binding */ objectToTokens)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/is.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _bl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bl.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/bl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/jump.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/7float.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_4__.quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nfunction makeCborEncoders () {\n  const encoders = []\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint.major] = _0uint_js__WEBPACK_IMPORTED_MODULE_6__.encodeUint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint.major] = _1negint_js__WEBPACK_IMPORTED_MODULE_7__.encodeNegint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes.major] = _2bytes_js__WEBPACK_IMPORTED_MODULE_8__.encodeBytes\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string.major] = _3string_js__WEBPACK_IMPORTED_MODULE_9__.encodeString\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array.major] = _4array_js__WEBPACK_IMPORTED_MODULE_10__.encodeArray\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map.major] = _5map_js__WEBPACK_IMPORTED_MODULE_11__.encodeMap\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag.major] = _6tag_js__WEBPACK_IMPORTED_MODULE_12__.encodeTag\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float.major] = _7float_js__WEBPACK_IMPORTED_MODULE_13__.encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null),\n  undefined: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.undefined, undefined),\n  true: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true),\n  false: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false),\n  emptyArray: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, 0),\n  emptyMap: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, obj)\n    } else if (obj >= 0) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.is)(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_5__.asU8A)(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/is.js":
/*!************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/is.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   is: () => (/* binding */ is)\n/* harmony export */ });\n// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nfunction is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcz80NTk0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaXMgYW4gdW5mb3J0dW5hdGUgcmVwbGFjZW1lbnQgZm9yIEBzaW5kcmVzb3JodXMvaXMgdGhhdCB3ZSBuZWVkIHRvXG4vLyByZS1pbXBsZW1lbnQgZm9yIHBlcmZvcm1hbmNlIHB1cnBvc2VzLiBJbiBwYXJ0aWN1bGFyIHRoZSBpcy5vYnNlcnZhYmxlKClcbi8vIGNoZWNrIGlzIGV4cGVuc2l2ZSwgYW5kIHVubmVjZXNzYXJ5IGZvciBvdXIgcHVycG9zZXMuIFRoZSB2YWx1ZXMgcmV0dXJuZWRcbi8vIGFyZSBjb21wYXRpYmxlIHdpdGggQHNpbmRyZXNvcmh1cy9pcywgaG93ZXZlci5cblxuY29uc3QgdHlwZW9mcyA9IFtcbiAgJ3N0cmluZycsXG4gICdudW1iZXInLFxuICAnYmlnaW50JyxcbiAgJ3N5bWJvbCdcbl1cblxuY29uc3Qgb2JqZWN0VHlwZU5hbWVzID0gW1xuICAnRnVuY3Rpb24nLFxuICAnR2VuZXJhdG9yJyxcbiAgJ0FzeW5jR2VuZXJhdG9yJyxcbiAgJ0dlbmVyYXRvckZ1bmN0aW9uJyxcbiAgJ0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24nLFxuICAnQXN5bmNGdW5jdGlvbicsXG4gICdPYnNlcnZhYmxlJyxcbiAgJ0FycmF5JyxcbiAgJ0J1ZmZlcicsXG4gICdPYmplY3QnLFxuICAnUmVnRXhwJyxcbiAgJ0RhdGUnLFxuICAnRXJyb3InLFxuICAnTWFwJyxcbiAgJ1NldCcsXG4gICdXZWFrTWFwJyxcbiAgJ1dlYWtTZXQnLFxuICAnQXJyYXlCdWZmZXInLFxuICAnU2hhcmVkQXJyYXlCdWZmZXInLFxuICAnRGF0YVZpZXcnLFxuICAnUHJvbWlzZScsXG4gICdVUkwnLFxuICAnSFRNTEVsZW1lbnQnLFxuICAnSW50OEFycmF5JyxcbiAgJ1VpbnQ4QXJyYXknLFxuICAnVWludDhDbGFtcGVkQXJyYXknLFxuICAnSW50MTZBcnJheScsXG4gICdVaW50MTZBcnJheScsXG4gICdJbnQzMkFycmF5JyxcbiAgJ1VpbnQzMkFycmF5JyxcbiAgJ0Zsb2F0MzJBcnJheScsXG4gICdGbG9hdDY0QXJyYXknLFxuICAnQmlnSW50NjRBcnJheScsXG4gICdCaWdVaW50NjRBcnJheSdcbl1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpcyAodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuICdudWxsJ1xuICB9XG4gIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuICd1bmRlZmluZWQnXG4gIH1cbiAgaWYgKHZhbHVlID09PSB0cnVlIHx8IHZhbHVlID09PSBmYWxzZSkge1xuICAgIHJldHVybiAnYm9vbGVhbidcbiAgfVxuICBjb25zdCB0eXBlT2YgPSB0eXBlb2YgdmFsdWVcbiAgaWYgKHR5cGVvZnMuaW5jbHVkZXModHlwZU9mKSkge1xuICAgIHJldHVybiB0eXBlT2ZcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIG5vdCBnb2luZyB0byBib3RoZXIgdGVzdGluZyB0aGlzLCBpdCdzIG5vdCBnb2luZyB0byBiZSB2YWxpZCBhbnl3YXlcbiAgaWYgKHR5cGVPZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiAnRnVuY3Rpb24nXG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuICdBcnJheSdcbiAgfVxuICBpZiAoaXNCdWZmZXIodmFsdWUpKSB7XG4gICAgcmV0dXJuICdCdWZmZXInXG4gIH1cbiAgY29uc3Qgb2JqZWN0VHlwZSA9IGdldE9iamVjdFR5cGUodmFsdWUpXG4gIGlmIChvYmplY3RUeXBlKSB7XG4gICAgcmV0dXJuIG9iamVjdFR5cGVcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gJ09iamVjdCdcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc0J1ZmZlciAodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yICYmIHZhbHVlLmNvbnN0cnVjdG9yLmlzQnVmZmVyICYmIHZhbHVlLmNvbnN0cnVjdG9yLmlzQnVmZmVyLmNhbGwobnVsbCwgdmFsdWUpXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJucyB7c3RyaW5nfHVuZGVmaW5lZH1cbiAqL1xuZnVuY3Rpb24gZ2V0T2JqZWN0VHlwZSAodmFsdWUpIHtcbiAgY29uc3Qgb2JqZWN0VHlwZU5hbWUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLnNsaWNlKDgsIC0xKVxuICBpZiAob2JqZWN0VHlwZU5hbWVzLmluY2x1ZGVzKG9iamVjdFR5cGVOYW1lKSkge1xuICAgIHJldHVybiBvYmplY3RUeXBlTmFtZVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiB1bmRlZmluZWRcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/jump.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/jump.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jump: () => (/* binding */ jump),\n/* harmony export */   quick: () => (/* binding */ quick),\n/* harmony export */   quickEncodeToken: () => (/* binding */ quickEncodeToken)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/7float.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nconst jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytesCompact\n}\njump[0x58] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeStringCompact\n}\njump[0x78] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayCompact\n}\njump[0x98] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapCompact\n}\njump[0xb8] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTagCompact\n}\njump[0xd8] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag8\njump[0xd9] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag16\njump[0xda] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag32\njump[0xdb] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nconst quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, '', 1)\n// empty list\nquick[0x80] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, 0, 1)\n// empty map\nquick[0xa0] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, 0, 1)\n// false\nquick[0xf4] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false, false, 1)\n// true\nquick[0xf5] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true, true, 1)\n// null\nquick[0xf6] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nfunction quickEncodeToken (token) {\n  switch (token.type) {\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf4])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf5])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf6])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes:\n      if (!token.value.length) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x40])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string:\n      if (token.value === '') {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x60])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint:\n      if (token.value < 24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([Number(token.value)])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint:\n      if (token.value >= -24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([31 - Number(token.value)])\n      }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/jump.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/length.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/length.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodedLength: () => (/* binding */ encodedLength),\n/* harmony export */   tokensToLength: () => (/* binding */ tokensToLength)\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/jump.js\");\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\nconst cborEncoders = (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.makeCborEncoders)()\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_1__.quickEncodeToken\n}\n\n/**\n * Calculate the byte length of the given data when encoded as CBOR with the\n * options provided.\n * This calculation will be accurate if the same options are used as when\n * performing a normal encode. Some encode options can change the encoding\n * output length.\n *\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {number}\n */\nfunction encodedLength (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  options.mapSorter = undefined // won't change the length\n  const tokens = (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.objectToTokens)(data, options)\n  return tokensToLength(tokens, cborEncoders, options)\n}\n\n/**\n * Calculate the byte length of the data as represented by the given tokens when\n * encoded as CBOR with the options provided.\n * This function is for advanced users and would not normally be called\n * directly. See `encodedLength()` for appropriate use.\n *\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} [encoders]\n * @param {EncodeOptions} [options]\n */\nfunction tokensToLength (tokens, encoders = cborEncoders, options = defaultEncodeOptions) {\n  if (Array.isArray(tokens)) {\n    let len = 0\n    for (const token of tokens) {\n      len += tokensToLength(token, encoders, options)\n    }\n    return len\n  } else {\n    const encoder = encoders[tokens.type.major]\n    /* c8 ignore next 3 */\n    if (encoder.encodedSize === undefined || typeof encoder.encodedSize !== 'function') {\n      throw new Error(`Encoder for ${tokens.type.name} does not have an encodedSize()`)\n    }\n    return encoder.encodedSize(tokens, options)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9sZW5ndGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4RDtBQUNsQjs7QUFFNUM7QUFDQSxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLHlDQUF5QztBQUN0RCxhQUFhLDRDQUE0QztBQUN6RDs7QUFFQSxxQkFBcUIsNERBQWdCOztBQUVyQyxXQUFXLGVBQWU7QUFDMUI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsS0FBSztBQUNoQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCw0QkFBNEI7QUFDNUI7QUFDQSxpQkFBaUIsMERBQWM7QUFDL0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHFCQUFxQjtBQUNoQyxXQUFXLG9CQUFvQjtBQUMvQixXQUFXLGVBQWU7QUFDMUI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsa0JBQWtCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9sZW5ndGguanM/ZGQzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlQ2JvckVuY29kZXJzLCBvYmplY3RUb1Rva2VucyB9IGZyb20gJy4vZW5jb2RlLmpzJ1xuaW1wb3J0IHsgcXVpY2tFbmNvZGVUb2tlbiB9IGZyb20gJy4vanVtcC5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5FbmNvZGVPcHRpb25zfSBFbmNvZGVPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5Ub2tlblR5cGVFbmNvZGVyfSBUb2tlblR5cGVFbmNvZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5Ub2tlbk9yTmVzdGVkVG9rZW5zfSBUb2tlbk9yTmVzdGVkVG9rZW5zXG4gKi9cblxuY29uc3QgY2JvckVuY29kZXJzID0gbWFrZUNib3JFbmNvZGVycygpXG5cbi8qKiBAdHlwZSB7RW5jb2RlT3B0aW9uc30gKi9cbmNvbnN0IGRlZmF1bHRFbmNvZGVPcHRpb25zID0ge1xuICBmbG9hdDY0OiBmYWxzZSxcbiAgcXVpY2tFbmNvZGVUb2tlblxufVxuXG4vKipcbiAqIENhbGN1bGF0ZSB0aGUgYnl0ZSBsZW5ndGggb2YgdGhlIGdpdmVuIGRhdGEgd2hlbiBlbmNvZGVkIGFzIENCT1Igd2l0aCB0aGVcbiAqIG9wdGlvbnMgcHJvdmlkZWQuXG4gKiBUaGlzIGNhbGN1bGF0aW9uIHdpbGwgYmUgYWNjdXJhdGUgaWYgdGhlIHNhbWUgb3B0aW9ucyBhcmUgdXNlZCBhcyB3aGVuXG4gKiBwZXJmb3JtaW5nIGEgbm9ybWFsIGVuY29kZS4gU29tZSBlbmNvZGUgb3B0aW9ucyBjYW4gY2hhbmdlIHRoZSBlbmNvZGluZ1xuICogb3V0cHV0IGxlbmd0aC5cbiAqXG4gKiBAcGFyYW0ge2FueX0gZGF0YVxuICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVkTGVuZ3RoIChkYXRhLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0RW5jb2RlT3B0aW9ucywgb3B0aW9ucylcbiAgb3B0aW9ucy5tYXBTb3J0ZXIgPSB1bmRlZmluZWQgLy8gd29uJ3QgY2hhbmdlIHRoZSBsZW5ndGhcbiAgY29uc3QgdG9rZW5zID0gb2JqZWN0VG9Ub2tlbnMoZGF0YSwgb3B0aW9ucylcbiAgcmV0dXJuIHRva2Vuc1RvTGVuZ3RoKHRva2VucywgY2JvckVuY29kZXJzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIENhbGN1bGF0ZSB0aGUgYnl0ZSBsZW5ndGggb2YgdGhlIGRhdGEgYXMgcmVwcmVzZW50ZWQgYnkgdGhlIGdpdmVuIHRva2VucyB3aGVuXG4gKiBlbmNvZGVkIGFzIENCT1Igd2l0aCB0aGUgb3B0aW9ucyBwcm92aWRlZC5cbiAqIFRoaXMgZnVuY3Rpb24gaXMgZm9yIGFkdmFuY2VkIHVzZXJzIGFuZCB3b3VsZCBub3Qgbm9ybWFsbHkgYmUgY2FsbGVkXG4gKiBkaXJlY3RseS4gU2VlIGBlbmNvZGVkTGVuZ3RoKClgIGZvciBhcHByb3ByaWF0ZSB1c2UuXG4gKlxuICogQHBhcmFtIHtUb2tlbk9yTmVzdGVkVG9rZW5zfSB0b2tlbnNcbiAqIEBwYXJhbSB7VG9rZW5UeXBlRW5jb2RlcltdfSBbZW5jb2RlcnNdXG4gKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IFtvcHRpb25zXVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9rZW5zVG9MZW5ndGggKHRva2VucywgZW5jb2RlcnMgPSBjYm9yRW5jb2RlcnMsIG9wdGlvbnMgPSBkZWZhdWx0RW5jb2RlT3B0aW9ucykge1xuICBpZiAoQXJyYXkuaXNBcnJheSh0b2tlbnMpKSB7XG4gICAgbGV0IGxlbiA9IDBcbiAgICBmb3IgKGNvbnN0IHRva2VuIG9mIHRva2Vucykge1xuICAgICAgbGVuICs9IHRva2Vuc1RvTGVuZ3RoKHRva2VuLCBlbmNvZGVycywgb3B0aW9ucylcbiAgICB9XG4gICAgcmV0dXJuIGxlblxuICB9IGVsc2Uge1xuICAgIGNvbnN0IGVuY29kZXIgPSBlbmNvZGVyc1t0b2tlbnMudHlwZS5tYWpvcl1cbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gICAgaWYgKGVuY29kZXIuZW5jb2RlZFNpemUgPT09IHVuZGVmaW5lZCB8fCB0eXBlb2YgZW5jb2Rlci5lbmNvZGVkU2l6ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBFbmNvZGVyIGZvciAke3Rva2Vucy50eXBlLm5hbWV9IGRvZXMgbm90IGhhdmUgYW4gZW5jb2RlZFNpemUoKWApXG4gICAgfVxuICAgIHJldHVybiBlbmNvZGVyLmVuY29kZWRTaXplKHRva2Vucywgb3B0aW9ucylcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/length.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\nclass Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi90b2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLFdBQVcsSUFBSSxVQUFVO0FBQzVDOztBQUVBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQSxlQUFlLHNCQUFzQjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVSxJQUFJLFdBQVc7QUFDN0M7QUFDQTs7QUFFc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvY2JvcmcvbGliL3Rva2VuLmpzPzY0OTQiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVHlwZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gbWFqb3JcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtib29sZWFufSB0ZXJtaW5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IgKG1ham9yLCBuYW1lLCB0ZXJtaW5hbCkge1xuICAgIHRoaXMubWFqb3IgPSBtYWpvclxuICAgIHRoaXMubWFqb3JFbmNvZGVkID0gbWFqb3IgPDwgNVxuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLnRlcm1pbmFsID0gdGVybWluYWxcbiAgfVxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIHJldHVybiBgVHlwZVske3RoaXMubWFqb3J9XS4ke3RoaXMubmFtZX1gXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtUeXBlfSB0eXBcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGNvbXBhcmUgKHR5cCkge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDEgKi9cbiAgICByZXR1cm4gdGhpcy5tYWpvciA8IHR5cC5tYWpvciA/IC0xIDogdGhpcy5tYWpvciA+IHR5cC5tYWpvciA/IDEgOiAwXG4gIH1cbn1cblxuLy8gY29udmVydCB0byBzdGF0aWMgZmllbGRzIHdoZW4gYmV0dGVyIHN1cHBvcnRlZFxuVHlwZS51aW50ID0gbmV3IFR5cGUoMCwgJ3VpbnQnLCB0cnVlKVxuVHlwZS5uZWdpbnQgPSBuZXcgVHlwZSgxLCAnbmVnaW50JywgdHJ1ZSlcblR5cGUuYnl0ZXMgPSBuZXcgVHlwZSgyLCAnYnl0ZXMnLCB0cnVlKVxuVHlwZS5zdHJpbmcgPSBuZXcgVHlwZSgzLCAnc3RyaW5nJywgdHJ1ZSlcblR5cGUuYXJyYXkgPSBuZXcgVHlwZSg0LCAnYXJyYXknLCBmYWxzZSlcblR5cGUubWFwID0gbmV3IFR5cGUoNSwgJ21hcCcsIGZhbHNlKVxuVHlwZS50YWcgPSBuZXcgVHlwZSg2LCAndGFnJywgZmFsc2UpIC8vIHRlcm1pbmFsP1xuVHlwZS5mbG9hdCA9IG5ldyBUeXBlKDcsICdmbG9hdCcsIHRydWUpXG5UeXBlLmZhbHNlID0gbmV3IFR5cGUoNywgJ2ZhbHNlJywgdHJ1ZSlcblR5cGUudHJ1ZSA9IG5ldyBUeXBlKDcsICd0cnVlJywgdHJ1ZSlcblR5cGUubnVsbCA9IG5ldyBUeXBlKDcsICdudWxsJywgdHJ1ZSlcblR5cGUudW5kZWZpbmVkID0gbmV3IFR5cGUoNywgJ3VuZGVmaW5lZCcsIHRydWUpXG5UeXBlLmJyZWFrID0gbmV3IFR5cGUoNywgJ2JyZWFrJywgdHJ1ZSlcbi8vIFR5cGUuaW5kZWZpbml0ZUxlbmd0aCA9IG5ldyBUeXBlKDAsICdpbmRlZmluaXRlTGVuZ3RoJywgdHJ1ZSlcblxuY2xhc3MgVG9rZW4ge1xuICAvKipcbiAgICogQHBhcmFtIHtUeXBlfSB0eXBlXG4gICAqIEBwYXJhbSB7YW55fSBbdmFsdWVdXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbZW5jb2RlZExlbmd0aF1cbiAgICovXG4gIGNvbnN0cnVjdG9yICh0eXBlLCB2YWx1ZSwgZW5jb2RlZExlbmd0aCkge1xuICAgIHRoaXMudHlwZSA9IHR5cGVcbiAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgICB0aGlzLmVuY29kZWRMZW5ndGggPSBlbmNvZGVkTGVuZ3RoXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmVuY29kZWRCeXRlcyA9IHVuZGVmaW5lZFxuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXx1bmRlZmluZWR9ICovXG4gICAgdGhpcy5ieXRlVmFsdWUgPSB1bmRlZmluZWRcbiAgfVxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIHJldHVybiBgVG9rZW5bJHt0aGlzLnR5cGV9XS4ke3RoaXMudmFsdWV9YFxuICB9XG59XG5cbmV4cG9ydCB7IFR5cGUsIFRva2VuIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/cborg/lib/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base10.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base10.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base10: () => (/* binding */ base10)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: '9',\n    name: 'base10',\n    alphabet: '0123456789'\n});\n//# sourceMappingURL=base10.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMTAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7QUFDM0IsZUFBZSwrQ0FBSztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UxMC5qcz82ZjY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMTAgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnOScsXG4gICAgbmFtZTogJ2Jhc2UxMCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5J1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMTAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base16.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base16.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base16: () => (/* binding */ base16),\n/* harmony export */   base16upper: () => (/* binding */ base16upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'f',\n    name: 'base16',\n    alphabet: '0123456789abcdef',\n    bitsPerChar: 4\n});\nconst base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'F',\n    name: 'base16upper',\n    alphabet: '0123456789ABCDEF',\n    bitsPerChar: 4\n});\n//# sourceMappingURL=base16.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9DO0FBQzdCLGVBQWUsaURBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sb0JBQW9CLGlEQUFPO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMTYuanM/NDQwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMTYgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdmJyxcbiAgICBuYW1lOiAnYmFzZTE2JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWYnLFxuICAgIGJpdHNQZXJDaGFyOiA0XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMTZ1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0YnLFxuICAgIG5hbWU6ICdiYXNlMTZ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGJyxcbiAgICBiaXRzUGVyQ2hhcjogNFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMTYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base2.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base2.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base2: () => (/* binding */ base2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: '0',\n    name: 'base2',\n    alphabet: '01',\n    bitsPerChar: 1\n});\n//# sourceMappingURL=base2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUM3QixjQUFjLGlEQUFPO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMi5qcz9iNjY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnMCcsXG4gICAgbmFtZTogJ2Jhc2UyJyxcbiAgICBhbHBoYWJldDogJzAxJyxcbiAgICBiaXRzUGVyQ2hhcjogMVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base256emoji.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base256emoji.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base256emoji: () => (/* binding */ base256emoji)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂');\nconst alphabetBytesToChars = (alphabet.reduce((p, c, i) => { p[i] = c; return p; }, ([])));\nconst alphabetCharsToBytes = (alphabet.reduce((p, c, i) => {\n    const codePoint = c.codePointAt(0);\n    if (codePoint == null) {\n        throw new Error(`Invalid character: ${c}`);\n    }\n    p[codePoint] = i;\n    return p;\n}, ([])));\nfunction encode(data) {\n    return data.reduce((p, c) => {\n        p += alphabetBytesToChars[c];\n        return p;\n    }, '');\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str) {\n        const codePoint = char.codePointAt(0);\n        if (codePoint == null) {\n            throw new Error(`Invalid character: ${char}`);\n        }\n        const byt = alphabetCharsToBytes[codePoint];\n        if (byt == null) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nconst base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: '🚀',\n    name: 'base256emoji',\n    encode,\n    decode\n});\n//# sourceMappingURL=base256emoji.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMjU2ZW1vamkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUM7QUFDakM7QUFDQSw2REFBNkQsVUFBVSxXQUFXO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxFQUFFO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsS0FBSztBQUN2RDtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsS0FBSztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUJBQXFCLDhDQUFJO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMjU2ZW1vamkuanM/YmZhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tIH0gZnJvbSAnLi9iYXNlLmpzJztcbmNvbnN0IGFscGhhYmV0ID0gQXJyYXkuZnJvbSgn8J+agPCfqpDimITwn5uw8J+MjPCfjJHwn4yS8J+Mk/CfjJTwn4yV8J+MlvCfjJfwn4yY8J+MjfCfjI/wn4yO8J+QieKYgPCfkrvwn5al8J+SvvCfkr/wn5iC4p2k8J+YjfCfpKPwn5iK8J+Zj/CfkpXwn5it8J+YmPCfkY3wn5iF8J+Rj/CfmIHwn5Sl8J+lsPCfkpTwn5KW8J+SmfCfmKLwn6SU8J+YhvCfmYTwn5Kq8J+YieKYuvCfkYzwn6SX8J+SnPCfmJTwn5iO8J+Yh/CfjLnwn6Sm8J+OifCfkp7inIzinKjwn6S38J+YsfCfmIzwn4y48J+ZjPCfmIvwn5KX8J+SmvCfmI/wn5Kb8J+ZgvCfkpPwn6Sp8J+YhPCfmIDwn5ak8J+Yg/Cfkq/wn5mI8J+Rh/Cfjrbwn5iS8J+kreKdo/CfmJzwn5KL8J+RgPCfmKrwn5iR8J+SpfCfmYvwn5ie8J+YqfCfmKHwn6Sq8J+RivCfpbPwn5il8J+kpPCfkYnwn5KD8J+Ys+Kci/CfmJrwn5id8J+YtPCfjJ/wn5is8J+Zg/CfjYDwn4y38J+Yu/CfmJPirZDinIXwn6W68J+MiPCfmIjwn6SY8J+SpuKclPCfmKPwn4+D8J+SkOKYufCfjorwn5KY8J+YoOKYnfCfmJXwn4y68J+OgvCfjLvwn5iQ8J+WlfCfkp3wn5mK8J+YufCfl6Pwn5Kr8J+SgPCfkZHwn4618J+knvCfmJvwn5S08J+YpPCfjLzwn5ir4pq98J+kmeKYlfCfj4bwn6Sr8J+RiPCfmK7wn5mG8J+Nu/CfjYPwn5C28J+SgfCfmLLwn4y/8J+nofCfjoHimqHwn4ye8J+OiOKdjOKcivCfkYvwn5iw8J+kqPCfmLbwn6Sd8J+atvCfkrDwn42T8J+SovCfpJ/wn5mB8J+aqPCfkqjwn6Ss4pyI8J+OgPCfjbrwn6ST8J+YmfCfkp/wn4yx8J+YlvCfkbbwn6W04pa24p6h4p2T8J+SjvCfkrjirIfwn5io8J+MmvCfpovwn5i38J+VuuKaoPCfmYXwn5if8J+YtfCfkY7wn6Sy8J+koPCfpKfwn5OM8J+UtfCfkoXwn6eQ8J+QvvCfjZLwn5iX8J+kkfCfjIrwn6Sv8J+Qt+KYjvCfkqfwn5iv8J+ShvCfkYbwn46k8J+Zh/CfjZHinYTwn4y08J+So/CfkLjwn5KM8J+TjfCfpYDwn6Si8J+RhfCfkqHwn5Kp8J+RkPCfk7jwn5G78J+kkPCfpK7wn4688J+ltfCfmqnwn42O8J+NivCfkbzwn5KN8J+To/CfpYInKTtcbmNvbnN0IGFscGhhYmV0Qnl0ZXNUb0NoYXJzID0gKGFscGhhYmV0LnJlZHVjZSgocCwgYywgaSkgPT4geyBwW2ldID0gYzsgcmV0dXJuIHA7IH0sIChbXSkpKTtcbmNvbnN0IGFscGhhYmV0Q2hhcnNUb0J5dGVzID0gKGFscGhhYmV0LnJlZHVjZSgocCwgYywgaSkgPT4ge1xuICAgIGNvbnN0IGNvZGVQb2ludCA9IGMuY29kZVBvaW50QXQoMCk7XG4gICAgaWYgKGNvZGVQb2ludCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjaGFyYWN0ZXI6ICR7Y31gKTtcbiAgICB9XG4gICAgcFtjb2RlUG9pbnRdID0gaTtcbiAgICByZXR1cm4gcDtcbn0sIChbXSkpKTtcbmZ1bmN0aW9uIGVuY29kZShkYXRhKSB7XG4gICAgcmV0dXJuIGRhdGEucmVkdWNlKChwLCBjKSA9PiB7XG4gICAgICAgIHAgKz0gYWxwaGFiZXRCeXRlc1RvQ2hhcnNbY107XG4gICAgICAgIHJldHVybiBwO1xuICAgIH0sICcnKTtcbn1cbmZ1bmN0aW9uIGRlY29kZShzdHIpIHtcbiAgICBjb25zdCBieXRzID0gW107XG4gICAgZm9yIChjb25zdCBjaGFyIG9mIHN0cikge1xuICAgICAgICBjb25zdCBjb2RlUG9pbnQgPSBjaGFyLmNvZGVQb2ludEF0KDApO1xuICAgICAgICBpZiAoY29kZVBvaW50ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjaGFyYWN0ZXI6ICR7Y2hhcn1gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBieXQgPSBhbHBoYWJldENoYXJzVG9CeXRlc1tjb2RlUG9pbnRdO1xuICAgICAgICBpZiAoYnl0ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm9uLWJhc2UyNTZlbW9qaSBjaGFyYWN0ZXI6ICR7Y2hhcn1gKTtcbiAgICAgICAgfVxuICAgICAgICBieXRzLnB1c2goYnl0KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ5dHMpO1xufVxuZXhwb3J0IGNvbnN0IGJhc2UyNTZlbW9qaSA9IGZyb20oe1xuICAgIHByZWZpeDogJ/CfmoAnLFxuICAgIG5hbWU6ICdiYXNlMjU2ZW1vamknLFxuICAgIGVuY29kZSxcbiAgICBkZWNvZGVcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTI1NmVtb2ppLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base256emoji.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base32.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base32.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFvQztBQUM3QixlQUFlLGlEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQixpREFBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLGtCQUFrQixpREFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSx1QkFBdUIsaURBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLGlEQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLDBCQUEwQixpREFBTztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxnQkFBZ0IsaURBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzMi5qcz9mMjQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2InLFxuICAgIG5hbWU6ICdiYXNlMzInLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0InLFxuICAgIG5hbWU6ICdiYXNlMzJ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWQnLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdDJyxcbiAgICBuYW1lOiAnYmFzZTMycGFkdXBwZXInLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dicsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1QnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXhwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ6ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnaCcsXG4gICAgbmFtZTogJ2Jhc2UzMnonLFxuICAgIGFscGhhYmV0OiAneWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjknLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base36.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base36.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGVBQWUsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQiwrQ0FBSztBQUNoQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzNi5qcz83MGE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzYgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnaycsXG4gICAgbmFtZTogJ2Jhc2UzNicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzZ1cHBlciA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdLJyxcbiAgICBuYW1lOiAnYmFzZTM2dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMzYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base58.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base58.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGtCQUFrQiwrQ0FBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLCtDQUFLO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzPzc2M2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgICBwcmVmaXg6ICd6JyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gICAgbmFtZTogJ2Jhc2U1OGZsaWNrcicsXG4gICAgcHJlZml4OiAnWicsXG4gICAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNTguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base64.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base64.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'm',\n    name: 'base64',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'M',\n    name: 'base64pad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'u',\n    name: 'base64url',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'U',\n    name: 'base64urlpad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n    bitsPerChar: 6\n});\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTY0LmpzPzZjOGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTY0ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnbScsXG4gICAgbmFtZTogJ2Jhc2U2NCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJyxcbiAgICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnTScsXG4gICAgbmFtZTogJ2Jhc2U2NHBhZCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPScsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ3UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmwnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXycsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybHBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmxwYWQnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXz0nLFxuICAgIGJpdHNQZXJDaGFyOiA2XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base8.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base8.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base8: () => (/* binding */ base8)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: '7',\n    name: 'base8',\n    alphabet: '01234567',\n    bitsPerChar: 3\n});\n//# sourceMappingURL=base8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlOC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUM3QixjQUFjLGlEQUFPO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlOC5qcz8yMDllIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U4ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnNycsXG4gICAgbmFtZTogJ2Jhc2U4JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3JyxcbiAgICBiaXRzUGVyQ2hhcjogM1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlOC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/identity.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/identity.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base.js\");\n\n\nconst identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    prefix: '\\x00',\n    name: 'identity',\n    encode: (buf) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.toString)(buf),\n    decode: (str) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.fromString)(str)\n});\n//# sourceMappingURL=identity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pZGVudGl0eS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUQ7QUFDbEI7QUFDMUIsaUJBQWlCLDhDQUFJO0FBQzVCO0FBQ0E7QUFDQSxxQkFBcUIsbURBQVE7QUFDN0IscUJBQXFCLHFEQUFVO0FBQy9CLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvaWRlbnRpdHkuanM/OWJmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tU3RyaW5nLCB0b1N0cmluZyB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCB7IGZyb20gfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGlkZW50aXR5ID0gZnJvbSh7XG4gICAgcHJlZml4OiAnXFx4MDAnLFxuICAgIG5hbWU6ICdpZGVudGl0eScsXG4gICAgZW5jb2RlOiAoYnVmKSA9PiB0b1N0cmluZyhidWYpLFxuICAgIGRlY29kZTogKHN0cikgPT4gZnJvbVN0cmluZyhzdHIpXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlkZW50aXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/interface.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/interface.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanM/Y2JjZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlIGVuY29kZXJzIC8gZGVjb2RlcnMganVzdCBiYXNlIGVuY29kZSAvIGRlY29kZSBiZXR3ZWVuIGJpbmFyeSBhbmRcbi8vIHRleHR1YWwgcmVwcmVzZW50YXRpb24uIFRoZXkgYXJlIHVuYXdhcmUgb2YgbXVsdGliYXNlLlxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/basics.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/basics.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),\n/* harmony export */   bases: () => (/* binding */ bases),\n/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),\n/* harmony export */   codecs: () => (/* binding */ codecs),\n/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),\n/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),\n/* harmony export */   hashes: () => (/* binding */ hashes),\n/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)\n/* harmony export */ });\n/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base10.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base10.js\");\n/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base16.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base16.js\");\n/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base2.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base2.js\");\n/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base256emoji.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base256emoji.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base64.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base8.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base8.js\");\n/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/identity.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/identity.js\");\n/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./codecs/json.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/json.js\");\n/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./codecs/raw.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/raw.js\");\n/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hashes/identity.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/identity.js\");\n/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hashes/sha2.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst bases = { ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_9__, ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_2__, ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_8__, ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_0__, ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_1__, ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_4__, ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_5__, ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_6__, ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_7__, ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ };\nconst hashes = { ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__, ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ };\nconst codecs = { raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__, json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ };\n\n//# sourceMappingURL=basics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNpY3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEM7QUFDQTtBQUNGO0FBQ2M7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNGO0FBQ1U7QUFDWDtBQUNGO0FBQ1U7QUFDUjtBQUN1QjtBQUN6RCxnQkFBZ0IsR0FBRywrQ0FBWSxLQUFLLDRDQUFLLEtBQUssNENBQUssS0FBSyw2Q0FBTSxLQUFLLDZDQUFNLEtBQUssNkNBQU0sS0FBSyw2Q0FBTSxLQUFLLDZDQUFNLEtBQUssNkNBQU0sS0FBSyxtREFBWTtBQUN0SSxpQkFBaUIsR0FBRyw2Q0FBSSxLQUFLLGlEQUFRO0FBQ3JDLGlCQUFpQixHQUFHLG9EQUFNO0FBQ2E7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2ljcy5qcz8xMTliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGJhc2UxMCBmcm9tICcuL2Jhc2VzL2Jhc2UxMC5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMTYgZnJvbSAnLi9iYXNlcy9iYXNlMTYuanMnO1xuaW1wb3J0ICogYXMgYmFzZTIgZnJvbSAnLi9iYXNlcy9iYXNlMi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMjU2ZW1vamkgZnJvbSAnLi9iYXNlcy9iYXNlMjU2ZW1vamkuanMnO1xuaW1wb3J0ICogYXMgYmFzZTMyIGZyb20gJy4vYmFzZXMvYmFzZTMyLmpzJztcbmltcG9ydCAqIGFzIGJhc2UzNiBmcm9tICcuL2Jhc2VzL2Jhc2UzNi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlNTggZnJvbSAnLi9iYXNlcy9iYXNlNTguanMnO1xuaW1wb3J0ICogYXMgYmFzZTY0IGZyb20gJy4vYmFzZXMvYmFzZTY0LmpzJztcbmltcG9ydCAqIGFzIGJhc2U4IGZyb20gJy4vYmFzZXMvYmFzZTguanMnO1xuaW1wb3J0ICogYXMgaWRlbnRpdHlCYXNlIGZyb20gJy4vYmFzZXMvaWRlbnRpdHkuanMnO1xuaW1wb3J0ICogYXMganNvbiBmcm9tICcuL2NvZGVjcy9qc29uLmpzJztcbmltcG9ydCAqIGFzIHJhdyBmcm9tICcuL2NvZGVjcy9yYXcuanMnO1xuaW1wb3J0ICogYXMgaWRlbnRpdHkgZnJvbSAnLi9oYXNoZXMvaWRlbnRpdHkuanMnO1xuaW1wb3J0ICogYXMgc2hhMiBmcm9tICcuL2hhc2hlcy9zaGEyLmpzJztcbmltcG9ydCB7IENJRCwgaGFzaGVyLCBkaWdlc3QsIHZhcmludCwgYnl0ZXMgfSBmcm9tICcuL2luZGV4LmpzJztcbmV4cG9ydCBjb25zdCBiYXNlcyA9IHsgLi4uaWRlbnRpdHlCYXNlLCAuLi5iYXNlMiwgLi4uYmFzZTgsIC4uLmJhc2UxMCwgLi4uYmFzZTE2LCAuLi5iYXNlMzIsIC4uLmJhc2UzNiwgLi4uYmFzZTU4LCAuLi5iYXNlNjQsIC4uLmJhc2UyNTZlbW9qaSB9O1xuZXhwb3J0IGNvbnN0IGhhc2hlcyA9IHsgLi4uc2hhMiwgLi4uaWRlbnRpdHkgfTtcbmV4cG9ydCBjb25zdCBjb2RlY3MgPSB7IHJhdywganNvbiB9O1xuZXhwb3J0IHsgQ0lELCBoYXNoZXIsIGRpZ2VzdCwgdmFyaW50LCBieXRlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzaWNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/basics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/block/interface.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/block/interface.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ibG9jay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jsb2NrL2ludGVyZmFjZS5qcz9lOGI3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixvQkFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2J5dGVzLmpzPzhlODAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVtcHR5ID0gbmV3IFVpbnQ4QXJyYXkoMCk7XG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoZCkge1xuICAgIHJldHVybiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChoZXgpIHtcbiAgICBjb25zdCBoZXhlcyA9IGhleC5tYXRjaCgvLi4vZyk7XG4gICAgcmV0dXJuIGhleGVzICE9IG51bGwgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhYSwgYmIpIHtcbiAgICBpZiAoYWEgPT09IGJiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoYWEuYnl0ZUxlbmd0aCAhPT0gYmIuYnl0ZUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGlpID0gMDsgaWkgPCBhYS5ieXRlTGVuZ3RoOyBpaSsrKSB7XG4gICAgICAgIGlmIChhYVtpaV0gIT09IGJiW2lpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvZXJjZShvKSB7XG4gICAgaWYgKG8gaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIG8uY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKSB7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH1cbiAgICBpZiAobyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvKTtcbiAgICB9XG4gICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhvKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0JpbmFyeShvKSB7XG4gICAgcmV0dXJuIG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcobyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbVN0cmluZyhzdHIpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYikge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/cid.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/cid.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/interface.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzPzVhOWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/json.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/json.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = 'json';\nconst code = 0x0200;\nfunction encode(node) {\n    return textEncoder.encode(JSON.stringify(node));\n}\nfunction decode(data) {\n    return JSON.parse(textDecoder.decode(data));\n}\n//# sourceMappingURL=json.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvanNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNPO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL2pzb24uanM/YzIzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0ZXh0RW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuY29uc3QgdGV4dERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbmV4cG9ydCBjb25zdCBuYW1lID0gJ2pzb24nO1xuZXhwb3J0IGNvbnN0IGNvZGUgPSAweDAyMDA7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKG5vZGUpIHtcbiAgICByZXR1cm4gdGV4dEVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KG5vZGUpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHRleHREZWNvZGVyLmRlY29kZShkYXRhKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/raw.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/raw.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\");\n\nconst name = 'raw';\nconst code = 0x55;\nfunction encode(node) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\n}\nfunction decode(data) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n}\n//# sourceMappingURL=raw.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvcmF3LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFDO0FBQzlCO0FBQ0E7QUFDQTtBQUNQLFdBQVcsaURBQU07QUFDakI7QUFDTztBQUNQLFdBQVcsaURBQU07QUFDakI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL3Jhdy5qcz83YWNiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmV4cG9ydCBjb25zdCBuYW1lID0gJ3Jhdyc7XG5leHBvcnQgY29uc3QgY29kZSA9IDB4NTU7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKG5vZGUpIHtcbiAgICByZXR1cm4gY29lcmNlKG5vZGUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhKSB7XG4gICAgcmV0dXJuIGNvZXJjZShkYXRhKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhdy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/digest.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkQ7QUFDcEI7QUFDdkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHVCQUF1QixzREFBcUI7QUFDNUMsc0NBQXNDLHNEQUFxQjtBQUMzRDtBQUNBLElBQUksZ0RBQWU7QUFDbkIsSUFBSSxnREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQixpREFBTTtBQUN4QiwrQkFBK0IsOENBQWE7QUFDNUMsaUNBQWlDLDhDQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9kaWdlc3QuanM/NmRlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UsIGVxdWFscyBhcyBlcXVhbEJ5dGVzIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgdmFyaW50IGZyb20gJy4uL3ZhcmludC5qcyc7XG4vKipcbiAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgICBjb25zdCBzaXplT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGNvZGUpO1xuICAgIGNvbnN0IGRpZ2VzdE9mZnNldCA9IHNpemVPZmZzZXQgKyB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoc2l6ZSk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgYnl0ZXMsIDApO1xuICAgIHZhcmludC5lbmNvZGVUbyhzaXplLCBieXRlcywgc2l6ZU9mZnNldCk7XG4gICAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKTtcbn1cbi8qKlxuICogVHVybnMgYnl0ZXMgcmVwcmVzZW50YXRpb24gb2YgbXVsdGloYXNoIGRpZ2VzdCBpbnRvIGFuIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKG11bHRpaGFzaCkge1xuICAgIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gICAgY29uc3QgW2NvZGUsIHNpemVPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcyk7XG4gICAgY29uc3QgW3NpemUsIGRpZ2VzdE9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQpKTtcbiAgICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgICBpZiAoZGlnZXN0LmJ5dGVMZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBkYXRhID0gYjtcbiAgICAgICAgcmV0dXJuIChhLmNvZGUgPT09IGRhdGEuY29kZSAmJlxuICAgICAgICAgICAgYS5zaXplID09PSBkYXRhLnNpemUgJiZcbiAgICAgICAgICAgIGRhdGEuYnl0ZXMgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmXG4gICAgICAgICAgICBlcXVhbEJ5dGVzKGEuYnl0ZXMsIGRhdGEuYnl0ZXMpKTtcbiAgICB9XG59XG4vKipcbiAqIFJlcHJlc2VudHMgYSBtdWx0aWhhc2ggZGlnZXN0IHdoaWNoIGNhcnJpZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlXG4gKiBoYXNoaW5nIGFsZ29yaXRobSBhbmQgYW4gYWN0dWFsIGhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgICBjb2RlO1xuICAgIHNpemU7XG4gICAgZGlnZXN0O1xuICAgIGJ5dGVzO1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBkaWdlc3Q7XG4gICAgICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgICB9XG59XG4vKipcbiAqIFVzZWQgdG8gY2hlY2sgdGhhdCB0aGUgcGFzc2VkIG11bHRpaGFzaCBoYXMgdGhlIHBhc3NlZCBjb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNDb2RlKGRpZ2VzdCwgY29kZSkge1xuICAgIHJldHVybiBkaWdlc3QuY29kZSA9PT0gY29kZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpZ2VzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaGFzaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUN0QztBQUNPLGdCQUFnQixzREFBc0Q7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RkFBNkYscUJBQXFCO0FBQ2xIO0FBQ0E7QUFDQSwwRkFBMEYscUJBQXFCO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGtCQUFrQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSxXQUFXLDhDQUFhO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9oYXNoZXIuanM/OWJiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSCA9IDIwO1xuZXhwb3J0IGZ1bmN0aW9uIGZyb20oeyBuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoIH0pIHtcbiAgICByZXR1cm4gbmV3IEhhc2hlcihuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoKTtcbn1cbi8qKlxuICogSGFzaGVyIHJlcHJlc2VudHMgYSBoYXNoaW5nIGFsZ29yaXRobSBpbXBsZW1lbnRhdGlvbiB0aGF0IHByb2R1Y2VzIGFzXG4gKiBgTXVsdGloYXNoRGlnZXN0YC5cbiAqL1xuZXhwb3J0IGNsYXNzIEhhc2hlciB7XG4gICAgbmFtZTtcbiAgICBjb2RlO1xuICAgIGVuY29kZTtcbiAgICBtaW5EaWdlc3RMZW5ndGg7XG4gICAgbWF4RGlnZXN0TGVuZ3RoO1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5lbmNvZGUgPSBlbmNvZGU7XG4gICAgICAgIHRoaXMubWluRGlnZXN0TGVuZ3RoID0gbWluRGlnZXN0TGVuZ3RoID8/IERFRkFVTFRfTUlOX0RJR0VTVF9MRU5HVEg7XG4gICAgICAgIHRoaXMubWF4RGlnZXN0TGVuZ3RoID0gbWF4RGlnZXN0TGVuZ3RoO1xuICAgIH1cbiAgICBkaWdlc3QoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnM/LnRydW5jYXRlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnRydW5jYXRlIDwgdGhpcy5taW5EaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWluRGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubWF4RGlnZXN0TGVuZ3RoICE9IG51bGwgJiYgb3B0aW9ucy50cnVuY2F0ZSA+IHRoaXMubWF4RGlnZXN0TGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHRydW5jYXRlIG9wdGlvbiwgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHt0aGlzLm1heERpZ2VzdExlbmd0aH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmVuY29kZShpbnB1dCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVEaWdlc3QocmVzdWx0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQudGhlbihkaWdlc3QgPT4gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgdGhpcy5jb2RlLCBvcHRpb25zPy50cnVuY2F0ZSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgICAgICB9XG4gICAgfVxufVxuLyoqXG4gKiBDcmVhdGUgYSBEaWdlc3QgZnJvbSB0aGUgcGFzc2VkIHVpbnQ4YXJyYXkgYW5kIGNvZGUsIG9wdGlvbmFsbHkgdHJ1bmNhdGluZyBpdFxuICogZmlyc3QuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURpZ2VzdChkaWdlc3QsIGNvZGUsIHRydW5jYXRlKSB7XG4gICAgaWYgKHRydW5jYXRlICE9IG51bGwgJiYgdHJ1bmNhdGUgIT09IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmICh0cnVuY2F0ZSA+IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke2RpZ2VzdC5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIGRpZ2VzdCA9IGRpZ2VzdC5zdWJhcnJheSgwLCB0cnVuY2F0ZSk7XG4gICAgfVxuICAgIHJldHVybiBEaWdlc3QuY3JlYXRlKGNvZGUsIGRpZ2VzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/identity.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/identity.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/digest.js\");\n\n\nconst code = 0x0;\nconst name = 'identity';\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nfunction digest(input, options) {\n    if (options?.truncate != null && options.truncate !== input.byteLength) {\n        if (options.truncate < 0 || options.truncate > input.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${input.byteLength}`);\n        }\n        input = input.subarray(0, options.truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\n}\nconst identity = { code, name, encode, digest };\n//# sourceMappingURL=identity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaWRlbnRpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFDdEM7QUFDQTtBQUNBLGVBQWUsNkNBQU07QUFDckI7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGlCQUFpQjtBQUN2RztBQUNBO0FBQ0E7QUFDQSxXQUFXLDhDQUFhO0FBQ3hCO0FBQ08sbUJBQW1CO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaWRlbnRpdHkuanM/Y2Q5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgY29kZSA9IDB4MDtcbmNvbnN0IG5hbWUgPSAnaWRlbnRpdHknO1xuY29uc3QgZW5jb2RlID0gY29lcmNlO1xuZnVuY3Rpb24gZGlnZXN0KGlucHV0LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnM/LnRydW5jYXRlICE9IG51bGwgJiYgb3B0aW9ucy50cnVuY2F0ZSAhPT0gaW5wdXQuYnl0ZUxlbmd0aCkge1xuICAgICAgICBpZiAob3B0aW9ucy50cnVuY2F0ZSA8IDAgfHwgb3B0aW9ucy50cnVuY2F0ZSA+IGlucHV0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7aW5wdXQuYnl0ZUxlbmd0aH1gKTtcbiAgICAgICAgfVxuICAgICAgICBpbnB1dCA9IGlucHV0LnN1YmFycmF5KDAsIG9wdGlvbnMudHJ1bmNhdGUpO1xuICAgIH1cbiAgICByZXR1cm4gRGlnZXN0LmNyZWF0ZShjb2RlLCBlbmNvZGUoaW5wdXQpKTtcbn1cbmV4cG9ydCBjb25zdCBpZGVudGl0eSA9IHsgY29kZSwgbmFtZSwgZW5jb2RlLCBkaWdlc3QgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlkZW50aXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/interface.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pbnRlcmZhY2UuanM/YWM3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjIE11bHRpaGFzaFxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/sha2.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/sha2.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/hasher.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: (input) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256').update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: input => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha512').update(input).digest())\n});\n//# sourceMappingURL=sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvc2hhMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0QjtBQUNTO0FBQ0Y7QUFDNUIsZUFBZSxnREFBSTtBQUMxQjtBQUNBO0FBQ0EsdUJBQXVCLGlEQUFNLENBQUMsOENBQWlCO0FBQy9DLENBQUM7QUFDTSxlQUFlLGdEQUFJO0FBQzFCO0FBQ0E7QUFDQSxxQkFBcUIsaURBQU0sQ0FBQyw4Q0FBaUI7QUFDN0MsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvc2hhMi5qcz8yNjVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbmltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCB7IGZyb20gfSBmcm9tICcuL2hhc2hlci5qcyc7XG5leHBvcnQgY29uc3Qgc2hhMjU2ID0gZnJvbSh7XG4gICAgbmFtZTogJ3NoYTItMjU2JyxcbiAgICBjb2RlOiAweDEyLFxuICAgIGVuY29kZTogKGlucHV0KSA9PiBjb2VyY2UoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG59KTtcbmV4cG9ydCBjb25zdCBzaGE1MTIgPSBmcm9tKHtcbiAgICBuYW1lOiAnc2hhMi01MTInLFxuICAgIGNvZGU6IDB4MTMsXG4gICAgZW5jb2RlOiBpbnB1dCA9PiBjb2VyY2UoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTUxMicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE1BQU07QUFDbEI7QUFDQSxZQUFZLFNBQVM7QUFDckI7QUFDQSwrQkFBK0IsZ0JBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0Esb0NBQW9DLHNCQUFzQjtBQUMxRDtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxtQ0FBbUM7QUFDbkU7QUFDQTtBQUNBLGdDQUFnQyxtREFBbUQ7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw2QkFBNkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0Esa0RBQWtELGdCQUFnQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsc0NBQXNDLHNCQUFzQjtBQUM1RCxXQUFXLE1BQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw4QkFBOEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29DO0FBQ0w7QUFDYztBQUNBO0FBQ1A7QUFDdEM7QUFDK0I7QUFDZTtBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW5kZXguanM/ODNmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxuICpcbiAqIFRoaXMgbGlicmFyeSBkZWZpbmVzIGNvbW1vbiBpbnRlcmZhY2VzIGFuZCBsb3cgbGV2ZWwgYnVpbGRpbmcgYmxvY2tzIGZvciB2YXJpb3VzIGludGVycmVsYXRlZCBtdWx0aWZvcm1hdCB0ZWNobm9sb2dpZXMgKG11bHRpY29kZWMsIG11bHRpaGFzaCwgbXVsdGliYXNlLCBhbmQgQ0lEKS4gVGhleSBjYW4gYmUgdXNlZCB0byBpbXBsZW1lbnQgY3VzdG9tIGJhc2UgZW5jb2RlcnMgLyBkZWNvZGVycyAvIGNvZGVjcywgY29kZWMgZW5jb2RlcnMgL2RlY29kZXJzIGFuZCBtdWx0aWhhc2ggaGFzaGVycyB0aGF0IGNvbXBseSB0byB0aGUgaW50ZXJmYWNlIHRoYXQgbGF5ZXJzIGFib3ZlIGFzc3VtZS5cbiAqXG4gKiBUaGlzIGxpYnJhcnkgcHJvdmlkZXMgaW1wbGVtZW50YXRpb25zIGZvciBtb3N0IGJhc2ljcyBhbmQgbWFueSBvdGhlcnMgY2FuIGJlIGZvdW5kIGluIGxpbmtlZCByZXBvc2l0b3JpZXMuXG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCdcbiAqIGltcG9ydCAqIGFzIGpzb24gZnJvbSAnbXVsdGlmb3JtYXRzL2NvZGVjcy9qc29uJ1xuICogaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuICpcbiAqIGNvbnN0IGJ5dGVzID0ganNvbi5lbmNvZGUoeyBoZWxsbzogJ3dvcmxkJyB9KVxuICpcbiAqIGNvbnN0IGhhc2ggPSBhd2FpdCBzaGEyNTYuZGlnZXN0KGJ5dGVzKVxuICogY29uc3QgY2lkID0gQ0lELmNyZWF0ZSgxLCBqc29uLmNvZGUsIGhhc2gpXG4gKiAvLz4gQ0lEKGJhZ2FhaWVyYXNvcmRzNG5qY3RzNnZzN3F2ZGpmY3ZnbnVtZTRocW9oZjY1enNmZ3VwcnFwaHMzaWN3ZWEpXG4gKiBgYGBcbiAqXG4gKiAjIyBDcmVhdGluZyBCbG9ja3NcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBpbXBvcnQgKiBhcyBCbG9jayBmcm9tICdtdWx0aWZvcm1hdHMvYmxvY2snXG4gKiBpbXBvcnQgKiBhcyBjb2RlYyBmcm9tICdAaXBsZC9kYWctY2JvcidcbiAqIGltcG9ydCB7IHNoYTI1NiBhcyBoYXNoZXIgfSBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTInXG4gKlxuICogY29uc3QgdmFsdWUgPSB7IGhlbGxvOiAnd29ybGQnIH1cbiAqXG4gKiAvLyBlbmNvZGUgYSBibG9ja1xuICogbGV0IGJsb2NrID0gYXdhaXQgQmxvY2suZW5jb2RlKHsgdmFsdWUsIGNvZGVjLCBoYXNoZXIgfSlcbiAqXG4gKiBibG9jay52YWx1ZSAvLyB7IGhlbGxvOiAnd29ybGQnIH1cbiAqIGJsb2NrLmJ5dGVzIC8vIFVpbnQ4QXJyYXlcbiAqIGJsb2NrLmNpZCAgIC8vIENJRCgpIHcvIHNoYTItMjU2IGhhc2ggYWRkcmVzcyBhbmQgZGFnLWNib3IgY29kZWNcbiAqXG4gKiAvLyB5b3UgY2FuIGFsc28gZGVjb2RlIGJsb2NrcyBmcm9tIHRoZWlyIGJpbmFyeSBzdGF0ZVxuICogYmxvY2sgPSBhd2FpdCBCbG9jay5kZWNvZGUoeyBieXRlczogYmxvY2suYnl0ZXMsIGNvZGVjLCBoYXNoZXIgfSlcbiAqXG4gKiAvLyBpZiB5b3UgaGF2ZSB0aGUgY2lkIHlvdSBjYW4gYWxzbyB2ZXJpZnkgdGhlIGhhc2ggb24gZGVjb2RlXG4gKiBibG9jayA9IGF3YWl0IEJsb2NrLmNyZWF0ZSh7IGJ5dGVzOiBibG9jay5ieXRlcywgY2lkOiBibG9jay5jaWQsIGNvZGVjLCBoYXNoZXIgfSlcbiAqIGBgYFxuICpcbiAqICMjIE11bHRpYmFzZSBFbmNvZGVycyAvIERlY29kZXJzIC8gQ29kZWNzXG4gKlxuICogQ0lEcyBjYW4gYmUgc2VyaWFsaXplZCB0byBzdHJpbmcgcmVwcmVzZW50YXRpb24gdXNpbmcgbXVsdGliYXNlIGVuY29kZXJzIHRoYXQgaW1wbGVtZW50IFtgTXVsdGliYXNlRW5jb2RlcmBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9iYXNlcy9pbnRlcmZhY2UudHMpIGludGVyZmFjZS4gVGhpcyBsaWJyYXJ5IHByb3ZpZGVzIHF1aXRlIGEgZmV3IGltcGxlbWVudGF0aW9ucyB0aGF0IGNhbiBiZSBpbXBvcnRlZDpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBpbXBvcnQgeyBiYXNlNjQgfSBmcm9tIFwibXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U2NFwiXG4gKiBjaWQudG9TdHJpbmcoYmFzZTY0LmVuY29kZXIpXG4gKiAvLz4gJ21BWUFFRWlDVG9qbHhxUlRsNnN2d3FOSlJWTTJqQ2NQQnh5KzdtUlRVZkdEenkyZ1ZpQSdcbiAqIGBgYFxuICpcbiAqIFBhcnNpbmcgQ0lEIHN0cmluZyBzZXJpYWxpemVkIENJRHMgcmVxdWlyZXMgbXVsdGliYXNlIGRlY29kZXIgdGhhdCBpbXBsZW1lbnRzIFtgTXVsdGliYXNlRGVjb2RlcmBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9iYXNlcy9pbnRlcmZhY2UudHMpIGludGVyZmFjZS4gVGhpcyBsaWJyYXJ5IHByb3ZpZGVzIGEgZGVjb2RlciBmb3IgZXZlcnkgZW5jb2RlciBpdCBwcm92aWRlczpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBDSUQucGFyc2UoJ21BWUFFRWlDVG9qbHhxUlRsNnN2d3FOSlJWTTJqQ2NQQnh5KzdtUlRVZkdEenkyZ1ZpQScsIGJhc2U2NC5kZWNvZGVyKVxuICogLy8+IENJRChiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhKVxuICogYGBgXG4gKlxuICogRHVhbCBvZiBtdWx0aWJhc2UgZW5jb2RlciAmIGRlY29kZXIgaXMgZGVmaW5lZCBhcyBtdWx0aWJhc2UgY29kZWMgYW5kIGl0IGV4cG9zZXNcbiAqIHRoZW0gYXMgYGVuY29kZXJgIGFuZCBgZGVjb2RlcmAgcHJvcGVydGllcy4gRm9yIGFkZGVkIGNvbnZlbmllbmNlIGNvZGVjcyBhbHNvXG4gKiBpbXBsZW1lbnQgYE11bHRpYmFzZUVuY29kZXJgIGFuZCBgTXVsdGliYXNlRGVjb2RlcmAgaW50ZXJmYWNlcyBzbyB0aGV5IGNvdWxkIGJlXG4gKiB1c2VkIGFzIGVpdGhlciBvciBib3RoOlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGNpZC50b1N0cmluZyhiYXNlNjQpXG4gKiBDSUQucGFyc2UoY2lkLnRvU3RyaW5nKGJhc2U2NCksIGJhc2U2NClcbiAqIGBgYFxuICpcbiAqICoqTm90ZToqKiBDSUQgaW1wbGVtZW50YXRpb24gY29tZXMgYnVuZGxlZCB3aXRoIGBiYXNlMzJgIGFuZCBgYmFzZTU4YnRjYFxuICogbXVsdGliYXNlIGNvZGVjcyBzbyB0aGF0IENJRHMgY2FuIGJlIGJhc2Ugc2VyaWFsaXplZCB0byAodmVyc2lvbiBzcGVjaWZpYylcbiAqIGRlZmF1bHQgYmFzZSBlbmNvZGluZyBhbmQgcGFyc2VkIHdpdGhvdXQgaGF2aW5nIHRvIHN1cHBseSBiYXNlIGVuY29kZXJzL2RlY29kZXJzOlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGNvbnN0IHYxID0gQ0lELnBhcnNlKCdiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhJylcbiAqIHYxLnRvU3RyaW5nKClcbiAqIC8vPiAnYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYSdcbiAqXG4gKiBjb25zdCB2MCA9IENJRC5wYXJzZSgnUW1kZlRiQnFCUFE3Vk54WkVZRWoxNFZtUnVaQmtxRmJpd1Jlb2dKZ1MxelIxbicpXG4gKiB2MC50b1N0cmluZygpXG4gKiAvLz4gJ1FtZGZUYkJxQlBRN1ZOeFpFWUVqMTRWbVJ1WkJrcUZiaXdSZW9nSmdTMXpSMW4nXG4gKiB2MC50b1YxKCkudG9TdHJpbmcoKVxuICogLy8+ICdiYWZ5YmVpaGR3ZGNlZmdoNGRxa2p2Njd1emNtdzdvamVlNnhlZHpkZXRvanV6amV2dGVueHF1dnlrdSdcbiAqIGBgYFxuICpcbiAqICMjIE11bHRpY29kZWMgRW5jb2RlcnMgLyBEZWNvZGVycyAvIENvZGVjc1xuICpcbiAqIFRoaXMgbGlicmFyeSBkZWZpbmVzIFtgQmxvY2tFbmNvZGVyYCwgYEJsb2NrRGVjb2RlcmAgYW5kIGBCbG9ja0NvZGVjYCBpbnRlcmZhY2VzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvY29kZWNzL2ludGVyZmFjZS50cykuXG4gKiBDb2RlYyBpbXBsZW1lbnRhdGlvbnMgc2hvdWxkIGNvbmZvcm0gdG8gdGhlIGBCbG9ja0NvZGVjYCBpbnRlcmZhY2Ugd2hpY2ggaW1wbGVtZW50cyBib3RoIGBCbG9ja0VuY29kZXJgIGFuZCBgQmxvY2tEZWNvZGVyYC5cbiAqIEhlcmUgaXMgYW4gZXhhbXBsZSBpbXBsZW1lbnRhdGlvbiBvZiBKU09OIGBCbG9ja0NvZGVjYC5cbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBleHBvcnQgY29uc3QgeyBuYW1lLCBjb2RlLCBlbmNvZGUsIGRlY29kZSB9ID0ge1xuICogICBuYW1lOiAnanNvbicsXG4gKiAgIGNvZGU6IDB4MDIwMCxcbiAqICAgZW5jb2RlOiBqc29uID0+IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShKU09OLnN0cmluZ2lmeShqc29uKSksXG4gKiAgIGRlY29kZTogYnl0ZXMgPT4gSlNPTi5wYXJzZShuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYnl0ZXMpKVxuICogfVxuICogYGBgXG4gKlxuICogIyMgTXVsdGloYXNoIEhhc2hlcnNcbiAqXG4gKiBUaGlzIGxpYnJhcnkgZGVmaW5lcyBbYE11bHRpaGFzaEhhc2hlcmAgYW5kIGBNdWx0aWhhc2hEaWdlc3RgIGludGVyZmFjZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9oYXNoZXMvaW50ZXJmYWNlLnRzKSBhbmQgY29udmluaWVudCBmdW5jdGlvbiBmb3IgaW1wbGVtZW50aW5nIHRoZW06XG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0ICogYXMgaGFzaGVyIGZyb20gJ211bHRpZm9ybWF0cy9oYXNoZXMvaGFzaGVyJ1xuICpcbiAqIGNvbnN0IHNoYTI1NiA9IGhhc2hlci5mcm9tKHtcbiAqICAgLy8gQXMgcGVyIG11bHRpZm9ybWF0cyB0YWJsZVxuICogICAvLyBodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL211bHRpY29kZWMvYmxvYi9tYXN0ZXIvdGFibGUuY3N2I0w5XG4gKiAgIG5hbWU6ICdzaGEyLTI1NicsXG4gKiAgIGNvZGU6IDB4MTIsXG4gKlxuICogICBlbmNvZGU6IChpbnB1dCkgPT4gbmV3IFVpbnQ4QXJyYXkoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG4gKiB9KVxuICpcbiAqIGNvbnN0IGhhc2ggPSBhd2FpdCBzaGEyNTYuZGlnZXN0KGpzb24uZW5jb2RlKHsgaGVsbG86ICd3b3JsZCcgfSkpXG4gKiBDSUQuY3JlYXRlKDEsIGpzb24uY29kZSwgaGFzaClcbiAqXG4gKiAvLz4gQ0lEKGJhZ2FhaWVyYXNvcmRzNG5qY3RzNnZzN3F2ZGpmY3ZnbnVtZTRocW9oZjY1enNmZ3VwcnFwaHMzaWN3ZWEpXG4gKiBgYGBcbiAqXG4gKiAjIyBUcmF2ZXJzYWxcbiAqXG4gKiBUaGlzIGxpYnJhcnkgY29udGFpbnMgaGlnaGVyLW9yZGVyIGZ1bmN0aW9ucyBmb3IgdHJhdmVyc2luZyBncmFwaHMgb2YgZGF0YSBlYXNpbHkuXG4gKlxuICogYHdhbGsoKWAgd2Fsa3MgdGhyb3VnaCB0aGUgbGlua3MgaW4gZWFjaCBibG9jayBvZiBhIERBRyBjYWxsaW5nIGEgdXNlci1zdXBwbGllZCBsb2FkZXIgZnVuY3Rpb24gZm9yIGVhY2ggb25lLCBpbiBkZXB0aC1maXJzdCBvcmRlciB3aXRoIG5vIGR1cGxpY2F0ZSBibG9jayB2aXNpdHMuIFRoZSBsb2FkZXIgc2hvdWxkIHJldHVybiBhIGBCbG9ja2Agb2JqZWN0IGFuZCBjYW4gYmUgdXNlZCB0byBpbnNwZWN0IGFuZCBjb2xsZWN0IGJsb2NrIG9yZGVyaW5nIGZvciBhIGZ1bGwgREFHIHdhbGsuIFRoZSBsb2FkZXIgc2hvdWxkIGB0aHJvd2Agb24gZXJyb3IsIGFuZCByZXR1cm4gYG51bGxgIGlmIGEgYmxvY2sgc2hvdWxkIGJlIHNraXBwZWQgYnkgYHdhbGsoKWAuXG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0IHsgd2FsayB9IGZyb20gJ211bHRpZm9ybWF0cy90cmF2ZXJzYWwnXG4gKiBpbXBvcnQgKiBhcyBCbG9jayBmcm9tICdtdWx0aWZvcm1hdHMvYmxvY2snXG4gKiBpbXBvcnQgKiBhcyBjb2RlYyBmcm9tICdtdWx0aWZvcm1hdHMvY29kZWNzL2pzb24nXG4gKiBpbXBvcnQgeyBzaGEyNTYgYXMgaGFzaGVyIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuICpcbiAqIC8vIGJ1aWxkIGEgREFHIChhIHNpbmdsZSBibG9jayBmb3IgdGhpcyBzaW1wbGUgZXhhbXBsZSlcbiAqIGNvbnN0IHZhbHVlID0geyBoZWxsbzogJ3dvcmxkJyB9XG4gKiBjb25zdCBibG9jayA9IGF3YWl0IEJsb2NrLmVuY29kZSh7IHZhbHVlLCBjb2RlYywgaGFzaGVyIH0pXG4gKiBjb25zdCB7IGNpZCB9ID0gYmxvY2tcbiAqIGNvbnNvbGUubG9nKGNpZClcbiAqIC8vPiBDSUQoYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYSlcbiAqXG4gKiAvLyBjcmVhdGUgYSBsb2FkZXIgZnVuY3Rpb24gdGhhdCBhbHNvIGNvbGxlY3RzIENJRHMgb2YgYmxvY2tzIGluXG4gKiAvLyB0aGVpciB0cmF2ZXJzYWwgb3JkZXJcbiAqIGNvbnN0IGxvYWQgPSAoY2lkLCBibG9ja3MpID0+IGFzeW5jIChjaWQpID0+IHtcbiAqICAgLy8gZmV0Y2ggYSBibG9jayB1c2luZyBpdHMgY2lkXG4gKiAgIC8vIGUuZy46IGNvbnN0IGJsb2NrID0gYXdhaXQgZmV0Y2hCbG9ja0J5Q0lEKGNpZClcbiAqICAgYmxvY2tzLnB1c2goY2lkKVxuICogICByZXR1cm4gYmxvY2tcbiAqIH1cbiAqXG4gKiAvLyBjb2xsZWN0IGJsb2NrcyBpbiB0aGlzIERBRyBzdGFydGluZyBmcm9tIHRoZSByb290IGBjaWRgXG4gKiBjb25zdCBibG9ja3MgPSBbXVxuICogYXdhaXQgd2Fsayh7IGNpZCwgbG9hZDogbG9hZChjaWQsIGJsb2NrcykgfSlcbiAqXG4gKiBjb25zb2xlLmxvZyhibG9ja3MpXG4gKiAvLz4gW0NJRChiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhKV1cbiAqIGBgYFxuICpcbiAqICMjIExlZ2FjeSBpbnRlcmZhY2VcbiAqXG4gKiBbYGJsb2NrY29kZWMtdG8taXBsZC1mb3JtYXRgXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1ibG9ja2NvZGVjLXRvLWlwbGQtZm9ybWF0KSBjb252ZXJ0cyBhIG11bHRpZm9ybWF0cyBbYEJsb2NrQ29kZWNgXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvY29kZWNzL2ludGVyZmFjZS50cyNMMjEpIGludG8gYW5cbiAqIFtgaW50ZXJmYWNlLWlwbGQtZm9ybWF0YF0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvaW50ZXJmYWNlLWlwbGQtZm9ybWF0KSBmb3IgdXNlIHdpdGggdGhlIFtgaXBsZGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9pcGxkL2lwbGQpIHBhY2thZ2UuIFRoaXMgY2FuIGhlbHAgYnJpZGdlIElQTEQgY29kZWNzIGltcGxlbWVudGVkIHVzaW5nIHRoZSBzdHJ1Y3R1cmUgYW5kIGludGVyZmFjZXMgZGVmaW5lZCBoZXJlIHRvIGV4aXN0aW5nIGNvZGUgdGhhdCBhc3N1bWVzLCBvciByZXF1aXJlcyBgaW50ZXJmYWNlLWlwbGQtZm9ybWF0YC4gVGhpcyBicmlkZ2UgYWxzbyBpbmNsdWRlcyB0aGUgcmVsZXZhbnQgVHlwZVNjcmlwdCBkZWZpbml0aW9ucy5cbiAqXG4gKiAjIyBJbXBsZW1lbnRhdGlvbnNcbiAqXG4gKiBCeSBkZWZhdWx0LCBubyBiYXNlIGVuY29kaW5ncyAob3RoZXIgdGhhbiBiYXNlMzIgJiBiYXNlNThidGMpLCBoYXNoIGZ1bmN0aW9ucyxcbiAqIG9yIGNvZGVjIGltcGxlbWVudGF0aW9ucyBhcmUgZXhwb3NlZCBieSBgbXVsdGlmb3JtYXRzYCwgeW91IG5lZWQgdG9cbiAqIGltcG9ydCB0aGUgb25lcyB5b3UgbmVlZCB5b3Vyc2VsZi5cbiAqXG4gKiAjIyMgTXVsdGliYXNlIGNvZGVjc1xuICpcbiAqIHwgYmFzZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGltcG9ydCAgICAgICAgICAgICAgICAgICAgICB8IHJlcG8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IGBiYXNlMTZgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2UxNmAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvYmFzZXMpIHxcbiAqIHwgYGJhc2UzMmAsIGBiYXNlMzJwYWRgLCBgYmFzZTMyaGV4YCwgYGJhc2UzMmhleHBhZGAsIGBiYXNlMzJ6YCB8IGBtdWx0aWZvcm1hdHMvYmFzZXMvYmFzZTMyYCB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9iYXNlcykgfFxuICogfCBgYmFzZTY0YCwgYGJhc2U2NHBhZGAsIGBiYXNlNjR1cmxgLCBgYmFzZTY0dXJscGFkYCAgICAgICAgICAgIHwgYG11bHRpZm9ybWF0cy9iYXNlcy9iYXNlNjRgIHwgW211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL3RyZWUvbWFzdGVyL2Jhc2VzKSB8XG4gKiB8IGBiYXNlNThidGNgLCBgYmFzZTU4ZmxpY2s0YCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U1OGAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvYmFzZXMpIHxcbiAqXG4gKiBPdGhlciAobGVzcyB1c2VmdWwpIGJhc2VzIGltcGxlbWVudGVkIGluIFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9iYXNlcykgaW5jbHVkZTogYGJhc2UyYCwgYGJhc2U4YCwgYGJhc2UxMGAsIGBiYXNlMzZgIGFuZCBgYmFzZTI1NmVtb2ppYC5cbiAqXG4gKiAjIyMgTXVsdGloYXNoIGhhc2hlcnNcbiAqXG4gKiB8IGhhc2hlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpbXBvcnQgICAgICAgICAgICAgICAgICAgICAgICAgfCByZXBvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHxcbiAqIHwgYHNoYTItMjU2YCwgYHNoYTItNTEyYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGBtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTJgICAgICB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvaGFzaGVzKSAgICAgICAgICAgICB8XG4gKiB8IGBzaGEzLTIyNGAsIGBzaGEzLTI1NmAsIGBzaGEzLTM4NGAsYHNoYTMtNTEyYCwgYHNoYWtlLTEyOGAsIGBzaGFrZS0yNTZgLCBga2VjY2FrLTIyNGAsIGBrZWNjYWstMjU2YCwgYGtlY2Nhay0zODRgLCBga2VjY2FrLTUxMmAgfCBgQG11bHRpZm9ybWF0cy9zaGEzYCAgICAgICAgICAgfCBbbXVsdGlmb3JtYXRzL2pzLXNoYTNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtc2hhMykgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCBgaWRlbnRpdHlgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYG11bHRpZm9ybWF0cy9oYXNoZXMvaWRlbnRpdHlgIHwgW211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL3RyZWUvbWFzdGVyL3NyYy9oYXNoZXMvaWRlbnRpdHkuanMpIHxcbiAqIHwgYG11cm11cjMtMTI4YCwgYG11cm11cjMtMzJgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGBAbXVsdGlmb3JtYXRzL211cm11cjNgICAgICAgICB8IFttdWx0aWZvcm1hdHMvanMtbXVybXVyM10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdXJtdXIzKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBibGFrZTJiLSpgLCBgYmxha2Uycy0qYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgQG11bHRpZm9ybWF0cy9ibGFrZTJgICAgICAgICAgfCBbbXVsdGlmb3JtYXRzL2pzLWJsYWtlMl0oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1ibGFrZTIpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICpcbiAqICMjIyBJUExEIGNvZGVjcyAobXVsdGljb2RlYylcbiAqXG4gKiB8IGNvZGVjICAgICAgfCBpbXBvcnQgICAgICAgICAgICAgICAgICAgICB8IHJlcG8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IC0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IGByYXdgICAgICAgfCBgbXVsdGlmb3JtYXRzL2NvZGVjcy9yYXdgICB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvY29kZWNzKSB8XG4gKiB8IGBqc29uYCAgICAgfCBgbXVsdGlmb3JtYXRzL2NvZGVjcy9qc29uYCB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvY29kZWNzKSB8XG4gKiB8IGBkYWctY2JvcmAgfCBgQGlwbGQvZGFnLWNib3JgICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1jYm9yXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1kYWctY2JvcikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctanNvbmAgfCBgQGlwbGQvZGFnLWpzb25gICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1qc29uXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1kYWctanNvbikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctcGJgICAgfCBgQGlwbGQvZGFnLXBiYCAgICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1wYl0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvanMtZGFnLXBiKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctam9zZWAgfCBgZGFnLWpvc2VgICAgICAgICAgICAgICAgICB8IFtjZXJhbWljbmV0d29yay9qcy1kYWctam9zZV0oaHR0cHM6Ly9naXRodWIuY29tL2NlcmFtaWNuZXR3b3JrL2pzLWRhZy1qb3NlKSAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKi9cbmltcG9ydCAqIGFzIGJ5dGVzIGZyb20gJy4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnLi9jaWQuanMnO1xuaW1wb3J0ICogYXMgZGlnZXN0IGZyb20gJy4vaGFzaGVzL2RpZ2VzdC5qcyc7XG5pbXBvcnQgKiBhcyBoYXNoZXIgZnJvbSAnLi9oYXNoZXMvaGFzaGVyLmpzJztcbmltcG9ydCAqIGFzIHZhcmludCBmcm9tICcuL3ZhcmludC5qcyc7XG4vLyBUaGlzIHdheSBUUyB3aWxsIGFsc28gZXhwb3NlIGFsbCB0aGUgdHlwZXMgZnJvbSBtb2R1bGVcbmV4cG9ydCAqIGZyb20gJy4vaW50ZXJmYWNlLmpzJztcbmV4cG9ydCB7IENJRCwgaGFzaGVyLCBkaWdlc3QsIHZhcmludCwgYnl0ZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/interface.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/interface.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFDQTtBQUNGO0FBQ0M7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2ludGVyZmFjZS5qcz9hMDQ3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYmFzZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaGFzaGVzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvZGVjcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9saW5rL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Jsb2NrL2ludGVyZmFjZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/link/interface.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/link/interface.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanM/NTY3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/varint.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/varint.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92YXJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNqQztBQUNQLGlCQUFpQix5REFBTTtBQUN2QixrQkFBa0IseURBQU07QUFDeEI7QUFDTztBQUNQLElBQUkseURBQU07QUFDVjtBQUNBO0FBQ087QUFDUCxXQUFXLHlEQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZhcmludC5qcz82N2M5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAnLi92ZW5kb3IvdmFyaW50LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb2Zmc2V0ID0gMCkge1xuICAgIGNvbnN0IGNvZGUgPSB2YXJpbnQuZGVjb2RlKGRhdGEsIG9mZnNldCk7XG4gICAgcmV0dXJuIFtjb2RlLCB2YXJpbnQuZGVjb2RlLmJ5dGVzXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUbyhpbnQsIHRhcmdldCwgb2Zmc2V0ID0gMCkge1xuICAgIHZhcmludC5lbmNvZGUoaW50LCB0YXJnZXQsIG9mZnNldCk7XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGluZ0xlbmd0aChpbnQpIHtcbiAgICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGludCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/vendor/varint.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFlBQVksRUFBQztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcz9mZjFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgZW5jb2RlXzEgPSBlbmNvZGU7XG52YXIgTVNCID0gMHg4MCwgUkVTVCA9IDB4N0YsIE1TQkFMTCA9IH5SRVNULCBJTlQgPSBNYXRoLnBvdygyLCAzMSk7XG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBudW1cbiAqIEBwYXJhbSB7bnVtYmVyW119IG91dFxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiBlbmNvZGUobnVtLCBvdXQsIG9mZnNldCkge1xuICAgIG91dCA9IG91dCB8fCBbXTtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcbiAgICB2YXIgb2xkT2Zmc2V0ID0gb2Zmc2V0O1xuICAgIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgICAgIG91dFtvZmZzZXQrK10gPSAobnVtICYgMHhGRikgfCBNU0I7XG4gICAgICAgIG51bSAvPSAxMjg7XG4gICAgfVxuICAgIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtID4+Pj0gNztcbiAgICB9XG4gICAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICAgIHJldHVybiBvdXQ7XG59XG52YXIgZGVjb2RlID0gcmVhZDtcbnZhciBNU0IkMSA9IDB4ODAsIFJFU1QkMSA9IDB4N0Y7XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nIHwgYW55W119IGJ1ZlxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiByZWFkKGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICAgIGRvIHtcbiAgICAgICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICAgICAgfVxuICAgICAgICBiID0gYnVmW2NvdW50ZXIrK107XG4gICAgICAgIHJlcyArPSBzaGlmdCA8IDI4XG4gICAgICAgICAgICA/IChiICYgUkVTVCQxKSA8PCBzaGlmdFxuICAgICAgICAgICAgOiAoYiAmIFJFU1QkMSkgKiBNYXRoLnBvdygyLCBzaGlmdCk7XG4gICAgICAgIHNoaWZ0ICs9IDc7XG4gICAgfSB3aGlsZSAoYiA+PSBNU0IkMSk7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHJlYWQuYnl0ZXMgPSBjb3VudGVyIC0gb2Zmc2V0O1xuICAgIHJldHVybiByZXM7XG59XG52YXIgTjEgPSBNYXRoLnBvdygyLCA3KTtcbnZhciBOMiA9IE1hdGgucG93KDIsIDE0KTtcbnZhciBOMyA9IE1hdGgucG93KDIsIDIxKTtcbnZhciBONCA9IE1hdGgucG93KDIsIDI4KTtcbnZhciBONSA9IE1hdGgucG93KDIsIDM1KTtcbnZhciBONiA9IE1hdGgucG93KDIsIDQyKTtcbnZhciBONyA9IE1hdGgucG93KDIsIDQ5KTtcbnZhciBOOCA9IE1hdGgucG93KDIsIDU2KTtcbnZhciBOOSA9IE1hdGgucG93KDIsIDYzKTtcbnZhciBsZW5ndGggPSBmdW5jdGlvbiAoLyoqIEB0eXBlIHtudW1iZXJ9ICovIHZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSA8IE4xID8gMVxuICAgICAgICA6IHZhbHVlIDwgTjIgPyAyXG4gICAgICAgICAgICA6IHZhbHVlIDwgTjMgPyAzXG4gICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE40ID8gNFxuICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjUgPyA1XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjYgPyA2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE43ID8gN1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjggPyA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjkgPyA5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAxMCk7XG59O1xudmFyIHZhcmludCA9IHtcbiAgICBlbmNvZGU6IGVuY29kZV8xLFxuICAgIGRlY29kZTogZGVjb2RlLFxuICAgIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFyaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/alloc.node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/alloc.node.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nfunction alloc(size = 0) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(size));\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nfunction allocUnsafe(size = 0) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.allocUnsafe(size));\n}\n//# sourceMappingURL=alloc.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2FsbG9jLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUNjO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLGlFQUFZLENBQUMsK0NBQU07QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLGlFQUFZLENBQUMsK0NBQU07QUFDOUI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9hbGxvYy5ub2RlLmpzP2RmOWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSAnbm9kZTpidWZmZXInO1xuaW1wb3J0IHsgYXNVaW50OEFycmF5IH0gZnJvbSAnI3V0aWwvYXMtdWludDhhcnJheSc7XG4vKipcbiAqIFJldHVybnMgYSBgVWludDhBcnJheWAgb2YgdGhlIHJlcXVlc3RlZCBzaXplLiBSZWZlcmVuY2VkIG1lbW9yeSB3aWxsXG4gKiBiZSBpbml0aWFsaXplZCB0byAwLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYWxsb2Moc2l6ZSA9IDApIHtcbiAgICByZXR1cm4gYXNVaW50OEFycmF5KEJ1ZmZlci5hbGxvYyhzaXplKSk7XG59XG4vKipcbiAqIFdoZXJlIHBvc3NpYmxlIHJldHVybnMgYSBVaW50OEFycmF5IG9mIHRoZSByZXF1ZXN0ZWQgc2l6ZSB0aGF0IHJlZmVyZW5jZXNcbiAqIHVuaW5pdGlhbGl6ZWQgbWVtb3J5LiBPbmx5IHVzZSBpZiB5b3UgYXJlIGNlcnRhaW4geW91IHdpbGwgaW1tZWRpYXRlbHlcbiAqIG92ZXJ3cml0ZSBldmVyeSB2YWx1ZSBpbiB0aGUgcmV0dXJuZWQgYFVpbnQ4QXJyYXlgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYWxsb2NVbnNhZmUoc2l6ZSA9IDApIHtcbiAgICByZXR1cm4gYXNVaW50OEFycmF5KEJ1ZmZlci5hbGxvY1Vuc2FmZShzaXplKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbGxvYy5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/alloc.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/compare.node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/compare.node.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n\n/**\n * Can be used with Array.sort to sort and array with Uint8Array entries\n */\nfunction compare(a, b) {\n    return node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.compare(a, b);\n}\n//# sourceMappingURL=compare.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2NvbXBhcmUubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsK0NBQU07QUFDakI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9jb21wYXJlLm5vZGUuanM/NGU4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tICdub2RlOmJ1ZmZlcic7XG4vKipcbiAqIENhbiBiZSB1c2VkIHdpdGggQXJyYXkuc29ydCB0byBzb3J0IGFuZCBhcnJheSB3aXRoIFVpbnQ4QXJyYXkgZW50cmllc1xuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZShhLCBiKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5jb21wYXJlKGEsIGIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tcGFyZS5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/compare.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/concat.node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/concat.node.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Uint8Arrays\n */\nfunction concat(arrays, length) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat(arrays, length));\n}\n//# sourceMappingURL=concat.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2NvbmNhdC5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNjO0FBQ25EO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxpRUFBWSxDQUFDLCtDQUFNO0FBQzlCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvY29uY2F0Lm5vZGUuanM/OWNlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tICdub2RlOmJ1ZmZlcic7XG5pbXBvcnQgeyBhc1VpbnQ4QXJyYXkgfSBmcm9tICcjdXRpbC9hcy11aW50OGFycmF5Jztcbi8qKlxuICogUmV0dXJucyBhIG5ldyBVaW50OEFycmF5IGNyZWF0ZWQgYnkgY29uY2F0ZW5hdGluZyB0aGUgcGFzc2VkIFVpbnQ4QXJyYXlzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoYXJyYXlzLCBsZW5ndGgpIHtcbiAgICByZXR1cm4gYXNVaW50OEFycmF5KEJ1ZmZlci5jb25jYXQoYXJyYXlzLCBsZW5ndGgpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmNhdC5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/concat.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/equals.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/equals.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2VxdWFscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2VxdWFscy5qcz9hMWQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSB0d28gcGFzc2VkIFVpbnQ4QXJyYXlzIGhhdmUgdGhlIHNhbWUgY29udGVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKGEuYnl0ZUxlbmd0aCAhPT0gYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXF1YWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/equals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/from-string.node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/from-string.node.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromString: () => (/* binding */ fromString)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/bases.js\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nfunction fromString(string, encoding = 'utf8') {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n        return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_2__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2Zyb20tc3RyaW5nLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUNHO0FBQ1c7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlCQUFpQixzREFBSztBQUN0QjtBQUNBLGlEQUFpRCxTQUFTO0FBQzFEO0FBQ0E7QUFDQSxlQUFlLGlFQUFZLENBQUMsK0NBQU07QUFDbEM7QUFDQTtBQUNBLGtDQUFrQyxZQUFZLEVBQUUsT0FBTyxJQUFJO0FBQzNEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvZnJvbS1zdHJpbmcubm9kZS5qcz8wNTc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gJ25vZGU6YnVmZmVyJztcbmltcG9ydCBiYXNlcywge30gZnJvbSAnLi91dGlsL2Jhc2VzLmpzJztcbmltcG9ydCB7IGFzVWludDhBcnJheSB9IGZyb20gJyN1dGlsL2FzLXVpbnQ4YXJyYXknO1xuLyoqXG4gKiBDcmVhdGUgYSBgVWludDhBcnJheWAgZnJvbSB0aGUgcGFzc2VkIHN0cmluZ1xuICpcbiAqIFN1cHBvcnRzIGB1dGY4YCwgYHV0Zi04YCwgYGhleGAsIGFuZCBhbnkgZW5jb2Rpbmcgc3VwcG9ydGVkIGJ5IHRoZSBtdWx0aWZvcm1hdHMgbW9kdWxlLlxuICpcbiAqIEFsc28gYGFzY2lpYCB3aGljaCBpcyBzaW1pbGFyIHRvIG5vZGUncyAnYmluYXJ5JyBlbmNvZGluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21TdHJpbmcoc3RyaW5nLCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICAgIGNvbnN0IGJhc2UgPSBiYXNlc1tlbmNvZGluZ107XG4gICAgaWYgKGJhc2UgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHtlbmNvZGluZ31cImApO1xuICAgIH1cbiAgICBpZiAoZW5jb2RpbmcgPT09ICd1dGY4JyB8fCBlbmNvZGluZyA9PT0gJ3V0Zi04Jykge1xuICAgICAgICByZXR1cm4gYXNVaW50OEFycmF5KEJ1ZmZlci5mcm9tKHN0cmluZywgJ3V0Zi04JykpO1xuICAgIH1cbiAgICAvLyBhZGQgbXVsdGliYXNlIHByZWZpeFxuICAgIHJldHVybiBiYXNlLmRlY29kZXIuZGVjb2RlKGAke2Jhc2UucHJlZml4fSR7c3RyaW5nfWApOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9yZXN0cmljdC10ZW1wbGF0ZS1leHByZXNzaW9uc1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnJvbS1zdHJpbmcubm9kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/from-string.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* reexport safe */ _compare__WEBPACK_IMPORTED_MODULE_2__.compare),\n/* harmony export */   concat: () => (/* reexport safe */ _concat__WEBPACK_IMPORTED_MODULE_3__.concat),\n/* harmony export */   equals: () => (/* reexport safe */ _equals_js__WEBPACK_IMPORTED_MODULE_0__.equals),\n/* harmony export */   fromString: () => (/* reexport safe */ _from_string__WEBPACK_IMPORTED_MODULE_4__.fromString),\n/* harmony export */   toString: () => (/* reexport safe */ _to_string__WEBPACK_IMPORTED_MODULE_5__.toString),\n/* harmony export */   xor: () => (/* reexport safe */ _xor_js__WEBPACK_IMPORTED_MODULE_1__.xor)\n/* harmony export */ });\n/* harmony import */ var _equals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./equals.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/equals.js\");\n/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xor.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/xor.js\");\n/* harmony import */ var _compare__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! #compare */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/compare.node.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! #concat */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/concat.node.js\");\n/* harmony import */ var _from_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! #from-string */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/from-string.node.js\");\n/* harmony import */ var _to_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! #to-string */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/to-string.node.js\");\n/**\n * @packageDocumentation\n *\n * `Uint8Array`s bring memory-efficient(ish) byte handling to browsers - they are similar to Node.js `Buffer`s but lack a lot of the utility methods present on that class.\n *\n * This module exports a number of function that let you do common operations - joining Uint8Arrays together, seeing if they have the same contents etc.\n *\n * Since Node.js `Buffer`s are also `Uint8Array`s, it falls back to `Buffer` internally where it makes sense for performance reasons.\n *\n * ## alloc(size)\n *\n * Create a new `Uint8Array`. When running under Node.js, `Buffer` will be used in preference to `Uint8Array`.\n *\n * ### Example\n *\n * ```js\n * import { alloc } from 'uint8arrays/alloc'\n *\n * const buf = alloc(100)\n * ```\n *\n * ## allocUnsafe(size)\n *\n * Create a new `Uint8Array`. When running under Node.js, `Buffer` will be used in preference to `Uint8Array`.\n *\n * On platforms that support it, memory referenced by the returned `Uint8Array` will not be initialized.\n *\n * ### Example\n *\n * ```js\n * import { allocUnsafe } from 'uint8arrays/alloc'\n *\n * const buf = allocUnsafe(100)\n * ```\n *\n * ## compare(a, b)\n *\n * Compare two `Uint8Arrays`\n *\n * ### Example\n *\n * ```js\n * import { compare } from 'uint8arrays/compare'\n *\n * const arrays = [\n *   Uint8Array.from([3, 4, 5]),\n *   Uint8Array.from([0, 1, 2])\n * ]\n *\n * const sorted = arrays.sort(compare)\n *\n * console.info(sorted)\n * // [\n * //    Uint8Array[0, 1, 2]\n * //    Uint8Array[3, 4, 5]\n * // ]\n * ```\n *\n * ## concat(arrays, \\[length])\n *\n * Concatenate one or more `Uint8Array`s and return a `Uint8Array` with their contents.\n *\n * If you know the length of the arrays, pass it as a second parameter, otherwise it will be calculated by traversing the list of arrays.\n *\n * ### Example\n *\n * ```js\n * import { concat } from 'uint8arrays/concat'\n *\n * const arrays = [\n *   Uint8Array.from([0, 1, 2]),\n *   Uint8Array.from([3, 4, 5])\n * ]\n *\n * const all = concat(arrays, 6)\n *\n * console.info(all)\n * // Uint8Array[0, 1, 2, 3, 4, 5]\n * ```\n *\n * ## equals(a, b)\n *\n * Returns true if the two arrays are the same array or if they have the same length and contents.\n *\n * ### Example\n *\n * ```js\n * import { equals } from 'uint8arrays/equals'\n *\n * const a = Uint8Array.from([0, 1, 2])\n * const b = Uint8Array.from([3, 4, 5])\n * const c = Uint8Array.from([0, 1, 2])\n *\n * console.info(equals(a, b)) // false\n * console.info(equals(a, c)) // true\n * console.info(equals(a, a)) // true\n * ```\n *\n * ## fromString(string, encoding = 'utf8')\n *\n * Returns a new `Uint8Array` created from the passed string and interpreted as the passed encoding.\n *\n * Supports `utf8` and any of the [multibase encodings](https://github.com/multiformats/multibase/blob/master/multibase.csv) as implemented by the [multiformats module](https://www.npmjs.com/package/multiformats).\n *\n * ### Example\n *\n * ```js\n * import { fromString } from 'uint8arrays/from-string'\n *\n * console.info(fromString('hello world')) // Uint8Array[104, 101 ...\n * console.info(fromString('00010203aabbcc', 'base16')) // Uint8Array[0, 1 ...\n * console.info(fromString('AAECA6q7zA', 'base64')) // Uint8Array[0, 1 ...\n * console.info(fromString('01234', 'ascii')) // Uint8Array[48, 49 ...\n * ```\n *\n * ## toString(array, encoding = 'utf8')\n *\n * Returns a string created from the passed `Uint8Array` in the passed encoding.\n *\n * Supports `utf8` and any of the [multibase encodings](https://github.com/multiformats/multibase/blob/master/multibase.csv) as implemented by the [multiformats module](https://www.npmjs.com/package/multiformats).\n *\n * ### Example\n *\n * ```js\n * import { toString } from 'uint8arrays/to-string'\n *\n * console.info(toString(Uint8Array.from([104, 101...]))) // 'hello world'\n * console.info(toString(Uint8Array.from([0, 1, 2...]), 'base16')) // '00010203aabbcc'\n * console.info(toString(Uint8Array.from([0, 1, 2...]), 'base64')) // 'AAECA6q7zA'\n * console.info(toString(Uint8Array.from([48, 49, 50...]), 'ascii')) // '01234'\n * ```\n *\n * ## xor(a, b)\n *\n * Returns a `Uint8Array` containing `a` and `b` xored together.\n *\n * ### Example\n *\n * ```js\n * import { xor } from 'uint8arrays/xor'\n *\n * console.info(xor(Uint8Array.from([1, 0]), Uint8Array.from([0, 1]))) // Uint8Array[1, 1]\n * ```\n *\n * ## xorCompare(a, b)\n *\n * Compares the distances between two xor `Uint8Array`s.\n *\n * ### Example\n *\n * ```ts\n * import { xor } from 'uint8arrays/xor'\n * import { xorCompare } from 'uint8arrays/xor-compare'\n *\n * const target = Uint8Array.from([1, 1])\n * const val1 = Uint8Array.from([1, 0])\n * const xor1 = xor(target, val1)\n *\n * const val2 = Uint8Array.from([0, 1])\n * const xor2 = xor(target, val2)\n *\n * console.info(xorCompare(xor1, xor2)) // -1 or 0 or 1\n * ```\n */\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/to-string.node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/to-string.node.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/bases.js\");\n\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nfunction toString(array, encoding = 'utf8') {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n        return node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3RvLXN0cmluZy5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNHO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQkFBaUIsc0RBQUs7QUFDdEI7QUFDQSxpREFBaUQsU0FBUztBQUMxRDtBQUNBO0FBQ0EsZUFBZSwrQ0FBTTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3RvLXN0cmluZy5ub2RlLmpzP2ZmYzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSAnbm9kZTpidWZmZXInO1xuaW1wb3J0IGJhc2VzLCB7fSBmcm9tICcuL3V0aWwvYmFzZXMuanMnO1xuLyoqXG4gKiBUdXJucyBhIGBVaW50OEFycmF5YCBpbnRvIGEgc3RyaW5nLlxuICpcbiAqIFN1cHBvcnRzIGB1dGY4YCwgYHV0Zi04YCBhbmQgYW55IGVuY29kaW5nIHN1cHBvcnRlZCBieSB0aGUgbXVsdGliYXNlIG1vZHVsZS5cbiAqXG4gKiBBbHNvIGBhc2NpaWAgd2hpY2ggaXMgc2ltaWxhciB0byBub2RlJ3MgJ2JpbmFyeScgZW5jb2RpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b1N0cmluZyhhcnJheSwgZW5jb2RpbmcgPSAndXRmOCcpIHtcbiAgICBjb25zdCBiYXNlID0gYmFzZXNbZW5jb2RpbmddO1xuICAgIGlmIChiYXNlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBlbmNvZGluZyBcIiR7ZW5jb2Rpbmd9XCJgKTtcbiAgICB9XG4gICAgaWYgKGVuY29kaW5nID09PSAndXRmOCcgfHwgZW5jb2RpbmcgPT09ICd1dGYtOCcpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFycmF5LmJ1ZmZlciwgYXJyYXkuYnl0ZU9mZnNldCwgYXJyYXkuYnl0ZUxlbmd0aCkudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgICB9XG4gICAgLy8gc3RyaXAgbXVsdGliYXNlIHByZWZpeFxuICAgIHJldHVybiBiYXNlLmVuY29kZXIuZW5jb2RlKGFycmF5KS5zdWJzdHJpbmcoMSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10by1zdHJpbmcubm9kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/to-string.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asUint8Array: () => (/* binding */ asUint8Array)\n/* harmony export */ });\n/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nfunction asUint8Array(buf) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n}\n//# sourceMappingURL=as-uint8array.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3V0aWwvYXMtdWludDhhcnJheS5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3V0aWwvYXMtdWludDhhcnJheS5ub2RlLmpzPzA0ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUbyBndWFyYW50ZWUgVWludDhBcnJheSBzZW1hbnRpY3MsIGNvbnZlcnQgbm9kZWpzIEJ1ZmZlcnNcbiAqIGludG8gdmFuaWxsYSBVaW50OEFycmF5c1xuICovXG5leHBvcnQgZnVuY3Rpb24gYXNVaW50OEFycmF5KGJ1Zikge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWYuYnVmZmVyLCBidWYuYnl0ZU9mZnNldCwgYnVmLmJ5dGVMZW5ndGgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXMtdWludDhhcnJheS5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/bases.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/bases.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/multiformats/dist/src/basics.js\");\n/* harmony import */ var _alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #alloc */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/alloc.node.js\");\n\n\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = (0,_alloc__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);\n//# sourceMappingURL=bases.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3V0aWwvYmFzZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ1A7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsZ0JBQWdCLG1EQUFXO0FBQzNCLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFNBQVMsc0RBQUs7QUFDZDtBQUNBO0FBQ0E7QUFDQSxPQUFPLHNEQUFLO0FBQ1o7QUFDQSxpRUFBZSxLQUFLLEVBQUM7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2FjY2Vzcy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvdXRpbC9iYXNlcy5qcz9lYTBmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VzIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2ljcyc7XG5pbXBvcnQgeyBhbGxvY1Vuc2FmZSB9IGZyb20gJyNhbGxvYyc7XG5mdW5jdGlvbiBjcmVhdGVDb2RlYyhuYW1lLCBwcmVmaXgsIGVuY29kZSwgZGVjb2RlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgcHJlZml4LFxuICAgICAgICBlbmNvZGVyOiB7XG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgcHJlZml4LFxuICAgICAgICAgICAgZW5jb2RlXG4gICAgICAgIH0sXG4gICAgICAgIGRlY29kZXI6IHtcbiAgICAgICAgICAgIGRlY29kZVxuICAgICAgICB9XG4gICAgfTtcbn1cbmNvbnN0IHN0cmluZyA9IGNyZWF0ZUNvZGVjKCd1dGY4JywgJ3UnLCAoYnVmKSA9PiB7XG4gICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigndXRmOCcpO1xuICAgIHJldHVybiAndScgKyBkZWNvZGVyLmRlY29kZShidWYpO1xufSwgKHN0cikgPT4ge1xuICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICByZXR1cm4gZW5jb2Rlci5lbmNvZGUoc3RyLnN1YnN0cmluZygxKSk7XG59KTtcbmNvbnN0IGFzY2lpID0gY3JlYXRlQ29kZWMoJ2FzY2lpJywgJ2EnLCAoYnVmKSA9PiB7XG4gICAgbGV0IHN0cmluZyA9ICdhJztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1Zi5sZW5ndGg7IGkrKykge1xuICAgICAgICBzdHJpbmcgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShidWZbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gc3RyaW5nO1xufSwgKHN0cikgPT4ge1xuICAgIHN0ciA9IHN0ci5zdWJzdHJpbmcoMSk7XG4gICAgY29uc3QgYnVmID0gYWxsb2NVbnNhZmUoc3RyLmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYnVmW2ldID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgfVxuICAgIHJldHVybiBidWY7XG59KTtcbmNvbnN0IEJBU0VTID0ge1xuICAgIHV0Zjg6IHN0cmluZyxcbiAgICAndXRmLTgnOiBzdHJpbmcsXG4gICAgaGV4OiBiYXNlcy5iYXNlMTYsXG4gICAgbGF0aW4xOiBhc2NpaSxcbiAgICBhc2NpaSxcbiAgICBiaW5hcnk6IGFzY2lpLFxuICAgIC4uLmJhc2VzXG59O1xuZXhwb3J0IGRlZmF1bHQgQkFTRVM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/bases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/xor.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/xor.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xor: () => (/* binding */ xor)\n/* harmony export */ });\n/* harmony import */ var _alloc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! #alloc */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n/**\n * Returns the xor distance between two Uint8Arrays\n */\nfunction xor(a, b) {\n    if (a.length !== b.length) {\n        throw new Error('Inputs should have the same length');\n    }\n    const result = (0,_alloc__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(a.length);\n    for (let i = 0; i < a.length; i++) {\n        result[i] = a[i] ^ b[i];\n    }\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(result);\n}\n//# sourceMappingURL=xor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3hvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDYztBQUNuRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtREFBVztBQUM5QixvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0EsV0FBVyxpRUFBWTtBQUN2QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3hvci5qcz9lMjYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFsbG9jVW5zYWZlIH0gZnJvbSAnI2FsbG9jJztcbmltcG9ydCB7IGFzVWludDhBcnJheSB9IGZyb20gJyN1dGlsL2FzLXVpbnQ4YXJyYXknO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSB4b3IgZGlzdGFuY2UgYmV0d2VlbiB0d28gVWludDhBcnJheXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHhvcihhLCBiKSB7XG4gICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0lucHV0cyBzaG91bGQgaGF2ZSB0aGUgc2FtZSBsZW5ndGgnKTtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0gYWxsb2NVbnNhZmUoYS5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICByZXN1bHRbaV0gPSBhW2ldIF4gYltpXTtcbiAgICB9XG4gICAgcmV0dXJuIGFzVWludDhBcnJheShyZXN1bHQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/access/node_modules/uint8arrays/dist/src/xor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/dist/src/api.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/dist/src/api.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L2Rpc3Qvc3JjL2FwaS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9kaXN0L3NyYy9hcGkuanM/OTY4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/dist/src/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/dist/src/digest-map.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/dist/src/digest-map.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DigestMap: () => (/* binding */ DigestMap)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/api.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base58.js\");\n\n\n/** @type {WeakMap<Uint8Array, string>} */\nconst cache = new WeakMap();\n/** @param {API.MultihashDigest} digest */\nconst toBase58String = (digest) => {\n    let str = cache.get(digest.bytes);\n    if (!str) {\n        str = multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__.base58btc.encode(digest.bytes);\n        cache.set(digest.bytes, str);\n    }\n    return str;\n};\n/**\n * @template {API.MultihashDigest} Key\n * @template Value\n * @implements {Map<Key, Value>}\n */\nclass DigestMap {\n    /** @type {Map<string, [Key, Value]>} */\n    #data;\n    /**\n     * @param {Array<[Key, Value]>} [entries]\n     */\n    constructor(entries) {\n        this.#data = new Map();\n        for (const [k, v] of entries ?? []) {\n            this.set(k, v);\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return 'DigestMap';\n    }\n    clear() {\n        this.#data.clear();\n    }\n    /**\n     * @param {Key} key\n     * @returns {boolean}\n     */\n    delete(key) {\n        const mhstr = toBase58String(key);\n        return this.#data.delete(mhstr);\n    }\n    /**\n     * @param {(value: Value, key: Key, map: Map<Key, Value>) => void} callbackfn\n     * @param {any} [thisArg]\n     */\n    forEach(callbackfn, thisArg) {\n        for (const [k, v] of this.#data.values()) {\n            callbackfn.call(thisArg, v, k, this);\n        }\n    }\n    /**\n     * @param {Key} key\n     * @returns {Value|undefined}\n     */\n    get(key) {\n        const data = this.#data.get(toBase58String(key));\n        if (data)\n            return data[1];\n    }\n    /**\n     * @param {Key} key\n     * @returns {boolean}\n     */\n    has(key) {\n        return this.#data.has(toBase58String(key));\n    }\n    /**\n     * @param {Key} key\n     * @param {Value} value\n     */\n    set(key, value) {\n        this.#data.set(toBase58String(key), [key, value]);\n        return this;\n    }\n    /** @returns {number} */\n    get size() {\n        return this.#data.size;\n    }\n    /** @returns */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /** @returns {IterableIterator<[Key, Value]>} */\n    *entries() {\n        yield* this.#data.values();\n    }\n    /** @returns {IterableIterator<Key>} */\n    *keys() {\n        for (const [k] of this.#data.values()) {\n            yield k;\n        }\n    }\n    /** @returns {IterableIterator<Value>} */\n    *values() {\n        for (const [, v] of this.#data.values()) {\n            yield v;\n        }\n    }\n}\n//# sourceMappingURL=digest-map.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L2Rpc3Qvc3JjL2RpZ2VzdC1tYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdDO0FBQ3NCO0FBQ3RELFdBQVcsNkJBQTZCO0FBQ3hDO0FBQ0EsWUFBWSxxQkFBcUI7QUFDakM7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQkFBcUI7QUFDbkM7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTztBQUNQLGVBQWUsMkJBQTJCO0FBQzFDO0FBQ0E7QUFDQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdEQUF3RDtBQUN2RSxlQUFlLEtBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFFBQVE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0NBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1QkFBdUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5QkFBeUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvZGlzdC9zcmMvZGlnZXN0LW1hcC5qcz9kY2EwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICcuL2FwaS5qcyc7XG5pbXBvcnQgeyBiYXNlNThidGMgfSBmcm9tICdtdWx0aWZvcm1hdHMvYmFzZXMvYmFzZTU4Jztcbi8qKiBAdHlwZSB7V2Vha01hcDxVaW50OEFycmF5LCBzdHJpbmc+fSAqL1xuY29uc3QgY2FjaGUgPSBuZXcgV2Vha01hcCgpO1xuLyoqIEBwYXJhbSB7QVBJLk11bHRpaGFzaERpZ2VzdH0gZGlnZXN0ICovXG5jb25zdCB0b0Jhc2U1OFN0cmluZyA9IChkaWdlc3QpID0+IHtcbiAgICBsZXQgc3RyID0gY2FjaGUuZ2V0KGRpZ2VzdC5ieXRlcyk7XG4gICAgaWYgKCFzdHIpIHtcbiAgICAgICAgc3RyID0gYmFzZTU4YnRjLmVuY29kZShkaWdlc3QuYnl0ZXMpO1xuICAgICAgICBjYWNoZS5zZXQoZGlnZXN0LmJ5dGVzLCBzdHIpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyO1xufTtcbi8qKlxuICogQHRlbXBsYXRlIHtBUEkuTXVsdGloYXNoRGlnZXN0fSBLZXlcbiAqIEB0ZW1wbGF0ZSBWYWx1ZVxuICogQGltcGxlbWVudHMge01hcDxLZXksIFZhbHVlPn1cbiAqL1xuZXhwb3J0IGNsYXNzIERpZ2VzdE1hcCB7XG4gICAgLyoqIEB0eXBlIHtNYXA8c3RyaW5nLCBbS2V5LCBWYWx1ZV0+fSAqL1xuICAgICNkYXRhO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7QXJyYXk8W0tleSwgVmFsdWVdPn0gW2VudHJpZXNdXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZW50cmllcykge1xuICAgICAgICB0aGlzLiNkYXRhID0gbmV3IE1hcCgpO1xuICAgICAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBlbnRyaWVzID8/IFtdKSB7XG4gICAgICAgICAgICB0aGlzLnNldChrLCB2KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgICAgIHJldHVybiAnRGlnZXN0TWFwJztcbiAgICB9XG4gICAgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuI2RhdGEuY2xlYXIoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtLZXl9IGtleVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGRlbGV0ZShrZXkpIHtcbiAgICAgICAgY29uc3QgbWhzdHIgPSB0b0Jhc2U1OFN0cmluZyhrZXkpO1xuICAgICAgICByZXR1cm4gdGhpcy4jZGF0YS5kZWxldGUobWhzdHIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0geyh2YWx1ZTogVmFsdWUsIGtleTogS2V5LCBtYXA6IE1hcDxLZXksIFZhbHVlPikgPT4gdm9pZH0gY2FsbGJhY2tmblxuICAgICAqIEBwYXJhbSB7YW55fSBbdGhpc0FyZ11cbiAgICAgKi9cbiAgICBmb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcpIHtcbiAgICAgICAgZm9yIChjb25zdCBbaywgdl0gb2YgdGhpcy4jZGF0YS52YWx1ZXMoKSkge1xuICAgICAgICAgICAgY2FsbGJhY2tmbi5jYWxsKHRoaXNBcmcsIHYsIGssIHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7S2V5fSBrZXlcbiAgICAgKiBAcmV0dXJucyB7VmFsdWV8dW5kZWZpbmVkfVxuICAgICAqL1xuICAgIGdldChrZXkpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuI2RhdGEuZ2V0KHRvQmFzZTU4U3RyaW5nKGtleSkpO1xuICAgICAgICBpZiAoZGF0YSlcbiAgICAgICAgICAgIHJldHVybiBkYXRhWzFdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0tleX0ga2V5XG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgaGFzKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy4jZGF0YS5oYXModG9CYXNlNThTdHJpbmcoa2V5KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7S2V5fSBrZXlcbiAgICAgKiBAcGFyYW0ge1ZhbHVlfSB2YWx1ZVxuICAgICAqL1xuICAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuI2RhdGEuc2V0KHRvQmFzZTU4U3RyaW5nKGtleSksIFtrZXksIHZhbHVlXSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKiogQHJldHVybnMge251bWJlcn0gKi9cbiAgICBnZXQgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2RhdGEuc2l6ZTtcbiAgICB9XG4gICAgLyoqIEByZXR1cm5zICovXG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMoKTtcbiAgICB9XG4gICAgLyoqIEByZXR1cm5zIHtJdGVyYWJsZUl0ZXJhdG9yPFtLZXksIFZhbHVlXT59ICovXG4gICAgKmVudHJpZXMoKSB7XG4gICAgICAgIHlpZWxkKiB0aGlzLiNkYXRhLnZhbHVlcygpO1xuICAgIH1cbiAgICAvKiogQHJldHVybnMge0l0ZXJhYmxlSXRlcmF0b3I8S2V5Pn0gKi9cbiAgICAqa2V5cygpIHtcbiAgICAgICAgZm9yIChjb25zdCBba10gb2YgdGhpcy4jZGF0YS52YWx1ZXMoKSkge1xuICAgICAgICAgICAgeWllbGQgaztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKiogQHJldHVybnMge0l0ZXJhYmxlSXRlcmF0b3I8VmFsdWU+fSAqL1xuICAgICp2YWx1ZXMoKSB7XG4gICAgICAgIGZvciAoY29uc3QgWywgdl0gb2YgdGhpcy4jZGF0YS52YWx1ZXMoKSkge1xuICAgICAgICAgICAgeWllbGQgdjtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpZ2VzdC1tYXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/dist/src/digest-map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/dist/src/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/dist/src/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DigestMap: () => (/* reexport safe */ _digest_map_js__WEBPACK_IMPORTED_MODULE_1__.DigestMap),\n/* harmony export */   ShardedDAGIndex: () => (/* reexport module object */ _sharded_dag_index_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   indexShardedDAG: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_2__.indexShardedDAG)\n/* harmony export */ });\n/* harmony import */ var _sharded_dag_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sharded-dag-index.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/sharded-dag-index.js\");\n/* harmony import */ var _digest_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest-map.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/digest-map.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/util.js\");\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L2Rpc3Qvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwRDtBQUMxQjtBQUNZO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L2Rpc3Qvc3JjL2luZGV4LmpzPzhiZmMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogYXMgU2hhcmRlZERBR0luZGV4IGZyb20gJy4vc2hhcmRlZC1kYWctaW5kZXguanMnO1xuZXhwb3J0ICogZnJvbSAnLi9kaWdlc3QtbWFwLmpzJztcbmV4cG9ydCB7IGluZGV4U2hhcmRlZERBRyB9IGZyb20gJy4vdXRpbC5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/dist/src/sharded-dag-index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/dist/src/sharded-dag-index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlobIndexSchema: () => (/* binding */ BlobIndexSchema),\n/* harmony export */   DecodeFailure: () => (/* binding */ DecodeFailure),\n/* harmony export */   MultihashSchema: () => (/* binding */ MultihashSchema),\n/* harmony export */   ShardedDAGIndexSchema: () => (/* binding */ ShardedDAGIndexSchema),\n/* harmony export */   UnknownFormat: () => (/* binding */ UnknownFormat),\n/* harmony export */   archive: () => (/* binding */ archive),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   extract: () => (/* binding */ extract),\n/* harmony export */   version: () => (/* binding */ version),\n/* harmony export */   view: () => (/* binding */ view)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/api.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/index.js\");\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var multiformats_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/link */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var _digest_map_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./digest-map.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/digest-map.js\");\n\n\n\n\n\n\n\n\nconst version = 'index/sharded/dag@0.1';\nconst ShardedDAGIndexSchema = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.variant({\n    [version]: _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n        /** DAG root. */\n        content: _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.link(),\n        /** Shards the DAG can be found in. */\n        shards: _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.array(_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.link()),\n    }),\n});\nconst MultihashSchema = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.bytes();\nconst BlobIndexSchema = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.tuple([\n    MultihashSchema,\n    _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.array(\n    /** multihash bytes, offset, length. */\n    _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.tuple([\n        MultihashSchema,\n        _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.tuple([_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.number(), _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Schema.number()]),\n    ])),\n]);\n/**\n * @param {Uint8Array} archive\n * @returns {API.Result<API.ShardedDAGIndexView, API.DecodeFailure|API.UnknownFormat>}\n */\nconst extract = (archive) => {\n    const { roots, blocks } = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR.decode(archive);\n    if (!roots.length) {\n        return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.error)(new UnknownFormat('missing root block'));\n    }\n    const { code } = roots[0].cid;\n    if (code !== _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_3__.code) {\n        return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.error)(new UnknownFormat(`unexpected root CID codec: 0x${code.toString(16)}`));\n    }\n    return view({ root: roots[0], blocks });\n};\n/**\n * @param {object} source\n * @param {API.IPLDBlock} source.root\n * @param {Map<string, API.IPLDBlock>} source.blocks\n * @returns {API.Result<API.ShardedDAGIndexView, API.DecodeFailure|API.UnknownFormat>}\n */\nconst view = ({ root, blocks }) => {\n    const [version, dagIndexData] = ShardedDAGIndexSchema.match(_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_3__.decode(root.bytes));\n    switch (version) {\n        case version: {\n            const dagIndex = create(dagIndexData.content);\n            for (const shardLink of dagIndexData.shards) {\n                const shard = blocks.get(shardLink.toString());\n                if (!shard) {\n                    return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.error)(new DecodeFailure(`missing shard block: ${shardLink}`));\n                }\n                const blobIndexData = BlobIndexSchema.from(_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_3__.decode(shard.bytes));\n                const blobIndex = new _digest_map_js__WEBPACK_IMPORTED_MODULE_7__.DigestMap();\n                for (const [digest, [offset, length]] of blobIndexData[1]) {\n                    blobIndex.set(multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_4__.decode(digest), [offset, length]);\n                }\n                dagIndex.shards.set(multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_4__.decode(blobIndexData[0]), blobIndex);\n            }\n            return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.ok)(dagIndex);\n        }\n        default:\n            return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.error)(new UnknownFormat(`unknown index version: ${version}`));\n    }\n};\n/** @implements {API.ShardedDAGIndexView} */\nclass ShardedDAGIndex {\n    #content;\n    #shards;\n    /** @param {API.UnknownLink} content */\n    constructor(content) {\n        this.#content = content;\n        /** @type {DigestMap<API.ShardDigest, API.Position>} */\n        this.#shards = new _digest_map_js__WEBPACK_IMPORTED_MODULE_7__.DigestMap();\n    }\n    get content() {\n        return this.#content;\n    }\n    get shards() {\n        return this.#shards;\n    }\n    /**\n     * @param {API.ShardDigest} shard\n     * @param {API.SliceDigest} slice\n     * @param {API.Position} pos\n     */\n    setSlice(shard, slice, pos) {\n        let index = this.#shards.get(shard);\n        if (!index) {\n            index = new _digest_map_js__WEBPACK_IMPORTED_MODULE_7__.DigestMap();\n            this.#shards.set(shard, index);\n        }\n        index.set(slice, pos);\n    }\n    archive() {\n        return archive(this);\n    }\n}\nclass UnknownFormat extends _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Failure {\n    #reason;\n    /** @param {string} [reason] */\n    constructor(reason) {\n        super();\n        this.name = /** @type {const} */ ('UnknownFormat');\n        this.#reason = reason;\n    }\n    describe() {\n        return this.#reason ?? 'unknown format';\n    }\n}\nclass DecodeFailure extends _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Failure {\n    #reason;\n    /** @param {string} [reason] */\n    constructor(reason) {\n        super();\n        this.name = /** @type {const} */ ('DecodeFailure');\n        this.#reason = reason;\n    }\n    describe() {\n        return this.#reason ?? 'failed to decode';\n    }\n}\n/**\n * @param {API.UnknownLink} content\n * @returns {API.ShardedDAGIndexView}\n */\nconst create = (content) => new ShardedDAGIndex(content);\n/**\n * @param {API.ShardedDAGIndex} model\n * @returns {Promise<API.Result<Uint8Array>>}\n */\nconst archive = async (model) => {\n    const blocks = new Map();\n    const shards = [...model.shards.entries()].sort((a, b) => (0,uint8arrays__WEBPACK_IMPORTED_MODULE_2__.compare)(a[0].digest, b[0].digest));\n    const index = {\n        content: model.content,\n        shards: /** @type {API.Link[]} */ ([]),\n    };\n    for (const s of shards) {\n        const slices = [...s[1].entries()]\n            .sort((a, b) => (0,uint8arrays__WEBPACK_IMPORTED_MODULE_2__.compare)(a[0].digest, b[0].digest))\n            .map((e) => [e[0].bytes, e[1]]);\n        const bytes = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_3__.encode([s[0].bytes, slices]);\n        const digest = await multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256.digest(bytes);\n        const cid = multiformats_link__WEBPACK_IMPORTED_MODULE_5__.create(_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_3__.code, digest);\n        blocks.set(cid.toString(), { cid, bytes });\n        index.shards.push(cid);\n    }\n    const bytes = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_3__.encode({ [version]: index });\n    const digest = await multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256.digest(bytes);\n    const cid = multiformats_link__WEBPACK_IMPORTED_MODULE_5__.create(_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_3__.code, digest);\n    return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.ok)(_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR.encode({ roots: [{ cid, bytes }], blocks }));\n};\n//# sourceMappingURL=sharded-dag-index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/dist/src/sharded-dag-index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/dist/src/util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/dist/src/util.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromShardArchives: () => (/* binding */ fromShardArchives),\n/* harmony export */   indexShardedDAG: () => (/* binding */ indexShardedDAG)\n/* harmony export */ });\n/* harmony import */ var carstream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! carstream */ \"(ssr)/./node_modules/carstream/src/index.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/api.js\");\n/* harmony import */ var _sharded_dag_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sharded-dag-index.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/sharded-dag-index.js\");\n\n\n\n\n/**\n * Create a sharded DAG index by indexing blocks in the passed CAR shards.\n *\n * @param {API.UnknownLink} content\n * @param {Uint8Array[]} shards\n * @returns {Promise<API.ShardedDAGIndexView>}\n */\nconst fromShardArchives = async (content, shards) => {\n    const index = (0,_sharded_dag_index_js__WEBPACK_IMPORTED_MODULE_3__.create)(content);\n    for (const s of shards) {\n        const digest = await multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_1__.sha256.digest(s);\n        await new ReadableStream({\n            pull: (c) => {\n                c.enqueue(s);\n                c.close();\n            },\n        })\n            .pipeThrough(new carstream__WEBPACK_IMPORTED_MODULE_0__.CARReaderStream())\n            .pipeTo(new WritableStream({\n            write({ cid, blockOffset, blockLength }) {\n                index.setSlice(digest, cid.multihash, [blockOffset, blockLength]);\n            },\n        }));\n    }\n    return index;\n};\n/**\n * Indexes a sharded DAG\n *\n * @param {import('multiformats').Link} root\n * @param {import('@web3-storage/capabilities/types').CARLink[]} shards\n * @param {Array<Map<API.SliceDigest, API.Position>>} shardIndexes\n */\nasync function indexShardedDAG(root, shards, shardIndexes) {\n    const index = (0,_sharded_dag_index_js__WEBPACK_IMPORTED_MODULE_3__.create)(root);\n    for (const [i, shard] of shards.entries()) {\n        const slices = shardIndexes[i];\n        index.shards.set(shard.multihash, slices);\n    }\n    return await index.archive();\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L2Rpc3Qvc3JjL3V0aWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTRDO0FBQ007QUFDbEI7QUFDZ0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxjQUFjO0FBQ3pCLGFBQWE7QUFDYjtBQUNPO0FBQ1Asa0JBQWtCLDZEQUFNO0FBQ3hCO0FBQ0EsNkJBQTZCLDREQUFNO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCw2QkFBNkIsc0RBQWU7QUFDNUM7QUFDQSxvQkFBb0IsK0JBQStCO0FBQ25EO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZCQUE2QjtBQUN4QyxXQUFXLHNEQUFzRDtBQUNqRSxXQUFXLDJDQUEyQztBQUN0RDtBQUNPO0FBQ1Asa0JBQWtCLDZEQUFNO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L2Rpc3Qvc3JjL3V0aWwuanM/Mzg5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDQVJSZWFkZXJTdHJlYW0gfSBmcm9tICdjYXJzdHJlYW0nO1xuaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJztcbmltcG9ydCAqIGFzIEFQSSBmcm9tICcuL2FwaS5qcyc7XG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tICcuL3NoYXJkZWQtZGFnLWluZGV4LmpzJztcbi8qKlxuICogQ3JlYXRlIGEgc2hhcmRlZCBEQUcgaW5kZXggYnkgaW5kZXhpbmcgYmxvY2tzIGluIHRoZSBwYXNzZWQgQ0FSIHNoYXJkcy5cbiAqXG4gKiBAcGFyYW0ge0FQSS5Vbmtub3duTGlua30gY29udGVudFxuICogQHBhcmFtIHtVaW50OEFycmF5W119IHNoYXJkc1xuICogQHJldHVybnMge1Byb21pc2U8QVBJLlNoYXJkZWREQUdJbmRleFZpZXc+fVxuICovXG5leHBvcnQgY29uc3QgZnJvbVNoYXJkQXJjaGl2ZXMgPSBhc3luYyAoY29udGVudCwgc2hhcmRzKSA9PiB7XG4gICAgY29uc3QgaW5kZXggPSBjcmVhdGUoY29udGVudCk7XG4gICAgZm9yIChjb25zdCBzIG9mIHNoYXJkcykge1xuICAgICAgICBjb25zdCBkaWdlc3QgPSBhd2FpdCBzaGEyNTYuZGlnZXN0KHMpO1xuICAgICAgICBhd2FpdCBuZXcgUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICAgICAgcHVsbDogKGMpID0+IHtcbiAgICAgICAgICAgICAgICBjLmVucXVldWUocyk7XG4gICAgICAgICAgICAgICAgYy5jbG9zZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5waXBlVGhyb3VnaChuZXcgQ0FSUmVhZGVyU3RyZWFtKCkpXG4gICAgICAgICAgICAucGlwZVRvKG5ldyBXcml0YWJsZVN0cmVhbSh7XG4gICAgICAgICAgICB3cml0ZSh7IGNpZCwgYmxvY2tPZmZzZXQsIGJsb2NrTGVuZ3RoIH0pIHtcbiAgICAgICAgICAgICAgICBpbmRleC5zZXRTbGljZShkaWdlc3QsIGNpZC5tdWx0aWhhc2gsIFtibG9ja09mZnNldCwgYmxvY2tMZW5ndGhdKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuIGluZGV4O1xufTtcbi8qKlxuICogSW5kZXhlcyBhIHNoYXJkZWQgREFHXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cycpLkxpbmt9IHJvb3RcbiAqIEBwYXJhbSB7aW1wb3J0KCdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy90eXBlcycpLkNBUkxpbmtbXX0gc2hhcmRzXG4gKiBAcGFyYW0ge0FycmF5PE1hcDxBUEkuU2xpY2VEaWdlc3QsIEFQSS5Qb3NpdGlvbj4+fSBzaGFyZEluZGV4ZXNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluZGV4U2hhcmRlZERBRyhyb290LCBzaGFyZHMsIHNoYXJkSW5kZXhlcykge1xuICAgIGNvbnN0IGluZGV4ID0gY3JlYXRlKHJvb3QpO1xuICAgIGZvciAoY29uc3QgW2ksIHNoYXJkXSBvZiBzaGFyZHMuZW50cmllcygpKSB7XG4gICAgICAgIGNvbnN0IHNsaWNlcyA9IHNoYXJkSW5kZXhlc1tpXTtcbiAgICAgICAgaW5kZXguc2hhcmRzLnNldChzaGFyZC5tdWx0aWhhc2gsIHNsaWNlcyk7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCBpbmRleC5hcmNoaXZlKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/dist/src/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/@ipld/dag-cbor/src/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/@ipld/dag-cbor/src/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeOptions: () => (/* binding */ decodeOptions),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeOptions: () => (/* binding */ encodeOptions),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   toByteView: () => (/* binding */ toByteView)\n/* harmony export */ });\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/cborg.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/cid.js\");\n\n\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.tag, CID_CBOR_TAG),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nconst encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nconst decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nconst name = 'dag-cbor'\nconst code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nconst encode = (node) => cborg__WEBPACK_IMPORTED_MODULE_0__.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nconst decode = (data) => cborg__WEBPACK_IMPORTED_MODULE_0__.decode(toByteView(data), _decodeOptions)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9AaXBsZC9kYWctY2Jvci9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThCO0FBQ1E7O0FBRXRDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEscURBQXFEO0FBQ2xFOztBQUVBO0FBQ0E7QUFDQSxhQUFhLDREQUE0RDtBQUN6RTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxrQ0FBa0M7QUFDN0MsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpREFBRztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3Q0FBVyxDQUFDLHVDQUFVO0FBQzlCLFFBQVEsd0NBQVcsQ0FBQyx1Q0FBVTtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBLFNBQVMsaURBQUc7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOEJBQThCO0FBQzNDO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTs7QUFFTztBQUNBOztBQUVQO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhO0FBQ2I7QUFDTyx5QkFBeUIseUNBQVk7O0FBRTVDO0FBQ0E7QUFDQSxXQUFXLGtDQUFrQztBQUM3QyxhQUFhO0FBQ2I7QUFDTyx5QkFBeUIseUNBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1jYm9yL3NyYy9pbmRleC5qcz80MTI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNib3JnIGZyb20gJ2Nib3JnJ1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCdcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2lwZnMvZ28taXBmcy9pc3N1ZXMvMzU3MCNpc3N1ZWNvbW1lbnQtMjczOTMxNjkyXG5jb25zdCBDSURfQ0JPUl9UQUcgPSA0MlxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvY29kZWNzL2ludGVyZmFjZScpLkJ5dGVWaWV3PFQ+fSBCeXRlVmlld1xuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ211bHRpZm9ybWF0cy9jb2RlY3MvaW50ZXJmYWNlJykuQXJyYXlCdWZmZXJWaWV3PFQ+fSBBcnJheUJ1ZmZlclZpZXdcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFQ+IHwgQXJyYXlCdWZmZXJWaWV3PFQ+fSBidWZcbiAqIEByZXR1cm5zIHtCeXRlVmlldzxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQnl0ZVZpZXcgKGJ1Zikge1xuICBpZiAoYnVmIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmLCAwLCBidWYuYnl0ZUxlbmd0aClcbiAgfVxuXG4gIHJldHVybiBidWZcbn1cblxuLyoqXG4gKiBjaWRFbmNvZGVyIHdpbGwgcmVjZWl2ZSBhbGwgT2JqZWN0cyBkdXJpbmcgZW5jb2RlLCBpdCBuZWVkcyB0byBmaWx0ZXIgb3V0XG4gKiBhbnl0aGluZyB0aGF0J3Mgbm90IGEgQ0lEIGFuZCByZXR1cm4gYG51bGxgIGZvciB0aGF0IHNvIGl0J3MgZW5jb2RlZCBhc1xuICogbm9ybWFsLlxuICpcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtjYm9yZy5Ub2tlbltdfG51bGx9XG4gKi9cbmZ1bmN0aW9uIGNpZEVuY29kZXIgKG9iaikge1xuICBpZiAob2JqLmFzQ0lEICE9PSBvYmogJiYgb2JqWycvJ10gIT09IG9iai5ieXRlcykge1xuICAgIHJldHVybiBudWxsIC8vIGFueSBvdGhlciBraW5kIG9mIG9iamVjdFxuICB9XG4gIGNvbnN0IGNpZCA9IENJRC5hc0NJRChvYmopXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gdmVyeSB1bmxpa2VseSBjYXNlLCBhbmQgaXQnbGwgcHJvYmFibHkgdGhyb3cgYSByZWN1cnNpb24gZXJyb3IgaW4gY2JvcmdcbiAgaWYgKCFjaWQpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoY2lkLmJ5dGVzLmJ5dGVMZW5ndGggKyAxKVxuICBieXRlcy5zZXQoY2lkLmJ5dGVzLCAxKSAvLyBwcmVmaXggaXMgMHgwMCwgZm9yIGhpc3RvcmljYWwgcmVhc29uc1xuICByZXR1cm4gW1xuICAgIG5ldyBjYm9yZy5Ub2tlbihjYm9yZy5UeXBlLnRhZywgQ0lEX0NCT1JfVEFHKSxcbiAgICBuZXcgY2JvcmcuVG9rZW4oY2JvcmcuVHlwZS5ieXRlcywgYnl0ZXMpXG4gIF1cbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGpzZG9jL3JlcXVpcmUtcmV0dXJucy1jaGVja1xuLyoqXG4gKiBJbnRlcmNlcHQgYWxsIGB1bmRlZmluZWRgIHZhbHVlcyBmcm9tIGFuIG9iamVjdCB3YWxrIGFuZCByZWplY3QgdGhlIGVudGlyZVxuICogb2JqZWN0IGlmIHdlIGZpbmQgb25lLlxuICpcbiAqIEByZXR1cm5zIHtudWxsfVxuICovXG5mdW5jdGlvbiB1bmRlZmluZWRFbmNvZGVyICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdgdW5kZWZpbmVkYCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBJUExEIERhdGEgTW9kZWwgYW5kIGNhbm5vdCBiZSBlbmNvZGVkJylcbn1cblxuLyoqXG4gKiBJbnRlcmNlcHQgYWxsIGBudW1iZXJgIHZhbHVlcyBmcm9tIGFuIG9iamVjdCB3YWxrIGFuZCByZWplY3QgdGhlIGVudGlyZVxuICogb2JqZWN0IGlmIHdlIGZpbmQgc29tZXRoaW5nIHRoYXQgZG9lc24ndCBmaXQgdGhlIElQTEQgZGF0YSBtb2RlbCAoTmFOICZcbiAqIEluZmluaXR5KS5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gbnVtXG4gKiBAcmV0dXJucyB7bnVsbH1cbiAqL1xuZnVuY3Rpb24gbnVtYmVyRW5jb2RlciAobnVtKSB7XG4gIGlmIChOdW1iZXIuaXNOYU4obnVtKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignYE5hTmAgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgSVBMRCBEYXRhIE1vZGVsIGFuZCBjYW5ub3QgYmUgZW5jb2RlZCcpXG4gIH1cbiAgaWYgKG51bSA9PT0gSW5maW5pdHkgfHwgbnVtID09PSAtSW5maW5pdHkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2BJbmZpbml0eWAgYW5kIGAtSW5maW5pdHlgIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIElQTEQgRGF0YSBNb2RlbCBhbmQgY2Fubm90IGJlIGVuY29kZWQnKVxuICB9XG4gIHJldHVybiBudWxsXG59XG5cbmNvbnN0IF9lbmNvZGVPcHRpb25zID0ge1xuICBmbG9hdDY0OiB0cnVlLFxuICB0eXBlRW5jb2RlcnM6IHtcbiAgICBPYmplY3Q6IGNpZEVuY29kZXIsXG4gICAgdW5kZWZpbmVkOiB1bmRlZmluZWRFbmNvZGVyLFxuICAgIG51bWJlcjogbnVtYmVyRW5jb2RlclxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBlbmNvZGVPcHRpb25zID0ge1xuICAuLi5fZW5jb2RlT3B0aW9ucyxcbiAgdHlwZUVuY29kZXJzOiB7XG4gICAgLi4uX2VuY29kZU9wdGlvbnMudHlwZUVuY29kZXJzXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcmV0dXJucyB7Q0lEfVxuICovXG5mdW5jdGlvbiBjaWREZWNvZGVyIChieXRlcykge1xuICBpZiAoYnl0ZXNbMF0gIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgQ0lEIGZvciBDQk9SIHRhZyA0MjsgZXhwZWN0ZWQgbGVhZGluZyAweDAwJylcbiAgfVxuICByZXR1cm4gQ0lELmRlY29kZShieXRlcy5zdWJhcnJheSgxKSkgLy8gaWdub3JlIGxlYWRpbmcgMHgwMFxufVxuXG5jb25zdCBfZGVjb2RlT3B0aW9ucyA9IHtcbiAgYWxsb3dJbmRlZmluaXRlOiBmYWxzZSxcbiAgY29lcmNlVW5kZWZpbmVkVG9OdWxsOiB0cnVlLFxuICBhbGxvd05hTjogZmFsc2UsXG4gIGFsbG93SW5maW5pdHk6IGZhbHNlLFxuICBhbGxvd0JpZ0ludDogdHJ1ZSwgLy8gdGhpcyB3aWxsIGxlYWQgdG8gQmlnSW50IGZvciBpbnRzIG91dHNpZGUgb2ZcbiAgLy8gc2FmZS1pbnRlZ2VyIHJhbmdlLCB3aGljaCBtYXkgc3VycHJpc2UgdXNlcnNcbiAgc3RyaWN0OiB0cnVlLFxuICB1c2VNYXBzOiBmYWxzZSxcbiAgcmVqZWN0RHVwbGljYXRlTWFwS2V5czogdHJ1ZSxcbiAgLyoqIEB0eXBlIHtpbXBvcnQoJ2Nib3JnJykuVGFnRGVjb2RlcltdfSAqL1xuICB0YWdzOiBbXVxufVxuX2RlY29kZU9wdGlvbnMudGFnc1tDSURfQ0JPUl9UQUddID0gY2lkRGVjb2RlclxuXG5leHBvcnQgY29uc3QgZGVjb2RlT3B0aW9ucyA9IHtcbiAgLi4uX2RlY29kZU9wdGlvbnMsXG4gIHRhZ3M6IF9kZWNvZGVPcHRpb25zLnRhZ3Muc2xpY2UoKVxufVxuXG5leHBvcnQgY29uc3QgbmFtZSA9ICdkYWctY2JvcidcbmV4cG9ydCBjb25zdCBjb2RlID0gMHg3MVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IG5vZGVcbiAqIEByZXR1cm5zIHtCeXRlVmlldzxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChub2RlKSA9PiBjYm9yZy5lbmNvZGUobm9kZSwgX2VuY29kZU9wdGlvbnMpXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7Qnl0ZVZpZXc8VD4gfCBBcnJheUJ1ZmZlclZpZXc8VD59IGRhdGFcbiAqIEByZXR1cm5zIHtUfVxuICovXG5leHBvcnQgY29uc3QgZGVjb2RlID0gKGRhdGEpID0+IGNib3JnLmRlY29kZSh0b0J5dGVWaWV3KGRhdGEpLCBfZGVjb2RlT3B0aW9ucylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/@ipld/dag-cbor/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/cborg.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/cborg.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Token),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokeniser),\n/* harmony export */   Type: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Type),\n/* harmony export */   decode: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   tokensToObject: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/encode.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/decode.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _lib_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n\n\n\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9jYm9yZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3dDO0FBQ3BDOztBQUU1QztBQUNBO0FBQ0EsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQSxhQUFhLDJDQUEyQztBQUN4RCxhQUFhLHFDQUFxQztBQUNsRCxhQUFhLHFDQUFxQztBQUNsRDs7QUFVQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvY2JvcmcvY2JvcmcuanM/Yzg4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGUgfSBmcm9tICcuL2xpYi9lbmNvZGUuanMnXG5pbXBvcnQgeyBkZWNvZGUsIGRlY29kZUZpcnN0LCBUb2tlbmlzZXIsIHRva2Vuc1RvT2JqZWN0IH0gZnJvbSAnLi9saWIvZGVjb2RlLmpzJ1xuaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL2xpYi90b2tlbi5qcydcblxuLyoqXG4gKiBFeHBvcnQgdGhlIHR5cGVzIHRoYXQgd2VyZSBwcmVzZW50IGluIHRoZSBvcmlnaW5hbCBtYW51YWwgY2JvcmcuZC50c1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5UYWdEZWNvZGVyfSBUYWdEZWNvZGVyXG4gKiBUaGVyZSB3YXMgb3JpZ2luYWxseSBqdXN0IGBUeXBlRW5jb2RlcmAgc28gZG9uJ3QgYnJlYWsgdHlwZXMgYnkgcmVuYW1pbmcgb3Igbm90IGV4cG9ydGluZ1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5PcHRpb25hbFR5cGVFbmNvZGVyfSBUeXBlRW5jb2RlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2ludGVyZmFjZScpLkVuY29kZU9wdGlvbnN9IEVuY29kZU9wdGlvbnNcbiAqL1xuXG5leHBvcnQge1xuICBkZWNvZGUsXG4gIGRlY29kZUZpcnN0LFxuICBUb2tlbmlzZXIgYXMgVG9rZW5pemVyLFxuICB0b2tlbnNUb09iamVjdCxcbiAgZW5jb2RlLFxuICBUb2tlbixcbiAgVHlwZVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/cborg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUint16: () => (/* binding */ decodeUint16),\n/* harmony export */   decodeUint32: () => (/* binding */ decodeUint32),\n/* harmony export */   decodeUint64: () => (/* binding */ decodeUint64),\n/* harmony export */   decodeUint8: () => (/* binding */ decodeUint8),\n/* harmony export */   encodeUint: () => (/* binding */ encodeUint),\n/* harmony export */   encodeUintValue: () => (/* binding */ encodeUintValue),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint64: () => (/* binding */ readUint64),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   uintBoundaries: () => (/* binding */ uintBoundaries)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n/* globals BigInt */\n\n\n\n\nconst uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint8 (data, offset, options) {\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint16 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint32 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nfunction readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nfunction encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/1negint.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/1negint.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNegint16: () => (/* binding */ decodeNegint16),\n/* harmony export */   decodeNegint32: () => (/* binding */ decodeNegint32),\n/* harmony export */   decodeNegint64: () => (/* binding */ decodeNegint64),\n/* harmony export */   decodeNegint8: () => (/* binding */ decodeNegint8),\n/* harmony export */   encodeNegint: () => (/* binding */ encodeNegint)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n/* eslint-env es2020 */\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint64 (data, pos, _minor, options) {\n  const int = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMW5lZ2ludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUV3QztBQUNOO0FBQ1c7O0FBRTdDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksY0FBYyxnREFBYztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxjQUFjLGlEQUFlO0FBQ3BEOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLGNBQWMsaURBQWU7QUFDcEQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGNBQWMsaURBQWU7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRDQUFLLENBQUMsMkNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQO0FBQ0E7QUFDQSxFQUFFLHNEQUFvQjtBQUN0Qjs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8xbmVnaW50LmpzPzVhMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczIwMjAgKi9cblxuaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIC0xIC0gdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDIpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTmVnaW50MzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIC0xIC0gdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCA1KVxufVxuXG5jb25zdCBuZWcxYiA9IEJpZ0ludCgtMSlcbmNvbnN0IHBvczFiID0gQmlnSW50KDEpXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBpbnQgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBpbnQgIT09ICdiaWdpbnQnKSB7XG4gICAgY29uc3QgdmFsdWUgPSAtMSAtIGludFxuICAgIGlmICh2YWx1ZSA+PSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUikge1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgdmFsdWUsIDkpXG4gICAgfVxuICB9XG4gIGlmIChvcHRpb25zLmFsbG93QmlnSW50ICE9PSB0cnVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW50ZWdlcnMgb3V0c2lkZSBvZiB0aGUgc2FmZSBpbnRlZ2VyIHJhbmdlIGFyZSBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCBuZWcxYiAtIEJpZ0ludChpbnQpLCA5KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZU5lZ2ludCAoYnVmLCB0b2tlbikge1xuICBjb25zdCBuZWdpbnQgPSB0b2tlbi52YWx1ZVxuICBjb25zdCB1bnNpZ25lZCA9ICh0eXBlb2YgbmVnaW50ID09PSAnYmlnaW50JyA/IChuZWdpbnQgKiBuZWcxYiAtIHBvczFiKSA6IChuZWdpbnQgKiAtMSAtIDEpKVxuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIHRva2VuLnR5cGUubWFqb3JFbmNvZGVkLCB1bnNpZ25lZClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlTmVnaW50LmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIGNvbnN0IG5lZ2ludCA9IHRva2VuLnZhbHVlXG4gIGNvbnN0IHVuc2lnbmVkID0gKHR5cGVvZiBuZWdpbnQgPT09ICdiaWdpbnQnID8gKG5lZ2ludCAqIG5lZzFiIC0gcG9zMWIpIDogKG5lZ2ludCAqIC0xIC0gMSkpXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gaGFuZGxlZCBieSBxdWlja0VuY29kZSwgd2Ugc2hvdWxkbid0IGdldCBoZXJlIGJ1dCBpdCdzIGluY2x1ZGVkIGZvciBjb21wbGV0ZW5lc3NcbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1swXSkge1xuICAgIHJldHVybiAxXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1sxXSkge1xuICAgIHJldHVybiAyXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1syXSkge1xuICAgIHJldHVybiAzXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1szXSkge1xuICAgIHJldHVybiA1XG4gIH1cbiAgcmV0dXJuIDlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2sxXG4gKiBAcGFyYW0ge1Rva2VufSB0b2syXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVOZWdpbnQuY29tcGFyZVRva2VucyA9IGZ1bmN0aW9uIGNvbXBhcmVUb2tlbnMgKHRvazEsIHRvazIpIHtcbiAgLy8gb3Bwb3NpdGUgb2YgdGhlIHVpbnQgY29tcGFyaXNvbiBzaW5jZSB3ZSBzdG9yZSB0aGUgdWludCB2ZXJzaW9uIGluIGJ5dGVzXG4gIHJldHVybiB0b2sxLnZhbHVlIDwgdG9rMi52YWx1ZSA/IDEgOiB0b2sxLnZhbHVlID4gdG9rMi52YWx1ZSA/IC0xIDogLyogYzggaWdub3JlIG5leHQgKi8gMFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/1negint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/2bytes.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/2bytes.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareBytes: () => (/* binding */ compareBytes),\n/* harmony export */   decodeBytes16: () => (/* binding */ decodeBytes16),\n/* harmony export */   decodeBytes32: () => (/* binding */ decodeBytes32),\n/* harmony export */   decodeBytes64: () => (/* binding */ decodeBytes64),\n/* harmony export */   decodeBytes8: () => (/* binding */ decodeBytes8),\n/* harmony export */   decodeBytesCompact: () => (/* binding */ decodeBytesCompact),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, prefix + length)\n  const buf = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.slice)(data, pos + prefix, pos + prefix + length)\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.compare)(b1, b2)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMmJ5dGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3VCO0FBQzdCO0FBQzBCOztBQUU1RDtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsRUFBRSw0REFBZ0I7QUFDbEIsY0FBYyxxREFBSztBQUNuQixhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGdEQUFjO0FBQzdDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLGlEQUFlO0FBQzNCO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDJDQUFJLFVBQVUsMERBQVU7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQO0FBQ0EsRUFBRSxzREFBb0I7QUFDdEI7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0I7O0FBRUE7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ087QUFDUCxrRUFBa0UsdURBQU87QUFDekUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8yYnl0ZXMuanM/NmUzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgeyBhc3NlcnRFbm91Z2hEYXRhLCBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGNvbXBhcmUsIGZyb21TdHJpbmcsIHNsaWNlIH0gZnJvbSAnLi9ieXRlLXV0aWxzLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChkYXRhLCBwb3MsIHByZWZpeCwgbGVuZ3RoKSB7XG4gIGFzc2VydEVub3VnaERhdGEoZGF0YSwgcG9zLCBwcmVmaXggKyBsZW5ndGgpXG4gIGNvbnN0IGJ1ZiA9IHNsaWNlKGRhdGEsIHBvcyArIHByZWZpeCwgcG9zICsgcHJlZml4ICsgbGVuZ3RoKVxuICByZXR1cm4gbmV3IFRva2VuKFR5cGUuYnl0ZXMsIGJ1ZiwgcHJlZml4ICsgbGVuZ3RoKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlc0NvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXMxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAzLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBieXRlcyBsZW5ndGhzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgOSwgbClcbn1cblxuLyoqXG4gKiBgZW5jb2RlZEJ5dGVzYCBhbGxvd3MgZm9yIGNhY2hpbmcgd2hlbiB3ZSBkbyBhIGJ5dGUgdmVyc2lvbiBvZiBhIHN0cmluZ1xuICogZm9yIGtleSBzb3J0aW5nIHB1cnBvc2VzXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHRva2VuQnl0ZXMgKHRva2VuKSB7XG4gIGlmICh0b2tlbi5lbmNvZGVkQnl0ZXMgPT09IHVuZGVmaW5lZCkge1xuICAgIHRva2VuLmVuY29kZWRCeXRlcyA9IHRva2VuLnR5cGUgPT09IFR5cGUuc3RyaW5nID8gZnJvbVN0cmluZyh0b2tlbi52YWx1ZSkgOiB0b2tlbi52YWx1ZVxuICB9XG4gIC8vIEB0cy1pZ25vcmUgYydtb25cbiAgcmV0dXJuIHRva2VuLmVuY29kZWRCeXRlc1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUJ5dGVzIChidWYsIHRva2VuKSB7XG4gIGNvbnN0IGJ5dGVzID0gdG9rZW5CeXRlcyh0b2tlbilcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCB0b2tlbi50eXBlLm1ham9yRW5jb2RlZCwgYnl0ZXMubGVuZ3RoKVxuICBidWYucHVzaChieXRlcylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlQnl0ZXMuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgY29uc3QgYnl0ZXMgPSB0b2tlbkJ5dGVzKHRva2VuKVxuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUoYnl0ZXMubGVuZ3RoKSArIGJ5dGVzLmxlbmd0aFxufVxuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRvazFcbiAqIEBwYXJhbSB7VG9rZW59IHRvazJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUJ5dGVzLmNvbXBhcmVUb2tlbnMgPSBmdW5jdGlvbiBjb21wYXJlVG9rZW5zICh0b2sxLCB0b2syKSB7XG4gIHJldHVybiBjb21wYXJlQnl0ZXModG9rZW5CeXRlcyh0b2sxKSwgdG9rZW5CeXRlcyh0b2syKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGIxXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGIyXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZUJ5dGVzIChiMSwgYjIpIHtcbiAgcmV0dXJuIGIxLmxlbmd0aCA8IGIyLmxlbmd0aCA/IC0xIDogYjEubGVuZ3RoID4gYjIubGVuZ3RoID8gMSA6IGNvbXBhcmUoYjEsIGIyKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/2bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/3string.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/3string.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString16: () => (/* binding */ decodeString16),\n/* harmony export */   decodeString32: () => (/* binding */ decodeString32),\n/* harmony export */   decodeString64: () => (/* binding */ decodeString64),\n/* harmony export */   decodeString8: () => (/* binding */ decodeString8),\n/* harmony export */   decodeStringCompact: () => (/* binding */ decodeStringCompact),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, totLength)\n  const tok = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.toString)(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.slice)(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nconst encodeString = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvM3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUF3QztBQUN1QjtBQUM3QjtBQUNPO0FBQ1E7O0FBRWpEO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxFQUFFLDZEQUFnQjtBQUNsQixrQkFBa0IsNENBQUssQ0FBQywyQ0FBSSxTQUFTLHdEQUFRO0FBQzdDO0FBQ0Esb0JBQW9CLHFEQUFLO0FBQ3pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRU8scUJBQXFCLG1EQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvM3N0cmluZy5qcz8xNzEzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCB7IGFzc2VydEVub3VnaERhdGEsIGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZW5jb2RlQnl0ZXMgfSBmcm9tICcuLzJieXRlcy5qcydcbmltcG9ydCB7IHRvU3RyaW5nLCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChkYXRhLCBwb3MsIHByZWZpeCwgbGVuZ3RoLCBvcHRpb25zKSB7XG4gIGNvbnN0IHRvdExlbmd0aCA9IHByZWZpeCArIGxlbmd0aFxuICBhc3NlcnRFbm91Z2hEYXRhKGRhdGEsIHBvcywgdG90TGVuZ3RoKVxuICBjb25zdCB0b2sgPSBuZXcgVG9rZW4oVHlwZS5zdHJpbmcsIHRvU3RyaW5nKGRhdGEsIHBvcyArIHByZWZpeCwgcG9zICsgdG90TGVuZ3RoKSwgdG90TGVuZ3RoKVxuICBpZiAob3B0aW9ucy5yZXRhaW5TdHJpbmdCeXRlcyA9PT0gdHJ1ZSkge1xuICAgIHRvay5ieXRlVmFsdWUgPSBzbGljZShkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHRvdExlbmd0aClcbiAgfVxuICByZXR1cm4gdG9rXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nQ29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmc4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmcxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAzLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nNjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIHN0cmluZyBsZW5ndGhzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgOSwgbCwgb3B0aW9ucylcbn1cblxuZXhwb3J0IGNvbnN0IGVuY29kZVN0cmluZyA9IGVuY29kZUJ5dGVzXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/3string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/4array.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/4array.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray16: () => (/* binding */ decodeArray16),\n/* harmony export */   decodeArray32: () => (/* binding */ decodeArray32),\n/* harmony export */   decodeArray64: () => (/* binding */ decodeArray64),\n/* harmony export */   decodeArray8: () => (/* binding */ decodeArray8),\n/* harmony export */   decodeArrayCompact: () => (/* binding */ decodeArrayCompact),\n/* harmony export */   decodeArrayIndefinite: () => (/* binding */ decodeArrayIndefinite),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeArray (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNGFycmF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTjtBQUNXOztBQUU3QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUCxFQUFFLHNEQUFvQixNQUFNLDJDQUFJO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEIsaURBQWU7O0FBRTNDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi80YXJyYXkuanM/MDgwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChfZGF0YSwgX3BvcywgcHJlZml4LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmFycmF5LCBsZW5ndGgsIHByZWZpeClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXlDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5MTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXk2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgYXJyYXkgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5SW5kZWZpbml0ZSAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMuYWxsb3dJbmRlZmluaXRlID09PSBmYWxzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGluZGVmaW5pdGUgbGVuZ3RoIGl0ZW1zIG5vdCBhbGxvd2VkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIEluZmluaXR5KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUFycmF5IChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS5hcnJheS5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG4vLyB1c2luZyBhbiBhcnJheSBhcyBhIG1hcCBrZXksIGFyZSB5b3Ugc3VyZSBhYm91dCB0aGlzPyB3ZSBjYW4gb25seSBzb3J0XG4vLyBieSBtYXAgbGVuZ3RoIGhlcmUsIGl0J3MgdXAgdG8gdGhlIGVuY29kZXIgdG8gZGVjaWRlIHRvIGxvb2sgZGVlcGVyXG5lbmNvZGVBcnJheS5jb21wYXJlVG9rZW5zID0gdWludC5lbmNvZGVVaW50LmNvbXBhcmVUb2tlbnNcblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlQXJyYXkuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/4array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/5map.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/5map.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMap16: () => (/* binding */ decodeMap16),\n/* harmony export */   decodeMap32: () => (/* binding */ decodeMap32),\n/* harmony export */   decodeMap64: () => (/* binding */ decodeMap64),\n/* harmony export */   decodeMap8: () => (/* binding */ decodeMap8),\n/* harmony export */   decodeMapCompact: () => (/* binding */ decodeMapCompact),\n/* harmony export */   decodeMapIndefinite: () => (/* binding */ decodeMapIndefinite),\n/* harmony export */   encodeMap: () => (/* binding */ encodeMap)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeMap (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNW1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ047QUFDVzs7QUFFN0M7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1AsRUFBRSxzREFBb0IsTUFBTSwyQ0FBSTtBQUNoQzs7QUFFQTtBQUNBO0FBQ0EsMEJBQTBCLGlEQUFlOztBQUV6QztBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVMsc0RBQW9CO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNW1hcC5qcz85YmI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gX2RhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBfcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmZ1bmN0aW9uIHRvVG9rZW4gKF9kYXRhLCBfcG9zLCBwcmVmaXgsIGxlbmd0aCkge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubWFwLCBsZW5ndGgsIHByZWZpeClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwQ29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vcilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXAzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBtYXAgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcEluZGVmaW5pdGUgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93SW5kZWZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbmRlZmluaXRlIGxlbmd0aCBpdGVtcyBub3QgYWxsb3dlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBJbmZpbml0eSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVNYXAgKGJ1ZiwgdG9rZW4pIHtcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCBUeXBlLm1hcC5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG4vLyB1c2luZyBhIG1hcCBhcyBhIG1hcCBrZXksIGFyZSB5b3Ugc3VyZSBhYm91dCB0aGlzPyB3ZSBjYW4gb25seSBzb3J0XG4vLyBieSBtYXAgbGVuZ3RoIGhlcmUsIGl0J3MgdXAgdG8gdGhlIGVuY29kZXIgdG8gZGVjaWRlIHRvIGxvb2sgZGVlcGVyXG5lbmNvZGVNYXAuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZU1hcC5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUodG9rZW4udmFsdWUpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/5map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/6tag.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/6tag.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTag16: () => (/* binding */ decodeTag16),\n/* harmony export */   decodeTag32: () => (/* binding */ decodeTag32),\n/* harmony export */   decodeTag64: () => (/* binding */ decodeTag64),\n/* harmony export */   decodeTag8: () => (/* binding */ decodeTag8),\n/* harmony export */   decodeTagCompact: () => (/* binding */ decodeTagCompact),\n/* harmony export */   encodeTag: () => (/* binding */ encodeTag)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeTagCompact (_data, _pos, minor, _options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeTag (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNnRhZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3QztBQUNOOztBQUVsQztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0sZ0RBQWM7QUFDM0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxpREFBZTtBQUM1Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxNQUFNLGlEQUFlO0FBQzVDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0saURBQWU7QUFDNUM7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQLEVBQUUsc0RBQW9CLE1BQU0sMkNBQUk7QUFDaEM7O0FBRUEsMEJBQTBCLGlEQUFlOztBQUV6QztBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVMsc0RBQW9CO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNnRhZy5qcz9lZjQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWdDb21wYWN0IChfZGF0YSwgX3BvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIG1pbm9yLCAxKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWc4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgNSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnNjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgOSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUYWcgKGJ1ZiwgdG9rZW4pIHtcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCBUeXBlLnRhZy5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG5lbmNvZGVUYWcuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZVRhZy5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUodG9rZW4udmFsdWUpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/6tag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/7float.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/7float.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBreak: () => (/* binding */ decodeBreak),\n/* harmony export */   decodeFloat16: () => (/* binding */ decodeFloat16),\n/* harmony export */   decodeFloat32: () => (/* binding */ decodeFloat32),\n/* harmony export */   decodeFloat64: () => (/* binding */ decodeFloat64),\n/* harmony export */   decodeUndefined: () => (/* binding */ decodeUndefined),\n/* harmony export */   encodeFloat: () => (/* binding */ encodeFloat)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nfunction encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/7float.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/bl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/bl.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ Bl)\n/* harmony export */ });\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/byte-utils.js\");\n/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\n\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nclass Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.slice)(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvYmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNzRDs7QUFFdEQ7QUFDQTtBQUNBOztBQUVBOztBQUVPO0FBQ1A7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsZUFBZSx5QkFBeUI7QUFDeEM7QUFDQTtBQUNBLGVBQWUsMEJBQTBCO0FBQ3pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscURBQUs7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFNBQVM7QUFDdEIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxlQUFlLHFEQUFLO0FBQ3BCO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsYUFBYSxzREFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2JsLmpzPzFhNzciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCbCBpcyBhIGxpc3Qgb2YgYnl0ZSBjaHVua3MsIHNpbWlsYXIgdG8gaHR0cHM6Ly9naXRodWIuY29tL3J2YWdnL2JsIGJ1dCBmb3JcbiAqIHdyaXRpbmcgcmF0aGVyIHRoYW4gcmVhZGluZy5cbiAqIEEgQmwgb2JqZWN0IGFjY2VwdHMgc2V0KCkgb3BlcmF0aW9ucyBmb3IgaW5kaXZpZHVhbCBieXRlcyBhbmQgY29weVRvKCkgZm9yXG4gKiBpbnNlcnRpbmcgYnl0ZSBhcnJheXMuIFRoZXNlIHdyaXRlIG9wZXJhdGlvbnMgZG9uJ3QgYXV0b21hdGljYWxseSBpbmNyZW1lbnRcbiAqIHRoZSBpbnRlcm5hbCBjdXJzb3Igc28gaXRzIFwibGVuZ3RoXCIgd29uJ3QgYmUgY2hhbmdlZC4gSW5zdGVhZCwgaW5jcmVtZW50KClcbiAqIG11c3QgYmUgY2FsbGVkIHRvIGV4dGVuZCBpdHMgbGVuZ3RoIHRvIGNvdmVyIHRoZSBpbnNlcnRlZCBkYXRhLlxuICogVGhlIHRvQnl0ZXMoKSBjYWxsIHdpbGwgY29udmVydCBhbGwgaW50ZXJuYWwgbWVtb3J5IHRvIGEgc2luZ2xlIFVpbnQ4QXJyYXkgb2ZcbiAqIHRoZSBjb3JyZWN0IGxlbmd0aCwgdHJ1bmNhdGluZyBhbnkgZGF0YSB0aGF0IGlzIHN0b3JlZCBidXQgaGFzbid0IGJlZW5cbiAqIGluY2x1ZGVkIGJ5IGFuIGluY3JlbWVudCgpLlxuICogZ2V0KCkgY2FuIHJldHJpZXZlIGEgc2luZ2xlIGJ5dGUuXG4gKiBBbGwgb3BlcmF0aW9ucyAoZXhjZXB0IHRvQnl0ZXMoKSkgdGFrZSBhbiBcIm9mZnNldFwiIGFyZ3VtZW50IHRoYXQgd2lsbCBwZXJmb3JtXG4gKiB0aGUgd3JpdGUgYXQgdGhlIG9mZnNldCBfZnJvbSB0aGUgY3VycmVudCBjdXJzb3JfLiBGb3IgbW9zdCBvcGVyYXRpb25zIHRoaXNcbiAqIHdpbGwgYmUgYDBgIHRvIHdyaXRlIGF0IHRoZSBjdXJyZW50IGN1cnNvciBwb3NpdGlvbiBidXQgaXQgY2FuIGJlIGFoZWFkIG9mXG4gKiB0aGUgY3VycmVudCBjdXJzb3IuIE5lZ2F0aXZlIG9mZnNldHMgcHJvYmFibHkgd29yayBidXQgYXJlIHVudGVzdGVkLlxuICovXG5cbi8vIFRPRE86IGlwanMgZG9lc24ndCBzdXBwb3J0IHRoaXMsIG9ubHkgZm9yIHRlc3QgZmlsZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9taWtlYWwvaXBqcy9ibG9iL21hc3Rlci9zcmMvcGFja2FnZS90ZXN0RmlsZS5qcyNMMzlcbmltcG9ydCB7IGFsbG9jLCBjb25jYXQsIHNsaWNlIH0gZnJvbSAnLi9ieXRlLXV0aWxzLmpzJ1xuXG4vLyB0aGUgdHMtaWdub3JlcyBpbiB0aGlzIGZpbGUgYXJlIGFsbW9zdCBhbGwgZm9yIHRoZSBgVWludDhBcnJheXxudW1iZXJbXWAgZHVhbGl0eSB0aGF0IGV4aXN0c1xuLy8gZm9yIHBlcmYgcmVhc29ucy4gQ29uc2lkZXIgYmV0dGVyIGFwcHJvYWNoZXMgdG8gdGhpcyBvciByZW1vdmluZyBpdCBlbnRpcmVseSwgaXQgaXMgcXVpdGVcbi8vIHJpc2t5IGJlY2F1c2Ugb2Ygc29tZSBhc3N1bXB0aW9ucyBhYm91dCBzbWFsbCBjaHVua3MgPT09IG51bWJlcltdIGFuZCBldmVyeXRoaW5nIGVsc2UgPT09IFVpbnQ4QXJyYXkuXG5cbmNvbnN0IGRlZmF1bHRDaHVua1NpemUgPSAyNTZcblxuZXhwb3J0IGNsYXNzIEJsIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbY2h1bmtTaXplXVxuICAgKi9cbiAgY29uc3RydWN0b3IgKGNodW5rU2l6ZSA9IGRlZmF1bHRDaHVua1NpemUpIHtcbiAgICB0aGlzLmNodW5rU2l6ZSA9IGNodW5rU2l6ZVxuICAgIC8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMuY3Vyc29yID0gMFxuICAgIC8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMubWF4Q3Vyc29yID0gLTFcbiAgICAvKiogQHR5cGUgeyhVaW50OEFycmF5fG51bWJlcltdKVtdfSAqL1xuICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICAvLyBrZWVwIHRoZSBmaXJzdCBjaHVuayBhcm91bmQgaWYgd2UgY2FuIHRvIHNhdmUgYWxsb2NhdGlvbnMgZm9yIGZ1dHVyZSBlbmNvZGVzXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fG51bWJlcltdfG51bGx9ICovXG4gICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSBudWxsXG4gIH1cblxuICByZXNldCAoKSB7XG4gICAgdGhpcy5jdXJzb3IgPSAwXG4gICAgdGhpcy5tYXhDdXJzb3IgPSAtMVxuICAgIGlmICh0aGlzLmNodW5rcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICB9XG4gICAgaWYgKHRoaXMuX2luaXRSZXVzZUNodW5rICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmNodW5rcy5wdXNoKHRoaXMuX2luaXRSZXVzZUNodW5rKVxuICAgICAgdGhpcy5tYXhDdXJzb3IgPSB0aGlzLl9pbml0UmV1c2VDaHVuay5sZW5ndGggLSAxXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7VWludDhBcnJheXxudW1iZXJbXX0gYnl0ZXNcbiAgICovXG4gIHB1c2ggKGJ5dGVzKSB7XG4gICAgbGV0IHRvcENodW5rID0gdGhpcy5jaHVua3NbdGhpcy5jaHVua3MubGVuZ3RoIC0gMV1cbiAgICBjb25zdCBuZXdNYXggPSB0aGlzLmN1cnNvciArIGJ5dGVzLmxlbmd0aFxuICAgIGlmIChuZXdNYXggPD0gdGhpcy5tYXhDdXJzb3IgKyAxKSB7XG4gICAgICAvLyB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBjaHVuayBhbmQgd2UgY2FuIGZpdCB0aGVzZSBieXRlcyBpbnRvIHRoYXQgY2h1bmtcbiAgICAgIGNvbnN0IGNodW5rUG9zID0gdG9wQ2h1bmsubGVuZ3RoIC0gKHRoaXMubWF4Q3Vyc29yIC0gdGhpcy5jdXJzb3IpIC0gMVxuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgdG9wQ2h1bmsuc2V0KGJ5dGVzLCBjaHVua1BvcylcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gY2FuJ3QgZml0IGl0IGluXG4gICAgICBpZiAodG9wQ2h1bmspIHtcbiAgICAgICAgLy8gdHJpcCB0aGUgbGFzdCBjaHVuayB0byBgY3Vyc29yYCBpZiB3ZSBuZWVkIHRvXG4gICAgICAgIGNvbnN0IGNodW5rUG9zID0gdG9wQ2h1bmsubGVuZ3RoIC0gKHRoaXMubWF4Q3Vyc29yIC0gdGhpcy5jdXJzb3IpIC0gMVxuICAgICAgICBpZiAoY2h1bmtQb3MgPCB0b3BDaHVuay5sZW5ndGgpIHtcbiAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgdGhpcy5jaHVua3NbdGhpcy5jaHVua3MubGVuZ3RoIC0gMV0gPSB0b3BDaHVuay5zdWJhcnJheSgwLCBjaHVua1BvcylcbiAgICAgICAgICB0aGlzLm1heEN1cnNvciA9IHRoaXMuY3Vyc29yIC0gMVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoYnl0ZXMubGVuZ3RoIDwgNjQgJiYgYnl0ZXMubGVuZ3RoIDwgdGhpcy5jaHVua1NpemUpIHtcbiAgICAgICAgLy8gbWFrZSBhIG5ldyBjaHVuayBhbmQgY29weSB0aGUgbmV3IG9uZSBpbnRvIGl0XG4gICAgICAgIHRvcENodW5rID0gYWxsb2ModGhpcy5jaHVua1NpemUpXG4gICAgICAgIHRoaXMuY2h1bmtzLnB1c2godG9wQ2h1bmspXG4gICAgICAgIHRoaXMubWF4Q3Vyc29yICs9IHRvcENodW5rLmxlbmd0aFxuICAgICAgICBpZiAodGhpcy5faW5pdFJldXNlQ2h1bmsgPT09IG51bGwpIHtcbiAgICAgICAgICB0aGlzLl9pbml0UmV1c2VDaHVuayA9IHRvcENodW5rXG4gICAgICAgIH1cbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICB0b3BDaHVuay5zZXQoYnl0ZXMsIDApXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBwdXNoIHRoZSBuZXcgYnl0ZXMgaW4gYXMgaXRzIG93biBjaHVua1xuICAgICAgICB0aGlzLmNodW5rcy5wdXNoKGJ5dGVzKVxuICAgICAgICB0aGlzLm1heEN1cnNvciArPSBieXRlcy5sZW5ndGhcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5jdXJzb3IgKz0gYnl0ZXMubGVuZ3RoXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtib29sZWFufSBbcmVzZXRdXG4gICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgKi9cbiAgdG9CeXRlcyAocmVzZXQgPSBmYWxzZSkge1xuICAgIGxldCBieXRzXG4gICAgaWYgKHRoaXMuY2h1bmtzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgY29uc3QgY2h1bmsgPSB0aGlzLmNodW5rc1swXVxuICAgICAgaWYgKHJlc2V0ICYmIHRoaXMuY3Vyc29yID4gY2h1bmsubGVuZ3RoIC8gMikge1xuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAyICovXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYnl0cyA9IHRoaXMuY3Vyc29yID09PSBjaHVuay5sZW5ndGggPyBjaHVuayA6IGNodW5rLnN1YmFycmF5KDAsIHRoaXMuY3Vyc29yKVxuICAgICAgICB0aGlzLl9pbml0UmV1c2VDaHVuayA9IG51bGxcbiAgICAgICAgdGhpcy5jaHVua3MgPSBbXVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBieXRzID0gc2xpY2UoY2h1bmssIDAsIHRoaXMuY3Vyc29yKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBieXRzID0gY29uY2F0KHRoaXMuY2h1bmtzLCB0aGlzLmN1cnNvcilcbiAgICB9XG4gICAgaWYgKHJlc2V0KSB7XG4gICAgICB0aGlzLnJlc2V0KClcbiAgICB9XG4gICAgcmV0dXJuIGJ5dHNcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/bl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/byte-utils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/byte-utils.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   asU8A: () => (/* binding */ asU8A),\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   decodeCodePointsArray: () => (/* binding */ decodeCodePointsArray),\n/* harmony export */   fromArray: () => (/* binding */ fromArray),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   useBuffer: () => (/* binding */ useBuffer)\n/* harmony export */ });\n// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nconst useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nfunction asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nconst toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nconst fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nconst fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nconst slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nconst concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nconst alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nconst toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nconst fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/byte-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnoughData: () => (/* binding */ assertEnoughData),\n/* harmony export */   decodeErrPrefix: () => (/* binding */ decodeErrPrefix),\n/* harmony export */   encodeErrPrefix: () => (/* binding */ encodeErrPrefix),\n/* harmony export */   uintMinorPrefixBytes: () => (/* binding */ uintMinorPrefixBytes)\n/* harmony export */ });\nconst decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvY29tbW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixpQkFBaUI7QUFDeEM7QUFDQTs7QUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2NvbW1vbi5qcz8yZGYxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRlY29kZUVyclByZWZpeCA9ICdDQk9SIGRlY29kZSBlcnJvcjonXG5jb25zdCBlbmNvZGVFcnJQcmVmaXggPSAnQ0JPUiBlbmNvZGUgZXJyb3I6J1xuXG5jb25zdCB1aW50TWlub3JQcmVmaXhCeXRlcyA9IFtdXG51aW50TWlub3JQcmVmaXhCeXRlc1syM10gPSAxXG51aW50TWlub3JQcmVmaXhCeXRlc1syNF0gPSAyXG51aW50TWlub3JQcmVmaXhCeXRlc1syNV0gPSAzXG51aW50TWlub3JQcmVmaXhCeXRlc1syNl0gPSA1XG51aW50TWlub3JQcmVmaXhCeXRlc1syN10gPSA5XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbmVlZFxuICovXG5mdW5jdGlvbiBhc3NlcnRFbm91Z2hEYXRhIChkYXRhLCBwb3MsIG5lZWQpIHtcbiAgaWYgKGRhdGEubGVuZ3RoIC0gcG9zIDwgbmVlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IG5vdCBlbm91Z2ggZGF0YSBmb3IgdHlwZWApXG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgZGVjb2RlRXJyUHJlZml4LFxuICBlbmNvZGVFcnJQcmVmaXgsXG4gIHVpbnRNaW5vclByZWZpeEJ5dGVzLFxuICBhc3NlcnRFbm91Z2hEYXRhXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/decode.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/decode.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokeniser: () => (/* binding */ Tokeniser),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   tokensToObject: () => (/* binding */ tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/jump.js\");\n\n\n\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = _jump_js__WEBPACK_IMPORTED_MODULE_2__.quick[byt]\n    if (token === undefined) {\n      const decoder = _jump_js__WEBPACK_IMPORTED_MODULE_2__.jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvZGVjb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNkM7QUFDWjtBQUNNOztBQUV2QztBQUNBLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsd0NBQXdDO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLFlBQVk7QUFDekIsYUFBYSxlQUFlO0FBQzVCO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQiwyQ0FBSztBQUNyQjtBQUNBLHNCQUFzQiwwQ0FBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsdURBQWUsRUFBRSw0QkFBNEIsV0FBVyxVQUFVLGtDQUFrQztBQUMvSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLGlCQUFpQjtBQUM1QixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVEQUFlLEVBQUU7QUFDMUM7QUFDQTtBQUNBLHlCQUF5Qix1REFBZSxFQUFFLDBDQUEwQyxFQUFFLGFBQWEsWUFBWTtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVEQUFlLEVBQUU7QUFDMUM7QUFDQTtBQUNBLHlCQUF5Qix1REFBZSxFQUFFLHdDQUF3QyxHQUFHLHFCQUFxQixZQUFZO0FBQ3RIO0FBQ0E7QUFDQSx5QkFBeUIsdURBQWUsRUFBRSxxQ0FBcUMsV0FBVztBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1REFBZSxFQUFFLHdCQUF3QixJQUFJO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVEQUFlLEVBQUUsd0NBQXdDLEdBQUcsdUJBQXVCLFlBQVk7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLHFCQUFxQiwyQ0FBSTtBQUN6QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsMkNBQUk7QUFDekI7QUFDQTs7QUFFQSxxQkFBcUIsMkNBQUk7QUFDekI7QUFDQTs7QUFFQSxxQkFBcUIsMkNBQUk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRSxxQkFBcUIsWUFBWTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFeUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9kZWNvZGUuanM/N2U5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcbmltcG9ydCB7IFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0IHsganVtcCwgcXVpY2sgfSBmcm9tICcuL2p1bXAuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi90b2tlbi5qcycpLlRva2VufSBUb2tlblxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlVG9rZW5pemVyfSBEZWNvZGVUb2tlbml6ZXJcbiAqL1xuXG5jb25zdCBkZWZhdWx0RGVjb2RlT3B0aW9ucyA9IHtcbiAgc3RyaWN0OiBmYWxzZSxcbiAgYWxsb3dJbmRlZmluaXRlOiB0cnVlLFxuICBhbGxvd1VuZGVmaW5lZDogdHJ1ZSxcbiAgYWxsb3dCaWdJbnQ6IHRydWVcbn1cblxuLyoqXG4gKiBAaW1wbGVtZW50cyB7RGVjb2RlVG9rZW5pemVyfVxuICovXG5jbGFzcyBUb2tlbmlzZXIge1xuICAvKipcbiAgICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gICAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICAgKi9cbiAgY29uc3RydWN0b3IgKGRhdGEsIG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuX3BvcyA9IDBcbiAgICB0aGlzLmRhdGEgPSBkYXRhXG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9uc1xuICB9XG5cbiAgcG9zICgpIHtcbiAgICByZXR1cm4gdGhpcy5fcG9zXG4gIH1cblxuICBkb25lICgpIHtcbiAgICByZXR1cm4gdGhpcy5fcG9zID49IHRoaXMuZGF0YS5sZW5ndGhcbiAgfVxuXG4gIG5leHQgKCkge1xuICAgIGNvbnN0IGJ5dCA9IHRoaXMuZGF0YVt0aGlzLl9wb3NdXG4gICAgbGV0IHRva2VuID0gcXVpY2tbYnl0XVxuICAgIGlmICh0b2tlbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBkZWNvZGVyID0ganVtcFtieXRdXG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gICAgICAvLyBpZiB3ZSdyZSBoZXJlIHRoZW4gdGhlcmUncyBzb21ldGhpbmcgd3Jvbmcgd2l0aCBvdXIganVtcCBvciBxdWljayBsaXN0cyFcbiAgICAgIGlmICghZGVjb2Rlcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBubyBkZWNvZGVyIGZvciBtYWpvciB0eXBlICR7Ynl0ID4+PiA1fSAoYnl0ZSAweCR7Ynl0LnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpfSlgKVxuICAgICAgfVxuICAgICAgY29uc3QgbWlub3IgPSBieXQgJiAzMVxuICAgICAgdG9rZW4gPSBkZWNvZGVyKHRoaXMuZGF0YSwgdGhpcy5fcG9zLCBtaW5vciwgdGhpcy5vcHRpb25zKVxuICAgIH1cbiAgICAvLyBAdHMtaWdub3JlIHdlIGdldCB0byBhc3N1bWUgZW5jb2RlZExlbmd0aCBpcyBzZXQgKGNyb3NzaW5nIGZpbmdlcnMgc2xpZ2h0bHkpXG4gICAgdGhpcy5fcG9zICs9IHRva2VuLmVuY29kZWRMZW5ndGhcbiAgICByZXR1cm4gdG9rZW5cbiAgfVxufVxuXG5jb25zdCBET05FID0gU3ltYm9sLmZvcignRE9ORScpXG5jb25zdCBCUkVBSyA9IFN5bWJvbC5mb3IoJ0JSRUFLJylcblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHBhcmFtIHtEZWNvZGVUb2tlbml6ZXJ9IHRva2VuaXNlclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7YW55fEJSRUFLfERPTkV9XG4gKi9cbmZ1bmN0aW9uIHRva2VuVG9BcnJheSAodG9rZW4sIHRva2VuaXNlciwgb3B0aW9ucykge1xuICBjb25zdCBhcnIgPSBbXVxuICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2VuLnZhbHVlOyBpKyspIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRva2Vuc1RvT2JqZWN0KHRva2VuaXNlciwgb3B0aW9ucylcbiAgICBpZiAodmFsdWUgPT09IEJSRUFLKSB7XG4gICAgICBpZiAodG9rZW4udmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgICAgIC8vIG5vcm1hbCBlbmQgdG8gaW5kZWZpbml0ZSBsZW5ndGggYXJyYXlcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGdvdCB1bmV4cGVjdGVkIGJyZWFrIHRvIGxlbmd0aGVkIGFycmF5YClcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBET05FKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBmb3VuZCBhcnJheSBidXQgbm90IGVub3VnaCBlbnRyaWVzIChnb3QgJHtpfSwgZXhwZWN0ZWQgJHt0b2tlbi52YWx1ZX0pYClcbiAgICB9XG4gICAgYXJyW2ldID0gdmFsdWVcbiAgfVxuICByZXR1cm4gYXJyXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEBwYXJhbSB7RGVjb2RlVG9rZW5pemVyfSB0b2tlbmlzZXJcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge2FueXxCUkVBS3xET05FfVxuICovXG5mdW5jdGlvbiB0b2tlblRvTWFwICh0b2tlbiwgdG9rZW5pc2VyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHVzZU1hcHMgPSBvcHRpb25zLnVzZU1hcHMgPT09IHRydWVcbiAgY29uc3Qgb2JqID0gdXNlTWFwcyA/IHVuZGVmaW5lZCA6IHt9XG4gIGNvbnN0IG0gPSB1c2VNYXBzID8gbmV3IE1hcCgpIDogdW5kZWZpbmVkXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdG9rZW4udmFsdWU7IGkrKykge1xuICAgIGNvbnN0IGtleSA9IHRva2Vuc1RvT2JqZWN0KHRva2VuaXNlciwgb3B0aW9ucylcbiAgICBpZiAoa2V5ID09PSBCUkVBSykge1xuICAgICAgaWYgKHRva2VuLnZhbHVlID09PSBJbmZpbml0eSkge1xuICAgICAgICAvLyBub3JtYWwgZW5kIHRvIGluZGVmaW5pdGUgbGVuZ3RoIG1hcFxuICAgICAgICBicmVha1xuICAgICAgfVxuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gZ290IHVuZXhwZWN0ZWQgYnJlYWsgdG8gbGVuZ3RoZWQgbWFwYClcbiAgICB9XG4gICAgaWYgKGtleSA9PT0gRE9ORSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gZm91bmQgbWFwIGJ1dCBub3QgZW5vdWdoIGVudHJpZXMgKGdvdCAke2l9IFtubyBrZXldLCBleHBlY3RlZCAke3Rva2VuLnZhbHVlfSlgKVxuICAgIH1cbiAgICBpZiAodXNlTWFwcyAhPT0gdHJ1ZSAmJiB0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gbm9uLXN0cmluZyBrZXlzIG5vdCBzdXBwb3J0ZWQgKGdvdCAke3R5cGVvZiBrZXl9KWApXG4gICAgfVxuICAgIGlmIChvcHRpb25zLnJlamVjdER1cGxpY2F0ZU1hcEtleXMgPT09IHRydWUpIHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGlmICgodXNlTWFwcyAmJiBtLmhhcyhrZXkpKSB8fCAoIXVzZU1hcHMgJiYgKGtleSBpbiBvYmopKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBmb3VuZCByZXBlYXQgbWFwIGtleSBcIiR7a2V5fVwiYClcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgdmFsdWUgPSB0b2tlbnNUb09iamVjdCh0b2tlbmlzZXIsIG9wdGlvbnMpXG4gICAgaWYgKHZhbHVlID09PSBET05FKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBmb3VuZCBtYXAgYnV0IG5vdCBlbm91Z2ggZW50cmllcyAoZ290ICR7aX0gW25vIHZhbHVlXSwgZXhwZWN0ZWQgJHt0b2tlbi52YWx1ZX0pYClcbiAgICB9XG4gICAgaWYgKHVzZU1hcHMpIHtcbiAgICAgIC8vIEB0cy1pZ25vcmUgVE9ETyByZWNvbnNpZGVyIHRoaXMgLi4gbWF5YmUgbmVlZHMgdG8gYmUgc3RyaWN0IGFib3V0IGtleSB0eXBlc1xuICAgICAgbS5zZXQoa2V5LCB2YWx1ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQHRzLWlnbm9yZSBUT0RPIHJlY29uc2lkZXIgdGhpcyAuLiBtYXliZSBuZWVkcyB0byBiZSBzdHJpY3QgYWJvdXQga2V5IHR5cGVzXG4gICAgICBvYmpba2V5XSA9IHZhbHVlXG4gICAgfVxuICB9XG4gIC8vIEB0cy1pZ25vcmUgYydtb24gbWFuXG4gIHJldHVybiB1c2VNYXBzID8gbSA6IG9ialxufVxuXG4vKipcbiAqIEBwYXJhbSB7RGVjb2RlVG9rZW5pemVyfSB0b2tlbmlzZXJcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge2FueXxCUkVBS3xET05FfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb09iamVjdCAodG9rZW5pc2VyLCBvcHRpb25zKSB7XG4gIC8vIHNob3VsZCB3ZSBzdXBwb3J0IGFycmF5IGFzIGFuIGFyZ3VtZW50P1xuICAvLyBjaGVjayBmb3IgdG9rZW5JdGVyW1N5bWJvbC5pdGVyYXRvcl0gYW5kIHJlcGxhY2UgdG9rZW5JdGVyIHdpdGggd2hhdCB0aGF0IHJldHVybnM/XG4gIGlmICh0b2tlbmlzZXIuZG9uZSgpKSB7XG4gICAgcmV0dXJuIERPTkVcbiAgfVxuXG4gIGNvbnN0IHRva2VuID0gdG9rZW5pc2VyLm5leHQoKVxuXG4gIGlmICh0b2tlbi50eXBlID09PSBUeXBlLmJyZWFrKSB7XG4gICAgcmV0dXJuIEJSRUFLXG4gIH1cblxuICBpZiAodG9rZW4udHlwZS50ZXJtaW5hbCkge1xuICAgIHJldHVybiB0b2tlbi52YWx1ZVxuICB9XG5cbiAgaWYgKHRva2VuLnR5cGUgPT09IFR5cGUuYXJyYXkpIHtcbiAgICByZXR1cm4gdG9rZW5Ub0FycmF5KHRva2VuLCB0b2tlbmlzZXIsIG9wdGlvbnMpXG4gIH1cblxuICBpZiAodG9rZW4udHlwZSA9PT0gVHlwZS5tYXApIHtcbiAgICByZXR1cm4gdG9rZW5Ub01hcCh0b2tlbiwgdG9rZW5pc2VyLCBvcHRpb25zKVxuICB9XG5cbiAgaWYgKHRva2VuLnR5cGUgPT09IFR5cGUudGFnKSB7XG4gICAgaWYgKG9wdGlvbnMudGFncyAmJiB0eXBlb2Ygb3B0aW9ucy50YWdzW3Rva2VuLnZhbHVlXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY29uc3QgdGFnZ2VkID0gdG9rZW5zVG9PYmplY3QodG9rZW5pc2VyLCBvcHRpb25zKVxuICAgICAgcmV0dXJuIG9wdGlvbnMudGFnc1t0b2tlbi52YWx1ZV0odGFnZ2VkKVxuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSB0YWcgbm90IHN1cHBvcnRlZCAoJHt0b2tlbi52YWx1ZX0pYClcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICB0aHJvdyBuZXcgRXJyb3IoJ3Vuc3VwcG9ydGVkJylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gW29wdGlvbnNdXG4gKiBAcmV0dXJucyB7W2FueSwgVWludDhBcnJheV19XG4gKi9cbmZ1bmN0aW9uIGRlY29kZUZpcnN0IChkYXRhLCBvcHRpb25zKSB7XG4gIGlmICghKGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGRhdGEgdG8gZGVjb2RlIG11c3QgYmUgYSBVaW50OEFycmF5YClcbiAgfVxuICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdERlY29kZU9wdGlvbnMsIG9wdGlvbnMpXG4gIGNvbnN0IHRva2VuaXNlciA9IG9wdGlvbnMudG9rZW5pemVyIHx8IG5ldyBUb2tlbmlzZXIoZGF0YSwgb3B0aW9ucylcbiAgY29uc3QgZGVjb2RlZCA9IHRva2Vuc1RvT2JqZWN0KHRva2VuaXNlciwgb3B0aW9ucylcbiAgaWYgKGRlY29kZWQgPT09IERPTkUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBkaWQgbm90IGZpbmQgYW55IGNvbnRlbnQgdG8gZGVjb2RlYClcbiAgfVxuICBpZiAoZGVjb2RlZCA9PT0gQlJFQUspIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBnb3QgdW5leHBlY3RlZCBicmVha2ApXG4gIH1cbiAgcmV0dXJuIFtkZWNvZGVkLCBkYXRhLnN1YmFycmF5KHRva2VuaXNlci5wb3MoKSldXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge2FueX1cbiAqL1xuZnVuY3Rpb24gZGVjb2RlIChkYXRhLCBvcHRpb25zKSB7XG4gIGNvbnN0IFtkZWNvZGVkLCByZW1haW5kZXJdID0gZGVjb2RlRmlyc3QoZGF0YSwgb3B0aW9ucylcbiAgaWYgKHJlbWFpbmRlci5sZW5ndGggPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gdG9vIG1hbnkgdGVybWluYWxzLCBkYXRhIG1ha2VzIG5vIHNlbnNlYClcbiAgfVxuICByZXR1cm4gZGVjb2RlZFxufVxuXG5leHBvcnQgeyBUb2tlbmlzZXIsIHRva2Vuc1RvT2JqZWN0LCBkZWNvZGUsIGRlY29kZUZpcnN0IH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/encode.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/encode.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ref: () => (/* binding */ Ref),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeCustom: () => (/* binding */ encodeCustom),\n/* harmony export */   makeCborEncoders: () => (/* binding */ makeCborEncoders),\n/* harmony export */   objectToTokens: () => (/* binding */ objectToTokens)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/is.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _bl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bl.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/bl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/jump.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/7float.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_4__.quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nfunction makeCborEncoders () {\n  const encoders = []\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint.major] = _0uint_js__WEBPACK_IMPORTED_MODULE_6__.encodeUint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint.major] = _1negint_js__WEBPACK_IMPORTED_MODULE_7__.encodeNegint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes.major] = _2bytes_js__WEBPACK_IMPORTED_MODULE_8__.encodeBytes\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string.major] = _3string_js__WEBPACK_IMPORTED_MODULE_9__.encodeString\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array.major] = _4array_js__WEBPACK_IMPORTED_MODULE_10__.encodeArray\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map.major] = _5map_js__WEBPACK_IMPORTED_MODULE_11__.encodeMap\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag.major] = _6tag_js__WEBPACK_IMPORTED_MODULE_12__.encodeTag\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float.major] = _7float_js__WEBPACK_IMPORTED_MODULE_13__.encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null),\n  undefined: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.undefined, undefined),\n  true: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true),\n  false: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false),\n  emptyArray: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, 0),\n  emptyMap: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, obj)\n    } else if (obj >= 0) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.is)(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_5__.asU8A)(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/is.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/is.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   is: () => (/* binding */ is)\n/* harmony export */ });\n// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nfunction is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvaXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2lzLmpzPzkyYmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBpcyBhbiB1bmZvcnR1bmF0ZSByZXBsYWNlbWVudCBmb3IgQHNpbmRyZXNvcmh1cy9pcyB0aGF0IHdlIG5lZWQgdG9cbi8vIHJlLWltcGxlbWVudCBmb3IgcGVyZm9ybWFuY2UgcHVycG9zZXMuIEluIHBhcnRpY3VsYXIgdGhlIGlzLm9ic2VydmFibGUoKVxuLy8gY2hlY2sgaXMgZXhwZW5zaXZlLCBhbmQgdW5uZWNlc3NhcnkgZm9yIG91ciBwdXJwb3Nlcy4gVGhlIHZhbHVlcyByZXR1cm5lZFxuLy8gYXJlIGNvbXBhdGlibGUgd2l0aCBAc2luZHJlc29yaHVzL2lzLCBob3dldmVyLlxuXG5jb25zdCB0eXBlb2ZzID0gW1xuICAnc3RyaW5nJyxcbiAgJ251bWJlcicsXG4gICdiaWdpbnQnLFxuICAnc3ltYm9sJ1xuXVxuXG5jb25zdCBvYmplY3RUeXBlTmFtZXMgPSBbXG4gICdGdW5jdGlvbicsXG4gICdHZW5lcmF0b3InLFxuICAnQXN5bmNHZW5lcmF0b3InLFxuICAnR2VuZXJhdG9yRnVuY3Rpb24nLFxuICAnQXN5bmNHZW5lcmF0b3JGdW5jdGlvbicsXG4gICdBc3luY0Z1bmN0aW9uJyxcbiAgJ09ic2VydmFibGUnLFxuICAnQXJyYXknLFxuICAnQnVmZmVyJyxcbiAgJ09iamVjdCcsXG4gICdSZWdFeHAnLFxuICAnRGF0ZScsXG4gICdFcnJvcicsXG4gICdNYXAnLFxuICAnU2V0JyxcbiAgJ1dlYWtNYXAnLFxuICAnV2Vha1NldCcsXG4gICdBcnJheUJ1ZmZlcicsXG4gICdTaGFyZWRBcnJheUJ1ZmZlcicsXG4gICdEYXRhVmlldycsXG4gICdQcm9taXNlJyxcbiAgJ1VSTCcsXG4gICdIVE1MRWxlbWVudCcsXG4gICdJbnQ4QXJyYXknLFxuICAnVWludDhBcnJheScsXG4gICdVaW50OENsYW1wZWRBcnJheScsXG4gICdJbnQxNkFycmF5JyxcbiAgJ1VpbnQxNkFycmF5JyxcbiAgJ0ludDMyQXJyYXknLFxuICAnVWludDMyQXJyYXknLFxuICAnRmxvYXQzMkFycmF5JyxcbiAgJ0Zsb2F0NjRBcnJheScsXG4gICdCaWdJbnQ2NEFycmF5JyxcbiAgJ0JpZ1VpbnQ2NEFycmF5J1xuXVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzICh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gJ251bGwnXG4gIH1cbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gJ3VuZGVmaW5lZCdcbiAgfVxuICBpZiAodmFsdWUgPT09IHRydWUgfHwgdmFsdWUgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuICdib29sZWFuJ1xuICB9XG4gIGNvbnN0IHR5cGVPZiA9IHR5cGVvZiB2YWx1ZVxuICBpZiAodHlwZW9mcy5pbmNsdWRlcyh0eXBlT2YpKSB7XG4gICAgcmV0dXJuIHR5cGVPZlxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gbm90IGdvaW5nIHRvIGJvdGhlciB0ZXN0aW5nIHRoaXMsIGl0J3Mgbm90IGdvaW5nIHRvIGJlIHZhbGlkIGFueXdheVxuICBpZiAodHlwZU9mID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuICdGdW5jdGlvbidcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gJ0FycmF5J1xuICB9XG4gIGlmIChpc0J1ZmZlcih2YWx1ZSkpIHtcbiAgICByZXR1cm4gJ0J1ZmZlcidcbiAgfVxuICBjb25zdCBvYmplY3RUeXBlID0gZ2V0T2JqZWN0VHlwZSh2YWx1ZSlcbiAgaWYgKG9iamVjdFR5cGUpIHtcbiAgICByZXR1cm4gb2JqZWN0VHlwZVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiAnT2JqZWN0J1xufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGlzQnVmZmVyICh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgJiYgdmFsdWUuY29uc3RydWN0b3IgJiYgdmFsdWUuY29uc3RydWN0b3IuaXNCdWZmZXIgJiYgdmFsdWUuY29uc3RydWN0b3IuaXNCdWZmZXIuY2FsbChudWxsLCB2YWx1ZSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtzdHJpbmd8dW5kZWZpbmVkfVxuICovXG5mdW5jdGlvbiBnZXRPYmplY3RUeXBlICh2YWx1ZSkge1xuICBjb25zdCBvYmplY3RUeXBlTmFtZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkuc2xpY2UoOCwgLTEpXG4gIGlmIChvYmplY3RUeXBlTmFtZXMuaW5jbHVkZXMob2JqZWN0VHlwZU5hbWUpKSB7XG4gICAgcmV0dXJuIG9iamVjdFR5cGVOYW1lXG4gIH1cbiAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgcmV0dXJuIHVuZGVmaW5lZFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/jump.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/jump.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jump: () => (/* binding */ jump),\n/* harmony export */   quick: () => (/* binding */ quick),\n/* harmony export */   quickEncodeToken: () => (/* binding */ quickEncodeToken)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/7float.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nconst jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytesCompact\n}\njump[0x58] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeStringCompact\n}\njump[0x78] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayCompact\n}\njump[0x98] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapCompact\n}\njump[0xb8] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTagCompact\n}\njump[0xd8] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag8\njump[0xd9] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag16\njump[0xda] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag32\njump[0xdb] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nconst quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, '', 1)\n// empty list\nquick[0x80] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, 0, 1)\n// empty map\nquick[0xa0] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, 0, 1)\n// false\nquick[0xf4] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false, false, 1)\n// true\nquick[0xf5] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true, true, 1)\n// null\nquick[0xf6] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nfunction quickEncodeToken (token) {\n  switch (token.type) {\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf4])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf5])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf6])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes:\n      if (!token.value.length) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x40])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string:\n      if (token.value === '') {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x60])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint:\n      if (token.value < 24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([Number(token.value)])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint:\n      if (token.value >= -24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([31 - Number(token.value)])\n      }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/jump.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\nclass Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvdG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQixXQUFXLElBQUksVUFBVTtBQUM1Qzs7QUFFQTtBQUNBLGFBQWEsTUFBTTtBQUNuQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0JBQXNCO0FBQ3JDO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLFVBQVUsSUFBSSxXQUFXO0FBQzdDO0FBQ0E7O0FBRXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvdG9rZW4uanM/YjlmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBUeXBlIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBtYWpvclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHRlcm1pbmFsXG4gICAqL1xuICBjb25zdHJ1Y3RvciAobWFqb3IsIG5hbWUsIHRlcm1pbmFsKSB7XG4gICAgdGhpcy5tYWpvciA9IG1ham9yXG4gICAgdGhpcy5tYWpvckVuY29kZWQgPSBtYWpvciA8PCA1XG4gICAgdGhpcy5uYW1lID0gbmFtZVxuICAgIHRoaXMudGVybWluYWwgPSB0ZXJtaW5hbFxuICB9XG5cbiAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICB0b1N0cmluZyAoKSB7XG4gICAgcmV0dXJuIGBUeXBlWyR7dGhpcy5tYWpvcn1dLiR7dGhpcy5uYW1lfWBcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1R5cGV9IHR5cFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgKi9cbiAgY29tcGFyZSAodHlwKSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgIHJldHVybiB0aGlzLm1ham9yIDwgdHlwLm1ham9yID8gLTEgOiB0aGlzLm1ham9yID4gdHlwLm1ham9yID8gMSA6IDBcbiAgfVxufVxuXG4vLyBjb252ZXJ0IHRvIHN0YXRpYyBmaWVsZHMgd2hlbiBiZXR0ZXIgc3VwcG9ydGVkXG5UeXBlLnVpbnQgPSBuZXcgVHlwZSgwLCAndWludCcsIHRydWUpXG5UeXBlLm5lZ2ludCA9IG5ldyBUeXBlKDEsICduZWdpbnQnLCB0cnVlKVxuVHlwZS5ieXRlcyA9IG5ldyBUeXBlKDIsICdieXRlcycsIHRydWUpXG5UeXBlLnN0cmluZyA9IG5ldyBUeXBlKDMsICdzdHJpbmcnLCB0cnVlKVxuVHlwZS5hcnJheSA9IG5ldyBUeXBlKDQsICdhcnJheScsIGZhbHNlKVxuVHlwZS5tYXAgPSBuZXcgVHlwZSg1LCAnbWFwJywgZmFsc2UpXG5UeXBlLnRhZyA9IG5ldyBUeXBlKDYsICd0YWcnLCBmYWxzZSkgLy8gdGVybWluYWw/XG5UeXBlLmZsb2F0ID0gbmV3IFR5cGUoNywgJ2Zsb2F0JywgdHJ1ZSlcblR5cGUuZmFsc2UgPSBuZXcgVHlwZSg3LCAnZmFsc2UnLCB0cnVlKVxuVHlwZS50cnVlID0gbmV3IFR5cGUoNywgJ3RydWUnLCB0cnVlKVxuVHlwZS5udWxsID0gbmV3IFR5cGUoNywgJ251bGwnLCB0cnVlKVxuVHlwZS51bmRlZmluZWQgPSBuZXcgVHlwZSg3LCAndW5kZWZpbmVkJywgdHJ1ZSlcblR5cGUuYnJlYWsgPSBuZXcgVHlwZSg3LCAnYnJlYWsnLCB0cnVlKVxuLy8gVHlwZS5pbmRlZmluaXRlTGVuZ3RoID0gbmV3IFR5cGUoMCwgJ2luZGVmaW5pdGVMZW5ndGgnLCB0cnVlKVxuXG5jbGFzcyBUb2tlbiB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge1R5cGV9IHR5cGVcbiAgICogQHBhcmFtIHthbnl9IFt2YWx1ZV1cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtlbmNvZGVkTGVuZ3RoXVxuICAgKi9cbiAgY29uc3RydWN0b3IgKHR5cGUsIHZhbHVlLCBlbmNvZGVkTGVuZ3RoKSB7XG4gICAgdGhpcy50eXBlID0gdHlwZVxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZVxuICAgIHRoaXMuZW5jb2RlZExlbmd0aCA9IGVuY29kZWRMZW5ndGhcbiAgICAvKiogQHR5cGUge1VpbnQ4QXJyYXl8dW5kZWZpbmVkfSAqL1xuICAgIHRoaXMuZW5jb2RlZEJ5dGVzID0gdW5kZWZpbmVkXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmJ5dGVWYWx1ZSA9IHVuZGVmaW5lZFxuICB9XG5cbiAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICB0b1N0cmluZyAoKSB7XG4gICAgcmV0dXJuIGBUb2tlblske3RoaXMudHlwZX1dLiR7dGhpcy52YWx1ZX1gXG4gIH1cbn1cblxuZXhwb3J0IHsgVHlwZSwgVG9rZW4gfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/cborg/lib/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base10.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base10.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base10: () => (/* binding */ base10)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: '9',\n    name: 'base10',\n    alphabet: '0123456789'\n});\n//# sourceMappingURL=base10.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTEwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQzNCLGVBQWUsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTEwLmpzPzIwNWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UxMCA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICc5JyxcbiAgICBuYW1lOiAnYmFzZTEwJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODknXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UxMC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base16.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base16.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base16: () => (/* binding */ base16),\n/* harmony export */   base16upper: () => (/* binding */ base16upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'f',\n    name: 'base16',\n    alphabet: '0123456789abcdef',\n    bitsPerChar: 4\n});\nconst base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'F',\n    name: 'base16upper',\n    alphabet: '0123456789ABCDEF',\n    bitsPerChar: 4\n});\n//# sourceMappingURL=base16.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTE2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUM3QixlQUFlLGlEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQixpREFBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UxNi5qcz9hZjExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UxNiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2YnLFxuICAgIG5hbWU6ICdiYXNlMTYnLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZicsXG4gICAgYml0c1BlckNoYXI6IDRcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UxNnVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnRicsXG4gICAgbmFtZTogJ2Jhc2UxNnVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUYnLFxuICAgIGJpdHNQZXJDaGFyOiA0XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UxNi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base2.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base2.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base2: () => (/* binding */ base2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: '0',\n    name: 'base2',\n    alphabet: '01',\n    bitsPerChar: 1\n});\n//# sourceMappingURL=base2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsY0FBYyxpREFBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UyLmpzP2NjZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICcwJyxcbiAgICBuYW1lOiAnYmFzZTInLFxuICAgIGFscGhhYmV0OiAnMDEnLFxuICAgIGJpdHNQZXJDaGFyOiAxXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base256emoji.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base256emoji.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base256emoji: () => (/* binding */ base256emoji)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂');\nconst alphabetBytesToChars = (alphabet.reduce((p, c, i) => { p[i] = c; return p; }, ([])));\nconst alphabetCharsToBytes = (alphabet.reduce((p, c, i) => {\n    const codePoint = c.codePointAt(0);\n    if (codePoint == null) {\n        throw new Error(`Invalid character: ${c}`);\n    }\n    p[codePoint] = i;\n    return p;\n}, ([])));\nfunction encode(data) {\n    return data.reduce((p, c) => {\n        p += alphabetBytesToChars[c];\n        return p;\n    }, '');\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str) {\n        const codePoint = char.codePointAt(0);\n        if (codePoint == null) {\n            throw new Error(`Invalid character: ${char}`);\n        }\n        const byt = alphabetCharsToBytes[codePoint];\n        if (byt == null) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nconst base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: '🚀',\n    name: 'base256emoji',\n    encode,\n    decode\n});\n//# sourceMappingURL=base256emoji.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTI1NmVtb2ppLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlDO0FBQ2pDO0FBQ0EsNkRBQTZELFVBQVUsV0FBVztBQUNsRjtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsRUFBRTtBQUNoRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELEtBQUs7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELEtBQUs7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFCQUFxQiw4Q0FBSTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcz80Y2UxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb20gfSBmcm9tICcuL2Jhc2UuanMnO1xuY29uc3QgYWxwaGFiZXQgPSBBcnJheS5mcm9tKCfwn5qA8J+qkOKYhPCfm7Dwn4yM8J+MkfCfjJLwn4yT8J+MlPCfjJXwn4yW8J+Ml/CfjJjwn4yN8J+Mj/CfjI7wn5CJ4piA8J+Su/CflqXwn5K+8J+Sv/CfmILinaTwn5iN8J+ko/CfmIrwn5mP8J+SlfCfmK3wn5iY8J+RjfCfmIXwn5GP8J+YgfCflKXwn6Ww8J+SlPCfkpbwn5KZ8J+YovCfpJTwn5iG8J+ZhPCfkqrwn5iJ4pi68J+RjPCfpJfwn5Kc8J+YlPCfmI7wn5iH8J+MufCfpKbwn46J8J+SnuKcjOKcqPCfpLfwn5ix8J+YjPCfjLjwn5mM8J+Yi/Cfkpfwn5Ka8J+Yj/Cfkpvwn5mC8J+Sk/CfpKnwn5iE8J+YgPCflqTwn5iD8J+Sr/CfmYjwn5GH8J+OtvCfmJLwn6St4p2j8J+YnPCfkovwn5GA8J+YqvCfmJHwn5Kl8J+Zi/CfmJ7wn5ip8J+YofCfpKrwn5GK8J+ls/CfmKXwn6Sk8J+RifCfkoPwn5iz4pyL8J+YmvCfmJ3wn5i08J+Mn/CfmKzwn5mD8J+NgPCfjLfwn5i78J+Yk+KtkOKchfCfpbrwn4yI8J+YiPCfpJjwn5Km4pyU8J+Yo/Cfj4Pwn5KQ4pi58J+OivCfkpjwn5ig4pid8J+YlfCfjLrwn46C8J+Mu/CfmJDwn5aV8J+SnfCfmYrwn5i58J+Xo/Cfkqvwn5KA8J+RkfCfjrXwn6Se8J+Ym/CflLTwn5ik8J+MvPCfmKvimr3wn6SZ4piV8J+PhvCfpKvwn5GI8J+YrvCfmYbwn4278J+Ng/CfkLbwn5KB8J+YsvCfjL/wn6eh8J+OgeKaofCfjJ7wn46I4p2M4pyK8J+Ri/CfmLDwn6So8J+YtvCfpJ3wn5q28J+SsPCfjZPwn5Ki8J+kn/CfmYHwn5qo8J+SqPCfpKzinIjwn46A8J+NuvCfpJPwn5iZ8J+Sn/CfjLHwn5iW8J+RtvCfpbTilrbinqHinZPwn5KO8J+SuOKsh/CfmKjwn4ya8J+mi/CfmLfwn5W64pqg8J+ZhfCfmJ/wn5i18J+RjvCfpLLwn6Sg8J+kp/Cfk4zwn5S18J+ShfCfp5Dwn5C+8J+NkvCfmJfwn6SR8J+MivCfpK/wn5C34piO8J+Sp/CfmK/wn5KG8J+RhvCfjqTwn5mH8J+NkeKdhPCfjLTwn5Kj8J+QuPCfkozwn5ON8J+lgPCfpKLwn5GF8J+SofCfkqnwn5GQ8J+TuPCfkbvwn6SQ8J+krvCfjrzwn6W18J+aqfCfjY7wn42K8J+RvPCfko3wn5Oj8J+lgicpO1xuY29uc3QgYWxwaGFiZXRCeXRlc1RvQ2hhcnMgPSAoYWxwaGFiZXQucmVkdWNlKChwLCBjLCBpKSA9PiB7IHBbaV0gPSBjOyByZXR1cm4gcDsgfSwgKFtdKSkpO1xuY29uc3QgYWxwaGFiZXRDaGFyc1RvQnl0ZXMgPSAoYWxwaGFiZXQucmVkdWNlKChwLCBjLCBpKSA9PiB7XG4gICAgY29uc3QgY29kZVBvaW50ID0gYy5jb2RlUG9pbnRBdCgwKTtcbiAgICBpZiAoY29kZVBvaW50ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNoYXJhY3RlcjogJHtjfWApO1xuICAgIH1cbiAgICBwW2NvZGVQb2ludF0gPSBpO1xuICAgIHJldHVybiBwO1xufSwgKFtdKSkpO1xuZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gZGF0YS5yZWR1Y2UoKHAsIGMpID0+IHtcbiAgICAgICAgcCArPSBhbHBoYWJldEJ5dGVzVG9DaGFyc1tjXTtcbiAgICAgICAgcmV0dXJuIHA7XG4gICAgfSwgJycpO1xufVxuZnVuY3Rpb24gZGVjb2RlKHN0cikge1xuICAgIGNvbnN0IGJ5dHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGNoYXIgb2Ygc3RyKSB7XG4gICAgICAgIGNvbnN0IGNvZGVQb2ludCA9IGNoYXIuY29kZVBvaW50QXQoMCk7XG4gICAgICAgIGlmIChjb2RlUG9pbnQgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNoYXJhY3RlcjogJHtjaGFyfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ5dCA9IGFscGhhYmV0Q2hhcnNUb0J5dGVzW2NvZGVQb2ludF07XG4gICAgICAgIGlmIChieXQgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBOb24tYmFzZTI1NmVtb2ppIGNoYXJhY3RlcjogJHtjaGFyfWApO1xuICAgICAgICB9XG4gICAgICAgIGJ5dHMucHVzaChieXQpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnl0cyk7XG59XG5leHBvcnQgY29uc3QgYmFzZTI1NmVtb2ppID0gZnJvbSh7XG4gICAgcHJlZml4OiAn8J+agCcsXG4gICAgbmFtZTogJ2Jhc2UyNTZlbW9qaScsXG4gICAgZW5jb2RlLFxuICAgIGRlY29kZVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMjU2ZW1vamkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base256emoji.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base32.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base32.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsaURBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHVCQUF1QixpREFBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSwwQkFBMEIsaURBQU87QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sZ0JBQWdCLGlEQUFPO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzPzg2NGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTMyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnYicsXG4gICAgbmFtZTogJ2Jhc2UzMicsXG4gICAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnQicsXG4gICAgbmFtZTogJ2Jhc2UzMnVwcGVyJyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnYycsXG4gICAgbmFtZTogJ2Jhc2UzMnBhZCcsXG4gICAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2Nz0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2Nz0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXggPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd2JyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4dXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdWJyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVYnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWQgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd0JyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4cGFkJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2PScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWPScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnogPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdoJyxcbiAgICBuYW1lOiAnYmFzZTMyeicsXG4gICAgYWxwaGFiZXQ6ICd5Ym5kcmZnOGVqa21jcHF4b3QxdXdpc3phMzQ1aDc2OScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTMyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base36.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base36.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixlQUFlLCtDQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsK0NBQUs7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzPzIyM2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzNiA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdrJyxcbiAgICBuYW1lOiAnYmFzZTM2JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzNnVwcGVyID0gYmFzZVgoe1xuICAgIHByZWZpeDogJ0snLFxuICAgIG5hbWU6ICdiYXNlMzZ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzNi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base58.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base58.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixrQkFBa0IsK0NBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQiwrQ0FBSztBQUNqQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanM/MWMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlWCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTU4YnRjID0gYmFzZVgoe1xuICAgIG5hbWU6ICdiYXNlNThidGMnLFxuICAgIHByZWZpeDogJ3onLFxuICAgIGFscGhhYmV0OiAnMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGZsaWNrciA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4ZmxpY2tyJyxcbiAgICBwcmVmaXg6ICdaJyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OWFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXpBQkNERUZHSEpLTE1OUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U1OC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base64.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base64.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'm',\n    name: 'base64',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'M',\n    name: 'base64pad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'u',\n    name: 'base64url',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'U',\n    name: 'base64urlpad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n    bitsPerChar: 6\n});\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9DO0FBQzdCLGVBQWUsaURBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLGtCQUFrQixpREFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxxQkFBcUIsaURBQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNjQuanM/ZDk2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlNjQgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdtJyxcbiAgICBuYW1lOiAnYmFzZTY0JyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nLFxuICAgIGJpdHNQZXJDaGFyOiA2XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNjRwYWQgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdNJyxcbiAgICBuYW1lOiAnYmFzZTY0cGFkJyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89JyxcbiAgICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0dXJsID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndScsXG4gICAgbmFtZTogJ2Jhc2U2NHVybCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fJyxcbiAgICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0dXJscGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVScsXG4gICAgbmFtZTogJ2Jhc2U2NHVybHBhZCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fPScsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base8.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base8.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base8: () => (/* binding */ base8)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: '7',\n    name: 'base8',\n    alphabet: '01234567',\n    bitsPerChar: 3\n});\n//# sourceMappingURL=base8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsY0FBYyxpREFBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2U4LmpzPzQxYmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTggPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICc3JyxcbiAgICBuYW1lOiAnYmFzZTgnLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1NjcnLFxuICAgIGJpdHNQZXJDaGFyOiAzXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/identity.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/identity.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base.js\");\n\n\nconst identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    prefix: '\\x00',\n    name: 'identity',\n    encode: (buf) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.toString)(buf),\n    decode: (str) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.fromString)(str)\n});\n//# sourceMappingURL=identity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvaWRlbnRpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1EO0FBQ2xCO0FBQzFCLGlCQUFpQiw4Q0FBSTtBQUM1QjtBQUNBO0FBQ0EscUJBQXFCLG1EQUFRO0FBQzdCLHFCQUFxQixxREFBVTtBQUMvQixDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pZGVudGl0eS5qcz8yZmFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21TdHJpbmcsIHRvU3RyaW5nIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgaWRlbnRpdHkgPSBmcm9tKHtcbiAgICBwcmVmaXg6ICdcXHgwMCcsXG4gICAgbmFtZTogJ2lkZW50aXR5JyxcbiAgICBlbmNvZGU6IChidWYpID0+IHRvU3RyaW5nKGJ1ZiksXG4gICAgZGVjb2RlOiAoc3RyKSA9PiBmcm9tU3RyaW5nKHN0cilcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWRlbnRpdHkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/interface.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/interface.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ1U7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2ludGVyZmFjZS5qcz80ODRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEJhc2UgZW5jb2RlcnMgLyBkZWNvZGVycyBqdXN0IGJhc2UgZW5jb2RlIC8gZGVjb2RlIGJldHdlZW4gYmluYXJ5IGFuZFxuLy8gdGV4dHVhbCByZXByZXNlbnRhdGlvbi4gVGhleSBhcmUgdW5hd2FyZSBvZiBtdWx0aWJhc2UuXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/basics.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/basics.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),\n/* harmony export */   bases: () => (/* binding */ bases),\n/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),\n/* harmony export */   codecs: () => (/* binding */ codecs),\n/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),\n/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),\n/* harmony export */   hashes: () => (/* binding */ hashes),\n/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)\n/* harmony export */ });\n/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base10.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base10.js\");\n/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base16.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base16.js\");\n/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base2.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base2.js\");\n/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base256emoji.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base256emoji.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base64.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base8.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base8.js\");\n/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/identity.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/identity.js\");\n/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./codecs/json.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/json.js\");\n/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./codecs/raw.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/raw.js\");\n/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hashes/identity.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/identity.js\");\n/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hashes/sha2.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst bases = { ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_9__, ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_2__, ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_8__, ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_0__, ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_1__, ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_4__, ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_5__, ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_6__, ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_7__, ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ };\nconst hashes = { ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__, ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ };\nconst codecs = { raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__, json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ };\n\n//# sourceMappingURL=basics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ0E7QUFDRjtBQUNjO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDRjtBQUNVO0FBQ1g7QUFDRjtBQUNVO0FBQ1I7QUFDdUI7QUFDekQsZ0JBQWdCLEdBQUcsK0NBQVksS0FBSyw0Q0FBSyxLQUFLLDRDQUFLLEtBQUssNkNBQU0sS0FBSyw2Q0FBTSxLQUFLLDZDQUFNLEtBQUssNkNBQU0sS0FBSyw2Q0FBTSxLQUFLLDZDQUFNLEtBQUssbURBQVk7QUFDdEksaUJBQWlCLEdBQUcsNkNBQUksS0FBSyxpREFBUTtBQUNyQyxpQkFBaUIsR0FBRyxvREFBTTtBQUNhO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzaWNzLmpzPzQ0MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYmFzZTEwIGZyb20gJy4vYmFzZXMvYmFzZTEwLmpzJztcbmltcG9ydCAqIGFzIGJhc2UxNiBmcm9tICcuL2Jhc2VzL2Jhc2UxNi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMiBmcm9tICcuL2Jhc2VzL2Jhc2UyLmpzJztcbmltcG9ydCAqIGFzIGJhc2UyNTZlbW9qaSBmcm9tICcuL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMzIgZnJvbSAnLi9iYXNlcy9iYXNlMzIuanMnO1xuaW1wb3J0ICogYXMgYmFzZTM2IGZyb20gJy4vYmFzZXMvYmFzZTM2LmpzJztcbmltcG9ydCAqIGFzIGJhc2U1OCBmcm9tICcuL2Jhc2VzL2Jhc2U1OC5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlNjQgZnJvbSAnLi9iYXNlcy9iYXNlNjQuanMnO1xuaW1wb3J0ICogYXMgYmFzZTggZnJvbSAnLi9iYXNlcy9iYXNlOC5qcyc7XG5pbXBvcnQgKiBhcyBpZGVudGl0eUJhc2UgZnJvbSAnLi9iYXNlcy9pZGVudGl0eS5qcyc7XG5pbXBvcnQgKiBhcyBqc29uIGZyb20gJy4vY29kZWNzL2pzb24uanMnO1xuaW1wb3J0ICogYXMgcmF3IGZyb20gJy4vY29kZWNzL3Jhdy5qcyc7XG5pbXBvcnQgKiBhcyBpZGVudGl0eSBmcm9tICcuL2hhc2hlcy9pZGVudGl0eS5qcyc7XG5pbXBvcnQgKiBhcyBzaGEyIGZyb20gJy4vaGFzaGVzL3NoYTIuanMnO1xuaW1wb3J0IHsgQ0lELCBoYXNoZXIsIGRpZ2VzdCwgdmFyaW50LCBieXRlcyB9IGZyb20gJy4vaW5kZXguanMnO1xuZXhwb3J0IGNvbnN0IGJhc2VzID0geyAuLi5pZGVudGl0eUJhc2UsIC4uLmJhc2UyLCAuLi5iYXNlOCwgLi4uYmFzZTEwLCAuLi5iYXNlMTYsIC4uLmJhc2UzMiwgLi4uYmFzZTM2LCAuLi5iYXNlNTgsIC4uLmJhc2U2NCwgLi4uYmFzZTI1NmVtb2ppIH07XG5leHBvcnQgY29uc3QgaGFzaGVzID0geyAuLi5zaGEyLCAuLi5pZGVudGl0eSB9O1xuZXhwb3J0IGNvbnN0IGNvZGVjcyA9IHsgcmF3LCBqc29uIH07XG5leHBvcnQgeyBDSUQsIGhhc2hlciwgZGlnZXN0LCB2YXJpbnQsIGJ5dGVzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNpY3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/basics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/block/interface.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/block/interface.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmxvY2svaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmxvY2svaW50ZXJmYWNlLmpzP2EyZDgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanM/MzVlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1wdHkgPSBuZXcgVWludDhBcnJheSgwKTtcbmV4cG9ydCBmdW5jdGlvbiB0b0hleChkKSB7XG4gICAgcmV0dXJuIGQucmVkdWNlKChoZXgsIGJ5dGUpID0+IGhleCArIGJ5dGUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyksICcnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tSGV4KGhleCkge1xuICAgIGNvbnN0IGhleGVzID0gaGV4Lm1hdGNoKC8uLi9nKTtcbiAgICByZXR1cm4gaGV4ZXMgIT0gbnVsbCA/IG5ldyBVaW50OEFycmF5KGhleGVzLm1hcChiID0+IHBhcnNlSW50KGIsIDE2KSkpIDogZW1wdHk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGFhLCBiYikge1xuICAgIGlmIChhYSA9PT0gYmIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChhYS5ieXRlTGVuZ3RoICE9PSBiYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGFhLmJ5dGVMZW5ndGg7IGlpKyspIHtcbiAgICAgICAgaWYgKGFhW2lpXSAhPT0gYmJbaWldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29lcmNlKG8pIHtcbiAgICBpZiAobyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgby5jb25zdHJ1Y3Rvci5uYW1lID09PSAnVWludDhBcnJheScpIHtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfVxuICAgIGlmIChvIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KG8pO1xuICAgIH1cbiAgICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KG8pKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvLmJ1ZmZlciwgby5ieXRlT2Zmc2V0LCBvLmJ5dGVMZW5ndGgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmluYXJ5KG8pIHtcbiAgICByZXR1cm4gbyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IEFycmF5QnVmZmVyLmlzVmlldyhvKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU3RyaW5nKHN0cikge1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1N0cmluZyhiKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/cid.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/cid.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/interface.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9pbnRlcmZhY2UuanM/NDFiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/json.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/json.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = 'json';\nconst code = 0x0200;\nfunction encode(node) {\n    return textEncoder.encode(JSON.stringify(node));\n}\nfunction decode(data) {\n    return JSON.parse(textDecoder.decode(data));\n}\n//# sourceMappingURL=json.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL2pzb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvanNvbi5qcz9lYzA1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRleHRFbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5jb25zdCB0ZXh0RGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuZXhwb3J0IGNvbnN0IG5hbWUgPSAnanNvbic7XG5leHBvcnQgY29uc3QgY29kZSA9IDB4MDIwMDtcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUobm9kZSkge1xuICAgIHJldHVybiB0ZXh0RW5jb2Rlci5lbmNvZGUoSlNPTi5zdHJpbmdpZnkobm9kZSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhKSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UodGV4dERlY29kZXIuZGVjb2RlKGRhdGEpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWpzb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/raw.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/raw.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\");\n\nconst name = 'raw';\nconst code = 0x55;\nfunction encode(node) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\n}\nfunction decode(data) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n}\n//# sourceMappingURL=raw.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL3Jhdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxQztBQUM5QjtBQUNBO0FBQ0E7QUFDUCxXQUFXLGlEQUFNO0FBQ2pCO0FBQ087QUFDUCxXQUFXLGlEQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvcmF3LmpzPzk4NmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuZXhwb3J0IGNvbnN0IG5hbWUgPSAncmF3JztcbmV4cG9ydCBjb25zdCBjb2RlID0gMHg1NTtcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUobm9kZSkge1xuICAgIHJldHVybiBjb2VyY2Uobm9kZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gY29lcmNlKGRhdGEpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmF3LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/digest.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJEO0FBQ3BCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsc0RBQXFCO0FBQzVDLHNDQUFzQyxzREFBcUI7QUFDM0Q7QUFDQSxJQUFJLGdEQUFlO0FBQ25CLElBQUksZ0RBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IsaURBQU07QUFDeEIsK0JBQStCLDhDQUFhO0FBQzVDLGlDQUFpQyw4Q0FBYTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlEQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcz84YTFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSwgZXF1YWxzIGFzIGVxdWFsQnl0ZXMgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJztcbi8qKlxuICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoY29kZSwgZGlnZXN0KSB7XG4gICAgY29uc3Qgc2l6ZSA9IGRpZ2VzdC5ieXRlTGVuZ3RoO1xuICAgIGNvbnN0IHNpemVPZmZzZXQgPSB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoY29kZSk7XG4gICAgY29uc3QgZGlnZXN0T2Zmc2V0ID0gc2l6ZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGRpZ2VzdE9mZnNldCArIHNpemUpO1xuICAgIHZhcmludC5lbmNvZGVUbyhjb2RlLCBieXRlcywgMCk7XG4gICAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KTtcbiAgICBieXRlcy5zZXQoZGlnZXN0LCBkaWdlc3RPZmZzZXQpO1xuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuLyoqXG4gKiBUdXJucyBieXRlcyByZXByZXNlbnRhdGlvbiBvZiBtdWx0aWhhc2ggZGlnZXN0IGludG8gYW4gaW5zdGFuY2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUobXVsdGloYXNoKSB7XG4gICAgY29uc3QgYnl0ZXMgPSBjb2VyY2UobXVsdGloYXNoKTtcbiAgICBjb25zdCBbY29kZSwgc2l6ZU9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKTtcbiAgICBjb25zdCBbc2l6ZSwgZGlnZXN0T2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoc2l6ZU9mZnNldCkpO1xuICAgIGNvbnN0IGRpZ2VzdCA9IGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQgKyBkaWdlc3RPZmZzZXQpO1xuICAgIGlmIChkaWdlc3QuYnl0ZUxlbmd0aCAhPT0gc2l6ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luY29ycmVjdCBsZW5ndGgnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBiO1xuICAgICAgICByZXR1cm4gKGEuY29kZSA9PT0gZGF0YS5jb2RlICYmXG4gICAgICAgICAgICBhLnNpemUgPT09IGRhdGEuc2l6ZSAmJlxuICAgICAgICAgICAgZGF0YS5ieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICAgICAgICAgIGVxdWFsQnl0ZXMoYS5ieXRlcywgZGF0YS5ieXRlcykpO1xuICAgIH1cbn1cbi8qKlxuICogUmVwcmVzZW50cyBhIG11bHRpaGFzaCBkaWdlc3Qgd2hpY2ggY2FycmllcyBpbmZvcm1hdGlvbiBhYm91dCB0aGVcbiAqIGhhc2hpbmcgYWxnb3JpdGhtIGFuZCBhbiBhY3R1YWwgaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBEaWdlc3Qge1xuICAgIGNvZGU7XG4gICAgc2l6ZTtcbiAgICBkaWdlc3Q7XG4gICAgYnl0ZXM7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLmRpZ2VzdCA9IGRpZ2VzdDtcbiAgICAgICAgdGhpcy5ieXRlcyA9IGJ5dGVzO1xuICAgIH1cbn1cbi8qKlxuICogVXNlZCB0byBjaGVjayB0aGF0IHRoZSBwYXNzZWQgbXVsdGloYXNoIGhhcyB0aGUgcGFzc2VkIGNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0NvZGUoZGlnZXN0LCBjb2RlKSB7XG4gICAgcmV0dXJuIGRpZ2VzdC5jb2RlID09PSBjb2RlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlnZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDdEM7QUFDTyxnQkFBZ0Isc0RBQXNEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkZBQTZGLHFCQUFxQjtBQUNsSDtBQUNBO0FBQ0EsMEZBQTBGLHFCQUFxQjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixrQkFBa0I7QUFDeEc7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBYTtBQUN4QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcz9hZjY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5jb25zdCBERUZBVUxUX01JTl9ESUdFU1RfTEVOR1RIID0gMjA7XG5leHBvcnQgZnVuY3Rpb24gZnJvbSh7IG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGggfSkge1xuICAgIHJldHVybiBuZXcgSGFzaGVyKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpO1xufVxuLyoqXG4gKiBIYXNoZXIgcmVwcmVzZW50cyBhIGhhc2hpbmcgYWxnb3JpdGhtIGltcGxlbWVudGF0aW9uIHRoYXQgcHJvZHVjZXMgYXNcbiAqIGBNdWx0aWhhc2hEaWdlc3RgLlxuICovXG5leHBvcnQgY2xhc3MgSGFzaGVyIHtcbiAgICBuYW1lO1xuICAgIGNvZGU7XG4gICAgZW5jb2RlO1xuICAgIG1pbkRpZ2VzdExlbmd0aDtcbiAgICBtYXhEaWdlc3RMZW5ndGg7XG4gICAgY29uc3RydWN0b3IobmFtZSwgY29kZSwgZW5jb2RlLCBtaW5EaWdlc3RMZW5ndGgsIG1heERpZ2VzdExlbmd0aCkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLmVuY29kZSA9IGVuY29kZTtcbiAgICAgICAgdGhpcy5taW5EaWdlc3RMZW5ndGggPSBtaW5EaWdlc3RMZW5ndGggPz8gREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSDtcbiAgICAgICAgdGhpcy5tYXhEaWdlc3RMZW5ndGggPSBtYXhEaWdlc3RMZW5ndGg7XG4gICAgfVxuICAgIGRpZ2VzdChpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucz8udHJ1bmNhdGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMudHJ1bmNhdGUgPCB0aGlzLm1pbkRpZ2VzdExlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvICR7dGhpcy5taW5EaWdlc3RMZW5ndGh9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5tYXhEaWdlc3RMZW5ndGggIT0gbnVsbCAmJiBvcHRpb25zLnRydW5jYXRlID4gdGhpcy5tYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWF4RGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZW5jb2RlKGlucHV0KTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZURpZ2VzdChyZXN1bHQsIHRoaXMuY29kZSwgb3B0aW9ucz8udHJ1bmNhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50aGVuKGRpZ2VzdCA9PiBjcmVhdGVEaWdlc3QoZGlnZXN0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlJyk7XG4gICAgICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZSBhIERpZ2VzdCBmcm9tIHRoZSBwYXNzZWQgdWludDhhcnJheSBhbmQgY29kZSwgb3B0aW9uYWxseSB0cnVuY2F0aW5nIGl0XG4gKiBmaXJzdC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgY29kZSwgdHJ1bmNhdGUpIHtcbiAgICBpZiAodHJ1bmNhdGUgIT0gbnVsbCAmJiB0cnVuY2F0ZSAhPT0gZGlnZXN0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgaWYgKHRydW5jYXRlID4gZGlnZXN0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7ZGlnZXN0LmJ5dGVMZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgZGlnZXN0ID0gZGlnZXN0LnN1YmFycmF5KDAsIHRydW5jYXRlKTtcbiAgICB9XG4gICAgcmV0dXJuIERpZ2VzdC5jcmVhdGUoY29kZSwgZGlnZXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/identity.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/identity.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/digest.js\");\n\n\nconst code = 0x0;\nconst name = 'identity';\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nfunction digest(input, options) {\n    if (options?.truncate != null && options.truncate !== input.byteLength) {\n        if (options.truncate < 0 || options.truncate > input.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${input.byteLength}`);\n        }\n        input = input.subarray(0, options.truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\n}\nconst identity = { code, name, encode, digest };\n//# sourceMappingURL=identity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2lkZW50aXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ3RDO0FBQ0E7QUFDQSxlQUFlLDZDQUFNO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixpQkFBaUI7QUFDdkc7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBYTtBQUN4QjtBQUNPLG1CQUFtQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pZGVudGl0eS5qcz9mZTVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5jb25zdCBjb2RlID0gMHgwO1xuY29uc3QgbmFtZSA9ICdpZGVudGl0eSc7XG5jb25zdCBlbmNvZGUgPSBjb2VyY2U7XG5mdW5jdGlvbiBkaWdlc3QoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucz8udHJ1bmNhdGUgIT0gbnVsbCAmJiBvcHRpb25zLnRydW5jYXRlICE9PSBpbnB1dC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmIChvcHRpb25zLnRydW5jYXRlIDwgMCB8fCBvcHRpb25zLnRydW5jYXRlID4gaW5wdXQuYnl0ZUxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHRydW5jYXRlIG9wdGlvbiwgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHtpbnB1dC5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIGlucHV0ID0gaW5wdXQuc3ViYXJyYXkoMCwgb3B0aW9ucy50cnVuY2F0ZSk7XG4gICAgfVxuICAgIHJldHVybiBEaWdlc3QuY3JlYXRlKGNvZGUsIGVuY29kZShpbnB1dCkpO1xufVxuZXhwb3J0IGNvbnN0IGlkZW50aXR5ID0geyBjb2RlLCBuYW1lLCBlbmNvZGUsIGRpZ2VzdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWRlbnRpdHkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/interface.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2ludGVyZmFjZS5qcz83NzkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICMgTXVsdGloYXNoXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/sha2.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/sha2.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/hasher.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: (input) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256').update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: input => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha512').update(input).digest())\n});\n//# sourceMappingURL=sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL3NoYTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEI7QUFDUztBQUNGO0FBQzVCLGVBQWUsZ0RBQUk7QUFDMUI7QUFDQTtBQUNBLHVCQUF1QixpREFBTSxDQUFDLDhDQUFpQjtBQUMvQyxDQUFDO0FBQ00sZUFBZSxnREFBSTtBQUMxQjtBQUNBO0FBQ0EscUJBQXFCLGlEQUFNLENBQUMsOENBQWlCO0FBQzdDLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9zaGEyLmpzPzQ0MjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vaGFzaGVyLmpzJztcbmV4cG9ydCBjb25zdCBzaGEyNTYgPSBmcm9tKHtcbiAgICBuYW1lOiAnc2hhMi0yNTYnLFxuICAgIGNvZGU6IDB4MTIsXG4gICAgZW5jb2RlOiAoaW5wdXQpID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pO1xuZXhwb3J0IGNvbnN0IHNoYTUxMiA9IGZyb20oe1xuICAgIG5hbWU6ICdzaGEyLTUxMicsXG4gICAgY29kZTogMHgxMyxcbiAgICBlbmNvZGU6IGlucHV0ID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhNTEyJykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/interface.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/interface.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ0E7QUFDRjtBQUNDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW50ZXJmYWNlLmpzP2RiNTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9iYXNlcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9oYXNoZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY29kZWNzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpbmsvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmxvY2svaW50ZXJmYWNlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createLegacy: () => (/* binding */ createLegacy),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   format: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.format),\n/* harmony export */   fromJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.fromJSON),\n/* harmony export */   isLink: () => (/* binding */ isLink),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   toJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.toJSON)\n/* harmony export */ });\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link/interface.js\");\n\n// This way TS will also expose all the types from module\n\nconst DAG_PB_CODE = 0x70;\n// eslint-disable-next-line\nconst SHA_256_CODE = 0x12;\n/**\n * Simplified version of `create` for CIDv0.\n */\nfunction createLegacy(digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(0, DAG_PB_CODE, digest);\n}\n/**\n * Simplified version of `create` for CIDv1.\n *\n * @param code - Content encoding format code.\n * @param digest - Miltihash of the content.\n */\nfunction create(code, digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(1, code, digest);\n}\n/**\n * Type predicate returns true if value is the link.\n */\nfunction isLink(value) {\n    if (value == null) {\n        return false;\n    }\n    const withSlash = value;\n    if (withSlash['/'] != null && withSlash['/'] === withSlash.bytes) {\n        return true;\n    }\n    const withAsCID = value;\n    if (withAsCID.asCID === value) {\n        return true;\n    }\n    return false;\n}\n/**\n * Takes cid in a string representation and creates an instance. If `base`\n * decoder is not provided will use a default from the configuration. It will\n * throw an error if encoding of the CID is not compatible with supplied (or\n * a default decoder).\n */\nfunction parse(source, base) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.parse(source, base);\n}\n\n/**\n * Decoded a CID from its binary representation. The byte array must contain\n * only the CID with no additional bytes.\n *\n * An error will be thrown if the bytes provided do not contain a valid\n * binary representation of a CID.\n */\nfunction decode(bytes) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.decode(bytes);\n}\n//# sourceMappingURL=link.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXlEO0FBQ3pEO0FBQ29DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyx3Q0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdDQUFHO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdDQUFHO0FBQ2Q7QUFDb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsd0NBQUc7QUFDZDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay5qcz84MmY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENJRCwgZm9ybWF0LCB0b0pTT04sIGZyb21KU09OIH0gZnJvbSAnLi9jaWQuanMnO1xuLy8gVGhpcyB3YXkgVFMgd2lsbCBhbHNvIGV4cG9zZSBhbGwgdGhlIHR5cGVzIGZyb20gbW9kdWxlXG5leHBvcnQgKiBmcm9tICcuL2xpbmsvaW50ZXJmYWNlLmpzJztcbmNvbnN0IERBR19QQl9DT0RFID0gMHg3MDtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuY29uc3QgU0hBXzI1Nl9DT0RFID0gMHgxMjtcbi8qKlxuICogU2ltcGxpZmllZCB2ZXJzaW9uIG9mIGBjcmVhdGVgIGZvciBDSUR2MC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxlZ2FjeShkaWdlc3QpIHtcbiAgICByZXR1cm4gQ0lELmNyZWF0ZSgwLCBEQUdfUEJfQ09ERSwgZGlnZXN0KTtcbn1cbi8qKlxuICogU2ltcGxpZmllZCB2ZXJzaW9uIG9mIGBjcmVhdGVgIGZvciBDSUR2MS5cbiAqXG4gKiBAcGFyYW0gY29kZSAtIENvbnRlbnQgZW5jb2RpbmcgZm9ybWF0IGNvZGUuXG4gKiBAcGFyYW0gZGlnZXN0IC0gTWlsdGloYXNoIG9mIHRoZSBjb250ZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIHJldHVybiBDSUQuY3JlYXRlKDEsIGNvZGUsIGRpZ2VzdCk7XG59XG4vKipcbiAqIFR5cGUgcHJlZGljYXRlIHJldHVybnMgdHJ1ZSBpZiB2YWx1ZSBpcyB0aGUgbGluay5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTGluayh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3Qgd2l0aFNsYXNoID0gdmFsdWU7XG4gICAgaWYgKHdpdGhTbGFzaFsnLyddICE9IG51bGwgJiYgd2l0aFNsYXNoWycvJ10gPT09IHdpdGhTbGFzaC5ieXRlcykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3Qgd2l0aEFzQ0lEID0gdmFsdWU7XG4gICAgaWYgKHdpdGhBc0NJRC5hc0NJRCA9PT0gdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogVGFrZXMgY2lkIGluIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIGFuZCBjcmVhdGVzIGFuIGluc3RhbmNlLiBJZiBgYmFzZWBcbiAqIGRlY29kZXIgaXMgbm90IHByb3ZpZGVkIHdpbGwgdXNlIGEgZGVmYXVsdCBmcm9tIHRoZSBjb25maWd1cmF0aW9uLiBJdCB3aWxsXG4gKiB0aHJvdyBhbiBlcnJvciBpZiBlbmNvZGluZyBvZiB0aGUgQ0lEIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggc3VwcGxpZWQgKG9yXG4gKiBhIGRlZmF1bHQgZGVjb2RlcikuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZShzb3VyY2UsIGJhc2UpIHtcbiAgICByZXR1cm4gQ0lELnBhcnNlKHNvdXJjZSwgYmFzZSk7XG59XG5leHBvcnQgeyBmb3JtYXQsIHRvSlNPTiwgZnJvbUpTT04gfTtcbi8qKlxuICogRGVjb2RlZCBhIENJRCBmcm9tIGl0cyBiaW5hcnkgcmVwcmVzZW50YXRpb24uIFRoZSBieXRlIGFycmF5IG11c3QgY29udGFpblxuICogb25seSB0aGUgQ0lEIHdpdGggbm8gYWRkaXRpb25hbCBieXRlcy5cbiAqXG4gKiBBbiBlcnJvciB3aWxsIGJlIHRocm93biBpZiB0aGUgYnl0ZXMgcHJvdmlkZWQgZG8gbm90IGNvbnRhaW4gYSB2YWxpZFxuICogYmluYXJ5IHJlcHJlc2VudGF0aW9uIG9mIGEgQ0lELlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGJ5dGVzKSB7XG4gICAgcmV0dXJuIENJRC5kZWNvZGUoYnl0ZXMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGluay5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link/interface.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link/interface.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcz80OTc3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/varint.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/varint.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDakM7QUFDUCxpQkFBaUIseURBQU07QUFDdkIsa0JBQWtCLHlEQUFNO0FBQ3hCO0FBQ087QUFDUCxJQUFJLHlEQUFNO0FBQ1Y7QUFDQTtBQUNPO0FBQ1AsV0FBVyx5REFBTTtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzP2RmZDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhcmludCBmcm9tICcuL3ZlbmRvci92YXJpbnQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgY29kZSA9IHZhcmludC5kZWNvZGUoZGF0YSwgb2Zmc2V0KTtcbiAgICByZXR1cm4gW2NvZGUsIHZhcmludC5kZWNvZGUuYnl0ZXNdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRvKGludCwgdGFyZ2V0LCBvZmZzZXQgPSAwKSB7XG4gICAgdmFyaW50LmVuY29kZShpbnQsIHRhcmdldCwgb2Zmc2V0KTtcbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kaW5nTGVuZ3RoKGludCkge1xuICAgIHJldHVybiB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoaW50KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhcmludC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/vendor/varint.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxZQUFZLEVBQUM7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzPzQ5MmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBlbmNvZGVfMSA9IGVuY29kZTtcbnZhciBNU0IgPSAweDgwLCBSRVNUID0gMHg3RiwgTVNCQUxMID0gflJFU1QsIElOVCA9IE1hdGgucG93KDIsIDMxKTtcbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bVxuICogQHBhcmFtIHtudW1iZXJbXX0gb3V0XG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKi9cbmZ1bmN0aW9uIGVuY29kZShudW0sIG91dCwgb2Zmc2V0KSB7XG4gICAgb3V0ID0gb3V0IHx8IFtdO1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuICAgIHZhciBvbGRPZmZzZXQgPSBvZmZzZXQ7XG4gICAgd2hpbGUgKG51bSA+PSBJTlQpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtIC89IDEyODtcbiAgICB9XG4gICAgd2hpbGUgKG51bSAmIE1TQkFMTCkge1xuICAgICAgICBvdXRbb2Zmc2V0KytdID0gKG51bSAmIDB4RkYpIHwgTVNCO1xuICAgICAgICBudW0gPj4+PSA3O1xuICAgIH1cbiAgICBvdXRbb2Zmc2V0XSA9IG51bSB8IDA7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGVuY29kZS5ieXRlcyA9IG9mZnNldCAtIG9sZE9mZnNldCArIDE7XG4gICAgcmV0dXJuIG91dDtcbn1cbnZhciBkZWNvZGUgPSByZWFkO1xudmFyIE1TQiQxID0gMHg4MCwgUkVTVCQxID0gMHg3Rjtcbi8qKlxuICogQHBhcmFtIHtzdHJpbmcgfCBhbnlbXX0gYnVmXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKi9cbmZ1bmN0aW9uIHJlYWQoYnVmLCBvZmZzZXQpIHtcbiAgICB2YXIgcmVzID0gMCwgb2Zmc2V0ID0gb2Zmc2V0IHx8IDAsIHNoaWZ0ID0gMCwgY291bnRlciA9IG9mZnNldCwgYiwgbCA9IGJ1Zi5sZW5ndGg7XG4gICAgZG8ge1xuICAgICAgICBpZiAoY291bnRlciA+PSBsKSB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICByZWFkLmJ5dGVzID0gMDtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdDb3VsZCBub3QgZGVjb2RlIHZhcmludCcpO1xuICAgICAgICB9XG4gICAgICAgIGIgPSBidWZbY291bnRlcisrXTtcbiAgICAgICAgcmVzICs9IHNoaWZ0IDwgMjhcbiAgICAgICAgICAgID8gKGIgJiBSRVNUJDEpIDw8IHNoaWZ0XG4gICAgICAgICAgICA6IChiICYgUkVTVCQxKSAqIE1hdGgucG93KDIsIHNoaWZ0KTtcbiAgICAgICAgc2hpZnQgKz0gNztcbiAgICB9IHdoaWxlIChiID49IE1TQiQxKTtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmVhZC5ieXRlcyA9IGNvdW50ZXIgLSBvZmZzZXQ7XG4gICAgcmV0dXJuIHJlcztcbn1cbnZhciBOMSA9IE1hdGgucG93KDIsIDcpO1xudmFyIE4yID0gTWF0aC5wb3coMiwgMTQpO1xudmFyIE4zID0gTWF0aC5wb3coMiwgMjEpO1xudmFyIE40ID0gTWF0aC5wb3coMiwgMjgpO1xudmFyIE41ID0gTWF0aC5wb3coMiwgMzUpO1xudmFyIE42ID0gTWF0aC5wb3coMiwgNDIpO1xudmFyIE43ID0gTWF0aC5wb3coMiwgNDkpO1xudmFyIE44ID0gTWF0aC5wb3coMiwgNTYpO1xudmFyIE45ID0gTWF0aC5wb3coMiwgNjMpO1xudmFyIGxlbmd0aCA9IGZ1bmN0aW9uICgvKiogQHR5cGUge251bWJlcn0gKi8gdmFsdWUpIHtcbiAgICByZXR1cm4gKHZhbHVlIDwgTjEgPyAxXG4gICAgICAgIDogdmFsdWUgPCBOMiA/IDJcbiAgICAgICAgICAgIDogdmFsdWUgPCBOMyA/IDNcbiAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjQgPyA0XG4gICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONSA/IDVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONiA/IDZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjcgPyA3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBOOCA/IDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBOOSA/IDlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IDEwKTtcbn07XG52YXIgdmFyaW50ID0ge1xuICAgIGVuY29kZTogZW5jb2RlXzEsXG4gICAgZGVjb2RlOiBkZWNvZGUsXG4gICAgZW5jb2RpbmdMZW5ndGg6IGxlbmd0aFxufTtcbnZhciBfYnJycF92YXJpbnQgPSB2YXJpbnQ7XG5leHBvcnQgZGVmYXVsdCBfYnJycF92YXJpbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/alloc.node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/alloc.node.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nfunction alloc(size = 0) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(size));\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nfunction allocUnsafe(size = 0) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.allocUnsafe(size));\n}\n//# sourceMappingURL=alloc.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9hbGxvYy5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDYztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxpRUFBWSxDQUFDLCtDQUFNO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxpRUFBWSxDQUFDLCtDQUFNO0FBQzlCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2FsbG9jLm5vZGUuanM/M2MxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tICdub2RlOmJ1ZmZlcic7XG5pbXBvcnQgeyBhc1VpbnQ4QXJyYXkgfSBmcm9tICcjdXRpbC9hcy11aW50OGFycmF5Jztcbi8qKlxuICogUmV0dXJucyBhIGBVaW50OEFycmF5YCBvZiB0aGUgcmVxdWVzdGVkIHNpemUuIFJlZmVyZW5jZWQgbWVtb3J5IHdpbGxcbiAqIGJlIGluaXRpYWxpemVkIHRvIDAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhbGxvYyhzaXplID0gMCkge1xuICAgIHJldHVybiBhc1VpbnQ4QXJyYXkoQnVmZmVyLmFsbG9jKHNpemUpKTtcbn1cbi8qKlxuICogV2hlcmUgcG9zc2libGUgcmV0dXJucyBhIFVpbnQ4QXJyYXkgb2YgdGhlIHJlcXVlc3RlZCBzaXplIHRoYXQgcmVmZXJlbmNlc1xuICogdW5pbml0aWFsaXplZCBtZW1vcnkuIE9ubHkgdXNlIGlmIHlvdSBhcmUgY2VydGFpbiB5b3Ugd2lsbCBpbW1lZGlhdGVseVxuICogb3ZlcndyaXRlIGV2ZXJ5IHZhbHVlIGluIHRoZSByZXR1cm5lZCBgVWludDhBcnJheWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhbGxvY1Vuc2FmZShzaXplID0gMCkge1xuICAgIHJldHVybiBhc1VpbnQ4QXJyYXkoQnVmZmVyLmFsbG9jVW5zYWZlKHNpemUpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFsbG9jLm5vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/alloc.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/compare.node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/compare.node.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n\n/**\n * Can be used with Array.sort to sort and array with Uint8Array entries\n */\nfunction compare(a, b) {\n    return node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.compare(a, b);\n}\n//# sourceMappingURL=compare.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9jb21wYXJlLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLCtDQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2Jsb2ItaW5kZXgvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2NvbXBhcmUubm9kZS5qcz8zYmRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gJ25vZGU6YnVmZmVyJztcbi8qKlxuICogQ2FuIGJlIHVzZWQgd2l0aCBBcnJheS5zb3J0IHRvIHNvcnQgYW5kIGFycmF5IHdpdGggVWludDhBcnJheSBlbnRyaWVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKGEsIGIpIHtcbiAgICByZXR1cm4gQnVmZmVyLmNvbXBhcmUoYSwgYik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wYXJlLm5vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/compare.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/concat.node.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/concat.node.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Uint8Arrays\n */\nfunction concat(arrays, length) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat(arrays, length));\n}\n//# sourceMappingURL=concat.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9jb25jYXQubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDYztBQUNuRDtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsaUVBQVksQ0FBQywrQ0FBTTtBQUM5QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9jb25jYXQubm9kZS5qcz84OTk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gJ25vZGU6YnVmZmVyJztcbmltcG9ydCB7IGFzVWludDhBcnJheSB9IGZyb20gJyN1dGlsL2FzLXVpbnQ4YXJyYXknO1xuLyoqXG4gKiBSZXR1cm5zIGEgbmV3IFVpbnQ4QXJyYXkgY3JlYXRlZCBieSBjb25jYXRlbmF0aW5nIHRoZSBwYXNzZWQgVWludDhBcnJheXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdChhcnJheXMsIGxlbmd0aCkge1xuICAgIHJldHVybiBhc1VpbnQ4QXJyYXkoQnVmZmVyLmNvbmNhdChhcnJheXMsIGxlbmd0aCkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uY2F0Lm5vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/concat.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/equals.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/equals.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9lcXVhbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvZXF1YWxzLmpzP2ZlNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIHR3byBwYXNzZWQgVWludDhBcnJheXMgaGF2ZSB0aGUgc2FtZSBjb250ZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlcXVhbHMoYSwgYikge1xuICAgIGlmIChhID09PSBiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoYS5ieXRlTGVuZ3RoICE9PSBiLmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEuYnl0ZUxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcXVhbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/equals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/from-string.node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/from-string.node.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromString: () => (/* binding */ fromString)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/bases.js\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nfunction fromString(string, encoding = 'utf8') {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n        return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_2__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9mcm9tLXN0cmluZy5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDRztBQUNXO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQkFBaUIsc0RBQUs7QUFDdEI7QUFDQSxpREFBaUQsU0FBUztBQUMxRDtBQUNBO0FBQ0EsZUFBZSxpRUFBWSxDQUFDLCtDQUFNO0FBQ2xDO0FBQ0E7QUFDQSxrQ0FBa0MsWUFBWSxFQUFFLE9BQU8sSUFBSTtBQUMzRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9mcm9tLXN0cmluZy5ub2RlLmpzPzc3MjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSAnbm9kZTpidWZmZXInO1xuaW1wb3J0IGJhc2VzLCB7fSBmcm9tICcuL3V0aWwvYmFzZXMuanMnO1xuaW1wb3J0IHsgYXNVaW50OEFycmF5IH0gZnJvbSAnI3V0aWwvYXMtdWludDhhcnJheSc7XG4vKipcbiAqIENyZWF0ZSBhIGBVaW50OEFycmF5YCBmcm9tIHRoZSBwYXNzZWQgc3RyaW5nXG4gKlxuICogU3VwcG9ydHMgYHV0ZjhgLCBgdXRmLThgLCBgaGV4YCwgYW5kIGFueSBlbmNvZGluZyBzdXBwb3J0ZWQgYnkgdGhlIG11bHRpZm9ybWF0cyBtb2R1bGUuXG4gKlxuICogQWxzbyBgYXNjaWlgIHdoaWNoIGlzIHNpbWlsYXIgdG8gbm9kZSdzICdiaW5hcnknIGVuY29kaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbVN0cmluZyhzdHJpbmcsIGVuY29kaW5nID0gJ3V0ZjgnKSB7XG4gICAgY29uc3QgYmFzZSA9IGJhc2VzW2VuY29kaW5nXTtcbiAgICBpZiAoYmFzZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZW5jb2RpbmcgXCIke2VuY29kaW5nfVwiYCk7XG4gICAgfVxuICAgIGlmIChlbmNvZGluZyA9PT0gJ3V0ZjgnIHx8IGVuY29kaW5nID09PSAndXRmLTgnKSB7XG4gICAgICAgIHJldHVybiBhc1VpbnQ4QXJyYXkoQnVmZmVyLmZyb20oc3RyaW5nLCAndXRmLTgnKSk7XG4gICAgfVxuICAgIC8vIGFkZCBtdWx0aWJhc2UgcHJlZml4XG4gICAgcmV0dXJuIGJhc2UuZGVjb2Rlci5kZWNvZGUoYCR7YmFzZS5wcmVmaXh9JHtzdHJpbmd9YCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3Jlc3RyaWN0LXRlbXBsYXRlLWV4cHJlc3Npb25zXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mcm9tLXN0cmluZy5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/from-string.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* reexport safe */ _compare__WEBPACK_IMPORTED_MODULE_2__.compare),\n/* harmony export */   concat: () => (/* reexport safe */ _concat__WEBPACK_IMPORTED_MODULE_3__.concat),\n/* harmony export */   equals: () => (/* reexport safe */ _equals_js__WEBPACK_IMPORTED_MODULE_0__.equals),\n/* harmony export */   fromString: () => (/* reexport safe */ _from_string__WEBPACK_IMPORTED_MODULE_4__.fromString),\n/* harmony export */   toString: () => (/* reexport safe */ _to_string__WEBPACK_IMPORTED_MODULE_5__.toString),\n/* harmony export */   xor: () => (/* reexport safe */ _xor_js__WEBPACK_IMPORTED_MODULE_1__.xor)\n/* harmony export */ });\n/* harmony import */ var _equals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./equals.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/equals.js\");\n/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xor.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/xor.js\");\n/* harmony import */ var _compare__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! #compare */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/compare.node.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! #concat */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/concat.node.js\");\n/* harmony import */ var _from_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! #from-string */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/from-string.node.js\");\n/* harmony import */ var _to_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! #to-string */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/to-string.node.js\");\n/**\n * @packageDocumentation\n *\n * `Uint8Array`s bring memory-efficient(ish) byte handling to browsers - they are similar to Node.js `Buffer`s but lack a lot of the utility methods present on that class.\n *\n * This module exports a number of function that let you do common operations - joining Uint8Arrays together, seeing if they have the same contents etc.\n *\n * Since Node.js `Buffer`s are also `Uint8Array`s, it falls back to `Buffer` internally where it makes sense for performance reasons.\n *\n * ## alloc(size)\n *\n * Create a new `Uint8Array`. When running under Node.js, `Buffer` will be used in preference to `Uint8Array`.\n *\n * ### Example\n *\n * ```js\n * import { alloc } from 'uint8arrays/alloc'\n *\n * const buf = alloc(100)\n * ```\n *\n * ## allocUnsafe(size)\n *\n * Create a new `Uint8Array`. When running under Node.js, `Buffer` will be used in preference to `Uint8Array`.\n *\n * On platforms that support it, memory referenced by the returned `Uint8Array` will not be initialized.\n *\n * ### Example\n *\n * ```js\n * import { allocUnsafe } from 'uint8arrays/alloc'\n *\n * const buf = allocUnsafe(100)\n * ```\n *\n * ## compare(a, b)\n *\n * Compare two `Uint8Arrays`\n *\n * ### Example\n *\n * ```js\n * import { compare } from 'uint8arrays/compare'\n *\n * const arrays = [\n *   Uint8Array.from([3, 4, 5]),\n *   Uint8Array.from([0, 1, 2])\n * ]\n *\n * const sorted = arrays.sort(compare)\n *\n * console.info(sorted)\n * // [\n * //    Uint8Array[0, 1, 2]\n * //    Uint8Array[3, 4, 5]\n * // ]\n * ```\n *\n * ## concat(arrays, \\[length])\n *\n * Concatenate one or more `Uint8Array`s and return a `Uint8Array` with their contents.\n *\n * If you know the length of the arrays, pass it as a second parameter, otherwise it will be calculated by traversing the list of arrays.\n *\n * ### Example\n *\n * ```js\n * import { concat } from 'uint8arrays/concat'\n *\n * const arrays = [\n *   Uint8Array.from([0, 1, 2]),\n *   Uint8Array.from([3, 4, 5])\n * ]\n *\n * const all = concat(arrays, 6)\n *\n * console.info(all)\n * // Uint8Array[0, 1, 2, 3, 4, 5]\n * ```\n *\n * ## equals(a, b)\n *\n * Returns true if the two arrays are the same array or if they have the same length and contents.\n *\n * ### Example\n *\n * ```js\n * import { equals } from 'uint8arrays/equals'\n *\n * const a = Uint8Array.from([0, 1, 2])\n * const b = Uint8Array.from([3, 4, 5])\n * const c = Uint8Array.from([0, 1, 2])\n *\n * console.info(equals(a, b)) // false\n * console.info(equals(a, c)) // true\n * console.info(equals(a, a)) // true\n * ```\n *\n * ## fromString(string, encoding = 'utf8')\n *\n * Returns a new `Uint8Array` created from the passed string and interpreted as the passed encoding.\n *\n * Supports `utf8` and any of the [multibase encodings](https://github.com/multiformats/multibase/blob/master/multibase.csv) as implemented by the [multiformats module](https://www.npmjs.com/package/multiformats).\n *\n * ### Example\n *\n * ```js\n * import { fromString } from 'uint8arrays/from-string'\n *\n * console.info(fromString('hello world')) // Uint8Array[104, 101 ...\n * console.info(fromString('00010203aabbcc', 'base16')) // Uint8Array[0, 1 ...\n * console.info(fromString('AAECA6q7zA', 'base64')) // Uint8Array[0, 1 ...\n * console.info(fromString('01234', 'ascii')) // Uint8Array[48, 49 ...\n * ```\n *\n * ## toString(array, encoding = 'utf8')\n *\n * Returns a string created from the passed `Uint8Array` in the passed encoding.\n *\n * Supports `utf8` and any of the [multibase encodings](https://github.com/multiformats/multibase/blob/master/multibase.csv) as implemented by the [multiformats module](https://www.npmjs.com/package/multiformats).\n *\n * ### Example\n *\n * ```js\n * import { toString } from 'uint8arrays/to-string'\n *\n * console.info(toString(Uint8Array.from([104, 101...]))) // 'hello world'\n * console.info(toString(Uint8Array.from([0, 1, 2...]), 'base16')) // '00010203aabbcc'\n * console.info(toString(Uint8Array.from([0, 1, 2...]), 'base64')) // 'AAECA6q7zA'\n * console.info(toString(Uint8Array.from([48, 49, 50...]), 'ascii')) // '01234'\n * ```\n *\n * ## xor(a, b)\n *\n * Returns a `Uint8Array` containing `a` and `b` xored together.\n *\n * ### Example\n *\n * ```js\n * import { xor } from 'uint8arrays/xor'\n *\n * console.info(xor(Uint8Array.from([1, 0]), Uint8Array.from([0, 1]))) // Uint8Array[1, 1]\n * ```\n *\n * ## xorCompare(a, b)\n *\n * Compares the distances between two xor `Uint8Array`s.\n *\n * ### Example\n *\n * ```ts\n * import { xor } from 'uint8arrays/xor'\n * import { xorCompare } from 'uint8arrays/xor-compare'\n *\n * const target = Uint8Array.from([1, 1])\n * const val1 = Uint8Array.from([1, 0])\n * const xor1 = xor(target, val1)\n *\n * const val2 = Uint8Array.from([0, 1])\n * const xor2 = xor(target, val2)\n *\n * console.info(xorCompare(xor1, xor2)) // -1 or 0 or 1\n * ```\n */\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/to-string.node.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/to-string.node.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/bases.js\");\n\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nfunction toString(array, encoding = 'utf8') {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n        return node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy90by1zdHJpbmcubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDRztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUJBQWlCLHNEQUFLO0FBQ3RCO0FBQ0EsaURBQWlELFNBQVM7QUFDMUQ7QUFDQTtBQUNBLGVBQWUsK0NBQU07QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvdG8tc3RyaW5nLm5vZGUuanM/ZmZkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tICdub2RlOmJ1ZmZlcic7XG5pbXBvcnQgYmFzZXMsIHt9IGZyb20gJy4vdXRpbC9iYXNlcy5qcyc7XG4vKipcbiAqIFR1cm5zIGEgYFVpbnQ4QXJyYXlgIGludG8gYSBzdHJpbmcuXG4gKlxuICogU3VwcG9ydHMgYHV0ZjhgLCBgdXRmLThgIGFuZCBhbnkgZW5jb2Rpbmcgc3VwcG9ydGVkIGJ5IHRoZSBtdWx0aWJhc2UgbW9kdWxlLlxuICpcbiAqIEFsc28gYGFzY2lpYCB3aGljaCBpcyBzaW1pbGFyIHRvIG5vZGUncyAnYmluYXJ5JyBlbmNvZGluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvU3RyaW5nKGFycmF5LCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICAgIGNvbnN0IGJhc2UgPSBiYXNlc1tlbmNvZGluZ107XG4gICAgaWYgKGJhc2UgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHtlbmNvZGluZ31cImApO1xuICAgIH1cbiAgICBpZiAoZW5jb2RpbmcgPT09ICd1dGY4JyB8fCBlbmNvZGluZyA9PT0gJ3V0Zi04Jykge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oYXJyYXkuYnVmZmVyLCBhcnJheS5ieXRlT2Zmc2V0LCBhcnJheS5ieXRlTGVuZ3RoKS50b1N0cmluZygndXRmOCcpO1xuICAgIH1cbiAgICAvLyBzdHJpcCBtdWx0aWJhc2UgcHJlZml4XG4gICAgcmV0dXJuIGJhc2UuZW5jb2Rlci5lbmNvZGUoYXJyYXkpLnN1YnN0cmluZygxKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRvLXN0cmluZy5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/to-string.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asUint8Array: () => (/* binding */ asUint8Array)\n/* harmony export */ });\n/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nfunction asUint8Array(buf) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n}\n//# sourceMappingURL=as-uint8array.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy91dGlsL2FzLXVpbnQ4YXJyYXkubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvdXRpbC9hcy11aW50OGFycmF5Lm5vZGUuanM/YjAyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRvIGd1YXJhbnRlZSBVaW50OEFycmF5IHNlbWFudGljcywgY29udmVydCBub2RlanMgQnVmZmVyc1xuICogaW50byB2YW5pbGxhIFVpbnQ4QXJyYXlzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc1VpbnQ4QXJyYXkoYnVmKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1Zi5idWZmZXIsIGJ1Zi5ieXRlT2Zmc2V0LCBidWYuYnl0ZUxlbmd0aCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcy11aW50OGFycmF5Lm5vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/bases.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/bases.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/multiformats/dist/src/basics.js\");\n/* harmony import */ var _alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #alloc */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/alloc.node.js\");\n\n\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = (0,_alloc__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);\n//# sourceMappingURL=bases.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy91dGlsL2Jhc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNQO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLGdCQUFnQixtREFBVztBQUMzQixvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFLO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsT0FBTyxzREFBSztBQUNaO0FBQ0EsaUVBQWUsS0FBSyxFQUFDO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy91dGlsL2Jhc2VzLmpzP2JhMjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZXMgfSBmcm9tICdtdWx0aWZvcm1hdHMvYmFzaWNzJztcbmltcG9ydCB7IGFsbG9jVW5zYWZlIH0gZnJvbSAnI2FsbG9jJztcbmZ1bmN0aW9uIGNyZWF0ZUNvZGVjKG5hbWUsIHByZWZpeCwgZW5jb2RlLCBkZWNvZGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lLFxuICAgICAgICBwcmVmaXgsXG4gICAgICAgIGVuY29kZXI6IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBwcmVmaXgsXG4gICAgICAgICAgICBlbmNvZGVcbiAgICAgICAgfSxcbiAgICAgICAgZGVjb2Rlcjoge1xuICAgICAgICAgICAgZGVjb2RlXG4gICAgICAgIH1cbiAgICB9O1xufVxuY29uc3Qgc3RyaW5nID0gY3JlYXRlQ29kZWMoJ3V0ZjgnLCAndScsIChidWYpID0+IHtcbiAgICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCd1dGY4Jyk7XG4gICAgcmV0dXJuICd1JyArIGRlY29kZXIuZGVjb2RlKGJ1Zik7XG59LCAoc3RyKSA9PiB7XG4gICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgIHJldHVybiBlbmNvZGVyLmVuY29kZShzdHIuc3Vic3RyaW5nKDEpKTtcbn0pO1xuY29uc3QgYXNjaWkgPSBjcmVhdGVDb2RlYygnYXNjaWknLCAnYScsIChidWYpID0+IHtcbiAgICBsZXQgc3RyaW5nID0gJ2EnO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnVmLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSk7XG4gICAgfVxuICAgIHJldHVybiBzdHJpbmc7XG59LCAoc3RyKSA9PiB7XG4gICAgc3RyID0gc3RyLnN1YnN0cmluZygxKTtcbiAgICBjb25zdCBidWYgPSBhbGxvY1Vuc2FmZShzdHIubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICBidWZbaV0gPSBzdHIuY2hhckNvZGVBdChpKTtcbiAgICB9XG4gICAgcmV0dXJuIGJ1Zjtcbn0pO1xuY29uc3QgQkFTRVMgPSB7XG4gICAgdXRmODogc3RyaW5nLFxuICAgICd1dGYtOCc6IHN0cmluZyxcbiAgICBoZXg6IGJhc2VzLmJhc2UxNixcbiAgICBsYXRpbjE6IGFzY2lpLFxuICAgIGFzY2lpLFxuICAgIGJpbmFyeTogYXNjaWksXG4gICAgLi4uYmFzZXNcbn07XG5leHBvcnQgZGVmYXVsdCBCQVNFUztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/bases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/xor.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/xor.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xor: () => (/* binding */ xor)\n/* harmony export */ });\n/* harmony import */ var _alloc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! #alloc */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n/**\n * Returns the xor distance between two Uint8Arrays\n */\nfunction xor(a, b) {\n    if (a.length !== b.length) {\n        throw new Error('Inputs should have the same length');\n    }\n    const result = (0,_alloc__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(a.length);\n    for (let i = 0; i < a.length; i++) {\n        result[i] = a[i] ^ b[i];\n    }\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(result);\n}\n//# sourceMappingURL=xor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9ibG9iLWluZGV4L25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy94b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ2M7QUFDbkQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbURBQVc7QUFDOUIsb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBLFdBQVcsaUVBQVk7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMveG9yLmpzPzAzZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWxsb2NVbnNhZmUgfSBmcm9tICcjYWxsb2MnO1xuaW1wb3J0IHsgYXNVaW50OEFycmF5IH0gZnJvbSAnI3V0aWwvYXMtdWludDhhcnJheSc7XG4vKipcbiAqIFJldHVybnMgdGhlIHhvciBkaXN0YW5jZSBiZXR3ZWVuIHR3byBVaW50OEFycmF5c1xuICovXG5leHBvcnQgZnVuY3Rpb24geG9yKGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW5wdXRzIHNob3VsZCBoYXZlIHRoZSBzYW1lIGxlbmd0aCcpO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBhbGxvY1Vuc2FmZShhLmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJlc3VsdFtpXSA9IGFbaV0gXiBiW2ldO1xuICAgIH1cbiAgICByZXR1cm4gYXNVaW50OEFycmF5KHJlc3VsdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD14b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/blob-index/node_modules/uint8arrays/dist/src/xor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/node_modules/uint8arrays/dist/src/equals.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/node_modules/uint8arrays/dist/src/equals.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2VxdWFscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2VxdWFscy5qcz8wNzZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSB0d28gcGFzc2VkIFVpbnQ4QXJyYXlzIGhhdmUgdGhlIHNhbWUgY29udGVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKGEuYnl0ZUxlbmd0aCAhPT0gYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXF1YWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/node_modules/uint8arrays/dist/src/equals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/access.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/access.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Account: () => (/* binding */ Account),\n/* harmony export */   AuthorizationRequest: () => (/* binding */ AuthorizationRequest),\n/* harmony export */   CapabilityRequest: () => (/* binding */ CapabilityRequest),\n/* harmony export */   access: () => (/* binding */ access),\n/* harmony export */   authorize: () => (/* binding */ authorize),\n/* harmony export */   claim: () => (/* binding */ claim),\n/* harmony export */   confirm: () => (/* binding */ confirm),\n/* harmony export */   delegate: () => (/* binding */ delegate),\n/* harmony export */   session: () => (/* binding */ session),\n/* harmony export */   top: () => (/* reexport safe */ _top_js__WEBPACK_IMPORTED_MODULE_4__.top)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/ucan.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var _top_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./top.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/top.js\");\n/**\n * Access Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Access from '@web3-storage/capabilities/access'\n * ```\n *\n * @module\n */\n\n\n\n\n\n\n/**\n * @deprecated - Use `ucan.attest` instead.\n */\nconst session = _ucan_js__WEBPACK_IMPORTED_MODULE_2__.attest\n\n/**\n * Account identifier.\n */\nconst Account = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'mailto' })\n\n/**\n * Describes the capability requested.\n */\nconst CapabilityRequest = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n  /**\n   * If set to `\"*\"` it corresponds to \"sudo\" access.\n   */\n  can: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string(),\n})\n\n/**\n * Authorization request describing set of desired capabilities.\n */\nconst AuthorizationRequest = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n  /**\n   * DID of the Account authorization is requested from.\n   */\n  iss: Account.optional(),\n  /**\n   * Capabilities agent wishes to be granted.\n   */\n  att: CapabilityRequest.array(),\n})\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derived any `access/` prefixed capability for the agent identified\n * by did:key in the `with` field.\n */\nconst access = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'access/*',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.URI.match({ protocol: 'did:' }),\n})\n\n/**\n * Capability can be invoked by an agent to request set of capabilities from\n * the account.\n */\nconst authorize = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'access/authorize',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'key' }),\n  /**\n   * Authorization request describing set of desired capabilities\n   */\n  nb: AuthorizationRequest,\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.equal)(child.nb.iss, parent.nb.iss, 'iss')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)(subsetCapabilities(child.nb.att, parent.nb.att)) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability is delegated by us to the user allowing them to complete the\n * authorization flow. It allows us to ensure that user clicks the link and\n * we don't have some rogue agent trying to impersonate user clicking the link\n * in order to get access to their account.\n */\nconst confirm = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'access/confirm',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Link to the `access/authorize` request that this delegation was created\n     * for.\n     */\n    cause: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link({ version: 1 }),\n    iss: Account,\n    aud: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n    att: CapabilityRequest.array(),\n  }),\n  derives: (claim, proof) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.equalWith)(claim, proof)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.equal)(claim.nb.iss, proof.nb.iss, 'iss')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.equal)(claim.nb.aud, proof.nb.aud, 'aud')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)(subsetCapabilities(claim.nb.att, proof.nb.att)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkLink)(claim.nb.cause, proof.nb.cause, 'nb.cause')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\nconst claim = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'access/claim',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'key' }).or(_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'mailto' })),\n})\n\n// https://github.com/storacha/specs/blob/main/w3-access.md#accessdelegate\nconst delegate = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'access/delegate',\n  /**\n   * Field MUST be a space DID with a storage provider. Delegation will be stored just like any other DAG stored using store/add capability.\n   *\n   * @see https://github.com/storacha/specs/blob/main/w3-access.md#delegate-with\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_3__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    // keys SHOULD be CIDs, but we won't require it in the schema\n    /**\n     * @type {Schema.Schema<AccessDelegateDelegations>}\n     */\n    delegations: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.dictionary({\n      value: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.Link.match(),\n    }),\n  }),\n  derives: (claim, proof) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.equalWith)(claim, proof)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.and)(subsetsNbDelegations(claim, proof)) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * @typedef {Schema.Dictionary<string, Types.Link<unknown, number, number, 0 | 1>>} AccessDelegateDelegations\n */\n\n/**\n * Parsed Capability for access/delegate\n *\n * @typedef {object} ParsedAccessDelegate\n * @property {string} can\n * @property {object} nb\n * @property {AccessDelegateDelegations} [nb.delegations]\n */\n\n/**\n * returns whether the claimed ucan is proves by the proof ucan.\n * both are access/delegate, or at least have same semantics for `nb.delegations`, which is a set of delegations.\n * checks that the claimed delegation set is equal to or less than the proven delegation set.\n * usable with {import('@ucanto/interface').Derives}.\n *\n * @param {ParsedAccessDelegate} claim\n * @param {ParsedAccessDelegate} proof\n */\nfunction subsetsNbDelegations(claim, proof) {\n  const missingProofs = setDifference(\n    delegatedCids(claim),\n    new Set(delegatedCids(proof))\n  )\n  if (missingProofs.size > 0) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(`unauthorized nb.delegations ${[...missingProofs].join(', ')}`)\n  }\n  return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n}\n\n/**\n * Checks that set of requested capabilities is a subset of the capabilities\n * that had been allowed by the owner or the delegate.\n *\n * ⚠️ This function does not currently check that say `store/add` is allowed\n * when say `store/*` was delegated, because it seems very unlikely that we\n * will ever encounter delegations for `access/authorize` at all.\n *\n * @param {Schema.Infer<CapabilityRequest>[]} claim\n * @param {Schema.Infer<CapabilityRequest>[]} proof\n */\nconst subsetCapabilities = (claim, proof) => {\n  const allowed = new Set(proof.map((p) => p.can))\n  // If everything is allowed, no need to check further because it contains\n  // all the capabilities.\n  if (allowed.has('*')) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  }\n\n  // Otherwise we compute delta between what is allowed and what is requested.\n  const escalated = setDifference(\n    claim.map((c) => c.can),\n    allowed\n  )\n\n  if (escalated.size > 0) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(`unauthorized nb.att.can ${[...escalated].join(', ')}`)\n  }\n\n  return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n}\n\n/**\n * iterate delegated UCAN CIDs from an access/delegate capability.nb.delegations value.\n *\n * @param {ParsedAccessDelegate} delegate\n * @returns {Iterable<string>}\n */\nfunction* delegatedCids(delegate) {\n  for (const d of Object.values(delegate.nb.delegations || {})) {\n    yield d.toString()\n  }\n}\n\n/**\n * @template S\n * @param {Iterable<S>} minuend - set to subtract from\n * @param {Set<S>} subtrahend - subtracted from minuend\n */\nfunction setDifference(minuend, subtrahend) {\n  /** @type {Set<S>} */\n  const difference = new Set()\n  for (const e of minuend) {\n    if (!subtrahend.has(e)) {\n      difference.add(e)\n    }\n  }\n  return difference\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/access.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/admin.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/admin.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   admin: () => (/* binding */ admin),\n/* harmony export */   store: () => (/* binding */ store),\n/* harmony export */   upload: () => (/* binding */ upload)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\nconst admin = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'admin/*',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.ProviderDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith,\n})\n\nconst upload = {\n  /**\n   * Capability can be invoked by a provider to get information about a content CID.\n   */\n  inspect: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n    can: 'admin/upload/inspect',\n    with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.ProviderDID,\n    nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n      root: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link,\n    }),\n    derives: (child, parent) => {\n      return (\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.root, parent.nb.root, 'root')) ||\n        (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n      )\n    },\n  }),\n}\n\nconst store = {\n  /**\n   * Capability can be invoked by a provider to get information an upload shard CID.\n   */\n  inspect: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n    can: 'admin/store/inspect',\n    with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.ProviderDID,\n    nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n      link: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link,\n    }),\n    derives: (child, parent) => {\n      return (\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.link, parent.nb.link, 'link')) ||\n        (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n      )\n    },\n  }),\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2FkbWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdFO0FBQ0Q7O0FBRXhELGNBQWMsNkRBQVU7QUFDL0I7QUFDQSxRQUFRLGtEQUFXO0FBQ25CLFdBQVcsZ0RBQVM7QUFDcEIsQ0FBQzs7QUFFTTtBQUNQO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNkRBQVU7QUFDckI7QUFDQSxVQUFVLGtEQUFXO0FBQ3JCLFFBQVEseURBQU07QUFDZCxZQUFZLG1EQUFJO0FBQ2hCLEtBQUs7QUFDTDtBQUNBO0FBQ0EsUUFBUSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ3JCLFFBQVEsOENBQUcsQ0FBQyxnREFBSztBQUNqQixRQUFRLHFEQUFFLEdBQUc7QUFDYjtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZEQUFVO0FBQ3JCO0FBQ0EsVUFBVSxrREFBVztBQUNyQixRQUFRLHlEQUFNO0FBQ2QsWUFBWSxtREFBSTtBQUNoQixLQUFLO0FBQ0w7QUFDQTtBQUNBLFFBQVEsOENBQUcsQ0FBQyxvREFBUztBQUNyQixRQUFRLDhDQUFHLENBQUMsZ0RBQUs7QUFDakIsUUFBUSxxREFBRSxHQUFHO0FBQ2I7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2FkbWluLmpzP2U2ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2FwYWJpbGl0eSwgc3RydWN0LCBvaywgTGluayB9IGZyb20gJ0B1Y2FudG8vdmFsaWRhdG9yJ1xuaW1wb3J0IHsgZXF1YWxXaXRoLCBhbmQsIGVxdWFsLCBQcm92aWRlckRJRCB9IGZyb20gJy4vdXRpbHMuanMnXG5cbmV4cG9ydCBjb25zdCBhZG1pbiA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdhZG1pbi8qJyxcbiAgd2l0aDogUHJvdmlkZXJESUQsXG4gIGRlcml2ZXM6IGVxdWFsV2l0aCxcbn0pXG5cbmV4cG9ydCBjb25zdCB1cGxvYWQgPSB7XG4gIC8qKlxuICAgKiBDYXBhYmlsaXR5IGNhbiBiZSBpbnZva2VkIGJ5IGEgcHJvdmlkZXIgdG8gZ2V0IGluZm9ybWF0aW9uIGFib3V0IGEgY29udGVudCBDSUQuXG4gICAqL1xuICBpbnNwZWN0OiBjYXBhYmlsaXR5KHtcbiAgICBjYW46ICdhZG1pbi91cGxvYWQvaW5zcGVjdCcsXG4gICAgd2l0aDogUHJvdmlkZXJESUQsXG4gICAgbmI6IHN0cnVjdCh7XG4gICAgICByb290OiBMaW5rLFxuICAgIH0pLFxuICAgIGRlcml2ZXM6IChjaGlsZCwgcGFyZW50KSA9PiB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBhbmQoZXF1YWxXaXRoKGNoaWxkLCBwYXJlbnQpKSB8fFxuICAgICAgICBhbmQoZXF1YWwoY2hpbGQubmIucm9vdCwgcGFyZW50Lm5iLnJvb3QsICdyb290JykpIHx8XG4gICAgICAgIG9rKHt9KVxuICAgICAgKVxuICAgIH0sXG4gIH0pLFxufVxuXG5leHBvcnQgY29uc3Qgc3RvcmUgPSB7XG4gIC8qKlxuICAgKiBDYXBhYmlsaXR5IGNhbiBiZSBpbnZva2VkIGJ5IGEgcHJvdmlkZXIgdG8gZ2V0IGluZm9ybWF0aW9uIGFuIHVwbG9hZCBzaGFyZCBDSUQuXG4gICAqL1xuICBpbnNwZWN0OiBjYXBhYmlsaXR5KHtcbiAgICBjYW46ICdhZG1pbi9zdG9yZS9pbnNwZWN0JyxcbiAgICB3aXRoOiBQcm92aWRlckRJRCxcbiAgICBuYjogc3RydWN0KHtcbiAgICAgIGxpbms6IExpbmssXG4gICAgfSksXG4gICAgZGVyaXZlczogKGNoaWxkLCBwYXJlbnQpID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIGFuZChlcXVhbFdpdGgoY2hpbGQsIHBhcmVudCkpIHx8XG4gICAgICAgIGFuZChlcXVhbChjaGlsZC5uYi5saW5rLCBwYXJlbnQubmIubGluaywgJ2xpbmsnKSkgfHxcbiAgICAgICAgb2soe30pXG4gICAgICApXG4gICAgfSxcbiAgfSksXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/admin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/blob.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Schema: () => (/* reexport safe */ _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   blob: () => (/* binding */ blob),\n/* harmony export */   content: () => (/* binding */ content),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   list: () => (/* binding */ list),\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_equals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/equals */ \"(ssr)/./node_modules/@web3-storage/capabilities/node_modules/uint8arrays/dist/src/equals.js\");\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Blob Capabilities.\n *\n * Blob is a fixed size byte array addressed by the multihash.\n * Usually blobs are used to represent set of IPLD blocks at different byte ranges.\n *\n * These can be imported directly with:\n * ```js\n * import * as Blob from '@web3-storage/capabilities/blob'\n * ```\n *\n * @module\n */\n\n\n\n\n/**\n * Agent capabilities for Blob protocol\n */\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derived any `space/blob/` prefixed capability for the (memory) space identified\n * by DID in the `with` field.\n */\nconst blob = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/blob/*',\n  /**\n   * DID of the (memory) space where Blob is intended to\n   * be stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n\n/**\n * Blob description for being ingested by the service.\n */\nconst content = _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n  /**\n   * A multihash digest of the blob payload bytes, uniquely identifying blob.\n   */\n  digest: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.bytes(),\n  /**\n   * Number of bytes contained by this blob. Service will provision write target\n   * for this exact size. Attempt to write a larger Blob file will fail.\n   */\n  size: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.integer(),\n})\n\n/**\n * `space/blob/add` capability allows agent to store a Blob into a (memory) space\n * identified by did:key in the `with` field. Agent should compute blob multihash\n * and size and provide it under `nb.blob` field, allowing a service to provision\n * a write location for the agent to PUT desired Blob into.\n */\nconst add = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/blob/add',\n  /**\n   * DID of the (memory) space where Blob is intended to\n   * be stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n    /**\n     * Blob to be added on the space.\n     */\n    blob: content,\n  }),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalBlob,\n})\n\n/**\n * Capability can be used to remove the stored Blob from the (memory)\n * space identified by `with` field.\n */\nconst remove = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/blob/remove',\n  /**\n   * DID of the (memory) space where Blob is stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n    /**\n     * A multihash digest of the blob payload bytes, uniquely identifying blob.\n     */\n    digest: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.bytes(),\n  }),\n  derives: (claimed, delegated) => {\n    if (claimed.with !== delegated.with) {\n      return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.fail)(\n        `Expected 'with: \"${delegated.with}\"' instead got '${claimed.with}'`\n      )\n    } else if (\n      delegated.nb.digest &&\n      !(0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_0__.equals)(delegated.nb.digest, claimed.nb.digest)\n    ) {\n      return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.fail)(\n        `Link ${\n          claimed.nb.digest ? `${claimed.nb.digest}` : ''\n        } violates imposed ${delegated.nb.digest} constraint.`\n      )\n    }\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.ok)({})\n  },\n})\n\n/**\n * Capability can be invoked to request a list of stored Blobs in the\n * (memory) space identified by `with` field.\n */\nconst list = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/blob/list',\n  /**\n   * DID of the (memory) space where Blobs to be listed are stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n    /**\n     * A pointer that can be moved back and forth on the list.\n     * It can be used to paginate a list for instance.\n     */\n    cursor: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.string().optional(),\n    /**\n     * Maximum number of items per page.\n     */\n    size: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.integer().optional(),\n  }),\n  derives: (claimed, delegated) => {\n    if (claimed.with !== delegated.with) {\n      return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.fail)(\n        `Expected 'with: \"${delegated.with}\"' instead got '${claimed.with}'`\n      )\n    }\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.ok)({})\n  },\n})\n\n/**\n * Capability can be used to get the stored Blob from the (memory)\n * space identified by `with` field.\n */\nconst get = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/blob/get/0/1',\n  /**\n   * DID of the (memory) space where Blob is stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n    /**\n     * A multihash digest of the blob payload bytes, uniquely identifying blob.\n     */\n    digest: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.bytes(),\n  }),\n  derives: (claimed, delegated) => {\n    if (claimed.with !== delegated.with) {\n      return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.fail)(\n        `Expected 'with: \"${delegated.with}\"' instead got '${claimed.with}'`\n      )\n    } else if (\n      delegated.nb.digest &&\n      !(0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_0__.equals)(delegated.nb.digest, claimed.nb.digest)\n    ) {\n      return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.fail)(\n        `Link ${\n          claimed.nb.digest ? `${claimed.nb.digest}` : ''\n        } violates imposed ${delegated.nb.digest} constraint.`\n      )\n    }\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.ok)({})\n  },\n})\n\n// ⚠️ We export imports here so they are not omitted in generated typedefs\n// @see https://github.com/microsoft/TypeScript/issues/51548\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/console.js":
/*!****************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/console.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   console: () => (/* binding */ console),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   log: () => (/* binding */ log)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\nconst console = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'console/*',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith,\n})\n\n/**\n * Capability that succeeds with the `nb.value` value.\n */\nconst log = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'console/log',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    value: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.unknown(),\n  }),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith,\n})\n\n/**\n * Capability that fails with an error provided to `nb.error` field.\n */\nconst error = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'console/error',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    error: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.unknown(),\n  }),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith,\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2NvbnNvbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBc0Q7QUFDaEI7O0FBRS9CLGdCQUFnQiw2REFBVTtBQUNqQztBQUNBLFFBQVEseURBQVU7QUFDbEIsV0FBVyxnREFBUztBQUNwQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNPLFlBQVksNkRBQVU7QUFDN0I7QUFDQSxRQUFRLHlEQUFVO0FBQ2xCLE1BQU0sNERBQWE7QUFDbkIsV0FBVyw2REFBYztBQUN6QixHQUFHO0FBQ0gsV0FBVyxnREFBUztBQUNwQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNPLGNBQWMsNkRBQVU7QUFDL0I7QUFDQSxRQUFRLHlEQUFVO0FBQ2xCLE1BQU0sNERBQWE7QUFDbkIsV0FBVyw2REFBYztBQUN6QixHQUFHO0FBQ0gsV0FBVyxnREFBUztBQUNwQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2NvbnNvbGUuanM/YjFlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYXBhYmlsaXR5LCBTY2hlbWEgfSBmcm9tICdAdWNhbnRvL3ZhbGlkYXRvcidcbmltcG9ydCB7IGVxdWFsV2l0aCB9IGZyb20gJy4vdXRpbHMuanMnXG5cbmV4cG9ydCBjb25zdCBjb25zb2xlID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ2NvbnNvbGUvKicsXG4gIHdpdGg6IFNjaGVtYS5kaWQoKSxcbiAgZGVyaXZlczogZXF1YWxXaXRoLFxufSlcblxuLyoqXG4gKiBDYXBhYmlsaXR5IHRoYXQgc3VjY2VlZHMgd2l0aCB0aGUgYG5iLnZhbHVlYCB2YWx1ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGxvZyA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdjb25zb2xlL2xvZycsXG4gIHdpdGg6IFNjaGVtYS5kaWQoKSxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIHZhbHVlOiBTY2hlbWEudW5rbm93bigpLFxuICB9KSxcbiAgZGVyaXZlczogZXF1YWxXaXRoLFxufSlcblxuLyoqXG4gKiBDYXBhYmlsaXR5IHRoYXQgZmFpbHMgd2l0aCBhbiBlcnJvciBwcm92aWRlZCB0byBgbmIuZXJyb3JgIGZpZWxkLlxuICovXG5leHBvcnQgY29uc3QgZXJyb3IgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnY29uc29sZS9lcnJvcicsXG4gIHdpdGg6IFNjaGVtYS5kaWQoKSxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIGVycm9yOiBTY2hlbWEudW5rbm93bigpLFxuICB9KSxcbiAgZGVyaXZlczogZXF1YWxXaXRoLFxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/console.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/consumer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/consumer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProviderDID: () => (/* binding */ ProviderDID),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   has: () => (/* binding */ has)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\n// e.g. did:web:web3.storage or did:web:staging.web3.storage\nconst ProviderDID = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'web' })\n\n/**\n * Capability can be invoked by a provider to check if it has given space as\n * a consumer.\n */\nconst has = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'consumer/has',\n  with: ProviderDID,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    consumer: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.consumer, parent.nb.consumer, 'consumer')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability can be invoked by a provider to get information about a consumer.\n */\nconst get = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'consumer/get',\n  with: ProviderDID,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    consumer: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.consumer, parent.nb.consumer, 'consumer')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2NvbnN1bWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStEO0FBQ0g7O0FBRTVEO0FBQ08sb0JBQW9CLHdEQUFTLEdBQUcsZUFBZTs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyxZQUFZLDZEQUFVO0FBQzdCO0FBQ0E7QUFDQSxNQUFNLHlEQUFNO0FBQ1osY0FBYywrQ0FBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLHFEQUFFLEdBQUc7QUFDWDtBQUNBLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNPLFlBQVksNkRBQVU7QUFDN0I7QUFDQTtBQUNBLE1BQU0seURBQU07QUFDWixjQUFjLCtDQUFRO0FBQ3RCLEdBQUc7QUFDSDtBQUNBO0FBQ0EsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0sOENBQUcsQ0FBQyxnREFBSztBQUNmLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9zcmMvY29uc3VtZXIuanM/NGQ5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYXBhYmlsaXR5LCBESUQsIHN0cnVjdCwgb2sgfSBmcm9tICdAdWNhbnRvL3ZhbGlkYXRvcidcbmltcG9ydCB7IGVxdWFsV2l0aCwgYW5kLCBlcXVhbCwgU3BhY2VESUQgfSBmcm9tICcuL3V0aWxzLmpzJ1xuXG4vLyBlLmcuIGRpZDp3ZWI6d2ViMy5zdG9yYWdlIG9yIGRpZDp3ZWI6c3RhZ2luZy53ZWIzLnN0b3JhZ2VcbmV4cG9ydCBjb25zdCBQcm92aWRlckRJRCA9IERJRC5tYXRjaCh7IG1ldGhvZDogJ3dlYicgfSlcblxuLyoqXG4gKiBDYXBhYmlsaXR5IGNhbiBiZSBpbnZva2VkIGJ5IGEgcHJvdmlkZXIgdG8gY2hlY2sgaWYgaXQgaGFzIGdpdmVuIHNwYWNlIGFzXG4gKiBhIGNvbnN1bWVyLlxuICovXG5leHBvcnQgY29uc3QgaGFzID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ2NvbnN1bWVyL2hhcycsXG4gIHdpdGg6IFByb3ZpZGVyRElELFxuICBuYjogc3RydWN0KHtcbiAgICBjb25zdW1lcjogU3BhY2VESUQsXG4gIH0pLFxuICBkZXJpdmVzOiAoY2hpbGQsIHBhcmVudCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICBhbmQoZXF1YWxXaXRoKGNoaWxkLCBwYXJlbnQpKSB8fFxuICAgICAgYW5kKGVxdWFsKGNoaWxkLm5iLmNvbnN1bWVyLCBwYXJlbnQubmIuY29uc3VtZXIsICdjb25zdW1lcicpKSB8fFxuICAgICAgb2soe30pXG4gICAgKVxuICB9LFxufSlcblxuLyoqXG4gKiBDYXBhYmlsaXR5IGNhbiBiZSBpbnZva2VkIGJ5IGEgcHJvdmlkZXIgdG8gZ2V0IGluZm9ybWF0aW9uIGFib3V0IGEgY29uc3VtZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXQgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnY29uc3VtZXIvZ2V0JyxcbiAgd2l0aDogUHJvdmlkZXJESUQsXG4gIG5iOiBzdHJ1Y3Qoe1xuICAgIGNvbnN1bWVyOiBTcGFjZURJRCxcbiAgfSksXG4gIGRlcml2ZXM6IChjaGlsZCwgcGFyZW50KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIGFuZChlcXVhbFdpdGgoY2hpbGQsIHBhcmVudCkpIHx8XG4gICAgICBhbmQoZXF1YWwoY2hpbGQubmIuY29uc3VtZXIsIHBhcmVudC5uYi5jb25zdW1lciwgJ2NvbnN1bWVyJykpIHx8XG4gICAgICBvayh7fSlcbiAgICApXG4gIH0sXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/consumer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/customer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/customer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProviderDID: () => (/* binding */ ProviderDID),\n/* harmony export */   get: () => (/* binding */ get)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\n// e.g. did:web:web3.storage or did:web:staging.web3.storage\nconst ProviderDID = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'web' })\n\n/**\n * Capability can be invoked by a provider to get information about the\n * customer.\n */\nconst get = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'customer/get',\n  with: ProviderDID,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    customer: _utils_js__WEBPACK_IMPORTED_MODULE_1__.AccountDID,\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.customer, parent.nb.customer, 'customer')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2N1c3RvbWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0Q7QUFDRDs7QUFFOUQ7QUFDTyxvQkFBb0Isd0RBQVMsR0FBRyxlQUFlOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTtBQUNPLFlBQVksNkRBQVU7QUFDN0I7QUFDQTtBQUNBLE1BQU0seURBQU07QUFDWixjQUFjLGlEQUFVO0FBQ3hCLEdBQUc7QUFDSDtBQUNBO0FBQ0EsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0sOENBQUcsQ0FBQyxnREFBSztBQUNmLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9zcmMvY3VzdG9tZXIuanM/OWIyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYXBhYmlsaXR5LCBESUQsIHN0cnVjdCwgb2sgfSBmcm9tICdAdWNhbnRvL3ZhbGlkYXRvcidcbmltcG9ydCB7IEFjY291bnRESUQsIGVxdWFsV2l0aCwgYW5kLCBlcXVhbCB9IGZyb20gJy4vdXRpbHMuanMnXG5cbi8vIGUuZy4gZGlkOndlYjp3ZWIzLnN0b3JhZ2Ugb3IgZGlkOndlYjpzdGFnaW5nLndlYjMuc3RvcmFnZVxuZXhwb3J0IGNvbnN0IFByb3ZpZGVyRElEID0gRElELm1hdGNoKHsgbWV0aG9kOiAnd2ViJyB9KVxuXG4vKipcbiAqIENhcGFiaWxpdHkgY2FuIGJlIGludm9rZWQgYnkgYSBwcm92aWRlciB0byBnZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlXG4gKiBjdXN0b21lci5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldCA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdjdXN0b21lci9nZXQnLFxuICB3aXRoOiBQcm92aWRlckRJRCxcbiAgbmI6IHN0cnVjdCh7XG4gICAgY3VzdG9tZXI6IEFjY291bnRESUQsXG4gIH0pLFxuICBkZXJpdmVzOiAoY2hpbGQsIHBhcmVudCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICBhbmQoZXF1YWxXaXRoKGNoaWxkLCBwYXJlbnQpKSB8fFxuICAgICAgYW5kKGVxdWFsKGNoaWxkLm5iLmN1c3RvbWVyLCBwYXJlbnQubmIuY3VzdG9tZXIsICdjdXN0b21lcicpKSB8fFxuICAgICAgb2soe30pXG4gICAgKVxuICB9LFxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/customer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/aggregator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/filecoin/aggregator.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pieceAccept: () => (/* binding */ pieceAccept),\n/* harmony export */   pieceOffer: () => (/* binding */ pieceOffer)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Filecoin Aggregator Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Aggregator from '@web3-storage/capabilities/filecoin/aggregator'\n * ```\n *\n * @module\n */\n\n\n\n\n\n/**\n * Capability that allows a Storefront to request that a piece be aggregated\n * for inclusion in an upcoming an Filecoin deal.\n */\nconst pieceOffer = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'piece/offer',\n  /**\n   * DID of an authorized Storefront.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the piece.\n     */\n    piece: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n    /**\n     * Grouping of joining segments into an aggregate.\n     */\n    group: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.text(),\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.piece, from.nb.piece, 'nb.piece')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(claim.nb.group, from.nb.group, 'nb.group')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability that allows an Aggregator to signal a piece has been accepted\n * or rejected for inclusion in an aggregate.\n */\nconst pieceAccept = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'piece/accept',\n  /**\n   * DID of the Aggregator.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the piece.\n     *\n     * @see https://github.com/filecoin-project/FIPs/pull/758/files\n     */\n    piece: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n    /**\n     * Grouping of joining segments into an aggregate.\n     */\n    group: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.text(),\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.piece, from.nb.piece, 'nb.piece')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(claim.nb.group, from.nb.group, 'nb.group')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2ZpbGVjb2luL2FnZ3JlZ2F0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEQ7QUFDdEI7QUFDMEI7O0FBRTlEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUJBQW1CLDZEQUFVO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBVTtBQUNsQixNQUFNLDREQUFhO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOENBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsV0FBVywwREFBVztBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLGdEQUFLO0FBQ2YsTUFBTSxxREFBRSxHQUFHO0FBQ1g7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNPLG9CQUFvQiw2REFBVTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQVU7QUFDbEIsTUFBTSw0REFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBUztBQUNwQjtBQUNBO0FBQ0E7QUFDQSxXQUFXLDBEQUFXO0FBQ3RCLEdBQUc7QUFDSDtBQUNBO0FBQ0EsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLHFEQUFFLEdBQUc7QUFDWDtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2ZpbGVjb2luL2FnZ3JlZ2F0b3IuanM/NDAxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZpbGVjb2luIEFnZ3JlZ2F0b3IgQ2FwYWJpbGl0aWVzXG4gKlxuICogVGhlc2UgY2FuIGJlIGltcG9ydGVkIGRpcmVjdGx5IHdpdGg6XG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgQWdncmVnYXRvciBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9maWxlY29pbi9hZ2dyZWdhdG9yJ1xuICogYGBgXG4gKlxuICogQG1vZHVsZVxuICovXG5cbmltcG9ydCB7IGNhcGFiaWxpdHksIFNjaGVtYSwgb2sgfSBmcm9tICdAdWNhbnRvL3ZhbGlkYXRvcidcbmltcG9ydCB7IFBpZWNlTGluayB9IGZyb20gJy4vbGliLmpzJ1xuaW1wb3J0IHsgZXF1YWwsIGVxdWFsV2l0aCwgY2hlY2tMaW5rLCBhbmQgfSBmcm9tICcuLi91dGlscy5qcydcblxuLyoqXG4gKiBDYXBhYmlsaXR5IHRoYXQgYWxsb3dzIGEgU3RvcmVmcm9udCB0byByZXF1ZXN0IHRoYXQgYSBwaWVjZSBiZSBhZ2dyZWdhdGVkXG4gKiBmb3IgaW5jbHVzaW9uIGluIGFuIHVwY29taW5nIGFuIEZpbGVjb2luIGRlYWwuXG4gKi9cbmV4cG9ydCBjb25zdCBwaWVjZU9mZmVyID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ3BpZWNlL29mZmVyJyxcbiAgLyoqXG4gICAqIERJRCBvZiBhbiBhdXRob3JpemVkIFN0b3JlZnJvbnQuXG4gICAqL1xuICB3aXRoOiBTY2hlbWEuZGlkKCksXG4gIG5iOiBTY2hlbWEuc3RydWN0KHtcbiAgICAvKipcbiAgICAgKiBDSUQgb2YgdGhlIHBpZWNlLlxuICAgICAqL1xuICAgIHBpZWNlOiBQaWVjZUxpbmssXG4gICAgLyoqXG4gICAgICogR3JvdXBpbmcgb2Ygam9pbmluZyBzZWdtZW50cyBpbnRvIGFuIGFnZ3JlZ2F0ZS5cbiAgICAgKi9cbiAgICBncm91cDogU2NoZW1hLnRleHQoKSxcbiAgfSksXG4gIGRlcml2ZXM6IChjbGFpbSwgZnJvbSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICBhbmQoZXF1YWxXaXRoKGNsYWltLCBmcm9tKSkgfHxcbiAgICAgIGFuZChjaGVja0xpbmsoY2xhaW0ubmIucGllY2UsIGZyb20ubmIucGllY2UsICduYi5waWVjZScpKSB8fFxuICAgICAgYW5kKGVxdWFsKGNsYWltLm5iLmdyb3VwLCBmcm9tLm5iLmdyb3VwLCAnbmIuZ3JvdXAnKSkgfHxcbiAgICAgIG9rKHt9KVxuICAgIClcbiAgfSxcbn0pXG5cbi8qKlxuICogQ2FwYWJpbGl0eSB0aGF0IGFsbG93cyBhbiBBZ2dyZWdhdG9yIHRvIHNpZ25hbCBhIHBpZWNlIGhhcyBiZWVuIGFjY2VwdGVkXG4gKiBvciByZWplY3RlZCBmb3IgaW5jbHVzaW9uIGluIGFuIGFnZ3JlZ2F0ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHBpZWNlQWNjZXB0ID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ3BpZWNlL2FjY2VwdCcsXG4gIC8qKlxuICAgKiBESUQgb2YgdGhlIEFnZ3JlZ2F0b3IuXG4gICAqL1xuICB3aXRoOiBTY2hlbWEuZGlkKCksXG4gIG5iOiBTY2hlbWEuc3RydWN0KHtcbiAgICAvKipcbiAgICAgKiBDSUQgb2YgdGhlIHBpZWNlLlxuICAgICAqXG4gICAgICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vZmlsZWNvaW4tcHJvamVjdC9GSVBzL3B1bGwvNzU4L2ZpbGVzXG4gICAgICovXG4gICAgcGllY2U6IFBpZWNlTGluayxcbiAgICAvKipcbiAgICAgKiBHcm91cGluZyBvZiBqb2luaW5nIHNlZ21lbnRzIGludG8gYW4gYWdncmVnYXRlLlxuICAgICAqL1xuICAgIGdyb3VwOiBTY2hlbWEudGV4dCgpLFxuICB9KSxcbiAgZGVyaXZlczogKGNsYWltLCBmcm9tKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIGFuZChlcXVhbFdpdGgoY2xhaW0sIGZyb20pKSB8fFxuICAgICAgYW5kKGNoZWNrTGluayhjbGFpbS5uYi5waWVjZSwgZnJvbS5uYi5waWVjZSwgJ25iLnBpZWNlJykpIHx8XG4gICAgICBhbmQoZXF1YWwoY2xhaW0ubmIuZ3JvdXAsIGZyb20ubmIuZ3JvdXAsICduYi5ncm91cCcpKSB8fFxuICAgICAgb2soe30pXG4gICAgKVxuICB9LFxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/aggregator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/deal-tracker.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/filecoin/deal-tracker.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dealInfo: () => (/* binding */ dealInfo)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Filecoin Deal Tracker Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as DealTracker from '@web3-storage/capabilities/filecoin/deal-tracker'\n * ```\n *\n * @module\n */\n\n\n\n\n\n/**\n * Capability allowing a Storefront or Aggregator to obtain deal information\n * for a given aggregate piece.\n */\nconst dealInfo = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'deal/info',\n  /**\n   * DID of the Storefront.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the piece.\n     *\n     * @see https://github.com/filecoin-project/FIPs/pull/758/files\n     */\n    piece: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.piece, from.nb.piece, 'nb.piece')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2ZpbGVjb2luL2RlYWwtdHJhY2tlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBEO0FBQ3RCO0FBQ21COztBQUV2RDtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlCQUFpQiw2REFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQVU7QUFDbEIsTUFBTSw0REFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBUztBQUNwQixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSxxREFBRSxHQUFHO0FBQ1g7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3NyYy9maWxlY29pbi9kZWFsLXRyYWNrZXIuanM/YzY1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZpbGVjb2luIERlYWwgVHJhY2tlciBDYXBhYmlsaXRpZXNcbiAqXG4gKiBUaGVzZSBjYW4gYmUgaW1wb3J0ZWQgZGlyZWN0bHkgd2l0aDpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBEZWFsVHJhY2tlciBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9maWxlY29pbi9kZWFsLXRyYWNrZXInXG4gKiBgYGBcbiAqXG4gKiBAbW9kdWxlXG4gKi9cblxuaW1wb3J0IHsgY2FwYWJpbGl0eSwgU2NoZW1hLCBvayB9IGZyb20gJ0B1Y2FudG8vdmFsaWRhdG9yJ1xuaW1wb3J0IHsgUGllY2VMaW5rIH0gZnJvbSAnLi9saWIuanMnXG5pbXBvcnQgeyBlcXVhbFdpdGgsIGNoZWNrTGluaywgYW5kIH0gZnJvbSAnLi4vdXRpbHMuanMnXG5cbi8qKlxuICogQ2FwYWJpbGl0eSBhbGxvd2luZyBhIFN0b3JlZnJvbnQgb3IgQWdncmVnYXRvciB0byBvYnRhaW4gZGVhbCBpbmZvcm1hdGlvblxuICogZm9yIGEgZ2l2ZW4gYWdncmVnYXRlIHBpZWNlLlxuICovXG5leHBvcnQgY29uc3QgZGVhbEluZm8gPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnZGVhbC9pbmZvJyxcbiAgLyoqXG4gICAqIERJRCBvZiB0aGUgU3RvcmVmcm9udC5cbiAgICovXG4gIHdpdGg6IFNjaGVtYS5kaWQoKSxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIC8qKlxuICAgICAqIENJRCBvZiB0aGUgcGllY2UuXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9maWxlY29pbi1wcm9qZWN0L0ZJUHMvcHVsbC83NTgvZmlsZXNcbiAgICAgKi9cbiAgICBwaWVjZTogUGllY2VMaW5rLFxuICB9KSxcbiAgZGVyaXZlczogKGNsYWltLCBmcm9tKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIGFuZChlcXVhbFdpdGgoY2xhaW0sIGZyb20pKSB8fFxuICAgICAgYW5kKGNoZWNrTGluayhjbGFpbS5uYi5waWVjZSwgZnJvbS5uYi5waWVjZSwgJ25iLnBpZWNlJykpIHx8XG4gICAgICBvayh7fSlcbiAgICApXG4gIH0sXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/deal-tracker.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/dealer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/filecoin/dealer.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aggregateAccept: () => (/* binding */ aggregateAccept),\n/* harmony export */   aggregateOffer: () => (/* binding */ aggregateOffer)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Filecoin Dealer Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Dealer from '@web3-storage/capabilities/filecoin/dealer'\n * ```\n *\n * @module\n */\n\n\n\n\n\n/**\n * Capability allowing an Aggregator to request an aggregate to be added to a\n * deal with a Storage Provider.\n */\nconst aggregateOffer = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'aggregate/offer',\n  /**\n   * DID of an authorized Storefront.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Commitment proof for the aggregate being offered.\n     */\n    aggregate: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n    /**\n     * CID of the DAG-CBOR encoded block with offer details.\n     * Service will queue given offer to be validated and handled.\n     */\n    pieces: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link({ version: 1 }),\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.aggregate, from.nb.aggregate, 'nb.aggregate')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.pieces, from.nb.pieces, 'nb.pieces')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability that allows a Dealer to signal an aggregate has been accepted\n * for inclusion in a Filecoin deal.\n */\nconst aggregateAccept = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'aggregate/accept',\n  /**\n   * did:key identifier of the broker authority where offer is made available.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Commitment proof for the aggregate being offered.\n     */\n    aggregate: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n    /**\n     * CID of the DAG-CBOR encoded block with offer details.\n     * Service will queue given offer to be validated and handled.\n     */\n    pieces: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link(),\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.aggregate, from.nb.aggregate, 'nb.aggregate')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.pieces, from.nb.pieces, 'nb.pieces')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2ZpbGVjb2luL2RlYWxlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwRDtBQUN0QjtBQUNtQjs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1QkFBdUIsNkRBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFVO0FBQ2xCLE1BQU0sNERBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4Q0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQVcsR0FBRyxZQUFZO0FBQ3RDLEdBQUc7QUFDSDtBQUNBO0FBQ0EsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSxxREFBRSxHQUFHO0FBQ1g7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdCQUF3Qiw2REFBVTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQVU7QUFDbEIsTUFBTSw0REFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhDQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwREFBVztBQUN2QixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9zcmMvZmlsZWNvaW4vZGVhbGVyLmpzP2Q2OWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGaWxlY29pbiBEZWFsZXIgQ2FwYWJpbGl0aWVzXG4gKlxuICogVGhlc2UgY2FuIGJlIGltcG9ydGVkIGRpcmVjdGx5IHdpdGg6XG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgRGVhbGVyIGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL2ZpbGVjb2luL2RlYWxlcidcbiAqIGBgYFxuICpcbiAqIEBtb2R1bGVcbiAqL1xuXG5pbXBvcnQgeyBjYXBhYmlsaXR5LCBTY2hlbWEsIG9rIH0gZnJvbSAnQHVjYW50by92YWxpZGF0b3InXG5pbXBvcnQgeyBQaWVjZUxpbmsgfSBmcm9tICcuL2xpYi5qcydcbmltcG9ydCB7IGVxdWFsV2l0aCwgY2hlY2tMaW5rLCBhbmQgfSBmcm9tICcuLi91dGlscy5qcydcblxuLyoqXG4gKiBDYXBhYmlsaXR5IGFsbG93aW5nIGFuIEFnZ3JlZ2F0b3IgdG8gcmVxdWVzdCBhbiBhZ2dyZWdhdGUgdG8gYmUgYWRkZWQgdG8gYVxuICogZGVhbCB3aXRoIGEgU3RvcmFnZSBQcm92aWRlci5cbiAqL1xuZXhwb3J0IGNvbnN0IGFnZ3JlZ2F0ZU9mZmVyID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ2FnZ3JlZ2F0ZS9vZmZlcicsXG4gIC8qKlxuICAgKiBESUQgb2YgYW4gYXV0aG9yaXplZCBTdG9yZWZyb250LlxuICAgKi9cbiAgd2l0aDogU2NoZW1hLmRpZCgpLFxuICBuYjogU2NoZW1hLnN0cnVjdCh7XG4gICAgLyoqXG4gICAgICogQ29tbWl0bWVudCBwcm9vZiBmb3IgdGhlIGFnZ3JlZ2F0ZSBiZWluZyBvZmZlcmVkLlxuICAgICAqL1xuICAgIGFnZ3JlZ2F0ZTogUGllY2VMaW5rLFxuICAgIC8qKlxuICAgICAqIENJRCBvZiB0aGUgREFHLUNCT1IgZW5jb2RlZCBibG9jayB3aXRoIG9mZmVyIGRldGFpbHMuXG4gICAgICogU2VydmljZSB3aWxsIHF1ZXVlIGdpdmVuIG9mZmVyIHRvIGJlIHZhbGlkYXRlZCBhbmQgaGFuZGxlZC5cbiAgICAgKi9cbiAgICBwaWVjZXM6IFNjaGVtYS5saW5rKHsgdmVyc2lvbjogMSB9KSxcbiAgfSksXG4gIGRlcml2ZXM6IChjbGFpbSwgZnJvbSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICBhbmQoZXF1YWxXaXRoKGNsYWltLCBmcm9tKSkgfHxcbiAgICAgIGFuZChjaGVja0xpbmsoY2xhaW0ubmIuYWdncmVnYXRlLCBmcm9tLm5iLmFnZ3JlZ2F0ZSwgJ25iLmFnZ3JlZ2F0ZScpKSB8fFxuICAgICAgYW5kKGNoZWNrTGluayhjbGFpbS5uYi5waWVjZXMsIGZyb20ubmIucGllY2VzLCAnbmIucGllY2VzJykpIHx8XG4gICAgICBvayh7fSlcbiAgICApXG4gIH0sXG59KVxuXG4vKipcbiAqIENhcGFiaWxpdHkgdGhhdCBhbGxvd3MgYSBEZWFsZXIgdG8gc2lnbmFsIGFuIGFnZ3JlZ2F0ZSBoYXMgYmVlbiBhY2NlcHRlZFxuICogZm9yIGluY2x1c2lvbiBpbiBhIEZpbGVjb2luIGRlYWwuXG4gKi9cbmV4cG9ydCBjb25zdCBhZ2dyZWdhdGVBY2NlcHQgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnYWdncmVnYXRlL2FjY2VwdCcsXG4gIC8qKlxuICAgKiBkaWQ6a2V5IGlkZW50aWZpZXIgb2YgdGhlIGJyb2tlciBhdXRob3JpdHkgd2hlcmUgb2ZmZXIgaXMgbWFkZSBhdmFpbGFibGUuXG4gICAqL1xuICB3aXRoOiBTY2hlbWEuZGlkKCksXG4gIG5iOiBTY2hlbWEuc3RydWN0KHtcbiAgICAvKipcbiAgICAgKiBDb21taXRtZW50IHByb29mIGZvciB0aGUgYWdncmVnYXRlIGJlaW5nIG9mZmVyZWQuXG4gICAgICovXG4gICAgYWdncmVnYXRlOiBQaWVjZUxpbmssXG4gICAgLyoqXG4gICAgICogQ0lEIG9mIHRoZSBEQUctQ0JPUiBlbmNvZGVkIGJsb2NrIHdpdGggb2ZmZXIgZGV0YWlscy5cbiAgICAgKiBTZXJ2aWNlIHdpbGwgcXVldWUgZ2l2ZW4gb2ZmZXIgdG8gYmUgdmFsaWRhdGVkIGFuZCBoYW5kbGVkLlxuICAgICAqL1xuICAgIHBpZWNlczogU2NoZW1hLmxpbmsoKSxcbiAgfSksXG4gIGRlcml2ZXM6IChjbGFpbSwgZnJvbSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICBhbmQoZXF1YWxXaXRoKGNsYWltLCBmcm9tKSkgfHxcbiAgICAgIGFuZChjaGVja0xpbmsoY2xhaW0ubmIuYWdncmVnYXRlLCBmcm9tLm5iLmFnZ3JlZ2F0ZSwgJ25iLmFnZ3JlZ2F0ZScpKSB8fFxuICAgICAgYW5kKGNoZWNrTGluayhjbGFpbS5uYi5waWVjZXMsIGZyb20ubmIucGllY2VzLCAnbmIucGllY2VzJykpIHx8XG4gICAgICBvayh7fSlcbiAgICApXG4gIH0sXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/dealer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/filecoin/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accept: () => (/* reexport safe */ _storefront_js__WEBPACK_IMPORTED_MODULE_0__.filecoinAccept),\n/* harmony export */   filecoin: () => (/* reexport safe */ _storefront_js__WEBPACK_IMPORTED_MODULE_0__.filecoin),\n/* harmony export */   info: () => (/* reexport safe */ _storefront_js__WEBPACK_IMPORTED_MODULE_0__.filecoinInfo),\n/* harmony export */   offer: () => (/* reexport safe */ _storefront_js__WEBPACK_IMPORTED_MODULE_0__.filecoinOffer),\n/* harmony export */   submit: () => (/* reexport safe */ _storefront_js__WEBPACK_IMPORTED_MODULE_0__.filecoinSubmit)\n/* harmony export */ });\n/* harmony import */ var _storefront_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./storefront.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/storefront.js\");\n/**\n * Filecoin Capabilities\n *\n * These capabilities are the entrypoint to the filecoin pipeline and are\n * aliases for the filecoin storefront capabilities.\n *\n * These can be imported directly with:\n * ```js\n * import * as Filecoin from '@web3-storage/capabilities/filecoin'\n * ```\n *\n * @module\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2ZpbGVjb2luL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3NyYy9maWxlY29pbi9pbmRleC5qcz8wYjUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRmlsZWNvaW4gQ2FwYWJpbGl0aWVzXG4gKlxuICogVGhlc2UgY2FwYWJpbGl0aWVzIGFyZSB0aGUgZW50cnlwb2ludCB0byB0aGUgZmlsZWNvaW4gcGlwZWxpbmUgYW5kIGFyZVxuICogYWxpYXNlcyBmb3IgdGhlIGZpbGVjb2luIHN0b3JlZnJvbnQgY2FwYWJpbGl0aWVzLlxuICpcbiAqIFRoZXNlIGNhbiBiZSBpbXBvcnRlZCBkaXJlY3RseSB3aXRoOlxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIEZpbGVjb2luIGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL2ZpbGVjb2luJ1xuICogYGBgXG4gKlxuICogQG1vZHVsZVxuICovXG5cbmV4cG9ydCB7XG4gIGZpbGVjb2luT2ZmZXIgYXMgb2ZmZXIsXG4gIGZpbGVjb2luU3VibWl0IGFzIHN1Ym1pdCxcbiAgZmlsZWNvaW5BY2NlcHQgYXMgYWNjZXB0LFxuICBmaWxlY29pbkluZm8gYXMgaW5mbyxcbiAgZmlsZWNvaW4gYXMgZmlsZWNvaW4sXG59IGZyb20gJy4vc3RvcmVmcm9udC5qcydcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/lib.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/filecoin/lib.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PieceLink: () => (/* binding */ PieceLink)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n\n\n/**\n * @see https://github.com/filecoin-project/FIPs/pull/758/files\n */\nconst FR32_SHA2_256_TRUNC254_PADDED_BINARY_TREE = /** @type {const} */ (0x1011)\n/**\n * @see https://github.com/filecoin-project/FIPs/pull/758/files\n */\nconst RAW_CODE = /** @type {const} */ (0x55)\n\nconst PieceLink = /** @type {import('../types.js').PieceLinkSchema} */ (\n  _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link({\n    code: RAW_CODE,\n    version: 1,\n    multihash: {\n      code: FR32_SHA2_256_TRUNC254_PADDED_BINARY_TREE,\n    },\n  })\n)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2ZpbGVjb2luL2xpYi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQzs7QUFFMUM7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELE9BQU87QUFDcEU7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLE9BQU87O0FBRTVCLDZCQUE2Qix1Q0FBdUM7QUFDM0UsRUFBRSwwREFBVztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3NyYy9maWxlY29pbi9saWIuanM/ODIwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdAdWNhbnRvL3ZhbGlkYXRvcidcblxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9maWxlY29pbi1wcm9qZWN0L0ZJUHMvcHVsbC83NTgvZmlsZXNcbiAqL1xuY29uc3QgRlIzMl9TSEEyXzI1Nl9UUlVOQzI1NF9QQURERURfQklOQVJZX1RSRUUgPSAvKiogQHR5cGUge2NvbnN0fSAqLyAoMHgxMDExKVxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9maWxlY29pbi1wcm9qZWN0L0ZJUHMvcHVsbC83NTgvZmlsZXNcbiAqL1xuY29uc3QgUkFXX0NPREUgPSAvKiogQHR5cGUge2NvbnN0fSAqLyAoMHg1NSlcblxuZXhwb3J0IGNvbnN0IFBpZWNlTGluayA9IC8qKiBAdHlwZSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlBpZWNlTGlua1NjaGVtYX0gKi8gKFxuICBTY2hlbWEubGluayh7XG4gICAgY29kZTogUkFXX0NPREUsXG4gICAgdmVyc2lvbjogMSxcbiAgICBtdWx0aWhhc2g6IHtcbiAgICAgIGNvZGU6IEZSMzJfU0hBMl8yNTZfVFJVTkMyNTRfUEFEREVEX0JJTkFSWV9UUkVFLFxuICAgIH0sXG4gIH0pXG4pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/storefront.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/filecoin/storefront.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filecoin: () => (/* binding */ filecoin),\n/* harmony export */   filecoinAccept: () => (/* binding */ filecoinAccept),\n/* harmony export */   filecoinInfo: () => (/* binding */ filecoinInfo),\n/* harmony export */   filecoinOffer: () => (/* binding */ filecoinOffer),\n/* harmony export */   filecoinSubmit: () => (/* binding */ filecoinSubmit)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Filecoin Storefront Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Storefront from '@web3-storage/capabilities/filecoin/storefront'\n * ```\n *\n * @module\n */\n\n\n\n\n\n/**\n * Top-level capability for Filecoin operations.\n */\nconst filecoin = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'filecoin/*',\n  /**\n   * DID of the space the content is stored in.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n\n/**\n * Capability allowing an agent to _request_ storing a content piece in\n * Filecoin.\n */\nconst filecoinOffer = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'filecoin/offer',\n  /**\n   * DID of the space the content is stored in.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the content that resulted in Filecoin piece.\n     */\n    content: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link(),\n    /**\n     * CID of the piece.\n     */\n    piece: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.content, from.nb.content, 'nb.content')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.piece, from.nb.piece, 'nb.piece')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability allowing a Storefront to signal that an offered piece has been\n * submitted to the filecoin storage pipeline.\n */\nconst filecoinSubmit = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'filecoin/submit',\n  /**\n   * DID of the Storefront.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the content that resulted in Filecoin piece.\n     */\n    content: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link(),\n    /**\n     * CID of the piece.\n     *\n     * @see https://github.com/filecoin-project/FIPs/pull/758/files\n     */\n    piece: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.content, from.nb.content, 'nb.content')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.piece, from.nb.piece, 'nb.piece')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability allowing a Storefront to signal that a submitted piece has been\n * accepted in a Filecoin deal. The receipt contains the proof.\n */\nconst filecoinAccept = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'filecoin/accept',\n  /**\n   * DID of the Storefront.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the content that resulted in Filecoin piece.\n     */\n    content: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link(),\n    /**\n     * CID of the piece.\n     *\n     * @see https://github.com/filecoin-project/FIPs/pull/758/files\n     */\n    piece: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.content, from.nb.content, 'nb.content')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.piece, from.nb.piece, 'nb.piece')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability allowing an agent to _request_ info about a content piece in\n * Filecoin deals.\n */\nconst filecoinInfo = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'filecoin/info',\n  /**\n   * DID of the space the content is stored in.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the piece.\n     *\n     * @see https://github.com/filecoin-project/FIPs/pull/758/files\n     */\n    piece: _lib_js__WEBPACK_IMPORTED_MODULE_1__.PieceLink,\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.piece, from.nb.piece, 'nb.piece')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2ZpbGVjb2luL3N0b3JlZnJvbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEQ7QUFDdEI7QUFDbUI7O0FBRXZEO0FBQ0E7QUFDQTtBQUNPLGlCQUFpQiw2REFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQVU7QUFDbEIsV0FBVyxnREFBUztBQUNwQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sc0JBQXNCLDZEQUFVO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBVTtBQUNsQixNQUFNLDREQUFhO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMERBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBUztBQUNwQixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1QkFBdUIsNkRBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFVO0FBQ2xCLE1BQU0sNERBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsYUFBYSwwREFBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBUztBQUNwQixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1QkFBdUIsNkRBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFVO0FBQ2xCLE1BQU0sNERBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsYUFBYSwwREFBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBUztBQUNwQixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyxxQkFBcUIsNkRBQVU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFVO0FBQ2xCLE1BQU0sNERBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOENBQVM7QUFDcEIsR0FBRztBQUNIO0FBQ0E7QUFDQSxNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9zcmMvZmlsZWNvaW4vc3RvcmVmcm9udC5qcz81Y2FhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRmlsZWNvaW4gU3RvcmVmcm9udCBDYXBhYmlsaXRpZXNcbiAqXG4gKiBUaGVzZSBjYW4gYmUgaW1wb3J0ZWQgZGlyZWN0bHkgd2l0aDpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBTdG9yZWZyb250IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL2ZpbGVjb2luL3N0b3JlZnJvbnQnXG4gKiBgYGBcbiAqXG4gKiBAbW9kdWxlXG4gKi9cblxuaW1wb3J0IHsgY2FwYWJpbGl0eSwgU2NoZW1hLCBvayB9IGZyb20gJ0B1Y2FudG8vdmFsaWRhdG9yJ1xuaW1wb3J0IHsgUGllY2VMaW5rIH0gZnJvbSAnLi9saWIuanMnXG5pbXBvcnQgeyBlcXVhbFdpdGgsIGNoZWNrTGluaywgYW5kIH0gZnJvbSAnLi4vdXRpbHMuanMnXG5cbi8qKlxuICogVG9wLWxldmVsIGNhcGFiaWxpdHkgZm9yIEZpbGVjb2luIG9wZXJhdGlvbnMuXG4gKi9cbmV4cG9ydCBjb25zdCBmaWxlY29pbiA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdmaWxlY29pbi8qJyxcbiAgLyoqXG4gICAqIERJRCBvZiB0aGUgc3BhY2UgdGhlIGNvbnRlbnQgaXMgc3RvcmVkIGluLlxuICAgKi9cbiAgd2l0aDogU2NoZW1hLmRpZCgpLFxuICBkZXJpdmVzOiBlcXVhbFdpdGgsXG59KVxuXG4vKipcbiAqIENhcGFiaWxpdHkgYWxsb3dpbmcgYW4gYWdlbnQgdG8gX3JlcXVlc3RfIHN0b3JpbmcgYSBjb250ZW50IHBpZWNlIGluXG4gKiBGaWxlY29pbi5cbiAqL1xuZXhwb3J0IGNvbnN0IGZpbGVjb2luT2ZmZXIgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnZmlsZWNvaW4vb2ZmZXInLFxuICAvKipcbiAgICogRElEIG9mIHRoZSBzcGFjZSB0aGUgY29udGVudCBpcyBzdG9yZWQgaW4uXG4gICAqL1xuICB3aXRoOiBTY2hlbWEuZGlkKCksXG4gIG5iOiBTY2hlbWEuc3RydWN0KHtcbiAgICAvKipcbiAgICAgKiBDSUQgb2YgdGhlIGNvbnRlbnQgdGhhdCByZXN1bHRlZCBpbiBGaWxlY29pbiBwaWVjZS5cbiAgICAgKi9cbiAgICBjb250ZW50OiBTY2hlbWEubGluaygpLFxuICAgIC8qKlxuICAgICAqIENJRCBvZiB0aGUgcGllY2UuXG4gICAgICovXG4gICAgcGllY2U6IFBpZWNlTGluayxcbiAgfSksXG4gIGRlcml2ZXM6IChjbGFpbSwgZnJvbSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICBhbmQoZXF1YWxXaXRoKGNsYWltLCBmcm9tKSkgfHxcbiAgICAgIGFuZChjaGVja0xpbmsoY2xhaW0ubmIuY29udGVudCwgZnJvbS5uYi5jb250ZW50LCAnbmIuY29udGVudCcpKSB8fFxuICAgICAgYW5kKGNoZWNrTGluayhjbGFpbS5uYi5waWVjZSwgZnJvbS5uYi5waWVjZSwgJ25iLnBpZWNlJykpIHx8XG4gICAgICBvayh7fSlcbiAgICApXG4gIH0sXG59KVxuXG4vKipcbiAqIENhcGFiaWxpdHkgYWxsb3dpbmcgYSBTdG9yZWZyb250IHRvIHNpZ25hbCB0aGF0IGFuIG9mZmVyZWQgcGllY2UgaGFzIGJlZW5cbiAqIHN1Ym1pdHRlZCB0byB0aGUgZmlsZWNvaW4gc3RvcmFnZSBwaXBlbGluZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGZpbGVjb2luU3VibWl0ID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ2ZpbGVjb2luL3N1Ym1pdCcsXG4gIC8qKlxuICAgKiBESUQgb2YgdGhlIFN0b3JlZnJvbnQuXG4gICAqL1xuICB3aXRoOiBTY2hlbWEuZGlkKCksXG4gIG5iOiBTY2hlbWEuc3RydWN0KHtcbiAgICAvKipcbiAgICAgKiBDSUQgb2YgdGhlIGNvbnRlbnQgdGhhdCByZXN1bHRlZCBpbiBGaWxlY29pbiBwaWVjZS5cbiAgICAgKi9cbiAgICBjb250ZW50OiBTY2hlbWEubGluaygpLFxuICAgIC8qKlxuICAgICAqIENJRCBvZiB0aGUgcGllY2UuXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9maWxlY29pbi1wcm9qZWN0L0ZJUHMvcHVsbC83NTgvZmlsZXNcbiAgICAgKi9cbiAgICBwaWVjZTogUGllY2VMaW5rLFxuICB9KSxcbiAgZGVyaXZlczogKGNsYWltLCBmcm9tKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIGFuZChlcXVhbFdpdGgoY2xhaW0sIGZyb20pKSB8fFxuICAgICAgYW5kKGNoZWNrTGluayhjbGFpbS5uYi5jb250ZW50LCBmcm9tLm5iLmNvbnRlbnQsICduYi5jb250ZW50JykpIHx8XG4gICAgICBhbmQoY2hlY2tMaW5rKGNsYWltLm5iLnBpZWNlLCBmcm9tLm5iLnBpZWNlLCAnbmIucGllY2UnKSkgfHxcbiAgICAgIG9rKHt9KVxuICAgIClcbiAgfSxcbn0pXG5cbi8qKlxuICogQ2FwYWJpbGl0eSBhbGxvd2luZyBhIFN0b3JlZnJvbnQgdG8gc2lnbmFsIHRoYXQgYSBzdWJtaXR0ZWQgcGllY2UgaGFzIGJlZW5cbiAqIGFjY2VwdGVkIGluIGEgRmlsZWNvaW4gZGVhbC4gVGhlIHJlY2VpcHQgY29udGFpbnMgdGhlIHByb29mLlxuICovXG5leHBvcnQgY29uc3QgZmlsZWNvaW5BY2NlcHQgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnZmlsZWNvaW4vYWNjZXB0JyxcbiAgLyoqXG4gICAqIERJRCBvZiB0aGUgU3RvcmVmcm9udC5cbiAgICovXG4gIHdpdGg6IFNjaGVtYS5kaWQoKSxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIC8qKlxuICAgICAqIENJRCBvZiB0aGUgY29udGVudCB0aGF0IHJlc3VsdGVkIGluIEZpbGVjb2luIHBpZWNlLlxuICAgICAqL1xuICAgIGNvbnRlbnQ6IFNjaGVtYS5saW5rKCksXG4gICAgLyoqXG4gICAgICogQ0lEIG9mIHRoZSBwaWVjZS5cbiAgICAgKlxuICAgICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZpbGVjb2luLXByb2plY3QvRklQcy9wdWxsLzc1OC9maWxlc1xuICAgICAqL1xuICAgIHBpZWNlOiBQaWVjZUxpbmssXG4gIH0pLFxuICBkZXJpdmVzOiAoY2xhaW0sIGZyb20pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgYW5kKGVxdWFsV2l0aChjbGFpbSwgZnJvbSkpIHx8XG4gICAgICBhbmQoY2hlY2tMaW5rKGNsYWltLm5iLmNvbnRlbnQsIGZyb20ubmIuY29udGVudCwgJ25iLmNvbnRlbnQnKSkgfHxcbiAgICAgIGFuZChjaGVja0xpbmsoY2xhaW0ubmIucGllY2UsIGZyb20ubmIucGllY2UsICduYi5waWVjZScpKSB8fFxuICAgICAgb2soe30pXG4gICAgKVxuICB9LFxufSlcblxuLyoqXG4gKiBDYXBhYmlsaXR5IGFsbG93aW5nIGFuIGFnZW50IHRvIF9yZXF1ZXN0XyBpbmZvIGFib3V0IGEgY29udGVudCBwaWVjZSBpblxuICogRmlsZWNvaW4gZGVhbHMuXG4gKi9cbmV4cG9ydCBjb25zdCBmaWxlY29pbkluZm8gPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnZmlsZWNvaW4vaW5mbycsXG4gIC8qKlxuICAgKiBESUQgb2YgdGhlIHNwYWNlIHRoZSBjb250ZW50IGlzIHN0b3JlZCBpbi5cbiAgICovXG4gIHdpdGg6IFNjaGVtYS5kaWQoKSxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIC8qKlxuICAgICAqIENJRCBvZiB0aGUgcGllY2UuXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9maWxlY29pbi1wcm9qZWN0L0ZJUHMvcHVsbC83NTgvZmlsZXNcbiAgICAgKi9cbiAgICBwaWVjZTogUGllY2VMaW5rLFxuICB9KSxcbiAgZGVyaXZlczogKGNsYWltLCBmcm9tKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIGFuZChlcXVhbFdpdGgoY2xhaW0sIGZyb20pKSB8fFxuICAgICAgYW5kKGNoZWNrTGluayhjbGFpbS5uYi5waWVjZSwgZnJvbS5uYi5waWVjZSwgJ25iLnBpZWNlJykpIHx8XG4gICAgICBvayh7fSlcbiAgICApXG4gIH0sXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/storefront.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/http.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/http.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   put: () => (/* binding */ put)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _blob_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blob.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * HTTP Capabilities.\n *\n * These can be imported directly with:\n * ```js\n * import * as HTTP from '@web3-storage/capabilities/http'\n * ```\n *\n * @module\n */\n\n\n\n\n/**\n * `http/put` capability invocation MAY be performed by any authorized agent on behalf of the subject\n * as long as they have referenced `body` content to do so.\n */\nconst put = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'http/put',\n  /**\n   * DID of the (memory) space where Blob is intended to\n   * be stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Description of body to send (digest/size).\n     */\n    body: _blob_js__WEBPACK_IMPORTED_MODULE_1__.content,\n    /**\n     * HTTP(S) location that can receive blob content via HTTP PUT request.\n     */\n    url: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string().or(_utils_js__WEBPACK_IMPORTED_MODULE_2__.Await),\n    /**\n     * HTTP headers.\n     */\n    headers: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.dictionary({ value: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string() }).or(_utils_js__WEBPACK_IMPORTED_MODULE_2__.Await),\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalBody)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(claim.nb.url, from.nb, 'url')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(claim.nb.headers, from.nb, 'headers')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2h0dHAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBEO0FBQ3ZCO0FBQzJDOztBQUU5RTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFlBQVksNkRBQVU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsK0NBQVE7QUFDaEIsTUFBTSw0REFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxVQUFVLDZDQUFPO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLFNBQVMsNERBQWEsTUFBTSw0Q0FBSztBQUNqQztBQUNBO0FBQ0E7QUFDQSxhQUFhLGdFQUFpQixHQUFHLE9BQU8sNERBQWEsSUFBSSxLQUFLLDRDQUFLO0FBQ25FLEdBQUc7QUFDSDtBQUNBO0FBQ0EsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLHFEQUFFLEdBQUc7QUFDWDtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2h0dHAuanM/MjNlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhUVFAgQ2FwYWJpbGl0aWVzLlxuICpcbiAqIFRoZXNlIGNhbiBiZSBpbXBvcnRlZCBkaXJlY3RseSB3aXRoOlxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIEhUVFAgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvaHR0cCdcbiAqIGBgYFxuICpcbiAqIEBtb2R1bGVcbiAqL1xuaW1wb3J0IHsgY2FwYWJpbGl0eSwgU2NoZW1hLCBvayB9IGZyb20gJ0B1Y2FudG8vdmFsaWRhdG9yJ1xuaW1wb3J0IHsgY29udGVudCB9IGZyb20gJy4vYmxvYi5qcydcbmltcG9ydCB7IGVxdWFsLCBlcXVhbEJvZHksIGVxdWFsV2l0aCwgU3BhY2VESUQsIEF3YWl0LCBhbmQgfSBmcm9tICcuL3V0aWxzLmpzJ1xuXG4vKipcbiAqIGBodHRwL3B1dGAgY2FwYWJpbGl0eSBpbnZvY2F0aW9uIE1BWSBiZSBwZXJmb3JtZWQgYnkgYW55IGF1dGhvcml6ZWQgYWdlbnQgb24gYmVoYWxmIG9mIHRoZSBzdWJqZWN0XG4gKiBhcyBsb25nIGFzIHRoZXkgaGF2ZSByZWZlcmVuY2VkIGBib2R5YCBjb250ZW50IHRvIGRvIHNvLlxuICovXG5leHBvcnQgY29uc3QgcHV0ID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ2h0dHAvcHV0JyxcbiAgLyoqXG4gICAqIERJRCBvZiB0aGUgKG1lbW9yeSkgc3BhY2Ugd2hlcmUgQmxvYiBpcyBpbnRlbmRlZCB0b1xuICAgKiBiZSBzdG9yZWQuXG4gICAqL1xuICB3aXRoOiBTcGFjZURJRCxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIC8qKlxuICAgICAqIERlc2NyaXB0aW9uIG9mIGJvZHkgdG8gc2VuZCAoZGlnZXN0L3NpemUpLlxuICAgICAqL1xuICAgIGJvZHk6IGNvbnRlbnQsXG4gICAgLyoqXG4gICAgICogSFRUUChTKSBsb2NhdGlvbiB0aGF0IGNhbiByZWNlaXZlIGJsb2IgY29udGVudCB2aWEgSFRUUCBQVVQgcmVxdWVzdC5cbiAgICAgKi9cbiAgICB1cmw6IFNjaGVtYS5zdHJpbmcoKS5vcihBd2FpdCksXG4gICAgLyoqXG4gICAgICogSFRUUCBoZWFkZXJzLlxuICAgICAqL1xuICAgIGhlYWRlcnM6IFNjaGVtYS5kaWN0aW9uYXJ5KHsgdmFsdWU6IFNjaGVtYS5zdHJpbmcoKSB9KS5vcihBd2FpdCksXG4gIH0pLFxuICBkZXJpdmVzOiAoY2xhaW0sIGZyb20pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgYW5kKGVxdWFsV2l0aChjbGFpbSwgZnJvbSkpIHx8XG4gICAgICBhbmQoZXF1YWxCb2R5KGNsYWltLCBmcm9tKSkgfHxcbiAgICAgIGFuZChlcXVhbChjbGFpbS5uYi51cmwsIGZyb20ubmIsICd1cmwnKSkgfHxcbiAgICAgIGFuZChlcXVhbChjbGFpbS5uYi5oZWFkZXJzLCBmcm9tLm5iLCAnaGVhZGVycycpKSB8fFxuICAgICAgb2soe30pXG4gICAgKVxuICB9LFxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/http.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Access: () => (/* reexport module object */ _access_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   Admin: () => (/* reexport module object */ _admin_js__WEBPACK_IMPORTED_MODULE_11__),\n/* harmony export */   Aggregator: () => (/* reexport module object */ _filecoin_aggregator_js__WEBPACK_IMPORTED_MODULE_15__),\n/* harmony export */   Blob: () => (/* reexport module object */ _blob_js__WEBPACK_IMPORTED_MODULE_22__),\n/* harmony export */   Console: () => (/* reexport module object */ _console_js__WEBPACK_IMPORTED_MODULE_9__),\n/* harmony export */   Consumer: () => (/* reexport module object */ _consumer_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   Customer: () => (/* reexport module object */ _customer_js__WEBPACK_IMPORTED_MODULE_8__),\n/* harmony export */   DealTracker: () => (/* reexport module object */ _filecoin_deal_tracker_js__WEBPACK_IMPORTED_MODULE_17__),\n/* harmony export */   Dealer: () => (/* reexport module object */ _filecoin_dealer_js__WEBPACK_IMPORTED_MODULE_16__),\n/* harmony export */   Filecoin: () => (/* reexport module object */ _filecoin_index_js__WEBPACK_IMPORTED_MODULE_13__),\n/* harmony export */   HTTP: () => (/* reexport module object */ _http_js__WEBPACK_IMPORTED_MODULE_24__),\n/* harmony export */   Index: () => (/* reexport module object */ _index_index_js__WEBPACK_IMPORTED_MODULE_18__),\n/* harmony export */   Plan: () => (/* reexport module object */ _plan_js__WEBPACK_IMPORTED_MODULE_20__),\n/* harmony export */   Provider: () => (/* reexport module object */ _provider_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   RateLimit: () => (/* reexport module object */ _rate_limit_js__WEBPACK_IMPORTED_MODULE_10__),\n/* harmony export */   Space: () => (/* reexport module object */ _space_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   Store: () => (/* reexport module object */ _store_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   Storefront: () => (/* reexport module object */ _filecoin_storefront_js__WEBPACK_IMPORTED_MODULE_14__),\n/* harmony export */   Subscription: () => (/* reexport module object */ _subscription_js__WEBPACK_IMPORTED_MODULE_12__),\n/* harmony export */   Top: () => (/* reexport module object */ _top_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   UCAN: () => (/* reexport module object */ _ucan_js__WEBPACK_IMPORTED_MODULE_19__),\n/* harmony export */   Upload: () => (/* reexport module object */ _upload_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   Usage: () => (/* reexport module object */ _usage_js__WEBPACK_IMPORTED_MODULE_21__),\n/* harmony export */   Utils: () => (/* reexport module object */ _utils_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   W3sBlob: () => (/* reexport module object */ _web3_storage_blob_js__WEBPACK_IMPORTED_MODULE_23__),\n/* harmony export */   abilitiesAsStrings: () => (/* binding */ abilitiesAsStrings)\n/* harmony export */ });\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/provider.js\");\n/* harmony import */ var _space_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./space.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/space.js\");\n/* harmony import */ var _top_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./top.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/top.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/store.js\");\n/* harmony import */ var _upload_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./upload.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/upload.js\");\n/* harmony import */ var _access_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./access.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/access.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var _consumer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./consumer.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/consumer.js\");\n/* harmony import */ var _customer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./customer.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/customer.js\");\n/* harmony import */ var _console_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./console.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/console.js\");\n/* harmony import */ var _rate_limit_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./rate-limit.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/rate-limit.js\");\n/* harmony import */ var _admin_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./admin.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/admin.js\");\n/* harmony import */ var _subscription_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./subscription.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/subscription.js\");\n/* harmony import */ var _filecoin_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./filecoin/index.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/index.js\");\n/* harmony import */ var _filecoin_storefront_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./filecoin/storefront.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/storefront.js\");\n/* harmony import */ var _filecoin_aggregator_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./filecoin/aggregator.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/aggregator.js\");\n/* harmony import */ var _filecoin_dealer_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./filecoin/dealer.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/dealer.js\");\n/* harmony import */ var _filecoin_deal_tracker_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./filecoin/deal-tracker.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/deal-tracker.js\");\n/* harmony import */ var _index_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./index/index.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index/index.js\");\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/ucan.js\");\n/* harmony import */ var _plan_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./plan.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/plan.js\");\n/* harmony import */ var _usage_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./usage.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/usage.js\");\n/* harmony import */ var _blob_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./blob.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js\");\n/* harmony import */ var _web3_storage_blob_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./web3.storage/blob.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/web3.storage/blob.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./http.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/http.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** @type {import('./types.js').ServiceAbility[]} */\nconst abilitiesAsStrings = [\n  _top_js__WEBPACK_IMPORTED_MODULE_2__.top.can,\n  _provider_js__WEBPACK_IMPORTED_MODULE_0__.add.can,\n  _space_js__WEBPACK_IMPORTED_MODULE_1__.space.can,\n  _space_js__WEBPACK_IMPORTED_MODULE_1__.info.can,\n  _upload_js__WEBPACK_IMPORTED_MODULE_4__.upload.can,\n  _upload_js__WEBPACK_IMPORTED_MODULE_4__.add.can,\n  _upload_js__WEBPACK_IMPORTED_MODULE_4__.get.can,\n  _upload_js__WEBPACK_IMPORTED_MODULE_4__.remove.can,\n  _upload_js__WEBPACK_IMPORTED_MODULE_4__.list.can,\n  _store_js__WEBPACK_IMPORTED_MODULE_3__.store.can,\n  _store_js__WEBPACK_IMPORTED_MODULE_3__.add.can,\n  _store_js__WEBPACK_IMPORTED_MODULE_3__.get.can,\n  _store_js__WEBPACK_IMPORTED_MODULE_3__.remove.can,\n  _store_js__WEBPACK_IMPORTED_MODULE_3__.list.can,\n  _access_js__WEBPACK_IMPORTED_MODULE_5__.access.can,\n  _access_js__WEBPACK_IMPORTED_MODULE_5__.authorize.can,\n  _ucan_js__WEBPACK_IMPORTED_MODULE_19__.attest.can,\n  _ucan_js__WEBPACK_IMPORTED_MODULE_19__.conclude.can,\n  _customer_js__WEBPACK_IMPORTED_MODULE_8__.get.can,\n  _consumer_js__WEBPACK_IMPORTED_MODULE_7__.has.can,\n  _consumer_js__WEBPACK_IMPORTED_MODULE_7__.get.can,\n  _subscription_js__WEBPACK_IMPORTED_MODULE_12__.get.can,\n  _subscription_js__WEBPACK_IMPORTED_MODULE_12__.list.can,\n  _rate_limit_js__WEBPACK_IMPORTED_MODULE_10__.add.can,\n  _rate_limit_js__WEBPACK_IMPORTED_MODULE_10__.remove.can,\n  _rate_limit_js__WEBPACK_IMPORTED_MODULE_10__.list.can,\n  _filecoin_storefront_js__WEBPACK_IMPORTED_MODULE_14__.filecoinOffer.can,\n  _filecoin_storefront_js__WEBPACK_IMPORTED_MODULE_14__.filecoinSubmit.can,\n  _filecoin_storefront_js__WEBPACK_IMPORTED_MODULE_14__.filecoinAccept.can,\n  _filecoin_storefront_js__WEBPACK_IMPORTED_MODULE_14__.filecoinInfo.can,\n  _filecoin_aggregator_js__WEBPACK_IMPORTED_MODULE_15__.pieceOffer.can,\n  _filecoin_aggregator_js__WEBPACK_IMPORTED_MODULE_15__.pieceAccept.can,\n  _filecoin_dealer_js__WEBPACK_IMPORTED_MODULE_16__.aggregateOffer.can,\n  _filecoin_dealer_js__WEBPACK_IMPORTED_MODULE_16__.aggregateAccept.can,\n  _filecoin_deal_tracker_js__WEBPACK_IMPORTED_MODULE_17__.dealInfo.can,\n  _admin_js__WEBPACK_IMPORTED_MODULE_11__.admin.can,\n  _admin_js__WEBPACK_IMPORTED_MODULE_11__.upload.inspect.can,\n  _admin_js__WEBPACK_IMPORTED_MODULE_11__.store.inspect.can,\n  _plan_js__WEBPACK_IMPORTED_MODULE_20__.get.can,\n  _plan_js__WEBPACK_IMPORTED_MODULE_20__.set.can,\n  _plan_js__WEBPACK_IMPORTED_MODULE_20__.createAdminSession.can,\n  _usage_js__WEBPACK_IMPORTED_MODULE_21__.usage.can,\n  _usage_js__WEBPACK_IMPORTED_MODULE_21__.report.can,\n  _blob_js__WEBPACK_IMPORTED_MODULE_22__.blob.can,\n  _blob_js__WEBPACK_IMPORTED_MODULE_22__.add.can,\n  _blob_js__WEBPACK_IMPORTED_MODULE_22__.remove.can,\n  _blob_js__WEBPACK_IMPORTED_MODULE_22__.list.can,\n  _web3_storage_blob_js__WEBPACK_IMPORTED_MODULE_23__.blob.can,\n  _web3_storage_blob_js__WEBPACK_IMPORTED_MODULE_23__.allocate.can,\n  _web3_storage_blob_js__WEBPACK_IMPORTED_MODULE_23__.accept.can,\n  _http_js__WEBPACK_IMPORTED_MODULE_24__.put.can,\n  _index_index_js__WEBPACK_IMPORTED_MODULE_18__.index.can,\n  _index_index_js__WEBPACK_IMPORTED_MODULE_18__.add.can,\n]\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QztBQUNOO0FBQ0o7QUFDSTtBQUNFO0FBQ0E7QUFDRjtBQUNNO0FBQ0E7QUFDRjtBQUNLO0FBQ1Q7QUFDYztBQUNGO0FBQ087QUFDQTtBQUNSO0FBQ1c7QUFDaEI7QUFDUjtBQUNBO0FBQ0U7QUFDRjtBQUNnQjtBQUNoQjs7QUE0QmhDOztBQUVELFdBQVcsdUNBQXVDO0FBQzNDO0FBQ1AsRUFBRSx3Q0FBTztBQUNULEVBQUUsNkNBQVk7QUFDZCxFQUFFLDRDQUFXO0FBQ2IsRUFBRSwyQ0FBVTtBQUNaLEVBQUUsOENBQWE7QUFDZixFQUFFLDJDQUFVO0FBQ1osRUFBRSwyQ0FBVTtBQUNaLEVBQUUsOENBQWE7QUFDZixFQUFFLDRDQUFXO0FBQ2IsRUFBRSw0Q0FBVztBQUNiLEVBQUUsMENBQVM7QUFDWCxFQUFFLDBDQUFTO0FBQ1gsRUFBRSw2Q0FBWTtBQUNkLEVBQUUsMkNBQVU7QUFDWixFQUFFLDhDQUFhO0FBQ2YsRUFBRSxpREFBZ0I7QUFDbEIsRUFBRSw2Q0FBVztBQUNiLEVBQUUsK0NBQWE7QUFDZixFQUFFLDZDQUFZO0FBQ2QsRUFBRSw2Q0FBWTtBQUNkLEVBQUUsNkNBQVk7QUFDZCxFQUFFLGtEQUFnQjtBQUNsQixFQUFFLG1EQUFpQjtBQUNuQixFQUFFLGdEQUFhO0FBQ2YsRUFBRSxtREFBZ0I7QUFDbEIsRUFBRSxpREFBYztBQUNoQixFQUFFLG1FQUF3QjtBQUMxQixFQUFFLG9FQUF5QjtBQUMzQixFQUFFLG9FQUF5QjtBQUMzQixFQUFFLGtFQUF1QjtBQUN6QixFQUFFLGdFQUFxQjtBQUN2QixFQUFFLGlFQUFzQjtBQUN4QixFQUFFLGdFQUFxQjtBQUN2QixFQUFFLGlFQUFzQjtBQUN4QixFQUFFLGdFQUFvQjtBQUN0QixFQUFFLDZDQUFXO0FBQ2IsRUFBRSw4Q0FBWTtBQUNkLEVBQUUsNkNBQVc7QUFDYixFQUFFLDBDQUFRO0FBQ1YsRUFBRSwwQ0FBUTtBQUNWLEVBQUUseURBQXVCO0FBQ3pCLEVBQUUsNkNBQVc7QUFDYixFQUFFLDhDQUFZO0FBQ2QsRUFBRSwyQ0FBUztBQUNYLEVBQUUsMENBQVE7QUFDVixFQUFFLDZDQUFXO0FBQ2IsRUFBRSwyQ0FBUztBQUNYLEVBQUUsd0RBQVk7QUFDZCxFQUFFLDREQUFnQjtBQUNsQixFQUFFLDBEQUFjO0FBQ2hCLEVBQUUsMENBQVE7QUFDVixFQUFFLG1EQUFXO0FBQ2IsRUFBRSxpREFBUztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2luZGV4LmpzP2ViNzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUHJvdmlkZXIgZnJvbSAnLi9wcm92aWRlci5qcydcbmltcG9ydCAqIGFzIFNwYWNlIGZyb20gJy4vc3BhY2UuanMnXG5pbXBvcnQgKiBhcyBUb3AgZnJvbSAnLi90b3AuanMnXG5pbXBvcnQgKiBhcyBTdG9yZSBmcm9tICcuL3N0b3JlLmpzJ1xuaW1wb3J0ICogYXMgVXBsb2FkIGZyb20gJy4vdXBsb2FkLmpzJ1xuaW1wb3J0ICogYXMgQWNjZXNzIGZyb20gJy4vYWNjZXNzLmpzJ1xuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi91dGlscy5qcydcbmltcG9ydCAqIGFzIENvbnN1bWVyIGZyb20gJy4vY29uc3VtZXIuanMnXG5pbXBvcnQgKiBhcyBDdXN0b21lciBmcm9tICcuL2N1c3RvbWVyLmpzJ1xuaW1wb3J0ICogYXMgQ29uc29sZSBmcm9tICcuL2NvbnNvbGUuanMnXG5pbXBvcnQgKiBhcyBSYXRlTGltaXQgZnJvbSAnLi9yYXRlLWxpbWl0LmpzJ1xuaW1wb3J0ICogYXMgQWRtaW4gZnJvbSAnLi9hZG1pbi5qcydcbmltcG9ydCAqIGFzIFN1YnNjcmlwdGlvbiBmcm9tICcuL3N1YnNjcmlwdGlvbi5qcydcbmltcG9ydCAqIGFzIEZpbGVjb2luIGZyb20gJy4vZmlsZWNvaW4vaW5kZXguanMnXG5pbXBvcnQgKiBhcyBTdG9yZWZyb250IGZyb20gJy4vZmlsZWNvaW4vc3RvcmVmcm9udC5qcydcbmltcG9ydCAqIGFzIEFnZ3JlZ2F0b3IgZnJvbSAnLi9maWxlY29pbi9hZ2dyZWdhdG9yLmpzJ1xuaW1wb3J0ICogYXMgRGVhbGVyIGZyb20gJy4vZmlsZWNvaW4vZGVhbGVyLmpzJ1xuaW1wb3J0ICogYXMgRGVhbFRyYWNrZXIgZnJvbSAnLi9maWxlY29pbi9kZWFsLXRyYWNrZXIuanMnXG5pbXBvcnQgKiBhcyBJbmRleCBmcm9tICcuL2luZGV4L2luZGV4LmpzJ1xuaW1wb3J0ICogYXMgVUNBTiBmcm9tICcuL3VjYW4uanMnXG5pbXBvcnQgKiBhcyBQbGFuIGZyb20gJy4vcGxhbi5qcydcbmltcG9ydCAqIGFzIFVzYWdlIGZyb20gJy4vdXNhZ2UuanMnXG5pbXBvcnQgKiBhcyBCbG9iIGZyb20gJy4vYmxvYi5qcydcbmltcG9ydCAqIGFzIFczc0Jsb2IgZnJvbSAnLi93ZWIzLnN0b3JhZ2UvYmxvYi5qcydcbmltcG9ydCAqIGFzIEhUVFAgZnJvbSAnLi9odHRwLmpzJ1xuXG5leHBvcnQge1xuICBBY2Nlc3MsXG4gIFByb3ZpZGVyLFxuICBTcGFjZSxcbiAgVG9wLFxuICBTdG9yZSxcbiAgVXBsb2FkLFxuICBDb25zdW1lcixcbiAgQ3VzdG9tZXIsXG4gIENvbnNvbGUsXG4gIFV0aWxzLFxuICBSYXRlTGltaXQsXG4gIFN1YnNjcmlwdGlvbixcbiAgRmlsZWNvaW4sXG4gIEluZGV4LFxuICBTdG9yZWZyb250LFxuICBBZ2dyZWdhdG9yLFxuICBEZWFsZXIsXG4gIERlYWxUcmFja2VyLFxuICBBZG1pbixcbiAgVUNBTixcbiAgUGxhbixcbiAgVXNhZ2UsXG4gIEJsb2IsXG4gIFczc0Jsb2IsXG4gIEhUVFAsXG59XG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuU2VydmljZUFiaWxpdHlbXX0gKi9cbmV4cG9ydCBjb25zdCBhYmlsaXRpZXNBc1N0cmluZ3MgPSBbXG4gIFRvcC50b3AuY2FuLFxuICBQcm92aWRlci5hZGQuY2FuLFxuICBTcGFjZS5zcGFjZS5jYW4sXG4gIFNwYWNlLmluZm8uY2FuLFxuICBVcGxvYWQudXBsb2FkLmNhbixcbiAgVXBsb2FkLmFkZC5jYW4sXG4gIFVwbG9hZC5nZXQuY2FuLFxuICBVcGxvYWQucmVtb3ZlLmNhbixcbiAgVXBsb2FkLmxpc3QuY2FuLFxuICBTdG9yZS5zdG9yZS5jYW4sXG4gIFN0b3JlLmFkZC5jYW4sXG4gIFN0b3JlLmdldC5jYW4sXG4gIFN0b3JlLnJlbW92ZS5jYW4sXG4gIFN0b3JlLmxpc3QuY2FuLFxuICBBY2Nlc3MuYWNjZXNzLmNhbixcbiAgQWNjZXNzLmF1dGhvcml6ZS5jYW4sXG4gIFVDQU4uYXR0ZXN0LmNhbixcbiAgVUNBTi5jb25jbHVkZS5jYW4sXG4gIEN1c3RvbWVyLmdldC5jYW4sXG4gIENvbnN1bWVyLmhhcy5jYW4sXG4gIENvbnN1bWVyLmdldC5jYW4sXG4gIFN1YnNjcmlwdGlvbi5nZXQuY2FuLFxuICBTdWJzY3JpcHRpb24ubGlzdC5jYW4sXG4gIFJhdGVMaW1pdC5hZGQuY2FuLFxuICBSYXRlTGltaXQucmVtb3ZlLmNhbixcbiAgUmF0ZUxpbWl0Lmxpc3QuY2FuLFxuICBTdG9yZWZyb250LmZpbGVjb2luT2ZmZXIuY2FuLFxuICBTdG9yZWZyb250LmZpbGVjb2luU3VibWl0LmNhbixcbiAgU3RvcmVmcm9udC5maWxlY29pbkFjY2VwdC5jYW4sXG4gIFN0b3JlZnJvbnQuZmlsZWNvaW5JbmZvLmNhbixcbiAgQWdncmVnYXRvci5waWVjZU9mZmVyLmNhbixcbiAgQWdncmVnYXRvci5waWVjZUFjY2VwdC5jYW4sXG4gIERlYWxlci5hZ2dyZWdhdGVPZmZlci5jYW4sXG4gIERlYWxlci5hZ2dyZWdhdGVBY2NlcHQuY2FuLFxuICBEZWFsVHJhY2tlci5kZWFsSW5mby5jYW4sXG4gIEFkbWluLmFkbWluLmNhbixcbiAgQWRtaW4udXBsb2FkLmluc3BlY3QuY2FuLFxuICBBZG1pbi5zdG9yZS5pbnNwZWN0LmNhbixcbiAgUGxhbi5nZXQuY2FuLFxuICBQbGFuLnNldC5jYW4sXG4gIFBsYW4uY3JlYXRlQWRtaW5TZXNzaW9uLmNhbixcbiAgVXNhZ2UudXNhZ2UuY2FuLFxuICBVc2FnZS5yZXBvcnQuY2FuLFxuICBCbG9iLmJsb2IuY2FuLFxuICBCbG9iLmFkZC5jYW4sXG4gIEJsb2IucmVtb3ZlLmNhbixcbiAgQmxvYi5saXN0LmNhbixcbiAgVzNzQmxvYi5ibG9iLmNhbixcbiAgVzNzQmxvYi5hbGxvY2F0ZS5jYW4sXG4gIFczc0Jsb2IuYWNjZXB0LmNhbixcbiAgSFRUUC5wdXQuY2FuLFxuICBJbmRleC5pbmRleC5jYW4sXG4gIEluZGV4LmFkZC5jYW4sXG5dXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/index/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/index/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Schema: () => (/* reexport safe */ _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   index: () => (/* binding */ index)\n/* harmony export */ });\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Index Capabilities.\n *\n * W3 Indexing protocol allows authorized agents to submit verifiable claims\n * about content-addressed data to be published on the InterPlanetary Network\n * Indexer (IPNI), making it publicly queryable.\n *\n * These can be imported directly with:\n * ```js\n * import * as Index from '@web3-storage/capabilities/index'\n * ```\n *\n * @module\n */\n\n\n\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derive any `space/index/` prefixed capability for the space identified by the DID\n * in the `with` field.\n */\nconst index = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/index/*',\n  /** DID of the space where indexed data is stored. */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n\n/**\n * `space/index/add` capability allows an agent to submit verifiable claims\n * about content-addressed data to be published on the InterPlanetary Network\n * Indexer (IPNI), making it publicly queryable.\n */\nconst add = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/index/add',\n  /** DID of the space where indexed data is stored. */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n    /** Content Archive (CAR) containing the `Index`. */\n    index: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.link({ code: _ucanto_core__WEBPACK_IMPORTED_MODULE_0__.CAR.code, version: 1 }),\n  }),\n  derives: (claimed, delegated) =>\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claimed, delegated)) ||\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(claimed.nb.index, delegated.nb.index, 'index')) ||\n    (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.ok)({}),\n})\n\n// ⚠️ We export imports here so they are not omitted in generated typedefs\n// @see https://github.com/microsoft/TypeScript/issues/51548\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL2luZGV4L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDd0I7QUFDRzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGNBQWMsNkRBQVU7QUFDL0I7QUFDQTtBQUNBLFFBQVEsK0NBQVE7QUFDaEIsV0FBVyxnREFBUztBQUNwQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxZQUFZLDZEQUFVO0FBQzdCO0FBQ0E7QUFDQSxRQUFRLCtDQUFRO0FBQ2hCLE1BQU0sNERBQWE7QUFDbkI7QUFDQSxXQUFXLDBEQUFXLEdBQUcsTUFBTSxrREFBUSxjQUFjO0FBQ3JELEdBQUc7QUFDSDtBQUNBLElBQUksOENBQUcsQ0FBQyxvREFBUztBQUNqQixJQUFJLDhDQUFHLENBQUMsZ0RBQUs7QUFDYixJQUFJLHFEQUFFLEdBQUc7QUFDVCxDQUFDOztBQUVEO0FBQ0E7QUFDaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9zcmMvaW5kZXgvaW5kZXguanM/NWNkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEluZGV4IENhcGFiaWxpdGllcy5cbiAqXG4gKiBXMyBJbmRleGluZyBwcm90b2NvbCBhbGxvd3MgYXV0aG9yaXplZCBhZ2VudHMgdG8gc3VibWl0IHZlcmlmaWFibGUgY2xhaW1zXG4gKiBhYm91dCBjb250ZW50LWFkZHJlc3NlZCBkYXRhIHRvIGJlIHB1Ymxpc2hlZCBvbiB0aGUgSW50ZXJQbGFuZXRhcnkgTmV0d29ya1xuICogSW5kZXhlciAoSVBOSSksIG1ha2luZyBpdCBwdWJsaWNseSBxdWVyeWFibGUuXG4gKlxuICogVGhlc2UgY2FuIGJlIGltcG9ydGVkIGRpcmVjdGx5IHdpdGg6XG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgSW5kZXggZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvaW5kZXgnXG4gKiBgYGBcbiAqXG4gKiBAbW9kdWxlXG4gKi9cbmltcG9ydCB7IENBUiB9IGZyb20gJ0B1Y2FudG8vY29yZSdcbmltcG9ydCB7IGNhcGFiaWxpdHksIFNjaGVtYSwgb2sgfSBmcm9tICdAdWNhbnRvL3ZhbGlkYXRvcidcbmltcG9ydCB7IGVxdWFsV2l0aCwgU3BhY2VESUQsIGFuZCwgZXF1YWwgfSBmcm9tICcuLi91dGlscy5qcydcblxuLyoqXG4gKiBDYXBhYmlsaXR5IGNhbiBvbmx5IGJlIGRlbGVnYXRlZCAoYnV0IG5vdCBpbnZva2VkKSBhbGxvd2luZyBhdWRpZW5jZSB0b1xuICogZGVyaXZlIGFueSBgc3BhY2UvaW5kZXgvYCBwcmVmaXhlZCBjYXBhYmlsaXR5IGZvciB0aGUgc3BhY2UgaWRlbnRpZmllZCBieSB0aGUgRElEXG4gKiBpbiB0aGUgYHdpdGhgIGZpZWxkLlxuICovXG5leHBvcnQgY29uc3QgaW5kZXggPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnc3BhY2UvaW5kZXgvKicsXG4gIC8qKiBESUQgb2YgdGhlIHNwYWNlIHdoZXJlIGluZGV4ZWQgZGF0YSBpcyBzdG9yZWQuICovXG4gIHdpdGg6IFNwYWNlRElELFxuICBkZXJpdmVzOiBlcXVhbFdpdGgsXG59KVxuXG4vKipcbiAqIGBzcGFjZS9pbmRleC9hZGRgIGNhcGFiaWxpdHkgYWxsb3dzIGFuIGFnZW50IHRvIHN1Ym1pdCB2ZXJpZmlhYmxlIGNsYWltc1xuICogYWJvdXQgY29udGVudC1hZGRyZXNzZWQgZGF0YSB0byBiZSBwdWJsaXNoZWQgb24gdGhlIEludGVyUGxhbmV0YXJ5IE5ldHdvcmtcbiAqIEluZGV4ZXIgKElQTkkpLCBtYWtpbmcgaXQgcHVibGljbHkgcXVlcnlhYmxlLlxuICovXG5leHBvcnQgY29uc3QgYWRkID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ3NwYWNlL2luZGV4L2FkZCcsXG4gIC8qKiBESUQgb2YgdGhlIHNwYWNlIHdoZXJlIGluZGV4ZWQgZGF0YSBpcyBzdG9yZWQuICovXG4gIHdpdGg6IFNwYWNlRElELFxuICBuYjogU2NoZW1hLnN0cnVjdCh7XG4gICAgLyoqIENvbnRlbnQgQXJjaGl2ZSAoQ0FSKSBjb250YWluaW5nIHRoZSBgSW5kZXhgLiAqL1xuICAgIGluZGV4OiBTY2hlbWEubGluayh7IGNvZGU6IENBUi5jb2RlLCB2ZXJzaW9uOiAxIH0pLFxuICB9KSxcbiAgZGVyaXZlczogKGNsYWltZWQsIGRlbGVnYXRlZCkgPT5cbiAgICBhbmQoZXF1YWxXaXRoKGNsYWltZWQsIGRlbGVnYXRlZCkpIHx8XG4gICAgYW5kKGVxdWFsKGNsYWltZWQubmIuaW5kZXgsIGRlbGVnYXRlZC5uYi5pbmRleCwgJ2luZGV4JykpIHx8XG4gICAgb2soe30pLFxufSlcblxuLy8g4pqg77iPIFdlIGV4cG9ydCBpbXBvcnRzIGhlcmUgc28gdGhleSBhcmUgbm90IG9taXR0ZWQgaW4gZ2VuZXJhdGVkIHR5cGVkZWZzXG4vLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvVHlwZVNjcmlwdC9pc3N1ZXMvNTE1NDhcbmV4cG9ydCB7IFNjaGVtYSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/index/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/plan.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/plan.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAdminSession: () => (/* binding */ createAdminSession),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\n/**\n * Capability can be invoked by an account to get information about\n * the plan it is currently signed up for.\n */\nconst get = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'plan/get',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.AccountDID,\n  derives: (child, parent) => {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) || (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  },\n})\n\n/**\n * Capability can be invoked by an account to change its billing plan.\n */\nconst set = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'plan/set',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.AccountDID,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    product: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID,\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.product, parent.nb.product, 'product')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability can be invoked by an account to generate a billing admin session.\n *\n * May not be possible with all billing providers - this is designed with\n * https://docs.stripe.com/api/customer_portal/sessions/create in mind.\n */\nconst createAdminSession = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'plan/create-admin-session',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.AccountDID,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    returnURL: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string(),\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.returnURL, parent.nb.returnURL, 'returnURL')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3BsYW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUU7QUFDVDs7QUFFOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyxZQUFZLDZEQUFVO0FBQzdCO0FBQ0EsUUFBUSxpREFBVTtBQUNsQjtBQUNBLFdBQVcsOENBQUcsQ0FBQyxvREFBUyxvQkFBb0IscURBQUUsR0FBRztBQUNqRCxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDTyxZQUFZLDZEQUFVO0FBQzdCO0FBQ0EsUUFBUSxpREFBVTtBQUNsQixNQUFNLHlEQUFNO0FBQ1osYUFBYSxrREFBRztBQUNoQixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLHFEQUFFLEdBQUc7QUFDWDtBQUNBLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQiw2REFBVTtBQUM1QztBQUNBLFFBQVEsaURBQVU7QUFDbEIsTUFBTSx5REFBTTtBQUNaLGVBQWUsNERBQWE7QUFDNUIsR0FBRztBQUNIO0FBQ0E7QUFDQSxNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLGdEQUFLO0FBQ2YsTUFBTSxxREFBRSxHQUFHO0FBQ1g7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3NyYy9wbGFuLmpzPzUwYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRElELCBTY2hlbWEsIGNhcGFiaWxpdHksIG9rLCBzdHJ1Y3QgfSBmcm9tICdAdWNhbnRvL3ZhbGlkYXRvcidcbmltcG9ydCB7IEFjY291bnRESUQsIGVxdWFsLCBlcXVhbFdpdGgsIGFuZCB9IGZyb20gJy4vdXRpbHMuanMnXG5cbi8qKlxuICogQ2FwYWJpbGl0eSBjYW4gYmUgaW52b2tlZCBieSBhbiBhY2NvdW50IHRvIGdldCBpbmZvcm1hdGlvbiBhYm91dFxuICogdGhlIHBsYW4gaXQgaXMgY3VycmVudGx5IHNpZ25lZCB1cCBmb3IuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXQgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAncGxhbi9nZXQnLFxuICB3aXRoOiBBY2NvdW50RElELFxuICBkZXJpdmVzOiAoY2hpbGQsIHBhcmVudCkgPT4ge1xuICAgIHJldHVybiBhbmQoZXF1YWxXaXRoKGNoaWxkLCBwYXJlbnQpKSB8fCBvayh7fSlcbiAgfSxcbn0pXG5cbi8qKlxuICogQ2FwYWJpbGl0eSBjYW4gYmUgaW52b2tlZCBieSBhbiBhY2NvdW50IHRvIGNoYW5nZSBpdHMgYmlsbGluZyBwbGFuLlxuICovXG5leHBvcnQgY29uc3Qgc2V0ID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ3BsYW4vc2V0JyxcbiAgd2l0aDogQWNjb3VudERJRCxcbiAgbmI6IHN0cnVjdCh7XG4gICAgcHJvZHVjdDogRElELFxuICB9KSxcbiAgZGVyaXZlczogKGNoaWxkLCBwYXJlbnQpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgYW5kKGVxdWFsV2l0aChjaGlsZCwgcGFyZW50KSkgfHxcbiAgICAgIGFuZChlcXVhbChjaGlsZC5uYi5wcm9kdWN0LCBwYXJlbnQubmIucHJvZHVjdCwgJ3Byb2R1Y3QnKSkgfHxcbiAgICAgIG9rKHt9KVxuICAgIClcbiAgfSxcbn0pXG5cbi8qKlxuICogQ2FwYWJpbGl0eSBjYW4gYmUgaW52b2tlZCBieSBhbiBhY2NvdW50IHRvIGdlbmVyYXRlIGEgYmlsbGluZyBhZG1pbiBzZXNzaW9uLlxuICpcbiAqIE1heSBub3QgYmUgcG9zc2libGUgd2l0aCBhbGwgYmlsbGluZyBwcm92aWRlcnMgLSB0aGlzIGlzIGRlc2lnbmVkIHdpdGhcbiAqIGh0dHBzOi8vZG9jcy5zdHJpcGUuY29tL2FwaS9jdXN0b21lcl9wb3J0YWwvc2Vzc2lvbnMvY3JlYXRlIGluIG1pbmQuXG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVBZG1pblNlc3Npb24gPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAncGxhbi9jcmVhdGUtYWRtaW4tc2Vzc2lvbicsXG4gIHdpdGg6IEFjY291bnRESUQsXG4gIG5iOiBzdHJ1Y3Qoe1xuICAgIHJldHVyblVSTDogU2NoZW1hLnN0cmluZygpLFxuICB9KSxcbiAgZGVyaXZlczogKGNoaWxkLCBwYXJlbnQpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgYW5kKGVxdWFsV2l0aChjaGlsZCwgcGFyZW50KSkgfHxcbiAgICAgIGFuZChlcXVhbChjaGlsZC5uYi5yZXR1cm5VUkwsIHBhcmVudC5uYi5yZXR1cm5VUkwsICdyZXR1cm5VUkwnKSkgfHxcbiAgICAgIG9rKHt9KVxuICAgIClcbiAgfSxcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/plan.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/provider.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/provider.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountDID: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.AccountDID),\n/* harmony export */   Provider: () => (/* binding */ Provider),\n/* harmony export */   add: () => (/* binding */ add)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Provider Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Provider from '@web3-storage/capabilities/provider'\n * ```\n *\n * @module\n */\n\n\n\n// e.g. did:web:web3.storage or did:web:staging.web3.storage\nconst Provider = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'web' })\n\n\n\n/**\n * Capability can be invoked by an agent to add a provider to a space.\n */\nconst add = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'provider/add',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.AccountDID,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    provider: Provider,\n    consumer: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.provider, parent.nb.provider, 'provider')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.consumer, parent.nb.consumer, 'consumer')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3Byb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDK0Q7QUFDUzs7QUFFeEU7QUFDTyxpQkFBaUIsd0RBQVMsR0FBRyxlQUFlOztBQUU5Qjs7QUFFckI7QUFDQTtBQUNBO0FBQ08sWUFBWSw2REFBVTtBQUM3QjtBQUNBLFFBQVEsaURBQVU7QUFDbEIsTUFBTSx5REFBTTtBQUNaO0FBQ0EsY0FBYywrQ0FBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLHFEQUFFLEdBQUc7QUFDWDtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3Byb3ZpZGVyLmpzP2Y5OTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQcm92aWRlciBDYXBhYmlsaXRpZXNcbiAqXG4gKiBUaGVzZSBjYW4gYmUgaW1wb3J0ZWQgZGlyZWN0bHkgd2l0aDpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBQcm92aWRlciBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9wcm92aWRlcidcbiAqIGBgYFxuICpcbiAqIEBtb2R1bGVcbiAqL1xuaW1wb3J0IHsgY2FwYWJpbGl0eSwgRElELCBzdHJ1Y3QsIG9rIH0gZnJvbSAnQHVjYW50by92YWxpZGF0b3InXG5pbXBvcnQgeyBBY2NvdW50RElELCBlcXVhbFdpdGgsIGFuZCwgZXF1YWwsIFNwYWNlRElEIH0gZnJvbSAnLi91dGlscy5qcydcblxuLy8gZS5nLiBkaWQ6d2ViOndlYjMuc3RvcmFnZSBvciBkaWQ6d2ViOnN0YWdpbmcud2ViMy5zdG9yYWdlXG5leHBvcnQgY29uc3QgUHJvdmlkZXIgPSBESUQubWF0Y2goeyBtZXRob2Q6ICd3ZWInIH0pXG5cbmV4cG9ydCB7IEFjY291bnRESUQgfVxuXG4vKipcbiAqIENhcGFiaWxpdHkgY2FuIGJlIGludm9rZWQgYnkgYW4gYWdlbnQgdG8gYWRkIGEgcHJvdmlkZXIgdG8gYSBzcGFjZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGFkZCA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdwcm92aWRlci9hZGQnLFxuICB3aXRoOiBBY2NvdW50RElELFxuICBuYjogc3RydWN0KHtcbiAgICBwcm92aWRlcjogUHJvdmlkZXIsXG4gICAgY29uc3VtZXI6IFNwYWNlRElELFxuICB9KSxcbiAgZGVyaXZlczogKGNoaWxkLCBwYXJlbnQpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgYW5kKGVxdWFsV2l0aChjaGlsZCwgcGFyZW50KSkgfHxcbiAgICAgIGFuZChlcXVhbChjaGlsZC5uYi5wcm92aWRlciwgcGFyZW50Lm5iLnByb3ZpZGVyLCAncHJvdmlkZXInKSkgfHxcbiAgICAgIGFuZChlcXVhbChjaGlsZC5uYi5jb25zdW1lciwgcGFyZW50Lm5iLmNvbnN1bWVyLCAnY29uc3VtZXInKSkgfHxcbiAgICAgIG9rKHt9KVxuICAgIClcbiAgfSxcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/rate-limit.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/rate-limit.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Provider: () => (/* binding */ Provider),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   list: () => (/* binding */ list),\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Rate Limit Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as RateLimit from '@web3-storage/capabilities/rate-limit'\n * ```\n *\n * @module\n */\n\n\n\n// e.g. did:web:web3.storage or did:web:staging.web3.storage\nconst Provider = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID\n\n/**\n * Capability can be invoked by the provider or an authorized delegate to add a rate limit to a subject.\n */\nconst add = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'rate-limit/add',\n  with: Provider,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    subject: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string(),\n    rate: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.number(),\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.subject, parent.nb.subject, 'subject')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.rate, parent.nb.rate, 'rate')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability can be invoked by the provider are an authorized delegate to remove rate limits from a subject.\n */\nconst remove = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'rate-limit/remove',\n  with: Provider,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    id: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string(),\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.id, parent.nb.id, 'id')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability can be invoked by the provider or an authorized delegate to list rate limits on the given subject\n */\nconst list = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'rate-limit/list',\n  with: Provider,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    subject: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string(),\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.subject, parent.nb.subject, 'subject')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3JhdGUtbGltaXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDdUU7QUFDckI7O0FBRWxEO0FBQ08saUJBQWlCLGtEQUFHOztBQUUzQjtBQUNBO0FBQ0E7QUFDTyxZQUFZLDZEQUFVO0FBQzdCO0FBQ0E7QUFDQSxNQUFNLHlEQUFNO0FBQ1osYUFBYSw0REFBYTtBQUMxQixVQUFVLDREQUFhO0FBQ3ZCLEdBQUc7QUFDSDtBQUNBO0FBQ0EsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0sOENBQUcsQ0FBQyxnREFBSztBQUNmLE1BQU0sOENBQUcsQ0FBQyxnREFBSztBQUNmLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ08sZUFBZSw2REFBVTtBQUNoQztBQUNBO0FBQ0EsTUFBTSx5REFBTTtBQUNaLFFBQVEsNERBQWE7QUFDckIsR0FBRztBQUNIO0FBQ0E7QUFDQSxNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLGdEQUFLO0FBQ2YsTUFBTSxxREFBRSxHQUFHO0FBQ1g7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDTyxhQUFhLDZEQUFVO0FBQzlCO0FBQ0E7QUFDQSxNQUFNLHlEQUFNO0FBQ1osYUFBYSw0REFBYTtBQUMxQixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLHFEQUFFLEdBQUc7QUFDWDtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3JhdGUtbGltaXQuanM/ZjU1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJhdGUgTGltaXQgQ2FwYWJpbGl0aWVzXG4gKlxuICogVGhlc2UgY2FuIGJlIGltcG9ydGVkIGRpcmVjdGx5IHdpdGg6XG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgUmF0ZUxpbWl0IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3JhdGUtbGltaXQnXG4gKiBgYGBcbiAqXG4gKiBAbW9kdWxlXG4gKi9cbmltcG9ydCB7IGNhcGFiaWxpdHksIERJRCwgc3RydWN0LCBTY2hlbWEsIG9rIH0gZnJvbSAnQHVjYW50by92YWxpZGF0b3InXG5pbXBvcnQgeyBlcXVhbFdpdGgsIGFuZCwgZXF1YWwgfSBmcm9tICcuL3V0aWxzLmpzJ1xuXG4vLyBlLmcuIGRpZDp3ZWI6d2ViMy5zdG9yYWdlIG9yIGRpZDp3ZWI6c3RhZ2luZy53ZWIzLnN0b3JhZ2VcbmV4cG9ydCBjb25zdCBQcm92aWRlciA9IERJRFxuXG4vKipcbiAqIENhcGFiaWxpdHkgY2FuIGJlIGludm9rZWQgYnkgdGhlIHByb3ZpZGVyIG9yIGFuIGF1dGhvcml6ZWQgZGVsZWdhdGUgdG8gYWRkIGEgcmF0ZSBsaW1pdCB0byBhIHN1YmplY3QuXG4gKi9cbmV4cG9ydCBjb25zdCBhZGQgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAncmF0ZS1saW1pdC9hZGQnLFxuICB3aXRoOiBQcm92aWRlcixcbiAgbmI6IHN0cnVjdCh7XG4gICAgc3ViamVjdDogU2NoZW1hLnN0cmluZygpLFxuICAgIHJhdGU6IFNjaGVtYS5udW1iZXIoKSxcbiAgfSksXG4gIGRlcml2ZXM6IChjaGlsZCwgcGFyZW50KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIGFuZChlcXVhbFdpdGgoY2hpbGQsIHBhcmVudCkpIHx8XG4gICAgICBhbmQoZXF1YWwoY2hpbGQubmIuc3ViamVjdCwgcGFyZW50Lm5iLnN1YmplY3QsICdzdWJqZWN0JykpIHx8XG4gICAgICBhbmQoZXF1YWwoY2hpbGQubmIucmF0ZSwgcGFyZW50Lm5iLnJhdGUsICdyYXRlJykpIHx8XG4gICAgICBvayh7fSlcbiAgICApXG4gIH0sXG59KVxuXG4vKipcbiAqIENhcGFiaWxpdHkgY2FuIGJlIGludm9rZWQgYnkgdGhlIHByb3ZpZGVyIGFyZSBhbiBhdXRob3JpemVkIGRlbGVnYXRlIHRvIHJlbW92ZSByYXRlIGxpbWl0cyBmcm9tIGEgc3ViamVjdC5cbiAqL1xuZXhwb3J0IGNvbnN0IHJlbW92ZSA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdyYXRlLWxpbWl0L3JlbW92ZScsXG4gIHdpdGg6IFByb3ZpZGVyLFxuICBuYjogc3RydWN0KHtcbiAgICBpZDogU2NoZW1hLnN0cmluZygpLFxuICB9KSxcbiAgZGVyaXZlczogKGNoaWxkLCBwYXJlbnQpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgYW5kKGVxdWFsV2l0aChjaGlsZCwgcGFyZW50KSkgfHxcbiAgICAgIGFuZChlcXVhbChjaGlsZC5uYi5pZCwgcGFyZW50Lm5iLmlkLCAnaWQnKSkgfHxcbiAgICAgIG9rKHt9KVxuICAgIClcbiAgfSxcbn0pXG5cbi8qKlxuICogQ2FwYWJpbGl0eSBjYW4gYmUgaW52b2tlZCBieSB0aGUgcHJvdmlkZXIgb3IgYW4gYXV0aG9yaXplZCBkZWxlZ2F0ZSB0byBsaXN0IHJhdGUgbGltaXRzIG9uIHRoZSBnaXZlbiBzdWJqZWN0XG4gKi9cbmV4cG9ydCBjb25zdCBsaXN0ID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJ3JhdGUtbGltaXQvbGlzdCcsXG4gIHdpdGg6IFByb3ZpZGVyLFxuICBuYjogc3RydWN0KHtcbiAgICBzdWJqZWN0OiBTY2hlbWEuc3RyaW5nKCksXG4gIH0pLFxuICBkZXJpdmVzOiAoY2hpbGQsIHBhcmVudCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICBhbmQoZXF1YWxXaXRoKGNoaWxkLCBwYXJlbnQpKSB8fFxuICAgICAgYW5kKGVxdWFsKGNoaWxkLm5iLnN1YmplY3QsIHBhcmVudC5uYi5zdWJqZWN0LCAnc3ViamVjdCcpKSB8fFxuICAgICAgb2soe30pXG4gICAgKVxuICB9LFxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/rate-limit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/space.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/space.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Store: () => (/* reexport module object */ _store_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   allocate: () => (/* binding */ allocate),\n/* harmony export */   contentServe: () => (/* binding */ contentServe),\n/* harmony export */   egressRecord: () => (/* binding */ egressRecord),\n/* harmony export */   info: () => (/* binding */ info),\n/* harmony export */   space: () => (/* binding */ space),\n/* harmony export */   top: () => (/* reexport safe */ _top_js__WEBPACK_IMPORTED_MODULE_4__.top)\n/* harmony export */ });\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/store.js\");\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var _upload_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./upload.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/upload.js\");\n/* harmony import */ var _top_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./top.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/top.js\");\n/**\n * Space Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Space from '@web3-storage/capabilities/space'\n * ```\n *\n * @module\n */\n\n\n\n\n\n\n\n// Need this to workaround TS bug\n// @see https://github.com/microsoft/TypeScript/issues/51548\n\n\nconst space = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/*',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n\n/**\n * `space/info` can be derived from any of the `store/*`\n * capability that has matching `with`. This allows store service\n * to identify account based on any user request.\n */\nconst info = _store_js__WEBPACK_IMPORTED_MODULE_0__.add\n  .or(_store_js__WEBPACK_IMPORTED_MODULE_0__.list)\n  .or(_store_js__WEBPACK_IMPORTED_MODULE_0__.remove)\n  .or(_upload_js__WEBPACK_IMPORTED_MODULE_3__.add)\n  .or(_upload_js__WEBPACK_IMPORTED_MODULE_3__.list)\n  .or(_upload_js__WEBPACK_IMPORTED_MODULE_3__.remove)\n  .derive({\n    to: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n      can: 'space/info',\n      with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n    }),\n    derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n  })\n\nconst allocate = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/allocate',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n    size: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.integer(),\n  }),\n  derives: (child, parent) => {\n    const result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(child, parent)\n    if (result.ok) {\n      return child.nb.size <= parent.nb.size\n        ? (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.ok)({})\n        : (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.fail)(\n            `Claimed size ${child.nb.size} escalates delegated size ${parent.nb.size}`\n          )\n    } else {\n      return result\n    }\n  },\n})\n\n/**\n * The capability grants permission for all content serve operations that fall under the \"space/content/serve\" namespace.\n * It can be derived from any of the `space/*` capability that has matching `with`.\n */\n\nconst contentServe = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/content/serve/*',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n\n/**\n * Capability can be invoked by an agent to record egress data for a given resource.\n * It can be derived from any of the `space/content/serve/*` capability that has matching `with`.\n */\nconst egressRecord = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.capability)({\n  can: 'space/content/serve/egress/record',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.struct({\n    /** CID of the resource that was served. */\n    resource: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.link(),\n    /** Amount of bytes served. */\n    bytes: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.integer().greaterThan(0),\n    /** Timestamp of the event in milliseconds after Unix epoch. */\n    servedAt: _ucanto_validator__WEBPACK_IMPORTED_MODULE_1__.Schema.integer().greaterThan(-1),\n  }),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3NwYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtQztBQUM2QjtBQUNoQjtBQUNYO0FBQ1A7O0FBRTlCO0FBQ0E7QUFDZ0I7O0FBRVQsY0FBYyw2REFBVTtBQUMvQjtBQUNBLFFBQVEsK0NBQVE7QUFDaEIsV0FBVyxnREFBUztBQUNwQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxhQUFhLDBDQUFTO0FBQzdCLE1BQU0sMkNBQVU7QUFDaEIsTUFBTSw2Q0FBWTtBQUNsQixNQUFNLDJDQUFVO0FBQ2hCLE1BQU0sNENBQVc7QUFDakIsTUFBTSw4Q0FBYTtBQUNuQjtBQUNBLFFBQVEsNkRBQVU7QUFDbEI7QUFDQSxZQUFZLCtDQUFRO0FBQ3BCLEtBQUs7QUFDTCxhQUFhLGdEQUFTO0FBQ3RCLEdBQUc7O0FBRUksaUJBQWlCLDZEQUFVO0FBQ2xDO0FBQ0EsUUFBUSwrQ0FBUTtBQUNoQixNQUFNLDREQUFhO0FBQ25CLFVBQVUsNkRBQWM7QUFDeEIsR0FBRztBQUNIO0FBQ0EsbUJBQW1CLG9EQUFTO0FBQzVCO0FBQ0E7QUFDQSxVQUFVLHFEQUFFLEdBQUc7QUFDZixVQUFVLHVEQUFJO0FBQ2QsNEJBQTRCLGVBQWUsMkJBQTJCLGVBQWU7QUFDckY7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBOztBQUVPLHFCQUFxQiw2REFBVTtBQUN0QztBQUNBLFFBQVEsK0NBQVE7QUFDaEIsV0FBVyxnREFBUztBQUNwQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUJBQXFCLDZEQUFVO0FBQ3RDO0FBQ0EsUUFBUSwrQ0FBUTtBQUNoQixNQUFNLDREQUFhO0FBQ25CO0FBQ0EsY0FBYywwREFBVztBQUN6QjtBQUNBLFdBQVcsNkRBQWM7QUFDekI7QUFDQSxjQUFjLDZEQUFjO0FBQzVCLEdBQUc7QUFDSCxXQUFXLGdEQUFTO0FBQ3BCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9zcmMvc3BhY2UuanM/NmY4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNwYWNlIENhcGFiaWxpdGllc1xuICpcbiAqIFRoZXNlIGNhbiBiZSBpbXBvcnRlZCBkaXJlY3RseSB3aXRoOlxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFNwYWNlIGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3NwYWNlJ1xuICogYGBgXG4gKlxuICogQG1vZHVsZVxuICovXG5cbmltcG9ydCAqIGFzIFN0b3JlIGZyb20gJy4vc3RvcmUuanMnXG5pbXBvcnQgeyBjYXBhYmlsaXR5LCBTY2hlbWEsIG9rLCBmYWlsIH0gZnJvbSAnQHVjYW50by92YWxpZGF0b3InXG5pbXBvcnQgeyBTcGFjZURJRCwgZXF1YWxXaXRoIH0gZnJvbSAnLi91dGlscy5qcydcbmltcG9ydCAqIGFzIFVwbG9hZCBmcm9tICcuL3VwbG9hZC5qcydcbmV4cG9ydCB7IHRvcCB9IGZyb20gJy4vdG9wLmpzJ1xuXG4vLyBOZWVkIHRoaXMgdG8gd29ya2Fyb3VuZCBUUyBidWdcbi8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9UeXBlU2NyaXB0L2lzc3Vlcy81MTU0OFxuZXhwb3J0IHsgU3RvcmUgfVxuXG5leHBvcnQgY29uc3Qgc3BhY2UgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnc3BhY2UvKicsXG4gIHdpdGg6IFNwYWNlRElELFxuICBkZXJpdmVzOiBlcXVhbFdpdGgsXG59KVxuXG4vKipcbiAqIGBzcGFjZS9pbmZvYCBjYW4gYmUgZGVyaXZlZCBmcm9tIGFueSBvZiB0aGUgYHN0b3JlLypgXG4gKiBjYXBhYmlsaXR5IHRoYXQgaGFzIG1hdGNoaW5nIGB3aXRoYC4gVGhpcyBhbGxvd3Mgc3RvcmUgc2VydmljZVxuICogdG8gaWRlbnRpZnkgYWNjb3VudCBiYXNlZCBvbiBhbnkgdXNlciByZXF1ZXN0LlxuICovXG5leHBvcnQgY29uc3QgaW5mbyA9IFN0b3JlLmFkZFxuICAub3IoU3RvcmUubGlzdClcbiAgLm9yKFN0b3JlLnJlbW92ZSlcbiAgLm9yKFVwbG9hZC5hZGQpXG4gIC5vcihVcGxvYWQubGlzdClcbiAgLm9yKFVwbG9hZC5yZW1vdmUpXG4gIC5kZXJpdmUoe1xuICAgIHRvOiBjYXBhYmlsaXR5KHtcbiAgICAgIGNhbjogJ3NwYWNlL2luZm8nLFxuICAgICAgd2l0aDogU3BhY2VESUQsXG4gICAgfSksXG4gICAgZGVyaXZlczogZXF1YWxXaXRoLFxuICB9KVxuXG5leHBvcnQgY29uc3QgYWxsb2NhdGUgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnc3BhY2UvYWxsb2NhdGUnLFxuICB3aXRoOiBTcGFjZURJRCxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIHNpemU6IFNjaGVtYS5pbnRlZ2VyKCksXG4gIH0pLFxuICBkZXJpdmVzOiAoY2hpbGQsIHBhcmVudCkgPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IGVxdWFsV2l0aChjaGlsZCwgcGFyZW50KVxuICAgIGlmIChyZXN1bHQub2spIHtcbiAgICAgIHJldHVybiBjaGlsZC5uYi5zaXplIDw9IHBhcmVudC5uYi5zaXplXG4gICAgICAgID8gb2soe30pXG4gICAgICAgIDogZmFpbChcbiAgICAgICAgICAgIGBDbGFpbWVkIHNpemUgJHtjaGlsZC5uYi5zaXplfSBlc2NhbGF0ZXMgZGVsZWdhdGVkIHNpemUgJHtwYXJlbnQubmIuc2l6ZX1gXG4gICAgICAgICAgKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfVxuICB9LFxufSlcblxuLyoqXG4gKiBUaGUgY2FwYWJpbGl0eSBncmFudHMgcGVybWlzc2lvbiBmb3IgYWxsIGNvbnRlbnQgc2VydmUgb3BlcmF0aW9ucyB0aGF0IGZhbGwgdW5kZXIgdGhlIFwic3BhY2UvY29udGVudC9zZXJ2ZVwiIG5hbWVzcGFjZS5cbiAqIEl0IGNhbiBiZSBkZXJpdmVkIGZyb20gYW55IG9mIHRoZSBgc3BhY2UvKmAgY2FwYWJpbGl0eSB0aGF0IGhhcyBtYXRjaGluZyBgd2l0aGAuXG4gKi9cblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRTZXJ2ZSA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdzcGFjZS9jb250ZW50L3NlcnZlLyonLFxuICB3aXRoOiBTcGFjZURJRCxcbiAgZGVyaXZlczogZXF1YWxXaXRoLFxufSlcblxuLyoqXG4gKiBDYXBhYmlsaXR5IGNhbiBiZSBpbnZva2VkIGJ5IGFuIGFnZW50IHRvIHJlY29yZCBlZ3Jlc3MgZGF0YSBmb3IgYSBnaXZlbiByZXNvdXJjZS5cbiAqIEl0IGNhbiBiZSBkZXJpdmVkIGZyb20gYW55IG9mIHRoZSBgc3BhY2UvY29udGVudC9zZXJ2ZS8qYCBjYXBhYmlsaXR5IHRoYXQgaGFzIG1hdGNoaW5nIGB3aXRoYC5cbiAqL1xuZXhwb3J0IGNvbnN0IGVncmVzc1JlY29yZCA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdzcGFjZS9jb250ZW50L3NlcnZlL2VncmVzcy9yZWNvcmQnLFxuICB3aXRoOiBTcGFjZURJRCxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIC8qKiBDSUQgb2YgdGhlIHJlc291cmNlIHRoYXQgd2FzIHNlcnZlZC4gKi9cbiAgICByZXNvdXJjZTogU2NoZW1hLmxpbmsoKSxcbiAgICAvKiogQW1vdW50IG9mIGJ5dGVzIHNlcnZlZC4gKi9cbiAgICBieXRlczogU2NoZW1hLmludGVnZXIoKS5ncmVhdGVyVGhhbigwKSxcbiAgICAvKiogVGltZXN0YW1wIG9mIHRoZSBldmVudCBpbiBtaWxsaXNlY29uZHMgYWZ0ZXIgVW5peCBlcG9jaC4gKi9cbiAgICBzZXJ2ZWRBdDogU2NoZW1hLmludGVnZXIoKS5ncmVhdGVyVGhhbigtMSksXG4gIH0pLFxuICBkZXJpdmVzOiBlcXVhbFdpdGgsXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/space.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/store.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/store.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CARLink: () => (/* binding */ CARLink),\n/* harmony export */   Link: () => (/* reexport safe */ _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link),\n/* harmony export */   Schema: () => (/* reexport safe */ _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   all: () => (/* binding */ all),\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   list: () => (/* binding */ list),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   store: () => (/* binding */ store)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Store Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Store from '@web3-storage/capabilities/store'\n * ```\n *\n * @module\n */\n\n\n\n// @see https://github.com/multiformats/multicodec/blob/master/table.csv#L140\nconst code = 0x0202\n\nconst CARLink = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link({ code, version: 1 })\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derived any `store/` prefixed capability for the (memory) space identified\n * by DID in the `with` field.\n */\nconst store = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'store/*',\n  /**\n   * DID of the (memory) space where CAR is intended to\n   * be stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith,\n})\n\n/**\n * `store/add` capability allows agent to store a CAR file into a (memory) space\n * identified by did:key in the `with` field. Agent must precompute CAR locally\n * and provide it's CID and size using `nb.link` and `nb.size` fields, allowing\n * a service to provision a write location for the agent to PUT or POST desired\n * CAR into.\n */\nconst add = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'store/add',\n  /**\n   * DID of the (memory) space where CAR is intended to\n   * be stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the CAR file to be stored. Service will provision write target\n     * for this exact CAR file for agent to PUT or POST it. Attempt to write\n     * any other content will fail.\n     */\n    link: CARLink,\n    /**\n     * Size of the CAR file to be stored. Service will provision write target\n     * for this exact size. Attempt to write a larger CAR file will fail.\n     */\n    size: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.integer(),\n    /**\n     * Agent may optionally provide a link to a related CAR file using `origin`\n     * field. This is useful when storing large DAGs, agent could shard it\n     * across multiple CAR files and then link each shard with a previous one.\n     *\n     * Providing this relation tells service that given CAR is shard of the\n     * larger DAG as opposed to it being intentionally partial DAG. When DAG is\n     * not sharded, there will be only one `store/add` with `origin` left out.\n     */\n    origin: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link.optional(),\n  }),\n  derives: (claim, from) => {\n    const result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalLink)(claim, from)\n    if (result.error) {\n      return result\n    } else if (claim.nb.size !== undefined && from.nb.size !== undefined) {\n      return claim.nb.size > from.nb.size\n        ? (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(`Size constraint violation: ${claim.nb.size} > ${from.nb.size}`)\n        : (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    } else {\n      return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    }\n  },\n})\n\n/**\n * Capability to get store metadata by shard CID.\n * Use to check for inclusion, or get shard size and origin\n *\n * `nb.link` is optional to allow delegation of `store/get`\n * capability for any shard CID. If link is specified, then the\n * capability only allows a get for that specific CID.\n *\n * When used as as an invocation, `nb.link` must be specified.\n */\nconst get = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'store/get',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * shard CID to fetch info about.\n     */\n    link: CARLink.optional(),\n  }),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalLink,\n})\n\n/**\n * Capability can be used to remove the stored CAR file from the (memory)\n * space identified by `with` field.\n */\nconst remove = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'store/remove',\n  /**\n   * DID of the (memory) space where CAR is intended to\n   * be stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the CAR file to be removed from the store.\n     */\n    link: CARLink,\n  }),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalLink,\n})\n\n/**\n * Capability can be invoked to request a list of stored CAR files in the\n * (memory) space identified by `with` field.\n */\nconst list = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'store/list',\n  /**\n   * DID of the (memory) space where CAR is intended to\n   * be stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * A pointer that can be moved back and forth on the list.\n     * It can be used to paginate a list for instance.\n     */\n    cursor: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string().optional(),\n    /**\n     * Maximum number of items per page.\n     */\n    size: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.integer().optional(),\n    /**\n     * If true, return page of results preceding cursor. Defaults to false.\n     */\n    pre: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.boolean().optional(),\n  }),\n  derives: (claimed, delegated) => {\n    if (claimed.with !== delegated.with) {\n      return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n        `Expected 'with: \"${delegated.with}\"' instead got '${claimed.with}'`\n      )\n    }\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  },\n})\n\nconst all = add.or(remove).or(list)\n\n// ⚠️ We export imports here so they are not omitted in generated typedes\n// @see https://github.com/microsoft/TypeScript/issues/51548\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/subscription.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/subscription.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProviderDID: () => (/* binding */ ProviderDID),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   list: () => (/* binding */ list)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\n// e.g. did:web:web3.storage or did:web:staging.web3.storage\nconst ProviderDID = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'web' })\n\n/**\n * Capability can be invoked by a provider to get information about a subscription.\n */\nconst get = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'subscription/get',\n  with: ProviderDID,\n  nb: (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.struct)({\n    subscription: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string(),\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.subscription, parent.nb.subscription, 'consumer')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability can be invoked to retrieve the list of subscriptions for an\n * account.\n */\nconst list = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'subscription/list',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.AccountDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith,\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3N1YnNjcmlwdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RTtBQUNUOztBQUU5RDtBQUNPLG9CQUFvQix3REFBUyxHQUFHLGVBQWU7O0FBRXREO0FBQ0E7QUFDQTtBQUNPLFlBQVksNkRBQVU7QUFDN0I7QUFDQTtBQUNBLE1BQU0seURBQU07QUFDWixrQkFBa0IsNERBQWE7QUFDL0IsR0FBRztBQUNIO0FBQ0E7QUFDQSxNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLGdEQUFLO0FBQ2YsTUFBTSxxREFBRSxHQUFHO0FBQ1g7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNPLGFBQWEsNkRBQVU7QUFDOUI7QUFDQSxRQUFRLGlEQUFVO0FBQ2xCLFdBQVcsZ0RBQVM7QUFDcEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3NyYy9zdWJzY3JpcHRpb24uanM/M2Q1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYXBhYmlsaXR5LCBESUQsIHN0cnVjdCwgb2ssIFNjaGVtYSB9IGZyb20gJ0B1Y2FudG8vdmFsaWRhdG9yJ1xuaW1wb3J0IHsgQWNjb3VudERJRCwgZXF1YWxXaXRoLCBhbmQsIGVxdWFsIH0gZnJvbSAnLi91dGlscy5qcydcblxuLy8gZS5nLiBkaWQ6d2ViOndlYjMuc3RvcmFnZSBvciBkaWQ6d2ViOnN0YWdpbmcud2ViMy5zdG9yYWdlXG5leHBvcnQgY29uc3QgUHJvdmlkZXJESUQgPSBESUQubWF0Y2goeyBtZXRob2Q6ICd3ZWInIH0pXG5cbi8qKlxuICogQ2FwYWJpbGl0eSBjYW4gYmUgaW52b2tlZCBieSBhIHByb3ZpZGVyIHRvIGdldCBpbmZvcm1hdGlvbiBhYm91dCBhIHN1YnNjcmlwdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldCA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdzdWJzY3JpcHRpb24vZ2V0JyxcbiAgd2l0aDogUHJvdmlkZXJESUQsXG4gIG5iOiBzdHJ1Y3Qoe1xuICAgIHN1YnNjcmlwdGlvbjogU2NoZW1hLnN0cmluZygpLFxuICB9KSxcbiAgZGVyaXZlczogKGNoaWxkLCBwYXJlbnQpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgYW5kKGVxdWFsV2l0aChjaGlsZCwgcGFyZW50KSkgfHxcbiAgICAgIGFuZChlcXVhbChjaGlsZC5uYi5zdWJzY3JpcHRpb24sIHBhcmVudC5uYi5zdWJzY3JpcHRpb24sICdjb25zdW1lcicpKSB8fFxuICAgICAgb2soe30pXG4gICAgKVxuICB9LFxufSlcblxuLyoqXG4gKiBDYXBhYmlsaXR5IGNhbiBiZSBpbnZva2VkIHRvIHJldHJpZXZlIHRoZSBsaXN0IG9mIHN1YnNjcmlwdGlvbnMgZm9yIGFuXG4gKiBhY2NvdW50LlxuICovXG5leHBvcnQgY29uc3QgbGlzdCA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICdzdWJzY3JpcHRpb24vbGlzdCcsXG4gIHdpdGg6IEFjY291bnRESUQsXG4gIGRlcml2ZXM6IGVxdWFsV2l0aCxcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/top.js":
/*!************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/top.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   top: () => (/* binding */ top)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Top Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Account from '@web3-storage/capabilities/top'\n * ```\n *\n * @module\n */\n\n\n\n\n/**\n * Represents the top `{ can: '*', with: 'did:key:zAlice' }` capability, which we often\n * also call account linking.\n *\n * @see {@link https://github.com/ucan-wg/spec#52-top}\n */\nconst top = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: '*',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.or(_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(), _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.literal('ucan:*')),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith,\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3RvcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0Q7QUFDaEI7O0FBRXRDO0FBQ0EseUJBQXlCLGtDQUFrQztBQUMzRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ08sWUFBWSw2REFBVTtBQUM3QjtBQUNBLFFBQVEsd0RBQVMsQ0FBQyx5REFBVSxJQUFJLDZEQUFjO0FBQzlDLFdBQVcsZ0RBQVM7QUFDcEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3NyYy90b3AuanM/NTYxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRvcCBDYXBhYmlsaXRpZXNcbiAqXG4gKiBUaGVzZSBjYW4gYmUgaW1wb3J0ZWQgZGlyZWN0bHkgd2l0aDpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBBY2NvdW50IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3RvcCdcbiAqIGBgYFxuICpcbiAqIEBtb2R1bGVcbiAqL1xuXG5pbXBvcnQgeyBjYXBhYmlsaXR5LCBTY2hlbWEgfSBmcm9tICdAdWNhbnRvL3ZhbGlkYXRvcidcbmltcG9ydCB7IGVxdWFsV2l0aCB9IGZyb20gJy4vdXRpbHMuanMnXG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgdG9wIGB7IGNhbjogJyonLCB3aXRoOiAnZGlkOmtleTp6QWxpY2UnIH1gIGNhcGFiaWxpdHksIHdoaWNoIHdlIG9mdGVuXG4gKiBhbHNvIGNhbGwgYWNjb3VudCBsaW5raW5nLlxuICpcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS91Y2FuLXdnL3NwZWMjNTItdG9wfVxuICovXG5leHBvcnQgY29uc3QgdG9wID0gY2FwYWJpbGl0eSh7XG4gIGNhbjogJyonLFxuICB3aXRoOiBTY2hlbWEub3IoU2NoZW1hLmRpZCgpLCBTY2hlbWEubGl0ZXJhbCgndWNhbjoqJykpLFxuICBkZXJpdmVzOiBlcXVhbFdpdGgsXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/top.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/types.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/types.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBUyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3NyYy90eXBlcy5qcz9hMDZkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/ucan.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/ucan.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UCANLink: () => (/* binding */ UCANLink),\n/* harmony export */   attest: () => (/* binding */ attest),\n/* harmony export */   conclude: () => (/* binding */ conclude),\n/* harmony export */   revoke: () => (/* binding */ revoke),\n/* harmony export */   ucan: () => (/* binding */ ucan)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * UCAN core capabilities.\n */\n\n\n\n\n\nconst UCANLink =\n  /** @type {Schema.Schema<API.UCANLink, unknown>} */\n  (_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link({ version: 1 }))\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derived any `store/` prefixed capability for the (memory) space identified\n * by DID in the `with` field.\n */\nconst ucan = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'ucan/*',\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n\n/**\n * `ucan/revoke` capability is a replacement for the\n * [UCAN Revocation](https://github.com/ucan-wg/spec#66-revocation) that had\n * been proposed to a UCAN working group and had a tentative support from\n * members.\n *\n * Capability can be used to revoke `nb.ucan` authorization from all proofs\n * chains that lead to the UCAN issued or being delegated to the principal\n * identified by the `with` field. Note that revoked UCAN MUST continue to\n * be valid in the invocation where proof chain does not lead to the principal\n * identified by the `with` field.\n */\nconst revoke = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'ucan/revoke',\n  /**\n   * DID of the principal authorizing revocation.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * UCAN being revoked from all proof chains that lead to the UCAN that is\n     * either issued (iss) by or delegated to (aud) the principal identified\n     * by the `with` field.\n     */\n    ucan: UCANLink,\n    /**\n     * Proof chain illustrating the path from revoked UCAN to the one that is\n     * either issued (iss) by or delegated to (aud) the principal identified\n     * by the `with` field.\n     *\n     * If the UCAN being revoked is either issued (iss) by or delegated to (aud)\n     * the principal identified by the `with` field no `proof` is required and\n     * it can be omitted or set to an empty array.\n     *\n     * It is RECOMMENDED that `proof` is provided in all other cases otherwise\n     * it MAY not be possible to verify that revoking principal is a participant\n     * in the proof chain.\n     */\n    proof: UCANLink.array().optional(),\n  }),\n  derives: (claim, from) =>\n    // With field MUST be the same\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ??\n    // UCAN being revoked MUST be the same\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.ucan, from.nb.ucan, 'nb.ucan')) ??\n    // And proof chain MUST be the same\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(\n      (claim.nb.proof ?? []).join('/'),\n      (from.nb.proof ?? []).join('/'),\n      'nb.proof'\n    ),\n})\n\n/**\n * `ucan/conclude` capability represents a receipt using a special UCAN capability.\n *\n * The UCAN invocation specification defines receipt record, that is cryptographically\n * signed description of the invocation output and requested effects. Receipt\n * structure is very similar to UCAN except it has no notion of expiry nor it is\n * possible to delegate ability to issue receipt to another principal.\n */\nconst conclude = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'ucan/conclude',\n  /**\n   * DID of the principal representing the Conclusion Authority.\n   * MUST be the DID of the audience of the ran invocation.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * CID of the content with the Receipt.\n     */\n    receipt: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link(),\n  }),\n  derives: (claim, from) =>\n    // With field MUST be the same\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.receipt, from.nb.receipt, 'nb.receipt')) ||\n    (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({}),\n})\n\n/**\n * Issued by trusted authority (usually the one handling invocation) that attest\n * that specific UCAN delegation has been considered authentic.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-session.md#authorization-session\n * \n * @example\n * ```js\n * {\n    iss: \"did:web:web3.storage\",\n    aud: \"did:key:z6Mkk89bC3JrVqKie71YEcc5M1SMVxuCgNx6zLZ8SYJsxALi\",\n    att: [{\n      \"with\": \"did:web:web3.storage\",\n      \"can\": \"ucan/attest\",\n      \"nb\": {\n        \"proof\": {\n          \"/\": \"bafyreifer23oxeyamllbmrfkkyvcqpujevuediffrpvrxmgn736f4fffui\"\n        }\n      }\n    }],\n    exp: null\n    sig: \"...\"\n  }\n * ```\n */\nconst attest = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'ucan/attest',\n  // Should be web3.storage DID\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    // UCAN delegation that is being attested.\n    proof: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link({ version: 1 }),\n  }),\n  derives: (claim, from) =>\n    // With field MUST be the same\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ??\n    // UCAN link MUST be the same\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.proof, from.nb.proof, 'nb.proof'),\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/ucan.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/upload.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/upload.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Link: () => (/* reexport safe */ _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link),\n/* harmony export */   Schema: () => (/* reexport safe */ _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   all: () => (/* binding */ all),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   list: () => (/* binding */ list),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   upload: () => (/* binding */ upload)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _ucanto_transport_car__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/transport/car */ \"(ssr)/./node_modules/@ucanto/transport/src/car.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/**\n * Upload Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Account from '@web3-storage/capabilities/upload'\n * ```\n *\n * @module\n */\n\n\n\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derived any `upload/` prefixed capability for the (memory) space identified\n * by DID in the `with` field.\n */\nconst upload = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'upload/*',\n  /**\n   * DID of the (memory) space where upload is add to the\n   * upload list.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n\n/**\n * Schema representing a link (a.k.a CID) to a CAR file. Enforces CAR codec code and CID v1.\n */\nconst CARLink = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link.match({ code: _ucanto_transport_car__WEBPACK_IMPORTED_MODULE_1__.codec.code, version: 1 })\n\n/**\n * Capability allows an agent to add an arbitrary DAG (root) to the upload list\n * of the specified (memory) space (identified by did:key in the `with` field).\n * It is recommended to provide an optional list of shard links that contain\n * fragments of this DAG, as it allows system to optimize block discovery, it is\n * also a way to communicate DAG partiality - this upload contains partial DAG\n * identified by the given `root`.\n *\n * Usually when agent wants to upload a DAG it will encode it as a one or more\n * CAR files (shards) and invoke `store/add` capability for each one. Once all\n * shards are stored it will invoke `upload/add` capability (providing link to\n * a DAG root and all the shards) to add it the upload list.\n *\n * That said `upload/add` could be invoked without invoking `store/add`s e.g.\n * because another (memory) space may already have those CARs.\n *\n * Note: If DAG with the given root is already in the upload list, invocation\n * will simply update `shards` to be a union of existing and new shards.\n */\nconst add = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'upload/add',\n  /**\n   * DID of the (memory) space where uploaded is added.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Root CID of the DAG to be added to the upload list.\n     */\n    root: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link,\n    /**\n     * CIDs to the CAR files that contain blocks of the DAG.\n     */\n    shards: CARLink.array().optional(),\n  }),\n  derives: (self, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(self, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(self.nb.root, from.nb.root, 'root')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(self.nb.shards, from.nb.shards, 'shards')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability to get upload metadata by root CID.\n * Use to check for inclusion, or find the shards for a root.\n *\n * `nb.root` is optional to allow delegation of `upload/get`\n * capability for any root. If root is specified, then the\n * capability only allows a get for that single cid.\n *\n * When used as as an invocation, `nb.root` must be specified.\n */\nconst get = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'upload/get',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Root CID of the DAG to fetch upload info about.\n     */\n    root: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link.optional(),\n  }),\n  derives: (self, from) => {\n    const res = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(self, from)\n    if (res.error) {\n      return res\n    }\n    if (!from.nb.root) {\n      return res\n    }\n    // root must match if specified in the proof\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(self.nb.root, from.nb.root, 'root')\n  },\n})\n\n/**\n * Capability removes an upload (identified by it's root CID) from the upload\n * list. Please note that removing an upload does not delete corresponding shards\n * from the store, however that could be done via `store/remove` invocations.\n */\nconst remove = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'upload/remove',\n  /**\n   * DID of the (memory) space where uploaded is removed from.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Root CID of the DAG to be removed from the upload list.\n     */\n    root: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link,\n  }),\n  derives: (self, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(self, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(self.nb.root, from.nb.root, 'root')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * Capability can be invoked to request a list of uploads in the (memory) space\n * identified by the `with` field.\n */\nconst list = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'upload/list',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * A pointer that can be moved back and forth on the list.\n     * It can be used to paginate a list for instance.\n     */\n    cursor: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string().optional(),\n    /**\n     * Maximum number of items per page.\n     */\n    size: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.integer().optional(),\n    /**\n     * If true, return page of results preceding cursor. Defaults to false.\n     */\n    pre: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.boolean().optional(),\n  }),\n})\n\nconst all = add.or(remove).or(list)\n\n// ⚠️ We export imports here so they are not omitted in generated typedefs\n// @see https://github.com/microsoft/TypeScript/issues/51548\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/upload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/usage.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/usage.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   report: () => (/* binding */ report),\n/* harmony export */   usage: () => (/* binding */ usage)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * be derived any `usage/` prefixed capability for the (memory) space identified\n * by DID in the `with` field.\n */\nconst usage = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'usage/*',\n  /** DID of the (memory) space where usage is derived. */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith,\n})\n\n/**\n * Capability can be invoked by an agent to retrieve usage data for a space in\n * a given period.\n */\nconst report = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'usage/report',\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_1__.SpaceDID,\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /** Period to retrieve events between. */\n    period: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n      /** Time in seconds after Unix epoch (inclusive). */\n      from: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.integer().greaterThan(-1),\n      /** Time in seconds after Unix epoch (exclusive). */\n      to: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.integer().greaterThan(-1),\n    }),\n  }),\n  derives: (child, parent) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalWith)(child, parent)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)(\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.period?.from, parent.nb.period?.from, 'period.from')\n      ) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equal)(child.nb.period?.to, parent.nb.period?.to, 'period.to')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3VzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEQ7QUFDRTs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGNBQWMsNkRBQVU7QUFDL0I7QUFDQTtBQUNBLFFBQVEsK0NBQVE7QUFDaEIsV0FBVyxnREFBUztBQUNwQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZUFBZSw2REFBVTtBQUNoQztBQUNBLFFBQVEsK0NBQVE7QUFDaEIsTUFBTSw0REFBYTtBQUNuQjtBQUNBLFlBQVksNERBQWE7QUFDekI7QUFDQSxZQUFZLDZEQUFjO0FBQzFCO0FBQ0EsVUFBVSw2REFBYztBQUN4QixLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQSxNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRztBQUNULFFBQVEsZ0RBQUs7QUFDYjtBQUNBLE1BQU0sOENBQUcsQ0FBQyxnREFBSztBQUNmLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9zcmMvdXNhZ2UuanM/NDI3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYXBhYmlsaXR5LCBvaywgU2NoZW1hIH0gZnJvbSAnQHVjYW50by92YWxpZGF0b3InXG5pbXBvcnQgeyBhbmQsIGVxdWFsLCBlcXVhbFdpdGgsIFNwYWNlRElEIH0gZnJvbSAnLi91dGlscy5qcydcblxuLyoqXG4gKiBDYXBhYmlsaXR5IGNhbiBvbmx5IGJlIGRlbGVnYXRlZCAoYnV0IG5vdCBpbnZva2VkKSBhbGxvd2luZyBhdWRpZW5jZSB0b1xuICogYmUgZGVyaXZlZCBhbnkgYHVzYWdlL2AgcHJlZml4ZWQgY2FwYWJpbGl0eSBmb3IgdGhlIChtZW1vcnkpIHNwYWNlIGlkZW50aWZpZWRcbiAqIGJ5IERJRCBpbiB0aGUgYHdpdGhgIGZpZWxkLlxuICovXG5leHBvcnQgY29uc3QgdXNhZ2UgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAndXNhZ2UvKicsXG4gIC8qKiBESUQgb2YgdGhlIChtZW1vcnkpIHNwYWNlIHdoZXJlIHVzYWdlIGlzIGRlcml2ZWQuICovXG4gIHdpdGg6IFNwYWNlRElELFxuICBkZXJpdmVzOiBlcXVhbFdpdGgsXG59KVxuXG4vKipcbiAqIENhcGFiaWxpdHkgY2FuIGJlIGludm9rZWQgYnkgYW4gYWdlbnQgdG8gcmV0cmlldmUgdXNhZ2UgZGF0YSBmb3IgYSBzcGFjZSBpblxuICogYSBnaXZlbiBwZXJpb2QuXG4gKi9cbmV4cG9ydCBjb25zdCByZXBvcnQgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAndXNhZ2UvcmVwb3J0JyxcbiAgd2l0aDogU3BhY2VESUQsXG4gIG5iOiBTY2hlbWEuc3RydWN0KHtcbiAgICAvKiogUGVyaW9kIHRvIHJldHJpZXZlIGV2ZW50cyBiZXR3ZWVuLiAqL1xuICAgIHBlcmlvZDogU2NoZW1hLnN0cnVjdCh7XG4gICAgICAvKiogVGltZSBpbiBzZWNvbmRzIGFmdGVyIFVuaXggZXBvY2ggKGluY2x1c2l2ZSkuICovXG4gICAgICBmcm9tOiBTY2hlbWEuaW50ZWdlcigpLmdyZWF0ZXJUaGFuKC0xKSxcbiAgICAgIC8qKiBUaW1lIGluIHNlY29uZHMgYWZ0ZXIgVW5peCBlcG9jaCAoZXhjbHVzaXZlKS4gKi9cbiAgICAgIHRvOiBTY2hlbWEuaW50ZWdlcigpLmdyZWF0ZXJUaGFuKC0xKSxcbiAgICB9KSxcbiAgfSksXG4gIGRlcml2ZXM6IChjaGlsZCwgcGFyZW50KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIGFuZChlcXVhbFdpdGgoY2hpbGQsIHBhcmVudCkpIHx8XG4gICAgICBhbmQoXG4gICAgICAgIGVxdWFsKGNoaWxkLm5iLnBlcmlvZD8uZnJvbSwgcGFyZW50Lm5iLnBlcmlvZD8uZnJvbSwgJ3BlcmlvZC5mcm9tJylcbiAgICAgICkgfHxcbiAgICAgIGFuZChlcXVhbChjaGlsZC5uYi5wZXJpb2Q/LnRvLCBwYXJlbnQubmIucGVyaW9kPy50bywgJ3BlcmlvZC50bycpKSB8fFxuICAgICAgb2soe30pXG4gICAgKVxuICB9LFxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/usage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountDID: () => (/* binding */ AccountDID),\n/* harmony export */   Await: () => (/* binding */ Await),\n/* harmony export */   ProviderDID: () => (/* binding */ ProviderDID),\n/* harmony export */   SpaceDID: () => (/* binding */ SpaceDID),\n/* harmony export */   and: () => (/* binding */ and),\n/* harmony export */   canDelegateAbility: () => (/* binding */ canDelegateAbility),\n/* harmony export */   canDelegateURI: () => (/* binding */ canDelegateURI),\n/* harmony export */   checkLink: () => (/* binding */ checkLink),\n/* harmony export */   equal: () => (/* binding */ equal),\n/* harmony export */   equalBlob: () => (/* binding */ equalBlob),\n/* harmony export */   equalBody: () => (/* binding */ equalBody),\n/* harmony export */   equalContent: () => (/* binding */ equalContent),\n/* harmony export */   equalLink: () => (/* binding */ equalLink),\n/* harmony export */   equalWith: () => (/* binding */ equalWith)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var uint8arrays_equals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/equals */ \"(ssr)/./node_modules/@web3-storage/capabilities/node_modules/uint8arrays/dist/src/equals.js\");\n\n// eslint-disable-next-line no-unused-vars\n\n\n\n\n// e.g. did:web:web3.storage or did:web:staging.web3.storage\nconst ProviderDID = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'web' })\n\nconst SpaceDID = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'key' })\n\nconst AccountDID = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.DID.match({ method: 'mailto' })\n\nconst Await = _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n  'ucan/await': _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.tuple([_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.string(), _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.link()]),\n})\n\n/**\n * Check URI can be delegated.\n *\n * @param {string} [child]\n * @param {string} [parent]\n */\nfunction canDelegateURI(child, parent) {\n  if (parent === undefined) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  }\n  if (child !== undefined && parent.endsWith('*')) {\n    return child.startsWith(parent.slice(0, -1))\n      ? (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n      : (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(`${child} does not match ${parent}`)\n  }\n\n  return child === parent\n    ? (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    : (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(`${child} is different from ${parent}`)\n}\n\n/**\n * Checks that `with` on claimed capability is the same as `with`\n * in delegated capability. Note this will ignore `can` field.\n *\n * @param {Types.ParsedCapability} child\n * @param {Types.ParsedCapability} parent\n */\nfunction equalWith(child, parent) {\n  return child.with === parent.with\n    ? (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    : (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(`Can not derive ${child.can} with ${child.with} from ${parent.with}`)\n}\n\n/**\n * @param {unknown} child\n * @param {unknown} parent\n * @param {string} constraint\n */\nfunction equal(child, parent, constraint) {\n  if (parent === undefined || parent === '*') {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  } else if (String(child) === String(parent)) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  } else {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Constrain violation: ${child} violates imposed ${constraint} constraint ${parent}`\n    )\n  }\n}\n\n/**\n * @template {Types.ParsedCapability<\"store/add\"|\"store/get\"|\"store/remove\", Types.URI<'did:'>, {link?: Types.Link<unknown, number, number, 0|1>}>} T\n * @param {T} claimed\n * @param {T} delegated\n * @returns {Types.Result<{}, Types.Failure>}\n */\nconst equalLink = (claimed, delegated) => {\n  if (claimed.with !== delegated.with) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Expected 'with: \"${delegated.with}\"' instead got '${claimed.with}'`\n    )\n  } else if (\n    delegated.nb.link &&\n    `${delegated.nb.link}` !== `${claimed.nb.link}`\n  ) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Link ${claimed.nb.link ? `${claimed.nb.link}` : ''} violates imposed ${\n        delegated.nb.link\n      } constraint.`\n    )\n  } else {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  }\n}\n\n/**\n * @template {Types.ParsedCapability<\"space/blob/add\"|\"space/blob/remove\"|\"web3.storage/blob/allocate\"|\"web3.storage/blob/accept\", Types.URI<'did:'>, {blob: { digest: Uint8Array, size: number }}>} T\n * @param {T} claimed\n * @param {T} delegated\n * @returns {Types.Result<{}, Types.Failure>}\n */\nconst equalBlob = (claimed, delegated) => {\n  if (claimed.with !== delegated.with) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Expected 'with: \"${delegated.with}\"' instead got '${claimed.with}'`\n    )\n  } else if (\n    delegated.nb.blob.digest &&\n    !(0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_2__.equals)(delegated.nb.blob.digest, claimed.nb.blob.digest)\n  ) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Link ${\n        claimed.nb.blob.digest ? `${claimed.nb.blob.digest}` : ''\n      } violates imposed ${delegated.nb.blob.digest} constraint.`\n    )\n  } else if (\n    claimed.nb.blob.size !== undefined &&\n    delegated.nb.blob.size !== undefined\n  ) {\n    return claimed.nb.blob.size > delegated.nb.blob.size\n      ? (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n          `Size constraint violation: ${claimed.nb.blob.size} > ${delegated.nb.blob.size}`\n        )\n      : (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  } else {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  }\n}\n\n/**\n * @template {Types.ParsedCapability<\"http/put\", Types.URI<'did:'>, {body: { digest: Uint8Array, size: number }}>} T\n * @param {T} claimed\n * @param {T} delegated\n * @returns {Types.Result<{}, Types.Failure>}\n */\nconst equalBody = (claimed, delegated) => {\n  if (claimed.with !== delegated.with) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Expected 'with: \"${delegated.with}\"' instead got '${claimed.with}'`\n    )\n  } else if (\n    delegated.nb.body.digest &&\n    !(0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_2__.equals)(delegated.nb.body.digest, claimed.nb.body.digest)\n  ) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Link ${\n        claimed.nb.body.digest ? `${claimed.nb.body.digest}` : ''\n      } violates imposed ${delegated.nb.body.digest} constraint.`\n    )\n  } else if (\n    claimed.nb.body.size !== undefined &&\n    delegated.nb.body.size !== undefined\n  ) {\n    return claimed.nb.body.size > delegated.nb.body.size\n      ? (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n          `Size constraint violation: ${claimed.nb.body.size} > ${delegated.nb.body.size}`\n        )\n      : (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  } else {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  }\n}\n\n/**\n * @template {Types.ParsedCapability<\"blob/add\"|\"blob/remove\"|\"blob/allocate\"|\"blob/accept\"|\"http/put\", Types.URI<'did:'>, {content: Uint8Array}>} T\n * @param {T} claimed\n * @param {T} delegated\n * @returns {Types.Result<{}, Types.Failure>}\n */\nconst equalContent = (claimed, delegated) => {\n  if (claimed.with !== delegated.with) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Expected 'with: \"${delegated.with}\"' instead got '${claimed.with}'`\n    )\n  } else if (\n    delegated.nb.content &&\n    !(0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_2__.equals)(delegated.nb.content, claimed.nb.content)\n  ) {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.fail)(\n      `Link ${\n        claimed.nb.content ? `${claimed.nb.content}` : ''\n      } violates imposed ${delegated.nb.content} constraint.`\n    )\n  } else {\n    return (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n  }\n}\n\n/**\n * Checks that `claimed` {@link Types.Link} meets an `imposed` constraint.\n *\n * @param {Types.UnknownLink} claimed\n * @param {Types.UnknownLink|undefined} imposed\n * @param {string} at\n * @returns {Types.Result<{}, Types.Failure>}\n */\nconst checkLink = (claimed, imposed, at) => {\n  return equal(\n    String(claimed),\n    imposed === undefined ? undefined : String(imposed),\n    at\n  )\n}\n\n/**\n * @template T\n * @param {Types.Result<T , Types.Failure>} result\n * @returns {{error: Types.Failure, ok?:undefined}|undefined}\n */\nconst and = (result) => (result.error ? result : undefined)\n\n/**\n *\n * @param {import('@ucanto/interface').Ability} ability\n */\nfunction parseAbility(ability) {\n  const [namespace, ...segments] = ability.split('/')\n  return { namespace, segments }\n}\n\n/**\n *\n * TODO: needs to account for caps derived from different namespaces like 'account/info' can be derived from 'store/add'\n *\n * @param {import('@ucanto/interface').Ability} parent\n * @param {import('@ucanto/interface').Ability} child\n */\nfunction canDelegateAbility(parent, child) {\n  const parsedParent = parseAbility(parent)\n  const parsedChild = parseAbility(child)\n\n  // Parent is wildcard\n  if (parsedParent.namespace === '*' && parsedParent.segments.length === 0) {\n    return true\n  }\n\n  // Child is wild card so it can not be delegated from anything\n  if (parsedChild.namespace === '*' && parsedChild.segments.length === 0) {\n    return false\n  }\n\n  // namespaces don't match\n  if (parsedParent.namespace !== parsedChild.namespace) {\n    return false\n  }\n\n  // given that namespaces match and parent first segment is wildcard\n  if (parsedParent.segments[0] === '*') {\n    return true\n  }\n\n  // Array equality\n  if (parsedParent.segments.length !== parsedChild.segments.length) {\n    return false\n  }\n\n  // all segments must match\n  return parsedParent.segments.reduce(\n    (acc, v, i) => acc && parsedChild.segments[i] === v,\n    true\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/capabilities/src/web3.storage/blob.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3-storage/capabilities/src/web3.storage/blob.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Link: () => (/* reexport safe */ _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link),\n/* harmony export */   Schema: () => (/* reexport safe */ _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema),\n/* harmony export */   accept: () => (/* binding */ accept),\n/* harmony export */   allocate: () => (/* binding */ allocate),\n/* harmony export */   blob: () => (/* binding */ blob)\n/* harmony export */ });\n/* harmony import */ var _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/validator */ \"(ssr)/./node_modules/@ucanto/validator/src/lib.js\");\n/* harmony import */ var _blob_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blob.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n\n\n\n\n/**\n * Service capabilities for Blob protocol\n */\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derived any `web3.storage/blob/` prefixed capability for the (memory) space identified\n * by DID in the `with` field.\n */\nconst blob = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'web3.storage/blob/*',\n  /**\n   * DID of the (memory) space where Blob is intended to\n   * be stored.\n   */\n  with: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  derives: _utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith,\n})\n\n/**\n * `web3.storage/blob//allocate` capability can be invoked to create a memory\n * address where blob content can be written via HTTP PUT request.\n */\nconst allocate = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'web3.storage/blob/allocate',\n  /**\n   * Provider DID.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Blob to allocate on the space.\n     */\n    blob: _blob_js__WEBPACK_IMPORTED_MODULE_1__.content,\n    /**\n     * The Link for an Add Blob task, that caused an allocation\n     */\n    cause: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Link,\n    /**\n     * DID of the user space where allocation takes place\n     */\n    space: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalBlob)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkLink)(claim.nb.cause, from.nb.cause, 'cause')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(claim.nb.space, from.nb.space, 'space')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n/**\n * `blob/accept` capability invocation should either succeed when content is\n * delivered on allocated address or fail if no content is allocation expires\n * without content being delivered.\n */\nconst accept = (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.capability)({\n  can: 'web3.storage/blob/accept',\n  /**\n   * Provider DID.\n   */\n  with: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.did(),\n  nb: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.struct({\n    /**\n     * Blob to accept.\n     */\n    blob: _blob_js__WEBPACK_IMPORTED_MODULE_1__.content,\n    /**\n     * Content location commitment time to live, which will be encoded as expiry of the issued location claim.\n     */\n    ttl: _ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.Schema.integer().optional(),\n    /**\n     * DID of the user space where allocation took place\n     */\n    space: _utils_js__WEBPACK_IMPORTED_MODULE_2__.SpaceDID,\n    /**\n     * This task is blocked on `http/put` receipt available\n     */\n    _put: _utils_js__WEBPACK_IMPORTED_MODULE_2__.Await,\n  }),\n  derives: (claim, from) => {\n    return (\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalWith)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalBlob)(claim, from)) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(claim.nb.ttl, from.nb.ttl, 'ttl')) ||\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.and)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equal)(claim.nb.space, from.nb.space, 'space')) ||\n      (0,_ucanto_validator__WEBPACK_IMPORTED_MODULE_0__.ok)({})\n    )\n  },\n})\n\n// ⚠️ We export imports here so they are not omitted in generated typedefs\n// @see https://github.com/microsoft/TypeScript/issues/51548\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvc3JjL3dlYjMuc3RvcmFnZS9ibG9iLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWdFO0FBQzVCO0FBU2hCOztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sYUFBYSw2REFBVTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwrQ0FBUTtBQUNoQixXQUFXLGdEQUFTO0FBQ3BCLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpQkFBaUIsNkRBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFVO0FBQ2xCLE1BQU0sNERBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsVUFBVSw2Q0FBTztBQUNqQjtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1EQUFJO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsV0FBVywrQ0FBUTtBQUNuQixHQUFHO0FBQ0g7QUFDQTtBQUNBLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsb0RBQVM7QUFDbkIsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0sOENBQUcsQ0FBQyxnREFBSztBQUNmLE1BQU0scURBQUUsR0FBRztBQUNYO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGVBQWUsNkRBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFVO0FBQ2xCLE1BQU0sNERBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsVUFBVSw2Q0FBTztBQUNqQjtBQUNBO0FBQ0E7QUFDQSxTQUFTLDZEQUFjO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsK0NBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsVUFBVSw0Q0FBSztBQUNmLEdBQUc7QUFDSDtBQUNBO0FBQ0EsTUFBTSw4Q0FBRyxDQUFDLG9EQUFTO0FBQ25CLE1BQU0sOENBQUcsQ0FBQyxvREFBUztBQUNuQixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLDhDQUFHLENBQUMsZ0RBQUs7QUFDZixNQUFNLHFEQUFFLEdBQUc7QUFDWDtBQUNBLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9zcmMvd2ViMy5zdG9yYWdlL2Jsb2IuanM/MDA3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYXBhYmlsaXR5LCBTY2hlbWEsIExpbmssIG9rIH0gZnJvbSAnQHVjYW50by92YWxpZGF0b3InXG5pbXBvcnQgeyBjb250ZW50IH0gZnJvbSAnLi4vYmxvYi5qcydcbmltcG9ydCB7XG4gIGVxdWFsQmxvYixcbiAgZXF1YWxXaXRoLFxuICBTcGFjZURJRCxcbiAgYW5kLFxuICBlcXVhbCxcbiAgY2hlY2tMaW5rLFxuICBBd2FpdCxcbn0gZnJvbSAnLi4vdXRpbHMuanMnXG5cbi8qKlxuICogU2VydmljZSBjYXBhYmlsaXRpZXMgZm9yIEJsb2IgcHJvdG9jb2xcbiAqL1xuLyoqXG4gKiBDYXBhYmlsaXR5IGNhbiBvbmx5IGJlIGRlbGVnYXRlZCAoYnV0IG5vdCBpbnZva2VkKSBhbGxvd2luZyBhdWRpZW5jZSB0b1xuICogZGVyaXZlZCBhbnkgYHdlYjMuc3RvcmFnZS9ibG9iL2AgcHJlZml4ZWQgY2FwYWJpbGl0eSBmb3IgdGhlIChtZW1vcnkpIHNwYWNlIGlkZW50aWZpZWRcbiAqIGJ5IERJRCBpbiB0aGUgYHdpdGhgIGZpZWxkLlxuICovXG5leHBvcnQgY29uc3QgYmxvYiA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICd3ZWIzLnN0b3JhZ2UvYmxvYi8qJyxcbiAgLyoqXG4gICAqIERJRCBvZiB0aGUgKG1lbW9yeSkgc3BhY2Ugd2hlcmUgQmxvYiBpcyBpbnRlbmRlZCB0b1xuICAgKiBiZSBzdG9yZWQuXG4gICAqL1xuICB3aXRoOiBTcGFjZURJRCxcbiAgZGVyaXZlczogZXF1YWxXaXRoLFxufSlcblxuLyoqXG4gKiBgd2ViMy5zdG9yYWdlL2Jsb2IvL2FsbG9jYXRlYCBjYXBhYmlsaXR5IGNhbiBiZSBpbnZva2VkIHRvIGNyZWF0ZSBhIG1lbW9yeVxuICogYWRkcmVzcyB3aGVyZSBibG9iIGNvbnRlbnQgY2FuIGJlIHdyaXR0ZW4gdmlhIEhUVFAgUFVUIHJlcXVlc3QuXG4gKi9cbmV4cG9ydCBjb25zdCBhbGxvY2F0ZSA9IGNhcGFiaWxpdHkoe1xuICBjYW46ICd3ZWIzLnN0b3JhZ2UvYmxvYi9hbGxvY2F0ZScsXG4gIC8qKlxuICAgKiBQcm92aWRlciBESUQuXG4gICAqL1xuICB3aXRoOiBTY2hlbWEuZGlkKCksXG4gIG5iOiBTY2hlbWEuc3RydWN0KHtcbiAgICAvKipcbiAgICAgKiBCbG9iIHRvIGFsbG9jYXRlIG9uIHRoZSBzcGFjZS5cbiAgICAgKi9cbiAgICBibG9iOiBjb250ZW50LFxuICAgIC8qKlxuICAgICAqIFRoZSBMaW5rIGZvciBhbiBBZGQgQmxvYiB0YXNrLCB0aGF0IGNhdXNlZCBhbiBhbGxvY2F0aW9uXG4gICAgICovXG4gICAgY2F1c2U6IExpbmssXG4gICAgLyoqXG4gICAgICogRElEIG9mIHRoZSB1c2VyIHNwYWNlIHdoZXJlIGFsbG9jYXRpb24gdGFrZXMgcGxhY2VcbiAgICAgKi9cbiAgICBzcGFjZTogU3BhY2VESUQsXG4gIH0pLFxuICBkZXJpdmVzOiAoY2xhaW0sIGZyb20pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgYW5kKGVxdWFsV2l0aChjbGFpbSwgZnJvbSkpIHx8XG4gICAgICBhbmQoZXF1YWxCbG9iKGNsYWltLCBmcm9tKSkgfHxcbiAgICAgIGFuZChjaGVja0xpbmsoY2xhaW0ubmIuY2F1c2UsIGZyb20ubmIuY2F1c2UsICdjYXVzZScpKSB8fFxuICAgICAgYW5kKGVxdWFsKGNsYWltLm5iLnNwYWNlLCBmcm9tLm5iLnNwYWNlLCAnc3BhY2UnKSkgfHxcbiAgICAgIG9rKHt9KVxuICAgIClcbiAgfSxcbn0pXG5cbi8qKlxuICogYGJsb2IvYWNjZXB0YCBjYXBhYmlsaXR5IGludm9jYXRpb24gc2hvdWxkIGVpdGhlciBzdWNjZWVkIHdoZW4gY29udGVudCBpc1xuICogZGVsaXZlcmVkIG9uIGFsbG9jYXRlZCBhZGRyZXNzIG9yIGZhaWwgaWYgbm8gY29udGVudCBpcyBhbGxvY2F0aW9uIGV4cGlyZXNcbiAqIHdpdGhvdXQgY29udGVudCBiZWluZyBkZWxpdmVyZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBhY2NlcHQgPSBjYXBhYmlsaXR5KHtcbiAgY2FuOiAnd2ViMy5zdG9yYWdlL2Jsb2IvYWNjZXB0JyxcbiAgLyoqXG4gICAqIFByb3ZpZGVyIERJRC5cbiAgICovXG4gIHdpdGg6IFNjaGVtYS5kaWQoKSxcbiAgbmI6IFNjaGVtYS5zdHJ1Y3Qoe1xuICAgIC8qKlxuICAgICAqIEJsb2IgdG8gYWNjZXB0LlxuICAgICAqL1xuICAgIGJsb2I6IGNvbnRlbnQsXG4gICAgLyoqXG4gICAgICogQ29udGVudCBsb2NhdGlvbiBjb21taXRtZW50IHRpbWUgdG8gbGl2ZSwgd2hpY2ggd2lsbCBiZSBlbmNvZGVkIGFzIGV4cGlyeSBvZiB0aGUgaXNzdWVkIGxvY2F0aW9uIGNsYWltLlxuICAgICAqL1xuICAgIHR0bDogU2NoZW1hLmludGVnZXIoKS5vcHRpb25hbCgpLFxuICAgIC8qKlxuICAgICAqIERJRCBvZiB0aGUgdXNlciBzcGFjZSB3aGVyZSBhbGxvY2F0aW9uIHRvb2sgcGxhY2VcbiAgICAgKi9cbiAgICBzcGFjZTogU3BhY2VESUQsXG4gICAgLyoqXG4gICAgICogVGhpcyB0YXNrIGlzIGJsb2NrZWQgb24gYGh0dHAvcHV0YCByZWNlaXB0IGF2YWlsYWJsZVxuICAgICAqL1xuICAgIF9wdXQ6IEF3YWl0LFxuICB9KSxcbiAgZGVyaXZlczogKGNsYWltLCBmcm9tKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIGFuZChlcXVhbFdpdGgoY2xhaW0sIGZyb20pKSB8fFxuICAgICAgYW5kKGVxdWFsQmxvYihjbGFpbSwgZnJvbSkpIHx8XG4gICAgICBhbmQoZXF1YWwoY2xhaW0ubmIudHRsLCBmcm9tLm5iLnR0bCwgJ3R0bCcpKSB8fFxuICAgICAgYW5kKGVxdWFsKGNsYWltLm5iLnNwYWNlLCBmcm9tLm5iLnNwYWNlLCAnc3BhY2UnKSkgfHxcbiAgICAgIG9rKHt9KVxuICAgIClcbiAgfSxcbn0pXG5cbi8vIOKaoO+4jyBXZSBleHBvcnQgaW1wb3J0cyBoZXJlIHNvIHRoZXkgYXJlIG5vdCBvbWl0dGVkIGluIGdlbmVyYXRlZCB0eXBlZGVmc1xuLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzUxNTQ4XG5leHBvcnQgeyBTY2hlbWEsIExpbmsgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/capabilities/src/web3.storage/blob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/@ipld/dag-cbor/src/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/@ipld/dag-cbor/src/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeOptions: () => (/* binding */ decodeOptions),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeOptions: () => (/* binding */ encodeOptions),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   toByteView: () => (/* binding */ toByteView)\n/* harmony export */ });\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/cborg.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/cid.js\");\n\n\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.tag, CID_CBOR_TAG),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nconst encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nconst decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nconst name = 'dag-cbor'\nconst code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nconst encode = (node) => cborg__WEBPACK_IMPORTED_MODULE_0__.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nconst decode = (data) => cborg__WEBPACK_IMPORTED_MODULE_0__.decode(toByteView(data), _decodeOptions)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1jYm9yL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEI7QUFDUTs7QUFFdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxxREFBcUQ7QUFDbEU7O0FBRUE7QUFDQTtBQUNBLGFBQWEsNERBQTREO0FBQ3pFOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGtDQUFrQztBQUM3QyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlEQUFHO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdDQUFXLENBQUMsdUNBQVU7QUFDOUIsUUFBUSx3Q0FBVyxDQUFDLHVDQUFVO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0EsU0FBUyxpREFBRztBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVPO0FBQ0E7O0FBRVA7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWE7QUFDYjtBQUNPLHlCQUF5Qix5Q0FBWTs7QUFFNUM7QUFDQTtBQUNBLFdBQVcsa0NBQWtDO0FBQzdDLGFBQWE7QUFDYjtBQUNPLHlCQUF5Qix5Q0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L25vZGVfbW9kdWxlcy9AaXBsZC9kYWctY2Jvci9zcmMvaW5kZXguanM/MjhkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjYm9yZyBmcm9tICdjYm9yZydcbmltcG9ydCB7IENJRCB9IGZyb20gJ211bHRpZm9ybWF0cy9jaWQnXG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9pcGZzL2dvLWlwZnMvaXNzdWVzLzM1NzAjaXNzdWVjb21tZW50LTI3MzkzMTY5MlxuY29uc3QgQ0lEX0NCT1JfVEFHID0gNDJcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NvZGVjcy9pbnRlcmZhY2UnKS5CeXRlVmlldzxUPn0gQnl0ZVZpZXdcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvY29kZWNzL2ludGVyZmFjZScpLkFycmF5QnVmZmVyVmlldzxUPn0gQXJyYXlCdWZmZXJWaWV3XG4gKi9cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtCeXRlVmlldzxUPiB8IEFycmF5QnVmZmVyVmlldzxUPn0gYnVmXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0J5dGVWaWV3IChidWYpIHtcbiAgaWYgKGJ1ZiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1ZiwgMCwgYnVmLmJ5dGVMZW5ndGgpXG4gIH1cblxuICByZXR1cm4gYnVmXG59XG5cbi8qKlxuICogY2lkRW5jb2RlciB3aWxsIHJlY2VpdmUgYWxsIE9iamVjdHMgZHVyaW5nIGVuY29kZSwgaXQgbmVlZHMgdG8gZmlsdGVyIG91dFxuICogYW55dGhpbmcgdGhhdCdzIG5vdCBhIENJRCBhbmQgcmV0dXJuIGBudWxsYCBmb3IgdGhhdCBzbyBpdCdzIGVuY29kZWQgYXNcbiAqIG5vcm1hbC5cbiAqXG4gKiBAcGFyYW0ge2FueX0gb2JqXG4gKiBAcmV0dXJucyB7Y2JvcmcuVG9rZW5bXXxudWxsfVxuICovXG5mdW5jdGlvbiBjaWRFbmNvZGVyIChvYmopIHtcbiAgaWYgKG9iai5hc0NJRCAhPT0gb2JqICYmIG9ialsnLyddICE9PSBvYmouYnl0ZXMpIHtcbiAgICByZXR1cm4gbnVsbCAvLyBhbnkgb3RoZXIga2luZCBvZiBvYmplY3RcbiAgfVxuICBjb25zdCBjaWQgPSBDSUQuYXNDSUQob2JqKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIHZlcnkgdW5saWtlbHkgY2FzZSwgYW5kIGl0J2xsIHByb2JhYmx5IHRocm93IGEgcmVjdXJzaW9uIGVycm9yIGluIGNib3JnXG4gIGlmICghY2lkKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGNpZC5ieXRlcy5ieXRlTGVuZ3RoICsgMSlcbiAgYnl0ZXMuc2V0KGNpZC5ieXRlcywgMSkgLy8gcHJlZml4IGlzIDB4MDAsIGZvciBoaXN0b3JpY2FsIHJlYXNvbnNcbiAgcmV0dXJuIFtcbiAgICBuZXcgY2JvcmcuVG9rZW4oY2JvcmcuVHlwZS50YWcsIENJRF9DQk9SX1RBRyksXG4gICAgbmV3IGNib3JnLlRva2VuKGNib3JnLlR5cGUuYnl0ZXMsIGJ5dGVzKVxuICBdXG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc2RvYy9yZXF1aXJlLXJldHVybnMtY2hlY2tcbi8qKlxuICogSW50ZXJjZXB0IGFsbCBgdW5kZWZpbmVkYCB2YWx1ZXMgZnJvbSBhbiBvYmplY3Qgd2FsayBhbmQgcmVqZWN0IHRoZSBlbnRpcmVcbiAqIG9iamVjdCBpZiB3ZSBmaW5kIG9uZS5cbiAqXG4gKiBAcmV0dXJucyB7bnVsbH1cbiAqL1xuZnVuY3Rpb24gdW5kZWZpbmVkRW5jb2RlciAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignYHVuZGVmaW5lZGAgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgSVBMRCBEYXRhIE1vZGVsIGFuZCBjYW5ub3QgYmUgZW5jb2RlZCcpXG59XG5cbi8qKlxuICogSW50ZXJjZXB0IGFsbCBgbnVtYmVyYCB2YWx1ZXMgZnJvbSBhbiBvYmplY3Qgd2FsayBhbmQgcmVqZWN0IHRoZSBlbnRpcmVcbiAqIG9iamVjdCBpZiB3ZSBmaW5kIHNvbWV0aGluZyB0aGF0IGRvZXNuJ3QgZml0IHRoZSBJUExEIGRhdGEgbW9kZWwgKE5hTiAmXG4gKiBJbmZpbml0eSkuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bVxuICogQHJldHVybnMge251bGx9XG4gKi9cbmZ1bmN0aW9uIG51bWJlckVuY29kZXIgKG51bSkge1xuICBpZiAoTnVtYmVyLmlzTmFOKG51bSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2BOYU5gIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIElQTEQgRGF0YSBNb2RlbCBhbmQgY2Fubm90IGJlIGVuY29kZWQnKVxuICB9XG4gIGlmIChudW0gPT09IEluZmluaXR5IHx8IG51bSA9PT0gLUluZmluaXR5KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdgSW5maW5pdHlgIGFuZCBgLUluZmluaXR5YCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBJUExEIERhdGEgTW9kZWwgYW5kIGNhbm5vdCBiZSBlbmNvZGVkJylcbiAgfVxuICByZXR1cm4gbnVsbFxufVxuXG5jb25zdCBfZW5jb2RlT3B0aW9ucyA9IHtcbiAgZmxvYXQ2NDogdHJ1ZSxcbiAgdHlwZUVuY29kZXJzOiB7XG4gICAgT2JqZWN0OiBjaWRFbmNvZGVyLFxuICAgIHVuZGVmaW5lZDogdW5kZWZpbmVkRW5jb2RlcixcbiAgICBudW1iZXI6IG51bWJlckVuY29kZXJcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZW5jb2RlT3B0aW9ucyA9IHtcbiAgLi4uX2VuY29kZU9wdGlvbnMsXG4gIHR5cGVFbmNvZGVyczoge1xuICAgIC4uLl9lbmNvZGVPcHRpb25zLnR5cGVFbmNvZGVyc1xuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHJldHVybnMge0NJRH1cbiAqL1xuZnVuY3Rpb24gY2lkRGVjb2RlciAoYnl0ZXMpIHtcbiAgaWYgKGJ5dGVzWzBdICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIENJRCBmb3IgQ0JPUiB0YWcgNDI7IGV4cGVjdGVkIGxlYWRpbmcgMHgwMCcpXG4gIH1cbiAgcmV0dXJuIENJRC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoMSkpIC8vIGlnbm9yZSBsZWFkaW5nIDB4MDBcbn1cblxuY29uc3QgX2RlY29kZU9wdGlvbnMgPSB7XG4gIGFsbG93SW5kZWZpbml0ZTogZmFsc2UsXG4gIGNvZXJjZVVuZGVmaW5lZFRvTnVsbDogdHJ1ZSxcbiAgYWxsb3dOYU46IGZhbHNlLFxuICBhbGxvd0luZmluaXR5OiBmYWxzZSxcbiAgYWxsb3dCaWdJbnQ6IHRydWUsIC8vIHRoaXMgd2lsbCBsZWFkIHRvIEJpZ0ludCBmb3IgaW50cyBvdXRzaWRlIG9mXG4gIC8vIHNhZmUtaW50ZWdlciByYW5nZSwgd2hpY2ggbWF5IHN1cnByaXNlIHVzZXJzXG4gIHN0cmljdDogdHJ1ZSxcbiAgdXNlTWFwczogZmFsc2UsXG4gIHJlamVjdER1cGxpY2F0ZU1hcEtleXM6IHRydWUsXG4gIC8qKiBAdHlwZSB7aW1wb3J0KCdjYm9yZycpLlRhZ0RlY29kZXJbXX0gKi9cbiAgdGFnczogW11cbn1cbl9kZWNvZGVPcHRpb25zLnRhZ3NbQ0lEX0NCT1JfVEFHXSA9IGNpZERlY29kZXJcblxuZXhwb3J0IGNvbnN0IGRlY29kZU9wdGlvbnMgPSB7XG4gIC4uLl9kZWNvZGVPcHRpb25zLFxuICB0YWdzOiBfZGVjb2RlT3B0aW9ucy50YWdzLnNsaWNlKClcbn1cblxuZXhwb3J0IGNvbnN0IG5hbWUgPSAnZGFnLWNib3InXG5leHBvcnQgY29uc3QgY29kZSA9IDB4NzFcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtUfSBub2RlXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGUgPSAobm9kZSkgPT4gY2JvcmcuZW5jb2RlKG5vZGUsIF9lbmNvZGVPcHRpb25zKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFQ+IHwgQXJyYXlCdWZmZXJWaWV3PFQ+fSBkYXRhXG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChkYXRhKSA9PiBjYm9yZy5kZWNvZGUodG9CeXRlVmlldyhkYXRhKSwgX2RlY29kZU9wdGlvbnMpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/@ipld/dag-cbor/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/cborg.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/cborg.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Token),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokeniser),\n/* harmony export */   Type: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Type),\n/* harmony export */   decode: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   tokensToObject: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/encode.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/decode.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _lib_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n\n\n\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDd0M7QUFDcEM7O0FBRTVDO0FBQ0E7QUFDQSxhQUFhLGtDQUFrQztBQUMvQztBQUNBLGFBQWEsMkNBQTJDO0FBQ3hELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEscUNBQXFDO0FBQ2xEOztBQVVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzPzBmNDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlIH0gZnJvbSAnLi9saWIvZW5jb2RlLmpzJ1xuaW1wb3J0IHsgZGVjb2RlLCBkZWNvZGVGaXJzdCwgVG9rZW5pc2VyLCB0b2tlbnNUb09iamVjdCB9IGZyb20gJy4vbGliL2RlY29kZS5qcydcbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi9saWIvdG9rZW4uanMnXG5cbi8qKlxuICogRXhwb3J0IHRoZSB0eXBlcyB0aGF0IHdlcmUgcHJlc2VudCBpbiB0aGUgb3JpZ2luYWwgbWFudWFsIGNib3JnLmQudHNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuVGFnRGVjb2Rlcn0gVGFnRGVjb2RlclxuICogVGhlcmUgd2FzIG9yaWdpbmFsbHkganVzdCBgVHlwZUVuY29kZXJgIHNvIGRvbid0IGJyZWFrIHR5cGVzIGJ5IHJlbmFtaW5nIG9yIG5vdCBleHBvcnRpbmdcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuT3B0aW9uYWxUeXBlRW5jb2Rlcn0gVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5FbmNvZGVPcHRpb25zfSBFbmNvZGVPcHRpb25zXG4gKi9cblxuZXhwb3J0IHtcbiAgZGVjb2RlLFxuICBkZWNvZGVGaXJzdCxcbiAgVG9rZW5pc2VyIGFzIFRva2VuaXplcixcbiAgdG9rZW5zVG9PYmplY3QsXG4gIGVuY29kZSxcbiAgVG9rZW4sXG4gIFR5cGVcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/cborg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUint16: () => (/* binding */ decodeUint16),\n/* harmony export */   decodeUint32: () => (/* binding */ decodeUint32),\n/* harmony export */   decodeUint64: () => (/* binding */ decodeUint64),\n/* harmony export */   decodeUint8: () => (/* binding */ decodeUint8),\n/* harmony export */   encodeUint: () => (/* binding */ encodeUint),\n/* harmony export */   encodeUintValue: () => (/* binding */ encodeUintValue),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint64: () => (/* binding */ readUint64),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   uintBoundaries: () => (/* binding */ uintBoundaries)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n/* globals BigInt */\n\n\n\n\nconst uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint8 (data, offset, options) {\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint16 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint32 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nfunction readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nfunction encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/1negint.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/1negint.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNegint16: () => (/* binding */ decodeNegint16),\n/* harmony export */   decodeNegint32: () => (/* binding */ decodeNegint32),\n/* harmony export */   decodeNegint64: () => (/* binding */ decodeNegint64),\n/* harmony export */   decodeNegint8: () => (/* binding */ decodeNegint8),\n/* harmony export */   encodeNegint: () => (/* binding */ encodeNegint)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n/* eslint-env es2020 */\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint64 (data, pos, _minor, options) {\n  const int = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8xbmVnaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRXdDO0FBQ047QUFDVzs7QUFFN0M7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxjQUFjLGdEQUFjO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLGNBQWMsaURBQWU7QUFDcEQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksY0FBYyxpREFBZTtBQUNwRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsY0FBYyxpREFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNENBQUssQ0FBQywyQ0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQTtBQUNBLEVBQUUsc0RBQW9CO0FBQ3RCOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMW5lZ2ludC5qcz8xNGZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXMyMDIwICovXG5cbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQ4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCAyKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgLTEgLSB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgNSlcbn1cblxuY29uc3QgbmVnMWIgPSBCaWdJbnQoLTEpXG5jb25zdCBwb3MxYiA9IEJpZ0ludCgxKVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQ2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgaW50ID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgaW50ICE9PSAnYmlnaW50Jykge1xuICAgIGNvbnN0IHZhbHVlID0gLTEgLSBpbnRcbiAgICBpZiAodmFsdWUgPj0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIpIHtcbiAgICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIHZhbHVlLCA5KVxuICAgIH1cbiAgfVxuICBpZiAob3B0aW9ucy5hbGxvd0JpZ0ludCAhPT0gdHJ1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGludGVnZXJzIG91dHNpZGUgb2YgdGhlIHNhZmUgaW50ZWdlciByYW5nZSBhcmUgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgbmVnMWIgLSBCaWdJbnQoaW50KSwgOSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVOZWdpbnQgKGJ1ZiwgdG9rZW4pIHtcbiAgY29uc3QgbmVnaW50ID0gdG9rZW4udmFsdWVcbiAgY29uc3QgdW5zaWduZWQgPSAodHlwZW9mIG5lZ2ludCA9PT0gJ2JpZ2ludCcgPyAobmVnaW50ICogbmVnMWIgLSBwb3MxYikgOiAobmVnaW50ICogLTEgLSAxKSlcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCB0b2tlbi50eXBlLm1ham9yRW5jb2RlZCwgdW5zaWduZWQpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZU5lZ2ludC5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICBjb25zdCBuZWdpbnQgPSB0b2tlbi52YWx1ZVxuICBjb25zdCB1bnNpZ25lZCA9ICh0eXBlb2YgbmVnaW50ID09PSAnYmlnaW50JyA/IChuZWdpbnQgKiBuZWcxYiAtIHBvczFiKSA6IChuZWdpbnQgKiAtMSAtIDEpKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIGhhbmRsZWQgYnkgcXVpY2tFbmNvZGUsIHdlIHNob3VsZG4ndCBnZXQgaGVyZSBidXQgaXQncyBpbmNsdWRlZCBmb3IgY29tcGxldGVuZXNzXG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMF0pIHtcbiAgICByZXR1cm4gMVxuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMV0pIHtcbiAgICByZXR1cm4gMlxuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMl0pIHtcbiAgICByZXR1cm4gM1xuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbM10pIHtcbiAgICByZXR1cm4gNVxuICB9XG4gIHJldHVybiA5XG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rMVxuICogQHBhcmFtIHtUb2tlbn0gdG9rMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlTmVnaW50LmNvbXBhcmVUb2tlbnMgPSBmdW5jdGlvbiBjb21wYXJlVG9rZW5zICh0b2sxLCB0b2syKSB7XG4gIC8vIG9wcG9zaXRlIG9mIHRoZSB1aW50IGNvbXBhcmlzb24gc2luY2Ugd2Ugc3RvcmUgdGhlIHVpbnQgdmVyc2lvbiBpbiBieXRlc1xuICByZXR1cm4gdG9rMS52YWx1ZSA8IHRvazIudmFsdWUgPyAxIDogdG9rMS52YWx1ZSA+IHRvazIudmFsdWUgPyAtMSA6IC8qIGM4IGlnbm9yZSBuZXh0ICovIDBcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/1negint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/2bytes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/2bytes.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareBytes: () => (/* binding */ compareBytes),\n/* harmony export */   decodeBytes16: () => (/* binding */ decodeBytes16),\n/* harmony export */   decodeBytes32: () => (/* binding */ decodeBytes32),\n/* harmony export */   decodeBytes64: () => (/* binding */ decodeBytes64),\n/* harmony export */   decodeBytes8: () => (/* binding */ decodeBytes8),\n/* harmony export */   decodeBytesCompact: () => (/* binding */ decodeBytesCompact),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, prefix + length)\n  const buf = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.slice)(data, pos + prefix, pos + prefix + length)\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.compare)(b1, b2)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8yYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDdUI7QUFDN0I7QUFDMEI7O0FBRTVEO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxFQUFFLDREQUFnQjtBQUNsQixjQUFjLHFEQUFLO0FBQ25CLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsMkNBQUksVUFBVSwwREFBVTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQSxFQUFFLHNEQUFvQjtBQUN0QjtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3Qjs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQLGtFQUFrRSx1REFBTztBQUN6RSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMmJ5dGVzLmpzPzRjZGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0IHsgYXNzZXJ0RW5vdWdoRGF0YSwgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBjb21wYXJlLCBmcm9tU3RyaW5nLCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoZGF0YSwgcG9zLCBwcmVmaXgsIGxlbmd0aCkge1xuICBhc3NlcnRFbm91Z2hEYXRhKGRhdGEsIHBvcywgcHJlZml4ICsgbGVuZ3RoKVxuICBjb25zdCBidWYgPSBzbGljZShkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHByZWZpeCArIGxlbmd0aClcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmJ5dGVzLCBidWYsIHByZWZpeCArIGxlbmd0aClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXNDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXM2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgYnl0ZXMgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogYGVuY29kZWRCeXRlc2AgYWxsb3dzIGZvciBjYWNoaW5nIHdoZW4gd2UgZG8gYSBieXRlIHZlcnNpb24gb2YgYSBzdHJpbmdcbiAqIGZvciBrZXkgc29ydGluZyBwdXJwb3Nlc1xuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5mdW5jdGlvbiB0b2tlbkJ5dGVzICh0b2tlbikge1xuICBpZiAodG9rZW4uZW5jb2RlZEJ5dGVzID09PSB1bmRlZmluZWQpIHtcbiAgICB0b2tlbi5lbmNvZGVkQnl0ZXMgPSB0b2tlbi50eXBlID09PSBUeXBlLnN0cmluZyA/IGZyb21TdHJpbmcodG9rZW4udmFsdWUpIDogdG9rZW4udmFsdWVcbiAgfVxuICAvLyBAdHMtaWdub3JlIGMnbW9uXG4gIHJldHVybiB0b2tlbi5lbmNvZGVkQnl0ZXNcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCeXRlcyAoYnVmLCB0b2tlbikge1xuICBjb25zdCBieXRlcyA9IHRva2VuQnl0ZXModG9rZW4pXG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgdG9rZW4udHlwZS5tYWpvckVuY29kZWQsIGJ5dGVzLmxlbmd0aClcbiAgYnVmLnB1c2goYnl0ZXMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUJ5dGVzLmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIGNvbnN0IGJ5dGVzID0gdG9rZW5CeXRlcyh0b2tlbilcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKGJ5dGVzLmxlbmd0aCkgKyBieXRlcy5sZW5ndGhcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2sxXG4gKiBAcGFyYW0ge1Rva2VufSB0b2syXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVCeXRlcy5jb21wYXJlVG9rZW5zID0gZnVuY3Rpb24gY29tcGFyZVRva2VucyAodG9rMSwgdG9rMikge1xuICByZXR1cm4gY29tcGFyZUJ5dGVzKHRva2VuQnl0ZXModG9rMSksIHRva2VuQnl0ZXModG9rMikpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiMVxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVCeXRlcyAoYjEsIGIyKSB7XG4gIHJldHVybiBiMS5sZW5ndGggPCBiMi5sZW5ndGggPyAtMSA6IGIxLmxlbmd0aCA+IGIyLmxlbmd0aCA/IDEgOiBjb21wYXJlKGIxLCBiMilcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/2bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/3string.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/3string.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString16: () => (/* binding */ decodeString16),\n/* harmony export */   decodeString32: () => (/* binding */ decodeString32),\n/* harmony export */   decodeString64: () => (/* binding */ decodeString64),\n/* harmony export */   decodeString8: () => (/* binding */ decodeString8),\n/* harmony export */   decodeStringCompact: () => (/* binding */ decodeStringCompact),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, totLength)\n  const tok = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.toString)(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.slice)(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nconst encodeString = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8zc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3VCO0FBQzdCO0FBQ087QUFDUTs7QUFFakQ7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNkRBQWdCO0FBQ2xCLGtCQUFrQiw0Q0FBSyxDQUFDLDJDQUFJLFNBQVMsd0RBQVE7QUFDN0M7QUFDQSxvQkFBb0IscURBQUs7QUFDekI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFTyxxQkFBcUIsbURBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzNzdHJpbmcuanM/ZWRjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgeyBhc3NlcnRFbm91Z2hEYXRhLCBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGVuY29kZUJ5dGVzIH0gZnJvbSAnLi8yYnl0ZXMuanMnXG5pbXBvcnQgeyB0b1N0cmluZywgc2xpY2UgfSBmcm9tICcuL2J5dGUtdXRpbHMuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoZGF0YSwgcG9zLCBwcmVmaXgsIGxlbmd0aCwgb3B0aW9ucykge1xuICBjb25zdCB0b3RMZW5ndGggPSBwcmVmaXggKyBsZW5ndGhcbiAgYXNzZXJ0RW5vdWdoRGF0YShkYXRhLCBwb3MsIHRvdExlbmd0aClcbiAgY29uc3QgdG9rID0gbmV3IFRva2VuKFR5cGUuc3RyaW5nLCB0b1N0cmluZyhkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHRvdExlbmd0aCksIHRvdExlbmd0aClcbiAgaWYgKG9wdGlvbnMucmV0YWluU3RyaW5nQnl0ZXMgPT09IHRydWUpIHtcbiAgICB0b2suYnl0ZVZhbHVlID0gc2xpY2UoZGF0YSwgcG9zICsgcHJlZml4LCBwb3MgKyB0b3RMZW5ndGgpXG4gIH1cbiAgcmV0dXJuIHRva1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZ0NvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vciwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmczMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBzdHJpbmcgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwsIG9wdGlvbnMpXG59XG5cbmV4cG9ydCBjb25zdCBlbmNvZGVTdHJpbmcgPSBlbmNvZGVCeXRlc1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/3string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/4array.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/4array.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray16: () => (/* binding */ decodeArray16),\n/* harmony export */   decodeArray32: () => (/* binding */ decodeArray32),\n/* harmony export */   decodeArray64: () => (/* binding */ decodeArray64),\n/* harmony export */   decodeArray8: () => (/* binding */ decodeArray8),\n/* harmony export */   decodeArrayCompact: () => (/* binding */ decodeArrayCompact),\n/* harmony export */   decodeArrayIndefinite: () => (/* binding */ decodeArrayIndefinite),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeArray (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi80YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNOO0FBQ1c7O0FBRTdDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGdEQUFjO0FBQzdDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLGlEQUFlO0FBQzNCO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQLEVBQUUsc0RBQW9CLE1BQU0sMkNBQUk7QUFDaEM7O0FBRUE7QUFDQTtBQUNBLDRCQUE0QixpREFBZTs7QUFFM0M7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNGFycmF5LmpzPzc0M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoX2RhdGEsIF9wb3MsIHByZWZpeCwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5hcnJheSwgbGVuZ3RoLCBwcmVmaXgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5Q29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vcilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXk4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXkzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5NjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIGFycmF5IGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheUluZGVmaW5pdGUgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93SW5kZWZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbmRlZmluaXRlIGxlbmd0aCBpdGVtcyBub3QgYWxsb3dlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBJbmZpbml0eSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVBcnJheSAoYnVmLCB0b2tlbikge1xuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIFR5cGUuYXJyYXkubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuLy8gdXNpbmcgYW4gYXJyYXkgYXMgYSBtYXAga2V5LCBhcmUgeW91IHN1cmUgYWJvdXQgdGhpcz8gd2UgY2FuIG9ubHkgc29ydFxuLy8gYnkgbWFwIGxlbmd0aCBoZXJlLCBpdCdzIHVwIHRvIHRoZSBlbmNvZGVyIHRvIGRlY2lkZSB0byBsb29rIGRlZXBlclxuZW5jb2RlQXJyYXkuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUFycmF5LmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIHJldHVybiB1aW50LmVuY29kZVVpbnRWYWx1ZS5lbmNvZGVkU2l6ZSh0b2tlbi52YWx1ZSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/4array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/5map.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/5map.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMap16: () => (/* binding */ decodeMap16),\n/* harmony export */   decodeMap32: () => (/* binding */ decodeMap32),\n/* harmony export */   decodeMap64: () => (/* binding */ decodeMap64),\n/* harmony export */   decodeMap8: () => (/* binding */ decodeMap8),\n/* harmony export */   decodeMapCompact: () => (/* binding */ decodeMapCompact),\n/* harmony export */   decodeMapIndefinite: () => (/* binding */ decodeMapIndefinite),\n/* harmony export */   encodeMap: () => (/* binding */ encodeMap)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeMap (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi81bWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTjtBQUNXOztBQUU3QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUCxFQUFFLHNEQUFvQixNQUFNLDJDQUFJO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzVtYXAuanM/NTdhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChfZGF0YSwgX3BvcywgcHJlZml4LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm1hcCwgbGVuZ3RoLCBwcmVmaXgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcENvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXA2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgbWFwIGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXBJbmRlZmluaXRlIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5hbGxvd0luZGVmaW5pdGUgPT09IGZhbHNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW5kZWZpbml0ZSBsZW5ndGggaXRlbXMgbm90IGFsbG93ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgSW5maW5pdHkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlTWFwIChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS5tYXAubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuLy8gdXNpbmcgYSBtYXAgYXMgYSBtYXAga2V5LCBhcmUgeW91IHN1cmUgYWJvdXQgdGhpcz8gd2UgY2FuIG9ubHkgc29ydFxuLy8gYnkgbWFwIGxlbmd0aCBoZXJlLCBpdCdzIHVwIHRvIHRoZSBlbmNvZGVyIHRvIGRlY2lkZSB0byBsb29rIGRlZXBlclxuZW5jb2RlTWFwLmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVNYXAuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/5map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/6tag.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/6tag.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTag16: () => (/* binding */ decodeTag16),\n/* harmony export */   decodeTag32: () => (/* binding */ decodeTag32),\n/* harmony export */   decodeTag64: () => (/* binding */ decodeTag64),\n/* harmony export */   decodeTag8: () => (/* binding */ decodeTag8),\n/* harmony export */   decodeTagCompact: () => (/* binding */ decodeTagCompact),\n/* harmony export */   encodeTag: () => (/* binding */ encodeTag)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeTagCompact (_data, _pos, minor, _options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeTag (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi82dGFnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ047O0FBRWxDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxnREFBYztBQUMzQzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxNQUFNLGlEQUFlO0FBQzVDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0saURBQWU7QUFDNUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxpREFBZTtBQUM1Qzs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1AsRUFBRSxzREFBb0IsTUFBTSwyQ0FBSTtBQUNoQzs7QUFFQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzZ0YWcuanM/Y2U4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnQ29tcGFjdCAoX2RhdGEsIF9wb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCBtaW5vciwgMSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnRhZywgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDIpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDUpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVGFnIChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS50YWcubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuZW5jb2RlVGFnLmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVUYWcuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/6tag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/7float.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/7float.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBreak: () => (/* binding */ decodeBreak),\n/* harmony export */   decodeFloat16: () => (/* binding */ decodeFloat16),\n/* harmony export */   decodeFloat32: () => (/* binding */ decodeFloat32),\n/* harmony export */   decodeFloat64: () => (/* binding */ decodeFloat64),\n/* harmony export */   decodeUndefined: () => (/* binding */ decodeUndefined),\n/* harmony export */   encodeFloat: () => (/* binding */ encodeFloat)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nfunction encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/7float.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/bl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/bl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ Bl)\n/* harmony export */ });\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/byte-utils.js\");\n/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\n\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nclass Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.slice)(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ3NEOztBQUV0RDtBQUNBO0FBQ0E7O0FBRUE7O0FBRU87QUFDUDtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QztBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxREFBSztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLGVBQWUscURBQUs7QUFDcEI7QUFDQSxNQUFNO0FBQ047QUFDQSxhQUFhLHNEQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcz8wYmRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmwgaXMgYSBsaXN0IG9mIGJ5dGUgY2h1bmtzLCBzaW1pbGFyIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9ydmFnZy9ibCBidXQgZm9yXG4gKiB3cml0aW5nIHJhdGhlciB0aGFuIHJlYWRpbmcuXG4gKiBBIEJsIG9iamVjdCBhY2NlcHRzIHNldCgpIG9wZXJhdGlvbnMgZm9yIGluZGl2aWR1YWwgYnl0ZXMgYW5kIGNvcHlUbygpIGZvclxuICogaW5zZXJ0aW5nIGJ5dGUgYXJyYXlzLiBUaGVzZSB3cml0ZSBvcGVyYXRpb25zIGRvbid0IGF1dG9tYXRpY2FsbHkgaW5jcmVtZW50XG4gKiB0aGUgaW50ZXJuYWwgY3Vyc29yIHNvIGl0cyBcImxlbmd0aFwiIHdvbid0IGJlIGNoYW5nZWQuIEluc3RlYWQsIGluY3JlbWVudCgpXG4gKiBtdXN0IGJlIGNhbGxlZCB0byBleHRlbmQgaXRzIGxlbmd0aCB0byBjb3ZlciB0aGUgaW5zZXJ0ZWQgZGF0YS5cbiAqIFRoZSB0b0J5dGVzKCkgY2FsbCB3aWxsIGNvbnZlcnQgYWxsIGludGVybmFsIG1lbW9yeSB0byBhIHNpbmdsZSBVaW50OEFycmF5IG9mXG4gKiB0aGUgY29ycmVjdCBsZW5ndGgsIHRydW5jYXRpbmcgYW55IGRhdGEgdGhhdCBpcyBzdG9yZWQgYnV0IGhhc24ndCBiZWVuXG4gKiBpbmNsdWRlZCBieSBhbiBpbmNyZW1lbnQoKS5cbiAqIGdldCgpIGNhbiByZXRyaWV2ZSBhIHNpbmdsZSBieXRlLlxuICogQWxsIG9wZXJhdGlvbnMgKGV4Y2VwdCB0b0J5dGVzKCkpIHRha2UgYW4gXCJvZmZzZXRcIiBhcmd1bWVudCB0aGF0IHdpbGwgcGVyZm9ybVxuICogdGhlIHdyaXRlIGF0IHRoZSBvZmZzZXQgX2Zyb20gdGhlIGN1cnJlbnQgY3Vyc29yXy4gRm9yIG1vc3Qgb3BlcmF0aW9ucyB0aGlzXG4gKiB3aWxsIGJlIGAwYCB0byB3cml0ZSBhdCB0aGUgY3VycmVudCBjdXJzb3IgcG9zaXRpb24gYnV0IGl0IGNhbiBiZSBhaGVhZCBvZlxuICogdGhlIGN1cnJlbnQgY3Vyc29yLiBOZWdhdGl2ZSBvZmZzZXRzIHByb2JhYmx5IHdvcmsgYnV0IGFyZSB1bnRlc3RlZC5cbiAqL1xuXG4vLyBUT0RPOiBpcGpzIGRvZXNuJ3Qgc3VwcG9ydCB0aGlzLCBvbmx5IGZvciB0ZXN0IGZpbGVzOiBodHRwczovL2dpdGh1Yi5jb20vbWlrZWFsL2lwanMvYmxvYi9tYXN0ZXIvc3JjL3BhY2thZ2UvdGVzdEZpbGUuanMjTDM5XG5pbXBvcnQgeyBhbGxvYywgY29uY2F0LCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLy8gdGhlIHRzLWlnbm9yZXMgaW4gdGhpcyBmaWxlIGFyZSBhbG1vc3QgYWxsIGZvciB0aGUgYFVpbnQ4QXJyYXl8bnVtYmVyW11gIGR1YWxpdHkgdGhhdCBleGlzdHNcbi8vIGZvciBwZXJmIHJlYXNvbnMuIENvbnNpZGVyIGJldHRlciBhcHByb2FjaGVzIHRvIHRoaXMgb3IgcmVtb3ZpbmcgaXQgZW50aXJlbHksIGl0IGlzIHF1aXRlXG4vLyByaXNreSBiZWNhdXNlIG9mIHNvbWUgYXNzdW1wdGlvbnMgYWJvdXQgc21hbGwgY2h1bmtzID09PSBudW1iZXJbXSBhbmQgZXZlcnl0aGluZyBlbHNlID09PSBVaW50OEFycmF5LlxuXG5jb25zdCBkZWZhdWx0Q2h1bmtTaXplID0gMjU2XG5cbmV4cG9ydCBjbGFzcyBCbCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2NodW5rU2l6ZV1cbiAgICovXG4gIGNvbnN0cnVjdG9yIChjaHVua1NpemUgPSBkZWZhdWx0Q2h1bmtTaXplKSB7XG4gICAgdGhpcy5jaHVua1NpemUgPSBjaHVua1NpemVcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLmN1cnNvciA9IDBcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLm1heEN1cnNvciA9IC0xXG4gICAgLyoqIEB0eXBlIHsoVWludDhBcnJheXxudW1iZXJbXSlbXX0gKi9cbiAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgLy8ga2VlcCB0aGUgZmlyc3QgY2h1bmsgYXJvdW5kIGlmIHdlIGNhbiB0byBzYXZlIGFsbG9jYXRpb25zIGZvciBmdXR1cmUgZW5jb2Rlc1xuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXxudW1iZXJbXXxudWxsfSAqL1xuICAgIHRoaXMuX2luaXRSZXVzZUNodW5rID0gbnVsbFxuICB9XG5cbiAgcmVzZXQgKCkge1xuICAgIHRoaXMuY3Vyc29yID0gMFxuICAgIHRoaXMubWF4Q3Vyc29yID0gLTFcbiAgICBpZiAodGhpcy5jaHVua3MubGVuZ3RoKSB7XG4gICAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgfVxuICAgIGlmICh0aGlzLl9pbml0UmV1c2VDaHVuayAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5jaHVua3MucHVzaCh0aGlzLl9pbml0UmV1c2VDaHVuaylcbiAgICAgIHRoaXMubWF4Q3Vyc29yID0gdGhpcy5faW5pdFJldXNlQ2h1bmsubGVuZ3RoIC0gMVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl8bnVtYmVyW119IGJ5dGVzXG4gICAqL1xuICBwdXNoIChieXRlcykge1xuICAgIGxldCB0b3BDaHVuayA9IHRoaXMuY2h1bmtzW3RoaXMuY2h1bmtzLmxlbmd0aCAtIDFdXG4gICAgY29uc3QgbmV3TWF4ID0gdGhpcy5jdXJzb3IgKyBieXRlcy5sZW5ndGhcbiAgICBpZiAobmV3TWF4IDw9IHRoaXMubWF4Q3Vyc29yICsgMSkge1xuICAgICAgLy8gd2UgaGF2ZSBhdCBsZWFzdCBvbmUgY2h1bmsgYW5kIHdlIGNhbiBmaXQgdGhlc2UgYnl0ZXMgaW50byB0aGF0IGNodW5rXG4gICAgICBjb25zdCBjaHVua1BvcyA9IHRvcENodW5rLmxlbmd0aCAtICh0aGlzLm1heEN1cnNvciAtIHRoaXMuY3Vyc29yKSAtIDFcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHRvcENodW5rLnNldChieXRlcywgY2h1bmtQb3MpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGNhbid0IGZpdCBpdCBpblxuICAgICAgaWYgKHRvcENodW5rKSB7XG4gICAgICAgIC8vIHRyaXAgdGhlIGxhc3QgY2h1bmsgdG8gYGN1cnNvcmAgaWYgd2UgbmVlZCB0b1xuICAgICAgICBjb25zdCBjaHVua1BvcyA9IHRvcENodW5rLmxlbmd0aCAtICh0aGlzLm1heEN1cnNvciAtIHRoaXMuY3Vyc29yKSAtIDFcbiAgICAgICAgaWYgKGNodW5rUG9zIDwgdG9wQ2h1bmsubGVuZ3RoKSB7XG4gICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgIHRoaXMuY2h1bmtzW3RoaXMuY2h1bmtzLmxlbmd0aCAtIDFdID0gdG9wQ2h1bmsuc3ViYXJyYXkoMCwgY2h1bmtQb3MpXG4gICAgICAgICAgdGhpcy5tYXhDdXJzb3IgPSB0aGlzLmN1cnNvciAtIDFcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGJ5dGVzLmxlbmd0aCA8IDY0ICYmIGJ5dGVzLmxlbmd0aCA8IHRoaXMuY2h1bmtTaXplKSB7XG4gICAgICAgIC8vIG1ha2UgYSBuZXcgY2h1bmsgYW5kIGNvcHkgdGhlIG5ldyBvbmUgaW50byBpdFxuICAgICAgICB0b3BDaHVuayA9IGFsbG9jKHRoaXMuY2h1bmtTaXplKVxuICAgICAgICB0aGlzLmNodW5rcy5wdXNoKHRvcENodW5rKVxuICAgICAgICB0aGlzLm1heEN1cnNvciArPSB0b3BDaHVuay5sZW5ndGhcbiAgICAgICAgaWYgKHRoaXMuX2luaXRSZXVzZUNodW5rID09PSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSB0b3BDaHVua1xuICAgICAgICB9XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgdG9wQ2h1bmsuc2V0KGJ5dGVzLCAwKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gcHVzaCB0aGUgbmV3IGJ5dGVzIGluIGFzIGl0cyBvd24gY2h1bmtcbiAgICAgICAgdGhpcy5jaHVua3MucHVzaChieXRlcylcbiAgICAgICAgdGhpcy5tYXhDdXJzb3IgKz0gYnl0ZXMubGVuZ3RoXG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuY3Vyc29yICs9IGJ5dGVzLmxlbmd0aFxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3Jlc2V0XVxuICAgKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAgICovXG4gIHRvQnl0ZXMgKHJlc2V0ID0gZmFsc2UpIHtcbiAgICBsZXQgYnl0c1xuICAgIGlmICh0aGlzLmNodW5rcy5sZW5ndGggPT09IDEpIHtcbiAgICAgIGNvbnN0IGNodW5rID0gdGhpcy5jaHVua3NbMF1cbiAgICAgIGlmIChyZXNldCAmJiB0aGlzLmN1cnNvciA+IGNodW5rLmxlbmd0aCAvIDIpIHtcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGJ5dHMgPSB0aGlzLmN1cnNvciA9PT0gY2h1bmsubGVuZ3RoID8gY2h1bmsgOiBjaHVuay5zdWJhcnJheSgwLCB0aGlzLmN1cnNvcilcbiAgICAgICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSBudWxsXG4gICAgICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYnl0cyA9IHNsaWNlKGNodW5rLCAwLCB0aGlzLmN1cnNvcilcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgYnl0cyA9IGNvbmNhdCh0aGlzLmNodW5rcywgdGhpcy5jdXJzb3IpXG4gICAgfVxuICAgIGlmIChyZXNldCkge1xuICAgICAgdGhpcy5yZXNldCgpXG4gICAgfVxuICAgIHJldHVybiBieXRzXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/bl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/byte-utils.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/byte-utils.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   asU8A: () => (/* binding */ asU8A),\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   decodeCodePointsArray: () => (/* binding */ decodeCodePointsArray),\n/* harmony export */   fromArray: () => (/* binding */ fromArray),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   useBuffer: () => (/* binding */ useBuffer)\n/* harmony export */ });\n// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nconst useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nfunction asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nconst toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nconst fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nconst fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nconst slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nconst concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nconst alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nconst toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nconst fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/byte-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnoughData: () => (/* binding */ assertEnoughData),\n/* harmony export */   decodeErrPrefix: () => (/* binding */ decodeErrPrefix),\n/* harmony export */   encodeErrPrefix: () => (/* binding */ encodeErrPrefix),\n/* harmony export */   uintMinorPrefixBytes: () => (/* binding */ uintMinorPrefixBytes)\n/* harmony export */ });\nconst decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBOztBQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanM/YTM5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWNvZGVFcnJQcmVmaXggPSAnQ0JPUiBkZWNvZGUgZXJyb3I6J1xuY29uc3QgZW5jb2RlRXJyUHJlZml4ID0gJ0NCT1IgZW5jb2RlIGVycm9yOidcblxuY29uc3QgdWludE1pbm9yUHJlZml4Qnl0ZXMgPSBbXVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjNdID0gMVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjRdID0gMlxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjVdID0gM1xudWludE1pbm9yUHJlZml4Qnl0ZXNbMjZdID0gNVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjddID0gOVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG5lZWRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0RW5vdWdoRGF0YSAoZGF0YSwgcG9zLCBuZWVkKSB7XG4gIGlmIChkYXRhLmxlbmd0aCAtIHBvcyA8IG5lZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBub3QgZW5vdWdoIGRhdGEgZm9yIHR5cGVgKVxuICB9XG59XG5cbmV4cG9ydCB7XG4gIGRlY29kZUVyclByZWZpeCxcbiAgZW5jb2RlRXJyUHJlZml4LFxuICB1aW50TWlub3JQcmVmaXhCeXRlcyxcbiAgYXNzZXJ0RW5vdWdoRGF0YVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/decode.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/decode.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokeniser: () => (/* binding */ Tokeniser),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   tokensToObject: () => (/* binding */ tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/jump.js\");\n\n\n\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = _jump_js__WEBPACK_IMPORTED_MODULE_2__.quick[byt]\n    if (token === undefined) {\n      const decoder = _jump_js__WEBPACK_IMPORTED_MODULE_2__.jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/encode.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/encode.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ref: () => (/* binding */ Ref),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeCustom: () => (/* binding */ encodeCustom),\n/* harmony export */   makeCborEncoders: () => (/* binding */ makeCborEncoders),\n/* harmony export */   objectToTokens: () => (/* binding */ objectToTokens)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/is.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _bl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bl.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/bl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/jump.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/7float.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_4__.quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nfunction makeCborEncoders () {\n  const encoders = []\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint.major] = _0uint_js__WEBPACK_IMPORTED_MODULE_6__.encodeUint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint.major] = _1negint_js__WEBPACK_IMPORTED_MODULE_7__.encodeNegint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes.major] = _2bytes_js__WEBPACK_IMPORTED_MODULE_8__.encodeBytes\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string.major] = _3string_js__WEBPACK_IMPORTED_MODULE_9__.encodeString\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array.major] = _4array_js__WEBPACK_IMPORTED_MODULE_10__.encodeArray\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map.major] = _5map_js__WEBPACK_IMPORTED_MODULE_11__.encodeMap\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag.major] = _6tag_js__WEBPACK_IMPORTED_MODULE_12__.encodeTag\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float.major] = _7float_js__WEBPACK_IMPORTED_MODULE_13__.encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null),\n  undefined: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.undefined, undefined),\n  true: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true),\n  false: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false),\n  emptyArray: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, 0),\n  emptyMap: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, obj)\n    } else if (obj >= 0) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.is)(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_5__.asU8A)(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/is.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/is.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   is: () => (/* binding */ is)\n/* harmony export */ });\n// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nfunction is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcz9iNDliIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaXMgYW4gdW5mb3J0dW5hdGUgcmVwbGFjZW1lbnQgZm9yIEBzaW5kcmVzb3JodXMvaXMgdGhhdCB3ZSBuZWVkIHRvXG4vLyByZS1pbXBsZW1lbnQgZm9yIHBlcmZvcm1hbmNlIHB1cnBvc2VzLiBJbiBwYXJ0aWN1bGFyIHRoZSBpcy5vYnNlcnZhYmxlKClcbi8vIGNoZWNrIGlzIGV4cGVuc2l2ZSwgYW5kIHVubmVjZXNzYXJ5IGZvciBvdXIgcHVycG9zZXMuIFRoZSB2YWx1ZXMgcmV0dXJuZWRcbi8vIGFyZSBjb21wYXRpYmxlIHdpdGggQHNpbmRyZXNvcmh1cy9pcywgaG93ZXZlci5cblxuY29uc3QgdHlwZW9mcyA9IFtcbiAgJ3N0cmluZycsXG4gICdudW1iZXInLFxuICAnYmlnaW50JyxcbiAgJ3N5bWJvbCdcbl1cblxuY29uc3Qgb2JqZWN0VHlwZU5hbWVzID0gW1xuICAnRnVuY3Rpb24nLFxuICAnR2VuZXJhdG9yJyxcbiAgJ0FzeW5jR2VuZXJhdG9yJyxcbiAgJ0dlbmVyYXRvckZ1bmN0aW9uJyxcbiAgJ0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24nLFxuICAnQXN5bmNGdW5jdGlvbicsXG4gICdPYnNlcnZhYmxlJyxcbiAgJ0FycmF5JyxcbiAgJ0J1ZmZlcicsXG4gICdPYmplY3QnLFxuICAnUmVnRXhwJyxcbiAgJ0RhdGUnLFxuICAnRXJyb3InLFxuICAnTWFwJyxcbiAgJ1NldCcsXG4gICdXZWFrTWFwJyxcbiAgJ1dlYWtTZXQnLFxuICAnQXJyYXlCdWZmZXInLFxuICAnU2hhcmVkQXJyYXlCdWZmZXInLFxuICAnRGF0YVZpZXcnLFxuICAnUHJvbWlzZScsXG4gICdVUkwnLFxuICAnSFRNTEVsZW1lbnQnLFxuICAnSW50OEFycmF5JyxcbiAgJ1VpbnQ4QXJyYXknLFxuICAnVWludDhDbGFtcGVkQXJyYXknLFxuICAnSW50MTZBcnJheScsXG4gICdVaW50MTZBcnJheScsXG4gICdJbnQzMkFycmF5JyxcbiAgJ1VpbnQzMkFycmF5JyxcbiAgJ0Zsb2F0MzJBcnJheScsXG4gICdGbG9hdDY0QXJyYXknLFxuICAnQmlnSW50NjRBcnJheScsXG4gICdCaWdVaW50NjRBcnJheSdcbl1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpcyAodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuICdudWxsJ1xuICB9XG4gIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuICd1bmRlZmluZWQnXG4gIH1cbiAgaWYgKHZhbHVlID09PSB0cnVlIHx8IHZhbHVlID09PSBmYWxzZSkge1xuICAgIHJldHVybiAnYm9vbGVhbidcbiAgfVxuICBjb25zdCB0eXBlT2YgPSB0eXBlb2YgdmFsdWVcbiAgaWYgKHR5cGVvZnMuaW5jbHVkZXModHlwZU9mKSkge1xuICAgIHJldHVybiB0eXBlT2ZcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIG5vdCBnb2luZyB0byBib3RoZXIgdGVzdGluZyB0aGlzLCBpdCdzIG5vdCBnb2luZyB0byBiZSB2YWxpZCBhbnl3YXlcbiAgaWYgKHR5cGVPZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiAnRnVuY3Rpb24nXG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuICdBcnJheSdcbiAgfVxuICBpZiAoaXNCdWZmZXIodmFsdWUpKSB7XG4gICAgcmV0dXJuICdCdWZmZXInXG4gIH1cbiAgY29uc3Qgb2JqZWN0VHlwZSA9IGdldE9iamVjdFR5cGUodmFsdWUpXG4gIGlmIChvYmplY3RUeXBlKSB7XG4gICAgcmV0dXJuIG9iamVjdFR5cGVcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gJ09iamVjdCdcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc0J1ZmZlciAodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yICYmIHZhbHVlLmNvbnN0cnVjdG9yLmlzQnVmZmVyICYmIHZhbHVlLmNvbnN0cnVjdG9yLmlzQnVmZmVyLmNhbGwobnVsbCwgdmFsdWUpXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJucyB7c3RyaW5nfHVuZGVmaW5lZH1cbiAqL1xuZnVuY3Rpb24gZ2V0T2JqZWN0VHlwZSAodmFsdWUpIHtcbiAgY29uc3Qgb2JqZWN0VHlwZU5hbWUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLnNsaWNlKDgsIC0xKVxuICBpZiAob2JqZWN0VHlwZU5hbWVzLmluY2x1ZGVzKG9iamVjdFR5cGVOYW1lKSkge1xuICAgIHJldHVybiBvYmplY3RUeXBlTmFtZVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiB1bmRlZmluZWRcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/jump.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/jump.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jump: () => (/* binding */ jump),\n/* harmony export */   quick: () => (/* binding */ quick),\n/* harmony export */   quickEncodeToken: () => (/* binding */ quickEncodeToken)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/7float.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nconst jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytesCompact\n}\njump[0x58] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeStringCompact\n}\njump[0x78] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayCompact\n}\njump[0x98] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapCompact\n}\njump[0xb8] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTagCompact\n}\njump[0xd8] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag8\njump[0xd9] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag16\njump[0xda] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag32\njump[0xdb] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nconst quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, '', 1)\n// empty list\nquick[0x80] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, 0, 1)\n// empty map\nquick[0xa0] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, 0, 1)\n// false\nquick[0xf4] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false, false, 1)\n// true\nquick[0xf5] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true, true, 1)\n// null\nquick[0xf6] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nfunction quickEncodeToken (token) {\n  switch (token.type) {\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf4])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf5])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf6])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes:\n      if (!token.value.length) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x40])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string:\n      if (token.value === '') {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x60])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint:\n      if (token.value < 24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([Number(token.value)])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint:\n      if (token.value >= -24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([31 - Number(token.value)])\n      }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/jump.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\nclass Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi90b2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLFdBQVcsSUFBSSxVQUFVO0FBQzVDOztBQUVBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQSxlQUFlLHNCQUFzQjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVSxJQUFJLFdBQVc7QUFDN0M7QUFDQTs7QUFFc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvY2JvcmcvbGliL3Rva2VuLmpzPzM3YzgiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVHlwZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gbWFqb3JcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtib29sZWFufSB0ZXJtaW5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IgKG1ham9yLCBuYW1lLCB0ZXJtaW5hbCkge1xuICAgIHRoaXMubWFqb3IgPSBtYWpvclxuICAgIHRoaXMubWFqb3JFbmNvZGVkID0gbWFqb3IgPDwgNVxuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLnRlcm1pbmFsID0gdGVybWluYWxcbiAgfVxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIHJldHVybiBgVHlwZVske3RoaXMubWFqb3J9XS4ke3RoaXMubmFtZX1gXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtUeXBlfSB0eXBcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGNvbXBhcmUgKHR5cCkge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDEgKi9cbiAgICByZXR1cm4gdGhpcy5tYWpvciA8IHR5cC5tYWpvciA/IC0xIDogdGhpcy5tYWpvciA+IHR5cC5tYWpvciA/IDEgOiAwXG4gIH1cbn1cblxuLy8gY29udmVydCB0byBzdGF0aWMgZmllbGRzIHdoZW4gYmV0dGVyIHN1cHBvcnRlZFxuVHlwZS51aW50ID0gbmV3IFR5cGUoMCwgJ3VpbnQnLCB0cnVlKVxuVHlwZS5uZWdpbnQgPSBuZXcgVHlwZSgxLCAnbmVnaW50JywgdHJ1ZSlcblR5cGUuYnl0ZXMgPSBuZXcgVHlwZSgyLCAnYnl0ZXMnLCB0cnVlKVxuVHlwZS5zdHJpbmcgPSBuZXcgVHlwZSgzLCAnc3RyaW5nJywgdHJ1ZSlcblR5cGUuYXJyYXkgPSBuZXcgVHlwZSg0LCAnYXJyYXknLCBmYWxzZSlcblR5cGUubWFwID0gbmV3IFR5cGUoNSwgJ21hcCcsIGZhbHNlKVxuVHlwZS50YWcgPSBuZXcgVHlwZSg2LCAndGFnJywgZmFsc2UpIC8vIHRlcm1pbmFsP1xuVHlwZS5mbG9hdCA9IG5ldyBUeXBlKDcsICdmbG9hdCcsIHRydWUpXG5UeXBlLmZhbHNlID0gbmV3IFR5cGUoNywgJ2ZhbHNlJywgdHJ1ZSlcblR5cGUudHJ1ZSA9IG5ldyBUeXBlKDcsICd0cnVlJywgdHJ1ZSlcblR5cGUubnVsbCA9IG5ldyBUeXBlKDcsICdudWxsJywgdHJ1ZSlcblR5cGUudW5kZWZpbmVkID0gbmV3IFR5cGUoNywgJ3VuZGVmaW5lZCcsIHRydWUpXG5UeXBlLmJyZWFrID0gbmV3IFR5cGUoNywgJ2JyZWFrJywgdHJ1ZSlcbi8vIFR5cGUuaW5kZWZpbml0ZUxlbmd0aCA9IG5ldyBUeXBlKDAsICdpbmRlZmluaXRlTGVuZ3RoJywgdHJ1ZSlcblxuY2xhc3MgVG9rZW4ge1xuICAvKipcbiAgICogQHBhcmFtIHtUeXBlfSB0eXBlXG4gICAqIEBwYXJhbSB7YW55fSBbdmFsdWVdXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbZW5jb2RlZExlbmd0aF1cbiAgICovXG4gIGNvbnN0cnVjdG9yICh0eXBlLCB2YWx1ZSwgZW5jb2RlZExlbmd0aCkge1xuICAgIHRoaXMudHlwZSA9IHR5cGVcbiAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgICB0aGlzLmVuY29kZWRMZW5ndGggPSBlbmNvZGVkTGVuZ3RoXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmVuY29kZWRCeXRlcyA9IHVuZGVmaW5lZFxuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXx1bmRlZmluZWR9ICovXG4gICAgdGhpcy5ieXRlVmFsdWUgPSB1bmRlZmluZWRcbiAgfVxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIHJldHVybiBgVG9rZW5bJHt0aGlzLnR5cGV9XS4ke3RoaXMudmFsdWV9YFxuICB9XG59XG5cbmV4cG9ydCB7IFR5cGUsIFRva2VuIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/cborg/lib/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base32.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base32.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFvQztBQUM3QixlQUFlLGlEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQixpREFBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLGtCQUFrQixpREFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSx1QkFBdUIsaURBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLGlEQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLDBCQUEwQixpREFBTztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxnQkFBZ0IsaURBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzMi5qcz8xOWM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2InLFxuICAgIG5hbWU6ICdiYXNlMzInLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0InLFxuICAgIG5hbWU6ICdiYXNlMzJ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWQnLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdDJyxcbiAgICBuYW1lOiAnYmFzZTMycGFkdXBwZXInLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dicsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1QnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXhwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ6ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnaCcsXG4gICAgbmFtZTogJ2Jhc2UzMnonLFxuICAgIGFscGhhYmV0OiAneWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjknLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base36.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base36.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGVBQWUsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQiwrQ0FBSztBQUNoQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzNi5qcz80MzJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzYgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnaycsXG4gICAgbmFtZTogJ2Jhc2UzNicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzZ1cHBlciA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdLJyxcbiAgICBuYW1lOiAnYmFzZTM2dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMzYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base58.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base58.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGtCQUFrQiwrQ0FBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLCtDQUFLO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzPzk0ODciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgICBwcmVmaXg6ICd6JyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gICAgbmFtZTogJ2Jhc2U1OGZsaWNrcicsXG4gICAgcHJlZml4OiAnWicsXG4gICAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNTguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/interface.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/interface.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanM/NDA0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlIGVuY29kZXJzIC8gZGVjb2RlcnMganVzdCBiYXNlIGVuY29kZSAvIGRlY29kZSBiZXR3ZWVuIGJpbmFyeSBhbmRcbi8vIHRleHR1YWwgcmVwcmVzZW50YXRpb24uIFRoZXkgYXJlIHVuYXdhcmUgb2YgbXVsdGliYXNlLlxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/block/interface.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/block/interface.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ibG9jay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jsb2NrL2ludGVyZmFjZS5qcz8yMTBjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bytes.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bytes.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixvQkFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2J5dGVzLmpzPzk0NWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVtcHR5ID0gbmV3IFVpbnQ4QXJyYXkoMCk7XG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoZCkge1xuICAgIHJldHVybiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChoZXgpIHtcbiAgICBjb25zdCBoZXhlcyA9IGhleC5tYXRjaCgvLi4vZyk7XG4gICAgcmV0dXJuIGhleGVzICE9IG51bGwgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhYSwgYmIpIHtcbiAgICBpZiAoYWEgPT09IGJiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoYWEuYnl0ZUxlbmd0aCAhPT0gYmIuYnl0ZUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGlpID0gMDsgaWkgPCBhYS5ieXRlTGVuZ3RoOyBpaSsrKSB7XG4gICAgICAgIGlmIChhYVtpaV0gIT09IGJiW2lpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvZXJjZShvKSB7XG4gICAgaWYgKG8gaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIG8uY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKSB7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH1cbiAgICBpZiAobyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvKTtcbiAgICB9XG4gICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhvKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0JpbmFyeShvKSB7XG4gICAgcmV0dXJuIG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcobyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbVN0cmluZyhzdHIpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYikge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/cid.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/cid.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/codecs/interface.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzPzcyYzAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/digest.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkQ7QUFDcEI7QUFDdkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHVCQUF1QixzREFBcUI7QUFDNUMsc0NBQXNDLHNEQUFxQjtBQUMzRDtBQUNBLElBQUksZ0RBQWU7QUFDbkIsSUFBSSxnREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQixpREFBTTtBQUN4QiwrQkFBK0IsOENBQWE7QUFDNUMsaUNBQWlDLDhDQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9kaWdlc3QuanM/MDFiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UsIGVxdWFscyBhcyBlcXVhbEJ5dGVzIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgdmFyaW50IGZyb20gJy4uL3ZhcmludC5qcyc7XG4vKipcbiAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgICBjb25zdCBzaXplT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGNvZGUpO1xuICAgIGNvbnN0IGRpZ2VzdE9mZnNldCA9IHNpemVPZmZzZXQgKyB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoc2l6ZSk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgYnl0ZXMsIDApO1xuICAgIHZhcmludC5lbmNvZGVUbyhzaXplLCBieXRlcywgc2l6ZU9mZnNldCk7XG4gICAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKTtcbn1cbi8qKlxuICogVHVybnMgYnl0ZXMgcmVwcmVzZW50YXRpb24gb2YgbXVsdGloYXNoIGRpZ2VzdCBpbnRvIGFuIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKG11bHRpaGFzaCkge1xuICAgIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gICAgY29uc3QgW2NvZGUsIHNpemVPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcyk7XG4gICAgY29uc3QgW3NpemUsIGRpZ2VzdE9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQpKTtcbiAgICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgICBpZiAoZGlnZXN0LmJ5dGVMZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBkYXRhID0gYjtcbiAgICAgICAgcmV0dXJuIChhLmNvZGUgPT09IGRhdGEuY29kZSAmJlxuICAgICAgICAgICAgYS5zaXplID09PSBkYXRhLnNpemUgJiZcbiAgICAgICAgICAgIGRhdGEuYnl0ZXMgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmXG4gICAgICAgICAgICBlcXVhbEJ5dGVzKGEuYnl0ZXMsIGRhdGEuYnl0ZXMpKTtcbiAgICB9XG59XG4vKipcbiAqIFJlcHJlc2VudHMgYSBtdWx0aWhhc2ggZGlnZXN0IHdoaWNoIGNhcnJpZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlXG4gKiBoYXNoaW5nIGFsZ29yaXRobSBhbmQgYW4gYWN0dWFsIGhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgICBjb2RlO1xuICAgIHNpemU7XG4gICAgZGlnZXN0O1xuICAgIGJ5dGVzO1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBkaWdlc3Q7XG4gICAgICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgICB9XG59XG4vKipcbiAqIFVzZWQgdG8gY2hlY2sgdGhhdCB0aGUgcGFzc2VkIG11bHRpaGFzaCBoYXMgdGhlIHBhc3NlZCBjb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNDb2RlKGRpZ2VzdCwgY29kZSkge1xuICAgIHJldHVybiBkaWdlc3QuY29kZSA9PT0gY29kZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpZ2VzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaGFzaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUN0QztBQUNPLGdCQUFnQixzREFBc0Q7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RkFBNkYscUJBQXFCO0FBQ2xIO0FBQ0E7QUFDQSwwRkFBMEYscUJBQXFCO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGtCQUFrQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSxXQUFXLDhDQUFhO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9oYXNoZXIuanM/N2YzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSCA9IDIwO1xuZXhwb3J0IGZ1bmN0aW9uIGZyb20oeyBuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoIH0pIHtcbiAgICByZXR1cm4gbmV3IEhhc2hlcihuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoKTtcbn1cbi8qKlxuICogSGFzaGVyIHJlcHJlc2VudHMgYSBoYXNoaW5nIGFsZ29yaXRobSBpbXBsZW1lbnRhdGlvbiB0aGF0IHByb2R1Y2VzIGFzXG4gKiBgTXVsdGloYXNoRGlnZXN0YC5cbiAqL1xuZXhwb3J0IGNsYXNzIEhhc2hlciB7XG4gICAgbmFtZTtcbiAgICBjb2RlO1xuICAgIGVuY29kZTtcbiAgICBtaW5EaWdlc3RMZW5ndGg7XG4gICAgbWF4RGlnZXN0TGVuZ3RoO1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5lbmNvZGUgPSBlbmNvZGU7XG4gICAgICAgIHRoaXMubWluRGlnZXN0TGVuZ3RoID0gbWluRGlnZXN0TGVuZ3RoID8/IERFRkFVTFRfTUlOX0RJR0VTVF9MRU5HVEg7XG4gICAgICAgIHRoaXMubWF4RGlnZXN0TGVuZ3RoID0gbWF4RGlnZXN0TGVuZ3RoO1xuICAgIH1cbiAgICBkaWdlc3QoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnM/LnRydW5jYXRlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnRydW5jYXRlIDwgdGhpcy5taW5EaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWluRGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubWF4RGlnZXN0TGVuZ3RoICE9IG51bGwgJiYgb3B0aW9ucy50cnVuY2F0ZSA+IHRoaXMubWF4RGlnZXN0TGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHRydW5jYXRlIG9wdGlvbiwgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHt0aGlzLm1heERpZ2VzdExlbmd0aH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmVuY29kZShpbnB1dCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVEaWdlc3QocmVzdWx0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQudGhlbihkaWdlc3QgPT4gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgdGhpcy5jb2RlLCBvcHRpb25zPy50cnVuY2F0ZSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgICAgICB9XG4gICAgfVxufVxuLyoqXG4gKiBDcmVhdGUgYSBEaWdlc3QgZnJvbSB0aGUgcGFzc2VkIHVpbnQ4YXJyYXkgYW5kIGNvZGUsIG9wdGlvbmFsbHkgdHJ1bmNhdGluZyBpdFxuICogZmlyc3QuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURpZ2VzdChkaWdlc3QsIGNvZGUsIHRydW5jYXRlKSB7XG4gICAgaWYgKHRydW5jYXRlICE9IG51bGwgJiYgdHJ1bmNhdGUgIT09IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmICh0cnVuY2F0ZSA+IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke2RpZ2VzdC5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIGRpZ2VzdCA9IGRpZ2VzdC5zdWJhcnJheSgwLCB0cnVuY2F0ZSk7XG4gICAgfVxuICAgIHJldHVybiBEaWdlc3QuY3JlYXRlKGNvZGUsIGRpZ2VzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/interface.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pbnRlcmZhY2UuanM/MTA1MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjIE11bHRpaGFzaFxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/interface.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/interface.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFDQTtBQUNGO0FBQ0M7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2ludGVyZmFjZS5qcz8zODdiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYmFzZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaGFzaGVzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvZGVjcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9saW5rL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Jsb2NrL2ludGVyZmFjZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createLegacy: () => (/* binding */ createLegacy),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   format: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.format),\n/* harmony export */   fromJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.fromJSON),\n/* harmony export */   isLink: () => (/* binding */ isLink),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   toJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.toJSON)\n/* harmony export */ });\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link/interface.js\");\n\n// This way TS will also expose all the types from module\n\nconst DAG_PB_CODE = 0x70;\n// eslint-disable-next-line\nconst SHA_256_CODE = 0x12;\n/**\n * Simplified version of `create` for CIDv0.\n */\nfunction createLegacy(digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(0, DAG_PB_CODE, digest);\n}\n/**\n * Simplified version of `create` for CIDv1.\n *\n * @param code - Content encoding format code.\n * @param digest - Miltihash of the content.\n */\nfunction create(code, digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(1, code, digest);\n}\n/**\n * Type predicate returns true if value is the link.\n */\nfunction isLink(value) {\n    if (value == null) {\n        return false;\n    }\n    const withSlash = value;\n    if (withSlash['/'] != null && withSlash['/'] === withSlash.bytes) {\n        return true;\n    }\n    const withAsCID = value;\n    if (withAsCID.asCID === value) {\n        return true;\n    }\n    return false;\n}\n/**\n * Takes cid in a string representation and creates an instance. If `base`\n * decoder is not provided will use a default from the configuration. It will\n * throw an error if encoding of the CID is not compatible with supplied (or\n * a default decoder).\n */\nfunction parse(source, base) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.parse(source, base);\n}\n\n/**\n * Decoded a CID from its binary representation. The byte array must contain\n * only the CID with no additional bytes.\n *\n * An error will be thrown if the bytes provided do not contain a valid\n * binary representation of a CID.\n */\nfunction decode(bytes) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.decode(bytes);\n}\n//# sourceMappingURL=link.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBeUQ7QUFDekQ7QUFDb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdDQUFHO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsd0NBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsd0NBQUc7QUFDZDtBQUNvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyx3Q0FBRztBQUNkO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2xpbmsuanM/Zjg3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDSUQsIGZvcm1hdCwgdG9KU09OLCBmcm9tSlNPTiB9IGZyb20gJy4vY2lkLmpzJztcbi8vIFRoaXMgd2F5IFRTIHdpbGwgYWxzbyBleHBvc2UgYWxsIHRoZSB0eXBlcyBmcm9tIG1vZHVsZVxuZXhwb3J0ICogZnJvbSAnLi9saW5rL2ludGVyZmFjZS5qcyc7XG5jb25zdCBEQUdfUEJfQ09ERSA9IDB4NzA7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbmNvbnN0IFNIQV8yNTZfQ09ERSA9IDB4MTI7XG4vKipcbiAqIFNpbXBsaWZpZWQgdmVyc2lvbiBvZiBgY3JlYXRlYCBmb3IgQ0lEdjAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMZWdhY3koZGlnZXN0KSB7XG4gICAgcmV0dXJuIENJRC5jcmVhdGUoMCwgREFHX1BCX0NPREUsIGRpZ2VzdCk7XG59XG4vKipcbiAqIFNpbXBsaWZpZWQgdmVyc2lvbiBvZiBgY3JlYXRlYCBmb3IgQ0lEdjEuXG4gKlxuICogQHBhcmFtIGNvZGUgLSBDb250ZW50IGVuY29kaW5nIGZvcm1hdCBjb2RlLlxuICogQHBhcmFtIGRpZ2VzdCAtIE1pbHRpaGFzaCBvZiB0aGUgY29udGVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZShjb2RlLCBkaWdlc3QpIHtcbiAgICByZXR1cm4gQ0lELmNyZWF0ZSgxLCBjb2RlLCBkaWdlc3QpO1xufVxuLyoqXG4gKiBUeXBlIHByZWRpY2F0ZSByZXR1cm5zIHRydWUgaWYgdmFsdWUgaXMgdGhlIGxpbmsuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0xpbmsodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHdpdGhTbGFzaCA9IHZhbHVlO1xuICAgIGlmICh3aXRoU2xhc2hbJy8nXSAhPSBudWxsICYmIHdpdGhTbGFzaFsnLyddID09PSB3aXRoU2xhc2guYnl0ZXMpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNvbnN0IHdpdGhBc0NJRCA9IHZhbHVlO1xuICAgIGlmICh3aXRoQXNDSUQuYXNDSUQgPT09IHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIFRha2VzIGNpZCBpbiBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBhbmQgY3JlYXRlcyBhbiBpbnN0YW5jZS4gSWYgYGJhc2VgXG4gKiBkZWNvZGVyIGlzIG5vdCBwcm92aWRlZCB3aWxsIHVzZSBhIGRlZmF1bHQgZnJvbSB0aGUgY29uZmlndXJhdGlvbi4gSXQgd2lsbFxuICogdGhyb3cgYW4gZXJyb3IgaWYgZW5jb2Rpbmcgb2YgdGhlIENJRCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIHN1cHBsaWVkIChvclxuICogYSBkZWZhdWx0IGRlY29kZXIpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2Uoc291cmNlLCBiYXNlKSB7XG4gICAgcmV0dXJuIENJRC5wYXJzZShzb3VyY2UsIGJhc2UpO1xufVxuZXhwb3J0IHsgZm9ybWF0LCB0b0pTT04sIGZyb21KU09OIH07XG4vKipcbiAqIERlY29kZWQgYSBDSUQgZnJvbSBpdHMgYmluYXJ5IHJlcHJlc2VudGF0aW9uLiBUaGUgYnl0ZSBhcnJheSBtdXN0IGNvbnRhaW5cbiAqIG9ubHkgdGhlIENJRCB3aXRoIG5vIGFkZGl0aW9uYWwgYnl0ZXMuXG4gKlxuICogQW4gZXJyb3Igd2lsbCBiZSB0aHJvd24gaWYgdGhlIGJ5dGVzIHByb3ZpZGVkIGRvIG5vdCBjb250YWluIGEgdmFsaWRcbiAqIGJpbmFyeSByZXByZXNlbnRhdGlvbiBvZiBhIENJRC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShieXRlcykge1xuICAgIHJldHVybiBDSUQuZGVjb2RlKGJ5dGVzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpbmsuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link/interface.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link/interface.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanM/ZmFlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/varint.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/varint.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92YXJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNqQztBQUNQLGlCQUFpQix5REFBTTtBQUN2QixrQkFBa0IseURBQU07QUFDeEI7QUFDTztBQUNQLElBQUkseURBQU07QUFDVjtBQUNBO0FBQ087QUFDUCxXQUFXLHlEQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZhcmludC5qcz9jMjBlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAnLi92ZW5kb3IvdmFyaW50LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb2Zmc2V0ID0gMCkge1xuICAgIGNvbnN0IGNvZGUgPSB2YXJpbnQuZGVjb2RlKGRhdGEsIG9mZnNldCk7XG4gICAgcmV0dXJuIFtjb2RlLCB2YXJpbnQuZGVjb2RlLmJ5dGVzXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUbyhpbnQsIHRhcmdldCwgb2Zmc2V0ID0gMCkge1xuICAgIHZhcmludC5lbmNvZGUoaW50LCB0YXJnZXQsIG9mZnNldCk7XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGluZ0xlbmd0aChpbnQpIHtcbiAgICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGludCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/vendor/varint.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFlBQVksRUFBQztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcz8yZTY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgZW5jb2RlXzEgPSBlbmNvZGU7XG52YXIgTVNCID0gMHg4MCwgUkVTVCA9IDB4N0YsIE1TQkFMTCA9IH5SRVNULCBJTlQgPSBNYXRoLnBvdygyLCAzMSk7XG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBudW1cbiAqIEBwYXJhbSB7bnVtYmVyW119IG91dFxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiBlbmNvZGUobnVtLCBvdXQsIG9mZnNldCkge1xuICAgIG91dCA9IG91dCB8fCBbXTtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcbiAgICB2YXIgb2xkT2Zmc2V0ID0gb2Zmc2V0O1xuICAgIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgICAgIG91dFtvZmZzZXQrK10gPSAobnVtICYgMHhGRikgfCBNU0I7XG4gICAgICAgIG51bSAvPSAxMjg7XG4gICAgfVxuICAgIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtID4+Pj0gNztcbiAgICB9XG4gICAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICAgIHJldHVybiBvdXQ7XG59XG52YXIgZGVjb2RlID0gcmVhZDtcbnZhciBNU0IkMSA9IDB4ODAsIFJFU1QkMSA9IDB4N0Y7XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nIHwgYW55W119IGJ1ZlxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiByZWFkKGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICAgIGRvIHtcbiAgICAgICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICAgICAgfVxuICAgICAgICBiID0gYnVmW2NvdW50ZXIrK107XG4gICAgICAgIHJlcyArPSBzaGlmdCA8IDI4XG4gICAgICAgICAgICA/IChiICYgUkVTVCQxKSA8PCBzaGlmdFxuICAgICAgICAgICAgOiAoYiAmIFJFU1QkMSkgKiBNYXRoLnBvdygyLCBzaGlmdCk7XG4gICAgICAgIHNoaWZ0ICs9IDc7XG4gICAgfSB3aGlsZSAoYiA+PSBNU0IkMSk7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHJlYWQuYnl0ZXMgPSBjb3VudGVyIC0gb2Zmc2V0O1xuICAgIHJldHVybiByZXM7XG59XG52YXIgTjEgPSBNYXRoLnBvdygyLCA3KTtcbnZhciBOMiA9IE1hdGgucG93KDIsIDE0KTtcbnZhciBOMyA9IE1hdGgucG93KDIsIDIxKTtcbnZhciBONCA9IE1hdGgucG93KDIsIDI4KTtcbnZhciBONSA9IE1hdGgucG93KDIsIDM1KTtcbnZhciBONiA9IE1hdGgucG93KDIsIDQyKTtcbnZhciBONyA9IE1hdGgucG93KDIsIDQ5KTtcbnZhciBOOCA9IE1hdGgucG93KDIsIDU2KTtcbnZhciBOOSA9IE1hdGgucG93KDIsIDYzKTtcbnZhciBsZW5ndGggPSBmdW5jdGlvbiAoLyoqIEB0eXBlIHtudW1iZXJ9ICovIHZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSA8IE4xID8gMVxuICAgICAgICA6IHZhbHVlIDwgTjIgPyAyXG4gICAgICAgICAgICA6IHZhbHVlIDwgTjMgPyAzXG4gICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE40ID8gNFxuICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjUgPyA1XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjYgPyA2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE43ID8gN1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjggPyA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjkgPyA5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAxMCk7XG59O1xudmFyIHZhcmludCA9IHtcbiAgICBlbmNvZGU6IGVuY29kZV8xLFxuICAgIGRlY29kZTogZGVjb2RlLFxuICAgIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFyaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/api.js":
/*!************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/api.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// @see https://github.com/microsoft/TypeScript/issues/41825\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL2FwaS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDUyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L3NyYy9hcGkuanM/NThlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvVHlwZVNjcmlwdC9pc3N1ZXMvNDE4MjVcbmV4cG9ydCB7fVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/constant.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BYTES_PER_FR: () => (/* binding */ BYTES_PER_FR),\n/* harmony export */   EXPANDED_BYTES_PER_NODE: () => (/* binding */ EXPANDED_BYTES_PER_NODE),\n/* harmony export */   EXPANDED_BYTES_PER_QUAD: () => (/* binding */ EXPANDED_BYTES_PER_QUAD),\n/* harmony export */   FRS_PER_QUAD: () => (/* binding */ FRS_PER_QUAD),\n/* harmony export */   FR_RATIO: () => (/* binding */ FR_RATIO),\n/* harmony export */   IN_BITS_FR: () => (/* binding */ IN_BITS_FR),\n/* harmony export */   IN_BYTES_PER_QUAD: () => (/* binding */ IN_BYTES_PER_QUAD),\n/* harmony export */   LEAFS_PER_QUAD: () => (/* binding */ LEAFS_PER_QUAD),\n/* harmony export */   MIN_PAYLOAD_SIZE: () => (/* binding */ MIN_PAYLOAD_SIZE),\n/* harmony export */   NODE_SIZE: () => (/* binding */ NODE_SIZE),\n/* harmony export */   OUT_BITS_FR: () => (/* binding */ OUT_BITS_FR),\n/* harmony export */   OUT_BYTES_PER_QUAD: () => (/* binding */ OUT_BYTES_PER_QUAD),\n/* harmony export */   PADDED_BYTES_PER_QUAD: () => (/* binding */ PADDED_BYTES_PER_QUAD)\n/* harmony export */ });\n/**\n * Number of bits per byte\n */\nconst BITS_PER_BYTE = 8\n\n/**\n * The number of Frs per Block.\n */\nconst FRS_PER_QUAD = 4\n\nconst LEAFS_PER_QUAD = /** @type {4n} */ (BigInt(FRS_PER_QUAD))\n\n/**\n * The amount of bits in an Fr when not padded.\n */\nconst IN_BITS_FR = 254\n/**\n * The amount of bits in an Fr when padded.\n */\nconst OUT_BITS_FR = 256\n\nconst IN_BYTES_PER_QUAD =\n  /** @type {127} */\n  ((FRS_PER_QUAD * IN_BITS_FR) / BITS_PER_BYTE)\n\nconst OUT_BYTES_PER_QUAD =\n  /** @type {128} */\n  ((FRS_PER_QUAD * OUT_BITS_FR) / BITS_PER_BYTE)\n\nconst PADDED_BYTES_PER_QUAD = /** @type {127n} */ (\n  BigInt(IN_BYTES_PER_QUAD)\n)\n\nconst EXPANDED_BYTES_PER_QUAD = /** @type {128n} */ (\n  BigInt(OUT_BYTES_PER_QUAD)\n)\n\nconst BYTES_PER_FR =\n  /** @type {32} */\n  OUT_BYTES_PER_QUAD / FRS_PER_QUAD\n\nconst FR_RATIO = IN_BITS_FR / OUT_BITS_FR\n\n/**\n * Size of a node in the merkle tree.\n */\nconst NODE_SIZE =\n  /** @type {32} */\n  (OUT_BYTES_PER_QUAD / FRS_PER_QUAD)\n\nconst EXPANDED_BYTES_PER_NODE = /** @type {32n} */ (BigInt(NODE_SIZE))\n\n/**\n * The smallest amount of data for which FR32 padding has a defined result.\n * Silently upgrading 2 leaves to 4 would break the symmetry so we require\n * an extra byte and the rest can be 0 padded to expand to 4 leaves.\n */\nconst MIN_PAYLOAD_SIZE = 2 * NODE_SIZE + 1\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL2NvbnN0YW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDTzs7QUFFQSxrQ0FBa0MsSUFBSTs7QUFFN0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTzs7QUFFQTtBQUNQLGFBQWEsS0FBSztBQUNsQjs7QUFFTztBQUNQLGFBQWEsS0FBSztBQUNsQjs7QUFFTyx5Q0FBeUMsTUFBTTtBQUN0RDtBQUNBOztBQUVPLDJDQUEyQyxNQUFNO0FBQ3hEO0FBQ0E7O0FBRU87QUFDUCxhQUFhLElBQUk7QUFDakI7O0FBRU87O0FBRVA7QUFDQTtBQUNBO0FBQ087QUFDUCxhQUFhLElBQUk7QUFDakI7O0FBRU8sMkNBQTJDLEtBQUs7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L3NyYy9jb25zdGFudC5qcz9kYWMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTnVtYmVyIG9mIGJpdHMgcGVyIGJ5dGVcbiAqL1xuY29uc3QgQklUU19QRVJfQllURSA9IDhcblxuLyoqXG4gKiBUaGUgbnVtYmVyIG9mIEZycyBwZXIgQmxvY2suXG4gKi9cbmV4cG9ydCBjb25zdCBGUlNfUEVSX1FVQUQgPSA0XG5cbmV4cG9ydCBjb25zdCBMRUFGU19QRVJfUVVBRCA9IC8qKiBAdHlwZSB7NG59ICovIChCaWdJbnQoRlJTX1BFUl9RVUFEKSlcblxuLyoqXG4gKiBUaGUgYW1vdW50IG9mIGJpdHMgaW4gYW4gRnIgd2hlbiBub3QgcGFkZGVkLlxuICovXG5leHBvcnQgY29uc3QgSU5fQklUU19GUiA9IDI1NFxuLyoqXG4gKiBUaGUgYW1vdW50IG9mIGJpdHMgaW4gYW4gRnIgd2hlbiBwYWRkZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBPVVRfQklUU19GUiA9IDI1NlxuXG5leHBvcnQgY29uc3QgSU5fQllURVNfUEVSX1FVQUQgPVxuICAvKiogQHR5cGUgezEyN30gKi9cbiAgKChGUlNfUEVSX1FVQUQgKiBJTl9CSVRTX0ZSKSAvIEJJVFNfUEVSX0JZVEUpXG5cbmV4cG9ydCBjb25zdCBPVVRfQllURVNfUEVSX1FVQUQgPVxuICAvKiogQHR5cGUgezEyOH0gKi9cbiAgKChGUlNfUEVSX1FVQUQgKiBPVVRfQklUU19GUikgLyBCSVRTX1BFUl9CWVRFKVxuXG5leHBvcnQgY29uc3QgUEFEREVEX0JZVEVTX1BFUl9RVUFEID0gLyoqIEB0eXBlIHsxMjdufSAqLyAoXG4gIEJpZ0ludChJTl9CWVRFU19QRVJfUVVBRClcbilcblxuZXhwb3J0IGNvbnN0IEVYUEFOREVEX0JZVEVTX1BFUl9RVUFEID0gLyoqIEB0eXBlIHsxMjhufSAqLyAoXG4gIEJpZ0ludChPVVRfQllURVNfUEVSX1FVQUQpXG4pXG5cbmV4cG9ydCBjb25zdCBCWVRFU19QRVJfRlIgPVxuICAvKiogQHR5cGUgezMyfSAqL1xuICBPVVRfQllURVNfUEVSX1FVQUQgLyBGUlNfUEVSX1FVQURcblxuZXhwb3J0IGNvbnN0IEZSX1JBVElPID0gSU5fQklUU19GUiAvIE9VVF9CSVRTX0ZSXG5cbi8qKlxuICogU2l6ZSBvZiBhIG5vZGUgaW4gdGhlIG1lcmtsZSB0cmVlLlxuICovXG5leHBvcnQgY29uc3QgTk9ERV9TSVpFID1cbiAgLyoqIEB0eXBlIHszMn0gKi9cbiAgKE9VVF9CWVRFU19QRVJfUVVBRCAvIEZSU19QRVJfUVVBRClcblxuZXhwb3J0IGNvbnN0IEVYUEFOREVEX0JZVEVTX1BFUl9OT0RFID0gLyoqIEB0eXBlIHszMm59ICovIChCaWdJbnQoTk9ERV9TSVpFKSlcblxuLyoqXG4gKiBUaGUgc21hbGxlc3QgYW1vdW50IG9mIGRhdGEgZm9yIHdoaWNoIEZSMzIgcGFkZGluZyBoYXMgYSBkZWZpbmVkIHJlc3VsdC5cbiAqIFNpbGVudGx5IHVwZ3JhZGluZyAyIGxlYXZlcyB0byA0IHdvdWxkIGJyZWFrIHRoZSBzeW1tZXRyeSBzbyB3ZSByZXF1aXJlXG4gKiBhbiBleHRyYSBieXRlIGFuZCB0aGUgcmVzdCBjYW4gYmUgMCBwYWRkZWQgdG8gZXhwYW5kIHRvIDQgbGVhdmVzLlxuICovXG5leHBvcnQgY29uc3QgTUlOX1BBWUxPQURfU0laRSA9IDIgKiBOT0RFX1NJWkUgKyAxXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/digest.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/digest.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEIGHT_SIZE: () => (/* binding */ HEIGHT_SIZE),\n/* harmony export */   MAX_DIGEST_SIZE: () => (/* binding */ MAX_DIGEST_SIZE),\n/* harmony export */   MAX_HEIGHT: () => (/* binding */ MAX_HEIGHT),\n/* harmony export */   MAX_PAYLOAD_SIZE: () => (/* binding */ MAX_PAYLOAD_SIZE),\n/* harmony export */   MAX_SIZE: () => (/* binding */ MAX_SIZE),\n/* harmony export */   ROOT_SIZE: () => (/* binding */ ROOT_SIZE),\n/* harmony export */   TAG_SIZE: () => (/* binding */ TAG_SIZE),\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   fromBytes: () => (/* binding */ fromBytes),\n/* harmony export */   fromPiece: () => (/* binding */ fromPiece),\n/* harmony export */   height: () => (/* binding */ height),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   padding: () => (/* binding */ padding),\n/* harmony export */   root: () => (/* binding */ root),\n/* harmony export */   toBytes: () => (/* binding */ toBytes)\n/* harmony export */ });\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/index.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js\");\n/* harmony import */ var _ipld_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ipld.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/ipld.js\");\n/* harmony import */ var _piece_size_expanded_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./piece/size/expanded.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/expanded.js\");\n\n\n\n\n\n\n/**\n * @see https://github.com/multiformats/multicodec/pull/331/files\n */\nconst name = /** @type {const} */ (\n  'fr32-sha2-256-trunc254-padded-binary-tree'\n)\n\n/**\n * @type {API.MulticodecCode<0x1011, typeof name>}\n * @see https://github.com/multiformats/multicodec/pull/331/files\n */\nconst code = 0x1011\n\n/**\n * Varint is used to encode the tree height which is limited to 9 bytes.\n *\n * @see https://github.com/multiformats/unsigned-varint#practical-maximum-of-9-bytes-for-security\n */\nconst MAX_PADDING_SIZE = 9\n/**\n * One byte is used to store the tree height.\n */\nconst HEIGHT_SIZE = 1\n\n/**\n * Amount of bytes used to store the tree root.\n */\nconst ROOT_SIZE = _ipld_js__WEBPACK_IMPORTED_MODULE_3__.SHA256.size\n\n/**\n * Size of the multihash digest in bytes.\n */\nconst MAX_DIGEST_SIZE = MAX_PADDING_SIZE + HEIGHT_SIZE + _ipld_js__WEBPACK_IMPORTED_MODULE_3__.SHA256.size\n\nconst TAG_SIZE = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodingLength(code)\n\n/**\n * Max size of the multihash in bytes\n */\nconst MAX_SIZE =\n  TAG_SIZE + multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodingLength(MAX_DIGEST_SIZE) + MAX_DIGEST_SIZE\n\n/**\n * Since first byte in the digest is the tree height, the maximum height is 255.\n *\n * @type {255}\n */\nconst MAX_HEIGHT = 255\n\n/**\n * Max payload is determined by the maximum height of the tree, which is limited\n * by the int we could store in one byte. We calculate the max piece size\n * and derive max payload size that can would produce it after FR32 padding.\n */\nconst MAX_PAYLOAD_SIZE =\n  ((0,_piece_size_expanded_js__WEBPACK_IMPORTED_MODULE_4__.fromHeight)(MAX_HEIGHT) * BigInt(_constant_js__WEBPACK_IMPORTED_MODULE_2__.IN_BITS_FR)) / BigInt(_constant_js__WEBPACK_IMPORTED_MODULE_2__.OUT_BITS_FR)\n\n/**\n * @param {API.Piece} piece\n * @returns {API.PieceDigest}\n */\nconst fromPiece = ({ padding, height, root }) => {\n  const paddingLength = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodingLength(Number(padding))\n  const size = paddingLength + HEIGHT_SIZE + ROOT_SIZE\n  const sizeLength = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodingLength(size)\n\n  const multihashLength = TAG_SIZE + sizeLength + size\n\n  let offset = 0\n  const bytes = new Uint8Array(multihashLength)\n  multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodeTo(code, bytes, offset)\n  offset += TAG_SIZE\n\n  multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodeTo(size, bytes, offset)\n  offset += sizeLength\n\n  multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodeTo(Number(padding), bytes, offset)\n  offset += paddingLength\n\n  bytes[offset] = height\n  offset += HEIGHT_SIZE\n\n  bytes.set(root, offset)\n\n  return new Digest(bytes)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {API.PieceDigest}\n */\nconst fromBytes = (bytes) => new Digest(bytes)\n\n/**\n * @param {object} input\n * @param {Uint8Array} input.digest\n */\nconst toBytes = ({ digest }) => {\n  const SIZE_BYTE_LENGTH = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodingLength(digest.length)\n\n  // number of bytes prefix will take up\n  const prefixByteLength = SIZE_BYTE_LENGTH + TAG_SIZE\n\n  // if digest is view within a buffer that has enough bytes in front to\n  // fit the prefix it may be already include a prefix in which case we\n  // will simply use a larger slice.\n  if (digest.byteOffset >= prefixByteLength) {\n    const bytes = new Uint8Array(\n      digest.buffer,\n      digest.byteOffset - prefixByteLength,\n      digest.byteOffset + digest.length\n    )\n\n    // if the prefix matches our bytes represent a multihash\n    const [tag, offset] = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode(bytes)\n    if (tag === code && multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode(bytes, offset)[0] === digest.length) {\n      return bytes\n    }\n  }\n\n  const bytes = new Uint8Array(digest.length + prefixByteLength)\n  multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodeTo(code, bytes)\n  multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodeTo(digest.length, bytes, TAG_SIZE)\n  bytes.set(digest, prefixByteLength)\n\n  return bytes\n}\n\n/**\n * @param {object} input\n * @param {Uint8Array} input.digest\n */\nconst height = ({ digest }) => {\n  const [, offset] = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode(digest)\n  return digest[offset]\n}\n\n/**\n * @param {object} input\n * @param {Uint8Array} input.digest\n */\nconst padding = ({ digest }) => {\n  const [padding] = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode(digest)\n  return BigInt(padding)\n}\n\n/**\n * @param {object} input\n * @param {Uint8Array} input.digest\n */\nconst root = ({ digest }) => {\n  const [, offset] = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode(digest)\n  return digest.subarray(\n    offset + HEIGHT_SIZE,\n    offset + HEIGHT_SIZE + _ipld_js__WEBPACK_IMPORTED_MODULE_3__.SHA256.size\n  )\n}\n\n/**\n * @implements {API.PieceDigest}\n */\nclass Digest {\n  /**\n   * @param {Uint8Array} bytes\n   */\n  constructor(bytes) {\n    this.bytes = bytes\n    const [tag] = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode(bytes)\n    if (tag !== code) {\n      throw new RangeError(`Expected multihash with code ${code}`)\n    }\n\n    let offset = TAG_SIZE\n    const [size, length] = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode(bytes, offset)\n    offset += length\n    const digest = bytes.subarray(offset)\n\n    if (digest.length !== size) {\n      throw new RangeError(\n        `Invalid multihash size expected ${offset + size} bytes, got ${\n          bytes.length\n        } bytes`\n      )\n    }\n\n    this.digest = digest\n  }\n  get name() {\n    return name\n  }\n  get code() {\n    return code\n  }\n  get size() {\n    return this.digest.length\n  }\n  get padding() {\n    return padding(this)\n  }\n  get height() {\n    return height(this)\n  }\n  get root() {\n    return root(this)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/fr32.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/fr32.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromPieceSize: () => (/* binding */ fromPieceSize),\n/* harmony export */   pad: () => (/* binding */ pad),\n/* harmony export */   toPieceSize: () => (/* binding */ toPieceSize),\n/* harmony export */   toZeroPaddedSize: () => (/* binding */ toZeroPaddedSize),\n/* harmony export */   unpad: () => (/* binding */ unpad)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js\");\n\n\n\n/**\n * Determine the additional bytes of zeroed padding to append to the\n * end of a resource of `size` length in order to fit within a pow2 piece while\n * leaving enough room for Fr32 padding (2 bits per 254).\n *\n * @param {number} payloadSize - The size of the payload.\n * @returns {number}\n */\nfunction toZeroPaddedSize(payloadSize) {\n  const size = Math.max(payloadSize, _constant_js__WEBPACK_IMPORTED_MODULE_1__.MIN_PAYLOAD_SIZE)\n  const highestBit = Math.floor(Math.log2(size))\n\n  const bound = Math.ceil(_constant_js__WEBPACK_IMPORTED_MODULE_1__.FR_RATIO * 2 ** (highestBit + 1))\n  // the size is either the closest pow2 number, or the next pow2 number if we\n  // don't have space for padding\n  return size <= bound ? bound : Math.ceil(_constant_js__WEBPACK_IMPORTED_MODULE_1__.FR_RATIO * 2 ** (highestBit + 2))\n}\n\n/**\n * Derives fr32 padded size from the source content size (that MUST be\n * multiples of {@link IN_BYTES_PER_QUAD}) in bytes.\n *\n * @param {number} size\n */\nconst toPieceSize = (size) => toZeroPaddedSize(size) / _constant_js__WEBPACK_IMPORTED_MODULE_1__.FR_RATIO\n\n/**\n * Derives fr32 unpadded size from the Fr32 padded size in bytes.\n *\n * @param {number} size\n */\nconst fromPieceSize = (size) => size * _constant_js__WEBPACK_IMPORTED_MODULE_1__.FR_RATIO\n\n/**\n * Takes source bytes that returns fr32 padded bytes.\n *\n * @param {Uint8Array} source\n * @param {Uint8Array} output\n * @returns {API.Fr23Padded}\n */\nconst pad = (\n  source,\n  output = new Uint8Array(toPieceSize(source.length))\n) => {\n  const size = toZeroPaddedSize(source.byteLength)\n  // Calculate number of quads in the given source\n  const quadCount = size / _constant_js__WEBPACK_IMPORTED_MODULE_1__.IN_BYTES_PER_QUAD\n\n  // Cycle over four(4) 31-byte groups, leaving 1 byte in between:\n  // 31 + 1 + 31 + 1 + 31 + 1 + 31 = 127\n  for (let n = 0; n < quadCount; n++) {\n    const readOffset = n * _constant_js__WEBPACK_IMPORTED_MODULE_1__.IN_BYTES_PER_QUAD\n    const writeOffset = n * _constant_js__WEBPACK_IMPORTED_MODULE_1__.OUT_BYTES_PER_QUAD\n\n    // First 31 bytes + 6 bits are taken as-is (trimmed later)\n    output.set(source.subarray(readOffset, readOffset + 32), writeOffset)\n\n    // first 2-bit \"shim\" forced into the otherwise identical output\n    output[writeOffset + 31] &= 0b00111111\n\n    // copy next Fr32 preceded with the last two bits of the previous Fr32\n    for (let i = 32; i < 64; i++) {\n      output[writeOffset + i] =\n        (source[readOffset + i] << 2) | (source[readOffset + i - 1] >> 6)\n    }\n\n    // next 2-bit shim\n    output[writeOffset + 63] &= 0b00111111\n\n    for (let i = 64; i < 96; i++) {\n      output[writeOffset + i] =\n        (source[readOffset + i] << 4) | (source[readOffset + i - 1] >> 4)\n    }\n\n    // next 2-bit shim\n    output[writeOffset + 95] &= 0b00111111\n\n    for (let i = 96; i < 127; i++) {\n      output[writeOffset + i] =\n        (source[readOffset + i] << 6) | (source[readOffset + i - 1] >> 2)\n    }\n\n    // we shim last 2-bits by shifting the last byte by two bits\n    output[writeOffset + 127] = source[readOffset + 126] >> 2\n  }\n\n  return output\n}\n\n/**\n * @param {API.Fr23Padded} source\n * @param {Uint8Array} [out]\n */\nconst unpad = (\n  source,\n  out = new Uint8Array(fromPieceSize(source.length))\n) => {\n  const chunks = source.length / 128\n  for (let chunk = 0; chunk < chunks; chunk++) {\n    const inOffNext = chunk * 128 + 1\n    const outOff = chunk * 127\n\n    let at = source[chunk * 128]\n\n    for (let i = 0; i < 32; i++) {\n      const next = source[i + inOffNext]\n\n      out[outOff + i] = at\n\n      at = next\n    }\n\n    out[outOff + 31] |= at << 6\n\n    for (let i = 32; i < 64; i++) {\n      const next = source[i + inOffNext]\n\n      out[outOff + i] = at >> 2\n      out[outOff + i] |= next << 6\n\n      at = next\n    }\n\n    out[outOff + 63] ^= (at << 6) ^ (at << 4)\n\n    for (let i = 64; i < 96; i++) {\n      const next = source[i + inOffNext]\n\n      out[outOff + i] = at >> 4\n      out[outOff + i] |= next << 4\n\n      at = next\n    }\n\n    out[outOff + 95] ^= (at << 4) ^ (at << 2)\n\n    for (let i = 96; i < 127; i++) {\n      const next = source[i + inOffNext]\n\n      out[outOff + i]\n      out[outOff + i] = at >> 6\n      out[outOff + i] |= next << 2\n\n      at = next\n    }\n  }\n\n  return out\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL2ZyMzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErQjtBQU1UOztBQUV0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AscUNBQXFDLDBEQUFnQjtBQUNyRDs7QUFFQSwwQkFBMEIsa0RBQVE7QUFDbEM7QUFDQTtBQUNBLDJDQUEyQyxrREFBUTtBQUNuRDs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNPLHVEQUF1RCxrREFBUTs7QUFFdEU7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ08sdUNBQXVDLGtEQUFROztBQUV0RDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwyREFBaUI7O0FBRTVDO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQywyQkFBMkIsMkRBQWlCO0FBQzVDLDRCQUE0Qiw0REFBa0I7O0FBRTlDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQixRQUFRO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHFCQUFxQixRQUFRO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsWUFBWTtBQUN2QjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0JBQWdCO0FBQ3RDO0FBQ0E7O0FBRUE7O0FBRUEsb0JBQW9CLFFBQVE7QUFDNUI7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSxxQkFBcUIsUUFBUTtBQUM3Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUEscUJBQXFCLFFBQVE7QUFDN0I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBLHFCQUFxQixTQUFTO0FBQzlCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50L3NyYy9mcjMyLmpzPzY1MTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJy4vYXBpLmpzJ1xuaW1wb3J0IHtcbiAgT1VUX0JZVEVTX1BFUl9RVUFELFxuICBGUl9SQVRJTyxcbiAgSU5fQllURVNfUEVSX1FVQUQsXG4gIE1JTl9QQVlMT0FEX1NJWkUsXG59IGZyb20gJy4vY29uc3RhbnQuanMnXG5cbi8qKlxuICogRGV0ZXJtaW5lIHRoZSBhZGRpdGlvbmFsIGJ5dGVzIG9mIHplcm9lZCBwYWRkaW5nIHRvIGFwcGVuZCB0byB0aGVcbiAqIGVuZCBvZiBhIHJlc291cmNlIG9mIGBzaXplYCBsZW5ndGggaW4gb3JkZXIgdG8gZml0IHdpdGhpbiBhIHBvdzIgcGllY2Ugd2hpbGVcbiAqIGxlYXZpbmcgZW5vdWdoIHJvb20gZm9yIEZyMzIgcGFkZGluZyAoMiBiaXRzIHBlciAyNTQpLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBwYXlsb2FkU2l6ZSAtIFRoZSBzaXplIG9mIHRoZSBwYXlsb2FkLlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvWmVyb1BhZGRlZFNpemUocGF5bG9hZFNpemUpIHtcbiAgY29uc3Qgc2l6ZSA9IE1hdGgubWF4KHBheWxvYWRTaXplLCBNSU5fUEFZTE9BRF9TSVpFKVxuICBjb25zdCBoaWdoZXN0Qml0ID0gTWF0aC5mbG9vcihNYXRoLmxvZzIoc2l6ZSkpXG5cbiAgY29uc3QgYm91bmQgPSBNYXRoLmNlaWwoRlJfUkFUSU8gKiAyICoqIChoaWdoZXN0Qml0ICsgMSkpXG4gIC8vIHRoZSBzaXplIGlzIGVpdGhlciB0aGUgY2xvc2VzdCBwb3cyIG51bWJlciwgb3IgdGhlIG5leHQgcG93MiBudW1iZXIgaWYgd2VcbiAgLy8gZG9uJ3QgaGF2ZSBzcGFjZSBmb3IgcGFkZGluZ1xuICByZXR1cm4gc2l6ZSA8PSBib3VuZCA/IGJvdW5kIDogTWF0aC5jZWlsKEZSX1JBVElPICogMiAqKiAoaGlnaGVzdEJpdCArIDIpKVxufVxuXG4vKipcbiAqIERlcml2ZXMgZnIzMiBwYWRkZWQgc2l6ZSBmcm9tIHRoZSBzb3VyY2UgY29udGVudCBzaXplICh0aGF0IE1VU1QgYmVcbiAqIG11bHRpcGxlcyBvZiB7QGxpbmsgSU5fQllURVNfUEVSX1FVQUR9KSBpbiBieXRlcy5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gc2l6ZVxuICovXG5leHBvcnQgY29uc3QgdG9QaWVjZVNpemUgPSAoc2l6ZSkgPT4gdG9aZXJvUGFkZGVkU2l6ZShzaXplKSAvIEZSX1JBVElPXG5cbi8qKlxuICogRGVyaXZlcyBmcjMyIHVucGFkZGVkIHNpemUgZnJvbSB0aGUgRnIzMiBwYWRkZWQgc2l6ZSBpbiBieXRlcy5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gc2l6ZVxuICovXG5leHBvcnQgY29uc3QgZnJvbVBpZWNlU2l6ZSA9IChzaXplKSA9PiBzaXplICogRlJfUkFUSU9cblxuLyoqXG4gKiBUYWtlcyBzb3VyY2UgYnl0ZXMgdGhhdCByZXR1cm5zIGZyMzIgcGFkZGVkIGJ5dGVzLlxuICpcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gc291cmNlXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IG91dHB1dFxuICogQHJldHVybnMge0FQSS5GcjIzUGFkZGVkfVxuICovXG5leHBvcnQgY29uc3QgcGFkID0gKFxuICBzb3VyY2UsXG4gIG91dHB1dCA9IG5ldyBVaW50OEFycmF5KHRvUGllY2VTaXplKHNvdXJjZS5sZW5ndGgpKVxuKSA9PiB7XG4gIGNvbnN0IHNpemUgPSB0b1plcm9QYWRkZWRTaXplKHNvdXJjZS5ieXRlTGVuZ3RoKVxuICAvLyBDYWxjdWxhdGUgbnVtYmVyIG9mIHF1YWRzIGluIHRoZSBnaXZlbiBzb3VyY2VcbiAgY29uc3QgcXVhZENvdW50ID0gc2l6ZSAvIElOX0JZVEVTX1BFUl9RVUFEXG5cbiAgLy8gQ3ljbGUgb3ZlciBmb3VyKDQpIDMxLWJ5dGUgZ3JvdXBzLCBsZWF2aW5nIDEgYnl0ZSBpbiBiZXR3ZWVuOlxuICAvLyAzMSArIDEgKyAzMSArIDEgKyAzMSArIDEgKyAzMSA9IDEyN1xuICBmb3IgKGxldCBuID0gMDsgbiA8IHF1YWRDb3VudDsgbisrKSB7XG4gICAgY29uc3QgcmVhZE9mZnNldCA9IG4gKiBJTl9CWVRFU19QRVJfUVVBRFxuICAgIGNvbnN0IHdyaXRlT2Zmc2V0ID0gbiAqIE9VVF9CWVRFU19QRVJfUVVBRFxuXG4gICAgLy8gRmlyc3QgMzEgYnl0ZXMgKyA2IGJpdHMgYXJlIHRha2VuIGFzLWlzICh0cmltbWVkIGxhdGVyKVxuICAgIG91dHB1dC5zZXQoc291cmNlLnN1YmFycmF5KHJlYWRPZmZzZXQsIHJlYWRPZmZzZXQgKyAzMiksIHdyaXRlT2Zmc2V0KVxuXG4gICAgLy8gZmlyc3QgMi1iaXQgXCJzaGltXCIgZm9yY2VkIGludG8gdGhlIG90aGVyd2lzZSBpZGVudGljYWwgb3V0cHV0XG4gICAgb3V0cHV0W3dyaXRlT2Zmc2V0ICsgMzFdICY9IDBiMDAxMTExMTFcblxuICAgIC8vIGNvcHkgbmV4dCBGcjMyIHByZWNlZGVkIHdpdGggdGhlIGxhc3QgdHdvIGJpdHMgb2YgdGhlIHByZXZpb3VzIEZyMzJcbiAgICBmb3IgKGxldCBpID0gMzI7IGkgPCA2NDsgaSsrKSB7XG4gICAgICBvdXRwdXRbd3JpdGVPZmZzZXQgKyBpXSA9XG4gICAgICAgIChzb3VyY2VbcmVhZE9mZnNldCArIGldIDw8IDIpIHwgKHNvdXJjZVtyZWFkT2Zmc2V0ICsgaSAtIDFdID4+IDYpXG4gICAgfVxuXG4gICAgLy8gbmV4dCAyLWJpdCBzaGltXG4gICAgb3V0cHV0W3dyaXRlT2Zmc2V0ICsgNjNdICY9IDBiMDAxMTExMTFcblxuICAgIGZvciAobGV0IGkgPSA2NDsgaSA8IDk2OyBpKyspIHtcbiAgICAgIG91dHB1dFt3cml0ZU9mZnNldCArIGldID1cbiAgICAgICAgKHNvdXJjZVtyZWFkT2Zmc2V0ICsgaV0gPDwgNCkgfCAoc291cmNlW3JlYWRPZmZzZXQgKyBpIC0gMV0gPj4gNClcbiAgICB9XG5cbiAgICAvLyBuZXh0IDItYml0IHNoaW1cbiAgICBvdXRwdXRbd3JpdGVPZmZzZXQgKyA5NV0gJj0gMGIwMDExMTExMVxuXG4gICAgZm9yIChsZXQgaSA9IDk2OyBpIDwgMTI3OyBpKyspIHtcbiAgICAgIG91dHB1dFt3cml0ZU9mZnNldCArIGldID1cbiAgICAgICAgKHNvdXJjZVtyZWFkT2Zmc2V0ICsgaV0gPDwgNikgfCAoc291cmNlW3JlYWRPZmZzZXQgKyBpIC0gMV0gPj4gMilcbiAgICB9XG5cbiAgICAvLyB3ZSBzaGltIGxhc3QgMi1iaXRzIGJ5IHNoaWZ0aW5nIHRoZSBsYXN0IGJ5dGUgYnkgdHdvIGJpdHNcbiAgICBvdXRwdXRbd3JpdGVPZmZzZXQgKyAxMjddID0gc291cmNlW3JlYWRPZmZzZXQgKyAxMjZdID4+IDJcbiAgfVxuXG4gIHJldHVybiBvdXRwdXRcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5GcjIzUGFkZGVkfSBzb3VyY2VcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gW291dF1cbiAqL1xuZXhwb3J0IGNvbnN0IHVucGFkID0gKFxuICBzb3VyY2UsXG4gIG91dCA9IG5ldyBVaW50OEFycmF5KGZyb21QaWVjZVNpemUoc291cmNlLmxlbmd0aCkpXG4pID0+IHtcbiAgY29uc3QgY2h1bmtzID0gc291cmNlLmxlbmd0aCAvIDEyOFxuICBmb3IgKGxldCBjaHVuayA9IDA7IGNodW5rIDwgY2h1bmtzOyBjaHVuaysrKSB7XG4gICAgY29uc3QgaW5PZmZOZXh0ID0gY2h1bmsgKiAxMjggKyAxXG4gICAgY29uc3Qgb3V0T2ZmID0gY2h1bmsgKiAxMjdcblxuICAgIGxldCBhdCA9IHNvdXJjZVtjaHVuayAqIDEyOF1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzI7IGkrKykge1xuICAgICAgY29uc3QgbmV4dCA9IHNvdXJjZVtpICsgaW5PZmZOZXh0XVxuXG4gICAgICBvdXRbb3V0T2ZmICsgaV0gPSBhdFxuXG4gICAgICBhdCA9IG5leHRcbiAgICB9XG5cbiAgICBvdXRbb3V0T2ZmICsgMzFdIHw9IGF0IDw8IDZcblxuICAgIGZvciAobGV0IGkgPSAzMjsgaSA8IDY0OyBpKyspIHtcbiAgICAgIGNvbnN0IG5leHQgPSBzb3VyY2VbaSArIGluT2ZmTmV4dF1cblxuICAgICAgb3V0W291dE9mZiArIGldID0gYXQgPj4gMlxuICAgICAgb3V0W291dE9mZiArIGldIHw9IG5leHQgPDwgNlxuXG4gICAgICBhdCA9IG5leHRcbiAgICB9XG5cbiAgICBvdXRbb3V0T2ZmICsgNjNdIF49IChhdCA8PCA2KSBeIChhdCA8PCA0KVxuXG4gICAgZm9yIChsZXQgaSA9IDY0OyBpIDwgOTY7IGkrKykge1xuICAgICAgY29uc3QgbmV4dCA9IHNvdXJjZVtpICsgaW5PZmZOZXh0XVxuXG4gICAgICBvdXRbb3V0T2ZmICsgaV0gPSBhdCA+PiA0XG4gICAgICBvdXRbb3V0T2ZmICsgaV0gfD0gbmV4dCA8PCA0XG5cbiAgICAgIGF0ID0gbmV4dFxuICAgIH1cblxuICAgIG91dFtvdXRPZmYgKyA5NV0gXj0gKGF0IDw8IDQpIF4gKGF0IDw8IDIpXG5cbiAgICBmb3IgKGxldCBpID0gOTY7IGkgPCAxMjc7IGkrKykge1xuICAgICAgY29uc3QgbmV4dCA9IHNvdXJjZVtpICsgaW5PZmZOZXh0XVxuXG4gICAgICBvdXRbb3V0T2ZmICsgaV1cbiAgICAgIG91dFtvdXRPZmYgKyBpXSA9IGF0ID4+IDZcbiAgICAgIG91dFtvdXRPZmYgKyBpXSB8PSBuZXh0IDw8IDJcblxuICAgICAgYXQgPSBuZXh0XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG91dFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/fr32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/ipld.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/ipld.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CBOR: () => (/* reexport module object */ _ipld_cbor_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   SHA256: () => (/* reexport module object */ _ipld_sha256_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   createLink: () => (/* binding */ createLink)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _ipld_sha256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ipld/sha256.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/ipld/sha256.js\");\n/* harmony import */ var _ipld_cbor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ipld/cbor.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/ipld/cbor.js\");\n/* harmony import */ var multiformats_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/link */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/link.js\");\n\n\n\n;\n\n/**\n * @template Layout\n * @template {API.MulticodecCode} Format\n * @template {API.MulticodecCode} Hash\n * @param {API.ByteView<Layout, Format>} bytes\n * @param {object} settings\n * @param {API.SyncMultihashHasher<Hash>} settings.hasher\n * @param {object} settings.codec\n * @param {Format} settings.codec.code\n * @returns {API.Link<Layout, Format, Hash>}\n */\nconst createLink = (bytes, { hasher, codec }) => {\n  const digest = hasher.digest(bytes)\n  return multiformats_link__WEBPACK_IMPORTED_MODULE_3__.create(codec.code, digest)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL2lwbGQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErQjtBQUNXO0FBQ0o7QUFDdEMsQ0FBeUM7O0FBRXpDO0FBQ0E7QUFDQSxjQUFjLG9CQUFvQjtBQUNsQyxjQUFjLG9CQUFvQjtBQUNsQyxXQUFXLDhCQUE4QjtBQUN6QyxXQUFXLFFBQVE7QUFDbkIsV0FBVywrQkFBK0I7QUFDMUMsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTyw2QkFBNkIsZUFBZTtBQUNuRDtBQUNBLFNBQVMscURBQVc7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9zcmMvaXBsZC5qcz82YzRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICcuL2FwaS5qcydcbmV4cG9ydCAqIGFzIFNIQTI1NiBmcm9tICcuL2lwbGQvc2hhMjU2LmpzJ1xuZXhwb3J0ICogYXMgQ0JPUiBmcm9tICcuL2lwbGQvY2Jvci5qcydcbmltcG9ydCAqIGFzIExpbmsgZnJvbSAnbXVsdGlmb3JtYXRzL2xpbmsnXG5cbi8qKlxuICogQHRlbXBsYXRlIExheW91dFxuICogQHRlbXBsYXRlIHtBUEkuTXVsdGljb2RlY0NvZGV9IEZvcm1hdFxuICogQHRlbXBsYXRlIHtBUEkuTXVsdGljb2RlY0NvZGV9IEhhc2hcbiAqIEBwYXJhbSB7QVBJLkJ5dGVWaWV3PExheW91dCwgRm9ybWF0Pn0gYnl0ZXNcbiAqIEBwYXJhbSB7b2JqZWN0fSBzZXR0aW5nc1xuICogQHBhcmFtIHtBUEkuU3luY011bHRpaGFzaEhhc2hlcjxIYXNoPn0gc2V0dGluZ3MuaGFzaGVyXG4gKiBAcGFyYW0ge29iamVjdH0gc2V0dGluZ3MuY29kZWNcbiAqIEBwYXJhbSB7Rm9ybWF0fSBzZXR0aW5ncy5jb2RlYy5jb2RlXG4gKiBAcmV0dXJucyB7QVBJLkxpbms8TGF5b3V0LCBGb3JtYXQsIEhhc2g+fVxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlTGluayA9IChieXRlcywgeyBoYXNoZXIsIGNvZGVjIH0pID0+IHtcbiAgY29uc3QgZGlnZXN0ID0gaGFzaGVyLmRpZ2VzdChieXRlcylcbiAgcmV0dXJuIExpbmsuY3JlYXRlKGNvZGVjLmNvZGUsIGRpZ2VzdClcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/ipld.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/ipld/cbor.js":
/*!******************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/ipld/cbor.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/@ipld/dag-cbor/src/index.js\");\n\n\n\n/**\n * @type {API.MulticodecCode<typeof CBOR.code, typeof CBOR.name>}\n */\nconst code = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.code\n\nconst name = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.name\n\nconst encode =\n  /** @type {<T>(model:T) => API.ByteView<T, typeof code>} */\n  (_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.encode)\n\nconst decode =\n  /** @type {<T>(bytes:API.ByteView<T, typeof code>) => T} */\n  (_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.decode)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL2lwbGQvY2Jvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBZ0M7QUFDTTs7QUFFdEM7QUFDQSxVQUFVO0FBQ1Y7QUFDTyxhQUFhLGdEQUFTOztBQUV0QixhQUFhLGdEQUFTOztBQUV0QjtBQUNQLGFBQWEsOENBQThDO0FBQzNELEdBQUcsa0RBQVc7O0FBRVA7QUFDUCxhQUFhLDhDQUE4QztBQUMzRCxHQUFHLGtEQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL2lwbGQvY2Jvci5qcz9mM2JhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICcuLi9hcGkuanMnXG5pbXBvcnQgKiBhcyBDQk9SIGZyb20gJ0BpcGxkL2RhZy1jYm9yJ1xuXG4vKipcbiAqIEB0eXBlIHtBUEkuTXVsdGljb2RlY0NvZGU8dHlwZW9mIENCT1IuY29kZSwgdHlwZW9mIENCT1IubmFtZT59XG4gKi9cbmV4cG9ydCBjb25zdCBjb2RlID0gQ0JPUi5jb2RlXG5cbmV4cG9ydCBjb25zdCBuYW1lID0gQ0JPUi5uYW1lXG5cbmV4cG9ydCBjb25zdCBlbmNvZGUgPVxuICAvKiogQHR5cGUgezxUPihtb2RlbDpUKSA9PiBBUEkuQnl0ZVZpZXc8VCwgdHlwZW9mIGNvZGU+fSAqL1xuICAoQ0JPUi5lbmNvZGUpXG5cbmV4cG9ydCBjb25zdCBkZWNvZGUgPVxuICAvKiogQHR5cGUgezxUPihieXRlczpBUEkuQnl0ZVZpZXc8VCwgdHlwZW9mIGNvZGU+KSA9PiBUfSAqL1xuICAoQ0JPUi5kZWNvZGUpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/ipld/cbor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/ipld/sha256.js":
/*!********************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/ipld/sha256.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   digest: () => (/* reexport safe */ sync_multihash_sha2_sha256__WEBPACK_IMPORTED_MODULE_1__.digest),\n/* harmony export */   name: () => (/* reexport safe */ sync_multihash_sha2_sha256__WEBPACK_IMPORTED_MODULE_1__.name),\n/* harmony export */   size: () => (/* reexport safe */ sync_multihash_sha2_sha256__WEBPACK_IMPORTED_MODULE_1__.size)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var sync_multihash_sha2_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sync-multihash-sha2/sha256 */ \"(ssr)/./node_modules/sync-multihash-sha2/src/sha256/node.js\");\n\n\n\n\n/**\n * @type {API.MulticodecCode<typeof SHA256.code, typeof SHA256.name>}\n */\nconst code = sync_multihash_sha2_sha256__WEBPACK_IMPORTED_MODULE_1__.code\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL2lwbGQvc2hhMjU2LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFnQztBQUNvQjtBQUNWOztBQUUxQztBQUNBLFVBQVU7QUFDVjtBQUNPLGFBQWEsNERBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9zcmMvaXBsZC9zaGEyNTYuanM/MTdiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBUEkgZnJvbSAnLi4vYXBpLmpzJ1xuaW1wb3J0ICogYXMgU0hBMjU2IGZyb20gJ3N5bmMtbXVsdGloYXNoLXNoYTIvc2hhMjU2J1xuZXhwb3J0ICogZnJvbSAnc3luYy1tdWx0aWhhc2gtc2hhMi9zaGEyNTYnXG5cbi8qKlxuICogQHR5cGUge0FQSS5NdWx0aWNvZGVjQ29kZTx0eXBlb2YgU0hBMjU2LmNvZGUsIHR5cGVvZiBTSEEyNTYubmFtZT59XG4gKi9cbmV4cG9ydCBjb25zdCBjb2RlID0gU0hBMjU2LmNvZGVcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/ipld/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/multihash.js":
/*!******************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/multihash.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* reexport module object */ _digest_js__WEBPACK_IMPORTED_MODULE_8__),\n/* harmony export */   MAX_HEIGHT: () => (/* binding */ MAX_HEIGHT),\n/* harmony export */   MAX_PAYLOAD_SIZE: () => (/* binding */ MAX_PAYLOAD_SIZE),\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   digest: () => (/* binding */ digest),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js\");\n/* harmony import */ var _zero_comm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./zero-comm.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/zero-comm.js\");\n/* harmony import */ var _proof_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./proof.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/proof.js\");\n/* harmony import */ var _piece_tree_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./piece/tree.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/tree.js\");\n/* harmony import */ var _fr32_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fr32.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/fr32.js\");\n/* harmony import */ var _piece_size_expanded_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./piece/size/expanded.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/expanded.js\");\n/* harmony import */ var _piece_size_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./piece/size.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/digest.js\");\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @see https://github.com/multiformats/multicodec/pull/331/files\n */\nconst name = /** @type {const} */ (\n  'fr32-sha2-256-trunc254-padded-binary-tree'\n)\n\n/**\n * @type {API.MulticodecCode<0x1011, typeof name>}\n * @see https://github.com/multiformats/multicodec/pull/331/files\n */\nconst code = 0x1011\n\n/**\n * Since first byte in the digest is the tree height, the maximum height is 255.\n *\n * @type {255}\n */\nconst MAX_HEIGHT = 255\n\n/**\n * Max payload is determined by the maximum height of the tree, which is limited\n * by the int we could store in one byte. We calculate the max piece size\n * and derive max payload size that can would produce it after FR32 padding.\n */\nconst MAX_PAYLOAD_SIZE =\n  ((0,_piece_size_expanded_js__WEBPACK_IMPORTED_MODULE_6__.fromHeight)(MAX_HEIGHT) * BigInt(_constant_js__WEBPACK_IMPORTED_MODULE_1__.IN_BITS_FR)) / BigInt(_constant_js__WEBPACK_IMPORTED_MODULE_1__.OUT_BITS_FR)\n\n/**\n * Computes the digest of the given payload.\n *\n * @param {Uint8Array} payload\n * @returns {API.PieceDigest}\n */\nconst digest = (payload) => {\n  const hasher = new Hasher()\n  hasher.write(payload)\n  return hasher.digest()\n}\n\n/**\n * Creates a streaming hasher that can be used to consumer larger streams\n * of data than it would be practical to load into memory all at once.\n *\n * @returns {API.StreamingHasher<typeof code, number, API.PieceDigest>}\n */\nconst create = () => new Hasher()\n\n/**\n * @typedef {[API.MerkleTreeNode[], ...API.MerkleTreeNode[][]]} Layers\n *\n * @implements {API.StreamingHasher<typeof code, number, API.PieceDigest>}\n */\nclass Hasher {\n  constructor() {\n    /**\n     * The number of bytes consumed by the hasher.\n     *\n     * @private\n     */\n    this.bytesWritten = 0n\n\n    /**\n     * This buffer is used to accumulate bytes until we have enough to fill a\n     * quad.\n     *\n     * ⚠️ Note that you should never read bytes past {@link offset} as those\n     * are considered dirty and may contain garbage.\n     *\n     * @protected\n     */\n    this.buffer = new Uint8Array(_constant_js__WEBPACK_IMPORTED_MODULE_1__.IN_BYTES_PER_QUAD)\n\n    /**\n     * Offset is the number of bytes in we have written into the buffer. If\n     * offset is 0 it means that the buffer is effectively empty. When `offset`\n     * is equal to `this.buffer.length` we have a quad that can be processed.\n     *\n     * @protected\n     */\n    this.offset = 0\n\n    /**\n     * The layers of the tree. Each layer will contain either 0 or 1 nodes\n     * between writes. When we write into a hasher, if we have enough nodes\n     * leaves will be created and pushed into the `layers[0]` array, after\n     * which we flush and combine every two leafs into a node which is moved\n     * to the next layer. This process is repeated until we reach the top\n     * layer, leaving each layer either empty or with a single node.\n     *\n     * @type {Layers}\n     */\n    this.layers = [[]]\n  }\n\n  /**\n   * Return the total number of bytes written into the hasher. Calling\n   * {@link reset} will reset the hasher and the count will be reset to 0.\n   *\n   * @returns {bigint}\n   */\n  count() {\n    return this.bytesWritten\n  }\n\n  /**\n   * Computes the digest of all the data that has been written into this hasher.\n   * This method does not have side-effects, meaning that you can continue\n   * writing and call this method again to compute digest of all the data\n   * written from the very beginning.\n   */\n  digest() {\n    const bytes = new Uint8Array(_digest_js__WEBPACK_IMPORTED_MODULE_8__.MAX_SIZE)\n    const count = this.digestInto(bytes, 0, true)\n    return _digest_js__WEBPACK_IMPORTED_MODULE_8__.fromBytes(bytes.subarray(0, count))\n  }\n\n  /**\n   * Computes the digest and writes into the given buffer. You can provide\n   * optional `byteOffset` to write digest at that offset in the buffer. By\n   * default the multihash prefix will be written into the buffer, but you can\n   * opt-out by passing `false` as the `asMultihash` argument.\n   *\n   * @param {Uint8Array} output\n   * @param {number} [byteOffset]\n   * @param {boolean} asMultihash\n   */\n  digestInto(output, byteOffset = 0, asMultihash = true) {\n    const { buffer, layers, offset, bytesWritten } = this\n\n    // We do not want to mutate the layers, so we create a shallow copy of it\n    // which we will use to compute the root.\n    let [leaves, ...nodes] = layers\n\n    // If we have some bytes in the buffer we fill rest with zeros and compute\n    // leaves from it. Note that it is safe to mutate the buffer here as bytes\n    // past `offset` are considered dirty and should not be read.\n    if (offset > 0 || bytesWritten === 0n) {\n      leaves = [...leaves, ...(0,_piece_tree_js__WEBPACK_IMPORTED_MODULE_4__.split)((0,_fr32_js__WEBPACK_IMPORTED_MODULE_5__.pad)(buffer.fill(0, offset)))]\n    }\n\n    const tree = build([leaves, ...nodes])\n    const height = tree.length - 1\n    const [root] = tree[height]\n    const padding = Number(_piece_size_js__WEBPACK_IMPORTED_MODULE_7__.Unpadded.toPadding(this.bytesWritten))\n\n    const paddingLength = multiformats__WEBPACK_IMPORTED_MODULE_9__.varint.encodingLength(\n      /** @type {number & bigint} */ (padding)\n    )\n\n    let endOffset = byteOffset\n    // Write the multihash prefix if requested\n    if (asMultihash) {\n      multiformats__WEBPACK_IMPORTED_MODULE_9__.varint.encodeTo(code, output, endOffset)\n      endOffset += _digest_js__WEBPACK_IMPORTED_MODULE_8__.TAG_SIZE\n\n      const size = paddingLength + _digest_js__WEBPACK_IMPORTED_MODULE_8__.HEIGHT_SIZE + _digest_js__WEBPACK_IMPORTED_MODULE_8__.ROOT_SIZE\n      const sizeLength = multiformats__WEBPACK_IMPORTED_MODULE_9__.varint.encodingLength(size)\n      multiformats__WEBPACK_IMPORTED_MODULE_9__.varint.encodeTo(size, output, endOffset)\n      endOffset += sizeLength\n    }\n\n    multiformats__WEBPACK_IMPORTED_MODULE_9__.varint.encodeTo(padding, output, endOffset)\n    endOffset += paddingLength\n\n    // Write the tree height as the first byte of the digest\n    output[endOffset] = height\n    endOffset += 1\n\n    // Write the root as the remaining 32 bytes of the digest\n    output.set(root, endOffset)\n    endOffset += root.length\n\n    // Return number of bytes written\n    return endOffset - byteOffset\n  }\n  /**\n   * @param {Uint8Array} bytes\n   */\n  write(bytes) {\n    const { buffer, offset, layers } = this\n    const leaves = layers[0]\n    const { length } = bytes\n    // If we got no bytes there is nothing to do here\n    if (length === 0) {\n      return this\n      /* c8 ignore next 5 */\n    } else if (this.bytesWritten + BigInt(length) > MAX_PAYLOAD_SIZE) {\n      throw new RangeError(\n        `Writing ${length} bytes exceeds max payload size of ${MAX_PAYLOAD_SIZE}`\n      )\n    }\n    // If we do not have enough bytes to form a quad, just add append new bytes\n    // to the buffer and return.\n    else if (offset + length < buffer.length) {\n      buffer.set(bytes, offset)\n      this.offset += length\n      this.bytesWritten += BigInt(length)\n      return this\n    }\n    // Otherwise we first fill the buffer to form a quad and create some leaves.\n    // Then we slice remaining bytes into quads sized chunks and create leaves\n    // from them. If we have some bytes left we copy them into the buffer and\n    // flush to combining node pairs and propagate them up the tree.\n    else {\n      // Number of bytes required to fill the quad buffer\n      const bytesRequired = buffer.length - offset\n      // copy required bytes into the buffer and turn them into leaves\n      // which we push into the leaf layer.\n      buffer.set(bytes.subarray(0, bytesRequired), offset)\n      leaves.push(...(0,_piece_tree_js__WEBPACK_IMPORTED_MODULE_4__.split)((0,_fr32_js__WEBPACK_IMPORTED_MODULE_5__.pad)(buffer)))\n\n      // Now we slice remaining bytes into quads, create leaves from them\n      // and push them into the leaf layer.\n      let readOffset = bytesRequired\n      while (readOffset + _constant_js__WEBPACK_IMPORTED_MODULE_1__.IN_BYTES_PER_QUAD < length) {\n        const quad = bytes.subarray(readOffset, readOffset + _constant_js__WEBPACK_IMPORTED_MODULE_1__.IN_BYTES_PER_QUAD)\n        leaves.push(...(0,_piece_tree_js__WEBPACK_IMPORTED_MODULE_4__.split)((0,_fr32_js__WEBPACK_IMPORTED_MODULE_5__.pad)(quad)))\n        readOffset += _constant_js__WEBPACK_IMPORTED_MODULE_1__.IN_BYTES_PER_QUAD\n      }\n\n      // Whatever byte were left are copied into the buffer and we update\n      // the offset to reflect that.\n      this.buffer.set(bytes.subarray(readOffset), 0)\n      this.offset = length - readOffset\n\n      // We also update the total number of bytes written.\n      this.bytesWritten += BigInt(length)\n\n      // Now prune the layers to propagate all the new leaves up the tree.\n      prune(this.layers)\n\n      return this\n    }\n  }\n\n  /**\n   * Resets this hasher to its initial state so it could be recycled as new\n   * instance.\n   */\n  reset() {\n    this.offset = 0\n    this.bytesWritten = 0n\n    this.layers.length = 1\n    this.layers[0].length = 0\n    return this\n  }\n\n  /* c8 ignore next 3 */\n  dispose() {\n    this.reset()\n  }\n  get code() {\n    return code\n  }\n  get name() {\n    return name\n  }\n}\n\n/**\n * Prunes layers by combining node pairs into nodes in the next layer and\n * removing them from the layer that they were in. After pruning each layer\n * will end up with at most one node. New layers may be created in the process\n * when nodes from the top layer are combined.\n *\n * @param {Layers} layers\n */\nconst prune = (layers) => flush(layers, false)\n\n/**\n * Flushes all the nodes in layers by combining node pairs into nodes in the\n * next layer. Layers with only one node are combined with zero padded nodes\n * (corresponding to the level of the layer). Unlike {@link prune} combined\n * nodes are not removed and layers are copied instead of been mutated.\n *\n * @param {Layers} layers\n */\nconst build = (layers) => flush([...layers], true)\n\n/**\n * @param {Layers} layers\n * @param {boolean} build\n * @returns {Layers}\n */\nconst flush = (layers, build) => {\n  // Note it is important that we do not mutate any of the layers otherwise\n  // writing more data into the hasher and computing the digest will produce\n  // wrong results.\n  let level = 0\n  // We will walk up the tree until we reach the top layer. However, we may end\n  // up with creating new layers in the process, so we will keep track of the\n  while (level < layers.length) {\n    let next = layers[level + 1]\n    const layer = layers[level]\n\n    // If we have the odd number of nodes and we have not reached the top\n    // layer, we push a zero padding node corresponding to the current level.\n    if (build && layer.length % 2 > 0 && next) {\n      layer.push(_zero_comm_js__WEBPACK_IMPORTED_MODULE_2__.fromLevel(level))\n    }\n\n    level += 1\n\n    // If we have 0 nodes in the current layer we just move to the next one.\n\n    // If we have a next layer and we are building  will combine nodes from the current layer\n    next = next ? (build ? [...next] : next) : []\n    let index = 0\n    // Note that we have checked that we have an even number of nodes so\n    // we will never end up with an extra node when consuming two at a time.\n    while (index + 1 < layer.length) {\n      const node = (0,_proof_js__WEBPACK_IMPORTED_MODULE_3__.computeNode)(layer[index], layer[index + 1])\n\n      // we proactively delete nodes in order to free up a memory used.\n      delete layer[index]\n      delete layer[index + 1]\n\n      next.push(node)\n      index += 2\n    }\n\n    if (next.length) {\n      layers[level] = next\n    }\n\n    // we remove nodes that we have combined from the current layer to reduce\n    // memory overhead and move to the next layer.\n    layer.splice(0, index)\n  }\n\n  return layers\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/multihash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/node.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/node.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Size: () => (/* reexport safe */ _constant_js__WEBPACK_IMPORTED_MODULE_1__.NODE_SIZE),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   of: () => (/* binding */ of)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js\");\n\n\n\n\n\n/**\n * @param {number[]} bytes\n */\nconst of = (...bytes) => from(bytes)\n\n/**\n * @param {Iterable<number>} bytes\n * @returns {API.MerkleTreeNode}\n */\nconst from = (bytes) => {\n  /* c8 ignore next 7 */\n  if (bytes instanceof Uint8Array) {\n    if (bytes.length > _constant_js__WEBPACK_IMPORTED_MODULE_1__.NODE_SIZE) {\n      return bytes.subarray(0, _constant_js__WEBPACK_IMPORTED_MODULE_1__.NODE_SIZE)\n    } else if (bytes.length == _constant_js__WEBPACK_IMPORTED_MODULE_1__.NODE_SIZE) {\n      return bytes\n    }\n  }\n\n  const node = new Uint8Array(_constant_js__WEBPACK_IMPORTED_MODULE_1__.NODE_SIZE)\n  node.set([...bytes])\n  return node\n}\n\nconst empty = () => EMPTY\n\nconst EMPTY = from(new Uint8Array(_constant_js__WEBPACK_IMPORTED_MODULE_1__.NODE_SIZE).fill(0))\nObject.freeze(EMPTY.buffer)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL25vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStCO0FBQ2tCOztBQUVsQzs7QUFFZjtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNPOztBQUVQO0FBQ0EsV0FBVyxrQkFBa0I7QUFDN0IsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0EsdUJBQXVCLG1EQUFJO0FBQzNCLCtCQUErQixtREFBSTtBQUNuQyxNQUFNLHlCQUF5QixtREFBSTtBQUNuQztBQUNBO0FBQ0E7O0FBRUEsOEJBQThCLG1EQUFJO0FBQ2xDO0FBQ0E7QUFDQTs7QUFFTzs7QUFFUCxrQ0FBa0MsbURBQUk7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9zcmMvbm9kZS5qcz9kNDgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICcuL2FwaS5qcydcbmltcG9ydCB7IE5PREVfU0laRSBhcyBTaXplIH0gZnJvbSAnLi9jb25zdGFudC5qcydcblxuZXhwb3J0IHsgU2l6ZSB9XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJbXX0gYnl0ZXNcbiAqL1xuZXhwb3J0IGNvbnN0IG9mID0gKC4uLmJ5dGVzKSA9PiBmcm9tKGJ5dGVzKVxuXG4vKipcbiAqIEBwYXJhbSB7SXRlcmFibGU8bnVtYmVyPn0gYnl0ZXNcbiAqIEByZXR1cm5zIHtBUEkuTWVya2xlVHJlZU5vZGV9XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tID0gKGJ5dGVzKSA9PiB7XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDcgKi9cbiAgaWYgKGJ5dGVzIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgIGlmIChieXRlcy5sZW5ndGggPiBTaXplKSB7XG4gICAgICByZXR1cm4gYnl0ZXMuc3ViYXJyYXkoMCwgU2l6ZSlcbiAgICB9IGVsc2UgaWYgKGJ5dGVzLmxlbmd0aCA9PSBTaXplKSB7XG4gICAgICByZXR1cm4gYnl0ZXNcbiAgICB9XG4gIH1cblxuICBjb25zdCBub2RlID0gbmV3IFVpbnQ4QXJyYXkoU2l6ZSlcbiAgbm9kZS5zZXQoWy4uLmJ5dGVzXSlcbiAgcmV0dXJuIG5vZGVcbn1cblxuZXhwb3J0IGNvbnN0IGVtcHR5ID0gKCkgPT4gRU1QVFlcblxuY29uc3QgRU1QVFkgPSBmcm9tKG5ldyBVaW50OEFycmF5KFNpemUpLmZpbGwoMCkpXG5PYmplY3QuZnJlZXplKEVNUFRZLmJ1ZmZlcilcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/piece/size.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Expanded: () => (/* reexport module object */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   Padded: () => (/* reexport module object */ _size_padded_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   Unpadded: () => (/* reexport module object */ _size_unpadded_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   from: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.from),\n/* harmony export */   fromHeight: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.fromHeight),\n/* harmony export */   fromPadded: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.fromPadded),\n/* harmony export */   fromUnpadded: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.fromUnpadded),\n/* harmony export */   fromWidth: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.fromWidth),\n/* harmony export */   toHeight: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.toHeight),\n/* harmony export */   toPadded: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.toPadded),\n/* harmony export */   toWidth: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.toWidth),\n/* harmony export */   tryFrom: () => (/* reexport safe */ _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__.tryFrom)\n/* harmony export */ });\n/* harmony import */ var _size_unpadded_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./size/unpadded.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/unpadded.js\");\n/* harmony import */ var _size_padded_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./size/padded.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/padded.js\");\n/* harmony import */ var _size_expanded_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./size/expanded.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/expanded.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3BpZWNlL3NpemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0o7QUFDSTtBQUNaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3BpZWNlL3NpemUuanM/N2MwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyBVbnBhZGRlZCBmcm9tICcuL3NpemUvdW5wYWRkZWQuanMnXG5leHBvcnQgKiBhcyBQYWRkZWQgZnJvbSAnLi9zaXplL3BhZGRlZC5qcydcbmV4cG9ydCAqIGFzIEV4cGFuZGVkIGZyb20gJy4vc2l6ZS9leHBhbmRlZC5qcydcbmV4cG9ydCAqIGZyb20gJy4vc2l6ZS9leHBhbmRlZC5qcydcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/expanded.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/piece/size/expanded.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   fromHeight: () => (/* binding */ fromHeight),\n/* harmony export */   fromPadded: () => (/* reexport safe */ _padded_js__WEBPACK_IMPORTED_MODULE_3__.toExpanded),\n/* harmony export */   fromUnpadded: () => (/* reexport safe */ _unpadded_js__WEBPACK_IMPORTED_MODULE_4__.toExpanded),\n/* harmony export */   fromWidth: () => (/* binding */ fromWidth),\n/* harmony export */   toHeight: () => (/* binding */ toHeight),\n/* harmony export */   toPadded: () => (/* reexport safe */ _padded_js__WEBPACK_IMPORTED_MODULE_3__.fromExpanded),\n/* harmony export */   toWidth: () => (/* binding */ toWidth),\n/* harmony export */   tryFrom: () => (/* binding */ tryFrom)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constant.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js\");\n/* harmony import */ var _uint64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../uint64.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/uint64.js\");\n/* harmony import */ var _padded_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./padded.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/padded.js\");\n/* harmony import */ var _unpadded_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./unpadded.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/unpadded.js\");\n\n\n\n\n\n\n\n/**\n * Validates that given `size` is a valid {@link API.PieceSize} that is a\n * power of 2. Returns {@link API.Result} with `PaddedPieceSize` ok case and an\n * Error in the error case.\n *\n * @see https://github.com/filecoin-project/go-state-types/blob/ff2ed169ff566458f2acd8b135d62e8ca27e7d0c/abi/piece.go#L18-L29\n *\n * @param {number|API.uint64} input\n * @returns {API.Result<API.PieceSize, RangeError>}\n */\nconst tryFrom = (input) => {\n  const size = BigInt(input)\n  if (size < _constant_js__WEBPACK_IMPORTED_MODULE_1__.EXPANDED_BYTES_PER_QUAD) {\n    return {\n      error: RangeError(\n        `Minimum piece size is ${_constant_js__WEBPACK_IMPORTED_MODULE_1__.EXPANDED_BYTES_PER_QUAD} bytes`\n      ),\n    }\n  }\n\n  if ((0,_uint64_js__WEBPACK_IMPORTED_MODULE_2__.onesCount64)(size) !== 1) {\n    return { error: RangeError('Piece size must be a power of 2') }\n  }\n\n  return { ok: size }\n}\n\n/**\n * Validates that given `size` is a valid {@link API.PieceSize} and\n * returns {@link API.PieceSize} capturing the validation at the type\n * level. If given `size` is not a valid `PaddedPieceSize` throws an error.\n *\n * This function is a variation on {@link validate} that throws exceptions\n * instead of returning a {@link API.Result}.\n *\n * @param {number|API.uint64} size\n */\nconst from = (size) => {\n  const result = tryFrom(size)\n  if (result.error) {\n    throw result.error\n  } else {\n    return result.ok\n  }\n}\n\n/**\n * Calculates the {@link API.PieceSize} for the given height of the piece tree.\n *\n * @param {number} height\n * @returns {API.PieceSize}\n */\nconst fromHeight = (height) => fromWidth(2n ** BigInt(height))\n\n/**\n * Calculates the height of the piece tree from unpadded size.\n *\n * @param {API.PieceSize} size\n */\nconst toHeight = (size) => (0,_uint64_js__WEBPACK_IMPORTED_MODULE_2__.log2Ceil)(toWidth(size))\n\n/**\n * Takes piece tree width (leaf count) and returns corresponding\n * {@link API.PieceSize}.\n *\n * @param {API.uint64} width\n * @returns {API.PieceSize}\n */\nconst fromWidth = (width) => width * _constant_js__WEBPACK_IMPORTED_MODULE_1__.EXPANDED_BYTES_PER_NODE\n\n/**\n * Takes `{@link API.PaddedPieceSize}` and returns corresponding\n * piece tree width (leaf count).\n *\n * @param {API.PieceSize} size\n */\nconst toWidth = (size) => size / _constant_js__WEBPACK_IMPORTED_MODULE_1__.EXPANDED_BYTES_PER_NODE\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3BpZWNlL3NpemUvZXhwYW5kZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBbUM7QUFJVDtBQUM2Qjs7QUFFeUI7QUFDdEI7O0FBRTFEO0FBQ0EsMkNBQTJDLHFCQUFxQjtBQUNoRSx3QkFBd0Isa0JBQWtCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLGFBQWEsaUVBQXVCO0FBQ3BDO0FBQ0E7QUFDQSxpQ0FBaUMsaUVBQXVCLEVBQUU7QUFDMUQ7QUFDQTtBQUNBOztBQUVBLE1BQU0sdURBQVc7QUFDakIsYUFBYTtBQUNiOztBQUVBLFdBQVc7QUFDWDs7QUFFQTtBQUNBLDJDQUEyQyxxQkFBcUI7QUFDaEUsWUFBWSxxQkFBcUI7QUFDakM7QUFDQTtBQUNBLG9DQUFvQyxnQkFBZ0I7QUFDcEQsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBLFdBQVcsbUJBQW1CO0FBQzlCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLHFCQUFxQjtBQUN4QztBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUI7QUFDTywyQkFBMkIsb0RBQVE7O0FBRTFDO0FBQ0E7QUFDQSxJQUFJLG9CQUFvQjtBQUN4QjtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTyxxQ0FBcUMsaUVBQXVCOztBQUVuRTtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUI7QUFDTyxpQ0FBaUMsaUVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3BpZWNlL3NpemUvZXhwYW5kZWQuanM/OGRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBUEkgZnJvbSAnLi4vLi4vYXBpLmpzJ1xuaW1wb3J0IHtcbiAgRVhQQU5ERURfQllURVNfUEVSX1FVQUQsXG4gIEVYUEFOREVEX0JZVEVTX1BFUl9OT0RFLFxufSBmcm9tICcuLi8uLi9jb25zdGFudC5qcydcbmltcG9ydCB7IGxvZzJDZWlsLCBvbmVzQ291bnQ2NCB9IGZyb20gJy4uLy4uL3VpbnQ2NC5qcydcblxuZXhwb3J0IHsgdG9FeHBhbmRlZCBhcyBmcm9tUGFkZGVkLCBmcm9tRXhwYW5kZWQgYXMgdG9QYWRkZWQgfSBmcm9tICcuL3BhZGRlZC5qcydcbmV4cG9ydCB7IHRvRXhwYW5kZWQgYXMgZnJvbVVucGFkZGVkIH0gZnJvbSAnLi91bnBhZGRlZC5qcydcblxuLyoqXG4gKiBWYWxpZGF0ZXMgdGhhdCBnaXZlbiBgc2l6ZWAgaXMgYSB2YWxpZCB7QGxpbmsgQVBJLlBpZWNlU2l6ZX0gdGhhdCBpcyBhXG4gKiBwb3dlciBvZiAyLiBSZXR1cm5zIHtAbGluayBBUEkuUmVzdWx0fSB3aXRoIGBQYWRkZWRQaWVjZVNpemVgIG9rIGNhc2UgYW5kIGFuXG4gKiBFcnJvciBpbiB0aGUgZXJyb3IgY2FzZS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9maWxlY29pbi1wcm9qZWN0L2dvLXN0YXRlLXR5cGVzL2Jsb2IvZmYyZWQxNjlmZjU2NjQ1OGYyYWNkOGIxMzVkNjJlOGNhMjdlN2QwYy9hYmkvcGllY2UuZ28jTDE4LUwyOVxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfEFQSS51aW50NjR9IGlucHV0XG4gKiBAcmV0dXJucyB7QVBJLlJlc3VsdDxBUEkuUGllY2VTaXplLCBSYW5nZUVycm9yPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHRyeUZyb20gPSAoaW5wdXQpID0+IHtcbiAgY29uc3Qgc2l6ZSA9IEJpZ0ludChpbnB1dClcbiAgaWYgKHNpemUgPCBFWFBBTkRFRF9CWVRFU19QRVJfUVVBRCkge1xuICAgIHJldHVybiB7XG4gICAgICBlcnJvcjogUmFuZ2VFcnJvcihcbiAgICAgICAgYE1pbmltdW0gcGllY2Ugc2l6ZSBpcyAke0VYUEFOREVEX0JZVEVTX1BFUl9RVUFEfSBieXRlc2BcbiAgICAgICksXG4gICAgfVxuICB9XG5cbiAgaWYgKG9uZXNDb3VudDY0KHNpemUpICE9PSAxKSB7XG4gICAgcmV0dXJuIHsgZXJyb3I6IFJhbmdlRXJyb3IoJ1BpZWNlIHNpemUgbXVzdCBiZSBhIHBvd2VyIG9mIDInKSB9XG4gIH1cblxuICByZXR1cm4geyBvazogc2l6ZSB9XG59XG5cbi8qKlxuICogVmFsaWRhdGVzIHRoYXQgZ2l2ZW4gYHNpemVgIGlzIGEgdmFsaWQge0BsaW5rIEFQSS5QaWVjZVNpemV9IGFuZFxuICogcmV0dXJucyB7QGxpbmsgQVBJLlBpZWNlU2l6ZX0gY2FwdHVyaW5nIHRoZSB2YWxpZGF0aW9uIGF0IHRoZSB0eXBlXG4gKiBsZXZlbC4gSWYgZ2l2ZW4gYHNpemVgIGlzIG5vdCBhIHZhbGlkIGBQYWRkZWRQaWVjZVNpemVgIHRocm93cyBhbiBlcnJvci5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIGEgdmFyaWF0aW9uIG9uIHtAbGluayB2YWxpZGF0ZX0gdGhhdCB0aHJvd3MgZXhjZXB0aW9uc1xuICogaW5zdGVhZCBvZiByZXR1cm5pbmcgYSB7QGxpbmsgQVBJLlJlc3VsdH0uXG4gKlxuICogQHBhcmFtIHtudW1iZXJ8QVBJLnVpbnQ2NH0gc2l6ZVxuICovXG5leHBvcnQgY29uc3QgZnJvbSA9IChzaXplKSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IHRyeUZyb20oc2l6ZSlcbiAgaWYgKHJlc3VsdC5lcnJvcikge1xuICAgIHRocm93IHJlc3VsdC5lcnJvclxuICB9IGVsc2Uge1xuICAgIHJldHVybiByZXN1bHQub2tcbiAgfVxufVxuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIHtAbGluayBBUEkuUGllY2VTaXplfSBmb3IgdGhlIGdpdmVuIGhlaWdodCBvZiB0aGUgcGllY2UgdHJlZS5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0XG4gKiBAcmV0dXJucyB7QVBJLlBpZWNlU2l6ZX1cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21IZWlnaHQgPSAoaGVpZ2h0KSA9PiBmcm9tV2lkdGgoMm4gKiogQmlnSW50KGhlaWdodCkpXG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgaGVpZ2h0IG9mIHRoZSBwaWVjZSB0cmVlIGZyb20gdW5wYWRkZWQgc2l6ZS5cbiAqXG4gKiBAcGFyYW0ge0FQSS5QaWVjZVNpemV9IHNpemVcbiAqL1xuZXhwb3J0IGNvbnN0IHRvSGVpZ2h0ID0gKHNpemUpID0+IGxvZzJDZWlsKHRvV2lkdGgoc2l6ZSkpXG5cbi8qKlxuICogVGFrZXMgcGllY2UgdHJlZSB3aWR0aCAobGVhZiBjb3VudCkgYW5kIHJldHVybnMgY29ycmVzcG9uZGluZ1xuICoge0BsaW5rIEFQSS5QaWVjZVNpemV9LlxuICpcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gd2lkdGhcbiAqIEByZXR1cm5zIHtBUEkuUGllY2VTaXplfVxuICovXG5leHBvcnQgY29uc3QgZnJvbVdpZHRoID0gKHdpZHRoKSA9PiB3aWR0aCAqIEVYUEFOREVEX0JZVEVTX1BFUl9OT0RFXG5cbi8qKlxuICogVGFrZXMgYHtAbGluayBBUEkuUGFkZGVkUGllY2VTaXplfWAgYW5kIHJldHVybnMgY29ycmVzcG9uZGluZ1xuICogcGllY2UgdHJlZSB3aWR0aCAobGVhZiBjb3VudCkuXG4gKlxuICogQHBhcmFtIHtBUEkuUGllY2VTaXplfSBzaXplXG4gKi9cbmV4cG9ydCBjb25zdCB0b1dpZHRoID0gKHNpemUpID0+IHNpemUgLyBFWFBBTkRFRF9CWVRFU19QRVJfTk9ERVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/expanded.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/padded.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/piece/size/padded.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   fromExpanded: () => (/* binding */ fromExpanded),\n/* harmony export */   fromHeight: () => (/* binding */ fromHeight),\n/* harmony export */   fromWidth: () => (/* binding */ fromWidth),\n/* harmony export */   toExpanded: () => (/* binding */ toExpanded),\n/* harmony export */   toHeight: () => (/* binding */ toHeight),\n/* harmony export */   toWidth: () => (/* binding */ toWidth),\n/* harmony export */   tryFrom: () => (/* binding */ tryFrom)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _uint64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../uint64.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/uint64.js\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js\");\n\n\n\n\n/**\n * Validates that given `size` is a valid {@link API.UnpaddedPieceSize} and\n * returns {@link API.UnpaddedPieceSize} capturing the validation at the type\n * level. If given `size` is not a valid `UnpaddedPieceSize` throws an error.\n *\n * This function is a variation on {@link validate} that throws exceptions\n * instead of returning a {@link API.Result}.\n *\n * @param {number|API.uint64} size\n * @returns {API.PaddedSize}\n */\nconst from = (size) => {\n  const result = tryFrom(size)\n  if (result.error) {\n    throw result.error\n  } else {\n    return result.ok\n  }\n}\n\n/**\n * Validates that given `size` is a valid {@link API.UnpaddedPieceSize} that is\n * a power of 2 multiple of 127. Returns {@link API.Result} with\n * `UnpaddedPieceSize` ok case and an Error in the error case.\n *\n * @param {API.uint64|number} input\n * @returns {API.Result<API.PaddedSize, Error>}\n */\nconst tryFrom = (input) => {\n  const size = BigInt(input)\n  if (size < _constant_js__WEBPACK_IMPORTED_MODULE_2__.PADDED_BYTES_PER_QUAD) {\n    return {\n      error: new RangeError(\n        `Padded payload must contain at least ${_constant_js__WEBPACK_IMPORTED_MODULE_2__.PADDED_BYTES_PER_QUAD} bytes`\n      ),\n    }\n  }\n\n  if (size >> BigInt((0,_uint64_js__WEBPACK_IMPORTED_MODULE_1__.trailingZeros64)(size)) !== _constant_js__WEBPACK_IMPORTED_MODULE_2__.PADDED_BYTES_PER_QUAD) {\n    return {\n      error: new RangeError(\n        `Padded payload size must be (2ⁿ * ${_constant_js__WEBPACK_IMPORTED_MODULE_2__.PADDED_BYTES_PER_QUAD})`\n      ),\n    }\n  }\n\n  return { ok: size }\n}\n\n/**\n * @param {API.PieceSize} size\n * @returns {API.PaddedSize}\n */\nconst fromExpanded = (size) => fromQuads(size / _constant_js__WEBPACK_IMPORTED_MODULE_2__.EXPANDED_BYTES_PER_QUAD)\n\n/**\n * Takes `{@link API.PaddedPieceSize}` and returns corresponding\n * {@link API.PieceSize}.\n *\n * Please note that this function does not validate the input size and\n * relies that type-checker will ensure that user passes valid unpadded\n * piece size created with {@link from} or {@link validate} functions.\n *\n *\n * @see https://github.com/filecoin-project/go-state-types/blob/master/abi/piece.go#L14-L16\n *\n * @param {API.PaddedSize} size\n * @returns {API.PieceSize}\n */\nconst toExpanded = (size) => toQauds(size) * _constant_js__WEBPACK_IMPORTED_MODULE_2__.EXPANDED_BYTES_PER_QUAD\n\n/**\n * Calculates the padded size of the piece from the given tree height.\n *\n * @param {number} height\n * @returns {API.uint64}\n */\nconst fromHeight = (height) => {\n  // We calculate number of quads tree by calculating number of nodes tree\n  // at second layer. This works because we deal with a binary tree so first\n  // layer nodes will contain 2 leaves and second layer nodes will contain 4\n  // leaves hence number of quads.\n  const quads = 2n ** BigInt(height - 2)\n  return quads * _constant_js__WEBPACK_IMPORTED_MODULE_2__.PADDED_BYTES_PER_QUAD\n}\n\n/**\n * Calculates the height of the piece tree from unpadded size.\n *\n * @param {API.PaddedSize} size\n */\nconst toHeight = (size) => (0,_uint64_js__WEBPACK_IMPORTED_MODULE_1__.log2Ceil)(toWidth(size))\n\n/**\n * Takes `{@link API.PaddedPieceSize}` and returns corresponding\n * piece tree width (leaf count).\n *\n * @param {API.PaddedSize} size\n */\nconst toWidth = (size) => toQauds(size) * _constant_js__WEBPACK_IMPORTED_MODULE_2__.LEAFS_PER_QUAD\n\n/**\n *\n * @param {API.uint64} width\n * @returns {API.PaddedSize}\n */\nconst fromWidth = (width) => fromQuads(width / _constant_js__WEBPACK_IMPORTED_MODULE_2__.LEAFS_PER_QUAD)\n\n/**\n * @param {API.PaddedSize} size\n */\nconst toQauds = (size) => size / _constant_js__WEBPACK_IMPORTED_MODULE_2__.PADDED_BYTES_PER_QUAD\n\n/**\n *\n * @param {API.uint64} count\n * @returns {API.PaddedSize}\n */\nconst fromQuads = (count) => count * _constant_js__WEBPACK_IMPORTED_MODULE_2__.PADDED_BYTES_PER_QUAD\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3BpZWNlL3NpemUvcGFkZGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1DO0FBQ3dCO0FBS2pDOztBQUUxQjtBQUNBLDJDQUEyQyw2QkFBNkI7QUFDeEUsWUFBWSw2QkFBNkI7QUFDekM7QUFDQTtBQUNBLG9DQUFvQyxnQkFBZ0I7QUFDcEQsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBLFdBQVcsbUJBQW1CO0FBQzlCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJDQUEyQyw2QkFBNkI7QUFDeEUsMENBQTBDLGtCQUFrQjtBQUM1RDtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLGFBQWEsK0RBQXFCO0FBQ2xDO0FBQ0E7QUFDQSxnREFBZ0QsK0RBQXFCLEVBQUU7QUFDdkU7QUFDQTtBQUNBOztBQUVBLHFCQUFxQiwyREFBZSxZQUFZLCtEQUFxQjtBQUNyRTtBQUNBO0FBQ0EsNkNBQTZDLCtEQUFxQixDQUFDO0FBQ25FO0FBQ0E7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7O0FBRUE7QUFDQSxXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ08sZ0RBQWdELGlFQUF1Qjs7QUFFOUU7QUFDQSxXQUFXLDBCQUEwQjtBQUNyQyxJQUFJLG9CQUFvQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsWUFBWSxJQUFJLGdCQUFnQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLGFBQWE7QUFDYjtBQUNPLDZDQUE2QyxpRUFBdUI7O0FBRTNFO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQXFCO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCO0FBQ08sMkJBQTJCLG9EQUFROztBQUUxQztBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQjtBQUNPLDBDQUEwQyx3REFBYzs7QUFFL0Q7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTywrQ0FBK0Msd0RBQWM7O0FBRXBFO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDQSxpQ0FBaUMsK0RBQXFCOztBQUV0RDtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNBLHFDQUFxQywrREFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9zcmMvcGllY2Uvc2l6ZS9wYWRkZWQuanM/OTNjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBUEkgZnJvbSAnLi4vLi4vYXBpLmpzJ1xuaW1wb3J0IHsgbG9nMkNlaWwsIHRyYWlsaW5nWmVyb3M2NCB9IGZyb20gJy4uLy4uL3VpbnQ2NC5qcydcbmltcG9ydCB7XG4gIFBBRERFRF9CWVRFU19QRVJfUVVBRCxcbiAgRVhQQU5ERURfQllURVNfUEVSX1FVQUQsXG4gIExFQUZTX1BFUl9RVUFELFxufSBmcm9tICcuLi8uLi9jb25zdGFudC5qcydcblxuLyoqXG4gKiBWYWxpZGF0ZXMgdGhhdCBnaXZlbiBgc2l6ZWAgaXMgYSB2YWxpZCB7QGxpbmsgQVBJLlVucGFkZGVkUGllY2VTaXplfSBhbmRcbiAqIHJldHVybnMge0BsaW5rIEFQSS5VbnBhZGRlZFBpZWNlU2l6ZX0gY2FwdHVyaW5nIHRoZSB2YWxpZGF0aW9uIGF0IHRoZSB0eXBlXG4gKiBsZXZlbC4gSWYgZ2l2ZW4gYHNpemVgIGlzIG5vdCBhIHZhbGlkIGBVbnBhZGRlZFBpZWNlU2l6ZWAgdGhyb3dzIGFuIGVycm9yLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gaXMgYSB2YXJpYXRpb24gb24ge0BsaW5rIHZhbGlkYXRlfSB0aGF0IHRocm93cyBleGNlcHRpb25zXG4gKiBpbnN0ZWFkIG9mIHJldHVybmluZyBhIHtAbGluayBBUEkuUmVzdWx0fS5cbiAqXG4gKiBAcGFyYW0ge251bWJlcnxBUEkudWludDY0fSBzaXplXG4gKiBAcmV0dXJucyB7QVBJLlBhZGRlZFNpemV9XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tID0gKHNpemUpID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gdHJ5RnJvbShzaXplKVxuICBpZiAocmVzdWx0LmVycm9yKSB7XG4gICAgdGhyb3cgcmVzdWx0LmVycm9yXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlc3VsdC5va1xuICB9XG59XG5cbi8qKlxuICogVmFsaWRhdGVzIHRoYXQgZ2l2ZW4gYHNpemVgIGlzIGEgdmFsaWQge0BsaW5rIEFQSS5VbnBhZGRlZFBpZWNlU2l6ZX0gdGhhdCBpc1xuICogYSBwb3dlciBvZiAyIG11bHRpcGxlIG9mIDEyNy4gUmV0dXJucyB7QGxpbmsgQVBJLlJlc3VsdH0gd2l0aFxuICogYFVucGFkZGVkUGllY2VTaXplYCBvayBjYXNlIGFuZCBhbiBFcnJvciBpbiB0aGUgZXJyb3IgY2FzZS5cbiAqXG4gKiBAcGFyYW0ge0FQSS51aW50NjR8bnVtYmVyfSBpbnB1dFxuICogQHJldHVybnMge0FQSS5SZXN1bHQ8QVBJLlBhZGRlZFNpemUsIEVycm9yPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHRyeUZyb20gPSAoaW5wdXQpID0+IHtcbiAgY29uc3Qgc2l6ZSA9IEJpZ0ludChpbnB1dClcbiAgaWYgKHNpemUgPCBQQURERURfQllURVNfUEVSX1FVQUQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXJyb3I6IG5ldyBSYW5nZUVycm9yKFxuICAgICAgICBgUGFkZGVkIHBheWxvYWQgbXVzdCBjb250YWluIGF0IGxlYXN0ICR7UEFEREVEX0JZVEVTX1BFUl9RVUFEfSBieXRlc2BcbiAgICAgICksXG4gICAgfVxuICB9XG5cbiAgaWYgKHNpemUgPj4gQmlnSW50KHRyYWlsaW5nWmVyb3M2NChzaXplKSkgIT09IFBBRERFRF9CWVRFU19QRVJfUVVBRCkge1xuICAgIHJldHVybiB7XG4gICAgICBlcnJvcjogbmV3IFJhbmdlRXJyb3IoXG4gICAgICAgIGBQYWRkZWQgcGF5bG9hZCBzaXplIG11c3QgYmUgKDLigb8gKiAke1BBRERFRF9CWVRFU19QRVJfUVVBRH0pYFxuICAgICAgKSxcbiAgICB9XG4gIH1cblxuICByZXR1cm4geyBvazogc2l6ZSB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtBUEkuUGllY2VTaXplfSBzaXplXG4gKiBAcmV0dXJucyB7QVBJLlBhZGRlZFNpemV9XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tRXhwYW5kZWQgPSAoc2l6ZSkgPT4gZnJvbVF1YWRzKHNpemUgLyBFWFBBTkRFRF9CWVRFU19QRVJfUVVBRClcblxuLyoqXG4gKiBUYWtlcyBge0BsaW5rIEFQSS5QYWRkZWRQaWVjZVNpemV9YCBhbmQgcmV0dXJucyBjb3JyZXNwb25kaW5nXG4gKiB7QGxpbmsgQVBJLlBpZWNlU2l6ZX0uXG4gKlxuICogUGxlYXNlIG5vdGUgdGhhdCB0aGlzIGZ1bmN0aW9uIGRvZXMgbm90IHZhbGlkYXRlIHRoZSBpbnB1dCBzaXplIGFuZFxuICogcmVsaWVzIHRoYXQgdHlwZS1jaGVja2VyIHdpbGwgZW5zdXJlIHRoYXQgdXNlciBwYXNzZXMgdmFsaWQgdW5wYWRkZWRcbiAqIHBpZWNlIHNpemUgY3JlYXRlZCB3aXRoIHtAbGluayBmcm9tfSBvciB7QGxpbmsgdmFsaWRhdGV9IGZ1bmN0aW9ucy5cbiAqXG4gKlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vZmlsZWNvaW4tcHJvamVjdC9nby1zdGF0ZS10eXBlcy9ibG9iL21hc3Rlci9hYmkvcGllY2UuZ28jTDE0LUwxNlxuICpcbiAqIEBwYXJhbSB7QVBJLlBhZGRlZFNpemV9IHNpemVcbiAqIEByZXR1cm5zIHtBUEkuUGllY2VTaXplfVxuICovXG5leHBvcnQgY29uc3QgdG9FeHBhbmRlZCA9IChzaXplKSA9PiB0b1FhdWRzKHNpemUpICogRVhQQU5ERURfQllURVNfUEVSX1FVQURcblxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBwYWRkZWQgc2l6ZSBvZiB0aGUgcGllY2UgZnJvbSB0aGUgZ2l2ZW4gdHJlZSBoZWlnaHQuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGhlaWdodFxuICogQHJldHVybnMge0FQSS51aW50NjR9XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tSGVpZ2h0ID0gKGhlaWdodCkgPT4ge1xuICAvLyBXZSBjYWxjdWxhdGUgbnVtYmVyIG9mIHF1YWRzIHRyZWUgYnkgY2FsY3VsYXRpbmcgbnVtYmVyIG9mIG5vZGVzIHRyZWVcbiAgLy8gYXQgc2Vjb25kIGxheWVyLiBUaGlzIHdvcmtzIGJlY2F1c2Ugd2UgZGVhbCB3aXRoIGEgYmluYXJ5IHRyZWUgc28gZmlyc3RcbiAgLy8gbGF5ZXIgbm9kZXMgd2lsbCBjb250YWluIDIgbGVhdmVzIGFuZCBzZWNvbmQgbGF5ZXIgbm9kZXMgd2lsbCBjb250YWluIDRcbiAgLy8gbGVhdmVzIGhlbmNlIG51bWJlciBvZiBxdWFkcy5cbiAgY29uc3QgcXVhZHMgPSAybiAqKiBCaWdJbnQoaGVpZ2h0IC0gMilcbiAgcmV0dXJuIHF1YWRzICogUEFEREVEX0JZVEVTX1BFUl9RVUFEXG59XG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgaGVpZ2h0IG9mIHRoZSBwaWVjZSB0cmVlIGZyb20gdW5wYWRkZWQgc2l6ZS5cbiAqXG4gKiBAcGFyYW0ge0FQSS5QYWRkZWRTaXplfSBzaXplXG4gKi9cbmV4cG9ydCBjb25zdCB0b0hlaWdodCA9IChzaXplKSA9PiBsb2cyQ2VpbCh0b1dpZHRoKHNpemUpKVxuXG4vKipcbiAqIFRha2VzIGB7QGxpbmsgQVBJLlBhZGRlZFBpZWNlU2l6ZX1gIGFuZCByZXR1cm5zIGNvcnJlc3BvbmRpbmdcbiAqIHBpZWNlIHRyZWUgd2lkdGggKGxlYWYgY291bnQpLlxuICpcbiAqIEBwYXJhbSB7QVBJLlBhZGRlZFNpemV9IHNpemVcbiAqL1xuZXhwb3J0IGNvbnN0IHRvV2lkdGggPSAoc2l6ZSkgPT4gdG9RYXVkcyhzaXplKSAqIExFQUZTX1BFUl9RVUFEXG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gd2lkdGhcbiAqIEByZXR1cm5zIHtBUEkuUGFkZGVkU2l6ZX1cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21XaWR0aCA9ICh3aWR0aCkgPT4gZnJvbVF1YWRzKHdpZHRoIC8gTEVBRlNfUEVSX1FVQUQpXG5cbi8qKlxuICogQHBhcmFtIHtBUEkuUGFkZGVkU2l6ZX0gc2l6ZVxuICovXG5jb25zdCB0b1FhdWRzID0gKHNpemUpID0+IHNpemUgLyBQQURERURfQllURVNfUEVSX1FVQURcblxuLyoqXG4gKlxuICogQHBhcmFtIHtBUEkudWludDY0fSBjb3VudFxuICogQHJldHVybnMge0FQSS5QYWRkZWRTaXplfVxuICovXG5jb25zdCBmcm9tUXVhZHMgPSAoY291bnQpID0+IGNvdW50ICogUEFEREVEX0JZVEVTX1BFUl9RVUFEXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/padded.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/unpadded.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/piece/size/unpadded.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromPiece: () => (/* binding */ fromPiece),\n/* harmony export */   toExpanded: () => (/* binding */ toExpanded),\n/* harmony export */   toHeight: () => (/* binding */ toHeight),\n/* harmony export */   toPadded: () => (/* binding */ toPadded),\n/* harmony export */   toPadding: () => (/* binding */ toPadding),\n/* harmony export */   toWidth: () => (/* binding */ toWidth)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constant.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/constant.js\");\n/* harmony import */ var _uint64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../uint64.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/uint64.js\");\n/* harmony import */ var _padded_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./padded.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/padded.js\");\n\n\n\n\n\n/**\n * Takes the {@link API.Piece} sizing details (height and padding) and\n * calculates original payload size.\n *\n * @param {object} piece\n * @param {number} piece.height\n * @param {API.uint64} piece.padding\n */\nconst fromPiece = ({ height, padding }) =>\n  _padded_js__WEBPACK_IMPORTED_MODULE_3__.fromHeight(height) - padding\n\n/**\n * Takes arbitrary payload size and calculates 0-padding required to\n * produce a {@link API.PaddedSize}.\n *\n * @param {API.uint64} size\n */\nconst toPadding = (size) => toPadded(size) - size\n\n/**\n * Takes arbitrary payload size and calculates size after required 0-padding.\n *\n * @param {API.uint64} size\n * @returns {API.PaddedSize}\n */\nconst toPadded = (size) => toQauds(size) * _constant_js__WEBPACK_IMPORTED_MODULE_1__.PADDED_BYTES_PER_QUAD\n\n/**\n * Takes arbitrary payload size and calculates the piece size after required\n * 0-padding and FR32 expansion is applied.\n *\n * @param {API.uint64} size\n * @returns {API.PieceSize}\n */\nconst toExpanded = (size) => toQauds(size) * _constant_js__WEBPACK_IMPORTED_MODULE_1__.EXPANDED_BYTES_PER_QUAD\n\n/**\n * Takes arbitrary payload size and calculates width of the piece tree (leaf\n * count) that will be required to represent it.\n *\n * @param {API.uint64} size\n */\nconst toWidth = (size) => toQauds(size) * _constant_js__WEBPACK_IMPORTED_MODULE_1__.LEAFS_PER_QUAD\n\n/**\n * Takes arbitrary payload size and calculates height of the piece tree that will be required to represent it.\n *\n * @param {API.uint64} size\n */\nconst toHeight = (size) => (0,_uint64_js__WEBPACK_IMPORTED_MODULE_2__.log2Ceil)(toWidth(size))\n\n/**\n * Takes arbitrary payload size and calculates number of quads that will be\n * required to represent it.\n *\n * @param {API.uint64} size\n */\nconst toQauds = (size) => {\n  // Number of quads required to fit given payload size.\n  // Since bigint division truncates we add another quads shy of 1 number of\n  // bytes to round up.\n  const quadCount = (size + _constant_js__WEBPACK_IMPORTED_MODULE_1__.PADDED_BYTES_PER_QUAD - 1n) / _constant_js__WEBPACK_IMPORTED_MODULE_1__.PADDED_BYTES_PER_QUAD\n  // Next we we log2 then pow2 with some rounding to ensure that result\n  // is 2 ^ n.\n  return 2n ** BigInt((0,_uint64_js__WEBPACK_IMPORTED_MODULE_2__.log2Ceil)(quadCount))\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3BpZWNlL3NpemUvdW5wYWRkZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFtQztBQUtUO0FBQ2dCO0FBQ0w7O0FBRXJDO0FBQ0EsY0FBYyxpQkFBaUI7QUFDL0I7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxZQUFZO0FBQ3ZCO0FBQ08scUJBQXFCLGlCQUFpQjtBQUM3QyxFQUFFLGtEQUFpQjs7QUFFbkI7QUFDQTtBQUNBLGNBQWMscUJBQXFCO0FBQ25DO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNPLDJDQUEyQywrREFBcUI7O0FBRXZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNPLDZDQUE2QyxpRUFBdUI7O0FBRTNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ08sMENBQTBDLHdEQUFjOztBQUUvRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDTywyQkFBMkIsb0RBQVE7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsK0RBQXFCLFNBQVMsK0RBQXFCO0FBQy9FO0FBQ0E7QUFDQSxzQkFBc0Isb0RBQVE7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9zcmMvcGllY2Uvc2l6ZS91bnBhZGRlZC5qcz8zMDk1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICcuLi8uLi9hcGkuanMnXG5pbXBvcnQge1xuICBQQURERURfQllURVNfUEVSX1FVQUQsXG4gIEVYUEFOREVEX0JZVEVTX1BFUl9RVUFELFxuICBMRUFGU19QRVJfUVVBRCxcbn0gZnJvbSAnLi4vLi4vY29uc3RhbnQuanMnXG5pbXBvcnQgeyBsb2cyQ2VpbCB9IGZyb20gJy4uLy4uL3VpbnQ2NC5qcydcbmltcG9ydCAqIGFzIFBhZGRlZCBmcm9tICcuL3BhZGRlZC5qcydcblxuLyoqXG4gKiBUYWtlcyB0aGUge0BsaW5rIEFQSS5QaWVjZX0gc2l6aW5nIGRldGFpbHMgKGhlaWdodCBhbmQgcGFkZGluZykgYW5kXG4gKiBjYWxjdWxhdGVzIG9yaWdpbmFsIHBheWxvYWQgc2l6ZS5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gcGllY2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBwaWVjZS5oZWlnaHRcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gcGllY2UucGFkZGluZ1xuICovXG5leHBvcnQgY29uc3QgZnJvbVBpZWNlID0gKHsgaGVpZ2h0LCBwYWRkaW5nIH0pID0+XG4gIFBhZGRlZC5mcm9tSGVpZ2h0KGhlaWdodCkgLSBwYWRkaW5nXG5cbi8qKlxuICogVGFrZXMgYXJiaXRyYXJ5IHBheWxvYWQgc2l6ZSBhbmQgY2FsY3VsYXRlcyAwLXBhZGRpbmcgcmVxdWlyZWQgdG9cbiAqIHByb2R1Y2UgYSB7QGxpbmsgQVBJLlBhZGRlZFNpemV9LlxuICpcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gc2l6ZVxuICovXG5leHBvcnQgY29uc3QgdG9QYWRkaW5nID0gKHNpemUpID0+IHRvUGFkZGVkKHNpemUpIC0gc2l6ZVxuXG4vKipcbiAqIFRha2VzIGFyYml0cmFyeSBwYXlsb2FkIHNpemUgYW5kIGNhbGN1bGF0ZXMgc2l6ZSBhZnRlciByZXF1aXJlZCAwLXBhZGRpbmcuXG4gKlxuICogQHBhcmFtIHtBUEkudWludDY0fSBzaXplXG4gKiBAcmV0dXJucyB7QVBJLlBhZGRlZFNpemV9XG4gKi9cbmV4cG9ydCBjb25zdCB0b1BhZGRlZCA9IChzaXplKSA9PiB0b1FhdWRzKHNpemUpICogUEFEREVEX0JZVEVTX1BFUl9RVUFEXG5cbi8qKlxuICogVGFrZXMgYXJiaXRyYXJ5IHBheWxvYWQgc2l6ZSBhbmQgY2FsY3VsYXRlcyB0aGUgcGllY2Ugc2l6ZSBhZnRlciByZXF1aXJlZFxuICogMC1wYWRkaW5nIGFuZCBGUjMyIGV4cGFuc2lvbiBpcyBhcHBsaWVkLlxuICpcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gc2l6ZVxuICogQHJldHVybnMge0FQSS5QaWVjZVNpemV9XG4gKi9cbmV4cG9ydCBjb25zdCB0b0V4cGFuZGVkID0gKHNpemUpID0+IHRvUWF1ZHMoc2l6ZSkgKiBFWFBBTkRFRF9CWVRFU19QRVJfUVVBRFxuXG4vKipcbiAqIFRha2VzIGFyYml0cmFyeSBwYXlsb2FkIHNpemUgYW5kIGNhbGN1bGF0ZXMgd2lkdGggb2YgdGhlIHBpZWNlIHRyZWUgKGxlYWZcbiAqIGNvdW50KSB0aGF0IHdpbGwgYmUgcmVxdWlyZWQgdG8gcmVwcmVzZW50IGl0LlxuICpcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gc2l6ZVxuICovXG5leHBvcnQgY29uc3QgdG9XaWR0aCA9IChzaXplKSA9PiB0b1FhdWRzKHNpemUpICogTEVBRlNfUEVSX1FVQURcblxuLyoqXG4gKiBUYWtlcyBhcmJpdHJhcnkgcGF5bG9hZCBzaXplIGFuZCBjYWxjdWxhdGVzIGhlaWdodCBvZiB0aGUgcGllY2UgdHJlZSB0aGF0IHdpbGwgYmUgcmVxdWlyZWQgdG8gcmVwcmVzZW50IGl0LlxuICpcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gc2l6ZVxuICovXG5leHBvcnQgY29uc3QgdG9IZWlnaHQgPSAoc2l6ZSkgPT4gbG9nMkNlaWwodG9XaWR0aChzaXplKSlcblxuLyoqXG4gKiBUYWtlcyBhcmJpdHJhcnkgcGF5bG9hZCBzaXplIGFuZCBjYWxjdWxhdGVzIG51bWJlciBvZiBxdWFkcyB0aGF0IHdpbGwgYmVcbiAqIHJlcXVpcmVkIHRvIHJlcHJlc2VudCBpdC5cbiAqXG4gKiBAcGFyYW0ge0FQSS51aW50NjR9IHNpemVcbiAqL1xuY29uc3QgdG9RYXVkcyA9IChzaXplKSA9PiB7XG4gIC8vIE51bWJlciBvZiBxdWFkcyByZXF1aXJlZCB0byBmaXQgZ2l2ZW4gcGF5bG9hZCBzaXplLlxuICAvLyBTaW5jZSBiaWdpbnQgZGl2aXNpb24gdHJ1bmNhdGVzIHdlIGFkZCBhbm90aGVyIHF1YWRzIHNoeSBvZiAxIG51bWJlciBvZlxuICAvLyBieXRlcyB0byByb3VuZCB1cC5cbiAgY29uc3QgcXVhZENvdW50ID0gKHNpemUgKyBQQURERURfQllURVNfUEVSX1FVQUQgLSAxbikgLyBQQURERURfQllURVNfUEVSX1FVQURcbiAgLy8gTmV4dCB3ZSB3ZSBsb2cyIHRoZW4gcG93MiB3aXRoIHNvbWUgcm91bmRpbmcgdG8gZW5zdXJlIHRoYXQgcmVzdWx0XG4gIC8vIGlzIDIgXiBuLlxuICByZXR1cm4gMm4gKiogQmlnSW50KGxvZzJDZWlsKHF1YWRDb3VudCkpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/piece/size/unpadded.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/piece/tree.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/piece/tree.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_LEAF_COUNT: () => (/* binding */ MAX_LEAF_COUNT),\n/* harmony export */   allocate: () => (/* binding */ allocate),\n/* harmony export */   build: () => (/* binding */ build),\n/* harmony export */   computeNode: () => (/* reexport safe */ _proof_js__WEBPACK_IMPORTED_MODULE_2__.computeNode),\n/* harmony export */   fromChunks: () => (/* binding */ fromChunks),\n/* harmony export */   fromLeafs: () => (/* binding */ fromLeafs),\n/* harmony export */   padLeafs: () => (/* binding */ padLeafs),\n/* harmony export */   root: () => (/* binding */ root),\n/* harmony export */   split: () => (/* binding */ split)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/node.js\");\n/* harmony import */ var _proof_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../proof.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/proof.js\");\n\n\n\n\n\n// The value is an unsigned, 32-bit integer that is always numerically greater\n// than the highest index in the array. This means our tree can represent a\n// piece up to 128 GiB in size.\nconst MAX_LEAF_COUNT = 2 ** 32 - 1\n\n/**\n * Allocates a tree for a given amount of leafs.\n *\n * The construction rounds the amount of leafs up to the nearest two-power with\n * zeroed nodes to ensure that the tree is perfect and hence all internal node's\n * have well-defined children.\n *\n * @param {number} leafs\n */\nfunction allocate(leafs) {\n  const adjustedLeafs = 2 ** Math.ceil(Math.log2(leafs))\n\n  if (adjustedLeafs > MAX_LEAF_COUNT) {\n    throw new RangeError(\n      `too many leafs ${adjustedLeafs} exceeds ${MAX_LEAF_COUNT} limit`\n    )\n  }\n\n  const height = Math.ceil(Math.log2(adjustedLeafs))\n  const nodes = new Array(height + 1)\n\n  for (const level of nodes.keys()) {\n    nodes[level] = new Array(1 << level)\n  }\n\n  return new PieceTree({ nodes, height })\n}\n\n/**\n * @param {API.TreeData} tree\n */\nconst depth = (tree) => {\n  return tree.nodes.length\n}\n\n/**\n *\n * @param {API.TreeData} tree\n * @returns {API.MerkleTreeNode}\n */\nconst root = (tree) => {\n  return tree.nodes[0][0]\n}\n\n/**\n * @param {Uint8Array} source\n * @returns {API.MerkleTreeNode[]}\n */\nconst split = (source) => {\n  const count = source.length / _node_js__WEBPACK_IMPORTED_MODULE_1__.Size\n  const chunks = new Array(count)\n  for (let n = 0; n < count; n++) {\n    const offset = n * _node_js__WEBPACK_IMPORTED_MODULE_1__.Size\n    const chunk = source.subarray(offset, offset + _node_js__WEBPACK_IMPORTED_MODULE_1__.Size)\n    chunks[n] = chunk\n  }\n  return chunks\n}\n\n/**\n * @param {API.Fr23Padded} source\n */\nconst build = (source) => fromChunks(split(source))\n\n/**\n * @param {API.MerkleTreeNode[]} chunks\n */\nconst fromChunks = (chunks) => {\n  if (chunks.length === 0) {\n    throw new RangeError('Empty source')\n  }\n\n  const leafs = chunks //await Promise.all(chunks.map(truncatedHash))\n  return fromLeafs(leafs)\n}\n\n/**\n * @param {API.MerkleTreeNode[]} leafs\n * @returns {API.PieceTree}\n */\nconst fromLeafs = (leafs) => {\n  const tree = allocate(leafs.length)\n  // Set the padded leaf nodes\n  tree.nodes[depth(tree) - 1] = padLeafs(leafs)\n  let parentNodes = tree.nodes[depth(tree) - 1]\n  // Construct the Merkle tree bottom-up, starting from the leafs\n  // Note the -1 due to 0-indexing the root level\n  for (let level = depth(tree) - 2; level >= 0; level--) {\n    /** @type {API.MerkleTreeNode[]} */\n    const currentLevel = new Array(Math.ceil(parentNodes.length / 2))\n    // Traverse the level left to right\n    for (let i = 0; i + 1 < parentNodes.length; i = i + 2) {\n      currentLevel[Math.floor(i / 2)] = _proof_js__WEBPACK_IMPORTED_MODULE_2__.computeNode(\n        parentNodes[i],\n        parentNodes[i + 1]\n      )\n    }\n    tree.nodes[level] = currentLevel\n    parentNodes = currentLevel\n  }\n\n  return new PieceTree(tree)\n}\n\n/**\n * @param {API.MerkleTreeNode[]} leafs\n * @returns {API.MerkleTreeNode[]}\n */\nconst padLeafs = (leafs) => {\n  const paddingAmount = (1 << Math.ceil(Math.log2(leafs.length))) - leafs.length\n  // arrays are zeroed by default in JS\n  const paddingLeafs = new Array(paddingAmount)\n\n  return [...leafs, ...paddingLeafs]\n}\n\n/**\n * @implements {API.PieceTree}\n */\nclass PieceTree {\n  /**\n   * @param {object} data\n   * @param {API.MerkleTreeNode[][]} data.nodes\n   * @param {number} data.height\n   */\n  constructor({ nodes, height }) {\n    this.nodes = nodes\n    this.height = height\n  }\n\n  get root() {\n    return root(this)\n  }\n  get leafs() {\n    const { nodes } = this\n    return nodes[nodes.length - 1]\n  }\n  get leafCount() {\n    return 2 ** this.height\n  }\n  /**\n   *\n   * @param {number} level\n   * @param {number} index\n   */\n  node(level, index) {\n    const { nodes } = this\n    return nodes[level][index]\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3BpZWNlL3RyZWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ2E7QUFDVDtBQUNLOztBQUV6QztBQUNBO0FBQ0E7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLHdCQUF3QixlQUFlLFVBQVUsZ0JBQWdCO0FBQ2pFO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLGVBQWU7QUFDeEM7O0FBRUE7QUFDQSxXQUFXLGNBQWM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ087QUFDUCxnQ0FBZ0MsMENBQVE7QUFDeEM7QUFDQSxrQkFBa0IsV0FBVztBQUM3Qix1QkFBdUIsMENBQVE7QUFDL0IsbURBQW1ELDBDQUFRO0FBQzNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDTzs7QUFFUDtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakMsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsWUFBWTtBQUNoRCxlQUFlLHNCQUFzQjtBQUNyQztBQUNBO0FBQ0Esb0JBQW9CLDRCQUE0QjtBQUNoRCx3Q0FBd0Msa0RBQWlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHNCQUFzQjtBQUNqQyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLFFBQVE7QUFDckI7QUFDQSxnQkFBZ0IsZUFBZTtBQUMvQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3BpZWNlL3RyZWUuanM/ZTQ3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBUEkgZnJvbSAnLi4vYXBpLmpzJ1xuaW1wb3J0IHsgU2l6ZSBhcyBOb2RlU2l6ZSB9IGZyb20gJy4uL25vZGUuanMnXG5pbXBvcnQgKiBhcyBQcm9vZiBmcm9tICcuLi9wcm9vZi5qcydcbmV4cG9ydCB7IGNvbXB1dGVOb2RlIH0gZnJvbSAnLi4vcHJvb2YuanMnXG5cbi8vIFRoZSB2YWx1ZSBpcyBhbiB1bnNpZ25lZCwgMzItYml0IGludGVnZXIgdGhhdCBpcyBhbHdheXMgbnVtZXJpY2FsbHkgZ3JlYXRlclxuLy8gdGhhbiB0aGUgaGlnaGVzdCBpbmRleCBpbiB0aGUgYXJyYXkuIFRoaXMgbWVhbnMgb3VyIHRyZWUgY2FuIHJlcHJlc2VudCBhXG4vLyBwaWVjZSB1cCB0byAxMjggR2lCIGluIHNpemUuXG5leHBvcnQgY29uc3QgTUFYX0xFQUZfQ09VTlQgPSAyICoqIDMyIC0gMVxuXG4vKipcbiAqIEFsbG9jYXRlcyBhIHRyZWUgZm9yIGEgZ2l2ZW4gYW1vdW50IG9mIGxlYWZzLlxuICpcbiAqIFRoZSBjb25zdHJ1Y3Rpb24gcm91bmRzIHRoZSBhbW91bnQgb2YgbGVhZnMgdXAgdG8gdGhlIG5lYXJlc3QgdHdvLXBvd2VyIHdpdGhcbiAqIHplcm9lZCBub2RlcyB0byBlbnN1cmUgdGhhdCB0aGUgdHJlZSBpcyBwZXJmZWN0IGFuZCBoZW5jZSBhbGwgaW50ZXJuYWwgbm9kZSdzXG4gKiBoYXZlIHdlbGwtZGVmaW5lZCBjaGlsZHJlbi5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gbGVhZnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFsbG9jYXRlKGxlYWZzKSB7XG4gIGNvbnN0IGFkanVzdGVkTGVhZnMgPSAyICoqIE1hdGguY2VpbChNYXRoLmxvZzIobGVhZnMpKVxuXG4gIGlmIChhZGp1c3RlZExlYWZzID4gTUFYX0xFQUZfQ09VTlQpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcbiAgICAgIGB0b28gbWFueSBsZWFmcyAke2FkanVzdGVkTGVhZnN9IGV4Y2VlZHMgJHtNQVhfTEVBRl9DT1VOVH0gbGltaXRgXG4gICAgKVxuICB9XG5cbiAgY29uc3QgaGVpZ2h0ID0gTWF0aC5jZWlsKE1hdGgubG9nMihhZGp1c3RlZExlYWZzKSlcbiAgY29uc3Qgbm9kZXMgPSBuZXcgQXJyYXkoaGVpZ2h0ICsgMSlcblxuICBmb3IgKGNvbnN0IGxldmVsIG9mIG5vZGVzLmtleXMoKSkge1xuICAgIG5vZGVzW2xldmVsXSA9IG5ldyBBcnJheSgxIDw8IGxldmVsKVxuICB9XG5cbiAgcmV0dXJuIG5ldyBQaWVjZVRyZWUoeyBub2RlcywgaGVpZ2h0IH0pXG59XG5cbi8qKlxuICogQHBhcmFtIHtBUEkuVHJlZURhdGF9IHRyZWVcbiAqL1xuY29uc3QgZGVwdGggPSAodHJlZSkgPT4ge1xuICByZXR1cm4gdHJlZS5ub2Rlcy5sZW5ndGhcbn1cblxuLyoqXG4gKlxuICogQHBhcmFtIHtBUEkuVHJlZURhdGF9IHRyZWVcbiAqIEByZXR1cm5zIHtBUEkuTWVya2xlVHJlZU5vZGV9XG4gKi9cbmV4cG9ydCBjb25zdCByb290ID0gKHRyZWUpID0+IHtcbiAgcmV0dXJuIHRyZWUubm9kZXNbMF1bMF1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IHNvdXJjZVxuICogQHJldHVybnMge0FQSS5NZXJrbGVUcmVlTm9kZVtdfVxuICovXG5leHBvcnQgY29uc3Qgc3BsaXQgPSAoc291cmNlKSA9PiB7XG4gIGNvbnN0IGNvdW50ID0gc291cmNlLmxlbmd0aCAvIE5vZGVTaXplXG4gIGNvbnN0IGNodW5rcyA9IG5ldyBBcnJheShjb3VudClcbiAgZm9yIChsZXQgbiA9IDA7IG4gPCBjb3VudDsgbisrKSB7XG4gICAgY29uc3Qgb2Zmc2V0ID0gbiAqIE5vZGVTaXplXG4gICAgY29uc3QgY2h1bmsgPSBzb3VyY2Uuc3ViYXJyYXkob2Zmc2V0LCBvZmZzZXQgKyBOb2RlU2l6ZSlcbiAgICBjaHVua3Nbbl0gPSBjaHVua1xuICB9XG4gIHJldHVybiBjaHVua3Ncbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5GcjIzUGFkZGVkfSBzb3VyY2VcbiAqL1xuZXhwb3J0IGNvbnN0IGJ1aWxkID0gKHNvdXJjZSkgPT4gZnJvbUNodW5rcyhzcGxpdChzb3VyY2UpKVxuXG4vKipcbiAqIEBwYXJhbSB7QVBJLk1lcmtsZVRyZWVOb2RlW119IGNodW5rc1xuICovXG5leHBvcnQgY29uc3QgZnJvbUNodW5rcyA9IChjaHVua3MpID0+IHtcbiAgaWYgKGNodW5rcy5sZW5ndGggPT09IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignRW1wdHkgc291cmNlJylcbiAgfVxuXG4gIGNvbnN0IGxlYWZzID0gY2h1bmtzIC8vYXdhaXQgUHJvbWlzZS5hbGwoY2h1bmtzLm1hcCh0cnVuY2F0ZWRIYXNoKSlcbiAgcmV0dXJuIGZyb21MZWFmcyhsZWFmcylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5NZXJrbGVUcmVlTm9kZVtdfSBsZWFmc1xuICogQHJldHVybnMge0FQSS5QaWVjZVRyZWV9XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tTGVhZnMgPSAobGVhZnMpID0+IHtcbiAgY29uc3QgdHJlZSA9IGFsbG9jYXRlKGxlYWZzLmxlbmd0aClcbiAgLy8gU2V0IHRoZSBwYWRkZWQgbGVhZiBub2Rlc1xuICB0cmVlLm5vZGVzW2RlcHRoKHRyZWUpIC0gMV0gPSBwYWRMZWFmcyhsZWFmcylcbiAgbGV0IHBhcmVudE5vZGVzID0gdHJlZS5ub2Rlc1tkZXB0aCh0cmVlKSAtIDFdXG4gIC8vIENvbnN0cnVjdCB0aGUgTWVya2xlIHRyZWUgYm90dG9tLXVwLCBzdGFydGluZyBmcm9tIHRoZSBsZWFmc1xuICAvLyBOb3RlIHRoZSAtMSBkdWUgdG8gMC1pbmRleGluZyB0aGUgcm9vdCBsZXZlbFxuICBmb3IgKGxldCBsZXZlbCA9IGRlcHRoKHRyZWUpIC0gMjsgbGV2ZWwgPj0gMDsgbGV2ZWwtLSkge1xuICAgIC8qKiBAdHlwZSB7QVBJLk1lcmtsZVRyZWVOb2RlW119ICovXG4gICAgY29uc3QgY3VycmVudExldmVsID0gbmV3IEFycmF5KE1hdGguY2VpbChwYXJlbnROb2Rlcy5sZW5ndGggLyAyKSlcbiAgICAvLyBUcmF2ZXJzZSB0aGUgbGV2ZWwgbGVmdCB0byByaWdodFxuICAgIGZvciAobGV0IGkgPSAwOyBpICsgMSA8IHBhcmVudE5vZGVzLmxlbmd0aDsgaSA9IGkgKyAyKSB7XG4gICAgICBjdXJyZW50TGV2ZWxbTWF0aC5mbG9vcihpIC8gMildID0gUHJvb2YuY29tcHV0ZU5vZGUoXG4gICAgICAgIHBhcmVudE5vZGVzW2ldLFxuICAgICAgICBwYXJlbnROb2Rlc1tpICsgMV1cbiAgICAgIClcbiAgICB9XG4gICAgdHJlZS5ub2Rlc1tsZXZlbF0gPSBjdXJyZW50TGV2ZWxcbiAgICBwYXJlbnROb2RlcyA9IGN1cnJlbnRMZXZlbFxuICB9XG5cbiAgcmV0dXJuIG5ldyBQaWVjZVRyZWUodHJlZSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5NZXJrbGVUcmVlTm9kZVtdfSBsZWFmc1xuICogQHJldHVybnMge0FQSS5NZXJrbGVUcmVlTm9kZVtdfVxuICovXG5leHBvcnQgY29uc3QgcGFkTGVhZnMgPSAobGVhZnMpID0+IHtcbiAgY29uc3QgcGFkZGluZ0Ftb3VudCA9ICgxIDw8IE1hdGguY2VpbChNYXRoLmxvZzIobGVhZnMubGVuZ3RoKSkpIC0gbGVhZnMubGVuZ3RoXG4gIC8vIGFycmF5cyBhcmUgemVyb2VkIGJ5IGRlZmF1bHQgaW4gSlNcbiAgY29uc3QgcGFkZGluZ0xlYWZzID0gbmV3IEFycmF5KHBhZGRpbmdBbW91bnQpXG5cbiAgcmV0dXJuIFsuLi5sZWFmcywgLi4ucGFkZGluZ0xlYWZzXVxufVxuXG4vKipcbiAqIEBpbXBsZW1lbnRzIHtBUEkuUGllY2VUcmVlfVxuICovXG5jbGFzcyBQaWVjZVRyZWUge1xuICAvKipcbiAgICogQHBhcmFtIHtvYmplY3R9IGRhdGFcbiAgICogQHBhcmFtIHtBUEkuTWVya2xlVHJlZU5vZGVbXVtdfSBkYXRhLm5vZGVzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBkYXRhLmhlaWdodFxuICAgKi9cbiAgY29uc3RydWN0b3IoeyBub2RlcywgaGVpZ2h0IH0pIHtcbiAgICB0aGlzLm5vZGVzID0gbm9kZXNcbiAgICB0aGlzLmhlaWdodCA9IGhlaWdodFxuICB9XG5cbiAgZ2V0IHJvb3QoKSB7XG4gICAgcmV0dXJuIHJvb3QodGhpcylcbiAgfVxuICBnZXQgbGVhZnMoKSB7XG4gICAgY29uc3QgeyBub2RlcyB9ID0gdGhpc1xuICAgIHJldHVybiBub2Rlc1tub2Rlcy5sZW5ndGggLSAxXVxuICB9XG4gIGdldCBsZWFmQ291bnQoKSB7XG4gICAgcmV0dXJuIDIgKiogdGhpcy5oZWlnaHRcbiAgfVxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ9IGxldmVsXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICAgKi9cbiAgbm9kZShsZXZlbCwgaW5kZXgpIHtcbiAgICBjb25zdCB7IG5vZGVzIH0gPSB0aGlzXG4gICAgcmV0dXJuIG5vZGVzW2xldmVsXVtpbmRleF1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/piece/tree.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/proof.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/proof.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeNode: () => (/* binding */ computeNode),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   depth: () => (/* binding */ depth),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   offset: () => (/* binding */ offset),\n/* harmony export */   path: () => (/* binding */ path),\n/* harmony export */   resolveRoot: () => (/* binding */ resolveRoot),\n/* harmony export */   truncate: () => (/* binding */ truncate),\n/* harmony export */   truncatedHash: () => (/* binding */ truncatedHash),\n/* harmony export */   validateLevelIndex: () => (/* binding */ validateLevelIndex),\n/* harmony export */   verify: () => (/* binding */ verify)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var multiformats_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/bytes */ \"(ssr)/./node_modules/@web3-storage/data-segment/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/node.js\");\n/* harmony import */ var _ipld_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ipld.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/ipld.js\");\n\n\n\n\n\n\n/**\n * @param {API.ProofData} proof\n * @returns {API.MerkleTreePath}\n */\nconst path = ([, path]) => path\n\n/**\n * @param {API.ProofData} proof\n * @returns {API.uint64}\n */\nconst offset = ([offset]) => offset\n\n/**\n * @param {API.ProofData} proof\n * @returns {number}\n */\nconst depth = (proof) => path(proof).length\n\n/**\n * Verifies that `proof` proves that `claim.node` is contained by\n * the `claim.tree` merkle tree.\n *\n * @param {API.ProofData} proof\n * @param {object} claim\n * @param {API.MerkleTreeNode} claim.tree\n * @param {API.MerkleTreeNode} claim.node\n * @returns {API.Result<{}, Error>}\n */\nconst verify = (proof, { tree, node }) => {\n  const computedRoot = resolveRoot(proof, node)\n  if (computedRoot.error) {\n    return { error: new Error(`computing root: ${computedRoot.error.message}`) }\n  }\n\n  if (!multiformats_bytes__WEBPACK_IMPORTED_MODULE_1__.equals(computedRoot.ok, tree)) {\n    return {\n      error: new Error('inclusion proof does not lead to the same root'),\n    }\n  }\n  return { ok: {} }\n}\n\nconst MAX_DEPTH = 63\n\n/**\n * Resolves the root of the merkle tree from given proof and node that root\n * supposedly includes. It does so by computing parent node from provided node\n * and node in the proof path, then combining that with the next node in the\n * path and so on until the root is reached. Function may return an error if\n * proof path is too long or if proof offset falls out of bounds.\n *\n * @param {API.ProofData} proof\n * @param {API.MerkleTreeNode} node\n * @returns {API.Result<API.MerkleTreeNode, RangeError>}\n */\nfunction resolveRoot(proof, node) {\n  if (depth(proof) > MAX_DEPTH) {\n    return {\n      error: new RangeError(\n        'merkle proofs with depths greater than 63 are not supported'\n      ),\n    }\n  }\n\n  let position = offset(proof)\n  if (position >> BigInt(depth(proof)) !== 0n) {\n    return { error: new RangeError('offset greater than width of the tree') }\n  }\n\n  let top = node\n  let right = 0n\n\n  for (const node of path(proof)) {\n    right =  position & 1n\n    position = position >> 1n\n    top = right === 1n ? computeNode(node, top) : computeNode(top, node)\n  }\n\n  return { ok: top }\n}\n\n/**\n * @param {Uint8Array} payload\n * @param {object} [options]\n * @param {API.SyncMultihashHasher<API.SHA256_CODE>} [options.hasher]\n * @returns {API.MerkleTreeNode}\n */\nfunction truncatedHash(payload, options = {}) {\n  const hasher = options.hasher || _ipld_js__WEBPACK_IMPORTED_MODULE_3__.SHA256\n  const { digest } = hasher.digest(payload)\n  return truncate(digest)\n}\n\n/**\n * @param {API.MerkleTreeNode} left\n * @param {API.MerkleTreeNode} right\n * @param {object} [options]\n * @param {API.SyncMultihashHasher<API.SHA256_CODE>} [options.hasher]\n * @returns {API.MerkleTreeNode}\n */\nconst computeNode = (left, right, options) => {\n  const payload = new Uint8Array(left.length + right.length)\n  payload.set(left, 0)\n  payload.set(right, left.length)\n  return truncatedHash(payload, options)\n}\n\n/**\n * @param {API.MerkleTreeNode} node\n * @returns {API.MerkleTreeNode}\n */\nfunction truncate(node) {\n  node[_node_js__WEBPACK_IMPORTED_MODULE_2__.Size - 1] &= 0b00111111\n  return node\n}\n\n/**\n * Takes data model and returns an IPLD View of it.\n *\n * @param {object} source\n * @param {API.uint64} source.offset\n * @param {API.MerkleTreePath} source.path\n * @returns {API.ProofData}\n */\nconst create = ({ offset, path }) => [offset, path]\n\n/**\n * Takes proof in somewhat arbitrary form and returns a proof data.\n *\n * @param {API.IntoProofData} source\n * @returns {API.ProofData}\n */\nconst from = (source) => {\n  const [offset, path] = Array.isArray(source)\n    ? source\n    : [source.offset, source.path]\n\n  return create({ offset: BigInt(offset), path })\n}\n\n/**\n * @param {number} height - Height of the merkle tree\n * @param {number} level - Level of the node in the merkle tree\n * @param {API.uint64} index - Index of the node in the level\n */\nconst validateLevelIndex = (height, level, index) => {\n  if (level < 0) {\n    throw new RangeError('level can not be negative')\n  }\n\n  if (level > height) {\n    throw new RangeError(`level too high: ${level} >= ${height}`)\n  }\n\n  if (index > (1 << (height - level)) - 1) {\n    throw new RangeError(\n      `index too large for level: idx ${index}, level ${level} : ${\n        (1 << (height - level)) - 1\n      }`\n    )\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/proof.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/uint64.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/uint64.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log2Ceil: () => (/* binding */ log2Ceil),\n/* harmony export */   log2Floor: () => (/* binding */ log2Floor),\n/* harmony export */   onesCount64: () => (/* binding */ onesCount64),\n/* harmony export */   pow2: () => (/* binding */ pow2),\n/* harmony export */   trailingZeros64: () => (/* binding */ trailingZeros64)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n\n\n/**\n * Returns the base 2 logarithm of the given `n`, rounded down.\n *\n * @param {API.uint64} n\n * @returns {number}\n */\nconst log2Floor = (n) => {\n  let result = 0n\n  while ((n >>= 1n)) result++\n  return Number(result)\n}\n\n/**\n * Return the integer logarithm with ceiling for 64 bit unsigned ints.\n *\n * @param {API.uint64} n\n */\nconst log2Ceil = (n) => (n <= 1n ? 0 : log2Floor(BigInt(n) - 1n) + 1)\n\n/**\n * @param {API.uint64} n\n */\nconst trailingZeros64 = (n) => {\n  if (n === 0n) {\n    return 64\n  }\n\n  let count = 0\n  while ((n & 1n) === 0n) {\n    n >>= 1n\n    count++\n  }\n\n  return count\n}\n\n/**\n * @param {API.uint64} value\n */\nconst onesCount64 = (value) => {\n  let count = 0\n  const mask = 1n\n\n  for (let i = 0n; i < 64n; i++) {\n    if ((value & (mask << i)) !== 0n) {\n      count++\n    }\n  }\n\n  return count\n}\n\n/**\n * @param {API.uint64} n\n * @returns {API.uint64}\n */\nconst pow2 = (n) => 1n << n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3VpbnQ2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBK0I7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNPOztBQUVQO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ087QUFDUDtBQUNBOztBQUVBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudC9zcmMvdWludDY0LmpzPzViNDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJy4vYXBpLmpzJ1xuXG4vKipcbiAqIFJldHVybnMgdGhlIGJhc2UgMiBsb2dhcml0aG0gb2YgdGhlIGdpdmVuIGBuYCwgcm91bmRlZCBkb3duLlxuICpcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGNvbnN0IGxvZzJGbG9vciA9IChuKSA9PiB7XG4gIGxldCByZXN1bHQgPSAwblxuICB3aGlsZSAoKG4gPj49IDFuKSkgcmVzdWx0KytcbiAgcmV0dXJuIE51bWJlcihyZXN1bHQpXG59XG5cbi8qKlxuICogUmV0dXJuIHRoZSBpbnRlZ2VyIGxvZ2FyaXRobSB3aXRoIGNlaWxpbmcgZm9yIDY0IGJpdCB1bnNpZ25lZCBpbnRzLlxuICpcbiAqIEBwYXJhbSB7QVBJLnVpbnQ2NH0gblxuICovXG5leHBvcnQgY29uc3QgbG9nMkNlaWwgPSAobikgPT4gKG4gPD0gMW4gPyAwIDogbG9nMkZsb29yKEJpZ0ludChuKSAtIDFuKSArIDEpXG5cbi8qKlxuICogQHBhcmFtIHtBUEkudWludDY0fSBuXG4gKi9cbmV4cG9ydCBjb25zdCB0cmFpbGluZ1plcm9zNjQgPSAobikgPT4ge1xuICBpZiAobiA9PT0gMG4pIHtcbiAgICByZXR1cm4gNjRcbiAgfVxuXG4gIGxldCBjb3VudCA9IDBcbiAgd2hpbGUgKChuICYgMW4pID09PSAwbikge1xuICAgIG4gPj49IDFuXG4gICAgY291bnQrK1xuICB9XG5cbiAgcmV0dXJuIGNvdW50XG59XG5cbi8qKlxuICogQHBhcmFtIHtBUEkudWludDY0fSB2YWx1ZVxuICovXG5leHBvcnQgY29uc3Qgb25lc0NvdW50NjQgPSAodmFsdWUpID0+IHtcbiAgbGV0IGNvdW50ID0gMFxuICBjb25zdCBtYXNrID0gMW5cblxuICBmb3IgKGxldCBpID0gMG47IGkgPCA2NG47IGkrKykge1xuICAgIGlmICgodmFsdWUgJiAobWFzayA8PCBpKSkgIT09IDBuKSB7XG4gICAgICBjb3VudCsrXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNvdW50XG59XG5cbi8qKlxuICogQHBhcmFtIHtBUEkudWludDY0fSBuXG4gKiBAcmV0dXJucyB7QVBJLnVpbnQ2NH1cbiAqL1xuZXhwb3J0IGNvbnN0IHBvdzIgPSAobikgPT4gMW4gPDwgblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/uint64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/data-segment/src/zero-comm.js":
/*!******************************************************************!*\
  !*** ./node_modules/@web3-storage/data-segment/src/zero-comm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromLevel: () => (/* binding */ fromLevel)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/api.js\");\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/node.js\");\n/* harmony import */ var _proof_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./proof.js */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/proof.js\");\n\n\n\n\nconst MAX_LEVEL = 64\n\n/**\n * This is a lazy zero-comm buffer which we fill up on demand.\n */\nclass ZeroComm {\n  constructor() {\n    this.bytes = new Uint8Array(MAX_LEVEL * _node_js__WEBPACK_IMPORTED_MODULE_1__.Size)\n    this.bytes.set(_node_js__WEBPACK_IMPORTED_MODULE_1__.empty(), 0)\n    /** @private */\n    this.node = _node_js__WEBPACK_IMPORTED_MODULE_1__.empty()\n    /** @private */\n    this.length = _node_js__WEBPACK_IMPORTED_MODULE_1__.Size\n  }\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  slice(start, end) {\n    while (this.length < end) {\n      this.node = _proof_js__WEBPACK_IMPORTED_MODULE_2__.computeNode(this.node, this.node)\n      this.bytes.set(this.node, this.length)\n      this.length += _node_js__WEBPACK_IMPORTED_MODULE_1__.Size\n    }\n\n    return this.bytes.subarray(start, end)\n  }\n}\nconst ZERO_COMM = new ZeroComm()\n\n/**\n * simple access by level, only levels between `0` and `64` inclusive are\n * available otherwise throws an error.\n *\n * @param {number} level\n * @returns {API.MerkleTreeNode}\n */\nconst fromLevel = (level) => {\n  if (level < 0 || level >= MAX_LEVEL) {\n    throw new Error(\n      `Only levels between 0 and ${MAX_LEVEL - 1} inclusive are available`\n    )\n  }\n\n  return ZERO_COMM.slice(_node_js__WEBPACK_IMPORTED_MODULE_1__.Size * level, _node_js__WEBPACK_IMPORTED_MODULE_1__.Size * (level + 1))\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3plcm8tY29tbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBQ0U7QUFDRTs7QUFFbkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywwQ0FBUztBQUNyRCxtQkFBbUIsMkNBQVU7QUFDN0I7QUFDQSxnQkFBZ0IsMkNBQVU7QUFDMUI7QUFDQSxrQkFBa0IsMENBQVM7QUFDM0I7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtEQUFpQjtBQUNuQztBQUNBLHFCQUFxQiwwQ0FBUztBQUM5Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQSxtQ0FBbUMsZUFBZTtBQUNsRDtBQUNBOztBQUVBLHlCQUF5QiwwQ0FBUyxVQUFVLDBDQUFTO0FBQ3JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQvc3JjL3plcm8tY29tbS5qcz9hMjYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICcuL2FwaS5qcydcbmltcG9ydCAqIGFzIE5vZGUgZnJvbSAnLi9ub2RlLmpzJ1xuaW1wb3J0ICogYXMgUHJvb2YgZnJvbSAnLi9wcm9vZi5qcydcblxuY29uc3QgTUFYX0xFVkVMID0gNjRcblxuLyoqXG4gKiBUaGlzIGlzIGEgbGF6eSB6ZXJvLWNvbW0gYnVmZmVyIHdoaWNoIHdlIGZpbGwgdXAgb24gZGVtYW5kLlxuICovXG5jbGFzcyBaZXJvQ29tbSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuYnl0ZXMgPSBuZXcgVWludDhBcnJheShNQVhfTEVWRUwgKiBOb2RlLlNpemUpXG4gICAgdGhpcy5ieXRlcy5zZXQoTm9kZS5lbXB0eSgpLCAwKVxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIHRoaXMubm9kZSA9IE5vZGUuZW1wdHkoKVxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIHRoaXMubGVuZ3RoID0gTm9kZS5TaXplXG4gIH1cbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydFxuICAgKiBAcGFyYW0ge251bWJlcn0gZW5kXG4gICAqL1xuICBzbGljZShzdGFydCwgZW5kKSB7XG4gICAgd2hpbGUgKHRoaXMubGVuZ3RoIDwgZW5kKSB7XG4gICAgICB0aGlzLm5vZGUgPSBQcm9vZi5jb21wdXRlTm9kZSh0aGlzLm5vZGUsIHRoaXMubm9kZSlcbiAgICAgIHRoaXMuYnl0ZXMuc2V0KHRoaXMubm9kZSwgdGhpcy5sZW5ndGgpXG4gICAgICB0aGlzLmxlbmd0aCArPSBOb2RlLlNpemVcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5ieXRlcy5zdWJhcnJheShzdGFydCwgZW5kKVxuICB9XG59XG5jb25zdCBaRVJPX0NPTU0gPSBuZXcgWmVyb0NvbW0oKVxuXG4vKipcbiAqIHNpbXBsZSBhY2Nlc3MgYnkgbGV2ZWwsIG9ubHkgbGV2ZWxzIGJldHdlZW4gYDBgIGFuZCBgNjRgIGluY2x1c2l2ZSBhcmVcbiAqIGF2YWlsYWJsZSBvdGhlcndpc2UgdGhyb3dzIGFuIGVycm9yLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZXZlbFxuICogQHJldHVybnMge0FQSS5NZXJrbGVUcmVlTm9kZX1cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21MZXZlbCA9IChsZXZlbCkgPT4ge1xuICBpZiAobGV2ZWwgPCAwIHx8IGxldmVsID49IE1BWF9MRVZFTCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBPbmx5IGxldmVscyBiZXR3ZWVuIDAgYW5kICR7TUFYX0xFVkVMIC0gMX0gaW5jbHVzaXZlIGFyZSBhdmFpbGFibGVgXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIFpFUk9fQ09NTS5zbGljZShOb2RlLlNpemUgKiBsZXZlbCwgTm9kZS5TaXplICogKGxldmVsICsgMSkpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/data-segment/src/zero-comm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@web3-storage/did-mailto/dist/src/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   email: () => (/* binding */ email),\n/* harmony export */   fromEmail: () => (/* binding */ fromEmail),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   toEmail: () => (/* binding */ toEmail)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/types.js\");\n\n/**\n * create a did:mailto from an email address\n *\n * @param {import(\"./types.js\").EmailAddress} email\n * @returns {import(\"./types.js\").DidMailto}\n */\nfunction fromEmail(email) {\n    const { domain, local } = parseEmail(email);\n    const did = /** @type {const} */ (`did:mailto:${encodeURIComponent(domain)}:${encodeURIComponent(local)}`);\n    return did;\n}\n/**\n * @param {import(\"./types.js\").DidMailto} did\n * @returns {import(\"./types.js\").EmailAddress}\n */\nfunction toEmail(did) {\n    const parts = did.split(':');\n    if (parts[1] !== 'mailto') {\n        throw new Error(`DID ${did} is not a mailto did.`);\n    }\n    return `${decodeURIComponent(parts[3])}@${decodeURIComponent(parts[2])}`;\n}\n/**\n * given a string, if it is an EmailAddress, return it, otherwise throw an error.\n * Use this to parse string input to `EmailAddress` type to pass to `fromEmail` (when needed).\n * This is not meant to be a general RFC5322 (et al) email address validator, which would be more expensive.\n *\n * @param {string} input\n * @returns {import(\"./types.js\").EmailAddress}\n */\nfunction email(input) {\n    const { domain, local } = parseEmail(input);\n    /** @type {import(\"./types.js\").EmailAddress} */\n    const emailAddress = `${local}@${domain}`;\n    return emailAddress;\n}\n/**\n * parse a did mailto from a string\n *\n * @param {string} input\n * @returns {import(\"./types.js\").DidMailto}\n */\nfunction fromString(input) {\n    const colonParts = input.split(':');\n    if (colonParts.length !== 4) {\n        throw new TypeError(`expected did:mailto to have 4 colon-delimited segments, but got ${colonParts.length}`);\n    }\n    const [domain, local] = [colonParts[2], colonParts[3]];\n    return `did:mailto:${domain}:${local}`;\n}\n/**\n * @param {string} email\n */\nfunction parseEmail(email) {\n    const atParts = email.split('@');\n    if (atParts.length < 2) {\n        throw new TypeError(`expected at least 2 @-delimtied segments, but got ${atParts.length}`);\n    }\n    const domain = atParts.at(-1) ?? '';\n    const local = atParts.slice(0, -1).join('@');\n    return { domain, local };\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kaWQtbWFpbHRvL2Rpc3Qvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsbUNBQW1DO0FBQzlDLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxnQkFBZ0I7QUFDNUIsMkJBQTJCLE9BQU8sa0JBQWtCLDJCQUEyQixHQUFHLDBCQUEwQjtBQUM1RztBQUNBO0FBQ0E7QUFDQSxXQUFXLGdDQUFnQztBQUMzQyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQSwrQkFBK0IsS0FBSztBQUNwQztBQUNBLGNBQWMsNkJBQTZCLEdBQUcsNkJBQTZCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksZ0JBQWdCO0FBQzVCLGVBQWUsbUNBQW1DO0FBQ2xELDRCQUE0QixNQUFNLEdBQUcsT0FBTztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLCtGQUErRixrQkFBa0I7QUFDakg7QUFDQTtBQUNBLHlCQUF5QixPQUFPLEdBQUcsTUFBTTtBQUN6QztBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGLGVBQWU7QUFDaEc7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2RpZC1tYWlsdG8vZGlzdC9zcmMvaW5kZXguanM/NzAwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL3R5cGVzLmpzJztcbi8qKlxuICogY3JlYXRlIGEgZGlkOm1haWx0byBmcm9tIGFuIGVtYWlsIGFkZHJlc3NcbiAqXG4gKiBAcGFyYW0ge2ltcG9ydChcIi4vdHlwZXMuanNcIikuRW1haWxBZGRyZXNzfSBlbWFpbFxuICogQHJldHVybnMge2ltcG9ydChcIi4vdHlwZXMuanNcIikuRGlkTWFpbHRvfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUVtYWlsKGVtYWlsKSB7XG4gICAgY29uc3QgeyBkb21haW4sIGxvY2FsIH0gPSBwYXJzZUVtYWlsKGVtYWlsKTtcbiAgICBjb25zdCBkaWQgPSAvKiogQHR5cGUge2NvbnN0fSAqLyAoYGRpZDptYWlsdG86JHtlbmNvZGVVUklDb21wb25lbnQoZG9tYWluKX06JHtlbmNvZGVVUklDb21wb25lbnQobG9jYWwpfWApO1xuICAgIHJldHVybiBkaWQ7XG59XG4vKipcbiAqIEBwYXJhbSB7aW1wb3J0KFwiLi90eXBlcy5qc1wiKS5EaWRNYWlsdG99IGRpZFxuICogQHJldHVybnMge2ltcG9ydChcIi4vdHlwZXMuanNcIikuRW1haWxBZGRyZXNzfVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9FbWFpbChkaWQpIHtcbiAgICBjb25zdCBwYXJ0cyA9IGRpZC5zcGxpdCgnOicpO1xuICAgIGlmIChwYXJ0c1sxXSAhPT0gJ21haWx0bycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBESUQgJHtkaWR9IGlzIG5vdCBhIG1haWx0byBkaWQuYCk7XG4gICAgfVxuICAgIHJldHVybiBgJHtkZWNvZGVVUklDb21wb25lbnQocGFydHNbM10pfUAke2RlY29kZVVSSUNvbXBvbmVudChwYXJ0c1syXSl9YDtcbn1cbi8qKlxuICogZ2l2ZW4gYSBzdHJpbmcsIGlmIGl0IGlzIGFuIEVtYWlsQWRkcmVzcywgcmV0dXJuIGl0LCBvdGhlcndpc2UgdGhyb3cgYW4gZXJyb3IuXG4gKiBVc2UgdGhpcyB0byBwYXJzZSBzdHJpbmcgaW5wdXQgdG8gYEVtYWlsQWRkcmVzc2AgdHlwZSB0byBwYXNzIHRvIGBmcm9tRW1haWxgICh3aGVuIG5lZWRlZCkuXG4gKiBUaGlzIGlzIG5vdCBtZWFudCB0byBiZSBhIGdlbmVyYWwgUkZDNTMyMiAoZXQgYWwpIGVtYWlsIGFkZHJlc3MgdmFsaWRhdG9yLCB3aGljaCB3b3VsZCBiZSBtb3JlIGV4cGVuc2l2ZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gaW5wdXRcbiAqIEByZXR1cm5zIHtpbXBvcnQoXCIuL3R5cGVzLmpzXCIpLkVtYWlsQWRkcmVzc31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVtYWlsKGlucHV0KSB7XG4gICAgY29uc3QgeyBkb21haW4sIGxvY2FsIH0gPSBwYXJzZUVtYWlsKGlucHV0KTtcbiAgICAvKiogQHR5cGUge2ltcG9ydChcIi4vdHlwZXMuanNcIikuRW1haWxBZGRyZXNzfSAqL1xuICAgIGNvbnN0IGVtYWlsQWRkcmVzcyA9IGAke2xvY2FsfUAke2RvbWFpbn1gO1xuICAgIHJldHVybiBlbWFpbEFkZHJlc3M7XG59XG4vKipcbiAqIHBhcnNlIGEgZGlkIG1haWx0byBmcm9tIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGlucHV0XG4gKiBAcmV0dXJucyB7aW1wb3J0KFwiLi90eXBlcy5qc1wiKS5EaWRNYWlsdG99XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU3RyaW5nKGlucHV0KSB7XG4gICAgY29uc3QgY29sb25QYXJ0cyA9IGlucHV0LnNwbGl0KCc6Jyk7XG4gICAgaWYgKGNvbG9uUGFydHMubGVuZ3RoICE9PSA0KSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYGV4cGVjdGVkIGRpZDptYWlsdG8gdG8gaGF2ZSA0IGNvbG9uLWRlbGltaXRlZCBzZWdtZW50cywgYnV0IGdvdCAke2NvbG9uUGFydHMubGVuZ3RofWApO1xuICAgIH1cbiAgICBjb25zdCBbZG9tYWluLCBsb2NhbF0gPSBbY29sb25QYXJ0c1syXSwgY29sb25QYXJ0c1szXV07XG4gICAgcmV0dXJuIGBkaWQ6bWFpbHRvOiR7ZG9tYWlufToke2xvY2FsfWA7XG59XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBlbWFpbFxuICovXG5mdW5jdGlvbiBwYXJzZUVtYWlsKGVtYWlsKSB7XG4gICAgY29uc3QgYXRQYXJ0cyA9IGVtYWlsLnNwbGl0KCdAJyk7XG4gICAgaWYgKGF0UGFydHMubGVuZ3RoIDwgMikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBleHBlY3RlZCBhdCBsZWFzdCAyIEAtZGVsaW10aWVkIHNlZ21lbnRzLCBidXQgZ290ICR7YXRQYXJ0cy5sZW5ndGh9YCk7XG4gICAgfVxuICAgIGNvbnN0IGRvbWFpbiA9IGF0UGFydHMuYXQoLTEpID8/ICcnO1xuICAgIGNvbnN0IGxvY2FsID0gYXRQYXJ0cy5zbGljZSgwLCAtMSkuam9pbignQCcpO1xuICAgIHJldHVybiB7IGRvbWFpbiwgbG9jYWwgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@web3-storage/did-mailto/dist/src/types.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kaWQtbWFpbHRvL2Rpc3Qvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9kaWQtbWFpbHRvL2Rpc3Qvc3JjL3R5cGVzLmpzP2M4MjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/aggregator.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3-storage/filecoin-client/dist/src/aggregator.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connection: () => (/* binding */ connection),\n/* harmony export */   pieceAccept: () => (/* binding */ pieceAccept),\n/* harmony export */   pieceOffer: () => (/* binding */ pieceOffer)\n/* harmony export */ });\n/* harmony import */ var _ucanto_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/client */ \"(ssr)/./node_modules/@ucanto/client/src/lib.js\");\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_filecoin_aggregator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/capabilities/filecoin/aggregator */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/aggregator.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./service.js */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/service.js\");\n\n\n\n\n/**\n * @typedef {import('./types.js').AggregatorService} AggregatorService\n * @typedef {import('@ucanto/interface').ConnectionView<AggregatorService>} ConnectionView\n */\n/** @type {ConnectionView} */\nconst connection = (0,_ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect)({\n    id: _service_js__WEBPACK_IMPORTED_MODULE_3__.services.AGGREGATOR.principal,\n    codec: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.CAR.outbound,\n    channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.HTTP.open({\n        url: _service_js__WEBPACK_IMPORTED_MODULE_3__.services.AGGREGATOR.url,\n        method: 'POST',\n    }),\n});\n/**\n * The `piece/offer` task can be executed to request that a piece be aggregated\n * for inclusion in an upcoming an Filecoin deal. It issues a signed receipt\n * of the execution result. It is _also_ an effect linked from successful\n * execution of a `filecoin/submit` task.\n *\n * A receipt for successful execution will contain an effect, linking to a\n * `piece/accept` task that will complete asynchronously.\n *\n * Otherwise the task is failed and the receipt will contain details of the\n * reason behind the failure.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-filecoin.md#pieceoffer\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('@web3-storage/data-segment').PieceLink} piece\n * @param {string} group\n * @param {import('./types.js').RequestOptions<AggregatorService>} [options]\n */\nasync function pieceOffer({ issuer, with: resource, proofs, audience }, piece, group, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const invocation = _web3_storage_capabilities_filecoin_aggregator__WEBPACK_IMPORTED_MODULE_2__.pieceOffer.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.services.AGGREGATOR.principal,\n        with: resource,\n        nb: {\n            piece,\n            group,\n        },\n        proofs,\n        expiration: Infinity,\n    });\n    return await invocation.execute(conn);\n}\n/**\n * The `piece/accept` task is an _effect_ linked from successful execution of a\n * `piece/offer` task, it is executed to issue a receipt for the success or\n * failure of the task.\n *\n * A receipt for successful execution indicates that the offered piece was\n * included in an aggregate. In this case the receipt will contain the\n * aggregate piece CID and a proof that the piece was included in the\n * aggregate. It also includes an effect, linking to an `aggregate/offer` task\n * that will complete asynchronously.\n *\n * Otherwise the task is failed and the receipt will contain details of the\n * reason behind the failure.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-filecoin.md#pieceaccept\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('@web3-storage/data-segment').PieceLink} piece\n * @param {string} group\n * @param {import('./types.js').RequestOptions<AggregatorService>} [options]\n */\nasync function pieceAccept({ issuer, with: resource, proofs, audience }, piece, group, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const invocation = _web3_storage_capabilities_filecoin_aggregator__WEBPACK_IMPORTED_MODULE_2__.pieceAccept.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.services.AGGREGATOR.principal,\n        with: resource,\n        nb: {\n            piece,\n            group,\n        },\n        proofs,\n        expiration: Infinity,\n    });\n    return await invocation.execute(conn);\n}\n//# sourceMappingURL=aggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9maWxlY29pbi1jbGllbnQvZGlzdC9zcmMvYWdncmVnYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXlDO0FBQ0s7QUFDK0I7QUFDckM7QUFDeEM7QUFDQSxhQUFhLHdDQUF3QztBQUNyRCxhQUFhLCtEQUErRDtBQUM1RTtBQUNBLFdBQVcsZ0JBQWdCO0FBQ3BCLG1CQUFtQix1REFBTztBQUNqQyxRQUFRLGlEQUFRO0FBQ2hCLFdBQVcsMkRBQVk7QUFDdkIsYUFBYSx3REFBUztBQUN0QixhQUFhLGlEQUFRO0FBQ3JCO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1Q0FBdUM7QUFDbEQsV0FBVyxnREFBZ0Q7QUFDM0QsV0FBVyxRQUFRO0FBQ25CLFdBQVcsd0RBQXdEO0FBQ25FO0FBQ08sNEJBQTRCLDBDQUEwQyw0QkFBNEI7QUFDekc7QUFDQTtBQUNBLHVCQUF1QixzRkFBcUI7QUFDNUM7QUFDQTtBQUNBLDhCQUE4QixpREFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdUNBQXVDO0FBQ2xELFdBQVcsZ0RBQWdEO0FBQzNELFdBQVcsUUFBUTtBQUNuQixXQUFXLHdEQUF3RDtBQUNuRTtBQUNPLDZCQUE2QiwwQ0FBMEMsNEJBQTRCO0FBQzFHO0FBQ0E7QUFDQSx1QkFBdUIsdUZBQXNCO0FBQzdDO0FBQ0E7QUFDQSw4QkFBOEIsaURBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2ZpbGVjb2luLWNsaWVudC9kaXN0L3NyYy9hZ2dyZWdhdG9yLmpzPzhiNDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ0B1Y2FudG8vY2xpZW50JztcbmltcG9ydCB7IENBUiwgSFRUUCB9IGZyb20gJ0B1Y2FudG8vdHJhbnNwb3J0JztcbmltcG9ydCAqIGFzIEFnZ3JlZ2F0b3IgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvZmlsZWNvaW4vYWdncmVnYXRvcic7XG5pbXBvcnQgeyBzZXJ2aWNlcyB9IGZyb20gJy4vc2VydmljZS5qcyc7XG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5BZ2dyZWdhdG9yU2VydmljZX0gQWdncmVnYXRvclNlcnZpY2VcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ0B1Y2FudG8vaW50ZXJmYWNlJykuQ29ubmVjdGlvblZpZXc8QWdncmVnYXRvclNlcnZpY2U+fSBDb25uZWN0aW9uVmlld1xuICovXG4vKiogQHR5cGUge0Nvbm5lY3Rpb25WaWV3fSAqL1xuZXhwb3J0IGNvbnN0IGNvbm5lY3Rpb24gPSBjb25uZWN0KHtcbiAgICBpZDogc2VydmljZXMuQUdHUkVHQVRPUi5wcmluY2lwYWwsXG4gICAgY29kZWM6IENBUi5vdXRib3VuZCxcbiAgICBjaGFubmVsOiBIVFRQLm9wZW4oe1xuICAgICAgICB1cmw6IHNlcnZpY2VzLkFHR1JFR0FUT1IudXJsLFxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICB9KSxcbn0pO1xuLyoqXG4gKiBUaGUgYHBpZWNlL29mZmVyYCB0YXNrIGNhbiBiZSBleGVjdXRlZCB0byByZXF1ZXN0IHRoYXQgYSBwaWVjZSBiZSBhZ2dyZWdhdGVkXG4gKiBmb3IgaW5jbHVzaW9uIGluIGFuIHVwY29taW5nIGFuIEZpbGVjb2luIGRlYWwuIEl0IGlzc3VlcyBhIHNpZ25lZCByZWNlaXB0XG4gKiBvZiB0aGUgZXhlY3V0aW9uIHJlc3VsdC4gSXQgaXMgX2Fsc29fIGFuIGVmZmVjdCBsaW5rZWQgZnJvbSBzdWNjZXNzZnVsXG4gKiBleGVjdXRpb24gb2YgYSBgZmlsZWNvaW4vc3VibWl0YCB0YXNrLlxuICpcbiAqIEEgcmVjZWlwdCBmb3Igc3VjY2Vzc2Z1bCBleGVjdXRpb24gd2lsbCBjb250YWluIGFuIGVmZmVjdCwgbGlua2luZyB0byBhXG4gKiBgcGllY2UvYWNjZXB0YCB0YXNrIHRoYXQgd2lsbCBjb21wbGV0ZSBhc3luY2hyb25vdXNseS5cbiAqXG4gKiBPdGhlcndpc2UgdGhlIHRhc2sgaXMgZmFpbGVkIGFuZCB0aGUgcmVjZWlwdCB3aWxsIGNvbnRhaW4gZGV0YWlscyBvZiB0aGVcbiAqIHJlYXNvbiBiZWhpbmQgdGhlIGZhaWx1cmUuXG4gKlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vc3RvcmFjaGEvc3BlY3MvYmxvYi9tYWluL3czLWZpbGVjb2luLm1kI3BpZWNlb2ZmZXJcbiAqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi90eXBlcy5qcycpLkludm9jYXRpb25Db25maWd9IGNvbmYgLSBDb25maWd1cmF0aW9uXG4gKiBAcGFyYW0ge2ltcG9ydCgnQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQnKS5QaWVjZUxpbmt9IHBpZWNlXG4gKiBAcGFyYW0ge3N0cmluZ30gZ3JvdXBcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuUmVxdWVzdE9wdGlvbnM8QWdncmVnYXRvclNlcnZpY2U+fSBbb3B0aW9uc11cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBpZWNlT2ZmZXIoeyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH0sIHBpZWNlLCBncm91cCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICBjb25zdCBjb25uID0gb3B0aW9ucy5jb25uZWN0aW9uID8/IGNvbm5lY3Rpb247XG4gICAgY29uc3QgaW52b2NhdGlvbiA9IEFnZ3JlZ2F0b3IucGllY2VPZmZlci5pbnZva2Uoe1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlcy5BR0dSRUdBVE9SLnByaW5jaXBhbCxcbiAgICAgICAgd2l0aDogcmVzb3VyY2UsXG4gICAgICAgIG5iOiB7XG4gICAgICAgICAgICBwaWVjZSxcbiAgICAgICAgICAgIGdyb3VwLFxuICAgICAgICB9LFxuICAgICAgICBwcm9vZnMsXG4gICAgICAgIGV4cGlyYXRpb246IEluZmluaXR5LFxuICAgIH0pO1xuICAgIHJldHVybiBhd2FpdCBpbnZvY2F0aW9uLmV4ZWN1dGUoY29ubik7XG59XG4vKipcbiAqIFRoZSBgcGllY2UvYWNjZXB0YCB0YXNrIGlzIGFuIF9lZmZlY3RfIGxpbmtlZCBmcm9tIHN1Y2Nlc3NmdWwgZXhlY3V0aW9uIG9mIGFcbiAqIGBwaWVjZS9vZmZlcmAgdGFzaywgaXQgaXMgZXhlY3V0ZWQgdG8gaXNzdWUgYSByZWNlaXB0IGZvciB0aGUgc3VjY2VzcyBvclxuICogZmFpbHVyZSBvZiB0aGUgdGFzay5cbiAqXG4gKiBBIHJlY2VpcHQgZm9yIHN1Y2Nlc3NmdWwgZXhlY3V0aW9uIGluZGljYXRlcyB0aGF0IHRoZSBvZmZlcmVkIHBpZWNlIHdhc1xuICogaW5jbHVkZWQgaW4gYW4gYWdncmVnYXRlLiBJbiB0aGlzIGNhc2UgdGhlIHJlY2VpcHQgd2lsbCBjb250YWluIHRoZVxuICogYWdncmVnYXRlIHBpZWNlIENJRCBhbmQgYSBwcm9vZiB0aGF0IHRoZSBwaWVjZSB3YXMgaW5jbHVkZWQgaW4gdGhlXG4gKiBhZ2dyZWdhdGUuIEl0IGFsc28gaW5jbHVkZXMgYW4gZWZmZWN0LCBsaW5raW5nIHRvIGFuIGBhZ2dyZWdhdGUvb2ZmZXJgIHRhc2tcbiAqIHRoYXQgd2lsbCBjb21wbGV0ZSBhc3luY2hyb25vdXNseS5cbiAqXG4gKiBPdGhlcndpc2UgdGhlIHRhc2sgaXMgZmFpbGVkIGFuZCB0aGUgcmVjZWlwdCB3aWxsIGNvbnRhaW4gZGV0YWlscyBvZiB0aGVcbiAqIHJlYXNvbiBiZWhpbmQgdGhlIGZhaWx1cmUuXG4gKlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vc3RvcmFjaGEvc3BlY3MvYmxvYi9tYWluL3czLWZpbGVjb2luLm1kI3BpZWNlYWNjZXB0XG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5JbnZvY2F0aW9uQ29uZmlnfSBjb25mIC0gQ29uZmlndXJhdGlvblxuICogQHBhcmFtIHtpbXBvcnQoJ0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50JykuUGllY2VMaW5rfSBwaWVjZVxuICogQHBhcmFtIHtzdHJpbmd9IGdyb3VwXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zPEFnZ3JlZ2F0b3JTZXJ2aWNlPn0gW29wdGlvbnNdXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwaWVjZUFjY2VwdCh7IGlzc3Vlciwgd2l0aDogcmVzb3VyY2UsIHByb29mcywgYXVkaWVuY2UgfSwgcGllY2UsIGdyb3VwLCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCBpbnZvY2F0aW9uID0gQWdncmVnYXRvci5waWVjZUFjY2VwdC5pbnZva2Uoe1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlcy5BR0dSRUdBVE9SLnByaW5jaXBhbCxcbiAgICAgICAgd2l0aDogcmVzb3VyY2UsXG4gICAgICAgIG5iOiB7XG4gICAgICAgICAgICBwaWVjZSxcbiAgICAgICAgICAgIGdyb3VwLFxuICAgICAgICB9LFxuICAgICAgICBwcm9vZnMsXG4gICAgICAgIGV4cGlyYXRpb246IEluZmluaXR5LFxuICAgIH0pO1xuICAgIHJldHVybiBhd2FpdCBpbnZvY2F0aW9uLmV4ZWN1dGUoY29ubik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2dyZWdhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/aggregator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/deal-tracker.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/filecoin-client/dist/src/deal-tracker.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connection: () => (/* binding */ connection),\n/* harmony export */   dealInfo: () => (/* binding */ dealInfo)\n/* harmony export */ });\n/* harmony import */ var _ucanto_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/client */ \"(ssr)/./node_modules/@ucanto/client/src/lib.js\");\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_filecoin_deal_tracker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/capabilities/filecoin/deal-tracker */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/deal-tracker.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./service.js */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/service.js\");\n\n\n\n\n/**\n * @typedef {import('./types.js').DealTrackerService} DealTrackerService\n * @typedef {import('@ucanto/interface').ConnectionView<DealTrackerService>} ConnectionView\n */\n/** @type {ConnectionView} */\nconst connection = (0,_ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect)({\n    id: _service_js__WEBPACK_IMPORTED_MODULE_3__.services.DEAL_TRACKER.principal,\n    codec: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.CAR.outbound,\n    channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.HTTP.open({\n        url: _service_js__WEBPACK_IMPORTED_MODULE_3__.services.DEAL_TRACKER.url,\n        method: 'POST',\n    }),\n});\n/**\n * The `deal/info` task can be executed to request deal information for a given\n * piece. It issues a signed receipt of the execution result.\n *\n * A receipt for successful execution will contain details of deals the\n * provided piece CID is currently active in.\n *\n * Otherwise the task is failed and the receipt will contain details of the\n * reason behind the failure.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-filecoin.md#dealinfo\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('@web3-storage/data-segment').PieceLink} piece\n * @param {import('./types.js').RequestOptions<DealTrackerService>} [options]\n */\nasync function dealInfo({ issuer, with: resource, proofs, audience }, piece, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const invocation = _web3_storage_capabilities_filecoin_deal_tracker__WEBPACK_IMPORTED_MODULE_2__.dealInfo.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.services.DEAL_TRACKER.principal,\n        with: resource,\n        nb: {\n            piece,\n        },\n        proofs,\n    });\n    return await invocation.execute(conn);\n}\n//# sourceMappingURL=deal-tracker.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9maWxlY29pbi1jbGllbnQvZGlzdC9zcmMvZGVhbC10cmFja2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF5QztBQUNLO0FBQ2tDO0FBQ3hDO0FBQ3hDO0FBQ0EsYUFBYSx5Q0FBeUM7QUFDdEQsYUFBYSxnRUFBZ0U7QUFDN0U7QUFDQSxXQUFXLGdCQUFnQjtBQUNwQixtQkFBbUIsdURBQU87QUFDakMsUUFBUSxpREFBUTtBQUNoQixXQUFXLDJEQUFZO0FBQ3ZCLGFBQWEsd0RBQVM7QUFDdEIsYUFBYSxpREFBUTtBQUNyQjtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1Q0FBdUM7QUFDbEQsV0FBVyxnREFBZ0Q7QUFDM0QsV0FBVyx5REFBeUQ7QUFDcEU7QUFDTywwQkFBMEIsMENBQTBDLHFCQUFxQjtBQUNoRztBQUNBO0FBQ0EsdUJBQXVCLHNGQUFvQjtBQUMzQztBQUNBO0FBQ0EsOEJBQThCLGlEQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2ZpbGVjb2luLWNsaWVudC9kaXN0L3NyYy9kZWFsLXRyYWNrZXIuanM/OGY2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAnQHVjYW50by9jbGllbnQnO1xuaW1wb3J0IHsgQ0FSLCBIVFRQIH0gZnJvbSAnQHVjYW50by90cmFuc3BvcnQnO1xuaW1wb3J0ICogYXMgRGVhbFRyYWNrZXIgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvZmlsZWNvaW4vZGVhbC10cmFja2VyJztcbmltcG9ydCB7IHNlcnZpY2VzIH0gZnJvbSAnLi9zZXJ2aWNlLmpzJztcbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi90eXBlcy5qcycpLkRlYWxUcmFja2VyU2VydmljZX0gRGVhbFRyYWNrZXJTZXJ2aWNlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdAdWNhbnRvL2ludGVyZmFjZScpLkNvbm5lY3Rpb25WaWV3PERlYWxUcmFja2VyU2VydmljZT59IENvbm5lY3Rpb25WaWV3XG4gKi9cbi8qKiBAdHlwZSB7Q29ubmVjdGlvblZpZXd9ICovXG5leHBvcnQgY29uc3QgY29ubmVjdGlvbiA9IGNvbm5lY3Qoe1xuICAgIGlkOiBzZXJ2aWNlcy5ERUFMX1RSQUNLRVIucHJpbmNpcGFsLFxuICAgIGNvZGVjOiBDQVIub3V0Ym91bmQsXG4gICAgY2hhbm5lbDogSFRUUC5vcGVuKHtcbiAgICAgICAgdXJsOiBzZXJ2aWNlcy5ERUFMX1RSQUNLRVIudXJsLFxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICB9KSxcbn0pO1xuLyoqXG4gKiBUaGUgYGRlYWwvaW5mb2AgdGFzayBjYW4gYmUgZXhlY3V0ZWQgdG8gcmVxdWVzdCBkZWFsIGluZm9ybWF0aW9uIGZvciBhIGdpdmVuXG4gKiBwaWVjZS4gSXQgaXNzdWVzIGEgc2lnbmVkIHJlY2VpcHQgb2YgdGhlIGV4ZWN1dGlvbiByZXN1bHQuXG4gKlxuICogQSByZWNlaXB0IGZvciBzdWNjZXNzZnVsIGV4ZWN1dGlvbiB3aWxsIGNvbnRhaW4gZGV0YWlscyBvZiBkZWFscyB0aGVcbiAqIHByb3ZpZGVkIHBpZWNlIENJRCBpcyBjdXJyZW50bHkgYWN0aXZlIGluLlxuICpcbiAqIE90aGVyd2lzZSB0aGUgdGFzayBpcyBmYWlsZWQgYW5kIHRoZSByZWNlaXB0IHdpbGwgY29udGFpbiBkZXRhaWxzIG9mIHRoZVxuICogcmVhc29uIGJlaGluZCB0aGUgZmFpbHVyZS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zdG9yYWNoYS9zcGVjcy9ibG9iL21haW4vdzMtZmlsZWNvaW4ubWQjZGVhbGluZm9cbiAqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi90eXBlcy5qcycpLkludm9jYXRpb25Db25maWd9IGNvbmYgLSBDb25maWd1cmF0aW9uXG4gKiBAcGFyYW0ge2ltcG9ydCgnQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQnKS5QaWVjZUxpbmt9IHBpZWNlXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zPERlYWxUcmFja2VyU2VydmljZT59IFtvcHRpb25zXVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVhbEluZm8oeyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH0sIHBpZWNlLCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCBpbnZvY2F0aW9uID0gRGVhbFRyYWNrZXIuZGVhbEluZm8uaW52b2tlKHtcbiAgICAgICAgaXNzdWVyLFxuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICBhdWRpZW5jZTogYXVkaWVuY2UgPz8gc2VydmljZXMuREVBTF9UUkFDS0VSLnByaW5jaXBhbCxcbiAgICAgICAgd2l0aDogcmVzb3VyY2UsXG4gICAgICAgIG5iOiB7XG4gICAgICAgICAgICBwaWVjZSxcbiAgICAgICAgfSxcbiAgICAgICAgcHJvb2ZzLFxuICAgIH0pO1xuICAgIHJldHVybiBhd2FpdCBpbnZvY2F0aW9uLmV4ZWN1dGUoY29ubik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWFsLXRyYWNrZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/deal-tracker.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/dealer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/filecoin-client/dist/src/dealer.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aggregateAccept: () => (/* binding */ aggregateAccept),\n/* harmony export */   aggregateOffer: () => (/* binding */ aggregateOffer),\n/* harmony export */   connection: () => (/* binding */ connection)\n/* harmony export */ });\n/* harmony import */ var _ucanto_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/client */ \"(ssr)/./node_modules/@ucanto/client/src/lib.js\");\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_filecoin_dealer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3-storage/capabilities/filecoin/dealer */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/dealer.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./service.js */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/service.js\");\n\n\n\n\n\n/**\n * @typedef {import('./types.js').DealerService} DealerService\n * @typedef {import('@ucanto/interface').ConnectionView<DealerService>} ConnectionView\n */\n/** @type {ConnectionView} */\nconst connection = (0,_ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect)({\n    id: _service_js__WEBPACK_IMPORTED_MODULE_4__.services.DEALER.principal,\n    codec: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.CAR.outbound,\n    channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.HTTP.open({\n        url: _service_js__WEBPACK_IMPORTED_MODULE_4__.services.DEALER.url,\n        method: 'POST',\n    }),\n});\n/**\n * The `aggregate/offer` task can be executed to request an aggregate be added\n * to a deal with a Storage Provider. It issues a signed receipt of the\n * execution result. It is _also_ an effect linked from successful execution of\n * a `piece/accept` task.\n *\n * A receipt for successful execution will contain an effect, linking to an\n * `aggregate/accept` task that will complete asynchronously.\n *\n * Otherwise the task is failed and the receipt will contain details of the\n * reason behind the failure.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-filecoin.md#aggregateoffer\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('@web3-storage/data-segment').PieceLink} aggregate\n * @param {import('@web3-storage/data-segment').PieceLink[]} pieces\n * @param {import('./types.js').RequestOptions<DealerService>} [options]\n */\nasync function aggregateOffer({ issuer, with: resource, proofs, audience }, aggregate, pieces, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const block = await _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.CBOR.write(pieces);\n    const invocation = _web3_storage_capabilities_filecoin_dealer__WEBPACK_IMPORTED_MODULE_3__.aggregateOffer.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_4__.services.AGGREGATOR.principal,\n        with: resource,\n        nb: {\n            aggregate,\n            pieces: block.cid,\n        },\n        proofs,\n        expiration: Infinity,\n    });\n    invocation.attach(block);\n    return await invocation.execute(conn);\n}\n/**\n * The `aggregate/accept` task is an _effect_ linked from successful execution\n * of a `aggregate/offer` task, it is executed to issue a receipt for the\n * success or failure of the task.\n *\n * A receipt for successful execution indicates that an aggregate has been\n * accepted for inclusion in a Filecoin deal. In this case the receipt will\n * contain proofs that the piece was included in an aggregate and deal.\n *\n * Otherwise the task is failed and the receipt will contain details of the\n * reason behind the failure, as well as multiple effects, linking to\n * `piece/offer` tasks that will retry _valid_ pieces and complete\n * asynchronously.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-filecoin.md#aggregateaccept\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('@web3-storage/data-segment').PieceLink} aggregate\n * @param {import('@ucanto/interface').Link} pieces\n * @param {import('./types.js').RequestOptions<DealerService>} [options]\n */\nasync function aggregateAccept({ issuer, with: resource, proofs, audience }, aggregate, pieces, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const invocation = _web3_storage_capabilities_filecoin_dealer__WEBPACK_IMPORTED_MODULE_3__.aggregateAccept.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_4__.services.AGGREGATOR.principal,\n        with: resource,\n        nb: {\n            aggregate,\n            pieces,\n        },\n        proofs,\n        expiration: Infinity,\n    });\n    return await invocation.execute(conn);\n}\n//# sourceMappingURL=dealer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9maWxlY29pbi1jbGllbnQvZGlzdC9zcmMvZGVhbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXlDO0FBQ0s7QUFDVjtBQUNpQztBQUM3QjtBQUN4QztBQUNBLGFBQWEsb0NBQW9DO0FBQ2pELGFBQWEsMkRBQTJEO0FBQ3hFO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDcEIsbUJBQW1CLHVEQUFPO0FBQ2pDLFFBQVEsaURBQVE7QUFDaEIsV0FBVywyREFBWTtBQUN2QixhQUFhLHdEQUFTO0FBQ3RCLGFBQWEsaURBQVE7QUFDckI7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVDQUF1QztBQUNsRCxXQUFXLGdEQUFnRDtBQUMzRCxXQUFXLGtEQUFrRDtBQUM3RCxXQUFXLG9EQUFvRDtBQUMvRDtBQUNPLGdDQUFnQywwQ0FBMEMsaUNBQWlDO0FBQ2xIO0FBQ0E7QUFDQSx3QkFBd0Isb0RBQVU7QUFDbEMsdUJBQXVCLHNGQUFxQjtBQUM1QztBQUNBO0FBQ0EsOEJBQThCLGlEQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVDQUF1QztBQUNsRCxXQUFXLGdEQUFnRDtBQUMzRCxXQUFXLGtDQUFrQztBQUM3QyxXQUFXLG9EQUFvRDtBQUMvRDtBQUNPLGlDQUFpQywwQ0FBMEMsaUNBQWlDO0FBQ25IO0FBQ0E7QUFDQSx1QkFBdUIsdUZBQXNCO0FBQzdDO0FBQ0E7QUFDQSw4QkFBOEIsaURBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2ZpbGVjb2luLWNsaWVudC9kaXN0L3NyYy9kZWFsZXIuanM/NmNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAnQHVjYW50by9jbGllbnQnO1xuaW1wb3J0IHsgQ0FSLCBIVFRQIH0gZnJvbSAnQHVjYW50by90cmFuc3BvcnQnO1xuaW1wb3J0IHsgQ0JPUiB9IGZyb20gJ0B1Y2FudG8vY29yZSc7XG5pbXBvcnQgKiBhcyBEZWFsZXIgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvZmlsZWNvaW4vZGVhbGVyJztcbmltcG9ydCB7IHNlcnZpY2VzIH0gZnJvbSAnLi9zZXJ2aWNlLmpzJztcbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi90eXBlcy5qcycpLkRlYWxlclNlcnZpY2V9IERlYWxlclNlcnZpY2VcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ0B1Y2FudG8vaW50ZXJmYWNlJykuQ29ubmVjdGlvblZpZXc8RGVhbGVyU2VydmljZT59IENvbm5lY3Rpb25WaWV3XG4gKi9cbi8qKiBAdHlwZSB7Q29ubmVjdGlvblZpZXd9ICovXG5leHBvcnQgY29uc3QgY29ubmVjdGlvbiA9IGNvbm5lY3Qoe1xuICAgIGlkOiBzZXJ2aWNlcy5ERUFMRVIucHJpbmNpcGFsLFxuICAgIGNvZGVjOiBDQVIub3V0Ym91bmQsXG4gICAgY2hhbm5lbDogSFRUUC5vcGVuKHtcbiAgICAgICAgdXJsOiBzZXJ2aWNlcy5ERUFMRVIudXJsLFxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICB9KSxcbn0pO1xuLyoqXG4gKiBUaGUgYGFnZ3JlZ2F0ZS9vZmZlcmAgdGFzayBjYW4gYmUgZXhlY3V0ZWQgdG8gcmVxdWVzdCBhbiBhZ2dyZWdhdGUgYmUgYWRkZWRcbiAqIHRvIGEgZGVhbCB3aXRoIGEgU3RvcmFnZSBQcm92aWRlci4gSXQgaXNzdWVzIGEgc2lnbmVkIHJlY2VpcHQgb2YgdGhlXG4gKiBleGVjdXRpb24gcmVzdWx0LiBJdCBpcyBfYWxzb18gYW4gZWZmZWN0IGxpbmtlZCBmcm9tIHN1Y2Nlc3NmdWwgZXhlY3V0aW9uIG9mXG4gKiBhIGBwaWVjZS9hY2NlcHRgIHRhc2suXG4gKlxuICogQSByZWNlaXB0IGZvciBzdWNjZXNzZnVsIGV4ZWN1dGlvbiB3aWxsIGNvbnRhaW4gYW4gZWZmZWN0LCBsaW5raW5nIHRvIGFuXG4gKiBgYWdncmVnYXRlL2FjY2VwdGAgdGFzayB0aGF0IHdpbGwgY29tcGxldGUgYXN5bmNocm9ub3VzbHkuXG4gKlxuICogT3RoZXJ3aXNlIHRoZSB0YXNrIGlzIGZhaWxlZCBhbmQgdGhlIHJlY2VpcHQgd2lsbCBjb250YWluIGRldGFpbHMgb2YgdGhlXG4gKiByZWFzb24gYmVoaW5kIHRoZSBmYWlsdXJlLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3N0b3JhY2hhL3NwZWNzL2Jsb2IvbWFpbi93My1maWxlY29pbi5tZCNhZ2dyZWdhdGVvZmZlclxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuSW52b2NhdGlvbkNvbmZpZ30gY29uZiAtIENvbmZpZ3VyYXRpb25cbiAqIEBwYXJhbSB7aW1wb3J0KCdAd2ViMy1zdG9yYWdlL2RhdGEtc2VnbWVudCcpLlBpZWNlTGlua30gYWdncmVnYXRlXG4gKiBAcGFyYW0ge2ltcG9ydCgnQHdlYjMtc3RvcmFnZS9kYXRhLXNlZ21lbnQnKS5QaWVjZUxpbmtbXX0gcGllY2VzXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zPERlYWxlclNlcnZpY2U+fSBbb3B0aW9uc11cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFnZ3JlZ2F0ZU9mZmVyKHsgaXNzdWVyLCB3aXRoOiByZXNvdXJjZSwgcHJvb2ZzLCBhdWRpZW5jZSB9LCBhZ2dyZWdhdGUsIHBpZWNlcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICBjb25zdCBjb25uID0gb3B0aW9ucy5jb25uZWN0aW9uID8/IGNvbm5lY3Rpb247XG4gICAgY29uc3QgYmxvY2sgPSBhd2FpdCBDQk9SLndyaXRlKHBpZWNlcyk7XG4gICAgY29uc3QgaW52b2NhdGlvbiA9IERlYWxlci5hZ2dyZWdhdGVPZmZlci5pbnZva2Uoe1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlcy5BR0dSRUdBVE9SLnByaW5jaXBhbCxcbiAgICAgICAgd2l0aDogcmVzb3VyY2UsXG4gICAgICAgIG5iOiB7XG4gICAgICAgICAgICBhZ2dyZWdhdGUsXG4gICAgICAgICAgICBwaWVjZXM6IGJsb2NrLmNpZCxcbiAgICAgICAgfSxcbiAgICAgICAgcHJvb2ZzLFxuICAgICAgICBleHBpcmF0aW9uOiBJbmZpbml0eSxcbiAgICB9KTtcbiAgICBpbnZvY2F0aW9uLmF0dGFjaChibG9jayk7XG4gICAgcmV0dXJuIGF3YWl0IGludm9jYXRpb24uZXhlY3V0ZShjb25uKTtcbn1cbi8qKlxuICogVGhlIGBhZ2dyZWdhdGUvYWNjZXB0YCB0YXNrIGlzIGFuIF9lZmZlY3RfIGxpbmtlZCBmcm9tIHN1Y2Nlc3NmdWwgZXhlY3V0aW9uXG4gKiBvZiBhIGBhZ2dyZWdhdGUvb2ZmZXJgIHRhc2ssIGl0IGlzIGV4ZWN1dGVkIHRvIGlzc3VlIGEgcmVjZWlwdCBmb3IgdGhlXG4gKiBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIHRhc2suXG4gKlxuICogQSByZWNlaXB0IGZvciBzdWNjZXNzZnVsIGV4ZWN1dGlvbiBpbmRpY2F0ZXMgdGhhdCBhbiBhZ2dyZWdhdGUgaGFzIGJlZW5cbiAqIGFjY2VwdGVkIGZvciBpbmNsdXNpb24gaW4gYSBGaWxlY29pbiBkZWFsLiBJbiB0aGlzIGNhc2UgdGhlIHJlY2VpcHQgd2lsbFxuICogY29udGFpbiBwcm9vZnMgdGhhdCB0aGUgcGllY2Ugd2FzIGluY2x1ZGVkIGluIGFuIGFnZ3JlZ2F0ZSBhbmQgZGVhbC5cbiAqXG4gKiBPdGhlcndpc2UgdGhlIHRhc2sgaXMgZmFpbGVkIGFuZCB0aGUgcmVjZWlwdCB3aWxsIGNvbnRhaW4gZGV0YWlscyBvZiB0aGVcbiAqIHJlYXNvbiBiZWhpbmQgdGhlIGZhaWx1cmUsIGFzIHdlbGwgYXMgbXVsdGlwbGUgZWZmZWN0cywgbGlua2luZyB0b1xuICogYHBpZWNlL29mZmVyYCB0YXNrcyB0aGF0IHdpbGwgcmV0cnkgX3ZhbGlkXyBwaWVjZXMgYW5kIGNvbXBsZXRlXG4gKiBhc3luY2hyb25vdXNseS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zdG9yYWNoYS9zcGVjcy9ibG9iL21haW4vdzMtZmlsZWNvaW4ubWQjYWdncmVnYXRlYWNjZXB0XG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5JbnZvY2F0aW9uQ29uZmlnfSBjb25mIC0gQ29uZmlndXJhdGlvblxuICogQHBhcmFtIHtpbXBvcnQoJ0B3ZWIzLXN0b3JhZ2UvZGF0YS1zZWdtZW50JykuUGllY2VMaW5rfSBhZ2dyZWdhdGVcbiAqIEBwYXJhbSB7aW1wb3J0KCdAdWNhbnRvL2ludGVyZmFjZScpLkxpbmt9IHBpZWNlc1xuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5SZXF1ZXN0T3B0aW9uczxEZWFsZXJTZXJ2aWNlPn0gW29wdGlvbnNdXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZ2dyZWdhdGVBY2NlcHQoeyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH0sIGFnZ3JlZ2F0ZSwgcGllY2VzLCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCBpbnZvY2F0aW9uID0gRGVhbGVyLmFnZ3JlZ2F0ZUFjY2VwdC5pbnZva2Uoe1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlcy5BR0dSRUdBVE9SLnByaW5jaXBhbCxcbiAgICAgICAgd2l0aDogcmVzb3VyY2UsXG4gICAgICAgIG5iOiB7XG4gICAgICAgICAgICBhZ2dyZWdhdGUsXG4gICAgICAgICAgICBwaWVjZXMsXG4gICAgICAgIH0sXG4gICAgICAgIHByb29mcyxcbiAgICAgICAgZXhwaXJhdGlvbjogSW5maW5pdHksXG4gICAgfSk7XG4gICAgcmV0dXJuIGF3YWl0IGludm9jYXRpb24uZXhlY3V0ZShjb25uKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYWxlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/dealer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@web3-storage/filecoin-client/dist/src/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Aggregator: () => (/* reexport module object */ _aggregator_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   DealTracker: () => (/* reexport module object */ _deal_tracker_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   Dealer: () => (/* reexport module object */ _dealer_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   Storefront: () => (/* reexport module object */ _storefront_js__WEBPACK_IMPORTED_MODULE_0__)\n/* harmony export */ });\n/* harmony import */ var _storefront_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./storefront.js */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/storefront.js\");\n/* harmony import */ var _aggregator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aggregator.js */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/aggregator.js\");\n/* harmony import */ var _dealer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dealer.js */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/dealer.js\");\n/* harmony import */ var _deal_tracker_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./deal-tracker.js */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/deal-tracker.js\");\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9maWxlY29pbi1jbGllbnQvZGlzdC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEM7QUFDQTtBQUNSO0FBQ1c7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2ZpbGVjb2luLWNsaWVudC9kaXN0L3NyYy9pbmRleC5qcz81NWI1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGFzIFN0b3JlZnJvbnQgZnJvbSAnLi9zdG9yZWZyb250LmpzJztcbmV4cG9ydCAqIGFzIEFnZ3JlZ2F0b3IgZnJvbSAnLi9hZ2dyZWdhdG9yLmpzJztcbmV4cG9ydCAqIGFzIERlYWxlciBmcm9tICcuL2RlYWxlci5qcyc7XG5leHBvcnQgKiBhcyBEZWFsVHJhY2tlciBmcm9tICcuL2RlYWwtdHJhY2tlci5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/service.js":
/*!************************************************************************!*\
  !*** ./node_modules/@web3-storage/filecoin-client/dist/src/service.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   services: () => (/* binding */ services)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n\n/**\n * @typedef {import('./types.js').SERVICE} Service\n * @typedef {import('./types.js').ServiceConfig} ServiceConfig\n */\n/**\n * @type {Record<Service, ServiceConfig>}\n */\nconst services = {\n    STOREFRONT: {\n        url: new URL('https://up.web3.storage'),\n        principal: _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__.parse('did:web:web3.storage'),\n    },\n    AGGREGATOR: {\n        url: new URL('https://aggregator.web3.storage'),\n        principal: _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__.parse('did:web:web3.storage'),\n    },\n    DEALER: {\n        url: new URL('https://dealer.web3.storage'),\n        principal: _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__.parse('did:web:web3.storage'),\n    },\n    DEAL_TRACKER: {\n        url: new URL('https://tracker.web3.storage'),\n        principal: _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__.parse('did:web:web3.storage'),\n    },\n};\n//# sourceMappingURL=service.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS9maWxlY29pbi1jbGllbnQvZGlzdC9zcmMvc2VydmljZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUMxQztBQUNBLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsb0NBQW9DO0FBQ2pEO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDTztBQUNQO0FBQ0E7QUFDQSxtQkFBbUIscURBQVM7QUFDNUIsS0FBSztBQUNMO0FBQ0E7QUFDQSxtQkFBbUIscURBQVM7QUFDNUIsS0FBSztBQUNMO0FBQ0E7QUFDQSxtQkFBbUIscURBQVM7QUFDNUIsS0FBSztBQUNMO0FBQ0E7QUFDQSxtQkFBbUIscURBQVM7QUFDNUIsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL2ZpbGVjb2luLWNsaWVudC9kaXN0L3NyYy9zZXJ2aWNlLmpzPzQ3N2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRElEIGZyb20gJ0BpcGxkL2RhZy11Y2FuL2RpZCc7XG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5TRVJWSUNFfSBTZXJ2aWNlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL3R5cGVzLmpzJykuU2VydmljZUNvbmZpZ30gU2VydmljZUNvbmZpZ1xuICovXG4vKipcbiAqIEB0eXBlIHtSZWNvcmQ8U2VydmljZSwgU2VydmljZUNvbmZpZz59XG4gKi9cbmV4cG9ydCBjb25zdCBzZXJ2aWNlcyA9IHtcbiAgICBTVE9SRUZST05UOiB7XG4gICAgICAgIHVybDogbmV3IFVSTCgnaHR0cHM6Ly91cC53ZWIzLnN0b3JhZ2UnKSxcbiAgICAgICAgcHJpbmNpcGFsOiBESUQucGFyc2UoJ2RpZDp3ZWI6d2ViMy5zdG9yYWdlJyksXG4gICAgfSxcbiAgICBBR0dSRUdBVE9SOiB7XG4gICAgICAgIHVybDogbmV3IFVSTCgnaHR0cHM6Ly9hZ2dyZWdhdG9yLndlYjMuc3RvcmFnZScpLFxuICAgICAgICBwcmluY2lwYWw6IERJRC5wYXJzZSgnZGlkOndlYjp3ZWIzLnN0b3JhZ2UnKSxcbiAgICB9LFxuICAgIERFQUxFUjoge1xuICAgICAgICB1cmw6IG5ldyBVUkwoJ2h0dHBzOi8vZGVhbGVyLndlYjMuc3RvcmFnZScpLFxuICAgICAgICBwcmluY2lwYWw6IERJRC5wYXJzZSgnZGlkOndlYjp3ZWIzLnN0b3JhZ2UnKSxcbiAgICB9LFxuICAgIERFQUxfVFJBQ0tFUjoge1xuICAgICAgICB1cmw6IG5ldyBVUkwoJ2h0dHBzOi8vdHJhY2tlci53ZWIzLnN0b3JhZ2UnKSxcbiAgICAgICAgcHJpbmNpcGFsOiBESUQucGFyc2UoJ2RpZDp3ZWI6d2ViMy5zdG9yYWdlJyksXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2aWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/service.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/storefront.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3-storage/filecoin-client/dist/src/storefront.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connection: () => (/* binding */ connection),\n/* harmony export */   filecoinAccept: () => (/* binding */ filecoinAccept),\n/* harmony export */   filecoinInfo: () => (/* binding */ filecoinInfo),\n/* harmony export */   filecoinOffer: () => (/* binding */ filecoinOffer),\n/* harmony export */   filecoinSubmit: () => (/* binding */ filecoinSubmit)\n/* harmony export */ });\n/* harmony import */ var _ucanto_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/client */ \"(ssr)/./node_modules/@ucanto/client/src/lib.js\");\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_filecoin_storefront__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/capabilities/filecoin/storefront */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/filecoin/storefront.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./service.js */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/service.js\");\n\n\n\n\n/**\n * @typedef {import('./types.js').StorefrontService} StorefrontService\n * @typedef {import('@ucanto/interface').ConnectionView<StorefrontService>} ConnectionView\n */\n/** @type {ConnectionView} */\nconst connection = (0,_ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect)({\n    id: _service_js__WEBPACK_IMPORTED_MODULE_3__.services.STOREFRONT.principal,\n    codec: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.CAR.outbound,\n    channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.HTTP.open({\n        url: _service_js__WEBPACK_IMPORTED_MODULE_3__.services.STOREFRONT.url,\n        method: 'POST',\n    }),\n});\n/**\n * The `filecoin/offer` task can be executed to request storing a content piece\n * in Filecoin. It issues a signed receipt of the execution result.\n *\n * A receipt for successful execution will contain an effect, linking to a\n * `filecoin/submit` task that will complete asynchronously.\n *\n * Otherwise the task is failed and the receipt will contain details of the\n * reason behind the failure.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-filecoin.md#filecoinoffer\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('multiformats').UnknownLink} content\n * @param {import('@web3-storage/data-segment').PieceLink} piece\n * @param {import('./types.js').RequestOptions<StorefrontService>} [options]\n */\nasync function filecoinOffer({ issuer, with: resource, proofs, audience }, content, piece, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const invocation = _web3_storage_capabilities_filecoin_storefront__WEBPACK_IMPORTED_MODULE_2__.filecoinOffer.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.services.STOREFRONT.principal,\n        with: resource,\n        nb: {\n            content,\n            piece,\n        },\n        proofs,\n        expiration: Infinity,\n    });\n    return await invocation.execute(conn);\n}\n/**\n * The `filecoin/submit` task is an _effect_ linked from successful execution\n * of a `filecoin/offer` task, it is executed to issue a receipt for the\n * success or failure of the task.\n *\n * A receipt for successful execution indicates that the offered piece has been\n * submitted to the pipeline. In this case the receipt will contain an effect,\n * linking to a `piece/offer` task that will complete asynchronously.\n *\n * Otherwise the task is failed and the receipt will contain details of the\n * reason behind the failure.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-filecoin.md#filecoinsubmit\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('multiformats').UnknownLink} content\n * @param {import('@web3-storage/data-segment').PieceLink} piece\n * @param {import('./types.js').RequestOptions<StorefrontService>} [options]\n */\nasync function filecoinSubmit({ issuer, with: resource, proofs, audience }, content, piece, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const invocation = _web3_storage_capabilities_filecoin_storefront__WEBPACK_IMPORTED_MODULE_2__.filecoinSubmit.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.services.STOREFRONT.principal,\n        with: resource,\n        nb: {\n            content,\n            piece,\n        },\n        proofs,\n        expiration: Infinity,\n    });\n    return await invocation.execute(conn);\n}\n/**\n * The `filecoin/accept` task is an _effect_ linked from successful execution\n * of a `filecoin/offer` task, it is executed to issue a receipt for the\n * success or failure of the task.\n *\n * A receipt for successful execution indicates that the offered piece has been\n * accepted in a Filecoin deal. In this case the receipt will contain proofs\n * that the piece was included in an aggregate and deal.\n *\n * Otherwise the task is failed and the receipt will contain details of the\n * reason behind the failure.\n *\n * @see https://github.com/storacha/specs/blob/main/w3-filecoin.md#filecoinaccept\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('multiformats').UnknownLink} content\n * @param {import('@web3-storage/data-segment').PieceLink} piece\n * @param {import('./types.js').RequestOptions<StorefrontService>} [options]\n */\nasync function filecoinAccept({ issuer, with: resource, proofs, audience }, content, piece, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const invocation = _web3_storage_capabilities_filecoin_storefront__WEBPACK_IMPORTED_MODULE_2__.filecoinAccept.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.services.STOREFRONT.principal,\n        with: resource,\n        nb: {\n            content,\n            piece,\n        },\n        proofs,\n        expiration: Infinity,\n    });\n    return await invocation.execute(conn);\n}\n/**\n * The `filecoin/info` task can be executed to request info about a content piece\n * in Filecoin. It issues a signed receipt of the execution result.\n *\n * @param {import('./types.js').InvocationConfig} conf - Configuration\n * @param {import('@web3-storage/data-segment').PieceLink} piece\n * @param {import('./types.js').RequestOptions<StorefrontService>} [options]\n */\nasync function filecoinInfo({ issuer, with: resource, proofs, audience }, piece, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? connection;\n    const invocation = _web3_storage_capabilities_filecoin_storefront__WEBPACK_IMPORTED_MODULE_2__.filecoinInfo.invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.services.STOREFRONT.principal,\n        with: resource,\n        nb: {\n            piece,\n        },\n        proofs,\n    });\n    return await invocation.execute(conn);\n}\n//# sourceMappingURL=storefront.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/storefront.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/add.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/blob/add.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   createConcludeInvocation: () => (/* binding */ createConcludeInvocation),\n/* harmony export */   input: () => (/* binding */ input)\n/* harmony export */ });\n/* harmony import */ var _ucanto_principal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/principal */ \"(ssr)/./node_modules/@ucanto/principal/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_ucan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/ucan */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/ucan.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_web3_storage_blob__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3-storage/capabilities/web3.storage/blob */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/web3.storage/blob.js\");\n/* harmony import */ var _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @web3-storage/capabilities/blob */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js\");\n/* harmony import */ var _web3_storage_capabilities_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @web3-storage/capabilities/http */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/http.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! p-retry */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/constants.js\");\n/* harmony import */ var _receipts_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../receipts.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/receipts.js\");\n/* harmony import */ var _runtime_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../runtime.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/runtime.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @param {string} url\n * @param {import('../types.js').ProgressFn} handler\n */\nfunction createUploadProgressHandler(url, handler) {\n    /** @param {import('../types.js').ProgressStatus} status */\n    const onUploadProgress = ({ total, loaded, lengthComputable }) => {\n        return handler({ total, loaded, lengthComputable, url });\n    };\n    return onUploadProgress;\n}\n// FIXME this code has been copied over from upload-api\n/**\n * @param {import('@ucanto/interface').Invocation} concludeFx\n */\nfunction getConcludeReceipt(concludeFx) {\n    const receiptBlocks = new Map();\n    for (const block of concludeFx.iterateIPLDBlocks()) {\n        receiptBlocks.set(`${block.cid}`, block);\n    }\n    return _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.Receipt.view({\n        // @ts-expect-error object of type unknown\n        root: concludeFx.capabilities[0].nb.receipt,\n        blocks: receiptBlocks,\n    });\n}\n// FIXME this code has been copied over from upload-api\n/**\n * @param {import('@ucanto/interface').Receipt} receipt\n */\nfunction parseBlobAddReceiptNext(receipt) {\n    // Get invocations next\n    /**\n     * @type {import('@ucanto/interface').Invocation[]}\n     */\n    // @ts-expect-error read only effect\n    const forkInvocations = receipt.fx.fork;\n    const allocateTask = forkInvocations.find((fork) => fork.capabilities[0].can === _web3_storage_capabilities_web3_storage_blob__WEBPACK_IMPORTED_MODULE_3__.allocate.can);\n    const concludefxs = forkInvocations.filter((fork) => fork.capabilities[0].can === _web3_storage_capabilities_ucan__WEBPACK_IMPORTED_MODULE_1__.conclude.can);\n    const putTask = forkInvocations.find((fork) => fork.capabilities[0].can === _web3_storage_capabilities_http__WEBPACK_IMPORTED_MODULE_5__.put.can);\n    const acceptTask = forkInvocations.find((fork) => fork.capabilities[0].can === _web3_storage_capabilities_web3_storage_blob__WEBPACK_IMPORTED_MODULE_3__.accept.can);\n    /* c8 ignore next 3 */\n    if (!allocateTask || !concludefxs.length || !putTask || !acceptTask) {\n        throw new Error('mandatory effects not received');\n    }\n    // Decode receipts available\n    const nextReceipts = concludefxs.map((fx) => getConcludeReceipt(fx));\n    /** @type {import('@ucanto/interface').Receipt<import('../types.js').BlobAllocateSuccess, import('../types.js').BlobAllocateFailure> | undefined} */\n    // @ts-expect-error types unknown for next\n    const allocateReceipt = nextReceipts.find((receipt) => receipt.ran.link().equals(allocateTask.cid));\n    /** @type {import('@ucanto/interface').Receipt<{}, import('@ucanto/interface').Failure> | undefined} */\n    // @ts-expect-error types unknown for next\n    const putReceipt = nextReceipts.find((receipt) => receipt.ran.link().equals(putTask.cid));\n    /** @type {import('@ucanto/interface').Receipt<import('../types.js').BlobAcceptSuccess, import('../types.js').BlobAcceptFailure> | undefined} */\n    // @ts-expect-error types unknown for next\n    const acceptReceipt = nextReceipts.find((receipt) => receipt.ran.link().equals(acceptTask.cid));\n    /* c8 ignore next 3 */\n    if (!allocateReceipt) {\n        throw new Error('mandatory effects not received');\n    }\n    return {\n        allocate: {\n            task: allocateTask,\n            receipt: allocateReceipt,\n        },\n        put: {\n            task: putTask,\n            receipt: putReceipt,\n        },\n        accept: {\n            task: acceptTask,\n            receipt: acceptReceipt,\n        },\n    };\n}\n// FIXME this code has been copied over from upload-api\n/**\n * @param {import('@ucanto/interface').Signer} id\n * @param {import('@ucanto/interface').Principal} serviceDid\n * @param {import('@ucanto/interface').Receipt} receipt\n */\nfunction createConcludeInvocation(id, serviceDid, receipt) {\n    const receiptBlocks = [];\n    const receiptCids = [];\n    for (const block of receipt.iterateIPLDBlocks()) {\n        receiptBlocks.push(block);\n        receiptCids.push(block.cid);\n    }\n    const concludeAllocatefx = _web3_storage_capabilities_ucan__WEBPACK_IMPORTED_MODULE_1__.conclude.invoke({\n        issuer: id,\n        audience: serviceDid,\n        with: id.toDIDKey(),\n        nb: {\n            receipt: receipt.link(),\n        },\n        expiration: Infinity,\n        facts: [\n            {\n                ...receiptCids,\n            },\n        ],\n    });\n    for (const block of receiptBlocks) {\n        concludeAllocatefx.attach(block);\n    }\n    return concludeAllocatefx;\n}\n/**\n * Store a blob to the service. The issuer needs the `blob/add`\n * delegated capability.\n *\n * Required delegated capability proofs: `blob/add`\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `blob/add` delegated capability.\n * @param {import('multiformats').MultihashDigest} digest\n * @param {Blob|Uint8Array} data Blob data.\n * @param {import('../types.js').RequestOptions} [options]\n * @returns {Promise<import('../types.js').BlobAddOk>}\n */\nasync function add({ issuer, with: resource, proofs, audience }, digest, data, options = {}) {\n    /* c8 ignore next 2 */\n    const bytes = data instanceof Uint8Array ? data : new Uint8Array(await data.arrayBuffer());\n    const size = bytes.length;\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_7__.connection;\n    const result = await (0,p_retry__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(async () => {\n        return await _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_4__.add\n            .invoke({\n            issuer,\n            /* c8 ignore next */\n            audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_7__.servicePrincipal,\n            with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_6__.SpaceDID.from(resource),\n            nb: input(digest, size),\n            proofs,\n            nonce: options.nonce,\n        })\n            .execute(conn);\n    }, {\n        onFailedAttempt: console.warn,\n        retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_8__.REQUEST_RETRIES,\n    });\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_4__.add.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    const nextTasks = parseBlobAddReceiptNext(result);\n    const { receipt: allocateReceipt } = nextTasks.allocate;\n    /* c8 ignore next 5 */\n    if (!allocateReceipt.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_4__.add.can} invocation`, {\n            cause: allocateReceipt.out.error,\n        });\n    }\n    const { address } = allocateReceipt.out.ok;\n    if (address) {\n        const fetchWithUploadProgress = options.fetchWithUploadProgress ||\n            options.fetch ||\n            globalThis.fetch.bind(globalThis);\n        let fetchDidCallUploadProgressCb = false;\n        await (0,p_retry__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(async () => {\n            try {\n                const res = await fetchWithUploadProgress(address.url, {\n                    method: 'PUT',\n                    ...(!_runtime_js__WEBPACK_IMPORTED_MODULE_10__.isCloudflareWorkers && { mode: 'cors' }),\n                    body: bytes,\n                    headers: address.headers,\n                    signal: options.signal,\n                    onUploadProgress: (status) => {\n                        fetchDidCallUploadProgressCb = true;\n                        if (options.onUploadProgress)\n                            createUploadProgressHandler(address.url, options.onUploadProgress)(status);\n                    },\n                    // @ts-expect-error - this is needed by recent versions of node - see https://github.com/bluesky-social/atproto/pull/470 for more info\n                    duplex: 'half',\n                });\n                // do not retry client errors\n                if (res.status >= 400 && res.status < 500) {\n                    throw new p_retry__WEBPACK_IMPORTED_MODULE_11__.AbortError(`upload failed: ${res.status}`);\n                }\n                if (!res.ok) {\n                    throw new Error(`upload failed: ${res.status}`);\n                }\n            }\n            catch (err) {\n                if (options.signal?.aborted === true) {\n                    throw new p_retry__WEBPACK_IMPORTED_MODULE_11__.AbortError('upload aborted');\n                }\n                throw err;\n            }\n        }, {\n            retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_8__.REQUEST_RETRIES,\n        });\n        if (!fetchDidCallUploadProgressCb && options.onUploadProgress) {\n            // the fetch implementation didn't support onUploadProgress\n            const blob = new Blob([bytes]);\n            options.onUploadProgress({\n                total: blob.size,\n                loaded: blob.size,\n                lengthComputable: false,\n            });\n        }\n    }\n    // Invoke `conclude` with `http/put` receipt\n    let { receipt: httpPutReceipt } = nextTasks.put;\n    if (!httpPutReceipt?.out.ok) {\n        const derivedSigner = _ucanto_principal__WEBPACK_IMPORTED_MODULE_0__.ed25519.from(\n        /** @type {import('@ucanto/interface').SignerArchive<import('@ucanto/interface').DID, typeof ed25519.signatureCode>} */\n        (nextTasks.put.task.facts[0]['keys']));\n        httpPutReceipt = await _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.Receipt.issue({\n            issuer: derivedSigner,\n            ran: nextTasks.put.task.cid,\n            result: { ok: {} },\n        });\n        const httpPutConcludeInvocation = createConcludeInvocation(issuer, \n        /* c8 ignore next */\n        audience ?? _service_js__WEBPACK_IMPORTED_MODULE_7__.servicePrincipal, httpPutReceipt);\n        const ucanConclude = await httpPutConcludeInvocation.execute(conn);\n        if (!ucanConclude.out.ok) {\n            throw new Error(`failed ${_web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_4__.add.can} invocation`, {\n                cause: result.out.error,\n            });\n        }\n    }\n    // Ensure the blob has been accepted\n    let { receipt: acceptReceipt } = nextTasks.accept;\n    if (!acceptReceipt?.out.ok) {\n        acceptReceipt = await (0,_receipts_js__WEBPACK_IMPORTED_MODULE_9__.poll)(nextTasks.accept.task.link(), options);\n    }\n    const blocks = new Map([...acceptReceipt.iterateIPLDBlocks()].map((block) => [\n        `${block.cid}`,\n        block,\n    ]));\n    const site = _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.Delegation.view({\n        root: /** @type {import('@ucanto/interface').UCANLink} */ (acceptReceipt.out.ok?.site),\n        blocks,\n    });\n    return { site };\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_4__.add.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {import('multiformats').MultihashDigest} digest\n * @param {number} size\n */\nconst input = (digest, size) => ({\n    blob: {\n        digest: digest.bytes,\n        size,\n    },\n});\n//# sourceMappingURL=add.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/add.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/get.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/blob/get.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   input: () => (/* binding */ input)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/blob */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n\n\n\n/**\n * Gets a stored Blob file by digest.\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `blob/get/0/1` delegated capability.\n * @param {import('multiformats').MultihashDigest} multihash of the blob\n * @param {import('../types.js').RequestOptions} [options]\n */\nasync function get({ issuer, with: resource, proofs, audience }, multihash, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.connection;\n    const result = await _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.get\n        .invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.servicePrincipal,\n        with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__.SpaceDID.from(resource),\n        nb: input(multihash),\n        proofs,\n        nonce: options.nonce,\n    })\n        .execute(conn);\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.get.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out;\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.get.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {import('multiformats').MultihashDigest} digest\n */\nconst input = (digest) => ({ digest: digest.bytes });\n//# sourceMappingURL=get.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Jsb2IvZ2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvRTtBQUNSO0FBQ0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQsV0FBVyxzQ0FBc0M7QUFDakQ7QUFDTyxxQkFBcUIsMENBQTBDLHlCQUF5QjtBQUMvRjtBQUNBLHVDQUF1QyxtREFBVTtBQUNqRCx5QkFBeUIsZ0VBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5REFBZ0I7QUFDOUMsY0FBYyxzRUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGtDQUFrQyxnRUFBb0IsTUFBTTtBQUM1RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdCQUFnQixnRUFBb0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQ7QUFDTyw2QkFBNkIsc0JBQXNCO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Jsb2IvZ2V0LmpzP2ZmNDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQmxvYkNhcGFiaWxpdGllcyBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9ibG9iJztcbmltcG9ydCB7IFNwYWNlRElEIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXRpbHMnO1xuaW1wb3J0IHsgc2VydmljZVByaW5jaXBhbCwgY29ubmVjdGlvbiB9IGZyb20gJy4uL3NlcnZpY2UuanMnO1xuLyoqXG4gKiBHZXRzIGEgc3RvcmVkIEJsb2IgZmlsZSBieSBkaWdlc3QuXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuSW52b2NhdGlvbkNvbmZpZ30gY29uZiBDb25maWd1cmF0aW9uXG4gKiBmb3IgdGhlIFVDQU4gaW52b2NhdGlvbi4gQW4gb2JqZWN0IHdpdGggYGlzc3VlcmAsIGB3aXRoYCBhbmQgYHByb29mc2AuXG4gKlxuICogVGhlIGBpc3N1ZXJgIGlzIHRoZSBzaWduaW5nIGF1dGhvcml0eSB0aGF0IGlzIGlzc3VpbmcgdGhlIFVDQU5cbiAqIGludm9jYXRpb24ocykuIEl0IGlzIHR5cGljYWxseSB0aGUgdXNlciBfYWdlbnRfLlxuICpcbiAqIFRoZSBgd2l0aGAgaXMgdGhlIHJlc291cmNlIHRoZSBpbnZvY2F0aW9uIGFwcGxpZXMgdG8uIEl0IGlzIHR5cGljYWxseSB0aGVcbiAqIERJRCBvZiBhIHNwYWNlLlxuICpcbiAqIFRoZSBgcHJvb2ZzYCBhcmUgYSBzZXQgb2YgY2FwYWJpbGl0eSBkZWxlZ2F0aW9ucyB0aGF0IHByb3ZlIHRoZSBpc3N1ZXJcbiAqIGhhcyB0aGUgY2FwYWJpbGl0eSB0byBwZXJmb3JtIHRoZSBhY3Rpb24uXG4gKlxuICogVGhlIGlzc3VlciBuZWVkcyB0aGUgYGJsb2IvZ2V0LzAvMWAgZGVsZWdhdGVkIGNhcGFiaWxpdHkuXG4gKiBAcGFyYW0ge2ltcG9ydCgnbXVsdGlmb3JtYXRzJykuTXVsdGloYXNoRGlnZXN0fSBtdWx0aWhhc2ggb2YgdGhlIGJsb2JcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldCh7IGlzc3Vlciwgd2l0aDogcmVzb3VyY2UsIHByb29mcywgYXVkaWVuY2UgfSwgbXVsdGloYXNoLCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBCbG9iQ2FwYWJpbGl0aWVzLmdldFxuICAgICAgICAuaW52b2tlKHtcbiAgICAgICAgaXNzdWVyLFxuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICBhdWRpZW5jZTogYXVkaWVuY2UgPz8gc2VydmljZVByaW5jaXBhbCxcbiAgICAgICAgd2l0aDogU3BhY2VESUQuZnJvbShyZXNvdXJjZSksXG4gICAgICAgIG5iOiBpbnB1dChtdWx0aWhhc2gpLFxuICAgICAgICBwcm9vZnMsXG4gICAgICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgIH0pXG4gICAgICAgIC5leGVjdXRlKGNvbm4pO1xuICAgIGlmICghcmVzdWx0Lm91dC5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGZhaWxlZCAke0Jsb2JDYXBhYmlsaXRpZXMuZ2V0LmNhbn0gaW52b2NhdGlvbmAsIHtcbiAgICAgICAgICAgIGNhdXNlOiByZXN1bHQub3V0LmVycm9yLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdC5vdXQ7XG59XG4vKiogUmV0dXJucyB0aGUgYWJpbGl0eSB1c2VkIGJ5IGFuIGludm9jYXRpb24uICovXG5leHBvcnQgY29uc3QgYWJpbGl0eSA9IEJsb2JDYXBhYmlsaXRpZXMuZ2V0LmNhbjtcbi8qKlxuICogUmV0dXJucyByZXF1aXJlZCBpbnB1dCB0byB0aGUgaW52b2NhdGlvbi5cbiAqXG4gKiBAcGFyYW0ge2ltcG9ydCgnbXVsdGlmb3JtYXRzJykuTXVsdGloYXNoRGlnZXN0fSBkaWdlc3RcbiAqL1xuZXhwb3J0IGNvbnN0IGlucHV0ID0gKGRpZ2VzdCkgPT4gKHsgZGlnZXN0OiBkaWdlc3QuYnl0ZXMgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/get.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/blob/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* reexport safe */ _add_js__WEBPACK_IMPORTED_MODULE_0__.add),\n/* harmony export */   get: () => (/* reexport safe */ _get_js__WEBPACK_IMPORTED_MODULE_1__.get),\n/* harmony export */   list: () => (/* reexport safe */ _list_js__WEBPACK_IMPORTED_MODULE_2__.list),\n/* harmony export */   remove: () => (/* reexport safe */ _remove_js__WEBPACK_IMPORTED_MODULE_3__.remove)\n/* harmony export */ });\n/* harmony import */ var _add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/add.js\");\n/* harmony import */ var _get_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/get.js\");\n/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./list.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/list.js\");\n/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./remove.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/remove.js\");\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Jsb2IvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBK0I7QUFDQTtBQUNFO0FBQ0k7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvZGlzdC9zcmMvYmxvYi9pbmRleC5qcz9lZTc0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGFkZCB9IGZyb20gJy4vYWRkLmpzJztcbmV4cG9ydCB7IGdldCB9IGZyb20gJy4vZ2V0LmpzJztcbmV4cG9ydCB7IGxpc3QgfSBmcm9tICcuL2xpc3QuanMnO1xuZXhwb3J0IHsgcmVtb3ZlIH0gZnJvbSAnLi9yZW1vdmUuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/list.js":
/*!************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/blob/list.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   input: () => (/* binding */ input),\n/* harmony export */   list: () => (/* binding */ list)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/blob */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n\n\n\n/**\n * List Blobs stored in the space.\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `blob/list` delegated capability.\n * @param {import('../types.js').ListRequestOptions} [options]\n * @returns {Promise<import('../types.js').BlobListSuccess>}\n */\nasync function list({ issuer, with: resource, proofs, audience }, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.connection;\n    const result = await _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.list\n        .invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.servicePrincipal,\n        with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__.SpaceDID.from(resource),\n        proofs,\n        nb: input(options.cursor, options.size),\n        nonce: options.nonce,\n    })\n        .execute(conn);\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.list.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out.ok;\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.list.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {string} [cursor]\n * @param {number} [size]\n */\nconst input = (cursor, size) => ({ cursor, size });\n//# sourceMappingURL=list.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Jsb2IvbGlzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0U7QUFDUjtBQUNDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLFdBQVcsd0NBQXdDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMENBQTBDO0FBQ3JELGFBQWE7QUFDYjtBQUNPLHNCQUFzQiwwQ0FBMEMsY0FBYztBQUNyRjtBQUNBLHVDQUF1QyxtREFBVTtBQUNqRCx5QkFBeUIsaUVBQXFCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5REFBZ0I7QUFDOUMsY0FBYyxzRUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGtDQUFrQyxpRUFBcUIsTUFBTTtBQUM3RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdCQUFnQixpRUFBcUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNPLG1DQUFtQyxjQUFjO0FBQ3hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Jsb2IvbGlzdC5qcz81N2FiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEJsb2JDYXBhYmlsaXRpZXMgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvYmxvYic7XG5pbXBvcnQgeyBTcGFjZURJRCB9IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3V0aWxzJztcbmltcG9ydCB7IHNlcnZpY2VQcmluY2lwYWwsIGNvbm5lY3Rpb24gfSBmcm9tICcuLi9zZXJ2aWNlLmpzJztcbi8qKlxuICogTGlzdCBCbG9icyBzdG9yZWQgaW4gdGhlIHNwYWNlLlxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkludm9jYXRpb25Db25maWd9IGNvbmYgQ29uZmlndXJhdGlvblxuICogZm9yIHRoZSBVQ0FOIGludm9jYXRpb24uIEFuIG9iamVjdCB3aXRoIGBpc3N1ZXJgLCBgd2l0aGAgYW5kIGBwcm9vZnNgLlxuICpcbiAqIFRoZSBgaXNzdWVyYCBpcyB0aGUgc2lnbmluZyBhdXRob3JpdHkgdGhhdCBpcyBpc3N1aW5nIHRoZSBVQ0FOXG4gKiBpbnZvY2F0aW9uKHMpLiBJdCBpcyB0eXBpY2FsbHkgdGhlIHVzZXIgX2FnZW50Xy5cbiAqXG4gKiBUaGUgYHdpdGhgIGlzIHRoZSByZXNvdXJjZSB0aGUgaW52b2NhdGlvbiBhcHBsaWVzIHRvLiBJdCBpcyB0eXBpY2FsbHkgdGhlXG4gKiBESUQgb2YgYSBzcGFjZS5cbiAqXG4gKiBUaGUgYHByb29mc2AgYXJlIGEgc2V0IG9mIGNhcGFiaWxpdHkgZGVsZWdhdGlvbnMgdGhhdCBwcm92ZSB0aGUgaXNzdWVyXG4gKiBoYXMgdGhlIGNhcGFiaWxpdHkgdG8gcGVyZm9ybSB0aGUgYWN0aW9uLlxuICpcbiAqIFRoZSBpc3N1ZXIgbmVlZHMgdGhlIGBibG9iL2xpc3RgIGRlbGVnYXRlZCBjYXBhYmlsaXR5LlxuICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuTGlzdFJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtQcm9taXNlPGltcG9ydCgnLi4vdHlwZXMuanMnKS5CbG9iTGlzdFN1Y2Nlc3M+fVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbGlzdCh7IGlzc3Vlciwgd2l0aDogcmVzb3VyY2UsIHByb29mcywgYXVkaWVuY2UgfSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICBjb25zdCBjb25uID0gb3B0aW9ucy5jb25uZWN0aW9uID8/IGNvbm5lY3Rpb247XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgQmxvYkNhcGFiaWxpdGllcy5saXN0XG4gICAgICAgIC5pbnZva2Uoe1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgICAgICB3aXRoOiBTcGFjZURJRC5mcm9tKHJlc291cmNlKSxcbiAgICAgICAgcHJvb2ZzLFxuICAgICAgICBuYjogaW5wdXQob3B0aW9ucy5jdXJzb3IsIG9wdGlvbnMuc2l6ZSksXG4gICAgICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgIH0pXG4gICAgICAgIC5leGVjdXRlKGNvbm4pO1xuICAgIGlmICghcmVzdWx0Lm91dC5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGZhaWxlZCAke0Jsb2JDYXBhYmlsaXRpZXMubGlzdC5jYW59IGludm9jYXRpb25gLCB7XG4gICAgICAgICAgICBjYXVzZTogcmVzdWx0Lm91dC5lcnJvcixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQub3V0Lm9rO1xufVxuLyoqIFJldHVybnMgdGhlIGFiaWxpdHkgdXNlZCBieSBhbiBpbnZvY2F0aW9uLiAqL1xuZXhwb3J0IGNvbnN0IGFiaWxpdHkgPSBCbG9iQ2FwYWJpbGl0aWVzLmxpc3QuY2FuO1xuLyoqXG4gKiBSZXR1cm5zIHJlcXVpcmVkIGlucHV0IHRvIHRoZSBpbnZvY2F0aW9uLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBbY3Vyc29yXVxuICogQHBhcmFtIHtudW1iZXJ9IFtzaXplXVxuICovXG5leHBvcnQgY29uc3QgaW5wdXQgPSAoY3Vyc29yLCBzaXplKSA9PiAoeyBjdXJzb3IsIHNpemUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/list.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/remove.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/blob/remove.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   input: () => (/* binding */ input),\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/blob */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/blob.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n\n\n\n/**\n * Remove a stored Blob file by digest.\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `blob/remove` delegated capability.\n * @param {import('multiformats').MultihashDigest} multihash of the blob\n * @param {import('../types.js').RequestOptions} [options]\n */\nasync function remove({ issuer, with: resource, proofs, audience }, multihash, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.connection;\n    const result = await _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.remove\n        .invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.servicePrincipal,\n        with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__.SpaceDID.from(resource),\n        nb: input(multihash),\n        proofs,\n        nonce: options.nonce,\n    })\n        .execute(conn);\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.remove.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out;\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_blob__WEBPACK_IMPORTED_MODULE_0__.remove.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {import('multiformats').MultihashDigest} digest\n */\nconst input = (digest) => ({ digest: digest.bytes });\n//# sourceMappingURL=remove.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Jsb2IvcmVtb3ZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvRTtBQUNSO0FBQ0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQsV0FBVyxzQ0FBc0M7QUFDakQ7QUFDTyx3QkFBd0IsMENBQTBDLHlCQUF5QjtBQUNsRztBQUNBLHVDQUF1QyxtREFBVTtBQUNqRCx5QkFBeUIsbUVBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5REFBZ0I7QUFDOUMsY0FBYyxzRUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGtDQUFrQyxtRUFBdUIsTUFBTTtBQUMvRDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdCQUFnQixtRUFBdUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQ7QUFDTyw2QkFBNkIsc0JBQXNCO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Jsb2IvcmVtb3ZlLmpzPzhmMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQmxvYkNhcGFiaWxpdGllcyBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy9ibG9iJztcbmltcG9ydCB7IFNwYWNlRElEIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXRpbHMnO1xuaW1wb3J0IHsgc2VydmljZVByaW5jaXBhbCwgY29ubmVjdGlvbiB9IGZyb20gJy4uL3NlcnZpY2UuanMnO1xuLyoqXG4gKiBSZW1vdmUgYSBzdG9yZWQgQmxvYiBmaWxlIGJ5IGRpZ2VzdC5cbiAqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5JbnZvY2F0aW9uQ29uZmlnfSBjb25mIENvbmZpZ3VyYXRpb25cbiAqIGZvciB0aGUgVUNBTiBpbnZvY2F0aW9uLiBBbiBvYmplY3Qgd2l0aCBgaXNzdWVyYCwgYHdpdGhgIGFuZCBgcHJvb2ZzYC5cbiAqXG4gKiBUaGUgYGlzc3VlcmAgaXMgdGhlIHNpZ25pbmcgYXV0aG9yaXR5IHRoYXQgaXMgaXNzdWluZyB0aGUgVUNBTlxuICogaW52b2NhdGlvbihzKS4gSXQgaXMgdHlwaWNhbGx5IHRoZSB1c2VyIF9hZ2VudF8uXG4gKlxuICogVGhlIGB3aXRoYCBpcyB0aGUgcmVzb3VyY2UgdGhlIGludm9jYXRpb24gYXBwbGllcyB0by4gSXQgaXMgdHlwaWNhbGx5IHRoZVxuICogRElEIG9mIGEgc3BhY2UuXG4gKlxuICogVGhlIGBwcm9vZnNgIGFyZSBhIHNldCBvZiBjYXBhYmlsaXR5IGRlbGVnYXRpb25zIHRoYXQgcHJvdmUgdGhlIGlzc3VlclxuICogaGFzIHRoZSBjYXBhYmlsaXR5IHRvIHBlcmZvcm0gdGhlIGFjdGlvbi5cbiAqXG4gKiBUaGUgaXNzdWVyIG5lZWRzIHRoZSBgYmxvYi9yZW1vdmVgIGRlbGVnYXRlZCBjYXBhYmlsaXR5LlxuICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cycpLk11bHRpaGFzaERpZ2VzdH0gbXVsdGloYXNoIG9mIHRoZSBibG9iXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5SZXF1ZXN0T3B0aW9uc30gW29wdGlvbnNdXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW1vdmUoeyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH0sIG11bHRpaGFzaCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICBjb25zdCBjb25uID0gb3B0aW9ucy5jb25uZWN0aW9uID8/IGNvbm5lY3Rpb247XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgQmxvYkNhcGFiaWxpdGllcy5yZW1vdmVcbiAgICAgICAgLmludm9rZSh7XG4gICAgICAgIGlzc3VlcixcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICAgICAgYXVkaWVuY2U6IGF1ZGllbmNlID8/IHNlcnZpY2VQcmluY2lwYWwsXG4gICAgICAgIHdpdGg6IFNwYWNlRElELmZyb20ocmVzb3VyY2UpLFxuICAgICAgICBuYjogaW5wdXQobXVsdGloYXNoKSxcbiAgICAgICAgcHJvb2ZzLFxuICAgICAgICBub25jZTogb3B0aW9ucy5ub25jZSxcbiAgICB9KVxuICAgICAgICAuZXhlY3V0ZShjb25uKTtcbiAgICBpZiAoIXJlc3VsdC5vdXQub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtCbG9iQ2FwYWJpbGl0aWVzLnJlbW92ZS5jYW59IGludm9jYXRpb25gLCB7XG4gICAgICAgICAgICBjYXVzZTogcmVzdWx0Lm91dC5lcnJvcixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQub3V0O1xufVxuLyoqIFJldHVybnMgdGhlIGFiaWxpdHkgdXNlZCBieSBhbiBpbnZvY2F0aW9uLiAqL1xuZXhwb3J0IGNvbnN0IGFiaWxpdHkgPSBCbG9iQ2FwYWJpbGl0aWVzLnJlbW92ZS5jYW47XG4vKipcbiAqIFJldHVybnMgcmVxdWlyZWQgaW5wdXQgdG8gdGhlIGludm9jYXRpb24uXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cycpLk11bHRpaGFzaERpZ2VzdH0gZGlnZXN0XG4gKi9cbmV4cG9ydCBjb25zdCBpbnB1dCA9IChkaWdlc3QpID0+ICh7IGRpZ2VzdDogZGlnZXN0LmJ5dGVzIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/remove.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/car.js":
/*!******************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/car.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockStream: () => (/* binding */ BlockStream),\n/* harmony export */   blockEncodingLength: () => (/* binding */ blockEncodingLength),\n/* harmony export */   blockHeaderEncodingLength: () => (/* binding */ blockHeaderEncodingLength),\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   headerEncodingLength: () => (/* binding */ headerEncodingLength)\n/* harmony export */ });\n/* harmony import */ var _ipld_car__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/car */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/index.js\");\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n\n\n\n/**\n * @typedef {import('@ipld/unixfs').Block} Block\n */\nconst code = 0x0202;\n/** Byte length of a CBOR encoded CAR header with zero roots. */\nconst NO_ROOTS_HEADER_LENGTH = 18;\n/** @param {import('./types.js').AnyLink} [root] */\nfunction headerEncodingLength(root) {\n    if (!root)\n        return NO_ROOTS_HEADER_LENGTH;\n    const headerLength = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.encode({ version: 1, roots: [root] }).length;\n    const varintLength = varint__WEBPACK_IMPORTED_MODULE_2__.encodingLength(headerLength);\n    return varintLength + headerLength;\n}\n/** @param {Block} block */\nfunction blockHeaderEncodingLength(block) {\n    const payloadLength = block.cid.bytes.length + block.bytes.length;\n    const varintLength = varint__WEBPACK_IMPORTED_MODULE_2__.encodingLength(payloadLength);\n    return varintLength + block.cid.bytes.length;\n}\n/** @param {Block} block */\nfunction blockEncodingLength(block) {\n    return blockHeaderEncodingLength(block) + block.bytes.length;\n}\n/**\n * @param {Iterable<Block> | AsyncIterable<Block>} blocks\n * @param {import('./types.js').AnyLink} [root]\n * @returns {Promise<import('./types.js').CARFile>}\n */\nasync function encode(blocks, root) {\n    // @ts-expect-error\n    const { writer, out } = _ipld_car__WEBPACK_IMPORTED_MODULE_0__.CarWriter.create(root);\n    /** @type {Error?} */\n    let error;\n    void (async () => {\n        try {\n            for await (const block of blocks) {\n                await writer.put(block);\n            }\n        }\n        catch ( /** @type {any} */err) {\n            error = err;\n        }\n        finally {\n            await writer.close();\n        }\n    })();\n    const chunks = [];\n    for await (const chunk of out)\n        chunks.push(chunk);\n    // @ts-expect-error\n    if (error != null)\n        throw error;\n    const roots = root != null ? [root] : [];\n    return Object.assign(new Blob(chunks), { version: 1, roots });\n}\n/** @extends {ReadableStream<Block>} */\nclass BlockStream extends ReadableStream {\n    /** @param {import('./types.js').BlobLike} car */\n    constructor(car) {\n        /** @type {Promise<CarBlockIterator>?} */\n        let blocksPromise = null;\n        const getBlocksIterable = () => {\n            if (blocksPromise)\n                return blocksPromise;\n            blocksPromise = _ipld_car__WEBPACK_IMPORTED_MODULE_0__.CarBlockIterator.fromIterable(toIterable(car.stream()));\n            return blocksPromise;\n        };\n        /** @type {AsyncIterator<Block>?} */\n        let iterator = null;\n        super({\n            async start() {\n                const blocks = await getBlocksIterable();\n                iterator = /** @type {AsyncIterator<Block>} */ (blocks[Symbol.asyncIterator]());\n            },\n            async pull(controller) {\n                /* c8 ignore next */\n                if (!iterator)\n                    throw new Error('missing blocks iterator');\n                const { value, done } = await iterator.next();\n                if (done)\n                    return controller.close();\n                controller.enqueue(value);\n            },\n        });\n        /** @returns {Promise<import('./types.js').AnyLink[]>} */\n        this.getRoots = async () => {\n            const blocks = await getBlocksIterable();\n            return await blocks.getRoots();\n        };\n    }\n}\n/* c8 ignore start */\n/**\n * {@link ReadableStream} is an async iterable in newer environments, but it's\n * not standard yet. This function normalizes a {@link ReadableStream} to a\n * definite async iterable.\n *\n * @template T\n * @param {ReadableStream<T> | AsyncIterable<T>} stream\n * @returns {AsyncIterable<T>} An async iterable of the contents of the\n *                             {@link stream} (possibly {@link stream} itself).\n */\nfunction toIterable(stream) {\n    return Symbol.asyncIterator in stream\n        ? stream\n        : (async function* () {\n            const reader = stream.getReader();\n            try {\n                while (true) {\n                    const { done, value } = await reader.read();\n                    if (done)\n                        return;\n                    yield value;\n                }\n            }\n            finally {\n                reader.releaseLock();\n            }\n        })();\n}\n/* c8 ignore end */\n//# sourceMappingURL=car.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Nhci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDZDtBQUNkO0FBQzVCO0FBQ0EsYUFBYSw4QkFBOEI7QUFDM0M7QUFDTztBQUNQO0FBQ0E7QUFDQSxZQUFZLDhCQUE4QjtBQUNuQztBQUNQO0FBQ0E7QUFDQSx5QkFBeUIsa0RBQWMsR0FBRywyQkFBMkI7QUFDckUseUJBQXlCLGtEQUFxQjtBQUM5QztBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ1o7QUFDUDtBQUNBLHlCQUF5QixrREFBcUI7QUFDOUM7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNaO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQsV0FBVyw4QkFBOEI7QUFDekMsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLFlBQVksY0FBYyxFQUFFLGdEQUFTO0FBQ3JDLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixLQUFLO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsbUJBQW1CO0FBQ2hFO0FBQ0EsY0FBYyx1QkFBdUI7QUFDOUI7QUFDUCxnQkFBZ0IsK0JBQStCO0FBQy9DO0FBQ0EsbUJBQW1CLDRCQUE0QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1REFBZ0I7QUFDNUM7QUFDQTtBQUNBLG1CQUFtQix1QkFBdUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msc0JBQXNCO0FBQzVELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixjQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Qsc0JBQXNCLHlDQUF5QztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzQkFBc0I7QUFDMUIsaURBQWlELHNCQUFzQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNDQUFzQztBQUNqRCxhQUFhLGtCQUFrQjtBQUMvQixnQ0FBZ0MsY0FBYyxXQUFXLGNBQWM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixjQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2Nhci5qcz9hYzI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhckJsb2NrSXRlcmF0b3IsIENhcldyaXRlciB9IGZyb20gJ0BpcGxkL2Nhcic7XG5pbXBvcnQgKiBhcyBkYWdDQk9SIGZyb20gJ0BpcGxkL2RhZy1jYm9yJztcbmltcG9ydCB2YXJpbnQgZnJvbSAndmFyaW50Jztcbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnQGlwbGQvdW5peGZzJykuQmxvY2t9IEJsb2NrXG4gKi9cbmV4cG9ydCBjb25zdCBjb2RlID0gMHgwMjAyO1xuLyoqIEJ5dGUgbGVuZ3RoIG9mIGEgQ0JPUiBlbmNvZGVkIENBUiBoZWFkZXIgd2l0aCB6ZXJvIHJvb3RzLiAqL1xuY29uc3QgTk9fUk9PVFNfSEVBREVSX0xFTkdUSCA9IDE4O1xuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuQW55TGlua30gW3Jvb3RdICovXG5leHBvcnQgZnVuY3Rpb24gaGVhZGVyRW5jb2RpbmdMZW5ndGgocm9vdCkge1xuICAgIGlmICghcm9vdClcbiAgICAgICAgcmV0dXJuIE5PX1JPT1RTX0hFQURFUl9MRU5HVEg7XG4gICAgY29uc3QgaGVhZGVyTGVuZ3RoID0gZGFnQ0JPUi5lbmNvZGUoeyB2ZXJzaW9uOiAxLCByb290czogW3Jvb3RdIH0pLmxlbmd0aDtcbiAgICBjb25zdCB2YXJpbnRMZW5ndGggPSB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoaGVhZGVyTGVuZ3RoKTtcbiAgICByZXR1cm4gdmFyaW50TGVuZ3RoICsgaGVhZGVyTGVuZ3RoO1xufVxuLyoqIEBwYXJhbSB7QmxvY2t9IGJsb2NrICovXG5leHBvcnQgZnVuY3Rpb24gYmxvY2tIZWFkZXJFbmNvZGluZ0xlbmd0aChibG9jaykge1xuICAgIGNvbnN0IHBheWxvYWRMZW5ndGggPSBibG9jay5jaWQuYnl0ZXMubGVuZ3RoICsgYmxvY2suYnl0ZXMubGVuZ3RoO1xuICAgIGNvbnN0IHZhcmludExlbmd0aCA9IHZhcmludC5lbmNvZGluZ0xlbmd0aChwYXlsb2FkTGVuZ3RoKTtcbiAgICByZXR1cm4gdmFyaW50TGVuZ3RoICsgYmxvY2suY2lkLmJ5dGVzLmxlbmd0aDtcbn1cbi8qKiBAcGFyYW0ge0Jsb2NrfSBibG9jayAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJsb2NrRW5jb2RpbmdMZW5ndGgoYmxvY2spIHtcbiAgICByZXR1cm4gYmxvY2tIZWFkZXJFbmNvZGluZ0xlbmd0aChibG9jaykgKyBibG9jay5ieXRlcy5sZW5ndGg7XG59XG4vKipcbiAqIEBwYXJhbSB7SXRlcmFibGU8QmxvY2s+IHwgQXN5bmNJdGVyYWJsZTxCbG9jaz59IGJsb2Nrc1xuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5BbnlMaW5rfSBbcm9vdF1cbiAqIEByZXR1cm5zIHtQcm9taXNlPGltcG9ydCgnLi90eXBlcy5qcycpLkNBUkZpbGU+fVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZW5jb2RlKGJsb2Nrcywgcm9vdCkge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICBjb25zdCB7IHdyaXRlciwgb3V0IH0gPSBDYXJXcml0ZXIuY3JlYXRlKHJvb3QpO1xuICAgIC8qKiBAdHlwZSB7RXJyb3I/fSAqL1xuICAgIGxldCBlcnJvcjtcbiAgICB2b2lkIChhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGJsb2NrIG9mIGJsb2Nrcykge1xuICAgICAgICAgICAgICAgIGF3YWl0IHdyaXRlci5wdXQoYmxvY2spO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoICggLyoqIEB0eXBlIHthbnl9ICovZXJyKSB7XG4gICAgICAgICAgICBlcnJvciA9IGVycjtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIGF3YWl0IHdyaXRlci5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgfSkoKTtcbiAgICBjb25zdCBjaHVua3MgPSBbXTtcbiAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIG91dClcbiAgICAgICAgY2h1bmtzLnB1c2goY2h1bmspO1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICBpZiAoZXJyb3IgIT0gbnVsbClcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgY29uc3Qgcm9vdHMgPSByb290ICE9IG51bGwgPyBbcm9vdF0gOiBbXTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgQmxvYihjaHVua3MpLCB7IHZlcnNpb246IDEsIHJvb3RzIH0pO1xufVxuLyoqIEBleHRlbmRzIHtSZWFkYWJsZVN0cmVhbTxCbG9jaz59ICovXG5leHBvcnQgY2xhc3MgQmxvY2tTdHJlYW0gZXh0ZW5kcyBSZWFkYWJsZVN0cmVhbSB7XG4gICAgLyoqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuQmxvYkxpa2V9IGNhciAqL1xuICAgIGNvbnN0cnVjdG9yKGNhcikge1xuICAgICAgICAvKiogQHR5cGUge1Byb21pc2U8Q2FyQmxvY2tJdGVyYXRvcj4/fSAqL1xuICAgICAgICBsZXQgYmxvY2tzUHJvbWlzZSA9IG51bGw7XG4gICAgICAgIGNvbnN0IGdldEJsb2Nrc0l0ZXJhYmxlID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGJsb2Nrc1Byb21pc2UpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJsb2Nrc1Byb21pc2U7XG4gICAgICAgICAgICBibG9ja3NQcm9taXNlID0gQ2FyQmxvY2tJdGVyYXRvci5mcm9tSXRlcmFibGUodG9JdGVyYWJsZShjYXIuc3RyZWFtKCkpKTtcbiAgICAgICAgICAgIHJldHVybiBibG9ja3NQcm9taXNlO1xuICAgICAgICB9O1xuICAgICAgICAvKiogQHR5cGUge0FzeW5jSXRlcmF0b3I8QmxvY2s+P30gKi9cbiAgICAgICAgbGV0IGl0ZXJhdG9yID0gbnVsbDtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmxvY2tzID0gYXdhaXQgZ2V0QmxvY2tzSXRlcmFibGUoKTtcbiAgICAgICAgICAgICAgICBpdGVyYXRvciA9IC8qKiBAdHlwZSB7QXN5bmNJdGVyYXRvcjxCbG9jaz59ICovIChibG9ja3NbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFzeW5jIHB1bGwoY29udHJvbGxlcikge1xuICAgICAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICAgICAgaWYgKCFpdGVyYXRvcilcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdtaXNzaW5nIGJsb2NrcyBpdGVyYXRvcicpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IGl0ZXJhdG9yLm5leHQoKTtcbiAgICAgICAgICAgICAgICBpZiAoZG9uZSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUodmFsdWUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIC8qKiBAcmV0dXJucyB7UHJvbWlzZTxpbXBvcnQoJy4vdHlwZXMuanMnKS5BbnlMaW5rW10+fSAqL1xuICAgICAgICB0aGlzLmdldFJvb3RzID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgYmxvY2tzID0gYXdhaXQgZ2V0QmxvY2tzSXRlcmFibGUoKTtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBibG9ja3MuZ2V0Um9vdHMoKTtcbiAgICAgICAgfTtcbiAgICB9XG59XG4vKiBjOCBpZ25vcmUgc3RhcnQgKi9cbi8qKlxuICoge0BsaW5rIFJlYWRhYmxlU3RyZWFtfSBpcyBhbiBhc3luYyBpdGVyYWJsZSBpbiBuZXdlciBlbnZpcm9ubWVudHMsIGJ1dCBpdCdzXG4gKiBub3Qgc3RhbmRhcmQgeWV0LiBUaGlzIGZ1bmN0aW9uIG5vcm1hbGl6ZXMgYSB7QGxpbmsgUmVhZGFibGVTdHJlYW19IHRvIGFcbiAqIGRlZmluaXRlIGFzeW5jIGl0ZXJhYmxlLlxuICpcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1JlYWRhYmxlU3RyZWFtPFQ+IHwgQXN5bmNJdGVyYWJsZTxUPn0gc3RyZWFtXG4gKiBAcmV0dXJucyB7QXN5bmNJdGVyYWJsZTxUPn0gQW4gYXN5bmMgaXRlcmFibGUgb2YgdGhlIGNvbnRlbnRzIG9mIHRoZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtAbGluayBzdHJlYW19IChwb3NzaWJseSB7QGxpbmsgc3RyZWFtfSBpdHNlbGYpLlxuICovXG5mdW5jdGlvbiB0b0l0ZXJhYmxlKHN0cmVhbSkge1xuICAgIHJldHVybiBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiBzdHJlYW1cbiAgICAgICAgPyBzdHJlYW1cbiAgICAgICAgOiAoYXN5bmMgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IHN0cmVhbS5nZXRSZWFkZXIoKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBkb25lLCB2YWx1ZSB9ID0gYXdhaXQgcmVhZGVyLnJlYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbmUpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpO1xufVxuLyogYzggaWdub3JlIGVuZCAqL1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/car.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/constants.js":
/*!************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/constants.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REQUEST_RETRIES: () => (/* binding */ REQUEST_RETRIES)\n/* harmony export */ });\nconst REQUEST_RETRIES = 3;\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9kaXN0L3NyYy9jb25zdGFudHMuanM/YzhlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUkVRVUVTVF9SRVRSSUVTID0gMztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport module object */ _blob_index_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   CAR: () => (/* reexport module object */ _car_js__WEBPACK_IMPORTED_MODULE_13__),\n/* harmony export */   Index: () => (/* reexport module object */ _index_index_js__WEBPACK_IMPORTED_MODULE_8__),\n/* harmony export */   Receipt: () => (/* reexport module object */ _receipts_js__WEBPACK_IMPORTED_MODULE_17__),\n/* harmony export */   ShardingStream: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_14__.ShardingStream),\n/* harmony export */   Store: () => (/* reexport module object */ _store_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   UnixFS: () => (/* reexport module object */ _unixfs_js__WEBPACK_IMPORTED_MODULE_12__),\n/* harmony export */   Upload: () => (/* reexport module object */ _upload_index_js__WEBPACK_IMPORTED_MODULE_10__),\n/* harmony export */   defaultFileComparator: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_14__.defaultFileComparator),\n/* harmony export */   receiptsEndpoint: () => (/* reexport safe */ _service_js__WEBPACK_IMPORTED_MODULE_16__.receiptsEndpoint),\n/* harmony export */   uploadCAR: () => (/* binding */ uploadCAR),\n/* harmony export */   uploadDirectory: () => (/* binding */ uploadDirectory),\n/* harmony export */   uploadFile: () => (/* binding */ uploadFile)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_data_segment_multihash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/data-segment/multihash */ \"(ssr)/./node_modules/@web3-storage/data-segment/src/multihash.js\");\n/* harmony import */ var _web3_storage_filecoin_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/filecoin-client */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/index.js\");\n/* harmony import */ var multiformats_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/link */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link.js\");\n/* harmony import */ var multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/codecs/raw */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/codecs/raw.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/store.js\");\n/* harmony import */ var _blob_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blob/index.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/index.js\");\n/* harmony import */ var _blob_add_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./blob/add.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/blob/add.js\");\n/* harmony import */ var _index_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index/index.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index/index.js\");\n/* harmony import */ var _index_add_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index/add.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index/add.js\");\n/* harmony import */ var _upload_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./upload/index.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/index.js\");\n/* harmony import */ var _upload_add_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./upload/add.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/add.js\");\n/* harmony import */ var _unixfs_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./unixfs.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/unixfs.js\");\n/* harmony import */ var _car_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./car.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/car.js\");\n/* harmony import */ var _sharding_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./sharding.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/sharding.js\");\n/* harmony import */ var _web3_storage_blob_index__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @web3-storage/blob-index */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/index.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n/* harmony import */ var _receipts_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./receipts.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/receipts.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Uploads a file to the service and returns the root data CID for the\n * generated DAG.\n *\n * Required delegated capability proofs: `blob/add`, `index/add`,\n * `filecoin/offer`, `upload/add`\n *\n * @param {import('./types.js').InvocationConfig|import('./types.js').InvocationConfigurator} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`, or a\n * function that generates this object.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `blob/add`, `index/add`, `filecoin/offer` and\n * `upload/add` delegated capability.\n * @param {import('./types.js').BlobLike} file File data.\n * @param {import('./types.js').UploadFileOptions} [options]\n */\nasync function uploadFile(conf, file, options = {}) {\n    return await uploadBlockStream(conf, _unixfs_js__WEBPACK_IMPORTED_MODULE_12__.createFileEncoderStream(file, options), options);\n}\n/**\n * Uploads a directory of files to the service and returns the root data CID\n * for the generated DAG. All files are added to a container directory, with\n * paths in file names preserved.\n *\n * Required delegated capability proofs: `blob/add`, `index/add`,\n * `filecoin/offer`, `upload/add`\n *\n * @param {import('./types.js').InvocationConfig|import('./types.js').InvocationConfigurator} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`, or a\n * function that generates this object\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `blob/add`, `index/add`, `filecoin/offer` and\n * `upload/add` delegated capability.\n * @param {import('./types.js').FileLike[]} files  Files that should be in the directory.\n * To ensure determinism in the IPLD encoding, files are automatically sorted by `file.name`.\n * To retain the order of the files as passed in the array, set `customOrder` option to `true`.\n * @param {import('./types.js').UploadDirectoryOptions} [options]\n */\nasync function uploadDirectory(conf, files, options = {}) {\n    const { customOrder = false } = options;\n    const entries = customOrder ? files : [...files].sort(_sharding_js__WEBPACK_IMPORTED_MODULE_14__.defaultFileComparator);\n    return await uploadBlockStream(conf, _unixfs_js__WEBPACK_IMPORTED_MODULE_12__.createDirectoryEncoderStream(entries, options), options);\n}\n/**\n * Uploads a CAR file to the service.\n *\n * The difference between this function and `Store.add` is that the CAR file is\n * automatically sharded and an \"upload\" is registered, linking the individual\n * shards (see `Upload.add`).\n *\n * Use the `onShardStored` callback to obtain the CIDs of the CAR file shards.\n *\n * Required delegated capability proofs: `blob/add`, `index/add`,\n * `filecoin/offer`, `upload/add`\n *\n * @param {import('./types.js').InvocationConfig|import('./types.js').InvocationConfigurator} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`, or a\n * function that generates this object\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `blob/add`, `index/add`, `filecoin/offer` and `upload/add` delegated capability.\n * @param {import('./types.js').BlobLike} car CAR file.\n * @param {import('./types.js').UploadOptions} [options]\n */\nasync function uploadCAR(conf, car, options = {}) {\n    const blocks = new _car_js__WEBPACK_IMPORTED_MODULE_13__.BlockStream(car);\n    options.rootCID = options.rootCID ?? (await blocks.getRoots())[0];\n    return await uploadBlockStream(conf, blocks, options);\n}\n/**\n * @param {import('./types.js').InvocationConfig|import('./types.js').InvocationConfigurator} conf\n * @param {ReadableStream<import('@ipld/unixfs').Block>} blocks\n * @param {import('./types.js').UploadOptions} [options]\n * @returns {Promise<import('./types.js').AnyLink>}\n */\nasync function uploadBlockStream(conf, blocks, { pieceHasher = _web3_storage_data_segment_multihash__WEBPACK_IMPORTED_MODULE_0__, ...options } = {}) {\n    /** @type {import('./types.js').InvocationConfigurator} */\n    const configure = typeof conf === 'function' ? conf : () => conf;\n    /** @type {Array<Map<import('./types.js').SliceDigest, import('./types.js').Position>>} */\n    const shardIndexes = [];\n    /** @type {import('./types.js').CARLink[]} */\n    const shards = [];\n    /** @type {import('./types.js').AnyLink?} */\n    let root = null;\n    await blocks\n        .pipeThrough(new _sharding_js__WEBPACK_IMPORTED_MODULE_14__.ShardingStream(options))\n        .pipeThrough(\n    /** @type {TransformStream<import('./types.js').IndexedCARFile, import('./types.js').CARMetadata>} */\n    (new TransformStream({\n        async transform(car, controller) {\n            const bytes = new Uint8Array(await car.arrayBuffer());\n            const digest = await multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_4__.sha256.digest(bytes);\n            const conf = await configure([\n                {\n                    can: _blob_add_js__WEBPACK_IMPORTED_MODULE_7__.ability,\n                    nb: _blob_add_js__WEBPACK_IMPORTED_MODULE_7__.input(digest, bytes.length),\n                },\n            ]);\n            // Invoke blob/add and write bytes to write target\n            await _blob_index_js__WEBPACK_IMPORTED_MODULE_6__.add(conf, digest, bytes, options);\n            const cid = multiformats_link__WEBPACK_IMPORTED_MODULE_2__.create(_car_js__WEBPACK_IMPORTED_MODULE_13__.code, digest);\n            let piece;\n            if (pieceHasher) {\n                const multihashDigest = await pieceHasher.digest(bytes);\n                /** @type {import('@web3-storage/capabilities/types').PieceLink} */\n                piece = multiformats_link__WEBPACK_IMPORTED_MODULE_2__.create(multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_3__.code, multihashDigest);\n                const content = multiformats_link__WEBPACK_IMPORTED_MODULE_2__.create(multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_3__.code, digest);\n                // Invoke filecoin/offer for data\n                const result = await _web3_storage_filecoin_client__WEBPACK_IMPORTED_MODULE_1__.Storefront.filecoinOffer({\n                    issuer: conf.issuer,\n                    audience: conf.audience,\n                    // Resource of invocation is the issuer did for being self issued\n                    with: conf.issuer.did(),\n                    proofs: conf.proofs,\n                }, content, piece, options);\n                if (result.out.error) {\n                    throw new Error('failed to offer piece for aggregation into filecoin deal', { cause: result.out.error });\n                }\n            }\n            const { version, roots, size, slices } = car;\n            controller.enqueue({ version, roots, size, cid, piece, slices });\n        },\n    })))\n        .pipeTo(new WritableStream({\n        write(meta) {\n            root = root || meta.roots[0];\n            shards.push(meta.cid);\n            // add the CAR shard itself to the slices\n            meta.slices.set(meta.cid.multihash, [0, meta.size]);\n            shardIndexes.push(meta.slices);\n            if (options.onShardStored)\n                options.onShardStored(meta);\n        },\n    }));\n    /* c8 ignore next */\n    if (!root)\n        throw new Error('missing root CID');\n    const indexBytes = await (0,_web3_storage_blob_index__WEBPACK_IMPORTED_MODULE_15__.indexShardedDAG)(root, shards, shardIndexes);\n    /* c8 ignore next 3 */\n    if (!indexBytes.ok) {\n        throw new Error('failed to archive DAG index', { cause: indexBytes.error });\n    }\n    const indexDigest = await multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_4__.sha256.digest(indexBytes.ok);\n    const indexLink = multiformats_link__WEBPACK_IMPORTED_MODULE_2__.create(_car_js__WEBPACK_IMPORTED_MODULE_13__.code, indexDigest);\n    const [blobAddConf, indexAddConf, uploadAddConf] = await Promise.all([\n        configure([\n            {\n                can: _blob_add_js__WEBPACK_IMPORTED_MODULE_7__.ability,\n                nb: _blob_add_js__WEBPACK_IMPORTED_MODULE_7__.input(indexDigest, indexBytes.ok.length),\n            },\n        ]),\n        configure([\n            {\n                can: _index_add_js__WEBPACK_IMPORTED_MODULE_9__.ability,\n                nb: _index_add_js__WEBPACK_IMPORTED_MODULE_9__.input(indexLink),\n            },\n        ]),\n        configure([\n            {\n                can: _upload_add_js__WEBPACK_IMPORTED_MODULE_11__.ability,\n                nb: _upload_add_js__WEBPACK_IMPORTED_MODULE_11__.input(root, shards),\n            },\n        ]),\n    ]);\n    // Store the index in the space\n    await _blob_index_js__WEBPACK_IMPORTED_MODULE_6__.add(blobAddConf, indexDigest, indexBytes.ok, options);\n    // Register the index with the service\n    await _index_index_js__WEBPACK_IMPORTED_MODULE_8__.add(indexAddConf, indexLink, options);\n    // Register an upload with the service\n    await _upload_index_js__WEBPACK_IMPORTED_MODULE_10__.add(uploadAddConf, root, shards, options);\n    return root;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index/add.js":
/*!************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/index/add.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   input: () => (/* binding */ input)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/index */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index/index.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! p-retry */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/constants.js\");\n\n\n\n\n\n/**\n * Register an \"index\" with the service. The issuer needs the `index/add`\n * delegated capability.\n *\n * Required delegated capability proofs: `index/add`\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `index/add` delegated capability.\n * @param {import('../types.js').CARLink} index Index to store.\n * @param {import('../types.js').RequestOptions} [options]\n * @returns {Promise<import('../types.js').IndexAddSuccess>}\n */\nasync function add({ issuer, with: resource, proofs, audience }, index, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.connection;\n    const result = await (0,p_retry__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(async () => {\n        return await _web3_storage_capabilities_index__WEBPACK_IMPORTED_MODULE_0__.add\n            .invoke({\n            issuer,\n            /* c8 ignore next */\n            audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.servicePrincipal,\n            with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__.SpaceDID.from(resource),\n            nb: input(index),\n            proofs,\n        })\n            .execute(conn);\n    }, {\n        onFailedAttempt: console.warn,\n        retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_3__.REQUEST_RETRIES,\n    });\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_index__WEBPACK_IMPORTED_MODULE_0__.add.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out.ok;\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_index__WEBPACK_IMPORTED_MODULE_0__.add.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {import('../types.js').CARLink} index\n */\nconst input = (index) => ({ index });\n//# sourceMappingURL=add.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2luZGV4L2FkZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRTtBQUNWO0FBQ2hDO0FBQ2lDO0FBQ1g7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywrQkFBK0I7QUFDMUMsV0FBVyxzQ0FBc0M7QUFDakQsYUFBYTtBQUNiO0FBQ08scUJBQXFCLDBDQUEwQyxxQkFBcUI7QUFDM0Y7QUFDQSx1Q0FBdUMsbURBQVU7QUFDakQseUJBQXlCLG1EQUFLO0FBQzlCLHFCQUFxQixpRUFBcUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHlEQUFnQjtBQUNsRCxrQkFBa0Isc0VBQVE7QUFDMUI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLG9DQUFvQywwREFBZTtBQUNuRCxLQUFLO0FBQ0w7QUFDQSxrQ0FBa0MsaUVBQXFCLE1BQU07QUFDN0Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQkFBZ0IsaUVBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsK0JBQStCO0FBQzFDO0FBQ08sNEJBQTRCLE9BQU87QUFDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvZGlzdC9zcmMvaW5kZXgvYWRkLmpzPzUzODUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgSW5kZXhDYXBhYmlsaXRpZXMgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvaW5kZXgnO1xuaW1wb3J0IHsgU3BhY2VESUQgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy91dGlscyc7XG5pbXBvcnQgcmV0cnkgZnJvbSAncC1yZXRyeSc7XG5pbXBvcnQgeyBzZXJ2aWNlUHJpbmNpcGFsLCBjb25uZWN0aW9uIH0gZnJvbSAnLi4vc2VydmljZS5qcyc7XG5pbXBvcnQgeyBSRVFVRVNUX1JFVFJJRVMgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuLyoqXG4gKiBSZWdpc3RlciBhbiBcImluZGV4XCIgd2l0aCB0aGUgc2VydmljZS4gVGhlIGlzc3VlciBuZWVkcyB0aGUgYGluZGV4L2FkZGBcbiAqIGRlbGVnYXRlZCBjYXBhYmlsaXR5LlxuICpcbiAqIFJlcXVpcmVkIGRlbGVnYXRlZCBjYXBhYmlsaXR5IHByb29mczogYGluZGV4L2FkZGBcbiAqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5JbnZvY2F0aW9uQ29uZmlnfSBjb25mIENvbmZpZ3VyYXRpb25cbiAqIGZvciB0aGUgVUNBTiBpbnZvY2F0aW9uLiBBbiBvYmplY3Qgd2l0aCBgaXNzdWVyYCwgYHdpdGhgIGFuZCBgcHJvb2ZzYC5cbiAqXG4gKiBUaGUgYGlzc3VlcmAgaXMgdGhlIHNpZ25pbmcgYXV0aG9yaXR5IHRoYXQgaXMgaXNzdWluZyB0aGUgVUNBTlxuICogaW52b2NhdGlvbihzKS4gSXQgaXMgdHlwaWNhbGx5IHRoZSB1c2VyIF9hZ2VudF8uXG4gKlxuICogVGhlIGB3aXRoYCBpcyB0aGUgcmVzb3VyY2UgdGhlIGludm9jYXRpb24gYXBwbGllcyB0by4gSXQgaXMgdHlwaWNhbGx5IHRoZVxuICogRElEIG9mIGEgc3BhY2UuXG4gKlxuICogVGhlIGBwcm9vZnNgIGFyZSBhIHNldCBvZiBjYXBhYmlsaXR5IGRlbGVnYXRpb25zIHRoYXQgcHJvdmUgdGhlIGlzc3VlclxuICogaGFzIHRoZSBjYXBhYmlsaXR5IHRvIHBlcmZvcm0gdGhlIGFjdGlvbi5cbiAqXG4gKiBUaGUgaXNzdWVyIG5lZWRzIHRoZSBgaW5kZXgvYWRkYCBkZWxlZ2F0ZWQgY2FwYWJpbGl0eS5cbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkNBUkxpbmt9IGluZGV4IEluZGV4IHRvIHN0b3JlLlxuICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuUmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge1Byb21pc2U8aW1wb3J0KCcuLi90eXBlcy5qcycpLkluZGV4QWRkU3VjY2Vzcz59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGQoeyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH0sIGluZGV4LCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXRyeShhc3luYyAoKSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCBJbmRleENhcGFiaWxpdGllcy5hZGRcbiAgICAgICAgICAgIC5pbnZva2Uoe1xuICAgICAgICAgICAgaXNzdWVyLFxuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICAgICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgICAgICAgICAgd2l0aDogU3BhY2VESUQuZnJvbShyZXNvdXJjZSksXG4gICAgICAgICAgICBuYjogaW5wdXQoaW5kZXgpLFxuICAgICAgICAgICAgcHJvb2ZzLFxuICAgICAgICB9KVxuICAgICAgICAgICAgLmV4ZWN1dGUoY29ubik7XG4gICAgfSwge1xuICAgICAgICBvbkZhaWxlZEF0dGVtcHQ6IGNvbnNvbGUud2FybixcbiAgICAgICAgcmV0cmllczogb3B0aW9ucy5yZXRyaWVzID8/IFJFUVVFU1RfUkVUUklFUyxcbiAgICB9KTtcbiAgICBpZiAoIXJlc3VsdC5vdXQub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtJbmRleENhcGFiaWxpdGllcy5hZGQuY2FufSBpbnZvY2F0aW9uYCwge1xuICAgICAgICAgICAgY2F1c2U6IHJlc3VsdC5vdXQuZXJyb3IsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0Lm91dC5vaztcbn1cbi8qKiBSZXR1cm5zIHRoZSBhYmlsaXR5IHVzZWQgYnkgYW4gaW52b2NhdGlvbi4gKi9cbmV4cG9ydCBjb25zdCBhYmlsaXR5ID0gSW5kZXhDYXBhYmlsaXRpZXMuYWRkLmNhbjtcbi8qKlxuICogUmV0dXJucyByZXF1aXJlZCBpbnB1dCB0byB0aGUgaW52b2NhdGlvbi5cbiAqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5DQVJMaW5rfSBpbmRleFxuICovXG5leHBvcnQgY29uc3QgaW5wdXQgPSAoaW5kZXgpID0+ICh7IGluZGV4IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index/add.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/index/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* reexport safe */ _add_js__WEBPACK_IMPORTED_MODULE_0__.add)\n/* harmony export */ });\n/* harmony import */ var _add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index/add.js\");\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2luZGV4L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL2luZGV4L2luZGV4LmpzP2FlMGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgYWRkIH0gZnJvbSAnLi9hZGQuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/receipts.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/receipts.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReceiptMissing: () => (/* binding */ ReceiptMissing),\n/* harmony export */   ReceiptNotFound: () => (/* binding */ ReceiptNotFound),\n/* harmony export */   poll: () => (/* binding */ poll)\n/* harmony export */ });\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! p-retry */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js\");\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/constants.js\");\n\n\n\n\nclass ReceiptNotFound extends Error {\n    /**\n     * @param {import('multiformats').UnknownLink} taskCid\n     */\n    constructor(taskCid) {\n        super();\n        this.taskCid = taskCid;\n    }\n    /* c8 ignore start */\n    get reason() {\n        return `receipt not found for task ${this.taskCid} in the indexed workflow`;\n    }\n    /* c8 ignore end */\n    get name() {\n        return 'ReceiptNotFound';\n    }\n}\nclass ReceiptMissing extends Error {\n    /**\n     * @param {import('multiformats').UnknownLink} taskCid\n     */\n    constructor(taskCid) {\n        super();\n        this.taskCid = taskCid;\n    }\n    /* c8 ignore start */\n    get reason() {\n        return `receipt missing for task ${this.taskCid}`;\n    }\n    /* c8 ignore end */\n    get name() {\n        return 'ReceiptMissing';\n    }\n}\n/**\n * Polls for a receipt for an executed task by its CID.\n *\n * @param {import('multiformats').UnknownLink} taskCid\n * @param {import('./types.js').RequestOptions} [options]\n * @returns {Promise<import('@ucanto/interface').Receipt>}\n */\nasync function poll(taskCid, options = {}) {\n    return await (0,p_retry__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(async () => {\n        const res = await get(taskCid, options);\n        if (res.error) {\n            // @ts-ignore\n            if (res.error.name === 'ReceiptNotFound') {\n                // throw an error that will cause `p-retry` to retry with\n                throw res.error;\n            }\n            else {\n                throw new p_retry__WEBPACK_IMPORTED_MODULE_3__.AbortError(new Error('failed to fetch blob/accept receipt', {\n                    cause: res.error,\n                }));\n            }\n        }\n        return res.ok;\n    }, {\n        onFailedAttempt: console.warn,\n        /* c8 ignore next */\n        retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_2__.REQUEST_RETRIES,\n    });\n}\n/**\n * Calculate a receipt endpoint from the URL of a channel, if it has one.\n *\n * @param {import('@ucanto/interface').Channel<Record<string, any>>} channel\n */\nfunction receiptEndpointFromChannel(channel) {\n    if ('url' in channel && channel.url instanceof URL) {\n        const url = channel.url;\n        return new URL('/receipt/', url.toString());\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Get a receipt for an executed task by its CID.\n *\n * @param {import('multiformats').UnknownLink} taskCid\n * @param {import('./types.js').RequestOptions} [options]\n * @returns {Promise<import('@ucanto/client').Result<import('@ucanto/interface').Receipt, Error>>}\n */\nasync function get(taskCid, options = {}) {\n    const channel = options.connection?.channel;\n    const receiptsEndpoint = options.receiptsEndpoint ??\n        (channel && receiptEndpointFromChannel(channel)) ??\n        _service_js__WEBPACK_IMPORTED_MODULE_1__.receiptsEndpoint;\n    // Fetch receipt from endpoint\n    const url = new URL(taskCid.toString(), receiptsEndpoint);\n    const fetchReceipt = options.fetch ?? globalThis.fetch.bind(globalThis);\n    const workflowResponse = await fetchReceipt(url);\n    /* c8 ignore start */\n    if (workflowResponse.status === 404) {\n        return {\n            error: new ReceiptNotFound(taskCid),\n        };\n    }\n    /* c8 ignore stop */\n    // Get receipt from Message Archive\n    const agentMessageBytes = new Uint8Array(await workflowResponse.arrayBuffer());\n    // Decode message\n    const agentMessage = await _ucanto_transport__WEBPACK_IMPORTED_MODULE_0__.CAR.request.decode({\n        body: agentMessageBytes,\n        headers: {},\n    });\n    // Get receipt from the potential multiple receipts in the message\n    const receipt = agentMessage.receipts.get(taskCid.toString());\n    if (!receipt) {\n        return {\n            error: new ReceiptMissing(taskCid),\n        };\n    }\n    return {\n        ok: receipt,\n    };\n}\n//# sourceMappingURL=receipts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3JlY2VpcHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNEM7QUFDSjtBQUNtQztBQUMxQjtBQUMxQztBQUNQO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsY0FBYztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsYUFBYTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9DQUFvQztBQUMvQyxXQUFXLHFDQUFxQztBQUNoRCxhQUFhO0FBQ2I7QUFDTyx5Q0FBeUM7QUFDaEQsaUJBQWlCLG1EQUFLO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsK0NBQVU7QUFDcEM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxvQ0FBb0MsMERBQWU7QUFDbkQsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywwREFBMEQ7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9DQUFvQztBQUMvQyxXQUFXLHFDQUFxQztBQUNoRCxhQUFhO0FBQ2I7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBdUI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixpRUFBa0I7QUFDakQ7QUFDQSxtQkFBbUI7QUFDbkIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9kaXN0L3NyYy9yZWNlaXB0cy5qcz80YTAxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZXRyeSwgeyBBYm9ydEVycm9yIH0gZnJvbSAncC1yZXRyeSc7XG5pbXBvcnQgeyBDQVIgfSBmcm9tICdAdWNhbnRvL3RyYW5zcG9ydCc7XG5pbXBvcnQgeyByZWNlaXB0c0VuZHBvaW50IGFzIGRlZmF1bHRSZWNlaXB0c0VuZHBvaW50IH0gZnJvbSAnLi9zZXJ2aWNlLmpzJztcbmltcG9ydCB7IFJFUVVFU1RfUkVUUklFUyB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmV4cG9ydCBjbGFzcyBSZWNlaXB0Tm90Rm91bmQgZXh0ZW5kcyBFcnJvciB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cycpLlVua25vd25MaW5rfSB0YXNrQ2lkXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodGFza0NpZCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnRhc2tDaWQgPSB0YXNrQ2lkO1xuICAgIH1cbiAgICAvKiBjOCBpZ25vcmUgc3RhcnQgKi9cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gYHJlY2VpcHQgbm90IGZvdW5kIGZvciB0YXNrICR7dGhpcy50YXNrQ2lkfSBpbiB0aGUgaW5kZXhlZCB3b3JrZmxvd2A7XG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBlbmQgKi9cbiAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuICdSZWNlaXB0Tm90Rm91bmQnO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSZWNlaXB0TWlzc2luZyBleHRlbmRzIEVycm9yIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnbXVsdGlmb3JtYXRzJykuVW5rbm93bkxpbmt9IHRhc2tDaWRcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih0YXNrQ2lkKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMudGFza0NpZCA9IHRhc2tDaWQ7XG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBzdGFydCAqL1xuICAgIGdldCByZWFzb24oKSB7XG4gICAgICAgIHJldHVybiBgcmVjZWlwdCBtaXNzaW5nIGZvciB0YXNrICR7dGhpcy50YXNrQ2lkfWA7XG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBlbmQgKi9cbiAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuICdSZWNlaXB0TWlzc2luZyc7XG4gICAgfVxufVxuLyoqXG4gKiBQb2xscyBmb3IgYSByZWNlaXB0IGZvciBhbiBleGVjdXRlZCB0YXNrIGJ5IGl0cyBDSUQuXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cycpLlVua25vd25MaW5rfSB0YXNrQ2lkXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtQcm9taXNlPGltcG9ydCgnQHVjYW50by9pbnRlcmZhY2UnKS5SZWNlaXB0Pn1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBvbGwodGFza0NpZCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHJldHJ5KGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0KHRhc2tDaWQsIG9wdGlvbnMpO1xuICAgICAgICBpZiAocmVzLmVycm9yKSB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICBpZiAocmVzLmVycm9yLm5hbWUgPT09ICdSZWNlaXB0Tm90Rm91bmQnKSB7XG4gICAgICAgICAgICAgICAgLy8gdGhyb3cgYW4gZXJyb3IgdGhhdCB3aWxsIGNhdXNlIGBwLXJldHJ5YCB0byByZXRyeSB3aXRoXG4gICAgICAgICAgICAgICAgdGhyb3cgcmVzLmVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEFib3J0RXJyb3IobmV3IEVycm9yKCdmYWlsZWQgdG8gZmV0Y2ggYmxvYi9hY2NlcHQgcmVjZWlwdCcsIHtcbiAgICAgICAgICAgICAgICAgICAgY2F1c2U6IHJlcy5lcnJvcixcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcy5vaztcbiAgICB9LCB7XG4gICAgICAgIG9uRmFpbGVkQXR0ZW1wdDogY29uc29sZS53YXJuLFxuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICByZXRyaWVzOiBvcHRpb25zLnJldHJpZXMgPz8gUkVRVUVTVF9SRVRSSUVTLFxuICAgIH0pO1xufVxuLyoqXG4gKiBDYWxjdWxhdGUgYSByZWNlaXB0IGVuZHBvaW50IGZyb20gdGhlIFVSTCBvZiBhIGNoYW5uZWwsIGlmIGl0IGhhcyBvbmUuXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJ0B1Y2FudG8vaW50ZXJmYWNlJykuQ2hhbm5lbDxSZWNvcmQ8c3RyaW5nLCBhbnk+Pn0gY2hhbm5lbFxuICovXG5mdW5jdGlvbiByZWNlaXB0RW5kcG9pbnRGcm9tQ2hhbm5lbChjaGFubmVsKSB7XG4gICAgaWYgKCd1cmwnIGluIGNoYW5uZWwgJiYgY2hhbm5lbC51cmwgaW5zdGFuY2VvZiBVUkwpIHtcbiAgICAgICAgY29uc3QgdXJsID0gY2hhbm5lbC51cmw7XG4gICAgICAgIHJldHVybiBuZXcgVVJMKCcvcmVjZWlwdC8nLCB1cmwudG9TdHJpbmcoKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG4vKipcbiAqIEdldCBhIHJlY2VpcHQgZm9yIGFuIGV4ZWN1dGVkIHRhc2sgYnkgaXRzIENJRC5cbiAqXG4gKiBAcGFyYW0ge2ltcG9ydCgnbXVsdGlmb3JtYXRzJykuVW5rbm93bkxpbmt9IHRhc2tDaWRcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuUmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge1Byb21pc2U8aW1wb3J0KCdAdWNhbnRvL2NsaWVudCcpLlJlc3VsdDxpbXBvcnQoJ0B1Y2FudG8vaW50ZXJmYWNlJykuUmVjZWlwdCwgRXJyb3I+Pn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZ2V0KHRhc2tDaWQsIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IGNoYW5uZWwgPSBvcHRpb25zLmNvbm5lY3Rpb24/LmNoYW5uZWw7XG4gICAgY29uc3QgcmVjZWlwdHNFbmRwb2ludCA9IG9wdGlvbnMucmVjZWlwdHNFbmRwb2ludCA/P1xuICAgICAgICAoY2hhbm5lbCAmJiByZWNlaXB0RW5kcG9pbnRGcm9tQ2hhbm5lbChjaGFubmVsKSkgPz9cbiAgICAgICAgZGVmYXVsdFJlY2VpcHRzRW5kcG9pbnQ7XG4gICAgLy8gRmV0Y2ggcmVjZWlwdCBmcm9tIGVuZHBvaW50XG4gICAgY29uc3QgdXJsID0gbmV3IFVSTCh0YXNrQ2lkLnRvU3RyaW5nKCksIHJlY2VpcHRzRW5kcG9pbnQpO1xuICAgIGNvbnN0IGZldGNoUmVjZWlwdCA9IG9wdGlvbnMuZmV0Y2ggPz8gZ2xvYmFsVGhpcy5mZXRjaC5iaW5kKGdsb2JhbFRoaXMpO1xuICAgIGNvbnN0IHdvcmtmbG93UmVzcG9uc2UgPSBhd2FpdCBmZXRjaFJlY2VpcHQodXJsKTtcbiAgICAvKiBjOCBpZ25vcmUgc3RhcnQgKi9cbiAgICBpZiAod29ya2Zsb3dSZXNwb25zZS5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZXJyb3I6IG5ldyBSZWNlaXB0Tm90Rm91bmQodGFza0NpZCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBzdG9wICovXG4gICAgLy8gR2V0IHJlY2VpcHQgZnJvbSBNZXNzYWdlIEFyY2hpdmVcbiAgICBjb25zdCBhZ2VudE1lc3NhZ2VCeXRlcyA9IG5ldyBVaW50OEFycmF5KGF3YWl0IHdvcmtmbG93UmVzcG9uc2UuYXJyYXlCdWZmZXIoKSk7XG4gICAgLy8gRGVjb2RlIG1lc3NhZ2VcbiAgICBjb25zdCBhZ2VudE1lc3NhZ2UgPSBhd2FpdCBDQVIucmVxdWVzdC5kZWNvZGUoe1xuICAgICAgICBib2R5OiBhZ2VudE1lc3NhZ2VCeXRlcyxcbiAgICAgICAgaGVhZGVyczoge30sXG4gICAgfSk7XG4gICAgLy8gR2V0IHJlY2VpcHQgZnJvbSB0aGUgcG90ZW50aWFsIG11bHRpcGxlIHJlY2VpcHRzIGluIHRoZSBtZXNzYWdlXG4gICAgY29uc3QgcmVjZWlwdCA9IGFnZW50TWVzc2FnZS5yZWNlaXB0cy5nZXQodGFza0NpZC50b1N0cmluZygpKTtcbiAgICBpZiAoIXJlY2VpcHQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycm9yOiBuZXcgUmVjZWlwdE1pc3NpbmcodGFza0NpZCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG9rOiByZWNlaXB0LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWNlaXB0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/receipts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/runtime.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/runtime.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudflareWorkers: () => (/* binding */ isCloudflareWorkers)\n/* harmony export */ });\n/* c8 ignore next 3 */\nconst isCloudflareWorkers = typeof navigator !== 'undefined' &&\n    navigator?.userAgent === 'Cloudflare-Workers';\n//# sourceMappingURL=runtime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3J1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3J1bnRpbWUuanM/MGNkMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBjOCBpZ25vcmUgbmV4dCAzICovXG5leHBvcnQgY29uc3QgaXNDbG91ZGZsYXJlV29ya2VycyA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmXG4gICAgbmF2aWdhdG9yPy51c2VyQWdlbnQgPT09ICdDbG91ZGZsYXJlLVdvcmtlcnMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cnVudGltZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/runtime.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/service.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connection: () => (/* binding */ connection),\n/* harmony export */   receiptsEndpoint: () => (/* binding */ receiptsEndpoint),\n/* harmony export */   servicePrincipal: () => (/* binding */ servicePrincipal),\n/* harmony export */   serviceURL: () => (/* binding */ serviceURL)\n/* harmony export */ });\n/* harmony import */ var _ucanto_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/client */ \"(ssr)/./node_modules/@ucanto/client/src/lib.js\");\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n\n\n\nconst serviceURL = new URL('https://up.web3.storage');\nconst servicePrincipal = _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_2__.parse('did:web:web3.storage');\nconst receiptsEndpoint = 'https://up.web3.storage/receipt/';\n/** @type {import('@ucanto/interface').ConnectionView<import('./types.js').Service>} */\nconst connection = (0,_ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect)({\n    id: servicePrincipal,\n    codec: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.CAR.outbound,\n    channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.HTTP.open({\n        url: serviceURL,\n        method: 'POST',\n    }),\n});\n//# sourceMappingURL=service.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3NlcnZpY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF5QztBQUNLO0FBQ0o7QUFDbkM7QUFDQSx5QkFBeUIscURBQVM7QUFDbEM7QUFDUCxXQUFXLDBFQUEwRTtBQUM5RSxtQkFBbUIsdURBQU87QUFDakM7QUFDQSxXQUFXLDJEQUFZO0FBQ3ZCLGFBQWEsd0RBQVM7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvZGlzdC9zcmMvc2VydmljZS5qcz9iZDc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdAdWNhbnRvL2NsaWVudCc7XG5pbXBvcnQgeyBDQVIsIEhUVFAgfSBmcm9tICdAdWNhbnRvL3RyYW5zcG9ydCc7XG5pbXBvcnQgKiBhcyBESUQgZnJvbSAnQGlwbGQvZGFnLXVjYW4vZGlkJztcbmV4cG9ydCBjb25zdCBzZXJ2aWNlVVJMID0gbmV3IFVSTCgnaHR0cHM6Ly91cC53ZWIzLnN0b3JhZ2UnKTtcbmV4cG9ydCBjb25zdCBzZXJ2aWNlUHJpbmNpcGFsID0gRElELnBhcnNlKCdkaWQ6d2ViOndlYjMuc3RvcmFnZScpO1xuZXhwb3J0IGNvbnN0IHJlY2VpcHRzRW5kcG9pbnQgPSAnaHR0cHM6Ly91cC53ZWIzLnN0b3JhZ2UvcmVjZWlwdC8nO1xuLyoqIEB0eXBlIHtpbXBvcnQoJ0B1Y2FudG8vaW50ZXJmYWNlJykuQ29ubmVjdGlvblZpZXc8aW1wb3J0KCcuL3R5cGVzLmpzJykuU2VydmljZT59ICovXG5leHBvcnQgY29uc3QgY29ubmVjdGlvbiA9IGNvbm5lY3Qoe1xuICAgIGlkOiBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgIGNvZGVjOiBDQVIub3V0Ym91bmQsXG4gICAgY2hhbm5lbDogSFRUUC5vcGVuKHtcbiAgICAgICAgdXJsOiBzZXJ2aWNlVVJMLFxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICB9KSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VydmljZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/sharding.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/sharding.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShardingStream: () => (/* binding */ ShardingStream),\n/* harmony export */   defaultFileComparator: () => (/* binding */ defaultFileComparator)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_blob_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/blob-index */ \"(ssr)/./node_modules/@web3-storage/blob-index/dist/src/index.js\");\n/* harmony import */ var _car_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./car.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/car.js\");\n\n\n/**\n * @typedef {import('./types.js').FileLike} FileLike\n */\n// https://observablehq.com/@gozala/w3up-shard-size\nconst SHARD_SIZE = 133169152;\n/**\n * Shard a set of blocks into a set of CAR files. By default the last block\n * received is assumed to be the DAG root and becomes the CAR root CID for the\n * last CAR output. Set the `rootCID` option to override.\n *\n * @extends {TransformStream<import('@ipld/unixfs').Block, import('./types.js').IndexedCARFile>}\n */\nclass ShardingStream extends TransformStream {\n    /**\n     * @param {import('./types.js').ShardingOptions} [options]\n     */\n    constructor(options = {}) {\n        const shardSize = options.shardSize ?? SHARD_SIZE;\n        const maxBlockLength = shardSize - (0,_car_js__WEBPACK_IMPORTED_MODULE_1__.headerEncodingLength)();\n        /** @type {import('@ipld/unixfs').Block[]} */\n        let blocks = [];\n        /** @type {import('@ipld/unixfs').Block[] | null} */\n        let readyBlocks = null;\n        /** @type {Map<import('./types.js').SliceDigest, import('./types.js').Position>} */\n        let slices = new _web3_storage_blob_index__WEBPACK_IMPORTED_MODULE_0__.DigestMap();\n        /** @type {Map<import('./types.js').SliceDigest, import('./types.js').Position> | null} */\n        let readySlices = null;\n        let currentLength = 0;\n        super({\n            async transform(block, controller) {\n                if (readyBlocks != null && readySlices != null) {\n                    controller.enqueue(await encodeCAR(readyBlocks, readySlices));\n                    readyBlocks = null;\n                    readySlices = null;\n                }\n                const blockHeaderLength = (0,_car_js__WEBPACK_IMPORTED_MODULE_1__.blockHeaderEncodingLength)(block);\n                const blockLength = blockHeaderLength + block.bytes.length;\n                if (blockLength > maxBlockLength) {\n                    throw new Error(`block will cause CAR to exceed shard size: ${block.cid}`);\n                }\n                if (blocks.length && currentLength + blockLength > maxBlockLength) {\n                    readyBlocks = blocks;\n                    readySlices = slices;\n                    blocks = [];\n                    slices = new _web3_storage_blob_index__WEBPACK_IMPORTED_MODULE_0__.DigestMap();\n                    currentLength = 0;\n                }\n                blocks.push(block);\n                slices.set(block.cid.multihash, [\n                    (0,_car_js__WEBPACK_IMPORTED_MODULE_1__.headerEncodingLength)() + currentLength + blockHeaderLength,\n                    block.bytes.length,\n                ]);\n                currentLength += blockLength;\n            },\n            async flush(controller) {\n                if (readyBlocks != null && readySlices != null) {\n                    controller.enqueue(await encodeCAR(readyBlocks, readySlices));\n                }\n                const rootBlock = blocks.at(-1);\n                if (rootBlock == null)\n                    return;\n                const rootCID = options.rootCID ?? rootBlock.cid;\n                const headerLength = (0,_car_js__WEBPACK_IMPORTED_MODULE_1__.headerEncodingLength)(rootCID);\n                // if adding CAR root overflows the shard limit we move overflowing\n                // blocks into another CAR.\n                if (headerLength + currentLength > shardSize) {\n                    const overage = headerLength + currentLength - shardSize;\n                    const overflowBlocks = [];\n                    let overflowCurrentLength = 0;\n                    while (overflowCurrentLength < overage) {\n                        const block = blocks[blocks.length - 1];\n                        blocks.pop();\n                        slices.delete(block.cid.multihash);\n                        overflowBlocks.unshift(block);\n                        overflowCurrentLength += (0,_car_js__WEBPACK_IMPORTED_MODULE_1__.blockEncodingLength)(block);\n                        // need at least 1 block in original shard\n                        if (blocks.length < 1)\n                            throw new Error(`block will cause CAR to exceed shard size: ${block.cid}`);\n                    }\n                    controller.enqueue(await encodeCAR(blocks, slices));\n                    // Finally, re-calc block positions from blocks we moved out of the\n                    // CAR that was too big.\n                    overflowCurrentLength = 0;\n                    /** @type {Map<import('./types.js').SliceDigest, import('./types.js').Position>} */\n                    const overflowSlices = new _web3_storage_blob_index__WEBPACK_IMPORTED_MODULE_0__.DigestMap();\n                    for (const block of overflowBlocks) {\n                        const overflowBlockHeaderLength = (0,_car_js__WEBPACK_IMPORTED_MODULE_1__.blockHeaderEncodingLength)(block);\n                        overflowSlices.set(block.cid.multihash, [\n                            headerLength + overflowCurrentLength + overflowBlockHeaderLength,\n                            block.bytes.length,\n                        ]);\n                        overflowCurrentLength +=\n                            overflowBlockHeaderLength + block.bytes.length;\n                    }\n                    controller.enqueue(await encodeCAR(overflowBlocks, overflowSlices, rootCID));\n                }\n                else {\n                    // adjust offsets for longer header in final shard\n                    const diff = headerLength - (0,_car_js__WEBPACK_IMPORTED_MODULE_1__.headerEncodingLength)();\n                    for (const slice of slices.values()) {\n                        slice[0] += diff;\n                    }\n                    controller.enqueue(await encodeCAR(blocks, slices, rootCID));\n                }\n            },\n        });\n    }\n}\n/**\n * Default comparator for FileLikes. Sorts by file name in ascending order.\n *\n * @param {FileLike} a\n * @param {FileLike} b\n * @param {(file: FileLike) => string} getComparedValue - given a file being sorted, return the value by which its order should be determined, if it is different than the file object itself (e.g. file.name)\n */\nconst defaultFileComparator = (a, b, getComparedValue = (file) => file.name) => {\n    return ascending(a, b, getComparedValue);\n};\n/**\n * a comparator for sorting in ascending order. Use with Sorted or Array#sort.\n *\n * @template T\n * @param {T} a\n * @param {T} b\n * @param {(i: T) => any} getComparedValue - given an item being sorted, return the value by which it should be sorted, if it is different than the item\n */\nfunction ascending(a, b, getComparedValue) {\n    const ask = getComparedValue(a);\n    const bsk = getComparedValue(b);\n    if (ask === bsk)\n        return 0;\n    else if (ask < bsk)\n        return -1;\n    return 1;\n}\n/**\n * @param {Iterable<import('@ipld/unixfs').Block>} blocks\n * @param {Map<import('./types.js').SliceDigest, import('./types.js').Position>} slices\n * @param {import('./types.js').AnyLink} [root]\n * @returns {Promise<import('./types.js').IndexedCARFile>}\n */\nconst encodeCAR = async (blocks, slices, root) => Object.assign(await (0,_car_js__WEBPACK_IMPORTED_MODULE_1__.encode)(blocks, root), { slices });\n//# sourceMappingURL=sharding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3NoYXJkaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUQ7QUFDb0Q7QUFDekc7QUFDQSxhQUFhLCtCQUErQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLGVBQWUsc0NBQXNDO0FBQ3JEO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0EsMkNBQTJDLDZEQUFvQjtBQUMvRCxtQkFBbUIsZ0NBQWdDO0FBQ25EO0FBQ0EsbUJBQW1CLHVDQUF1QztBQUMxRDtBQUNBLG1CQUFtQixzRUFBc0U7QUFDekYseUJBQXlCLCtEQUFTO0FBQ2xDLG1CQUFtQiw2RUFBNkU7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGtFQUF5QjtBQUNuRTtBQUNBO0FBQ0Esa0ZBQWtGLFVBQVU7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQywrREFBUztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2REFBb0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsNkRBQW9CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsNERBQW1CO0FBQ3BFO0FBQ0E7QUFDQSwwRkFBMEYsVUFBVTtBQUNwRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHNFQUFzRTtBQUNyRywrQ0FBK0MsK0RBQVM7QUFDeEQ7QUFDQSwwREFBMEQsa0VBQXlCO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsNkRBQW9CO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsNEJBQTRCO0FBQ3ZDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLEdBQUc7QUFDZCxXQUFXLGVBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsd0NBQXdDO0FBQ25ELFdBQVcsc0VBQXNFO0FBQ2pGLFdBQVcsOEJBQThCO0FBQ3pDLGFBQWE7QUFDYjtBQUNBLHNFQUFzRSwrQ0FBTSxrQkFBa0IsUUFBUTtBQUN0RyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9kaXN0L3NyYy9zaGFyZGluZy5qcz9iZTVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpZ2VzdE1hcCB9IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvYmxvYi1pbmRleCc7XG5pbXBvcnQgeyBibG9ja0VuY29kaW5nTGVuZ3RoLCBibG9ja0hlYWRlckVuY29kaW5nTGVuZ3RoLCBlbmNvZGUsIGhlYWRlckVuY29kaW5nTGVuZ3RoLCB9IGZyb20gJy4vY2FyLmpzJztcbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi90eXBlcy5qcycpLkZpbGVMaWtlfSBGaWxlTGlrZVxuICovXG4vLyBodHRwczovL29ic2VydmFibGVocS5jb20vQGdvemFsYS93M3VwLXNoYXJkLXNpemVcbmNvbnN0IFNIQVJEX1NJWkUgPSAxMzMxNjkxNTI7XG4vKipcbiAqIFNoYXJkIGEgc2V0IG9mIGJsb2NrcyBpbnRvIGEgc2V0IG9mIENBUiBmaWxlcy4gQnkgZGVmYXVsdCB0aGUgbGFzdCBibG9ja1xuICogcmVjZWl2ZWQgaXMgYXNzdW1lZCB0byBiZSB0aGUgREFHIHJvb3QgYW5kIGJlY29tZXMgdGhlIENBUiByb290IENJRCBmb3IgdGhlXG4gKiBsYXN0IENBUiBvdXRwdXQuIFNldCB0aGUgYHJvb3RDSURgIG9wdGlvbiB0byBvdmVycmlkZS5cbiAqXG4gKiBAZXh0ZW5kcyB7VHJhbnNmb3JtU3RyZWFtPGltcG9ydCgnQGlwbGQvdW5peGZzJykuQmxvY2ssIGltcG9ydCgnLi90eXBlcy5qcycpLkluZGV4ZWRDQVJGaWxlPn1cbiAqL1xuZXhwb3J0IGNsYXNzIFNoYXJkaW5nU3RyZWFtIGV4dGVuZHMgVHJhbnNmb3JtU3RyZWFtIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi90eXBlcy5qcycpLlNoYXJkaW5nT3B0aW9uc30gW29wdGlvbnNdXG4gICAgICovXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHNoYXJkU2l6ZSA9IG9wdGlvbnMuc2hhcmRTaXplID8/IFNIQVJEX1NJWkU7XG4gICAgICAgIGNvbnN0IG1heEJsb2NrTGVuZ3RoID0gc2hhcmRTaXplIC0gaGVhZGVyRW5jb2RpbmdMZW5ndGgoKTtcbiAgICAgICAgLyoqIEB0eXBlIHtpbXBvcnQoJ0BpcGxkL3VuaXhmcycpLkJsb2NrW119ICovXG4gICAgICAgIGxldCBibG9ja3MgPSBbXTtcbiAgICAgICAgLyoqIEB0eXBlIHtpbXBvcnQoJ0BpcGxkL3VuaXhmcycpLkJsb2NrW10gfCBudWxsfSAqL1xuICAgICAgICBsZXQgcmVhZHlCbG9ja3MgPSBudWxsO1xuICAgICAgICAvKiogQHR5cGUge01hcDxpbXBvcnQoJy4vdHlwZXMuanMnKS5TbGljZURpZ2VzdCwgaW1wb3J0KCcuL3R5cGVzLmpzJykuUG9zaXRpb24+fSAqL1xuICAgICAgICBsZXQgc2xpY2VzID0gbmV3IERpZ2VzdE1hcCgpO1xuICAgICAgICAvKiogQHR5cGUge01hcDxpbXBvcnQoJy4vdHlwZXMuanMnKS5TbGljZURpZ2VzdCwgaW1wb3J0KCcuL3R5cGVzLmpzJykuUG9zaXRpb24+IHwgbnVsbH0gKi9cbiAgICAgICAgbGV0IHJlYWR5U2xpY2VzID0gbnVsbDtcbiAgICAgICAgbGV0IGN1cnJlbnRMZW5ndGggPSAwO1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICBhc3luYyB0cmFuc2Zvcm0oYmxvY2ssIGNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVhZHlCbG9ja3MgIT0gbnVsbCAmJiByZWFkeVNsaWNlcyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShhd2FpdCBlbmNvZGVDQVIocmVhZHlCbG9ja3MsIHJlYWR5U2xpY2VzKSk7XG4gICAgICAgICAgICAgICAgICAgIHJlYWR5QmxvY2tzID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgcmVhZHlTbGljZXMgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBibG9ja0hlYWRlckxlbmd0aCA9IGJsb2NrSGVhZGVyRW5jb2RpbmdMZW5ndGgoYmxvY2spO1xuICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrTGVuZ3RoID0gYmxvY2tIZWFkZXJMZW5ndGggKyBibG9jay5ieXRlcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgaWYgKGJsb2NrTGVuZ3RoID4gbWF4QmxvY2tMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBibG9jayB3aWxsIGNhdXNlIENBUiB0byBleGNlZWQgc2hhcmQgc2l6ZTogJHtibG9jay5jaWR9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChibG9ja3MubGVuZ3RoICYmIGN1cnJlbnRMZW5ndGggKyBibG9ja0xlbmd0aCA+IG1heEJsb2NrTGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlYWR5QmxvY2tzID0gYmxvY2tzO1xuICAgICAgICAgICAgICAgICAgICByZWFkeVNsaWNlcyA9IHNsaWNlcztcbiAgICAgICAgICAgICAgICAgICAgYmxvY2tzID0gW107XG4gICAgICAgICAgICAgICAgICAgIHNsaWNlcyA9IG5ldyBEaWdlc3RNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudExlbmd0aCA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJsb2Nrcy5wdXNoKGJsb2NrKTtcbiAgICAgICAgICAgICAgICBzbGljZXMuc2V0KGJsb2NrLmNpZC5tdWx0aWhhc2gsIFtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyRW5jb2RpbmdMZW5ndGgoKSArIGN1cnJlbnRMZW5ndGggKyBibG9ja0hlYWRlckxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgYmxvY2suYnl0ZXMubGVuZ3RoLFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRMZW5ndGggKz0gYmxvY2tMZW5ndGg7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYXN5bmMgZmx1c2goY29udHJvbGxlcikge1xuICAgICAgICAgICAgICAgIGlmIChyZWFkeUJsb2NrcyAhPSBudWxsICYmIHJlYWR5U2xpY2VzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKGF3YWl0IGVuY29kZUNBUihyZWFkeUJsb2NrcywgcmVhZHlTbGljZXMpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3Qgcm9vdEJsb2NrID0gYmxvY2tzLmF0KC0xKTtcbiAgICAgICAgICAgICAgICBpZiAocm9vdEJsb2NrID09IG51bGwpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBjb25zdCByb290Q0lEID0gb3B0aW9ucy5yb290Q0lEID8/IHJvb3RCbG9jay5jaWQ7XG4gICAgICAgICAgICAgICAgY29uc3QgaGVhZGVyTGVuZ3RoID0gaGVhZGVyRW5jb2RpbmdMZW5ndGgocm9vdENJRCk7XG4gICAgICAgICAgICAgICAgLy8gaWYgYWRkaW5nIENBUiByb290IG92ZXJmbG93cyB0aGUgc2hhcmQgbGltaXQgd2UgbW92ZSBvdmVyZmxvd2luZ1xuICAgICAgICAgICAgICAgIC8vIGJsb2NrcyBpbnRvIGFub3RoZXIgQ0FSLlxuICAgICAgICAgICAgICAgIGlmIChoZWFkZXJMZW5ndGggKyBjdXJyZW50TGVuZ3RoID4gc2hhcmRTaXplKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG92ZXJhZ2UgPSBoZWFkZXJMZW5ndGggKyBjdXJyZW50TGVuZ3RoIC0gc2hhcmRTaXplO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvdmVyZmxvd0Jsb2NrcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBsZXQgb3ZlcmZsb3dDdXJyZW50TGVuZ3RoID0gMDtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKG92ZXJmbG93Q3VycmVudExlbmd0aCA8IG92ZXJhZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrID0gYmxvY2tzW2Jsb2Nrcy5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJsb2Nrcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWNlcy5kZWxldGUoYmxvY2suY2lkLm11bHRpaGFzaCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdmVyZmxvd0Jsb2Nrcy51bnNoaWZ0KGJsb2NrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93Q3VycmVudExlbmd0aCArPSBibG9ja0VuY29kaW5nTGVuZ3RoKGJsb2NrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgYXQgbGVhc3QgMSBibG9jayBpbiBvcmlnaW5hbCBzaGFyZFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJsb2Nrcy5sZW5ndGggPCAxKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgYmxvY2sgd2lsbCBjYXVzZSBDQVIgdG8gZXhjZWVkIHNoYXJkIHNpemU6ICR7YmxvY2suY2lkfWApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShhd2FpdCBlbmNvZGVDQVIoYmxvY2tzLCBzbGljZXMpKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gRmluYWxseSwgcmUtY2FsYyBibG9jayBwb3NpdGlvbnMgZnJvbSBibG9ja3Mgd2UgbW92ZWQgb3V0IG9mIHRoZVxuICAgICAgICAgICAgICAgICAgICAvLyBDQVIgdGhhdCB3YXMgdG9vIGJpZy5cbiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3dDdXJyZW50TGVuZ3RoID0gMDtcbiAgICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtNYXA8aW1wb3J0KCcuL3R5cGVzLmpzJykuU2xpY2VEaWdlc3QsIGltcG9ydCgnLi90eXBlcy5qcycpLlBvc2l0aW9uPn0gKi9cbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3ZlcmZsb3dTbGljZXMgPSBuZXcgRGlnZXN0TWFwKCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYmxvY2sgb2Ygb3ZlcmZsb3dCbG9ja3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG92ZXJmbG93QmxvY2tIZWFkZXJMZW5ndGggPSBibG9ja0hlYWRlckVuY29kaW5nTGVuZ3RoKGJsb2NrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93U2xpY2VzLnNldChibG9jay5jaWQubXVsdGloYXNoLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyTGVuZ3RoICsgb3ZlcmZsb3dDdXJyZW50TGVuZ3RoICsgb3ZlcmZsb3dCbG9ja0hlYWRlckxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9jay5ieXRlcy5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93Q3VycmVudExlbmd0aCArPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93QmxvY2tIZWFkZXJMZW5ndGggKyBibG9jay5ieXRlcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKGF3YWl0IGVuY29kZUNBUihvdmVyZmxvd0Jsb2Nrcywgb3ZlcmZsb3dTbGljZXMsIHJvb3RDSUQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGFkanVzdCBvZmZzZXRzIGZvciBsb25nZXIgaGVhZGVyIGluIGZpbmFsIHNoYXJkXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRpZmYgPSBoZWFkZXJMZW5ndGggLSBoZWFkZXJFbmNvZGluZ0xlbmd0aCgpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHNsaWNlIG9mIHNsaWNlcy52YWx1ZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2xpY2VbMF0gKz0gZGlmZjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoYXdhaXQgZW5jb2RlQ0FSKGJsb2Nrcywgc2xpY2VzLCByb290Q0lEKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLyoqXG4gKiBEZWZhdWx0IGNvbXBhcmF0b3IgZm9yIEZpbGVMaWtlcy4gU29ydHMgYnkgZmlsZSBuYW1lIGluIGFzY2VuZGluZyBvcmRlci5cbiAqXG4gKiBAcGFyYW0ge0ZpbGVMaWtlfSBhXG4gKiBAcGFyYW0ge0ZpbGVMaWtlfSBiXG4gKiBAcGFyYW0geyhmaWxlOiBGaWxlTGlrZSkgPT4gc3RyaW5nfSBnZXRDb21wYXJlZFZhbHVlIC0gZ2l2ZW4gYSBmaWxlIGJlaW5nIHNvcnRlZCwgcmV0dXJuIHRoZSB2YWx1ZSBieSB3aGljaCBpdHMgb3JkZXIgc2hvdWxkIGJlIGRldGVybWluZWQsIGlmIGl0IGlzIGRpZmZlcmVudCB0aGFuIHRoZSBmaWxlIG9iamVjdCBpdHNlbGYgKGUuZy4gZmlsZS5uYW1lKVxuICovXG5leHBvcnQgY29uc3QgZGVmYXVsdEZpbGVDb21wYXJhdG9yID0gKGEsIGIsIGdldENvbXBhcmVkVmFsdWUgPSAoZmlsZSkgPT4gZmlsZS5uYW1lKSA9PiB7XG4gICAgcmV0dXJuIGFzY2VuZGluZyhhLCBiLCBnZXRDb21wYXJlZFZhbHVlKTtcbn07XG4vKipcbiAqIGEgY29tcGFyYXRvciBmb3Igc29ydGluZyBpbiBhc2NlbmRpbmcgb3JkZXIuIFVzZSB3aXRoIFNvcnRlZCBvciBBcnJheSNzb3J0LlxuICpcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IGFcbiAqIEBwYXJhbSB7VH0gYlxuICogQHBhcmFtIHsoaTogVCkgPT4gYW55fSBnZXRDb21wYXJlZFZhbHVlIC0gZ2l2ZW4gYW4gaXRlbSBiZWluZyBzb3J0ZWQsIHJldHVybiB0aGUgdmFsdWUgYnkgd2hpY2ggaXQgc2hvdWxkIGJlIHNvcnRlZCwgaWYgaXQgaXMgZGlmZmVyZW50IHRoYW4gdGhlIGl0ZW1cbiAqL1xuZnVuY3Rpb24gYXNjZW5kaW5nKGEsIGIsIGdldENvbXBhcmVkVmFsdWUpIHtcbiAgICBjb25zdCBhc2sgPSBnZXRDb21wYXJlZFZhbHVlKGEpO1xuICAgIGNvbnN0IGJzayA9IGdldENvbXBhcmVkVmFsdWUoYik7XG4gICAgaWYgKGFzayA9PT0gYnNrKVxuICAgICAgICByZXR1cm4gMDtcbiAgICBlbHNlIGlmIChhc2sgPCBic2spXG4gICAgICAgIHJldHVybiAtMTtcbiAgICByZXR1cm4gMTtcbn1cbi8qKlxuICogQHBhcmFtIHtJdGVyYWJsZTxpbXBvcnQoJ0BpcGxkL3VuaXhmcycpLkJsb2NrPn0gYmxvY2tzXG4gKiBAcGFyYW0ge01hcDxpbXBvcnQoJy4vdHlwZXMuanMnKS5TbGljZURpZ2VzdCwgaW1wb3J0KCcuL3R5cGVzLmpzJykuUG9zaXRpb24+fSBzbGljZXNcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuQW55TGlua30gW3Jvb3RdXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxpbXBvcnQoJy4vdHlwZXMuanMnKS5JbmRleGVkQ0FSRmlsZT59XG4gKi9cbmNvbnN0IGVuY29kZUNBUiA9IGFzeW5jIChibG9ja3MsIHNsaWNlcywgcm9vdCkgPT4gT2JqZWN0LmFzc2lnbihhd2FpdCBlbmNvZGUoYmxvY2tzLCByb290KSwgeyBzbGljZXMgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGFyZGluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/sharding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/store.js":
/*!********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/store.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   list: () => (/* binding */ list),\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/store */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/store.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! p-retry */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/constants.js\");\n\n\n\n\n\n\n/**\n *\n * @param {string} url\n * @param {import('./types.js').ProgressFn} handler\n */\nfunction createUploadProgressHandler(url, handler) {\n    /**\n     *\n     * @param {import('./types.js').ProgressStatus} status\n     */\n    function onUploadProgress({ total, loaded, lengthComputable }) {\n        return handler({ total, loaded, lengthComputable, url });\n    }\n    return onUploadProgress;\n}\n/**\n * Store a DAG encoded as a CAR file. The issuer needs the `store/add`\n * delegated capability.\n *\n * Required delegated capability proofs: `store/add`\n *\n * @param {import('./types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `store/add` delegated capability.\n * @param {Blob|Uint8Array} car CAR file data.\n * @param {import('./types.js').RequestOptions} [options]\n * @returns {Promise<import('./types.js').CARLink>}\n */\nasync function add({ issuer, with: resource, proofs, audience }, car, options = {}) {\n    // TODO: validate blob contains CAR data\n    /* c8 ignore next 2 */\n    const bytes = car instanceof Uint8Array ? car : new Uint8Array(await car.arrayBuffer());\n    const link = await _ucanto_transport__WEBPACK_IMPORTED_MODULE_0__.CAR.codec.link(bytes);\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.connection;\n    const result = await (0,p_retry__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(async () => {\n        return await _web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__.add\n            .invoke({\n            issuer,\n            /* c8 ignore next */\n            audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.servicePrincipal,\n            with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_2__.SpaceDID.from(resource),\n            nb: { link, size: bytes.length },\n            proofs,\n            nonce: options.nonce,\n        })\n            .execute(conn);\n    }, {\n        onFailedAttempt: console.warn,\n        retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_4__.REQUEST_RETRIES,\n    });\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__.add.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    // Return early if it was already uploaded.\n    if (result.out.ok.status === 'done') {\n        return link;\n    }\n    const responseAddUpload = result.out.ok;\n    const fetchWithUploadProgress = options.fetchWithUploadProgress ||\n        options.fetch ||\n        globalThis.fetch.bind(globalThis);\n    let fetchDidCallUploadProgressCb = false;\n    const res = await (0,p_retry__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(async () => {\n        try {\n            const res = await fetchWithUploadProgress(responseAddUpload.url, {\n                method: 'PUT',\n                body: car,\n                headers: responseAddUpload.headers,\n                signal: options.signal,\n                onUploadProgress: (status) => {\n                    fetchDidCallUploadProgressCb = true;\n                    if (options.onUploadProgress)\n                        createUploadProgressHandler(responseAddUpload.url, options.onUploadProgress)(status);\n                },\n                // @ts-expect-error - this is needed by recent versions of node - see https://github.com/bluesky-social/atproto/pull/470 for more info\n                duplex: 'half',\n            });\n            if (res.status >= 400 && res.status < 500) {\n                throw new p_retry__WEBPACK_IMPORTED_MODULE_5__.AbortError(`upload failed: ${res.status}`);\n            }\n            return res;\n        }\n        catch (err) {\n            if (options.signal?.aborted === true) {\n                throw new p_retry__WEBPACK_IMPORTED_MODULE_5__.AbortError('upload aborted');\n            }\n            throw err;\n        }\n    }, {\n        retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_4__.REQUEST_RETRIES,\n    });\n    if (!fetchDidCallUploadProgressCb && options.onUploadProgress) {\n        // the fetch implementation didn't support onUploadProgress\n        const carBlob = new Blob([car]);\n        options.onUploadProgress({\n            total: carBlob.size,\n            loaded: carBlob.size,\n            lengthComputable: false,\n        });\n    }\n    if (!res.ok) {\n        throw new Error(`upload failed: ${res.status}`);\n    }\n    return link;\n}\n/**\n * Get details of a stored item.\n *\n * Required delegated capability proofs: `store/get`\n *\n * @param {import('./types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `store/get` delegated capability.\n * @param {import('multiformats/link').Link<unknown, CAR.codec.code>} link CID of stored CAR file.\n * @param {import('./types.js').RequestOptions} [options]\n * @returns {Promise<import('./types.js').StoreGetSuccess>}\n */\nasync function get({ issuer, with: resource, proofs, audience }, link, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.connection;\n    const result = await (0,p_retry__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(async () => {\n        return await _web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__.get\n            .invoke({\n            issuer,\n            /* c8 ignore next */\n            audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.servicePrincipal,\n            with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_2__.SpaceDID.from(resource),\n            nb: { link },\n            proofs,\n            nonce: options.nonce,\n        })\n            .execute(conn);\n    }, {\n        onFailedAttempt: console.warn,\n        retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_4__.REQUEST_RETRIES,\n    });\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__.get.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out.ok;\n}\n/**\n * List CAR files stored by the issuer.\n *\n * @param {import('./types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `store/list` delegated capability.\n * @param {import('./types.js').ListRequestOptions} [options]\n * @returns {Promise<import('./types.js').StoreListSuccess>}\n */\nasync function list({ issuer, with: resource, proofs, audience }, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.connection;\n    const result = await _web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__.list\n        .invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.servicePrincipal,\n        with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_2__.SpaceDID.from(resource),\n        proofs,\n        nb: {\n            cursor: options.cursor,\n            size: options.size,\n            pre: options.pre,\n        },\n        nonce: options.nonce,\n    })\n        .execute(conn);\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__.list.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out.ok;\n}\n/**\n * Remove a stored CAR file by CAR CID.\n *\n * @param {import('./types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `store/remove` delegated capability.\n * @param {import('./types.js').CARLink} link CID of CAR file to remove.\n * @param {import('./types.js').RequestOptions} [options]\n */\nasync function remove({ issuer, with: resource, proofs, audience }, link, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.connection;\n    const result = await _web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__.remove\n        .invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_3__.servicePrincipal,\n        with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_2__.SpaceDID.from(resource),\n        nb: { link },\n        proofs,\n        nonce: options.nonce,\n    })\n        .execute(conn);\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_store__WEBPACK_IMPORTED_MODULE_1__.remove.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out;\n}\n//# sourceMappingURL=store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3N0b3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDOEI7QUFDVjtBQUNoQjtBQUNnQjtBQUNYO0FBQ2pEO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxpQ0FBaUM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHFDQUFxQztBQUNwRDtBQUNBLGdDQUFnQyxpQ0FBaUM7QUFDakUseUJBQXlCLHNDQUFzQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVDQUF1QztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLHFDQUFxQztBQUNoRCxhQUFhO0FBQ2I7QUFDTyxxQkFBcUIsMENBQTBDLG1CQUFtQjtBQUN6RjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNkRBQWM7QUFDckM7QUFDQSx1Q0FBdUMsbURBQVU7QUFDakQseUJBQXlCLG1EQUFLO0FBQzlCLHFCQUFxQixpRUFBcUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHlEQUFnQjtBQUNsRCxrQkFBa0Isc0VBQVE7QUFDMUIsa0JBQWtCLDBCQUEwQjtBQUM1QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0NBQW9DLDBEQUFlO0FBQ25ELEtBQUs7QUFDTDtBQUNBLGtDQUFrQyxpRUFBcUIsTUFBTTtBQUM3RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtREFBSztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsMEJBQTBCLCtDQUFVLG1CQUFtQixXQUFXO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsK0NBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLG9DQUFvQywwREFBZTtBQUNuRCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDBDQUEwQyxXQUFXO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVDQUF1QztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJEQUEyRDtBQUN0RSxXQUFXLHFDQUFxQztBQUNoRCxhQUFhO0FBQ2I7QUFDTyxxQkFBcUIsMENBQTBDLG9CQUFvQjtBQUMxRjtBQUNBLHVDQUF1QyxtREFBVTtBQUNqRCx5QkFBeUIsbURBQUs7QUFDOUIscUJBQXFCLGlFQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseURBQWdCO0FBQ2xELGtCQUFrQixzRUFBUTtBQUMxQixrQkFBa0IsTUFBTTtBQUN4QjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0NBQW9DLDBEQUFlO0FBQ25ELEtBQUs7QUFDTDtBQUNBLGtDQUFrQyxpRUFBcUIsTUFBTTtBQUM3RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVDQUF1QztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlDQUF5QztBQUNwRCxhQUFhO0FBQ2I7QUFDTyxzQkFBc0IsMENBQTBDLGNBQWM7QUFDckY7QUFDQSx1Q0FBdUMsbURBQVU7QUFDakQseUJBQXlCLGtFQUFzQjtBQUMvQztBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseURBQWdCO0FBQzlDLGNBQWMsc0VBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0NBQWtDLGtFQUFzQixNQUFNO0FBQzlEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdUNBQXVDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOEJBQThCO0FBQ3pDLFdBQVcscUNBQXFDO0FBQ2hEO0FBQ08sd0JBQXdCLDBDQUEwQyxvQkFBb0I7QUFDN0Y7QUFDQSx1Q0FBdUMsbURBQVU7QUFDakQseUJBQXlCLG9FQUF3QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseURBQWdCO0FBQzlDLGNBQWMsc0VBQVE7QUFDdEIsY0FBYyxNQUFNO0FBQ3BCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGtDQUFrQyxvRUFBd0IsTUFBTTtBQUNoRTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9kaXN0L3NyYy9zdG9yZS5qcz85NzhiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENBUiB9IGZyb20gJ0B1Y2FudG8vdHJhbnNwb3J0JztcbmltcG9ydCAqIGFzIFN0b3JlQ2FwYWJpbGl0aWVzIGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3N0b3JlJztcbmltcG9ydCB7IFNwYWNlRElEIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXRpbHMnO1xuaW1wb3J0IHJldHJ5LCB7IEFib3J0RXJyb3IgfSBmcm9tICdwLXJldHJ5JztcbmltcG9ydCB7IHNlcnZpY2VQcmluY2lwYWwsIGNvbm5lY3Rpb24gfSBmcm9tICcuL3NlcnZpY2UuanMnO1xuaW1wb3J0IHsgUkVRVUVTVF9SRVRSSUVTIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuLyoqXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5Qcm9ncmVzc0ZufSBoYW5kbGVyXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVVwbG9hZFByb2dyZXNzSGFuZGxlcih1cmwsIGhhbmRsZXIpIHtcbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuUHJvZ3Jlc3NTdGF0dXN9IHN0YXR1c1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIG9uVXBsb2FkUHJvZ3Jlc3MoeyB0b3RhbCwgbG9hZGVkLCBsZW5ndGhDb21wdXRhYmxlIH0pIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIoeyB0b3RhbCwgbG9hZGVkLCBsZW5ndGhDb21wdXRhYmxlLCB1cmwgfSk7XG4gICAgfVxuICAgIHJldHVybiBvblVwbG9hZFByb2dyZXNzO1xufVxuLyoqXG4gKiBTdG9yZSBhIERBRyBlbmNvZGVkIGFzIGEgQ0FSIGZpbGUuIFRoZSBpc3N1ZXIgbmVlZHMgdGhlIGBzdG9yZS9hZGRgXG4gKiBkZWxlZ2F0ZWQgY2FwYWJpbGl0eS5cbiAqXG4gKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0eSBwcm9vZnM6IGBzdG9yZS9hZGRgXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5JbnZvY2F0aW9uQ29uZmlnfSBjb25mIENvbmZpZ3VyYXRpb25cbiAqIGZvciB0aGUgVUNBTiBpbnZvY2F0aW9uLiBBbiBvYmplY3Qgd2l0aCBgaXNzdWVyYCwgYHdpdGhgIGFuZCBgcHJvb2ZzYC5cbiAqXG4gKiBUaGUgYGlzc3VlcmAgaXMgdGhlIHNpZ25pbmcgYXV0aG9yaXR5IHRoYXQgaXMgaXNzdWluZyB0aGUgVUNBTlxuICogaW52b2NhdGlvbihzKS4gSXQgaXMgdHlwaWNhbGx5IHRoZSB1c2VyIF9hZ2VudF8uXG4gKlxuICogVGhlIGB3aXRoYCBpcyB0aGUgcmVzb3VyY2UgdGhlIGludm9jYXRpb24gYXBwbGllcyB0by4gSXQgaXMgdHlwaWNhbGx5IHRoZVxuICogRElEIG9mIGEgc3BhY2UuXG4gKlxuICogVGhlIGBwcm9vZnNgIGFyZSBhIHNldCBvZiBjYXBhYmlsaXR5IGRlbGVnYXRpb25zIHRoYXQgcHJvdmUgdGhlIGlzc3VlclxuICogaGFzIHRoZSBjYXBhYmlsaXR5IHRvIHBlcmZvcm0gdGhlIGFjdGlvbi5cbiAqXG4gKiBUaGUgaXNzdWVyIG5lZWRzIHRoZSBgc3RvcmUvYWRkYCBkZWxlZ2F0ZWQgY2FwYWJpbGl0eS5cbiAqIEBwYXJhbSB7QmxvYnxVaW50OEFycmF5fSBjYXIgQ0FSIGZpbGUgZGF0YS5cbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuUmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge1Byb21pc2U8aW1wb3J0KCcuL3R5cGVzLmpzJykuQ0FSTGluaz59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGQoeyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH0sIGNhciwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLy8gVE9ETzogdmFsaWRhdGUgYmxvYiBjb250YWlucyBDQVIgZGF0YVxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDIgKi9cbiAgICBjb25zdCBieXRlcyA9IGNhciBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgPyBjYXIgOiBuZXcgVWludDhBcnJheShhd2FpdCBjYXIuYXJyYXlCdWZmZXIoKSk7XG4gICAgY29uc3QgbGluayA9IGF3YWl0IENBUi5jb2RlYy5saW5rKGJ5dGVzKTtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXRyeShhc3luYyAoKSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCBTdG9yZUNhcGFiaWxpdGllcy5hZGRcbiAgICAgICAgICAgIC5pbnZva2Uoe1xuICAgICAgICAgICAgaXNzdWVyLFxuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICAgICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgICAgICAgICAgd2l0aDogU3BhY2VESUQuZnJvbShyZXNvdXJjZSksXG4gICAgICAgICAgICBuYjogeyBsaW5rLCBzaXplOiBieXRlcy5sZW5ndGggfSxcbiAgICAgICAgICAgIHByb29mcyxcbiAgICAgICAgICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgICAgICB9KVxuICAgICAgICAgICAgLmV4ZWN1dGUoY29ubik7XG4gICAgfSwge1xuICAgICAgICBvbkZhaWxlZEF0dGVtcHQ6IGNvbnNvbGUud2FybixcbiAgICAgICAgcmV0cmllczogb3B0aW9ucy5yZXRyaWVzID8/IFJFUVVFU1RfUkVUUklFUyxcbiAgICB9KTtcbiAgICBpZiAoIXJlc3VsdC5vdXQub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtTdG9yZUNhcGFiaWxpdGllcy5hZGQuY2FufSBpbnZvY2F0aW9uYCwge1xuICAgICAgICAgICAgY2F1c2U6IHJlc3VsdC5vdXQuZXJyb3IsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBSZXR1cm4gZWFybHkgaWYgaXQgd2FzIGFscmVhZHkgdXBsb2FkZWQuXG4gICAgaWYgKHJlc3VsdC5vdXQub2suc3RhdHVzID09PSAnZG9uZScpIHtcbiAgICAgICAgcmV0dXJuIGxpbms7XG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlQWRkVXBsb2FkID0gcmVzdWx0Lm91dC5vaztcbiAgICBjb25zdCBmZXRjaFdpdGhVcGxvYWRQcm9ncmVzcyA9IG9wdGlvbnMuZmV0Y2hXaXRoVXBsb2FkUHJvZ3Jlc3MgfHxcbiAgICAgICAgb3B0aW9ucy5mZXRjaCB8fFxuICAgICAgICBnbG9iYWxUaGlzLmZldGNoLmJpbmQoZ2xvYmFsVGhpcyk7XG4gICAgbGV0IGZldGNoRGlkQ2FsbFVwbG9hZFByb2dyZXNzQ2IgPSBmYWxzZTtcbiAgICBjb25zdCByZXMgPSBhd2FpdCByZXRyeShhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaFdpdGhVcGxvYWRQcm9ncmVzcyhyZXNwb25zZUFkZFVwbG9hZC51cmwsIHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgICAgICAgICAgIGJvZHk6IGNhcixcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZUFkZFVwbG9hZC5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHNpZ25hbDogb3B0aW9ucy5zaWduYWwsXG4gICAgICAgICAgICAgICAgb25VcGxvYWRQcm9ncmVzczogKHN0YXR1cykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBmZXRjaERpZENhbGxVcGxvYWRQcm9ncmVzc0NiID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMub25VcGxvYWRQcm9ncmVzcylcbiAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZVVwbG9hZFByb2dyZXNzSGFuZGxlcihyZXNwb25zZUFkZFVwbG9hZC51cmwsIG9wdGlvbnMub25VcGxvYWRQcm9ncmVzcykoc3RhdHVzKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSB0aGlzIGlzIG5lZWRlZCBieSByZWNlbnQgdmVyc2lvbnMgb2Ygbm9kZSAtIHNlZSBodHRwczovL2dpdGh1Yi5jb20vYmx1ZXNreS1zb2NpYWwvYXRwcm90by9wdWxsLzQ3MCBmb3IgbW9yZSBpbmZvXG4gICAgICAgICAgICAgICAgZHVwbGV4OiAnaGFsZicsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID49IDQwMCAmJiByZXMuc3RhdHVzIDwgNTAwKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEFib3J0RXJyb3IoYHVwbG9hZCBmYWlsZWQ6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMuc2lnbmFsPy5hYm9ydGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEFib3J0RXJyb3IoJ3VwbG9hZCBhYm9ydGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIHJldHJpZXM6IG9wdGlvbnMucmV0cmllcyA/PyBSRVFVRVNUX1JFVFJJRVMsXG4gICAgfSk7XG4gICAgaWYgKCFmZXRjaERpZENhbGxVcGxvYWRQcm9ncmVzc0NiICYmIG9wdGlvbnMub25VcGxvYWRQcm9ncmVzcykge1xuICAgICAgICAvLyB0aGUgZmV0Y2ggaW1wbGVtZW50YXRpb24gZGlkbid0IHN1cHBvcnQgb25VcGxvYWRQcm9ncmVzc1xuICAgICAgICBjb25zdCBjYXJCbG9iID0gbmV3IEJsb2IoW2Nhcl0pO1xuICAgICAgICBvcHRpb25zLm9uVXBsb2FkUHJvZ3Jlc3Moe1xuICAgICAgICAgICAgdG90YWw6IGNhckJsb2Iuc2l6ZSxcbiAgICAgICAgICAgIGxvYWRlZDogY2FyQmxvYi5zaXplLFxuICAgICAgICAgICAgbGVuZ3RoQ29tcHV0YWJsZTogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHVwbG9hZCBmYWlsZWQ6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9XG4gICAgcmV0dXJuIGxpbms7XG59XG4vKipcbiAqIEdldCBkZXRhaWxzIG9mIGEgc3RvcmVkIGl0ZW0uXG4gKlxuICogUmVxdWlyZWQgZGVsZWdhdGVkIGNhcGFiaWxpdHkgcHJvb2ZzOiBgc3RvcmUvZ2V0YFxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuSW52b2NhdGlvbkNvbmZpZ30gY29uZiBDb25maWd1cmF0aW9uXG4gKiBmb3IgdGhlIFVDQU4gaW52b2NhdGlvbi4gQW4gb2JqZWN0IHdpdGggYGlzc3VlcmAsIGB3aXRoYCBhbmQgYHByb29mc2AuXG4gKlxuICogVGhlIGBpc3N1ZXJgIGlzIHRoZSBzaWduaW5nIGF1dGhvcml0eSB0aGF0IGlzIGlzc3VpbmcgdGhlIFVDQU5cbiAqIGludm9jYXRpb24ocykuIEl0IGlzIHR5cGljYWxseSB0aGUgdXNlciBfYWdlbnRfLlxuICpcbiAqIFRoZSBgd2l0aGAgaXMgdGhlIHJlc291cmNlIHRoZSBpbnZvY2F0aW9uIGFwcGxpZXMgdG8uIEl0IGlzIHR5cGljYWxseSB0aGVcbiAqIERJRCBvZiBhIHNwYWNlLlxuICpcbiAqIFRoZSBgcHJvb2ZzYCBhcmUgYSBzZXQgb2YgY2FwYWJpbGl0eSBkZWxlZ2F0aW9ucyB0aGF0IHByb3ZlIHRoZSBpc3N1ZXJcbiAqIGhhcyB0aGUgY2FwYWJpbGl0eSB0byBwZXJmb3JtIHRoZSBhY3Rpb24uXG4gKlxuICogVGhlIGlzc3VlciBuZWVkcyB0aGUgYHN0b3JlL2dldGAgZGVsZWdhdGVkIGNhcGFiaWxpdHkuXG4gKiBAcGFyYW0ge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2xpbmsnKS5MaW5rPHVua25vd24sIENBUi5jb2RlYy5jb2RlPn0gbGluayBDSUQgb2Ygc3RvcmVkIENBUiBmaWxlLlxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5SZXF1ZXN0T3B0aW9uc30gW29wdGlvbnNdXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxpbXBvcnQoJy4vdHlwZXMuanMnKS5TdG9yZUdldFN1Y2Nlc3M+fVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0KHsgaXNzdWVyLCB3aXRoOiByZXNvdXJjZSwgcHJvb2ZzLCBhdWRpZW5jZSB9LCBsaW5rLCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXRyeShhc3luYyAoKSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCBTdG9yZUNhcGFiaWxpdGllcy5nZXRcbiAgICAgICAgICAgIC5pbnZva2Uoe1xuICAgICAgICAgICAgaXNzdWVyLFxuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICAgICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgICAgICAgICAgd2l0aDogU3BhY2VESUQuZnJvbShyZXNvdXJjZSksXG4gICAgICAgICAgICBuYjogeyBsaW5rIH0sXG4gICAgICAgICAgICBwcm9vZnMsXG4gICAgICAgICAgICBub25jZTogb3B0aW9ucy5ub25jZSxcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5leGVjdXRlKGNvbm4pO1xuICAgIH0sIHtcbiAgICAgICAgb25GYWlsZWRBdHRlbXB0OiBjb25zb2xlLndhcm4sXG4gICAgICAgIHJldHJpZXM6IG9wdGlvbnMucmV0cmllcyA/PyBSRVFVRVNUX1JFVFJJRVMsXG4gICAgfSk7XG4gICAgaWYgKCFyZXN1bHQub3V0Lm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgZmFpbGVkICR7U3RvcmVDYXBhYmlsaXRpZXMuZ2V0LmNhbn0gaW52b2NhdGlvbmAsIHtcbiAgICAgICAgICAgIGNhdXNlOiByZXN1bHQub3V0LmVycm9yLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdC5vdXQub2s7XG59XG4vKipcbiAqIExpc3QgQ0FSIGZpbGVzIHN0b3JlZCBieSB0aGUgaXNzdWVyLlxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuSW52b2NhdGlvbkNvbmZpZ30gY29uZiBDb25maWd1cmF0aW9uXG4gKiBmb3IgdGhlIFVDQU4gaW52b2NhdGlvbi4gQW4gb2JqZWN0IHdpdGggYGlzc3VlcmAsIGB3aXRoYCBhbmQgYHByb29mc2AuXG4gKlxuICogVGhlIGBpc3N1ZXJgIGlzIHRoZSBzaWduaW5nIGF1dGhvcml0eSB0aGF0IGlzIGlzc3VpbmcgdGhlIFVDQU5cbiAqIGludm9jYXRpb24ocykuIEl0IGlzIHR5cGljYWxseSB0aGUgdXNlciBfYWdlbnRfLlxuICpcbiAqIFRoZSBgd2l0aGAgaXMgdGhlIHJlc291cmNlIHRoZSBpbnZvY2F0aW9uIGFwcGxpZXMgdG8uIEl0IGlzIHR5cGljYWxseSB0aGVcbiAqIERJRCBvZiBhIHNwYWNlLlxuICpcbiAqIFRoZSBgcHJvb2ZzYCBhcmUgYSBzZXQgb2YgY2FwYWJpbGl0eSBkZWxlZ2F0aW9ucyB0aGF0IHByb3ZlIHRoZSBpc3N1ZXJcbiAqIGhhcyB0aGUgY2FwYWJpbGl0eSB0byBwZXJmb3JtIHRoZSBhY3Rpb24uXG4gKlxuICogVGhlIGlzc3VlciBuZWVkcyB0aGUgYHN0b3JlL2xpc3RgIGRlbGVnYXRlZCBjYXBhYmlsaXR5LlxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5MaXN0UmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge1Byb21pc2U8aW1wb3J0KCcuL3R5cGVzLmpzJykuU3RvcmVMaXN0U3VjY2Vzcz59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsaXN0KHsgaXNzdWVyLCB3aXRoOiByZXNvdXJjZSwgcHJvb2ZzLCBhdWRpZW5jZSB9LCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBTdG9yZUNhcGFiaWxpdGllcy5saXN0XG4gICAgICAgIC5pbnZva2Uoe1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgICAgICB3aXRoOiBTcGFjZURJRC5mcm9tKHJlc291cmNlKSxcbiAgICAgICAgcHJvb2ZzLFxuICAgICAgICBuYjoge1xuICAgICAgICAgICAgY3Vyc29yOiBvcHRpb25zLmN1cnNvcixcbiAgICAgICAgICAgIHNpemU6IG9wdGlvbnMuc2l6ZSxcbiAgICAgICAgICAgIHByZTogb3B0aW9ucy5wcmUsXG4gICAgICAgIH0sXG4gICAgICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgIH0pXG4gICAgICAgIC5leGVjdXRlKGNvbm4pO1xuICAgIGlmICghcmVzdWx0Lm91dC5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGZhaWxlZCAke1N0b3JlQ2FwYWJpbGl0aWVzLmxpc3QuY2FufSBpbnZvY2F0aW9uYCwge1xuICAgICAgICAgICAgY2F1c2U6IHJlc3VsdC5vdXQuZXJyb3IsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0Lm91dC5vaztcbn1cbi8qKlxuICogUmVtb3ZlIGEgc3RvcmVkIENBUiBmaWxlIGJ5IENBUiBDSUQuXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5JbnZvY2F0aW9uQ29uZmlnfSBjb25mIENvbmZpZ3VyYXRpb25cbiAqIGZvciB0aGUgVUNBTiBpbnZvY2F0aW9uLiBBbiBvYmplY3Qgd2l0aCBgaXNzdWVyYCwgYHdpdGhgIGFuZCBgcHJvb2ZzYC5cbiAqXG4gKiBUaGUgYGlzc3VlcmAgaXMgdGhlIHNpZ25pbmcgYXV0aG9yaXR5IHRoYXQgaXMgaXNzdWluZyB0aGUgVUNBTlxuICogaW52b2NhdGlvbihzKS4gSXQgaXMgdHlwaWNhbGx5IHRoZSB1c2VyIF9hZ2VudF8uXG4gKlxuICogVGhlIGB3aXRoYCBpcyB0aGUgcmVzb3VyY2UgdGhlIGludm9jYXRpb24gYXBwbGllcyB0by4gSXQgaXMgdHlwaWNhbGx5IHRoZVxuICogRElEIG9mIGEgc3BhY2UuXG4gKlxuICogVGhlIGBwcm9vZnNgIGFyZSBhIHNldCBvZiBjYXBhYmlsaXR5IGRlbGVnYXRpb25zIHRoYXQgcHJvdmUgdGhlIGlzc3VlclxuICogaGFzIHRoZSBjYXBhYmlsaXR5IHRvIHBlcmZvcm0gdGhlIGFjdGlvbi5cbiAqXG4gKiBUaGUgaXNzdWVyIG5lZWRzIHRoZSBgc3RvcmUvcmVtb3ZlYCBkZWxlZ2F0ZWQgY2FwYWJpbGl0eS5cbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuQ0FSTGlua30gbGluayBDSUQgb2YgQ0FSIGZpbGUgdG8gcmVtb3ZlLlxuICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5SZXF1ZXN0T3B0aW9uc30gW29wdGlvbnNdXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW1vdmUoeyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH0sIGxpbmssIG9wdGlvbnMgPSB7fSkge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgY29uc3QgY29ubiA9IG9wdGlvbnMuY29ubmVjdGlvbiA/PyBjb25uZWN0aW9uO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFN0b3JlQ2FwYWJpbGl0aWVzLnJlbW92ZVxuICAgICAgICAuaW52b2tlKHtcbiAgICAgICAgaXNzdWVyLFxuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICBhdWRpZW5jZTogYXVkaWVuY2UgPz8gc2VydmljZVByaW5jaXBhbCxcbiAgICAgICAgd2l0aDogU3BhY2VESUQuZnJvbShyZXNvdXJjZSksXG4gICAgICAgIG5iOiB7IGxpbmsgfSxcbiAgICAgICAgcHJvb2ZzLFxuICAgICAgICBub25jZTogb3B0aW9ucy5ub25jZSxcbiAgICB9KVxuICAgICAgICAuZXhlY3V0ZShjb25uKTtcbiAgICBpZiAoIXJlc3VsdC5vdXQub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtTdG9yZUNhcGFiaWxpdGllcy5yZW1vdmUuY2FufSBpbnZvY2F0aW9uYCwge1xuICAgICAgICAgICAgY2F1c2U6IHJlc3VsdC5vdXQuZXJyb3IsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0Lm91dDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0b3JlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/unixfs.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/unixfs.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDirectoryEncoderStream: () => (/* binding */ createDirectoryEncoderStream),\n/* harmony export */   createFileEncoderStream: () => (/* binding */ createFileEncoderStream),\n/* harmony export */   encodeDirectory: () => (/* binding */ encodeDirectory),\n/* harmony export */   encodeFile: () => (/* binding */ encodeFile)\n/* harmony export */ });\n/* harmony import */ var _ipld_unixfs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/unixfs */ \"(ssr)/./node_modules/@ipld/unixfs/src/lib.js\");\n/* harmony import */ var multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/codecs/raw */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/codecs/raw.js\");\n/* harmony import */ var _ipld_unixfs_file_chunker_fixed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ipld/unixfs/file/chunker/fixed */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/fixed.js\");\n/* harmony import */ var _ipld_unixfs_file_layout_balanced__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ipld/unixfs/file/layout/balanced */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/layout/balanced.js\");\n\n\n\n\nconst SHARD_THRESHOLD = 1000; // shard directory after > 1,000 items\nconst queuingStrategy = _ipld_unixfs__WEBPACK_IMPORTED_MODULE_0__.withCapacity();\nconst defaultSettings = _ipld_unixfs__WEBPACK_IMPORTED_MODULE_0__.configure({\n    fileChunkEncoder: multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_1__,\n    smallFileEncoder: multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_1__,\n    chunker: (0,_ipld_unixfs_file_chunker_fixed__WEBPACK_IMPORTED_MODULE_2__.withMaxChunkSize)(1024 * 1024),\n    fileLayout: (0,_ipld_unixfs_file_layout_balanced__WEBPACK_IMPORTED_MODULE_3__.withWidth)(1024),\n});\n/**\n * @param {import('./types.js').BlobLike} blob\n * @param {import('./types.js').UnixFSEncoderSettingsOptions} [options]\n * @returns {Promise<import('./types.js').UnixFSEncodeResult>}\n */\nasync function encodeFile(blob, options) {\n    const readable = createFileEncoderStream(blob, options);\n    const blocks = await collect(readable);\n    // @ts-expect-error There is always a root block\n    return { cid: blocks.at(-1).cid, blocks };\n}\n/**\n * @param {import('./types.js').BlobLike} blob\n * @param {import('./types.js').UnixFSEncoderSettingsOptions} [options]\n * @returns {ReadableStream<import('@ipld/unixfs').Block>}\n */\nfunction createFileEncoderStream(blob, options) {\n    /** @type {TransformStream<import('@ipld/unixfs').Block, import('@ipld/unixfs').Block>} */\n    const { readable, writable } = new TransformStream({}, queuingStrategy);\n    const settings = options?.settings ?? defaultSettings;\n    const unixfsWriter = _ipld_unixfs__WEBPACK_IMPORTED_MODULE_0__.createWriter({ writable, settings });\n    const fileBuilder = new UnixFSFileBuilder('', blob);\n    void (async () => {\n        await fileBuilder.finalize(unixfsWriter);\n        await unixfsWriter.close();\n    })();\n    return readable;\n}\nclass UnixFSFileBuilder {\n    #file;\n    /**\n     * @param {string} name\n     * @param {import('./types.js').BlobLike} file\n     */\n    constructor(name, file) {\n        this.name = name;\n        this.#file = file;\n    }\n    /** @param {import('@ipld/unixfs').View} writer */\n    async finalize(writer) {\n        const unixfsFileWriter = _ipld_unixfs__WEBPACK_IMPORTED_MODULE_0__.createFileWriter(writer);\n        await this.#file.stream().pipeTo(new WritableStream({\n            async write(chunk) {\n                await unixfsFileWriter.write(chunk);\n            },\n        }));\n        return await unixfsFileWriter.close();\n    }\n}\nclass UnixFSDirectoryBuilder {\n    #options;\n    /** @type {Map<string, UnixFSFileBuilder | UnixFSDirectoryBuilder>} */\n    entries = new Map();\n    /**\n     * @param {string} name\n     * @param {import('./types.js').UnixFSDirectoryEncoderOptions} [options]\n     */\n    constructor(name, options) {\n        this.name = name;\n        this.#options = options;\n    }\n    /** @param {import('@ipld/unixfs').View} writer */\n    async finalize(writer) {\n        const dirWriter = this.entries.size <= SHARD_THRESHOLD\n            ? _ipld_unixfs__WEBPACK_IMPORTED_MODULE_0__.createDirectoryWriter(writer)\n            : _ipld_unixfs__WEBPACK_IMPORTED_MODULE_0__.createShardedDirectoryWriter(writer);\n        for (const [name, entry] of this.entries) {\n            const link = await entry.finalize(writer);\n            if (this.#options?.onDirectoryEntryLink) {\n                // @ts-expect-error\n                this.#options.onDirectoryEntryLink({ name: entry.name, ...link });\n            }\n            dirWriter.set(name, link);\n        }\n        return await dirWriter.close();\n    }\n}\n/**\n * @param {Iterable<import('./types.js').FileLike>} files\n * @param {import('./types.js').UnixFSEncoderSettingsOptions & import('./types.js').UnixFSDirectoryEncoderOptions} [options]\n * @returns {Promise<import('./types.js').UnixFSEncodeResult>}\n */\nasync function encodeDirectory(files, options) {\n    const readable = createDirectoryEncoderStream(files, options);\n    const blocks = await collect(readable);\n    // @ts-expect-error There is always a root block\n    return { cid: blocks.at(-1).cid, blocks };\n}\n/**\n * @param {Iterable<import('./types.js').FileLike>} files\n * @param {import('./types.js').UnixFSEncoderSettingsOptions & import('./types.js').UnixFSDirectoryEncoderOptions} [options]\n * @returns {ReadableStream<import('@ipld/unixfs').Block>}\n */\nfunction createDirectoryEncoderStream(files, options) {\n    const rootDir = new UnixFSDirectoryBuilder('', options);\n    for (const file of files) {\n        const path = file.name.split('/');\n        if (path[0] === '' || path[0] === '.') {\n            path.shift();\n        }\n        let dir = rootDir;\n        for (const [i, name] of path.entries()) {\n            if (i === path.length - 1) {\n                dir.entries.set(name, new UnixFSFileBuilder(path.join('/'), file));\n                break;\n            }\n            let dirBuilder = dir.entries.get(name);\n            if (dirBuilder == null) {\n                const dirName = dir === rootDir ? name : `${dir.name}/${name}`;\n                dirBuilder = new UnixFSDirectoryBuilder(dirName, options);\n                dir.entries.set(name, dirBuilder);\n            }\n            if (!(dirBuilder instanceof UnixFSDirectoryBuilder)) {\n                throw new Error(`\"${file.name}\" cannot be a file and a directory`);\n            }\n            dir = dirBuilder;\n        }\n    }\n    /** @type {TransformStream<import('@ipld/unixfs').Block, import('@ipld/unixfs').Block>} */\n    const { readable, writable } = new TransformStream({}, queuingStrategy);\n    const settings = options?.settings ?? defaultSettings;\n    const unixfsWriter = _ipld_unixfs__WEBPACK_IMPORTED_MODULE_0__.createWriter({ writable, settings });\n    void (async () => {\n        const link = await rootDir.finalize(unixfsWriter);\n        if (options?.onDirectoryEntryLink) {\n            options.onDirectoryEntryLink({ name: '', ...link });\n        }\n        await unixfsWriter.close();\n    })();\n    return readable;\n}\n/**\n * @template T\n * @param {ReadableStream<T>} collectable\n * @returns {Promise<T[]>}\n */\nasync function collect(collectable) {\n    /** @type {T[]} */\n    const chunks = [];\n    await collectable.pipeTo(new WritableStream({\n        write(chunk) {\n            chunks.push(chunk);\n        },\n    }));\n    return chunks;\n}\n//# sourceMappingURL=unixfs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/unixfs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/add.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/upload/add.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   input: () => (/* binding */ input)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/upload */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/upload.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! p-retry */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/constants.js\");\n\n\n\n\n\n/**\n * Register an \"upload\" with the service. The issuer needs the `upload/add`\n * delegated capability.\n *\n * Required delegated capability proofs: `upload/add`\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `upload/add` delegated capability.\n * @param {import('multiformats/link').UnknownLink} root Root data CID for the DAG that was stored.\n * @param {import('../types.js').CARLink[]} shards CIDs of CAR files that contain the DAG.\n * @param {import('../types.js').RequestOptions} [options]\n * @returns {Promise<import('../types.js').UploadAddSuccess>}\n */\nasync function add({ issuer, with: resource, proofs, audience }, root, shards, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.connection;\n    const result = await (0,p_retry__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(async () => {\n        return await _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.add\n            .invoke({\n            issuer,\n            /* c8 ignore next */\n            audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.servicePrincipal,\n            with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__.SpaceDID.from(resource),\n            nb: input(root, shards),\n            proofs,\n            nonce: options.nonce,\n        })\n            .execute(conn);\n    }, {\n        onFailedAttempt: console.warn,\n        retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_3__.REQUEST_RETRIES,\n    });\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.add.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out.ok;\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.add.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {import('multiformats/link').UnknownLink} root\n * @param {import('../types.js').CARLink[]} shards\n */\nconst input = (root, shards) => ({ root, shards });\n//# sourceMappingURL=add.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3VwbG9hZC9hZGQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBd0U7QUFDWjtBQUNoQztBQUNpQztBQUNYO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsd0NBQXdDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUNBQXlDO0FBQ3BELFdBQVcsaUNBQWlDO0FBQzVDLFdBQVcsc0NBQXNDO0FBQ2pELGFBQWE7QUFDYjtBQUNPLHFCQUFxQiwwQ0FBMEMsNEJBQTRCO0FBQ2xHO0FBQ0EsdUNBQXVDLG1EQUFVO0FBQ2pELHlCQUF5QixtREFBSztBQUM5QixxQkFBcUIsa0VBQXNCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx5REFBZ0I7QUFDbEQsa0JBQWtCLHNFQUFRO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLG9DQUFvQywwREFBZTtBQUNuRCxLQUFLO0FBQ0w7QUFDQSxrQ0FBa0Msa0VBQXNCLE1BQU07QUFDOUQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQkFBZ0Isa0VBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUNBQXlDO0FBQ3BELFdBQVcsaUNBQWlDO0FBQzVDO0FBQ08sbUNBQW1DLGNBQWM7QUFDeEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvZGlzdC9zcmMvdXBsb2FkL2FkZC5qcz81MjE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFVwbG9hZENhcGFiaWxpdGllcyBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy91cGxvYWQnO1xuaW1wb3J0IHsgU3BhY2VESUQgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy91dGlscyc7XG5pbXBvcnQgcmV0cnkgZnJvbSAncC1yZXRyeSc7XG5pbXBvcnQgeyBzZXJ2aWNlUHJpbmNpcGFsLCBjb25uZWN0aW9uIH0gZnJvbSAnLi4vc2VydmljZS5qcyc7XG5pbXBvcnQgeyBSRVFVRVNUX1JFVFJJRVMgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuLyoqXG4gKiBSZWdpc3RlciBhbiBcInVwbG9hZFwiIHdpdGggdGhlIHNlcnZpY2UuIFRoZSBpc3N1ZXIgbmVlZHMgdGhlIGB1cGxvYWQvYWRkYFxuICogZGVsZWdhdGVkIGNhcGFiaWxpdHkuXG4gKlxuICogUmVxdWlyZWQgZGVsZWdhdGVkIGNhcGFiaWxpdHkgcHJvb2ZzOiBgdXBsb2FkL2FkZGBcbiAqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5JbnZvY2F0aW9uQ29uZmlnfSBjb25mIENvbmZpZ3VyYXRpb25cbiAqIGZvciB0aGUgVUNBTiBpbnZvY2F0aW9uLiBBbiBvYmplY3Qgd2l0aCBgaXNzdWVyYCwgYHdpdGhgIGFuZCBgcHJvb2ZzYC5cbiAqXG4gKiBUaGUgYGlzc3VlcmAgaXMgdGhlIHNpZ25pbmcgYXV0aG9yaXR5IHRoYXQgaXMgaXNzdWluZyB0aGUgVUNBTlxuICogaW52b2NhdGlvbihzKS4gSXQgaXMgdHlwaWNhbGx5IHRoZSB1c2VyIF9hZ2VudF8uXG4gKlxuICogVGhlIGB3aXRoYCBpcyB0aGUgcmVzb3VyY2UgdGhlIGludm9jYXRpb24gYXBwbGllcyB0by4gSXQgaXMgdHlwaWNhbGx5IHRoZVxuICogRElEIG9mIGEgc3BhY2UuXG4gKlxuICogVGhlIGBwcm9vZnNgIGFyZSBhIHNldCBvZiBjYXBhYmlsaXR5IGRlbGVnYXRpb25zIHRoYXQgcHJvdmUgdGhlIGlzc3VlclxuICogaGFzIHRoZSBjYXBhYmlsaXR5IHRvIHBlcmZvcm0gdGhlIGFjdGlvbi5cbiAqXG4gKiBUaGUgaXNzdWVyIG5lZWRzIHRoZSBgdXBsb2FkL2FkZGAgZGVsZWdhdGVkIGNhcGFiaWxpdHkuXG4gKiBAcGFyYW0ge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2xpbmsnKS5Vbmtub3duTGlua30gcm9vdCBSb290IGRhdGEgQ0lEIGZvciB0aGUgREFHIHRoYXQgd2FzIHN0b3JlZC5cbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkNBUkxpbmtbXX0gc2hhcmRzIENJRHMgb2YgQ0FSIGZpbGVzIHRoYXQgY29udGFpbiB0aGUgREFHLlxuICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuUmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge1Byb21pc2U8aW1wb3J0KCcuLi90eXBlcy5qcycpLlVwbG9hZEFkZFN1Y2Nlc3M+fVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYWRkKHsgaXNzdWVyLCB3aXRoOiByZXNvdXJjZSwgcHJvb2ZzLCBhdWRpZW5jZSB9LCByb290LCBzaGFyZHMsIG9wdGlvbnMgPSB7fSkge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgY29uc3QgY29ubiA9IG9wdGlvbnMuY29ubmVjdGlvbiA/PyBjb25uZWN0aW9uO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJldHJ5KGFzeW5jICgpID0+IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IFVwbG9hZENhcGFiaWxpdGllcy5hZGRcbiAgICAgICAgICAgIC5pbnZva2Uoe1xuICAgICAgICAgICAgaXNzdWVyLFxuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICAgICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgICAgICAgICAgd2l0aDogU3BhY2VESUQuZnJvbShyZXNvdXJjZSksXG4gICAgICAgICAgICBuYjogaW5wdXQocm9vdCwgc2hhcmRzKSxcbiAgICAgICAgICAgIHByb29mcyxcbiAgICAgICAgICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgICAgICB9KVxuICAgICAgICAgICAgLmV4ZWN1dGUoY29ubik7XG4gICAgfSwge1xuICAgICAgICBvbkZhaWxlZEF0dGVtcHQ6IGNvbnNvbGUud2FybixcbiAgICAgICAgcmV0cmllczogb3B0aW9ucy5yZXRyaWVzID8/IFJFUVVFU1RfUkVUUklFUyxcbiAgICB9KTtcbiAgICBpZiAoIXJlc3VsdC5vdXQub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtVcGxvYWRDYXBhYmlsaXRpZXMuYWRkLmNhbn0gaW52b2NhdGlvbmAsIHtcbiAgICAgICAgICAgIGNhdXNlOiByZXN1bHQub3V0LmVycm9yLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdC5vdXQub2s7XG59XG4vKiogUmV0dXJucyB0aGUgYWJpbGl0eSB1c2VkIGJ5IGFuIGludm9jYXRpb24uICovXG5leHBvcnQgY29uc3QgYWJpbGl0eSA9IFVwbG9hZENhcGFiaWxpdGllcy5hZGQuY2FuO1xuLyoqXG4gKiBSZXR1cm5zIHJlcXVpcmVkIGlucHV0IHRvIHRoZSBpbnZvY2F0aW9uLlxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvbGluaycpLlVua25vd25MaW5rfSByb290XG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5DQVJMaW5rW119IHNoYXJkc1xuICovXG5leHBvcnQgY29uc3QgaW5wdXQgPSAocm9vdCwgc2hhcmRzKSA9PiAoeyByb290LCBzaGFyZHMgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/add.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/get.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/upload/get.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   input: () => (/* binding */ input)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/upload */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/upload.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! p-retry */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/constants.js\");\n\n\n\n\n\n/**\n * Get details of an \"upload\".\n *\n * Required delegated capability proofs: `upload/get`\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `upload/get` delegated capability.\n * @param {import('multiformats/link').UnknownLink} root Root data CID for the DAG that was stored.\n * @param {import('../types.js').RequestOptions} [options]\n * @returns {Promise<import('../types.js').UploadGetSuccess>}\n */\nasync function get({ issuer, with: resource, proofs, audience }, root, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.connection;\n    const result = await (0,p_retry__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(async () => {\n        return await _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.get\n            .invoke({\n            issuer,\n            /* c8 ignore next */\n            audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.servicePrincipal,\n            with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__.SpaceDID.from(resource),\n            nb: input(root),\n            proofs,\n            nonce: options.nonce,\n        })\n            .execute(conn);\n    }, {\n        onFailedAttempt: console.warn,\n        retries: options.retries ?? _constants_js__WEBPACK_IMPORTED_MODULE_3__.REQUEST_RETRIES,\n    });\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.get.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out.ok;\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.get.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {import('multiformats/link').UnknownLink} root\n */\nconst input = (root) => ({ root });\n//# sourceMappingURL=get.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3VwbG9hZC9nZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBd0U7QUFDWjtBQUNoQztBQUNpQztBQUNYO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdDQUF3QztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlDQUF5QztBQUNwRCxXQUFXLHNDQUFzQztBQUNqRCxhQUFhO0FBQ2I7QUFDTyxxQkFBcUIsMENBQTBDLG9CQUFvQjtBQUMxRjtBQUNBLHVDQUF1QyxtREFBVTtBQUNqRCx5QkFBeUIsbURBQUs7QUFDOUIscUJBQXFCLGtFQUFzQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseURBQWdCO0FBQ2xELGtCQUFrQixzRUFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQSxvQ0FBb0MsMERBQWU7QUFDbkQsS0FBSztBQUNMO0FBQ0Esa0NBQWtDLGtFQUFzQixNQUFNO0FBQzlEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0JBQWdCLGtFQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxXQUFXLHlDQUF5QztBQUNwRDtBQUNPLDJCQUEyQixNQUFNO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3VwbG9hZC9nZXQuanM/N2Q2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVcGxvYWRDYXBhYmlsaXRpZXMgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXBsb2FkJztcbmltcG9ydCB7IFNwYWNlRElEIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXRpbHMnO1xuaW1wb3J0IHJldHJ5IGZyb20gJ3AtcmV0cnknO1xuaW1wb3J0IHsgc2VydmljZVByaW5jaXBhbCwgY29ubmVjdGlvbiB9IGZyb20gJy4uL3NlcnZpY2UuanMnO1xuaW1wb3J0IHsgUkVRVUVTVF9SRVRSSUVTIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbi8qKlxuICogR2V0IGRldGFpbHMgb2YgYW4gXCJ1cGxvYWRcIi5cbiAqXG4gKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0eSBwcm9vZnM6IGB1cGxvYWQvZ2V0YFxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkludm9jYXRpb25Db25maWd9IGNvbmYgQ29uZmlndXJhdGlvblxuICogZm9yIHRoZSBVQ0FOIGludm9jYXRpb24uIEFuIG9iamVjdCB3aXRoIGBpc3N1ZXJgLCBgd2l0aGAgYW5kIGBwcm9vZnNgLlxuICpcbiAqIFRoZSBgaXNzdWVyYCBpcyB0aGUgc2lnbmluZyBhdXRob3JpdHkgdGhhdCBpcyBpc3N1aW5nIHRoZSBVQ0FOXG4gKiBpbnZvY2F0aW9uKHMpLiBJdCBpcyB0eXBpY2FsbHkgdGhlIHVzZXIgX2FnZW50Xy5cbiAqXG4gKiBUaGUgYHdpdGhgIGlzIHRoZSByZXNvdXJjZSB0aGUgaW52b2NhdGlvbiBhcHBsaWVzIHRvLiBJdCBpcyB0eXBpY2FsbHkgdGhlXG4gKiBESUQgb2YgYSBzcGFjZS5cbiAqXG4gKiBUaGUgYHByb29mc2AgYXJlIGEgc2V0IG9mIGNhcGFiaWxpdHkgZGVsZWdhdGlvbnMgdGhhdCBwcm92ZSB0aGUgaXNzdWVyXG4gKiBoYXMgdGhlIGNhcGFiaWxpdHkgdG8gcGVyZm9ybSB0aGUgYWN0aW9uLlxuICpcbiAqIFRoZSBpc3N1ZXIgbmVlZHMgdGhlIGB1cGxvYWQvZ2V0YCBkZWxlZ2F0ZWQgY2FwYWJpbGl0eS5cbiAqIEBwYXJhbSB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvbGluaycpLlVua25vd25MaW5rfSByb290IFJvb3QgZGF0YSBDSUQgZm9yIHRoZSBEQUcgdGhhdCB3YXMgc3RvcmVkLlxuICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuUmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge1Byb21pc2U8aW1wb3J0KCcuLi90eXBlcy5qcycpLlVwbG9hZEdldFN1Y2Nlc3M+fVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0KHsgaXNzdWVyLCB3aXRoOiByZXNvdXJjZSwgcHJvb2ZzLCBhdWRpZW5jZSB9LCByb290LCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXRyeShhc3luYyAoKSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCBVcGxvYWRDYXBhYmlsaXRpZXMuZ2V0XG4gICAgICAgICAgICAuaW52b2tlKHtcbiAgICAgICAgICAgIGlzc3VlcixcbiAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICBhdWRpZW5jZTogYXVkaWVuY2UgPz8gc2VydmljZVByaW5jaXBhbCxcbiAgICAgICAgICAgIHdpdGg6IFNwYWNlRElELmZyb20ocmVzb3VyY2UpLFxuICAgICAgICAgICAgbmI6IGlucHV0KHJvb3QpLFxuICAgICAgICAgICAgcHJvb2ZzLFxuICAgICAgICAgICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgICAgIH0pXG4gICAgICAgICAgICAuZXhlY3V0ZShjb25uKTtcbiAgICB9LCB7XG4gICAgICAgIG9uRmFpbGVkQXR0ZW1wdDogY29uc29sZS53YXJuLFxuICAgICAgICByZXRyaWVzOiBvcHRpb25zLnJldHJpZXMgPz8gUkVRVUVTVF9SRVRSSUVTLFxuICAgIH0pO1xuICAgIGlmICghcmVzdWx0Lm91dC5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGZhaWxlZCAke1VwbG9hZENhcGFiaWxpdGllcy5nZXQuY2FufSBpbnZvY2F0aW9uYCwge1xuICAgICAgICAgICAgY2F1c2U6IHJlc3VsdC5vdXQuZXJyb3IsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0Lm91dC5vaztcbn1cbi8qKiBSZXR1cm5zIHRoZSBhYmlsaXR5IHVzZWQgYnkgYW4gaW52b2NhdGlvbi4gKi9cbmV4cG9ydCBjb25zdCBhYmlsaXR5ID0gVXBsb2FkQ2FwYWJpbGl0aWVzLmdldC5jYW47XG4vKipcbiAqIFJldHVybnMgcmVxdWlyZWQgaW5wdXQgdG8gdGhlIGludm9jYXRpb24uXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cy9saW5rJykuVW5rbm93bkxpbmt9IHJvb3RcbiAqL1xuZXhwb3J0IGNvbnN0IGlucHV0ID0gKHJvb3QpID0+ICh7IHJvb3QgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/get.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/upload/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* reexport safe */ _add_js__WEBPACK_IMPORTED_MODULE_0__.add),\n/* harmony export */   get: () => (/* reexport safe */ _get_js__WEBPACK_IMPORTED_MODULE_1__.get),\n/* harmony export */   list: () => (/* reexport safe */ _list_js__WEBPACK_IMPORTED_MODULE_2__.list),\n/* harmony export */   remove: () => (/* reexport safe */ _remove_js__WEBPACK_IMPORTED_MODULE_3__.remove)\n/* harmony export */ });\n/* harmony import */ var _add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/add.js\");\n/* harmony import */ var _get_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/get.js\");\n/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./list.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/list.js\");\n/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./remove.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/remove.js\");\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3VwbG9hZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErQjtBQUNBO0FBQ0U7QUFDSTtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9kaXN0L3NyYy91cGxvYWQvaW5kZXguanM/MjdhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBhZGQgfSBmcm9tICcuL2FkZC5qcyc7XG5leHBvcnQgeyBnZXQgfSBmcm9tICcuL2dldC5qcyc7XG5leHBvcnQgeyBsaXN0IH0gZnJvbSAnLi9saXN0LmpzJztcbmV4cG9ydCB7IHJlbW92ZSB9IGZyb20gJy4vcmVtb3ZlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/list.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/upload/list.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   input: () => (/* binding */ input),\n/* harmony export */   list: () => (/* binding */ list)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/upload */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/upload.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n\n\n\n/**\n * List uploads created by the issuer.\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `upload/list` delegated capability.\n * @param {import('../types.js').ListRequestOptions} [options]\n * @returns {Promise<import('../types.js').UploadListSuccess>}\n */\nasync function list({ issuer, with: resource, proofs, audience }, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.connection;\n    const result = await _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.list\n        .invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.servicePrincipal,\n        with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__.SpaceDID.from(resource),\n        proofs,\n        nb: input(options.cursor, options.size, options.pre),\n        nonce: options.nonce,\n    })\n        .execute(conn);\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.list.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out.ok;\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.list.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {string} [cursor]\n * @param {number} [size]\n * @param {boolean} [pre]\n */\nconst input = (cursor, size, pre) => ({ cursor, size, pre });\n//# sourceMappingURL=list.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3VwbG9hZC9saXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF3RTtBQUNaO0FBQ0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywwQ0FBMEM7QUFDckQsYUFBYTtBQUNiO0FBQ08sc0JBQXNCLDBDQUEwQyxjQUFjO0FBQ3JGO0FBQ0EsdUNBQXVDLG1EQUFVO0FBQ2pELHlCQUF5QixtRUFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlEQUFnQjtBQUM5QyxjQUFjLHNFQUFRO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0NBQWtDLG1FQUF1QixNQUFNO0FBQy9EO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0JBQWdCLG1FQUF1QjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUztBQUNwQjtBQUNPLHdDQUF3QyxtQkFBbUI7QUFDbEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvZGlzdC9zcmMvdXBsb2FkL2xpc3QuanM/ZTE3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVcGxvYWRDYXBhYmlsaXRpZXMgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXBsb2FkJztcbmltcG9ydCB7IFNwYWNlRElEIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXRpbHMnO1xuaW1wb3J0IHsgc2VydmljZVByaW5jaXBhbCwgY29ubmVjdGlvbiB9IGZyb20gJy4uL3NlcnZpY2UuanMnO1xuLyoqXG4gKiBMaXN0IHVwbG9hZHMgY3JlYXRlZCBieSB0aGUgaXNzdWVyLlxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkludm9jYXRpb25Db25maWd9IGNvbmYgQ29uZmlndXJhdGlvblxuICogZm9yIHRoZSBVQ0FOIGludm9jYXRpb24uIEFuIG9iamVjdCB3aXRoIGBpc3N1ZXJgLCBgd2l0aGAgYW5kIGBwcm9vZnNgLlxuICpcbiAqIFRoZSBgaXNzdWVyYCBpcyB0aGUgc2lnbmluZyBhdXRob3JpdHkgdGhhdCBpcyBpc3N1aW5nIHRoZSBVQ0FOXG4gKiBpbnZvY2F0aW9uKHMpLiBJdCBpcyB0eXBpY2FsbHkgdGhlIHVzZXIgX2FnZW50Xy5cbiAqXG4gKiBUaGUgYHdpdGhgIGlzIHRoZSByZXNvdXJjZSB0aGUgaW52b2NhdGlvbiBhcHBsaWVzIHRvLiBJdCBpcyB0eXBpY2FsbHkgdGhlXG4gKiBESUQgb2YgYSBzcGFjZS5cbiAqXG4gKiBUaGUgYHByb29mc2AgYXJlIGEgc2V0IG9mIGNhcGFiaWxpdHkgZGVsZWdhdGlvbnMgdGhhdCBwcm92ZSB0aGUgaXNzdWVyXG4gKiBoYXMgdGhlIGNhcGFiaWxpdHkgdG8gcGVyZm9ybSB0aGUgYWN0aW9uLlxuICpcbiAqIFRoZSBpc3N1ZXIgbmVlZHMgdGhlIGB1cGxvYWQvbGlzdGAgZGVsZWdhdGVkIGNhcGFiaWxpdHkuXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5MaXN0UmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge1Byb21pc2U8aW1wb3J0KCcuLi90eXBlcy5qcycpLlVwbG9hZExpc3RTdWNjZXNzPn1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxpc3QoeyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH0sIG9wdGlvbnMgPSB7fSkge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgY29uc3QgY29ubiA9IG9wdGlvbnMuY29ubmVjdGlvbiA/PyBjb25uZWN0aW9uO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFVwbG9hZENhcGFiaWxpdGllcy5saXN0XG4gICAgICAgIC5pbnZva2Uoe1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgICAgICB3aXRoOiBTcGFjZURJRC5mcm9tKHJlc291cmNlKSxcbiAgICAgICAgcHJvb2ZzLFxuICAgICAgICBuYjogaW5wdXQob3B0aW9ucy5jdXJzb3IsIG9wdGlvbnMuc2l6ZSwgb3B0aW9ucy5wcmUpLFxuICAgICAgICBub25jZTogb3B0aW9ucy5ub25jZSxcbiAgICB9KVxuICAgICAgICAuZXhlY3V0ZShjb25uKTtcbiAgICBpZiAoIXJlc3VsdC5vdXQub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtVcGxvYWRDYXBhYmlsaXRpZXMubGlzdC5jYW59IGludm9jYXRpb25gLCB7XG4gICAgICAgICAgICBjYXVzZTogcmVzdWx0Lm91dC5lcnJvcixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQub3V0Lm9rO1xufVxuLyoqIFJldHVybnMgdGhlIGFiaWxpdHkgdXNlZCBieSBhbiBpbnZvY2F0aW9uLiAqL1xuZXhwb3J0IGNvbnN0IGFiaWxpdHkgPSBVcGxvYWRDYXBhYmlsaXRpZXMubGlzdC5jYW47XG4vKipcbiAqIFJldHVybnMgcmVxdWlyZWQgaW5wdXQgdG8gdGhlIGludm9jYXRpb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IFtjdXJzb3JdXG4gKiBAcGFyYW0ge251bWJlcn0gW3NpemVdXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtwcmVdXG4gKi9cbmV4cG9ydCBjb25zdCBpbnB1dCA9IChjdXJzb3IsIHNpemUsIHByZSkgPT4gKHsgY3Vyc29yLCBzaXplLCBwcmUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/list.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/remove.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/dist/src/upload/remove.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ability: () => (/* binding */ ability),\n/* harmony export */   input: () => (/* binding */ input),\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities/upload */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/upload.js\");\n/* harmony import */ var _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities/utils */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/utils.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/service.js\");\n\n\n\n/**\n * Remove an upload by root data CID.\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `upload/remove` delegated capability.\n * @param {import('multiformats').UnknownLink} root Root data CID to remove.\n * @param {import('../types.js').RequestOptions} [options]\n */\nasync function remove({ issuer, with: resource, proofs, audience }, root, options = {}) {\n    /* c8 ignore next */\n    const conn = options.connection ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.connection;\n    const result = await _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.remove\n        .invoke({\n        issuer,\n        /* c8 ignore next */\n        audience: audience ?? _service_js__WEBPACK_IMPORTED_MODULE_2__.servicePrincipal,\n        with: _web3_storage_capabilities_utils__WEBPACK_IMPORTED_MODULE_1__.SpaceDID.from(resource),\n        nb: input(root),\n        proofs,\n        nonce: options.nonce,\n    })\n        .execute(conn);\n    if (!result.out.ok) {\n        throw new Error(`failed ${_web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.remove.can} invocation`, {\n            cause: result.out.error,\n        });\n    }\n    return result.out.ok;\n}\n/** Returns the ability used by an invocation. */\nconst ability = _web3_storage_capabilities_upload__WEBPACK_IMPORTED_MODULE_0__.remove.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {import('multiformats').UnknownLink} root\n */\nconst input = (root) => ({ root });\n//# sourceMappingURL=remove.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3VwbG9hZC9yZW1vdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdFO0FBQ1o7QUFDQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdDQUF3QztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9DQUFvQztBQUMvQyxXQUFXLHNDQUFzQztBQUNqRDtBQUNPLHdCQUF3QiwwQ0FBMEMsb0JBQW9CO0FBQzdGO0FBQ0EsdUNBQXVDLG1EQUFVO0FBQ2pELHlCQUF5QixxRUFBeUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlEQUFnQjtBQUM5QyxjQUFjLHNFQUFRO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0NBQWtDLHFFQUF5QixNQUFNO0FBQ2pFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0JBQWdCLHFFQUF5QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9DQUFvQztBQUMvQztBQUNPLDJCQUEyQixNQUFNO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L2Rpc3Qvc3JjL3VwbG9hZC9yZW1vdmUuanM/NTMzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVcGxvYWRDYXBhYmlsaXRpZXMgZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXBsb2FkJztcbmltcG9ydCB7IFNwYWNlRElEIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdXRpbHMnO1xuaW1wb3J0IHsgc2VydmljZVByaW5jaXBhbCwgY29ubmVjdGlvbiB9IGZyb20gJy4uL3NlcnZpY2UuanMnO1xuLyoqXG4gKiBSZW1vdmUgYW4gdXBsb2FkIGJ5IHJvb3QgZGF0YSBDSUQuXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuSW52b2NhdGlvbkNvbmZpZ30gY29uZiBDb25maWd1cmF0aW9uXG4gKiBmb3IgdGhlIFVDQU4gaW52b2NhdGlvbi4gQW4gb2JqZWN0IHdpdGggYGlzc3VlcmAsIGB3aXRoYCBhbmQgYHByb29mc2AuXG4gKlxuICogVGhlIGBpc3N1ZXJgIGlzIHRoZSBzaWduaW5nIGF1dGhvcml0eSB0aGF0IGlzIGlzc3VpbmcgdGhlIFVDQU5cbiAqIGludm9jYXRpb24ocykuIEl0IGlzIHR5cGljYWxseSB0aGUgdXNlciBfYWdlbnRfLlxuICpcbiAqIFRoZSBgd2l0aGAgaXMgdGhlIHJlc291cmNlIHRoZSBpbnZvY2F0aW9uIGFwcGxpZXMgdG8uIEl0IGlzIHR5cGljYWxseSB0aGVcbiAqIERJRCBvZiBhIHNwYWNlLlxuICpcbiAqIFRoZSBgcHJvb2ZzYCBhcmUgYSBzZXQgb2YgY2FwYWJpbGl0eSBkZWxlZ2F0aW9ucyB0aGF0IHByb3ZlIHRoZSBpc3N1ZXJcbiAqIGhhcyB0aGUgY2FwYWJpbGl0eSB0byBwZXJmb3JtIHRoZSBhY3Rpb24uXG4gKlxuICogVGhlIGlzc3VlciBuZWVkcyB0aGUgYHVwbG9hZC9yZW1vdmVgIGRlbGVnYXRlZCBjYXBhYmlsaXR5LlxuICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cycpLlVua25vd25MaW5rfSByb290IFJvb3QgZGF0YSBDSUQgdG8gcmVtb3ZlLlxuICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuUmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVtb3ZlKHsgaXNzdWVyLCB3aXRoOiByZXNvdXJjZSwgcHJvb2ZzLCBhdWRpZW5jZSB9LCByb290LCBvcHRpb25zID0ge30pIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgIGNvbnN0IGNvbm4gPSBvcHRpb25zLmNvbm5lY3Rpb24gPz8gY29ubmVjdGlvbjtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBVcGxvYWRDYXBhYmlsaXRpZXMucmVtb3ZlXG4gICAgICAgIC5pbnZva2Uoe1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGF1ZGllbmNlOiBhdWRpZW5jZSA/PyBzZXJ2aWNlUHJpbmNpcGFsLFxuICAgICAgICB3aXRoOiBTcGFjZURJRC5mcm9tKHJlc291cmNlKSxcbiAgICAgICAgbmI6IGlucHV0KHJvb3QpLFxuICAgICAgICBwcm9vZnMsXG4gICAgICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgIH0pXG4gICAgICAgIC5leGVjdXRlKGNvbm4pO1xuICAgIGlmICghcmVzdWx0Lm91dC5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGZhaWxlZCAke1VwbG9hZENhcGFiaWxpdGllcy5yZW1vdmUuY2FufSBpbnZvY2F0aW9uYCwge1xuICAgICAgICAgICAgY2F1c2U6IHJlc3VsdC5vdXQuZXJyb3IsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0Lm91dC5vaztcbn1cbi8qKiBSZXR1cm5zIHRoZSBhYmlsaXR5IHVzZWQgYnkgYW4gaW52b2NhdGlvbi4gKi9cbmV4cG9ydCBjb25zdCBhYmlsaXR5ID0gVXBsb2FkQ2FwYWJpbGl0aWVzLnJlbW92ZS5jYW47XG4vKipcbiAqIFJldHVybnMgcmVxdWlyZWQgaW5wdXQgdG8gdGhlIGludm9jYXRpb24uXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cycpLlVua25vd25MaW5rfSByb290XG4gKi9cbmV4cG9ydCBjb25zdCBpbnB1dCA9IChyb290KSA9PiAoeyByb290IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/dist/src/upload/remove.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-decoder.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-decoder.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytesReader: () => (/* binding */ bytesReader),\n/* harmony export */   fromBytes: () => (/* binding */ fromBytes),\n/* harmony export */   limitReader: () => (/* binding */ limitReader),\n/* harmony export */   readBlockHead: () => (/* binding */ readBlockHead),\n/* harmony export */   readHeader: () => (/* binding */ readHeader)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decoder-common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder-common.js\");\n/* harmony import */ var _header_validator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./header-validator.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/header-validator.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockHeader} BlockHeader\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./coding.js').BytesBufferReader} BytesBufferReader\n * @typedef {import('./coding.js').CarHeader} CarHeader\n * @typedef {import('./coding.js').CarV2Header} CarV2Header\n * @typedef {import('./coding.js').CarV2FixedHeader} CarV2FixedHeader\n */\n\n/**\n * Reads header data from a `BytesReader`. The header may either be in the form\n * of a `CarHeader` or `CarV2Header` depending on the CAR being read.\n *\n * @name decoder.readHeader(reader)\n * @param {BytesBufferReader} reader\n * @param {number} [strictVersion]\n * @returns {CarHeader | CarV2Header}\n */\nfunction readHeader (reader, strictVersion) {\n  const length = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)')\n  }\n  const header = reader.exactly(length, true)\n  const block = (0,_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__.decode)(header)\n  if (_header_validator_js__WEBPACK_IMPORTED_MODULE_4__.CarV1HeaderOrV2Pragma.toTyped(block) === undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  if ((block.version !== 1 && block.version !== 2) || (strictVersion !== undefined && block.version !== strictVersion)) {\n    throw new Error(`Invalid CAR version: ${block.version}${strictVersion !== undefined ? ` (expected ${strictVersion})` : ''}`)\n  }\n  if (block.version === 1) {\n    // CarV1HeaderOrV2Pragma makes roots optional, let's make it mandatory\n    if (!Array.isArray(block.roots)) {\n      throw new Error('Invalid CAR header format')\n    }\n    return block\n  }\n  // version 2\n  if (block.roots !== undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  const v2Header = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeV2Header)(reader.exactly(_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.V2_HEADER_LENGTH, true))\n  reader.seek(v2Header.dataOffset - reader.pos)\n  const v1Header = readHeader(reader, 1)\n  return Object.assign(v1Header, v2Header)\n}\n\n/**\n * Reads CID sync\n *\n * @param {BytesBufferReader} reader\n * @returns {CID}\n */\nfunction readCid (reader) {\n  const first = reader.exactly(2, false)\n  if (first[0] === _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.SHA2_256 && first[1] === _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.LENGTH) {\n    // cidv0 32-byte sha2-256\n    const bytes = reader.exactly(34, true)\n    const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__.decode(bytes)\n    return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.create(0, _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.DAG_PB, multihash)\n  }\n\n  const version = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${version})`)\n  }\n  const codec = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  const bytes = reader.exactly((0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.getMultihashLength)(reader.upTo(8)), true)\n  const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__.decode(bytes)\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.create(version, codec, multihash)\n}\n\n/**\n * Reads the leading data of an individual block from CAR data from a\n * `BytesBufferReader`. Returns a `BlockHeader` object which contains\n * `{ cid, length, blockLength }` which can be used to either index the block\n * or read the block binary data.\n *\n * @name async decoder.readBlockHead(reader)\n * @param {BytesBufferReader} reader\n * @returns {BlockHeader}\n */\nfunction readBlockHead (reader) {\n  // length includes a CID + Binary, where CID has a variable length\n  // we have to deal with\n  const start = reader.pos\n  let length = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)')\n  }\n  length += (reader.pos - start)\n  const cid = readCid(reader)\n  const blockLength = length - Number(reader.pos - start) // subtract CID length\n\n  return { cid, length, blockLength }\n}\n\n/**\n * Returns Car header and blocks from a Uint8Array\n *\n * @param {Uint8Array} bytes\n * @returns {{ header : CarHeader | CarV2Header , blocks: Block[]}}\n */\nfunction fromBytes (bytes) {\n  let reader = bytesReader(bytes)\n  const header = readHeader(reader)\n  if (header.version === 2) {\n    const v1length = reader.pos - header.dataOffset\n    reader = limitReader(reader, header.dataSize - v1length)\n  }\n\n  const blocks = []\n  while (reader.upTo(8).length > 0) {\n    const { cid, blockLength } = readBlockHead(reader)\n\n    blocks.push({ cid, bytes: reader.exactly(blockLength, true) })\n  }\n\n  return {\n    header, blocks\n  }\n}\n\n/**\n * Creates a `BytesBufferReader` from a `Uint8Array`.\n *\n * @name decoder.bytesReader(bytes)\n * @param {Uint8Array} bytes\n * @returns {BytesBufferReader}\n */\nfunction bytesReader (bytes) {\n  let pos = 0\n\n  /** @type {BytesBufferReader} */\n  return {\n    upTo (length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos))\n    },\n\n    exactly (length, seek = false) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data')\n      }\n\n      const out = bytes.subarray(pos, pos + length)\n      if (seek) {\n        pos += length\n      }\n      return out\n    },\n\n    seek (length) {\n      pos += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * Wraps a `BytesBufferReader` in a limiting `BytesBufferReader` which limits maximum read\n * to `byteLimit` bytes. It _does not_ update `pos` of the original\n * `BytesBufferReader`.\n *\n * @name decoder.limitReader(reader, byteLimit)\n * @param {BytesBufferReader} reader\n * @param {number} byteLimit\n * @returns {BytesBufferReader}\n */\nfunction limitReader (reader, byteLimit) {\n  let bytesRead = 0\n\n  /** @type {BytesBufferReader} */\n  return {\n    upTo (length) {\n      let bytes = reader.upTo(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead)\n      }\n      return bytes\n    },\n\n    exactly (length, seek = false) {\n      const bytes = reader.exactly(length, seek)\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data')\n      }\n      if (seek) {\n        bytesRead += length\n      }\n      return bytes\n    },\n\n    seek (length) {\n      bytesRead += length\n      reader.seek(length)\n    },\n\n    get pos () {\n      return reader.pos\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2J1ZmZlci1kZWNvZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDbEI7QUFDYztBQUNpRTtBQUN4RDs7QUFFN0Q7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLGdDQUFnQztBQUM3QyxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLHlDQUF5QztBQUN0RCxhQUFhLGlDQUFpQztBQUM5QyxhQUFhLG1DQUFtQztBQUNoRCxhQUFhLHdDQUF3QztBQUNyRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AsaUJBQWlCLGdFQUFZO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFhO0FBQzdCLE1BQU0sdUVBQXFCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxjQUFjLEVBQUUsNENBQTRDLGNBQWMsUUFBUTtBQUM5SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0VBQWMsZ0JBQWdCLGdFQUFnQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDJEQUFXLDBCQUEwQiwyREFBVztBQUNuRTtBQUNBO0FBQ0Esc0JBQXNCLDhEQUFhO0FBQ25DLFdBQVcsaURBQUcsV0FBVywyREFBVztBQUNwQzs7QUFFQSxrQkFBa0IsZ0VBQVk7QUFDOUI7QUFDQSwrQ0FBK0MsUUFBUTtBQUN2RDtBQUNBLGdCQUFnQixnRUFBWTtBQUM1QiwrQkFBK0Isc0VBQWtCO0FBQ2pELG9CQUFvQiw4REFBYTtBQUNqQyxTQUFTLGlEQUFHO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTSwwQkFBMEI7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdFQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGVBQWU7QUFDZjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjs7QUFFL0Isa0JBQWtCLCtDQUErQztBQUNqRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQOztBQUVBLGFBQWEsbUJBQW1CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDs7QUFFQSxhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvYnVmZmVyLWRlY29kZXIuanM/M2U0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGUgYXMgZGVjb2RlRGFnQ2JvciB9IGZyb20gJ0BpcGxkL2RhZy1jYm9yJ1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCdcbmltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL2RpZ2VzdCdcbmltcG9ydCB7IENJRFYwX0JZVEVTLCBkZWNvZGVWMkhlYWRlciwgZGVjb2RlVmFyaW50LCBnZXRNdWx0aWhhc2hMZW5ndGgsIFYyX0hFQURFUl9MRU5HVEggfSBmcm9tICcuL2RlY29kZXItY29tbW9uLmpzJ1xuaW1wb3J0IHsgQ2FyVjFIZWFkZXJPclYyUHJhZ21hIH0gZnJvbSAnLi9oZWFkZXItdmFsaWRhdG9yLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYXBpLmpzJykuQmxvY2t9IEJsb2NrXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkJsb2NrSGVhZGVyfSBCbG9ja0hlYWRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja0luZGV4fSBCbG9ja0luZGV4XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkJ5dGVzQnVmZmVyUmVhZGVyfSBCeXRlc0J1ZmZlclJlYWRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5DYXJIZWFkZXJ9IENhckhlYWRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5DYXJWMkhlYWRlcn0gQ2FyVjJIZWFkZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29kaW5nLmpzJykuQ2FyVjJGaXhlZEhlYWRlcn0gQ2FyVjJGaXhlZEhlYWRlclxuICovXG5cbi8qKlxuICogUmVhZHMgaGVhZGVyIGRhdGEgZnJvbSBhIGBCeXRlc1JlYWRlcmAuIFRoZSBoZWFkZXIgbWF5IGVpdGhlciBiZSBpbiB0aGUgZm9ybVxuICogb2YgYSBgQ2FySGVhZGVyYCBvciBgQ2FyVjJIZWFkZXJgIGRlcGVuZGluZyBvbiB0aGUgQ0FSIGJlaW5nIHJlYWQuXG4gKlxuICogQG5hbWUgZGVjb2Rlci5yZWFkSGVhZGVyKHJlYWRlcilcbiAqIEBwYXJhbSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9IHJlYWRlclxuICogQHBhcmFtIHtudW1iZXJ9IFtzdHJpY3RWZXJzaW9uXVxuICogQHJldHVybnMge0NhckhlYWRlciB8IENhclYySGVhZGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVhZEhlYWRlciAocmVhZGVyLCBzdHJpY3RWZXJzaW9uKSB7XG4gIGNvbnN0IGxlbmd0aCA9IGRlY29kZVZhcmludChyZWFkZXIudXBUbyg4KSwgcmVhZGVyKVxuICBpZiAobGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIENBUiBoZWFkZXIgKHplcm8gbGVuZ3RoKScpXG4gIH1cbiAgY29uc3QgaGVhZGVyID0gcmVhZGVyLmV4YWN0bHkobGVuZ3RoLCB0cnVlKVxuICBjb25zdCBibG9jayA9IGRlY29kZURhZ0Nib3IoaGVhZGVyKVxuICBpZiAoQ2FyVjFIZWFkZXJPclYyUHJhZ21hLnRvVHlwZWQoYmxvY2spID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgQ0FSIGhlYWRlciBmb3JtYXQnKVxuICB9XG4gIGlmICgoYmxvY2sudmVyc2lvbiAhPT0gMSAmJiBibG9jay52ZXJzaW9uICE9PSAyKSB8fCAoc3RyaWN0VmVyc2lvbiAhPT0gdW5kZWZpbmVkICYmIGJsb2NrLnZlcnNpb24gIT09IHN0cmljdFZlcnNpb24pKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIENBUiB2ZXJzaW9uOiAke2Jsb2NrLnZlcnNpb259JHtzdHJpY3RWZXJzaW9uICE9PSB1bmRlZmluZWQgPyBgIChleHBlY3RlZCAke3N0cmljdFZlcnNpb259KWAgOiAnJ31gKVxuICB9XG4gIGlmIChibG9jay52ZXJzaW9uID09PSAxKSB7XG4gICAgLy8gQ2FyVjFIZWFkZXJPclYyUHJhZ21hIG1ha2VzIHJvb3RzIG9wdGlvbmFsLCBsZXQncyBtYWtlIGl0IG1hbmRhdG9yeVxuICAgIGlmICghQXJyYXkuaXNBcnJheShibG9jay5yb290cykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBDQVIgaGVhZGVyIGZvcm1hdCcpXG4gICAgfVxuICAgIHJldHVybiBibG9ja1xuICB9XG4gIC8vIHZlcnNpb24gMlxuICBpZiAoYmxvY2sucm9vdHMgIT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBDQVIgaGVhZGVyIGZvcm1hdCcpXG4gIH1cbiAgY29uc3QgdjJIZWFkZXIgPSBkZWNvZGVWMkhlYWRlcihyZWFkZXIuZXhhY3RseShWMl9IRUFERVJfTEVOR1RILCB0cnVlKSlcbiAgcmVhZGVyLnNlZWsodjJIZWFkZXIuZGF0YU9mZnNldCAtIHJlYWRlci5wb3MpXG4gIGNvbnN0IHYxSGVhZGVyID0gcmVhZEhlYWRlcihyZWFkZXIsIDEpXG4gIHJldHVybiBPYmplY3QuYXNzaWduKHYxSGVhZGVyLCB2MkhlYWRlcilcbn1cblxuLyoqXG4gKiBSZWFkcyBDSUQgc3luY1xuICpcbiAqIEBwYXJhbSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9IHJlYWRlclxuICogQHJldHVybnMge0NJRH1cbiAqL1xuZnVuY3Rpb24gcmVhZENpZCAocmVhZGVyKSB7XG4gIGNvbnN0IGZpcnN0ID0gcmVhZGVyLmV4YWN0bHkoMiwgZmFsc2UpXG4gIGlmIChmaXJzdFswXSA9PT0gQ0lEVjBfQllURVMuU0hBMl8yNTYgJiYgZmlyc3RbMV0gPT09IENJRFYwX0JZVEVTLkxFTkdUSCkge1xuICAgIC8vIGNpZHYwIDMyLWJ5dGUgc2hhMi0yNTZcbiAgICBjb25zdCBieXRlcyA9IHJlYWRlci5leGFjdGx5KDM0LCB0cnVlKVxuICAgIGNvbnN0IG11bHRpaGFzaCA9IERpZ2VzdC5kZWNvZGUoYnl0ZXMpXG4gICAgcmV0dXJuIENJRC5jcmVhdGUoMCwgQ0lEVjBfQllURVMuREFHX1BCLCBtdWx0aWhhc2gpXG4gIH1cblxuICBjb25zdCB2ZXJzaW9uID0gZGVjb2RlVmFyaW50KHJlYWRlci51cFRvKDgpLCByZWFkZXIpXG4gIGlmICh2ZXJzaW9uICE9PSAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIENJRCB2ZXJzaW9uICgke3ZlcnNpb259KWApXG4gIH1cbiAgY29uc3QgY29kZWMgPSBkZWNvZGVWYXJpbnQocmVhZGVyLnVwVG8oOCksIHJlYWRlcilcbiAgY29uc3QgYnl0ZXMgPSByZWFkZXIuZXhhY3RseShnZXRNdWx0aWhhc2hMZW5ndGgocmVhZGVyLnVwVG8oOCkpLCB0cnVlKVxuICBjb25zdCBtdWx0aWhhc2ggPSBEaWdlc3QuZGVjb2RlKGJ5dGVzKVxuICByZXR1cm4gQ0lELmNyZWF0ZSh2ZXJzaW9uLCBjb2RlYywgbXVsdGloYXNoKVxufVxuXG4vKipcbiAqIFJlYWRzIHRoZSBsZWFkaW5nIGRhdGEgb2YgYW4gaW5kaXZpZHVhbCBibG9jayBmcm9tIENBUiBkYXRhIGZyb20gYVxuICogYEJ5dGVzQnVmZmVyUmVhZGVyYC4gUmV0dXJucyBhIGBCbG9ja0hlYWRlcmAgb2JqZWN0IHdoaWNoIGNvbnRhaW5zXG4gKiBgeyBjaWQsIGxlbmd0aCwgYmxvY2tMZW5ndGggfWAgd2hpY2ggY2FuIGJlIHVzZWQgdG8gZWl0aGVyIGluZGV4IHRoZSBibG9ja1xuICogb3IgcmVhZCB0aGUgYmxvY2sgYmluYXJ5IGRhdGEuXG4gKlxuICogQG5hbWUgYXN5bmMgZGVjb2Rlci5yZWFkQmxvY2tIZWFkKHJlYWRlcilcbiAqIEBwYXJhbSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9IHJlYWRlclxuICogQHJldHVybnMge0Jsb2NrSGVhZGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVhZEJsb2NrSGVhZCAocmVhZGVyKSB7XG4gIC8vIGxlbmd0aCBpbmNsdWRlcyBhIENJRCArIEJpbmFyeSwgd2hlcmUgQ0lEIGhhcyBhIHZhcmlhYmxlIGxlbmd0aFxuICAvLyB3ZSBoYXZlIHRvIGRlYWwgd2l0aFxuICBjb25zdCBzdGFydCA9IHJlYWRlci5wb3NcbiAgbGV0IGxlbmd0aCA9IGRlY29kZVZhcmludChyZWFkZXIudXBUbyg4KSwgcmVhZGVyKVxuICBpZiAobGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIENBUiBzZWN0aW9uICh6ZXJvIGxlbmd0aCknKVxuICB9XG4gIGxlbmd0aCArPSAocmVhZGVyLnBvcyAtIHN0YXJ0KVxuICBjb25zdCBjaWQgPSByZWFkQ2lkKHJlYWRlcilcbiAgY29uc3QgYmxvY2tMZW5ndGggPSBsZW5ndGggLSBOdW1iZXIocmVhZGVyLnBvcyAtIHN0YXJ0KSAvLyBzdWJ0cmFjdCBDSUQgbGVuZ3RoXG5cbiAgcmV0dXJuIHsgY2lkLCBsZW5ndGgsIGJsb2NrTGVuZ3RoIH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIENhciBoZWFkZXIgYW5kIGJsb2NrcyBmcm9tIGEgVWludDhBcnJheVxuICpcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm5zIHt7IGhlYWRlciA6IENhckhlYWRlciB8IENhclYySGVhZGVyICwgYmxvY2tzOiBCbG9ja1tdfX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21CeXRlcyAoYnl0ZXMpIHtcbiAgbGV0IHJlYWRlciA9IGJ5dGVzUmVhZGVyKGJ5dGVzKVxuICBjb25zdCBoZWFkZXIgPSByZWFkSGVhZGVyKHJlYWRlcilcbiAgaWYgKGhlYWRlci52ZXJzaW9uID09PSAyKSB7XG4gICAgY29uc3QgdjFsZW5ndGggPSByZWFkZXIucG9zIC0gaGVhZGVyLmRhdGFPZmZzZXRcbiAgICByZWFkZXIgPSBsaW1pdFJlYWRlcihyZWFkZXIsIGhlYWRlci5kYXRhU2l6ZSAtIHYxbGVuZ3RoKVxuICB9XG5cbiAgY29uc3QgYmxvY2tzID0gW11cbiAgd2hpbGUgKHJlYWRlci51cFRvKDgpLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCB7IGNpZCwgYmxvY2tMZW5ndGggfSA9IHJlYWRCbG9ja0hlYWQocmVhZGVyKVxuXG4gICAgYmxvY2tzLnB1c2goeyBjaWQsIGJ5dGVzOiByZWFkZXIuZXhhY3RseShibG9ja0xlbmd0aCwgdHJ1ZSkgfSlcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaGVhZGVyLCBibG9ja3NcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBgQnl0ZXNCdWZmZXJSZWFkZXJgIGZyb20gYSBgVWludDhBcnJheWAuXG4gKlxuICogQG5hbWUgZGVjb2Rlci5ieXRlc1JlYWRlcihieXRlcylcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm5zIHtCeXRlc0J1ZmZlclJlYWRlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzUmVhZGVyIChieXRlcykge1xuICBsZXQgcG9zID0gMFxuXG4gIC8qKiBAdHlwZSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9ICovXG4gIHJldHVybiB7XG4gICAgdXBUbyAobGVuZ3RoKSB7XG4gICAgICByZXR1cm4gYnl0ZXMuc3ViYXJyYXkocG9zLCBwb3MgKyBNYXRoLm1pbihsZW5ndGgsIGJ5dGVzLmxlbmd0aCAtIHBvcykpXG4gICAgfSxcblxuICAgIGV4YWN0bHkgKGxlbmd0aCwgc2VlayA9IGZhbHNlKSB7XG4gICAgICBpZiAobGVuZ3RoID4gYnl0ZXMubGVuZ3RoIC0gcG9zKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCBlbmQgb2YgZGF0YScpXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG91dCA9IGJ5dGVzLnN1YmFycmF5KHBvcywgcG9zICsgbGVuZ3RoKVxuICAgICAgaWYgKHNlZWspIHtcbiAgICAgICAgcG9zICs9IGxlbmd0aFxuICAgICAgfVxuICAgICAgcmV0dXJuIG91dFxuICAgIH0sXG5cbiAgICBzZWVrIChsZW5ndGgpIHtcbiAgICAgIHBvcyArPSBsZW5ndGhcbiAgICB9LFxuXG4gICAgZ2V0IHBvcyAoKSB7XG4gICAgICByZXR1cm4gcG9zXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogV3JhcHMgYSBgQnl0ZXNCdWZmZXJSZWFkZXJgIGluIGEgbGltaXRpbmcgYEJ5dGVzQnVmZmVyUmVhZGVyYCB3aGljaCBsaW1pdHMgbWF4aW11bSByZWFkXG4gKiB0byBgYnl0ZUxpbWl0YCBieXRlcy4gSXQgX2RvZXMgbm90XyB1cGRhdGUgYHBvc2Agb2YgdGhlIG9yaWdpbmFsXG4gKiBgQnl0ZXNCdWZmZXJSZWFkZXJgLlxuICpcbiAqIEBuYW1lIGRlY29kZXIubGltaXRSZWFkZXIocmVhZGVyLCBieXRlTGltaXQpXG4gKiBAcGFyYW0ge0J5dGVzQnVmZmVyUmVhZGVyfSByZWFkZXJcbiAqIEBwYXJhbSB7bnVtYmVyfSBieXRlTGltaXRcbiAqIEByZXR1cm5zIHtCeXRlc0J1ZmZlclJlYWRlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxpbWl0UmVhZGVyIChyZWFkZXIsIGJ5dGVMaW1pdCkge1xuICBsZXQgYnl0ZXNSZWFkID0gMFxuXG4gIC8qKiBAdHlwZSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9ICovXG4gIHJldHVybiB7XG4gICAgdXBUbyAobGVuZ3RoKSB7XG4gICAgICBsZXQgYnl0ZXMgPSByZWFkZXIudXBUbyhsZW5ndGgpXG4gICAgICBpZiAoYnl0ZXMubGVuZ3RoICsgYnl0ZXNSZWFkID4gYnl0ZUxpbWl0KSB7XG4gICAgICAgIGJ5dGVzID0gYnl0ZXMuc3ViYXJyYXkoMCwgYnl0ZUxpbWl0IC0gYnl0ZXNSZWFkKVxuICAgICAgfVxuICAgICAgcmV0dXJuIGJ5dGVzXG4gICAgfSxcblxuICAgIGV4YWN0bHkgKGxlbmd0aCwgc2VlayA9IGZhbHNlKSB7XG4gICAgICBjb25zdCBieXRlcyA9IHJlYWRlci5leGFjdGx5KGxlbmd0aCwgc2VlaylcbiAgICAgIGlmIChieXRlcy5sZW5ndGggKyBieXRlc1JlYWQgPiBieXRlTGltaXQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIGVuZCBvZiBkYXRhJylcbiAgICAgIH1cbiAgICAgIGlmIChzZWVrKSB7XG4gICAgICAgIGJ5dGVzUmVhZCArPSBsZW5ndGhcbiAgICAgIH1cbiAgICAgIHJldHVybiBieXRlc1xuICAgIH0sXG5cbiAgICBzZWVrIChsZW5ndGgpIHtcbiAgICAgIGJ5dGVzUmVhZCArPSBsZW5ndGhcbiAgICAgIHJlYWRlci5zZWVrKGxlbmd0aClcbiAgICB9LFxuXG4gICAgZ2V0IHBvcyAoKSB7XG4gICAgICByZXR1cm4gcmVhZGVyLnBvc1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-decoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-reader-browser.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-reader-browser.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarBufferReader: () => (/* binding */ CarBufferReader),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var _buffer_decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer-decoder.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-decoder.js\");\n\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').CarBufferReader} ICarBufferReader\n * @typedef {import('./coding.js').CarHeader} CarHeader\n * @typedef {import('./coding.js').CarV2Header} CarV2Header\n */\n\n/**\n * Provides blockstore-like access to a CAR.\n *\n * Implements the `RootsBufferReader` interface:\n * {@link ICarBufferReader.getRoots `getRoots()`}. And the `BlockBufferReader` interface:\n * {@link ICarBufferReader.get `get()`}, {@link ICarBufferReader.has `has()`},\n * {@link ICarBufferReader.blocks `blocks()`} and\n * {@link ICarBufferReader.cids `cids()`}.\n *\n * Load this class with either `import { CarBufferReader } from '@ipld/car/buffer-reader'`\n * (`const { CarBufferReader } = require('@ipld/car/buffer-reader')`). Or\n * `import { CarBufferReader } from '@ipld/car'` (`const { CarBufferReader } = require('@ipld/car')`).\n * The former will likely result in smaller bundle sizes where this is\n * important.\n *\n * @name CarBufferReader\n * @class\n * @implements {ICarBufferReader}\n * @property {number} version The version number of the CAR referenced by this\n * reader (should be `1` or `2`).\n */\nclass CarBufferReader {\n  /**\n   * @constructs CarBufferReader\n   * @param {CarHeader|CarV2Header} header\n   * @param {Block[]} blocks\n   */\n  constructor (header, blocks) {\n    this._header = header\n    this._blocks = blocks\n    this._cids = undefined\n  }\n\n  /**\n   * @property {number} version of the CAR\n   * @memberof CarBufferReader\n   * @instance\n   */\n  get version () {\n    return this._header.version\n  }\n\n  /**\n   * Get the list of roots defined by the CAR referenced by this reader. May be\n   * zero or more `CID`s.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {CID[]}\n   */\n  getRoots () {\n    return this._header.roots\n  }\n\n  /**\n   * Check whether a given `CID` exists within the CAR referenced by this\n   * reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @param {CID} key\n   * @returns {boolean}\n   */\n  has (key) {\n    return this._blocks.some(b => b.cid.equals(key))\n  }\n\n  /**\n   * Fetch a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) from the CAR\n   * referenced by this reader matching the provided `CID`. In the case where\n   * the provided `CID` doesn't exist within the CAR, `undefined` will be\n   * returned.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @param {CID} key\n   * @returns {Block | undefined}\n   */\n  get (key) {\n    return this._blocks.find(b => b.cid.equals(key))\n  }\n\n  /**\n   * Returns a `Block[]` of the `Block`s (`{ cid:CID, bytes:Uint8Array }` pairs) contained within\n   * the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {Block[]}\n   */\n  blocks () {\n    return this._blocks\n  }\n\n  /**\n   * Returns a `CID[]` of the `CID`s contained within the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {CID[]}\n   */\n  cids () {\n    if (!this._cids) {\n      this._cids = this._blocks.map(b => b.cid)\n    }\n    return this._cids\n  }\n\n  /**\n   * Instantiate a {@link CarBufferReader} from a `Uint8Array` blob. This performs a\n   * decode fully in memory and maintains the decoded state in memory for full\n   * access to the data via the `CarReader` API.\n   *\n   * @static\n   * @memberof CarBufferReader\n   * @param {Uint8Array} bytes\n   * @returns {CarBufferReader}\n   */\n  static fromBytes (bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array')\n    }\n\n    const { header, blocks } = _buffer_decoder_js__WEBPACK_IMPORTED_MODULE_0__.fromBytes(bytes)\n    return new CarBufferReader(header, blocks)\n  }\n}\n\nconst __browser = true\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2J1ZmZlci1yZWFkZXItYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0Q7O0FBRXBEO0FBQ0EsYUFBYSw0QkFBNEI7QUFDekMsYUFBYSwwQkFBMEI7QUFDdkMsYUFBYSxvQ0FBb0M7QUFDakQsYUFBYSxpQ0FBaUM7QUFDOUMsYUFBYSxtQ0FBbUM7QUFDaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDZDQUE2QztBQUNqRCxJQUFJLG1DQUFtQyxHQUFHLG1DQUFtQztBQUM3RSxJQUFJLDBDQUEwQztBQUM5QyxJQUFJLHFDQUFxQztBQUN6QztBQUNBLHlDQUF5QyxrQkFBa0I7QUFDM0QsYUFBYSxrQkFBa0I7QUFDL0IsYUFBYSxrQkFBa0IsNEJBQTRCLGtCQUFrQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsYUFBYSx1QkFBdUI7QUFDcEMsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsS0FBSztBQUNsQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkIsMkJBQTJCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZDQUE2QywyQkFBMkI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFlBQVk7QUFDekIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxpQkFBaUIsRUFBRSx5REFBdUI7QUFDdEQ7QUFDQTtBQUNBOztBQUVPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2J1ZmZlci1yZWFkZXItYnJvd3Nlci5qcz81NDdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEJ1ZmZlckRlY29kZXIgZnJvbSAnLi9idWZmZXItZGVjb2Rlci5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMnKS5DSUR9IENJRFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja30gQmxvY2tcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYXBpLmpzJykuQ2FyQnVmZmVyUmVhZGVyfSBJQ2FyQnVmZmVyUmVhZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkNhckhlYWRlcn0gQ2FySGVhZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkNhclYySGVhZGVyfSBDYXJWMkhlYWRlclxuICovXG5cbi8qKlxuICogUHJvdmlkZXMgYmxvY2tzdG9yZS1saWtlIGFjY2VzcyB0byBhIENBUi5cbiAqXG4gKiBJbXBsZW1lbnRzIHRoZSBgUm9vdHNCdWZmZXJSZWFkZXJgIGludGVyZmFjZTpcbiAqIHtAbGluayBJQ2FyQnVmZmVyUmVhZGVyLmdldFJvb3RzIGBnZXRSb290cygpYH0uIEFuZCB0aGUgYEJsb2NrQnVmZmVyUmVhZGVyYCBpbnRlcmZhY2U6XG4gKiB7QGxpbmsgSUNhckJ1ZmZlclJlYWRlci5nZXQgYGdldCgpYH0sIHtAbGluayBJQ2FyQnVmZmVyUmVhZGVyLmhhcyBgaGFzKClgfSxcbiAqIHtAbGluayBJQ2FyQnVmZmVyUmVhZGVyLmJsb2NrcyBgYmxvY2tzKClgfSBhbmRcbiAqIHtAbGluayBJQ2FyQnVmZmVyUmVhZGVyLmNpZHMgYGNpZHMoKWB9LlxuICpcbiAqIExvYWQgdGhpcyBjbGFzcyB3aXRoIGVpdGhlciBgaW1wb3J0IHsgQ2FyQnVmZmVyUmVhZGVyIH0gZnJvbSAnQGlwbGQvY2FyL2J1ZmZlci1yZWFkZXInYFxuICogKGBjb25zdCB7IENhckJ1ZmZlclJlYWRlciB9ID0gcmVxdWlyZSgnQGlwbGQvY2FyL2J1ZmZlci1yZWFkZXInKWApLiBPclxuICogYGltcG9ydCB7IENhckJ1ZmZlclJlYWRlciB9IGZyb20gJ0BpcGxkL2NhcidgIChgY29uc3QgeyBDYXJCdWZmZXJSZWFkZXIgfSA9IHJlcXVpcmUoJ0BpcGxkL2NhcicpYCkuXG4gKiBUaGUgZm9ybWVyIHdpbGwgbGlrZWx5IHJlc3VsdCBpbiBzbWFsbGVyIGJ1bmRsZSBzaXplcyB3aGVyZSB0aGlzIGlzXG4gKiBpbXBvcnRhbnQuXG4gKlxuICogQG5hbWUgQ2FyQnVmZmVyUmVhZGVyXG4gKiBAY2xhc3NcbiAqIEBpbXBsZW1lbnRzIHtJQ2FyQnVmZmVyUmVhZGVyfVxuICogQHByb3BlcnR5IHtudW1iZXJ9IHZlcnNpb24gVGhlIHZlcnNpb24gbnVtYmVyIG9mIHRoZSBDQVIgcmVmZXJlbmNlZCBieSB0aGlzXG4gKiByZWFkZXIgKHNob3VsZCBiZSBgMWAgb3IgYDJgKS5cbiAqL1xuZXhwb3J0IGNsYXNzIENhckJ1ZmZlclJlYWRlciB7XG4gIC8qKlxuICAgKiBAY29uc3RydWN0cyBDYXJCdWZmZXJSZWFkZXJcbiAgICogQHBhcmFtIHtDYXJIZWFkZXJ8Q2FyVjJIZWFkZXJ9IGhlYWRlclxuICAgKiBAcGFyYW0ge0Jsb2NrW119IGJsb2Nrc1xuICAgKi9cbiAgY29uc3RydWN0b3IgKGhlYWRlciwgYmxvY2tzKSB7XG4gICAgdGhpcy5faGVhZGVyID0gaGVhZGVyXG4gICAgdGhpcy5fYmxvY2tzID0gYmxvY2tzXG4gICAgdGhpcy5fY2lkcyA9IHVuZGVmaW5lZFxuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSB2ZXJzaW9uIG9mIHRoZSBDQVJcbiAgICogQG1lbWJlcm9mIENhckJ1ZmZlclJlYWRlclxuICAgKiBAaW5zdGFuY2VcbiAgICovXG4gIGdldCB2ZXJzaW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5faGVhZGVyLnZlcnNpb25cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGxpc3Qgb2Ygcm9vdHMgZGVmaW5lZCBieSB0aGUgQ0FSIHJlZmVyZW5jZWQgYnkgdGhpcyByZWFkZXIuIE1heSBiZVxuICAgKiB6ZXJvIG9yIG1vcmUgYENJRGBzLlxuICAgKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIENhckJ1ZmZlclJlYWRlclxuICAgKiBAaW5zdGFuY2VcbiAgICogQHJldHVybnMge0NJRFtdfVxuICAgKi9cbiAgZ2V0Um9vdHMgKCkge1xuICAgIHJldHVybiB0aGlzLl9oZWFkZXIucm9vdHNcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB3aGV0aGVyIGEgZ2l2ZW4gYENJRGAgZXhpc3RzIHdpdGhpbiB0aGUgQ0FSIHJlZmVyZW5jZWQgYnkgdGhpc1xuICAgKiByZWFkZXIuXG4gICAqXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbWVtYmVyb2YgQ2FyQnVmZmVyUmVhZGVyXG4gICAqIEBpbnN0YW5jZVxuICAgKiBAcGFyYW0ge0NJRH0ga2V5XG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgaGFzIChrZXkpIHtcbiAgICByZXR1cm4gdGhpcy5fYmxvY2tzLnNvbWUoYiA9PiBiLmNpZC5lcXVhbHMoa2V5KSlcbiAgfVxuXG4gIC8qKlxuICAgKiBGZXRjaCBhIGBCbG9ja2AgKGEgYHsgY2lkOkNJRCwgYnl0ZXM6VWludDhBcnJheSB9YCBwYWlyKSBmcm9tIHRoZSBDQVJcbiAgICogcmVmZXJlbmNlZCBieSB0aGlzIHJlYWRlciBtYXRjaGluZyB0aGUgcHJvdmlkZWQgYENJRGAuIEluIHRoZSBjYXNlIHdoZXJlXG4gICAqIHRoZSBwcm92aWRlZCBgQ0lEYCBkb2Vzbid0IGV4aXN0IHdpdGhpbiB0aGUgQ0FSLCBgdW5kZWZpbmVkYCB3aWxsIGJlXG4gICAqIHJldHVybmVkLlxuICAgKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIENhckJ1ZmZlclJlYWRlclxuICAgKiBAaW5zdGFuY2VcbiAgICogQHBhcmFtIHtDSUR9IGtleVxuICAgKiBAcmV0dXJucyB7QmxvY2sgfCB1bmRlZmluZWR9XG4gICAqL1xuICBnZXQgKGtleSkge1xuICAgIHJldHVybiB0aGlzLl9ibG9ja3MuZmluZChiID0+IGIuY2lkLmVxdWFscyhrZXkpKVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBgQmxvY2tbXWAgb2YgdGhlIGBCbG9ja2BzIChgeyBjaWQ6Q0lELCBieXRlczpVaW50OEFycmF5IH1gIHBhaXJzKSBjb250YWluZWQgd2l0aGluXG4gICAqIHRoZSBDQVIgcmVmZXJlbmNlZCBieSB0aGlzIHJlYWRlci5cbiAgICpcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQGluc3RhbmNlXG4gICAqIEByZXR1cm5zIHtCbG9ja1tdfVxuICAgKi9cbiAgYmxvY2tzICgpIHtcbiAgICByZXR1cm4gdGhpcy5fYmxvY2tzXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIGBDSURbXWAgb2YgdGhlIGBDSURgcyBjb250YWluZWQgd2l0aGluIHRoZSBDQVIgcmVmZXJlbmNlZCBieSB0aGlzIHJlYWRlci5cbiAgICpcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQGluc3RhbmNlXG4gICAqIEByZXR1cm5zIHtDSURbXX1cbiAgICovXG4gIGNpZHMgKCkge1xuICAgIGlmICghdGhpcy5fY2lkcykge1xuICAgICAgdGhpcy5fY2lkcyA9IHRoaXMuX2Jsb2Nrcy5tYXAoYiA9PiBiLmNpZClcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX2NpZHNcbiAgfVxuXG4gIC8qKlxuICAgKiBJbnN0YW50aWF0ZSBhIHtAbGluayBDYXJCdWZmZXJSZWFkZXJ9IGZyb20gYSBgVWludDhBcnJheWAgYmxvYi4gVGhpcyBwZXJmb3JtcyBhXG4gICAqIGRlY29kZSBmdWxseSBpbiBtZW1vcnkgYW5kIG1haW50YWlucyB0aGUgZGVjb2RlZCBzdGF0ZSBpbiBtZW1vcnkgZm9yIGZ1bGxcbiAgICogYWNjZXNzIHRvIHRoZSBkYXRhIHZpYSB0aGUgYENhclJlYWRlcmAgQVBJLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICAgKiBAcmV0dXJucyB7Q2FyQnVmZmVyUmVhZGVyfVxuICAgKi9cbiAgc3RhdGljIGZyb21CeXRlcyAoYnl0ZXMpIHtcbiAgICBpZiAoIShieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdmcm9tQnl0ZXMoKSByZXF1aXJlcyBhIFVpbnQ4QXJyYXknKVxuICAgIH1cblxuICAgIGNvbnN0IHsgaGVhZGVyLCBibG9ja3MgfSA9IEJ1ZmZlckRlY29kZXIuZnJvbUJ5dGVzKGJ5dGVzKVxuICAgIHJldHVybiBuZXcgQ2FyQnVmZmVyUmVhZGVyKGhlYWRlciwgYmxvY2tzKVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBfX2Jyb3dzZXIgPSB0cnVlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-reader-browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-reader.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-reader.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarBufferReader: () => (/* binding */ CarBufferReader),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var _buffer_reader_browser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer-reader-browser.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-reader-browser.js\");\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./api.js').CarBufferReader} ICarBufferReader\n */\n\nconst fsread = fs__WEBPACK_IMPORTED_MODULE_0__.readSync\n\n/**\n * @class\n * @implements {ICarBufferReader}\n */\nclass CarBufferReader extends _buffer_reader_browser_js__WEBPACK_IMPORTED_MODULE_1__.CarBufferReader {\n  /**\n   * Reads a block directly from a file descriptor for an open CAR file. This\n   * function is **only available in Node.js** and not a browser environment.\n   *\n   * This function can be used in connection with {@link CarIndexer} which emits\n   * the `BlockIndex` objects that are required by this function.\n   *\n   * The user is responsible for opening and closing the file used in this call.\n   *\n   * @static\n   * @memberof CarBufferReader\n   * @param {number} fd - A file descriptor from the\n   * Node.js `fs` module. An integer, from `fs.open()`.\n   * @param {BlockIndex} blockIndex - An index pointing to the location of the\n   * Block required. This `BlockIndex` should take the form:\n   * `{cid:CID, blockLength:number, blockOffset:number}`.\n   * @returns {Block} A `{ cid:CID, bytes:Uint8Array }` pair.\n   */\n  static readRaw (fd, blockIndex) {\n    const { cid, blockLength, blockOffset } = blockIndex\n    const bytes = new Uint8Array(blockLength)\n    let read\n    if (typeof fd === 'number') {\n      read = fsread(fd, bytes, 0, blockLength, blockOffset)\n    } else {\n      throw new TypeError('Bad fd')\n    }\n    if (read !== blockLength) {\n      throw new Error(`Failed to read entire block (${read} instead of ${blockLength})`)\n    }\n    return { cid, bytes }\n  }\n}\n\nconst __browser = false\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2J1ZmZlci1yZWFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtQjtBQUNtRTs7QUFFdEY7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLG9DQUFvQztBQUNqRDs7QUFFQSxlQUFlLHdDQUFXOztBQUUxQjtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ08sOEJBQThCLHNFQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxrQkFBa0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCO0FBQ0EsT0FBTyxnREFBZ0Q7QUFDdkQsZUFBZSxPQUFPLEtBQUssMkJBQTJCO0FBQ3REO0FBQ0E7QUFDQSxZQUFZLGdDQUFnQztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsTUFBTSxhQUFhLFlBQVk7QUFDckY7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFTyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvQGlwbGQvY2FyL3NyYy9idWZmZXItcmVhZGVyLmpzPzA4NWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IHsgQ2FyQnVmZmVyUmVhZGVyIGFzIEJyb3dzZXJDYXJCdWZmZXJSZWFkZXIgfSBmcm9tICcuL2J1ZmZlci1yZWFkZXItYnJvd3Nlci5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkJsb2NrfSBCbG9ja1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja0luZGV4fSBCbG9ja0luZGV4XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkNhckJ1ZmZlclJlYWRlcn0gSUNhckJ1ZmZlclJlYWRlclxuICovXG5cbmNvbnN0IGZzcmVhZCA9IGZzLnJlYWRTeW5jXG5cbi8qKlxuICogQGNsYXNzXG4gKiBAaW1wbGVtZW50cyB7SUNhckJ1ZmZlclJlYWRlcn1cbiAqL1xuZXhwb3J0IGNsYXNzIENhckJ1ZmZlclJlYWRlciBleHRlbmRzIEJyb3dzZXJDYXJCdWZmZXJSZWFkZXIge1xuICAvKipcbiAgICogUmVhZHMgYSBibG9jayBkaXJlY3RseSBmcm9tIGEgZmlsZSBkZXNjcmlwdG9yIGZvciBhbiBvcGVuIENBUiBmaWxlLiBUaGlzXG4gICAqIGZ1bmN0aW9uIGlzICoqb25seSBhdmFpbGFibGUgaW4gTm9kZS5qcyoqIGFuZCBub3QgYSBicm93c2VyIGVudmlyb25tZW50LlxuICAgKlxuICAgKiBUaGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIGluIGNvbm5lY3Rpb24gd2l0aCB7QGxpbmsgQ2FySW5kZXhlcn0gd2hpY2ggZW1pdHNcbiAgICogdGhlIGBCbG9ja0luZGV4YCBvYmplY3RzIHRoYXQgYXJlIHJlcXVpcmVkIGJ5IHRoaXMgZnVuY3Rpb24uXG4gICAqXG4gICAqIFRoZSB1c2VyIGlzIHJlc3BvbnNpYmxlIGZvciBvcGVuaW5nIGFuZCBjbG9zaW5nIHRoZSBmaWxlIHVzZWQgaW4gdGhpcyBjYWxsLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGZkIC0gQSBmaWxlIGRlc2NyaXB0b3IgZnJvbSB0aGVcbiAgICogTm9kZS5qcyBgZnNgIG1vZHVsZS4gQW4gaW50ZWdlciwgZnJvbSBgZnMub3BlbigpYC5cbiAgICogQHBhcmFtIHtCbG9ja0luZGV4fSBibG9ja0luZGV4IC0gQW4gaW5kZXggcG9pbnRpbmcgdG8gdGhlIGxvY2F0aW9uIG9mIHRoZVxuICAgKiBCbG9jayByZXF1aXJlZC4gVGhpcyBgQmxvY2tJbmRleGAgc2hvdWxkIHRha2UgdGhlIGZvcm06XG4gICAqIGB7Y2lkOkNJRCwgYmxvY2tMZW5ndGg6bnVtYmVyLCBibG9ja09mZnNldDpudW1iZXJ9YC5cbiAgICogQHJldHVybnMge0Jsb2NrfSBBIGB7IGNpZDpDSUQsIGJ5dGVzOlVpbnQ4QXJyYXkgfWAgcGFpci5cbiAgICovXG4gIHN0YXRpYyByZWFkUmF3IChmZCwgYmxvY2tJbmRleCkge1xuICAgIGNvbnN0IHsgY2lkLCBibG9ja0xlbmd0aCwgYmxvY2tPZmZzZXQgfSA9IGJsb2NrSW5kZXhcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGJsb2NrTGVuZ3RoKVxuICAgIGxldCByZWFkXG4gICAgaWYgKHR5cGVvZiBmZCA9PT0gJ251bWJlcicpIHtcbiAgICAgIHJlYWQgPSBmc3JlYWQoZmQsIGJ5dGVzLCAwLCBibG9ja0xlbmd0aCwgYmxvY2tPZmZzZXQpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0JhZCBmZCcpXG4gICAgfVxuICAgIGlmIChyZWFkICE9PSBibG9ja0xlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcmVhZCBlbnRpcmUgYmxvY2sgKCR7cmVhZH0gaW5zdGVhZCBvZiAke2Jsb2NrTGVuZ3RofSlgKVxuICAgIH1cbiAgICByZXR1cm4geyBjaWQsIGJ5dGVzIH1cbiAgfVxufVxuXG5leHBvcnQgY29uc3QgX19icm93c2VyID0gZmFsc2VcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-writer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-writer.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBlock: () => (/* binding */ addBlock),\n/* harmony export */   addRoot: () => (/* binding */ addRoot),\n/* harmony export */   blockLength: () => (/* binding */ blockLength),\n/* harmony export */   calculateHeaderLength: () => (/* binding */ calculateHeaderLength),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   createWriter: () => (/* binding */ createWriter),\n/* harmony export */   estimateHeaderLength: () => (/* binding */ estimateHeaderLength),\n/* harmony export */   headerLength: () => (/* binding */ headerLength),\n/* harmony export */   resizeHeader: () => (/* binding */ resizeHeader)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/cborg.js\");\n/* harmony import */ var cborg_length__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cborg/length */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/length.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n\n\n\n\n\n/**\n * @typedef {import('./api.js').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').CarBufferWriter} Writer\n * @typedef {import('./api.js').CarBufferWriterOptions} Options\n * @typedef {import('./coding.js').CarEncoder} CarEncoder\n */\n\n/**\n * A simple CAR writer that writes to a pre-allocated buffer.\n *\n * @class\n * @name CarBufferWriter\n * @implements {Writer}\n */\nclass CarBufferWriter {\n  /**\n   * @param {Uint8Array} bytes\n   * @param {number} headerSize\n   */\n  constructor (bytes, headerSize) {\n    /** @readonly */\n    this.bytes = bytes\n    this.byteOffset = headerSize\n\n    /**\n     * @readonly\n     * @type {CID[]}\n     */\n    this.roots = []\n    this.headerSize = headerSize\n  }\n\n  /**\n   * Add a root to this writer, to be used to create a header when the CAR is\n   * finalized with {@link CarBufferWriter.close `close()`}\n   *\n   * @param {CID} root\n   * @param {{resize?:boolean}} [options]\n   * @returns {CarBufferWriter}\n   */\n  addRoot (root, options) {\n    addRoot(this, root, options)\n    return this\n  }\n\n  /**\n   * Write a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) to the archive.\n   * Throws if there is not enough capacity.\n   *\n   * @param {Block} block - A `{ cid:CID, bytes:Uint8Array }` pair.\n   * @returns {CarBufferWriter}\n   */\n  write (block) {\n    addBlock(this, block)\n    return this\n  }\n\n  /**\n   * Finalize the CAR and return it as a `Uint8Array`.\n   *\n   * @param {object} [options]\n   * @param {boolean} [options.resize]\n   * @returns {Uint8Array}\n   */\n  close (options) {\n    return close(this, options)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {CID} root\n * @param {{resize?:boolean}} [options]\n */\nconst addRoot = (writer, root, options = {}) => {\n  const { resize = false } = options\n  const { bytes, headerSize, byteOffset, roots } = writer\n  writer.roots.push(root)\n  const size = headerLength(writer)\n  // If there is not enough space for the new root\n  if (size > headerSize) {\n    // Check if we root would fit if we were to resize the head.\n    if (size - headerSize + byteOffset < bytes.byteLength) {\n      // If resize is enabled resize head\n      if (resize) {\n        resizeHeader(writer, size)\n      // otherwise remove head and throw an error suggesting to resize\n      } else {\n        roots.pop()\n        throw new RangeError(`Header of size ${headerSize} has no capacity for new root ${root}.\n  However there is a space in the buffer and you could call addRoot(root, { resize: root }) to resize header to make a space for this root.`)\n      }\n    // If head would not fit even with resize pop new root and throw error\n    } else {\n      roots.pop()\n      throw new RangeError(`Buffer has no capacity for a new root ${root}`)\n    }\n  }\n}\n\n/**\n * Calculates number of bytes required for storing given block in CAR. Useful in\n * estimating size of an `ArrayBuffer` for the `CarBufferWriter`.\n *\n * @name CarBufferWriter.blockLength(Block)\n * @param {Block} block\n * @returns {number}\n */\nconst blockLength = ({ cid, bytes }) => {\n  const size = cid.bytes.byteLength + bytes.byteLength\n  return varint__WEBPACK_IMPORTED_MODULE_3__.encodingLength(size) + size\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {Block} block\n */\nconst addBlock = (writer, { cid, bytes }) => {\n  const byteLength = cid.bytes.byteLength + bytes.byteLength\n  const size = varint__WEBPACK_IMPORTED_MODULE_3__.encode(byteLength)\n  if (writer.byteOffset + size.length + byteLength > writer.bytes.byteLength) {\n    throw new RangeError('Buffer has no capacity for this block')\n  } else {\n    writeBytes(writer, size)\n    writeBytes(writer, cid.bytes)\n    writeBytes(writer, bytes)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {object} [options]\n * @param {boolean} [options.resize]\n */\nconst close = (writer, options = {}) => {\n  const { resize = false } = options\n  const { roots, bytes, byteOffset, headerSize } = writer\n\n  const headerBytes = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__.encode({ version: 1, roots })\n  const varintBytes = varint__WEBPACK_IMPORTED_MODULE_3__.encode(headerBytes.length)\n\n  const size = varintBytes.length + headerBytes.byteLength\n  const offset = headerSize - size\n\n  // If header size estimate was accurate we just write header and return\n  // view into buffer.\n  if (offset === 0) {\n    writeHeader(writer, varintBytes, headerBytes)\n    return bytes.subarray(0, byteOffset)\n    // If header was overestimated and `{resize: true}` is passed resize header\n  } else if (resize) {\n    resizeHeader(writer, size)\n    writeHeader(writer, varintBytes, headerBytes)\n    return bytes.subarray(0, writer.byteOffset)\n  } else {\n    throw new RangeError(`Header size was overestimated.\nYou can use close({ resize: true }) to resize header`)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {number} byteLength\n */\nconst resizeHeader = (writer, byteLength) => {\n  const { bytes, headerSize } = writer\n  // Move data section to a new offset\n  bytes.set(bytes.subarray(headerSize, writer.byteOffset), byteLength)\n  // Update header size & byteOffset\n  writer.byteOffset += byteLength - headerSize\n  writer.headerSize = byteLength\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {number[]|Uint8Array} bytes\n */\n\nconst writeBytes = (writer, bytes) => {\n  writer.bytes.set(bytes, writer.byteOffset)\n  writer.byteOffset += bytes.length\n}\n/**\n * @param {{bytes:Uint8Array}} writer\n * @param {number[]} varint\n * @param {Uint8Array} header\n */\nconst writeHeader = ({ bytes }, varint, header) => {\n  bytes.set(varint)\n  bytes.set(header, varint.length)\n}\n\nconst headerPreludeTokens = [\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.map, 2),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.string, 'version'),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.uint, 1),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.string, 'roots')\n]\n\nconst CID_TAG = new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.tag, 42)\n\n/**\n * Calculates header size given the array of byteLength for roots.\n *\n * @name CarBufferWriter.calculateHeaderLength(rootLengths)\n * @param {number[]} rootLengths\n * @returns {number}\n */\nconst calculateHeaderLength = (rootLengths) => {\n  const tokens = [...headerPreludeTokens]\n  tokens.push(new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.array, rootLengths.length))\n  for (const rootLength of rootLengths) {\n    tokens.push(CID_TAG)\n    tokens.push(new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, { length: rootLength + 1 }))\n  }\n  const length = (0,cborg_length__WEBPACK_IMPORTED_MODULE_2__.tokensToLength)(tokens) // no options needed here because we have simple tokens\n  return varint__WEBPACK_IMPORTED_MODULE_3__.encodingLength(length) + length\n}\n\n/**\n * Calculates header size given the array of roots.\n *\n * @name CarBufferWriter.headerLength({ roots })\n * @param {object} options\n * @param {CID[]} options.roots\n * @returns {number}\n */\nconst headerLength = ({ roots }) =>\n  calculateHeaderLength(roots.map(cid => cid.bytes.byteLength))\n\n/**\n * Estimates header size given a count of the roots and the expected byte length\n * of the root CIDs. The default length works for a standard CIDv1 with a\n * single-byte multihash code, such as SHA2-256 (i.e. the most common CIDv1).\n *\n * @name CarBufferWriter.estimateHeaderLength(rootCount[, rootByteLength])\n * @param {number} rootCount\n * @param {number} [rootByteLength]\n * @returns {number}\n */\nconst estimateHeaderLength = (rootCount, rootByteLength = 36) =>\n  calculateHeaderLength(new Array(rootCount).fill(rootByteLength))\n\n/**\n * Creates synchronous CAR writer that can be used to encode blocks into a given\n * buffer. Optionally you could pass `byteOffset` and `byteLength` to specify a\n * range inside buffer to write into. If car file is going to have `roots` you\n * need to either pass them under `options.roots` (from which header size will\n * be calculated) or provide `options.headerSize` to allocate required space\n * in the buffer. You may also provide known `roots` and `headerSize` to\n * allocate space for the roots that may not be known ahead of time.\n *\n * Note: Incorrect `headerSize` may lead to copying bytes inside a buffer\n * which will have a negative impact on performance.\n *\n * @name CarBufferWriter.createWriter(buffer[, options])\n * @param {ArrayBuffer} buffer\n * @param {object} [options]\n * @param {CID[]} [options.roots]\n * @param {number} [options.byteOffset]\n * @param {number} [options.byteLength]\n * @param {number} [options.headerSize]\n * @returns {CarBufferWriter}\n */\nconst createWriter = (buffer, options = {}) => {\n  const {\n    roots = [],\n    byteOffset = 0,\n    byteLength = buffer.byteLength,\n    headerSize = headerLength({ roots })\n  } = options\n  const bytes = new Uint8Array(buffer, byteOffset, byteLength)\n\n  const writer = new CarBufferWriter(bytes, headerSize)\n  for (const root of roots) {\n    writer.addRoot(root)\n  }\n\n  return writer\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder-common.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder-common.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CIDV0_BYTES: () => (/* binding */ CIDV0_BYTES),\n/* harmony export */   V2_HEADER_LENGTH: () => (/* binding */ V2_HEADER_LENGTH),\n/* harmony export */   decodeV2Header: () => (/* binding */ decodeV2Header),\n/* harmony export */   decodeVarint: () => (/* binding */ decodeVarint),\n/* harmony export */   getMultihashLength: () => (/* binding */ getMultihashLength)\n/* harmony export */ });\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n\n\nconst CIDV0_BYTES = {\n  SHA2_256: 0x12,\n  LENGTH: 0x20,\n  DAG_PB: 0x70\n}\n\nconst V2_HEADER_LENGTH = /* characteristics */ 16 /* v1 offset */ + 8 /* v1 size */ + 8 /* index offset */ + 8\n\n/**\n * Decodes varint and seeks the buffer\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @param {import('./coding.js').Seekable} seeker\n * @returns {number}\n */\nfunction decodeVarint (bytes, seeker) {\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data')\n  }\n  const i = varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes)\n  seeker.seek(/** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes))\n  return i\n}\n\n/**\n * Decode v2 header\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.exactly(V2_HEADER_LENGTH, true) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @returns {import('./coding.js').CarV2FixedHeader}\n */\nfunction decodeV2Header (bytes) {\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  let offset = 0\n  const header = {\n    version: 2,\n    /** @type {[bigint, bigint]} */\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  }\n  return header\n}\n\n/**\n * Checks the length of the multihash to be read afterwards\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n */\nfunction getMultihashLength (bytes) {\n  // | code | length | .... |\n  // where both code and length are varints, so we have to decode\n  // them first before we can know total length\n\n  varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes) // code\n  const codeLength = /** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes)\n  const length = varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes.subarray(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes))\n  const lengthLength = /** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes)\n  const mhLength = codeLength + lengthLength + length\n\n  return mhLength\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2RlY29kZXItY29tbW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQjs7QUFFcEI7QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsZ0NBQWdDO0FBQzNDLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwQ0FBYTtBQUN6Qix5QkFBeUIsUUFBUSxHQUFHLDBDQUFhO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNPO0FBQ1A7QUFDQTtBQUNBOztBQUVBLEVBQUUsMENBQWE7QUFDZixnQ0FBZ0MsUUFBUSxHQUFHLDBDQUFhO0FBQ3hELGlCQUFpQiwwQ0FBYSxnQkFBZ0IsMENBQWE7QUFDM0Qsa0NBQWtDLFFBQVEsR0FBRywwQ0FBYTtBQUMxRDs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2RlY29kZXItY29tbW9uLmpzPzgyNmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhcmludCBmcm9tICd2YXJpbnQnXG5cbmV4cG9ydCBjb25zdCBDSURWMF9CWVRFUyA9IHtcbiAgU0hBMl8yNTY6IDB4MTIsXG4gIExFTkdUSDogMHgyMCxcbiAgREFHX1BCOiAweDcwXG59XG5cbmV4cG9ydCBjb25zdCBWMl9IRUFERVJfTEVOR1RIID0gLyogY2hhcmFjdGVyaXN0aWNzICovIDE2IC8qIHYxIG9mZnNldCAqLyArIDggLyogdjEgc2l6ZSAqLyArIDggLyogaW5kZXggb2Zmc2V0ICovICsgOFxuXG4vKipcbiAqIERlY29kZXMgdmFyaW50IGFuZCBzZWVrcyB0aGUgYnVmZmVyXG4gKlxuICogYGBganNcbiAqIC8vIG5lZWRzIGJ5dGVzIHRvIGJlIHJlYWQgZmlyc3RcbiAqIGNvbnN0IGJ5dGVzID0gcmVhZGVyLnVwVG8oOCkgLy8gbWF5YmUgYXN5bmNcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2NvZGluZy5qcycpLlNlZWthYmxlfSBzZWVrZXJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVWYXJpbnQgKGJ5dGVzLCBzZWVrZXIpIHtcbiAgaWYgKCFieXRlcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgZW5kIG9mIGRhdGEnKVxuICB9XG4gIGNvbnN0IGkgPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKVxuICBzZWVrZXIuc2VlaygvKiogQHR5cGUge251bWJlcn0gKi8odmFyaW50LmRlY29kZS5ieXRlcykpXG4gIHJldHVybiBpXG59XG5cbi8qKlxuICogRGVjb2RlIHYyIGhlYWRlclxuICpcbiAqIGBgYGpzXG4gKiAvLyBuZWVkcyBieXRlcyB0byBiZSByZWFkIGZpcnN0XG4gKiBjb25zdCBieXRlcyA9IHJlYWRlci5leGFjdGx5KFYyX0hFQURFUl9MRU5HVEgsIHRydWUpIC8vIG1heWJlIGFzeW5jXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkNhclYyRml4ZWRIZWFkZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVWMkhlYWRlciAoYnl0ZXMpIHtcbiAgY29uc3QgZHYgPSBuZXcgRGF0YVZpZXcoYnl0ZXMuYnVmZmVyLCBieXRlcy5ieXRlT2Zmc2V0LCBieXRlcy5ieXRlTGVuZ3RoKVxuICBsZXQgb2Zmc2V0ID0gMFxuICBjb25zdCBoZWFkZXIgPSB7XG4gICAgdmVyc2lvbjogMixcbiAgICAvKiogQHR5cGUge1tiaWdpbnQsIGJpZ2ludF19ICovXG4gICAgY2hhcmFjdGVyaXN0aWNzOiBbXG4gICAgICBkdi5nZXRCaWdVaW50NjQob2Zmc2V0LCB0cnVlKSxcbiAgICAgIGR2LmdldEJpZ1VpbnQ2NChvZmZzZXQgKz0gOCwgdHJ1ZSlcbiAgICBdLFxuICAgIGRhdGFPZmZzZXQ6IE51bWJlcihkdi5nZXRCaWdVaW50NjQob2Zmc2V0ICs9IDgsIHRydWUpKSxcbiAgICBkYXRhU2l6ZTogTnVtYmVyKGR2LmdldEJpZ1VpbnQ2NChvZmZzZXQgKz0gOCwgdHJ1ZSkpLFxuICAgIGluZGV4T2Zmc2V0OiBOdW1iZXIoZHYuZ2V0QmlnVWludDY0KG9mZnNldCArPSA4LCB0cnVlKSlcbiAgfVxuICByZXR1cm4gaGVhZGVyXG59XG5cbi8qKlxuICogQ2hlY2tzIHRoZSBsZW5ndGggb2YgdGhlIG11bHRpaGFzaCB0byBiZSByZWFkIGFmdGVyd2FyZHNcbiAqXG4gKiBgYGBqc1xuICogLy8gbmVlZHMgYnl0ZXMgdG8gYmUgcmVhZCBmaXJzdFxuICogY29uc3QgYnl0ZXMgPSByZWFkZXIudXBUbyg4KSAvLyBtYXliZSBhc3luY1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TXVsdGloYXNoTGVuZ3RoIChieXRlcykge1xuICAvLyB8IGNvZGUgfCBsZW5ndGggfCAuLi4uIHxcbiAgLy8gd2hlcmUgYm90aCBjb2RlIGFuZCBsZW5ndGggYXJlIHZhcmludHMsIHNvIHdlIGhhdmUgdG8gZGVjb2RlXG4gIC8vIHRoZW0gZmlyc3QgYmVmb3JlIHdlIGNhbiBrbm93IHRvdGFsIGxlbmd0aFxuXG4gIHZhcmludC5kZWNvZGUoYnl0ZXMpIC8vIGNvZGVcbiAgY29uc3QgY29kZUxlbmd0aCA9IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyh2YXJpbnQuZGVjb2RlLmJ5dGVzKVxuICBjb25zdCBsZW5ndGggPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHZhcmludC5kZWNvZGUuYnl0ZXMpKVxuICBjb25zdCBsZW5ndGhMZW5ndGggPSAvKiogQHR5cGUge251bWJlcn0gKi8odmFyaW50LmRlY29kZS5ieXRlcylcbiAgY29uc3QgbWhMZW5ndGggPSBjb2RlTGVuZ3RoICsgbGVuZ3RoTGVuZ3RoICsgbGVuZ3RoXG5cbiAgcmV0dXJuIG1oTGVuZ3RoXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder-common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asyncIterableReader: () => (/* binding */ asyncIterableReader),\n/* harmony export */   bytesReader: () => (/* binding */ bytesReader),\n/* harmony export */   chunkReader: () => (/* binding */ chunkReader),\n/* harmony export */   createDecoder: () => (/* binding */ createDecoder),\n/* harmony export */   limitReader: () => (/* binding */ limitReader),\n/* harmony export */   readBlockHead: () => (/* binding */ readBlockHead),\n/* harmony export */   readHeader: () => (/* binding */ readHeader)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decoder-common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder-common.js\");\n/* harmony import */ var _header_validator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./header-validator.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/header-validator.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockHeader} BlockHeader\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./coding.js').BytesReader} BytesReader\n * @typedef {import('./coding.js').CarHeader} CarHeader\n * @typedef {import('./coding.js').CarV2Header} CarV2Header\n * @typedef {import('./coding.js').CarV2FixedHeader} CarV2FixedHeader\n * @typedef {import('./coding.js').CarDecoder} CarDecoder\n */\n\n/**\n * Reads header data from a `BytesReader`. The header may either be in the form\n * of a `CarHeader` or `CarV2Header` depending on the CAR being read.\n *\n * @name async decoder.readHeader(reader)\n * @param {BytesReader} reader\n * @param {number} [strictVersion]\n * @returns {Promise<CarHeader|CarV2Header>}\n */\nasync function readHeader (reader, strictVersion) {\n  const length = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(await reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)')\n  }\n  const header = await reader.exactly(length, true)\n  const block = (0,_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__.decode)(header)\n  if (_header_validator_js__WEBPACK_IMPORTED_MODULE_4__.CarV1HeaderOrV2Pragma.toTyped(block) === undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  if ((block.version !== 1 && block.version !== 2) || (strictVersion !== undefined && block.version !== strictVersion)) {\n    throw new Error(`Invalid CAR version: ${block.version}${strictVersion !== undefined ? ` (expected ${strictVersion})` : ''}`)\n  }\n  if (block.version === 1) {\n    // CarV1HeaderOrV2Pragma makes roots optional, let's make it mandatory\n    if (!Array.isArray(block.roots)) {\n      throw new Error('Invalid CAR header format')\n    }\n    return block\n  }\n  // version 2\n  if (block.roots !== undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  const v2Header = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeV2Header)(await reader.exactly(_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.V2_HEADER_LENGTH, true))\n  reader.seek(v2Header.dataOffset - reader.pos)\n  const v1Header = await readHeader(reader, 1)\n  return Object.assign(v1Header, v2Header)\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<CID>}\n */\nasync function readCid (reader) {\n  const first = await reader.exactly(2, false)\n  if (first[0] === _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.SHA2_256 && first[1] === _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.LENGTH) {\n    // cidv0 32-byte sha2-256\n    const bytes = await reader.exactly(34, true)\n    const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__.decode(bytes)\n    return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.create(0, _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.DAG_PB, multihash)\n  }\n\n  const version = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(await reader.upTo(8), reader)\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${version})`)\n  }\n  const codec = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(await reader.upTo(8), reader)\n  const bytes = await reader.exactly((0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.getMultihashLength)(await reader.upTo(8)), true)\n  const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__.decode(bytes)\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.create(version, codec, multihash)\n}\n\n/**\n * Reads the leading data of an individual block from CAR data from a\n * `BytesReader`. Returns a `BlockHeader` object which contains\n * `{ cid, length, blockLength }` which can be used to either index the block\n * or read the block binary data.\n *\n * @name async decoder.readBlockHead(reader)\n * @param {BytesReader} reader\n * @returns {Promise<BlockHeader>}\n */\nasync function readBlockHead (reader) {\n  // length includes a CID + Binary, where CID has a variable length\n  // we have to deal with\n  const start = reader.pos\n  let length = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(await reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)')\n  }\n  length += (reader.pos - start)\n  const cid = await readCid(reader)\n  const blockLength = length - Number(reader.pos - start) // subtract CID length\n\n  return { cid, length, blockLength }\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<Block>}\n */\nasync function readBlock (reader) {\n  const { cid, blockLength } = await readBlockHead(reader)\n  const bytes = await reader.exactly(blockLength, true)\n  return { bytes, cid }\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<BlockIndex>}\n */\nasync function readBlockIndex (reader) {\n  const offset = reader.pos\n  const { cid, length, blockLength } = await readBlockHead(reader)\n  const index = { cid, length, blockLength, offset, blockOffset: reader.pos }\n  reader.seek(index.blockLength)\n  return index\n}\n\n/**\n * Creates a `CarDecoder` from a `BytesReader`. The `CarDecoder` is as async\n * interface that will consume the bytes from the `BytesReader` to yield a\n * `header()` and either `blocks()` or `blocksIndex()` data.\n *\n * @name decoder.createDecoder(reader)\n * @param {BytesReader} reader\n * @returns {CarDecoder}\n */\nfunction createDecoder (reader) {\n  const headerPromise = (async () => {\n    const header = await readHeader(reader)\n    if (header.version === 2) {\n      const v1length = reader.pos - header.dataOffset\n      reader = limitReader(reader, header.dataSize - v1length)\n    }\n    return header\n  })()\n\n  return {\n    header: () => headerPromise,\n\n    async * blocks () {\n      await headerPromise\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader)\n      }\n    },\n\n    async * blocksIndex () {\n      await headerPromise\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader)\n      }\n    }\n  }\n}\n\n/**\n * Creates a `BytesReader` from a `Uint8Array`.\n *\n * @name decoder.bytesReader(bytes)\n * @param {Uint8Array} bytes\n * @returns {BytesReader}\n */\nfunction bytesReader (bytes) {\n  let pos = 0\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      const out = bytes.subarray(pos, pos + Math.min(length, bytes.length - pos))\n      return out\n    },\n\n    async exactly (length, seek = false) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data')\n      }\n      const out = bytes.subarray(pos, pos + length)\n      if (seek) {\n        pos += length\n      }\n      return out\n    },\n\n    seek (length) {\n      pos += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * reusable reader for streams and files, we just need a way to read an\n * additional chunk (of some undetermined size) and a way to close the\n * reader when finished\n *\n * @param {() => Promise<Uint8Array|null>} readChunk\n * @returns {BytesReader}\n */\nfunction chunkReader (readChunk /*, closer */) {\n  let pos = 0\n  let have = 0\n  let offset = 0\n  let currentChunk = new Uint8Array(0)\n\n  const read = async (/** @type {number} */ length) => {\n    have = currentChunk.length - offset\n    const bufa = /** @type {Uint8Array<ArrayBufferLike>[]} */([currentChunk.subarray(offset)])\n    while (have < length) {\n      const chunk = await readChunk()\n      if (chunk == null) {\n        break\n      }\n      /* c8 ignore next 8 */\n      // undo this ignore ^ when we have a fd implementation that can seek()\n      if (have < 0) { // because of a seek()\n        /* c8 ignore next 4 */\n        // toohard to test the else\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have))\n        } // else discard\n      } else {\n        bufa.push(chunk)\n      }\n      have += chunk.length\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0))\n    let off = 0\n    for (const b of bufa) {\n      currentChunk.set(b, off)\n      off += b.length\n    }\n    offset = 0\n  }\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      if (currentChunk.length - offset < length) {\n        await read(length)\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length))\n    },\n\n    async exactly (length, seek = false) {\n      if (currentChunk.length - offset < length) {\n        await read(length)\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data')\n      }\n      const out = currentChunk.subarray(offset, offset + length)\n      if (seek) {\n        pos += length\n        offset += length\n      }\n      return out\n    },\n\n    seek (length) {\n      pos += length\n      offset += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * Creates a `BytesReader` from an `AsyncIterable<Uint8Array>`, which allows for\n * consumption of CAR data from a streaming source.\n *\n * @name decoder.asyncIterableReader(asyncIterable)\n * @param {AsyncIterable<Uint8Array>} asyncIterable\n * @returns {BytesReader}\n */\nfunction asyncIterableReader (asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]()\n\n  async function readChunk () {\n    const next = await iterator.next()\n    if (next.done) {\n      return null\n    }\n    return next.value\n  }\n\n  return chunkReader(readChunk)\n}\n\n/**\n * Wraps a `BytesReader` in a limiting `BytesReader` which limits maximum read\n * to `byteLimit` bytes. It _does not_ update `pos` of the original\n * `BytesReader`.\n *\n * @name decoder.limitReader(reader, byteLimit)\n * @param {BytesReader} reader\n * @param {number} byteLimit\n * @returns {BytesReader}\n */\nfunction limitReader (reader, byteLimit) {\n  let bytesRead = 0\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      let bytes = await reader.upTo(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead)\n      }\n      return bytes\n    },\n\n    async exactly (length, seek = false) {\n      const bytes = await reader.exactly(length, seek)\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data')\n      }\n      if (seek) {\n        bytesRead += length\n      }\n      return bytes\n    },\n\n    seek (length) {\n      bytesRead += length\n      reader.seek(length)\n    },\n\n    get pos () {\n      return reader.pos\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/encoder.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/encoder.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEncoder: () => (/* binding */ createEncoder),\n/* harmony export */   createHeader: () => (/* binding */ createHeader)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n\n\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./coding.js').CarEncoder} CarEncoder\n * @typedef {import('./coding.js').IteratorChannel_Writer<Uint8Array>} IteratorChannel_Writer\n */\n\nconst CAR_V1_VERSION = 1\n\n/**\n * Create a header from an array of roots.\n *\n * @param {CID[]} roots\n * @returns {Uint8Array}\n */\nfunction createHeader (roots) {\n  const headerBytes = (0,_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__.encode)({ version: CAR_V1_VERSION, roots })\n  const varintBytes = varint__WEBPACK_IMPORTED_MODULE_1__.encode(headerBytes.length)\n  const header = new Uint8Array(varintBytes.length + headerBytes.length)\n  header.set(varintBytes, 0)\n  header.set(headerBytes, varintBytes.length)\n  return header\n}\n\n/**\n * @param {IteratorChannel_Writer} writer\n * @returns {CarEncoder}\n */\nfunction createEncoder (writer) {\n  // none of this is wrapped in a mutex, that needs to happen above this to\n  // avoid overwrites\n\n  return {\n    /**\n     * @param {CID[]} roots\n     * @returns {Promise<void>}\n     */\n    async setRoots (roots) {\n      const bytes = createHeader(roots)\n      await writer.write(bytes)\n    },\n\n    /**\n     * @param {Block} block\n     * @returns {Promise<void>}\n     */\n    async writeBlock (block) {\n      const { cid, bytes } = block\n      await writer.write(new Uint8Array(varint__WEBPACK_IMPORTED_MODULE_1__.encode(cid.bytes.length + bytes.length)))\n      await writer.write(cid.bytes)\n      if (bytes.length) {\n        // zero-length blocks are valid, but it'd be safer if we didn't write them\n        await writer.write(bytes)\n      }\n    },\n\n    /**\n     * @returns {Promise<void>}\n     */\n    async close () {\n      await writer.end()\n    },\n\n    /**\n     * @returns {number}\n     */\n    version () {\n      return CAR_V1_VERSION\n    }\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2VuY29kZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUM3Qjs7QUFFM0I7QUFDQSxhQUFhLDRCQUE0QjtBQUN6QyxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLGtDQUFrQztBQUMvQyxhQUFhLDBEQUEwRDtBQUN2RTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ087QUFDUCxzQkFBc0Isc0RBQWEsR0FBRyxnQ0FBZ0M7QUFDdEUsc0JBQXNCLDBDQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHdCQUF3QjtBQUNuQyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsY0FBYyxhQUFhO0FBQzNCLHdDQUF3QywwQ0FBYTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvZW5jb2Rlci5qcz8xNjc4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuY29kZSBhcyBkYWdDYm9yRW5jb2RlIH0gZnJvbSAnQGlwbGQvZGFnLWNib3InXG5pbXBvcnQgdmFyaW50IGZyb20gJ3ZhcmludCdcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMnKS5DSUR9IENJRFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja30gQmxvY2tcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29kaW5nLmpzJykuQ2FyRW5jb2Rlcn0gQ2FyRW5jb2RlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5JdGVyYXRvckNoYW5uZWxfV3JpdGVyPFVpbnQ4QXJyYXk+fSBJdGVyYXRvckNoYW5uZWxfV3JpdGVyXG4gKi9cblxuY29uc3QgQ0FSX1YxX1ZFUlNJT04gPSAxXG5cbi8qKlxuICogQ3JlYXRlIGEgaGVhZGVyIGZyb20gYW4gYXJyYXkgb2Ygcm9vdHMuXG4gKlxuICogQHBhcmFtIHtDSURbXX0gcm9vdHNcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSGVhZGVyIChyb290cykge1xuICBjb25zdCBoZWFkZXJCeXRlcyA9IGRhZ0Nib3JFbmNvZGUoeyB2ZXJzaW9uOiBDQVJfVjFfVkVSU0lPTiwgcm9vdHMgfSlcbiAgY29uc3QgdmFyaW50Qnl0ZXMgPSB2YXJpbnQuZW5jb2RlKGhlYWRlckJ5dGVzLmxlbmd0aClcbiAgY29uc3QgaGVhZGVyID0gbmV3IFVpbnQ4QXJyYXkodmFyaW50Qnl0ZXMubGVuZ3RoICsgaGVhZGVyQnl0ZXMubGVuZ3RoKVxuICBoZWFkZXIuc2V0KHZhcmludEJ5dGVzLCAwKVxuICBoZWFkZXIuc2V0KGhlYWRlckJ5dGVzLCB2YXJpbnRCeXRlcy5sZW5ndGgpXG4gIHJldHVybiBoZWFkZXJcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0l0ZXJhdG9yQ2hhbm5lbF9Xcml0ZXJ9IHdyaXRlclxuICogQHJldHVybnMge0NhckVuY29kZXJ9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUVuY29kZXIgKHdyaXRlcikge1xuICAvLyBub25lIG9mIHRoaXMgaXMgd3JhcHBlZCBpbiBhIG11dGV4LCB0aGF0IG5lZWRzIHRvIGhhcHBlbiBhYm92ZSB0aGlzIHRvXG4gIC8vIGF2b2lkIG92ZXJ3cml0ZXNcblxuICByZXR1cm4ge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7Q0lEW119IHJvb3RzXG4gICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XG4gICAgICovXG4gICAgYXN5bmMgc2V0Um9vdHMgKHJvb3RzKSB7XG4gICAgICBjb25zdCBieXRlcyA9IGNyZWF0ZUhlYWRlcihyb290cylcbiAgICAgIGF3YWl0IHdyaXRlci53cml0ZShieXRlcylcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtCbG9ja30gYmxvY2tcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cbiAgICAgKi9cbiAgICBhc3luYyB3cml0ZUJsb2NrIChibG9jaykge1xuICAgICAgY29uc3QgeyBjaWQsIGJ5dGVzIH0gPSBibG9ja1xuICAgICAgYXdhaXQgd3JpdGVyLndyaXRlKG5ldyBVaW50OEFycmF5KHZhcmludC5lbmNvZGUoY2lkLmJ5dGVzLmxlbmd0aCArIGJ5dGVzLmxlbmd0aCkpKVxuICAgICAgYXdhaXQgd3JpdGVyLndyaXRlKGNpZC5ieXRlcylcbiAgICAgIGlmIChieXRlcy5sZW5ndGgpIHtcbiAgICAgICAgLy8gemVyby1sZW5ndGggYmxvY2tzIGFyZSB2YWxpZCwgYnV0IGl0J2QgYmUgc2FmZXIgaWYgd2UgZGlkbid0IHdyaXRlIHRoZW1cbiAgICAgICAgYXdhaXQgd3JpdGVyLndyaXRlKGJ5dGVzKVxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cbiAgICAgKi9cbiAgICBhc3luYyBjbG9zZSAoKSB7XG4gICAgICBhd2FpdCB3cml0ZXIuZW5kKClcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cbiAgICB2ZXJzaW9uICgpIHtcbiAgICAgIHJldHVybiBDQVJfVjFfVkVSU0lPTlxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgeyBjcmVhdGVFbmNvZGVyIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/encoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/header-validator.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/header-validator.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarV1HeaderOrV2Pragma: () => (/* binding */ CarV1HeaderOrV2Pragma)\n/* harmony export */ });\n/* eslint-disable jsdoc/check-indentation, max-depth */\n\n/**\n * Auto-generated with @ipld/schema@v4.2.0 at Thu Sep 14 2023 from IPLD Schema:\n *\n * # CarV1HeaderOrV2Pragma is a more relaxed form, and can parse {version:x} where\n * # roots are optional. This is typically useful for the {verison:2} CARv2\n * # pragma.\n *\n * type CarV1HeaderOrV2Pragma struct {\n *   roots optional [&Any]\n *   # roots is _not_ optional for CarV1 but we defer that check within code to\n *   # gracefully handle the V2 case where it's just {version:X}\n *   version Int\n * }\n *\n * # CarV1Header is the strict form of the header, and requires roots to be\n * # present. This is compatible with the CARv1 specification.\n *\n * # type CarV1Header struct {\n * #   roots [&Any]\n * #   version Int\n * # }\n *\n */\n\nconst Kinds = {\n  Null: /**\n         * @param obj\n         * @returns {undefined|null}\n         */ (/** @type {any} */ obj) => obj === null ? obj : undefined,\n  Int: /**\n        * @param obj\n        * @returns {undefined|number}\n        */ (/** @type {any} */ obj) => Number.isInteger(obj) ? obj : undefined,\n  Float: /**\n          * @param obj\n          * @returns {undefined|number}\n          */ (/** @type {any} */ obj) => typeof obj === 'number' && Number.isFinite(obj) ? obj : undefined,\n  String: /**\n           * @param obj\n           * @returns {undefined|string}\n           */ (/** @type {any} */ obj) => typeof obj === 'string' ? obj : undefined,\n  Bool: /**\n         * @param obj\n         * @returns {undefined|boolean}\n         */ (/** @type {any} */ obj) => typeof obj === 'boolean' ? obj : undefined,\n  Bytes: /**\n          * @param obj\n          * @returns {undefined|Uint8Array}\n          */ (/** @type {any} */ obj) => obj instanceof Uint8Array ? obj : undefined,\n  Link: /**\n         * @param obj\n         * @returns {undefined|object}\n         */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID === obj ? obj : undefined,\n  List: /**\n         * @param obj\n         * @returns {undefined|Array<any>}\n         */ (/** @type {any} */ obj) => Array.isArray(obj) ? obj : undefined,\n  Map: /**\n        * @param obj\n        * @returns {undefined|object}\n        */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID !== obj && !Array.isArray(obj) && !(obj instanceof Uint8Array) ? obj : undefined\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Types = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /**\n                                           * @param obj\n                                           * @returns {undefined|any}\n                                           */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /**\n                          * @param obj\n                          * @returns {undefined|any}\n                          */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Types['CarV1HeaderOrV2Pragma > roots (anon)'](obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Types.Int(obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Reprs = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /**\n                                           * @param obj\n                                           * @returns {undefined|any}\n                                           */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /**\n                          * @param obj\n                          * @returns {undefined|any}\n                          */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Reprs['CarV1HeaderOrV2Pragma > roots (anon)'](value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Reprs.Int(value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n\nconst CarV1HeaderOrV2Pragma = {\n  toTyped: Types.CarV1HeaderOrV2Pragma,\n  toRepresentation: Reprs.CarV1HeaderOrV2Pragma\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/header-validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarBlockIterator: () => (/* reexport safe */ _iterator_js__WEBPACK_IMPORTED_MODULE_4__.CarBlockIterator),\n/* harmony export */   CarBufferReader: () => (/* reexport safe */ _buffer_reader_js__WEBPACK_IMPORTED_MODULE_0__.CarBufferReader),\n/* harmony export */   CarBufferWriter: () => (/* reexport module object */ _buffer_writer_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   CarCIDIterator: () => (/* reexport safe */ _iterator_js__WEBPACK_IMPORTED_MODULE_4__.CarCIDIterator),\n/* harmony export */   CarIndexedReader: () => (/* reexport safe */ _indexed_reader_js__WEBPACK_IMPORTED_MODULE_2__.CarIndexedReader),\n/* harmony export */   CarIndexer: () => (/* reexport safe */ _indexer_js__WEBPACK_IMPORTED_MODULE_3__.CarIndexer),\n/* harmony export */   CarReader: () => (/* reexport safe */ _reader_js__WEBPACK_IMPORTED_MODULE_5__.CarReader),\n/* harmony export */   CarWriter: () => (/* reexport safe */ _writer_js__WEBPACK_IMPORTED_MODULE_6__.CarWriter),\n/* harmony export */   contentType: () => (/* binding */ contentType)\n/* harmony export */ });\n/* harmony import */ var _buffer_reader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer-reader.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-reader.js\");\n/* harmony import */ var _buffer_writer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer-writer.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/buffer-writer.js\");\n/* harmony import */ var _indexed_reader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./indexed-reader.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexed-reader.js\");\n/* harmony import */ var _indexer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./indexer.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexer.js\");\n/* harmony import */ var _iterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./iterator.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/iterator.js\");\n/* harmony import */ var _reader_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reader.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader.js\");\n/* harmony import */ var _writer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./writer.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/writer.js\");\n\n\n\n\n\n\n\n\n// @see https://www.iana.org/assignments/media-types/application/vnd.ipld.car\nconst contentType = 'application/vnd.ipld.car'\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0Q7QUFDQztBQUNDO0FBQ2I7QUFDdUI7QUFDekI7QUFDQTs7QUFFdkM7QUFDTzs7QUFXTiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvQGlwbGQvY2FyL3NyYy9pbmRleC5qcz8wOWIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhckJ1ZmZlclJlYWRlciB9IGZyb20gJy4vYnVmZmVyLXJlYWRlci5qcydcbmltcG9ydCAqIGFzIENhckJ1ZmZlcldyaXRlciBmcm9tICcuL2J1ZmZlci13cml0ZXIuanMnXG5pbXBvcnQgeyBDYXJJbmRleGVkUmVhZGVyIH0gZnJvbSAnLi9pbmRleGVkLXJlYWRlci5qcydcbmltcG9ydCB7IENhckluZGV4ZXIgfSBmcm9tICcuL2luZGV4ZXIuanMnXG5pbXBvcnQgeyBDYXJCbG9ja0l0ZXJhdG9yLCBDYXJDSURJdGVyYXRvciB9IGZyb20gJy4vaXRlcmF0b3IuanMnXG5pbXBvcnQgeyBDYXJSZWFkZXIgfSBmcm9tICcuL3JlYWRlci5qcydcbmltcG9ydCB7IENhcldyaXRlciB9IGZyb20gJy4vd3JpdGVyLmpzJ1xuXG4vLyBAc2VlIGh0dHBzOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL21lZGlhLXR5cGVzL2FwcGxpY2F0aW9uL3ZuZC5pcGxkLmNhclxuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlID0gJ2FwcGxpY2F0aW9uL3ZuZC5pcGxkLmNhcidcblxuZXhwb3J0IHtcbiAgQ2FyUmVhZGVyLFxuICBDYXJCdWZmZXJSZWFkZXIsXG4gIENhckluZGV4ZXIsXG4gIENhckJsb2NrSXRlcmF0b3IsXG4gIENhckNJREl0ZXJhdG9yLFxuICBDYXJXcml0ZXIsXG4gIENhckluZGV4ZWRSZWFkZXIsXG4gIENhckJ1ZmZlcldyaXRlclxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexed-reader.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexed-reader.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarIndexedReader: () => (/* binding */ CarIndexedReader),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _indexer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./indexer.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexer.js\");\n/* harmony import */ var _reader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reader.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('fs').promises.FileHandle} FileHandle\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./api.js').CarReader} CarReaderIface\n * @typedef {import('./reader-browser.js').CarReader} CarReader\n * @typedef {{ blockLength:number, blockOffset:number }} RawLocation\n */\n\n/**\n * A form of {@link CarReader} that pre-indexes a CAR archive from a file and\n * provides random access to blocks within the file using the index data. This\n * function is **only available in Node.js** and not a browser environment.\n *\n * For large CAR files, using this form of `CarReader` can be singificantly more\n * efficient in terms of memory. The index consists of a list of `CID`s and\n * their location within the archive (see {@link CarIndexer}). For large numbers\n * of blocks, this index can also occupy a significant amount of memory. In some\n * cases it may be necessary to expand the memory capacity of a Node.js instance\n * to allow this index to fit. (e.g. by running with\n * `NODE_OPTIONS=\"--max-old-space-size=16384\"`).\n *\n * As an `CarIndexedReader` instance maintains an open file descriptor for its\n * CAR file, an additional {@link CarReader#close} method is attached. This\n * _must_ be called to have full clean-up of resources after use.\n *\n * Load this class with either\n * `import { CarIndexedReader } from '@ipld/car/indexed-reader'`\n * (`const { CarIndexedReader } = require('@ipld/car/indexed-reader')`). Or\n * `import { CarIndexedReader } from '@ipld/car'`\n * (`const { CarIndexedReader } = require('@ipld/car')`). The former will likely\n * result in smaller bundle sizes where this is important.\n *\n * @name CarIndexedReader\n * @class\n * @implements {CarReaderIface}\n * @extends {CarReader}\n * @property {number} version The version number of the CAR referenced by this\n * reader (should be `1`).\n */\nclass CarIndexedReader {\n  /**\n   * @param {number} version\n   * @param {string} path\n   * @param {CID[]} roots\n   * @param {Map<string, RawLocation>} index\n   * @param {string[]} order\n   */\n  constructor (version, path, roots, index, order) {\n    this._version = version\n    this._path = path\n    this._roots = roots\n    this._index = index\n    this._order = order\n    this._fd = null\n  }\n\n  get version () {\n    return this._version\n  }\n\n  /**\n   * See {@link CarReader#getRoots}\n   *\n   * @function\n   * @memberof CarIndexedReader\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n  async getRoots () {\n    return this._roots\n  }\n\n  /**\n   * See {@link CarReader#has}\n   *\n   * @function\n   * @memberof CarIndexedReader\n   * @instance\n   * @async\n   * @param {CID} key\n   * @returns {Promise<boolean>}\n   */\n  async has (key) {\n    return this._index.has(key.toString())\n  }\n\n  /**\n   * See {@link CarReader#get}\n   *\n   * @function\n   * @memberof CarIndexedReader\n   * @instance\n   * @async\n   * @param {CID} key\n   * @returns {Promise<Block | undefined>}\n   */\n  async get (key) {\n    const blockIndex = this._index.get(key.toString())\n    if (!blockIndex) {\n      return undefined\n    }\n    if (!this._fd) {\n      this._fd = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.open(this._path, 'r')\n    }\n    const readIndex = {\n      cid: key,\n      length: 0,\n      offset: 0,\n      blockLength: blockIndex.blockLength,\n      blockOffset: blockIndex.blockOffset\n    }\n    return _reader_js__WEBPACK_IMPORTED_MODULE_4__.CarReader.readRaw(this._fd, readIndex)\n  }\n\n  /**\n   * See {@link CarReader#blocks}\n   *\n   * @function\n   * @memberof CarIndexedReader\n   * @instance\n   * @async\n   * @generator\n   * @returns {AsyncGenerator<Block>}\n   */\n  async * blocks () {\n    for (const cidStr of this._order) {\n      const block = await this.get(multiformats_cid__WEBPACK_IMPORTED_MODULE_2__.CID.parse(cidStr))\n      /* c8 ignore next 3 */\n      if (!block) {\n        throw new Error('Unexpected internal error')\n      }\n      yield block\n    }\n  }\n\n  /**\n   * See {@link CarReader#cids}\n   *\n   * @function\n   * @memberof CarIndexedReader\n   * @instance\n   * @async\n   * @generator\n   * @returns {AsyncGenerator<CID>}\n   */\n  async * cids () {\n    for (const cidStr of this._order) {\n      yield multiformats_cid__WEBPACK_IMPORTED_MODULE_2__.CID.parse(cidStr)\n    }\n  }\n\n  /**\n   * Close the underlying file descriptor maintained by this `CarIndexedReader`.\n   * This must be called for proper resource clean-up to occur.\n   *\n   * @function\n   * @memberof CarIndexedReader\n   * @instance\n   * @async\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this._fd) {\n      return this._fd.close()\n    }\n  }\n\n  /**\n   * Instantiate an {@link CarIndexedReader} from a file with the provided\n   * `path`. The CAR file is first indexed with a full path that collects `CID`s\n   * and block locations. This index is maintained in memory. Subsequent reads\n   * operate on a read-only file descriptor, fetching the block from its in-file\n   * location.\n   *\n   * For large archives, the initial indexing may take some time. The returned\n   * `Promise` will resolve only after this is complete.\n   *\n   * @async\n   * @static\n   * @memberof CarIndexedReader\n   * @param {string} path\n   * @returns {Promise<CarIndexedReader>}\n   */\n  static async fromFile (path) {\n    if (typeof path !== 'string') {\n      throw new TypeError('fromFile() requires a file path string')\n    }\n\n    const iterable = await _indexer_js__WEBPACK_IMPORTED_MODULE_3__.CarIndexer.fromIterable(stream__WEBPACK_IMPORTED_MODULE_1__.Readable.from(fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream(path)))\n    /** @type {Map<string, RawLocation>} */\n    const index = new Map()\n    /** @type {string[]} */\n    const order = []\n    for await (const { cid, blockLength, blockOffset } of iterable) {\n      const cidStr = cid.toString()\n      index.set(cidStr, { blockLength, blockOffset })\n      order.push(cidStr)\n    }\n    return new CarIndexedReader(iterable.version, path, await iterable.getRoots(), index, order)\n  }\n}\n\nconst __browser = false\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexed-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarIndexer: () => (/* binding */ CarIndexer)\n/* harmony export */ });\n/* harmony import */ var _decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decoder.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder.js\");\n\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').RootsReader} RootsReader\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./coding.js').BytesReader} BytesReader\n */\n\n/**\n * Provides an iterator over all of the `Block`s in a CAR, returning their CIDs\n * and byte-location information. Implements an `AsyncIterable<BlockIndex>`.\n * Where a `BlockIndex` is a\n * `{ cid:CID, length:number, offset:number, blockLength:number, blockOffset:number }`.\n *\n * As an implementer of `AsyncIterable`, this class can be used directly in a\n * `for await (const blockIndex of iterator) {}` loop. Where the `iterator` is\n * constructed using {@link CarIndexer.fromBytes} or\n * {@link CarIndexer.fromIterable}.\n *\n * An iteration can only be performce _once_ per instantiation.\n *\n * `CarIndexer` also implements the `RootsReader` interface and provides\n * the {@link CarIndexer.getRoots `getRoots()`} method.\n *\n * Load this class with either\n * `import { CarIndexer } from '@ipld/car/indexer'`\n * (`const { CarIndexer } = require('@ipld/car/indexer')`). Or\n * `import { CarIndexer } from '@ipld/car'`\n * (`const { CarIndexer } = require('@ipld/car')`). The former will likely\n * result in smaller bundle sizes where this is important.\n *\n * @name CarIndexer\n * @class\n * @implements {RootsReader}\n * @implements {AsyncIterable<BlockIndex>}\n * @property {number} version The version number of the CAR referenced by this\n * reader (should be `1`).\n */\nclass CarIndexer {\n  /**\n   * @param {number} version\n   * @param {CID[]} roots\n   * @param {AsyncGenerator<BlockIndex>} iterator\n   */\n  constructor (version, roots, iterator) {\n    this._version = version\n    this._roots = roots\n    this._iterator = iterator\n  }\n\n  get version () {\n    return this._version\n  }\n\n  /**\n   * Get the list of roots defined by the CAR referenced by this indexer. May be\n   * zero or more `CID`s.\n   *\n   * @function\n   * @memberof CarIndexer\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n  async getRoots () {\n    return this._roots\n  }\n\n  /**\n   * @returns {AsyncIterator<BlockIndex>}\n   */\n  [Symbol.asyncIterator] () {\n    return this._iterator\n  }\n\n  /**\n   * Instantiate a {@link CarIndexer} from a `Uint8Array` blob. Only the header\n   * is decoded initially, the remainder is processed and emitted via the\n   * iterator as it is consumed.\n   *\n   * @async\n   * @static\n   * @memberof CarIndexer\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarIndexer>}\n   */\n  static async fromBytes (bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array')\n    }\n    return decodeIndexerComplete((0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.bytesReader)(bytes))\n  }\n\n  /**\n   * Instantiate a {@link CarIndexer} from a `AsyncIterable<Uint8Array>`,\n   * such as a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * is decoded initially, the remainder is processed and emitted via the\n   * iterator as it is consumed.\n   *\n   * @async\n   * @static\n   * @memberof CarIndexer\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarIndexer>}\n   */\n  static async fromIterable (asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable')\n    }\n    return decodeIndexerComplete((0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.asyncIterableReader)(asyncIterable))\n  }\n}\n\n/**\n * @private\n * @param {BytesReader} reader\n * @returns {Promise<CarIndexer>}\n */\nasync function decodeIndexerComplete (reader) {\n  const decoder = (0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.createDecoder)(reader)\n  const { version, roots } = await decoder.header()\n\n  return new CarIndexer(version, roots, decoder.blocksIndex())\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2luZGV4ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFJcUI7O0FBRXJCO0FBQ0EsYUFBYSw0QkFBNEI7QUFDekMsYUFBYSwwQkFBMEI7QUFDdkMsYUFBYSxnQ0FBZ0M7QUFDN0MsYUFBYSwrQkFBK0I7QUFDNUMsYUFBYSxtQ0FBbUM7QUFDaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLCtFQUErRTtBQUNyRjtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DLHNCQUFzQiw0QkFBNEI7QUFDbEQsSUFBSSw4QkFBOEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdDQUF3QztBQUNoRDtBQUNBO0FBQ0EsYUFBYSxhQUFhO0FBQzFCLGFBQWEsYUFBYTtBQUMxQixhQUFhLGFBQWE7QUFDMUIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQixjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsNEJBQTRCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHdEQUFXO0FBQzVDOztBQUVBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMkJBQTJCO0FBQ3hDLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGdFQUFtQjtBQUNwRDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxrQkFBa0IsMERBQWE7QUFDL0IsVUFBVSxpQkFBaUI7O0FBRTNCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvaW5kZXhlci5qcz81YzgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFzeW5jSXRlcmFibGVSZWFkZXIsXG4gIGJ5dGVzUmVhZGVyLFxuICBjcmVhdGVEZWNvZGVyXG59IGZyb20gJy4vZGVjb2Rlci5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMnKS5DSUR9IENJRFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja30gQmxvY2tcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYXBpLmpzJykuUm9vdHNSZWFkZXJ9IFJvb3RzUmVhZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkJsb2NrSW5kZXh9IEJsb2NrSW5kZXhcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29kaW5nLmpzJykuQnl0ZXNSZWFkZXJ9IEJ5dGVzUmVhZGVyXG4gKi9cblxuLyoqXG4gKiBQcm92aWRlcyBhbiBpdGVyYXRvciBvdmVyIGFsbCBvZiB0aGUgYEJsb2NrYHMgaW4gYSBDQVIsIHJldHVybmluZyB0aGVpciBDSURzXG4gKiBhbmQgYnl0ZS1sb2NhdGlvbiBpbmZvcm1hdGlvbi4gSW1wbGVtZW50cyBhbiBgQXN5bmNJdGVyYWJsZTxCbG9ja0luZGV4PmAuXG4gKiBXaGVyZSBhIGBCbG9ja0luZGV4YCBpcyBhXG4gKiBgeyBjaWQ6Q0lELCBsZW5ndGg6bnVtYmVyLCBvZmZzZXQ6bnVtYmVyLCBibG9ja0xlbmd0aDpudW1iZXIsIGJsb2NrT2Zmc2V0Om51bWJlciB9YC5cbiAqXG4gKiBBcyBhbiBpbXBsZW1lbnRlciBvZiBgQXN5bmNJdGVyYWJsZWAsIHRoaXMgY2xhc3MgY2FuIGJlIHVzZWQgZGlyZWN0bHkgaW4gYVxuICogYGZvciBhd2FpdCAoY29uc3QgYmxvY2tJbmRleCBvZiBpdGVyYXRvcikge31gIGxvb3AuIFdoZXJlIHRoZSBgaXRlcmF0b3JgIGlzXG4gKiBjb25zdHJ1Y3RlZCB1c2luZyB7QGxpbmsgQ2FySW5kZXhlci5mcm9tQnl0ZXN9IG9yXG4gKiB7QGxpbmsgQ2FySW5kZXhlci5mcm9tSXRlcmFibGV9LlxuICpcbiAqIEFuIGl0ZXJhdGlvbiBjYW4gb25seSBiZSBwZXJmb3JtY2UgX29uY2VfIHBlciBpbnN0YW50aWF0aW9uLlxuICpcbiAqIGBDYXJJbmRleGVyYCBhbHNvIGltcGxlbWVudHMgdGhlIGBSb290c1JlYWRlcmAgaW50ZXJmYWNlIGFuZCBwcm92aWRlc1xuICogdGhlIHtAbGluayBDYXJJbmRleGVyLmdldFJvb3RzIGBnZXRSb290cygpYH0gbWV0aG9kLlxuICpcbiAqIExvYWQgdGhpcyBjbGFzcyB3aXRoIGVpdGhlclxuICogYGltcG9ydCB7IENhckluZGV4ZXIgfSBmcm9tICdAaXBsZC9jYXIvaW5kZXhlcidgXG4gKiAoYGNvbnN0IHsgQ2FySW5kZXhlciB9ID0gcmVxdWlyZSgnQGlwbGQvY2FyL2luZGV4ZXInKWApLiBPclxuICogYGltcG9ydCB7IENhckluZGV4ZXIgfSBmcm9tICdAaXBsZC9jYXInYFxuICogKGBjb25zdCB7IENhckluZGV4ZXIgfSA9IHJlcXVpcmUoJ0BpcGxkL2NhcicpYCkuIFRoZSBmb3JtZXIgd2lsbCBsaWtlbHlcbiAqIHJlc3VsdCBpbiBzbWFsbGVyIGJ1bmRsZSBzaXplcyB3aGVyZSB0aGlzIGlzIGltcG9ydGFudC5cbiAqXG4gKiBAbmFtZSBDYXJJbmRleGVyXG4gKiBAY2xhc3NcbiAqIEBpbXBsZW1lbnRzIHtSb290c1JlYWRlcn1cbiAqIEBpbXBsZW1lbnRzIHtBc3luY0l0ZXJhYmxlPEJsb2NrSW5kZXg+fVxuICogQHByb3BlcnR5IHtudW1iZXJ9IHZlcnNpb24gVGhlIHZlcnNpb24gbnVtYmVyIG9mIHRoZSBDQVIgcmVmZXJlbmNlZCBieSB0aGlzXG4gKiByZWFkZXIgKHNob3VsZCBiZSBgMWApLlxuICovXG5leHBvcnQgY2xhc3MgQ2FySW5kZXhlciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gdmVyc2lvblxuICAgKiBAcGFyYW0ge0NJRFtdfSByb290c1xuICAgKiBAcGFyYW0ge0FzeW5jR2VuZXJhdG9yPEJsb2NrSW5kZXg+fSBpdGVyYXRvclxuICAgKi9cbiAgY29uc3RydWN0b3IgKHZlcnNpb24sIHJvb3RzLCBpdGVyYXRvcikge1xuICAgIHRoaXMuX3ZlcnNpb24gPSB2ZXJzaW9uXG4gICAgdGhpcy5fcm9vdHMgPSByb290c1xuICAgIHRoaXMuX2l0ZXJhdG9yID0gaXRlcmF0b3JcbiAgfVxuXG4gIGdldCB2ZXJzaW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fdmVyc2lvblxuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgbGlzdCBvZiByb290cyBkZWZpbmVkIGJ5IHRoZSBDQVIgcmVmZXJlbmNlZCBieSB0aGlzIGluZGV4ZXIuIE1heSBiZVxuICAgKiB6ZXJvIG9yIG1vcmUgYENJRGBzLlxuICAgKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIENhckluZGV4ZXJcbiAgICogQGluc3RhbmNlXG4gICAqIEBhc3luY1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxDSURbXT59XG4gICAqL1xuICBhc3luYyBnZXRSb290cyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Jvb3RzXG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge0FzeW5jSXRlcmF0b3I8QmxvY2tJbmRleD59XG4gICAqL1xuICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdICgpIHtcbiAgICByZXR1cm4gdGhpcy5faXRlcmF0b3JcbiAgfVxuXG4gIC8qKlxuICAgKiBJbnN0YW50aWF0ZSBhIHtAbGluayBDYXJJbmRleGVyfSBmcm9tIGEgYFVpbnQ4QXJyYXlgIGJsb2IuIE9ubHkgdGhlIGhlYWRlclxuICAgKiBpcyBkZWNvZGVkIGluaXRpYWxseSwgdGhlIHJlbWFpbmRlciBpcyBwcm9jZXNzZWQgYW5kIGVtaXR0ZWQgdmlhIHRoZVxuICAgKiBpdGVyYXRvciBhcyBpdCBpcyBjb25zdW1lZC5cbiAgICpcbiAgICogQGFzeW5jXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlcm9mIENhckluZGV4ZXJcbiAgICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxDYXJJbmRleGVyPn1cbiAgICovXG4gIHN0YXRpYyBhc3luYyBmcm9tQnl0ZXMgKGJ5dGVzKSB7XG4gICAgaWYgKCEoYnl0ZXMgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZnJvbUJ5dGVzKCkgcmVxdWlyZXMgYSBVaW50OEFycmF5JylcbiAgICB9XG4gICAgcmV0dXJuIGRlY29kZUluZGV4ZXJDb21wbGV0ZShieXRlc1JlYWRlcihieXRlcykpXG4gIH1cblxuICAvKipcbiAgICogSW5zdGFudGlhdGUgYSB7QGxpbmsgQ2FySW5kZXhlcn0gZnJvbSBhIGBBc3luY0l0ZXJhYmxlPFVpbnQ4QXJyYXk+YCxcbiAgICogc3VjaCBhcyBhIFttb2Rlcm4gTm9kZS5qcyBzdHJlYW1dKGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvc3RyZWFtLmh0bWwjc3RyZWFtX3N0cmVhbXNfY29tcGF0aWJpbGl0eV93aXRoX2FzeW5jX2dlbmVyYXRvcnNfYW5kX2FzeW5jX2l0ZXJhdG9ycykuXG4gICAqIGlzIGRlY29kZWQgaW5pdGlhbGx5LCB0aGUgcmVtYWluZGVyIGlzIHByb2Nlc3NlZCBhbmQgZW1pdHRlZCB2aWEgdGhlXG4gICAqIGl0ZXJhdG9yIGFzIGl0IGlzIGNvbnN1bWVkLlxuICAgKlxuICAgKiBAYXN5bmNcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyb2YgQ2FySW5kZXhlclxuICAgKiBAcGFyYW0ge0FzeW5jSXRlcmFibGU8VWludDhBcnJheT59IGFzeW5jSXRlcmFibGVcbiAgICogQHJldHVybnMge1Byb21pc2U8Q2FySW5kZXhlcj59XG4gICAqL1xuICBzdGF0aWMgYXN5bmMgZnJvbUl0ZXJhYmxlIChhc3luY0l0ZXJhYmxlKSB7XG4gICAgaWYgKCFhc3luY0l0ZXJhYmxlIHx8ICEodHlwZW9mIGFzeW5jSXRlcmFibGVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID09PSAnZnVuY3Rpb24nKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZnJvbUl0ZXJhYmxlKCkgcmVxdWlyZXMgYW4gYXN5bmMgaXRlcmFibGUnKVxuICAgIH1cbiAgICByZXR1cm4gZGVjb2RlSW5kZXhlckNvbXBsZXRlKGFzeW5jSXRlcmFibGVSZWFkZXIoYXN5bmNJdGVyYWJsZSkpXG4gIH1cbn1cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtCeXRlc1JlYWRlcn0gcmVhZGVyXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxDYXJJbmRleGVyPn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZGVjb2RlSW5kZXhlckNvbXBsZXRlIChyZWFkZXIpIHtcbiAgY29uc3QgZGVjb2RlciA9IGNyZWF0ZURlY29kZXIocmVhZGVyKVxuICBjb25zdCB7IHZlcnNpb24sIHJvb3RzIH0gPSBhd2FpdCBkZWNvZGVyLmhlYWRlcigpXG5cbiAgcmV0dXJuIG5ldyBDYXJJbmRleGVyKHZlcnNpb24sIHJvb3RzLCBkZWNvZGVyLmJsb2Nrc0luZGV4KCkpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/indexer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/iterator-channel.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/iterator-channel.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create)\n/* harmony export */ });\n/**\n * @template {any} T\n * @typedef {import('./coding.js').IteratorChannel<T>} IteratorChannel\n */\n\nfunction noop () {}\n\n/**\n * @template {any} T\n * @returns {IteratorChannel<T>}\n */\nfunction create () {\n  /** @type {T[]} */\n  const chunkQueue = []\n  /** @type {Promise<void> | null} */\n  let drainer = null\n  let drainerResolver = noop\n  let ended = false\n  /** @type {Promise<IteratorResult<T>> | null} */\n  let outWait = null\n  let outWaitResolver = noop\n\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise((resolve) => {\n        drainerResolver = () => {\n          drainer = null\n          drainerResolver = noop\n          resolve()\n        }\n      })\n    }\n    return drainer\n  }\n\n  /**\n   * @returns {IteratorChannel<T>}\n   */\n  const writer = {\n    /**\n     * @param {T} chunk\n     * @returns {Promise<void>}\n     */\n    write (chunk) {\n      chunkQueue.push(chunk)\n      const drainer = makeDrainer()\n      outWaitResolver()\n      return drainer\n    },\n\n    async end () {\n      ended = true\n      const drainer = makeDrainer()\n      outWaitResolver()\n      await drainer\n    }\n  }\n\n  /** @type {AsyncIterator<T>} */\n  const iterator = {\n    /** @returns {Promise<IteratorResult<T>>} */\n    async next () {\n      const chunk = chunkQueue.shift()\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver()\n        }\n        return { done: false, value: chunk }\n      }\n\n      if (ended) {\n        drainerResolver()\n        return { done: true, value: undefined }\n      }\n\n      if (!outWait) {\n        outWait = new Promise((resolve) => {\n          outWaitResolver = () => {\n            outWait = null\n            outWaitResolver = noop\n            return resolve(iterator.next())\n          }\n        })\n      }\n\n      return outWait\n    }\n  }\n\n  return { writer, iterator }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2l0ZXJhdG9yLWNoYW5uZWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsY0FBYyxLQUFLO0FBQ25CLGFBQWEsMENBQTBDO0FBQ3ZEOztBQUVBOztBQUVBO0FBQ0EsY0FBYyxLQUFLO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSxLQUFLO0FBQ2xCO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQ0FBbUM7QUFDaEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxlQUFlLEdBQUc7QUFDbEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQSxrQkFBa0IsNEJBQTRCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvaXRlcmF0b3ItY2hhbm5lbC5qcz81ZDFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHRlbXBsYXRlIHthbnl9IFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29kaW5nLmpzJykuSXRlcmF0b3JDaGFubmVsPFQ+fSBJdGVyYXRvckNoYW5uZWxcbiAqL1xuXG5mdW5jdGlvbiBub29wICgpIHt9XG5cbi8qKlxuICogQHRlbXBsYXRlIHthbnl9IFRcbiAqIEByZXR1cm5zIHtJdGVyYXRvckNoYW5uZWw8VD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUgKCkge1xuICAvKiogQHR5cGUge1RbXX0gKi9cbiAgY29uc3QgY2h1bmtRdWV1ZSA9IFtdXG4gIC8qKiBAdHlwZSB7UHJvbWlzZTx2b2lkPiB8IG51bGx9ICovXG4gIGxldCBkcmFpbmVyID0gbnVsbFxuICBsZXQgZHJhaW5lclJlc29sdmVyID0gbm9vcFxuICBsZXQgZW5kZWQgPSBmYWxzZVxuICAvKiogQHR5cGUge1Byb21pc2U8SXRlcmF0b3JSZXN1bHQ8VD4+IHwgbnVsbH0gKi9cbiAgbGV0IG91dFdhaXQgPSBudWxsXG4gIGxldCBvdXRXYWl0UmVzb2x2ZXIgPSBub29wXG5cbiAgY29uc3QgbWFrZURyYWluZXIgPSAoKSA9PiB7XG4gICAgaWYgKCFkcmFpbmVyKSB7XG4gICAgICBkcmFpbmVyID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgZHJhaW5lclJlc29sdmVyID0gKCkgPT4ge1xuICAgICAgICAgIGRyYWluZXIgPSBudWxsXG4gICAgICAgICAgZHJhaW5lclJlc29sdmVyID0gbm9vcFxuICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgICByZXR1cm4gZHJhaW5lclxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtJdGVyYXRvckNoYW5uZWw8VD59XG4gICAqL1xuICBjb25zdCB3cml0ZXIgPSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtUfSBjaHVua1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxuICAgICAqL1xuICAgIHdyaXRlIChjaHVuaykge1xuICAgICAgY2h1bmtRdWV1ZS5wdXNoKGNodW5rKVxuICAgICAgY29uc3QgZHJhaW5lciA9IG1ha2VEcmFpbmVyKClcbiAgICAgIG91dFdhaXRSZXNvbHZlcigpXG4gICAgICByZXR1cm4gZHJhaW5lclxuICAgIH0sXG5cbiAgICBhc3luYyBlbmQgKCkge1xuICAgICAgZW5kZWQgPSB0cnVlXG4gICAgICBjb25zdCBkcmFpbmVyID0gbWFrZURyYWluZXIoKVxuICAgICAgb3V0V2FpdFJlc29sdmVyKClcbiAgICAgIGF3YWl0IGRyYWluZXJcbiAgICB9XG4gIH1cblxuICAvKiogQHR5cGUge0FzeW5jSXRlcmF0b3I8VD59ICovXG4gIGNvbnN0IGl0ZXJhdG9yID0ge1xuICAgIC8qKiBAcmV0dXJucyB7UHJvbWlzZTxJdGVyYXRvclJlc3VsdDxUPj59ICovXG4gICAgYXN5bmMgbmV4dCAoKSB7XG4gICAgICBjb25zdCBjaHVuayA9IGNodW5rUXVldWUuc2hpZnQoKVxuICAgICAgaWYgKGNodW5rKSB7XG4gICAgICAgIGlmIChjaHVua1F1ZXVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGRyYWluZXJSZXNvbHZlcigpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBjaHVuayB9XG4gICAgICB9XG5cbiAgICAgIGlmIChlbmRlZCkge1xuICAgICAgICBkcmFpbmVyUmVzb2x2ZXIoKVxuICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogdW5kZWZpbmVkIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFvdXRXYWl0KSB7XG4gICAgICAgIG91dFdhaXQgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgIG91dFdhaXRSZXNvbHZlciA9ICgpID0+IHtcbiAgICAgICAgICAgIG91dFdhaXQgPSBudWxsXG4gICAgICAgICAgICBvdXRXYWl0UmVzb2x2ZXIgPSBub29wXG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShpdGVyYXRvci5uZXh0KCkpXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gb3V0V2FpdFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7IHdyaXRlciwgaXRlcmF0b3IgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/iterator-channel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/iterator.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/iterator.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarBlockIterator: () => (/* binding */ CarBlockIterator),\n/* harmony export */   CarCIDIterator: () => (/* binding */ CarCIDIterator),\n/* harmony export */   CarIteratorBase: () => (/* binding */ CarIteratorBase)\n/* harmony export */ });\n/* harmony import */ var _decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decoder.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder.js\");\n\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').RootsReader} RootsReader\n * @typedef {import('./coding.js').BytesReader} BytesReader\n */\n\n/**\n * @class\n * @implements {RootsReader}\n * @property {number} version The version number of the CAR referenced by this reader (should be `1`).\n */\nclass CarIteratorBase {\n  /**\n   * @param {number} version\n   * @param {CID[]} roots\n   * @param {AsyncIterable<Block>|void} iterable\n   */\n  constructor (version, roots, iterable) {\n    this._version = version\n    this._roots = roots\n    this._iterable = iterable\n    this._decoded = false\n  }\n\n  get version () {\n    return this._version\n  }\n\n  /**\n   * @returns {Promise<CID[]>}\n   */\n  async getRoots () {\n    return this._roots\n  }\n}\n\n/**\n * Provides an iterator over all of the `Block`s in a CAR. Implements a\n * `BlockIterator` interface, or `AsyncIterable<Block>`. Where a `Block` is\n * a `{ cid:CID, bytes:Uint8Array }` pair.\n *\n * As an implementer of `AsyncIterable`, this class can be used directly in a\n * `for await (const block of iterator) {}` loop. Where the `iterator` is\n * constructed using {@link CarBlockiterator.fromBytes} or\n * {@link CarBlockiterator.fromIterable}.\n *\n * An iteration can only be performce _once_ per instantiation.\n *\n * `CarBlockIterator` also implements the `RootsReader` interface and provides\n * the {@link CarBlockiterator.getRoots `getRoots()`} method.\n *\n * Load this class with either\n * `import { CarBlockIterator } from '@ipld/car/iterator'`\n * (`const { CarBlockIterator } = require('@ipld/car/iterator')`). Or\n * `import { CarBlockIterator } from '@ipld/car'`\n * (`const { CarBlockIterator } = require('@ipld/car')`).\n *\n * @name CarBlockIterator\n * @class\n * @implements {RootsReader}\n * @implements {AsyncIterable<Block>}\n * @property {number} version The version number of the CAR referenced by this\n * iterator (should be `1`).\n */\nclass CarBlockIterator extends CarIteratorBase {\n  // inherited method\n  /**\n   * Get the list of roots defined by the CAR referenced by this iterator. May be\n   * zero or more `CID`s.\n   *\n   * @function getRoots\n   * @memberof CarBlockIterator\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n\n  /**\n   * @returns {AsyncIterator<Block>}\n   */\n  [Symbol.asyncIterator] () {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once')\n    }\n    /* c8 ignore next 3 */\n    if (!this._iterable) {\n      throw new Error('Block iterable not found')\n    }\n    this._decoded = true\n    return this._iterable[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Instantiate a {@link CarBlockIterator} from a `Uint8Array` blob. Rather\n   * than decoding the entire byte array prior to returning the iterator, as in\n   * {@link CarReader.fromBytes}, only the header is decoded and the remainder\n   * of the CAR is parsed as the `Block`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarBlockIterator\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarBlockIterator>}\n   */\n  static async fromBytes (bytes) {\n    const { version, roots, iterator } = await fromBytes(bytes)\n    return new CarBlockIterator(version, roots, iterator)\n  }\n\n  /**\n   * Instantiate a {@link CarBlockIterator} from a `AsyncIterable<Uint8Array>`,\n   * such as a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * Rather than decoding the entire byte array prior to returning the iterator,\n   * as in {@link CarReader.fromIterable}, only the header is decoded and the\n   * remainder of the CAR is parsed as the `Block`s as yielded.\n   *\n   * @async\n   * @static\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarBlockIterator>}\n   */\n  static async fromIterable (asyncIterable) {\n    const { version, roots, iterator } = await fromIterable(asyncIterable)\n    return new CarBlockIterator(version, roots, iterator)\n  }\n}\n\n/**\n * Provides an iterator over all of the `CID`s in a CAR. Implements a\n * `CIDIterator` interface, or `AsyncIterable<CID>`. Similar to\n * {@link CarBlockIterator} but only yields the CIDs in the CAR.\n *\n * As an implementer of `AsyncIterable`, this class can be used directly in a\n * `for await (const cid of iterator) {}` loop. Where the `iterator` is\n * constructed using {@link CarCIDiterator.fromBytes} or\n * {@link CarCIDiterator.fromIterable}.\n *\n * An iteration can only be performce _once_ per instantiation.\n *\n * `CarCIDIterator` also implements the `RootsReader` interface and provides\n * the {@link CarCIDiterator.getRoots `getRoots()`} method.\n *\n * Load this class with either\n * `import { CarCIDIterator } from '@ipld/car/iterator'`\n * (`const { CarCIDIterator } = require('@ipld/car/iterator')`). Or\n * `import { CarCIDIterator } from '@ipld/car'`\n * (`const { CarCIDIterator } = require('@ipld/car')`).\n *\n * @name CarCIDIterator\n * @class\n * @implements {RootsReader}\n * @implements {AsyncIterable<CID>}\n * @property {number} version The version number of the CAR referenced by this\n * iterator (should be `1`).\n */\nclass CarCIDIterator extends CarIteratorBase {\n  // inherited method\n  /**\n   * Get the list of roots defined by the CAR referenced by this iterator. May be\n   * zero or more `CID`s.\n   *\n   * @function getRoots\n   * @memberof CarCIDIterator\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n\n  /**\n   * @returns {AsyncIterator<CID>}\n   */\n  [Symbol.asyncIterator] () {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once')\n    }\n    /* c8 ignore next 3 */\n    if (!this._iterable) {\n      throw new Error('Block iterable not found')\n    }\n    this._decoded = true\n    const iterable = this._iterable[Symbol.asyncIterator]()\n    return {\n      async next () {\n        const next = await iterable.next()\n        if (next.done) {\n          return next\n        }\n        return { done: false, value: next.value.cid }\n      }\n    }\n  }\n\n  /**\n   * Instantiate a {@link CarCIDIterator} from a `Uint8Array` blob. Rather\n   * than decoding the entire byte array prior to returning the iterator, as in\n   * {@link CarReader.fromBytes}, only the header is decoded and the remainder\n   * of the CAR is parsed as the `CID`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarCIDIterator\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarCIDIterator>}\n   */\n  static async fromBytes (bytes) {\n    const { version, roots, iterator } = await fromBytes(bytes)\n    return new CarCIDIterator(version, roots, iterator)\n  }\n\n  /**\n   * Instantiate a {@link CarCIDIterator} from a `AsyncIterable<Uint8Array>`,\n   * such as a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * Rather than decoding the entire byte array prior to returning the iterator,\n   * as in {@link CarReader.fromIterable}, only the header is decoded and the\n   * remainder of the CAR is parsed as the `CID`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarCIDIterator\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarCIDIterator>}\n   */\n  static async fromIterable (asyncIterable) {\n    const { version, roots, iterator } = await fromIterable(asyncIterable)\n    return new CarCIDIterator(version, roots, iterator)\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function fromBytes (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array')\n  }\n  return decodeIterator((0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.bytesReader)(bytes))\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} asyncIterable\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function fromIterable (asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable')\n  }\n  return decodeIterator((0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.asyncIterableReader)(asyncIterable))\n}\n\n/**\n * @private\n * @param {BytesReader} reader\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function decodeIterator (reader) {\n  const decoder = (0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.createDecoder)(reader)\n  const { version, roots } = await decoder.header()\n  return { version, roots, iterator: decoder.blocks() }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/iterator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/promise-fs-opts.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/promise-fs-opts.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fsread: () => (/* binding */ fsread),\n/* harmony export */   fswrite: () => (/* binding */ fswrite),\n/* harmony export */   hasFS: () => (/* binding */ hasFS)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n\n\n\nconst hasFS = Boolean(fs__WEBPACK_IMPORTED_MODULE_0__)\n\n\n\n/**\n * @type {any}\n */\nlet _fsReadFn\n/**\n * @description This function is needed not to initialize the `fs.read` on load time. To run in cf workers without polyfill.\n * @param {number} fd\n * @param {Uint8Array} buffer\n * @param {number} offset\n * @param {number} length\n * @param {number} position\n * @returns {Promise<{ bytesRead: number, buffer: Uint8Array }>}\n */\nfunction fsread (fd, buffer, offset, length, position) {\n  if (!_fsReadFn) {\n    _fsReadFn = (0,util__WEBPACK_IMPORTED_MODULE_1__.promisify)(fs__WEBPACK_IMPORTED_MODULE_0__.read)\n  }\n  return _fsReadFn(fd, buffer, offset, length, position)\n}\n\n/**\n * @type {any}\n */\nlet _fsWriteFn\n/**\n * @description This function is needed not to initialize the `fs.write` on load time. To run in cf workers without polyfill.\n * @param {number} fd\n * @param {Uint8Array} buffer\n * @param {number} offset\n * @param {number} length\n * @param {number} position\n * @returns {Promise<{ bytesRead: number, buffer: Uint8Array }>}\n */\nfunction fswrite (fd, buffer, offset, length, position) {\n  if (!_fsWriteFn) {\n    _fsWriteFn = (0,util__WEBPACK_IMPORTED_MODULE_1__.promisify)(fs__WEBPACK_IMPORTED_MODULE_0__.write)\n  }\n  return _fsWriteFn(fd, buffer, offset, length, position)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL3Byb21pc2UtZnMtb3B0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtQjtBQUNhOztBQUVoQyxzQkFBc0IsK0JBQUU7O0FBRVI7O0FBRWhCO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFVBQVUsdUNBQXVDO0FBQzlEO0FBQ087QUFDUDtBQUNBLGdCQUFnQiwrQ0FBUyxDQUFDLG9DQUFPO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxVQUFVLHVDQUF1QztBQUM5RDtBQUNPO0FBQ1A7QUFDQSxpQkFBaUIsK0NBQVMsQ0FBQyxxQ0FBUTtBQUNuQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvcHJvbWlzZS1mcy1vcHRzLmpzPzQ1ZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IHsgcHJvbWlzaWZ5IH0gZnJvbSAndXRpbCdcblxuY29uc3QgaGFzRlMgPSBCb29sZWFuKGZzKVxuXG5leHBvcnQgeyBoYXNGUyB9XG5cbi8qKlxuICogQHR5cGUge2FueX1cbiAqL1xubGV0IF9mc1JlYWRGblxuLyoqXG4gKiBAZGVzY3JpcHRpb24gVGhpcyBmdW5jdGlvbiBpcyBuZWVkZWQgbm90IHRvIGluaXRpYWxpemUgdGhlIGBmcy5yZWFkYCBvbiBsb2FkIHRpbWUuIFRvIHJ1biBpbiBjZiB3b3JrZXJzIHdpdGhvdXQgcG9seWZpbGwuXG4gKiBAcGFyYW0ge251bWJlcn0gZmRcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnVmZmVyXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zaXRpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlPHsgYnl0ZXNSZWFkOiBudW1iZXIsIGJ1ZmZlcjogVWludDhBcnJheSB9Pn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZzcmVhZCAoZmQsIGJ1ZmZlciwgb2Zmc2V0LCBsZW5ndGgsIHBvc2l0aW9uKSB7XG4gIGlmICghX2ZzUmVhZEZuKSB7XG4gICAgX2ZzUmVhZEZuID0gcHJvbWlzaWZ5KGZzLnJlYWQpXG4gIH1cbiAgcmV0dXJuIF9mc1JlYWRGbihmZCwgYnVmZmVyLCBvZmZzZXQsIGxlbmd0aCwgcG9zaXRpb24pXG59XG5cbi8qKlxuICogQHR5cGUge2FueX1cbiAqL1xubGV0IF9mc1dyaXRlRm5cbi8qKlxuICogQGRlc2NyaXB0aW9uIFRoaXMgZnVuY3Rpb24gaXMgbmVlZGVkIG5vdCB0byBpbml0aWFsaXplIHRoZSBgZnMud3JpdGVgIG9uIGxvYWQgdGltZS4gVG8gcnVuIGluIGNmIHdvcmtlcnMgd2l0aG91dCBwb2x5ZmlsbC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBmZFxuICogQHBhcmFtIHtVaW50OEFycmF5fSBidWZmZXJcbiAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NpdGlvblxuICogQHJldHVybnMge1Byb21pc2U8eyBieXRlc1JlYWQ6IG51bWJlciwgYnVmZmVyOiBVaW50OEFycmF5IH0+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZnN3cml0ZSAoZmQsIGJ1ZmZlciwgb2Zmc2V0LCBsZW5ndGgsIHBvc2l0aW9uKSB7XG4gIGlmICghX2ZzV3JpdGVGbikge1xuICAgIF9mc1dyaXRlRm4gPSBwcm9taXNpZnkoZnMud3JpdGUpXG4gIH1cbiAgcmV0dXJuIF9mc1dyaXRlRm4oZmQsIGJ1ZmZlciwgb2Zmc2V0LCBsZW5ndGgsIHBvc2l0aW9uKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/promise-fs-opts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader-browser.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader-browser.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarReader: () => (/* binding */ CarReader),\n/* harmony export */   __browser: () => (/* binding */ __browser),\n/* harmony export */   decodeReaderComplete: () => (/* binding */ decodeReaderComplete)\n/* harmony export */ });\n/* harmony import */ var _decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decoder.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder.js\");\n\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').CarReader} CarReaderIface\n * @typedef {import('./coding.js').BytesReader} BytesReader\n * @typedef {import('./coding.js').CarHeader} CarHeader\n * @typedef {import('./coding.js').CarV2Header} CarV2Header\n */\n\n/**\n * Provides blockstore-like access to a CAR.\n *\n * Implements the `RootsReader` interface:\n * {@link CarReader.getRoots `getRoots()`}. And the `BlockReader` interface:\n * {@link CarReader.get `get()`}, {@link CarReader.has `has()`},\n * {@link CarReader.blocks `blocks()`} (defined as a `BlockIterator`) and\n * {@link CarReader.cids `cids()`} (defined as a `CIDIterator`).\n *\n * Load this class with either `import { CarReader } from '@ipld/car/reader'`\n * (`const { CarReader } = require('@ipld/car/reader')`). Or\n * `import { CarReader } from '@ipld/car'` (`const { CarReader } = require('@ipld/car')`).\n * The former will likely result in smaller bundle sizes where this is\n * important.\n *\n * @name CarReader\n * @class\n * @implements {CarReaderIface}\n * @property {number} version The version number of the CAR referenced by this\n * reader (should be `1` or `2`).\n */\nclass CarReader {\n  /**\n   * @constructs CarReader\n   * @param {CarHeader|CarV2Header} header\n   * @param {Block[]} blocks\n   */\n  constructor (header, blocks) {\n    this._header = header\n    this._blocks = blocks\n    this._keys = blocks.map((b) => b.cid.toString())\n  }\n\n  /**\n   * @property\n   * @memberof CarReader\n   * @instance\n   */\n  get version () {\n    return this._header.version\n  }\n\n  /**\n   * Get the list of roots defined by the CAR referenced by this reader. May be\n   * zero or more `CID`s.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n  async getRoots () {\n    return this._header.roots\n  }\n\n  /**\n   * Check whether a given `CID` exists within the CAR referenced by this\n   * reader.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @param {CID} key\n   * @returns {Promise<boolean>}\n   */\n  async has (key) {\n    return this._keys.indexOf(key.toString()) > -1\n  }\n\n  /**\n   * Fetch a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) from the CAR\n   * referenced by this reader matching the provided `CID`. In the case where\n   * the provided `CID` doesn't exist within the CAR, `undefined` will be\n   * returned.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @param {CID} key\n   * @returns {Promise<Block | undefined>}\n   */\n  async get (key) {\n    const index = this._keys.indexOf(key.toString())\n    return index > -1 ? this._blocks[index] : undefined\n  }\n\n  /**\n   * Returns a `BlockIterator` (`AsyncIterable<Block>`) that iterates over all\n   * of the `Block`s (`{ cid:CID, bytes:Uint8Array }` pairs) contained within\n   * the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @generator\n   * @returns {AsyncGenerator<Block>}\n   */\n  async * blocks () {\n    for (const block of this._blocks) {\n      yield block\n    }\n  }\n\n  /**\n   * Returns a `CIDIterator` (`AsyncIterable<CID>`) that iterates over all of\n   * the `CID`s contained within the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @generator\n   * @returns {AsyncGenerator<CID>}\n   */\n  async * cids () {\n    for (const block of this._blocks) {\n      yield block.cid\n    }\n  }\n\n  /**\n   * Instantiate a {@link CarReader} from a `Uint8Array` blob. This performs a\n   * decode fully in memory and maintains the decoded state in memory for full\n   * access to the data via the `CarReader` API.\n   *\n   * @async\n   * @static\n   * @memberof CarReader\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarReader>}\n   */\n  static async fromBytes (bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array')\n    }\n    return decodeReaderComplete((0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.bytesReader)(bytes))\n  }\n\n  /**\n   * Instantiate a {@link CarReader} from a `AsyncIterable<Uint8Array>`, such as\n   * a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * This performs a decode fully in memory and maintains the decoded state in\n   * memory for full access to the data via the `CarReader` API.\n   *\n   * Care should be taken for large archives; this API may not be appropriate\n   * where memory is a concern or the archive is potentially larger than the\n   * amount of memory that the runtime can handle.\n   *\n   * @async\n   * @static\n   * @memberof CarReader\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarReader>}\n   */\n  static async fromIterable (asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable')\n    }\n    return decodeReaderComplete((0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.asyncIterableReader)(asyncIterable))\n  }\n}\n\n/**\n * @private\n * @param {BytesReader} reader\n * @returns {Promise<CarReader>}\n */\nasync function decodeReaderComplete (reader) {\n  const decoder = (0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.createDecoder)(reader)\n  const header = await decoder.header()\n  const blocks = []\n  for await (const block of decoder.blocks()) {\n    blocks.push(block)\n  }\n\n  return new CarReader(header, blocks)\n}\n\nconst __browser = true\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader-browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarReader: () => (/* binding */ CarReader),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var _promise_fs_opts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./promise-fs-opts.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/promise-fs-opts.js\");\n/* harmony import */ var _reader_browser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reader-browser.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader-browser.js\");\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./api.js').CarReader} CarReaderIface\n * @typedef {import('fs').promises.FileHandle} FileHandle\n */\n\n/**\n * @class\n * @implements {CarReaderIface}\n */\nclass CarReader extends _reader_browser_js__WEBPACK_IMPORTED_MODULE_1__.CarReader {\n  /**\n   * Reads a block directly from a file descriptor for an open CAR file. This\n   * function is **only available in Node.js** and not a browser environment.\n   *\n   * This function can be used in connection with {@link CarIndexer} which emits\n   * the `BlockIndex` objects that are required by this function.\n   *\n   * The user is responsible for opening and closing the file used in this call.\n   *\n   * @async\n   * @static\n   * @memberof CarReader\n   * @param {FileHandle | number} fd - A file descriptor from the\n   * Node.js `fs` module. Either an integer, from `fs.open()` or a `FileHandle`\n   * from `fs.promises.open()`.\n   * @param {BlockIndex} blockIndex - An index pointing to the location of the\n   * Block required. This `BlockIndex` should take the form:\n   * `{cid:CID, blockLength:number, blockOffset:number}`.\n   * @returns {Promise<Block>} A `{ cid:CID, bytes:Uint8Array }` pair.\n   */\n  static async readRaw (fd, blockIndex) {\n    const { cid, blockLength, blockOffset } = blockIndex\n    const bytes = new Uint8Array(blockLength)\n    let read\n    if (typeof fd === 'number') {\n      read = (await (0,_promise_fs_opts_js__WEBPACK_IMPORTED_MODULE_0__.fsread)(fd, bytes, 0, blockLength, blockOffset)).bytesRead\n    } else if (typeof fd === 'object' && typeof fd.read === 'function') { // FileDescriptor\n      read = (await fd.read(bytes, 0, blockLength, blockOffset)).bytesRead\n    } else {\n      throw new TypeError('Bad fd')\n    }\n    if (read !== blockLength) {\n      throw new Error(`Failed to read entire block (${read} instead of ${blockLength})`)\n    }\n    return { cid, bytes }\n  }\n}\n\nconst __browser = !_promise_fs_opts_js__WEBPACK_IMPORTED_MODULE_0__.hasFS\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL3JlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ2U7O0FBRW5FO0FBQ0EsYUFBYSwwQkFBMEI7QUFDdkMsYUFBYSwrQkFBK0I7QUFDNUMsYUFBYSw4QkFBOEI7QUFDM0MsYUFBYSxrQ0FBa0M7QUFDL0M7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNPLHdCQUF3Qix5REFBZ0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsa0JBQWtCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QjtBQUNBLE9BQU8sZ0RBQWdEO0FBQ3ZELGVBQWUsZ0JBQWdCLEtBQUssMkJBQTJCO0FBQy9EO0FBQ0E7QUFDQSxZQUFZLGdDQUFnQztBQUM1QztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkRBQU07QUFDMUIsTUFBTSxvRUFBb0U7QUFDMUU7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0Esc0RBQXNELE1BQU0sYUFBYSxZQUFZO0FBQ3JGO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7O0FBRU8sbUJBQW1CLHNEQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL3JlYWRlci5qcz85MzA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZzcmVhZCwgaGFzRlMgfSBmcm9tICcuL3Byb21pc2UtZnMtb3B0cy5qcydcbmltcG9ydCB7IENhclJlYWRlciBhcyBCcm93c2VyQ2FyUmVhZGVyIH0gZnJvbSAnLi9yZWFkZXItYnJvd3Nlci5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkJsb2NrfSBCbG9ja1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja0luZGV4fSBCbG9ja0luZGV4XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkNhclJlYWRlcn0gQ2FyUmVhZGVySWZhY2VcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2ZzJykucHJvbWlzZXMuRmlsZUhhbmRsZX0gRmlsZUhhbmRsZVxuICovXG5cbi8qKlxuICogQGNsYXNzXG4gKiBAaW1wbGVtZW50cyB7Q2FyUmVhZGVySWZhY2V9XG4gKi9cbmV4cG9ydCBjbGFzcyBDYXJSZWFkZXIgZXh0ZW5kcyBCcm93c2VyQ2FyUmVhZGVyIHtcbiAgLyoqXG4gICAqIFJlYWRzIGEgYmxvY2sgZGlyZWN0bHkgZnJvbSBhIGZpbGUgZGVzY3JpcHRvciBmb3IgYW4gb3BlbiBDQVIgZmlsZS4gVGhpc1xuICAgKiBmdW5jdGlvbiBpcyAqKm9ubHkgYXZhaWxhYmxlIGluIE5vZGUuanMqKiBhbmQgbm90IGEgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAgICpcbiAgICogVGhpcyBmdW5jdGlvbiBjYW4gYmUgdXNlZCBpbiBjb25uZWN0aW9uIHdpdGgge0BsaW5rIENhckluZGV4ZXJ9IHdoaWNoIGVtaXRzXG4gICAqIHRoZSBgQmxvY2tJbmRleGAgb2JqZWN0cyB0aGF0IGFyZSByZXF1aXJlZCBieSB0aGlzIGZ1bmN0aW9uLlxuICAgKlxuICAgKiBUaGUgdXNlciBpcyByZXNwb25zaWJsZSBmb3Igb3BlbmluZyBhbmQgY2xvc2luZyB0aGUgZmlsZSB1c2VkIGluIHRoaXMgY2FsbC5cbiAgICpcbiAgICogQGFzeW5jXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlcm9mIENhclJlYWRlclxuICAgKiBAcGFyYW0ge0ZpbGVIYW5kbGUgfCBudW1iZXJ9IGZkIC0gQSBmaWxlIGRlc2NyaXB0b3IgZnJvbSB0aGVcbiAgICogTm9kZS5qcyBgZnNgIG1vZHVsZS4gRWl0aGVyIGFuIGludGVnZXIsIGZyb20gYGZzLm9wZW4oKWAgb3IgYSBgRmlsZUhhbmRsZWBcbiAgICogZnJvbSBgZnMucHJvbWlzZXMub3BlbigpYC5cbiAgICogQHBhcmFtIHtCbG9ja0luZGV4fSBibG9ja0luZGV4IC0gQW4gaW5kZXggcG9pbnRpbmcgdG8gdGhlIGxvY2F0aW9uIG9mIHRoZVxuICAgKiBCbG9jayByZXF1aXJlZC4gVGhpcyBgQmxvY2tJbmRleGAgc2hvdWxkIHRha2UgdGhlIGZvcm06XG4gICAqIGB7Y2lkOkNJRCwgYmxvY2tMZW5ndGg6bnVtYmVyLCBibG9ja09mZnNldDpudW1iZXJ9YC5cbiAgICogQHJldHVybnMge1Byb21pc2U8QmxvY2s+fSBBIGB7IGNpZDpDSUQsIGJ5dGVzOlVpbnQ4QXJyYXkgfWAgcGFpci5cbiAgICovXG4gIHN0YXRpYyBhc3luYyByZWFkUmF3IChmZCwgYmxvY2tJbmRleCkge1xuICAgIGNvbnN0IHsgY2lkLCBibG9ja0xlbmd0aCwgYmxvY2tPZmZzZXQgfSA9IGJsb2NrSW5kZXhcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGJsb2NrTGVuZ3RoKVxuICAgIGxldCByZWFkXG4gICAgaWYgKHR5cGVvZiBmZCA9PT0gJ251bWJlcicpIHtcbiAgICAgIHJlYWQgPSAoYXdhaXQgZnNyZWFkKGZkLCBieXRlcywgMCwgYmxvY2tMZW5ndGgsIGJsb2NrT2Zmc2V0KSkuYnl0ZXNSZWFkXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZmQgPT09ICdvYmplY3QnICYmIHR5cGVvZiBmZC5yZWFkID09PSAnZnVuY3Rpb24nKSB7IC8vIEZpbGVEZXNjcmlwdG9yXG4gICAgICByZWFkID0gKGF3YWl0IGZkLnJlYWQoYnl0ZXMsIDAsIGJsb2NrTGVuZ3RoLCBibG9ja09mZnNldCkpLmJ5dGVzUmVhZFxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdCYWQgZmQnKVxuICAgIH1cbiAgICBpZiAocmVhZCAhPT0gYmxvY2tMZW5ndGgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHJlYWQgZW50aXJlIGJsb2NrICgke3JlYWR9IGluc3RlYWQgb2YgJHtibG9ja0xlbmd0aH0pYClcbiAgICB9XG4gICAgcmV0dXJuIHsgY2lkLCBieXRlcyB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IF9fYnJvd3NlciA9ICFoYXNGU1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/writer-browser.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/writer-browser.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarWriter: () => (/* binding */ CarWriter),\n/* harmony export */   CarWriterOut: () => (/* binding */ CarWriterOut),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _decoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decoder.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder.js\");\n/* harmony import */ var _encoder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encoder.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/encoder.js\");\n/* harmony import */ var _iterator_channel_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./iterator-channel.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/iterator-channel.js\");\n\n\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockWriter} BlockWriter\n * @typedef {import('./api.js').WriterChannel} WriterChannel\n * @typedef {import('./coding.js').CarEncoder} CarEncoder\n * @typedef {import('./coding.js').IteratorChannel<Uint8Array>} IteratorChannel\n */\n\n/**\n * Provides a writer interface for the creation of CAR files.\n *\n * Creation of a `CarWriter` involves the instatiation of an input / output pair\n * in the form of a `WriterChannel`, which is a\n * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair. These two\n * components form what can be thought of as a stream-like interface. The\n * `writer` component (an instantiated `CarWriter`), has methods to\n * {@link CarWriter.put `put()`} new blocks and {@link CarWriter.put `close()`}\n * the writing operation (finalising the CAR archive). The `out` component is\n * an `AsyncIterable` that yields the bytes of the archive. This can be\n * redirected to a file or other sink. In Node.js, you can use the\n * [`Readable.from()`](https://nodejs.org/api/stream.html#stream_stream_readable_from_iterable_options)\n * API to convert this to a standard Node.js stream, or it can be directly fed\n * to a\n * [`stream.pipeline()`](https://nodejs.org/api/stream.html#stream_stream_pipeline_source_transforms_destination_callback).\n *\n * The channel will provide a form of backpressure. The `Promise` from a\n * `write()` won't resolve until the resulting data is drained from the `out`\n * iterable.\n *\n * It is also possible to ignore the `Promise` from `write()` calls and allow\n * the generated data to queue in memory. This should be avoided for large CAR\n * archives of course due to the memory costs and potential for memory overflow.\n *\n * Load this class with either\n * `import { CarWriter } from '@ipld/car/writer'`\n * (`const { CarWriter } = require('@ipld/car/writer')`). Or\n * `import { CarWriter } from '@ipld/car'`\n * (`const { CarWriter } = require('@ipld/car')`). The former will likely\n * result in smaller bundle sizes where this is important.\n *\n * @name CarWriter\n * @class\n * @implements {BlockWriter}\n */\nclass CarWriter {\n  /**\n   * @param {CID[]} roots\n   * @param {CarEncoder} encoder\n   */\n  constructor (roots, encoder) {\n    this._encoder = encoder\n    /** @type {Promise<void>} */\n    this._mutex = encoder.setRoots(roots)\n    this._ended = false\n  }\n\n  /**\n   * Write a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) to the archive.\n   *\n   * @function\n   * @memberof CarWriter\n   * @instance\n   * @async\n   * @param {Block} block - A `{ cid:CID, bytes:Uint8Array }` pair.\n   * @returns {Promise<void>} The returned promise will only resolve once the\n   * bytes this block generates are written to the `out` iterable.\n   */\n  async put (block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects')\n    }\n    if (this._ended) {\n      throw new Error('Already closed')\n    }\n    const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(block.cid)\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects')\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({ cid, bytes: block.bytes }))\n    return this._mutex\n  }\n\n  /**\n   * Finalise the CAR archive and signal that the `out` iterable should end once\n   * any remaining bytes are written.\n   *\n   * @function\n   * @memberof CarWriter\n   * @instance\n   * @async\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this._ended) {\n      throw new Error('Already closed')\n    }\n    await this._mutex\n    this._ended = true\n    return this._encoder.close()\n  }\n\n  /**\n   * Returns the version number of the CAR file being written\n   *\n   * @returns {number}\n   */\n  version () {\n    return this._encoder.version()\n  }\n\n  /**\n   * Create a new CAR writer \"channel\" which consists of a\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @param {CID[] | CID | void} roots\n   * @returns {WriterChannel} The channel takes the form of\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }`.\n   */\n  static create (roots) {\n    roots = toRoots(roots)\n    const { encoder, iterator } = encodeWriter()\n    const writer = new CarWriter(roots, encoder)\n    const out = new CarWriterOut(iterator)\n    return { writer, out }\n  }\n\n  /**\n   * Create a new CAR appender \"channel\" which consists of a\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair.\n   * This appender does not consider roots and does not produce a CAR header.\n   * It is designed to append blocks to an _existing_ CAR archive. It is\n   * expected that `out` will be concatenated onto the end of an existing\n   * archive that already has a properly formatted header.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @returns {WriterChannel} The channel takes the form of\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }`.\n   */\n  static createAppender () {\n    const { encoder, iterator } = encodeWriter()\n    encoder.setRoots = () => Promise.resolve()\n    const writer = new CarWriter([], encoder)\n    const out = new CarWriterOut(iterator)\n    return { writer, out }\n  }\n\n  /**\n   * Update the list of roots in the header of an existing CAR as represented\n   * in a Uint8Array.\n   *\n   * This operation is an _overwrite_, the total length of the CAR will not be\n   * modified. A rejection will occur if the new header will not be the same\n   * length as the existing header, in which case the CAR will not be modified.\n   * It is the responsibility of the user to ensure that the roots being\n   * replaced encode as the same length as the new roots.\n   *\n   * The byte array passed in an argument will be modified and also returned\n   * upon successful modification.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @param {Uint8Array} bytes\n   * @param {CID[]} roots - A new list of roots to replace the existing list in\n   * the CAR header. The new header must take up the same number of bytes as the\n   * existing header, so the roots should collectively be the same byte length\n   * as the existing roots.\n   * @returns {Promise<Uint8Array>}\n   */\n  static async updateRootsInBytes (bytes, roots) {\n    const reader = (0,_decoder_js__WEBPACK_IMPORTED_MODULE_1__.bytesReader)(bytes)\n    await (0,_decoder_js__WEBPACK_IMPORTED_MODULE_1__.readHeader)(reader)\n    const newHeader = (0,_encoder_js__WEBPACK_IMPORTED_MODULE_2__.createHeader)(roots)\n    if (Number(reader.pos) !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${reader.pos} bytes, new header is ${newHeader.length} bytes)`)\n    }\n    bytes.set(newHeader, 0)\n    return bytes\n  }\n}\n\n/**\n * @class\n * @implements {AsyncIterable<Uint8Array>}\n */\nclass CarWriterOut {\n  /**\n   * @param {AsyncIterator<Uint8Array>} iterator\n   */\n  constructor (iterator) {\n    this._iterator = iterator\n  }\n\n  [Symbol.asyncIterator] () {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported')\n    }\n    this._iterating = true\n    return this._iterator\n  }\n}\n\nfunction encodeWriter () {\n  /** @type {IteratorChannel} */\n  const iw = (0,_iterator_channel_js__WEBPACK_IMPORTED_MODULE_3__.create)()\n  const { writer, iterator } = iw\n  const encoder = (0,_encoder_js__WEBPACK_IMPORTED_MODULE_2__.createEncoder)(writer)\n  return { encoder, iterator }\n}\n\n/**\n * @private\n * @param {CID[] | CID | void} roots\n * @returns {CID[]}\n */\nfunction toRoots (roots) {\n  if (roots === undefined) {\n    return []\n  }\n\n  if (!Array.isArray(roots)) {\n    const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(roots)\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs')\n    }\n    return [cid]\n  }\n\n  const _roots = []\n  for (const root of roots) {\n    const _root = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(root)\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs')\n    }\n    _roots.push(_root)\n  }\n  return _roots\n}\n\nconst __browser = true\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/writer-browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/writer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/writer.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarWriter: () => (/* binding */ CarWriter),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var _decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decoder.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/decoder.js\");\n/* harmony import */ var _encoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encoder.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/encoder.js\");\n/* harmony import */ var _promise_fs_opts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./promise-fs-opts.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/promise-fs-opts.js\");\n/* harmony import */ var _writer_browser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./writer-browser.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/writer-browser.js\");\n\n\n\n\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('./api.js').BlockWriter} BlockWriter\n * @typedef {import('fs').promises.FileHandle} FileHandle\n */\n\n/**\n * @class\n * @implements {BlockWriter}\n */\nclass CarWriter extends _writer_browser_js__WEBPACK_IMPORTED_MODULE_3__.CarWriter {\n  /**\n   * Update the list of roots in the header of an existing CAR file. The first\n   * argument must be a file descriptor for CAR file that is open in read and\n   * write mode (not append), e.g. `fs.open` or `fs.promises.open` with `'r+'`\n   * mode.\n   *\n   * This operation is an _overwrite_, the total length of the CAR will not be\n   * modified. A rejection will occur if the new header will not be the same\n   * length as the existing header, in which case the CAR will not be modified.\n   * It is the responsibility of the user to ensure that the roots being\n   * replaced encode as the same length as the new roots.\n   *\n   * This function is **only available in Node.js** and not a browser\n   * environment.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @param {FileHandle | number} fd - A file descriptor from the\n   * Node.js `fs` module. Either an integer, from `fs.open()` or a `FileHandle`\n   * from `fs.promises.open()`.\n   * @param {CID[]} roots - A new list of roots to replace the existing list in\n   * the CAR header. The new header must take up the same number of bytes as the\n   * existing header, so the roots should collectively be the same byte length\n   * as the existing roots.\n   * @returns {Promise<void>}\n   */\n  static async updateRootsInFile (fd, roots) {\n    const chunkSize = 256\n    /** @type {Uint8Array} */\n    let bytes\n    let offset = 0\n\n    /** @type {() => Promise<number>} */\n    let readChunk\n    if (typeof fd === 'number') {\n      readChunk = async () => (await (0,_promise_fs_opts_js__WEBPACK_IMPORTED_MODULE_2__.fsread)(fd, bytes, 0, chunkSize, offset)).bytesRead\n    } else if (typeof fd === 'object' && typeof fd.read === 'function') { // FileDescriptor\n      readChunk = async () => (await fd.read(bytes, 0, chunkSize, offset)).bytesRead\n    } else {\n      throw new TypeError('Bad fd')\n    }\n    const fdReader = (0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.chunkReader)(async () => {\n      bytes = new Uint8Array(chunkSize) // need a new chunk each time, can't reuse old\n      const read = await readChunk()\n      offset += read\n      /* eslint no-warning-comments: 0 */\n      // TODO: test header > 256 bytes\n      return read < chunkSize ? bytes.subarray(0, read) : bytes\n    })\n\n    await (0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.readHeader)(fdReader)\n    const newHeader = (0,_encoder_js__WEBPACK_IMPORTED_MODULE_1__.createHeader)(roots)\n    if (fdReader.pos !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${fdReader.pos} bytes, new header is ${newHeader.length} bytes)`)\n    }\n    if (typeof fd === 'number') {\n      await (0,_promise_fs_opts_js__WEBPACK_IMPORTED_MODULE_2__.fswrite)(fd, newHeader, 0, newHeader.length, 0)\n    } else if (typeof fd === 'object' && typeof fd.read === 'function') { // FileDescriptor\n      await fd.write(newHeader, 0, newHeader.length, 0)\n    }\n  }\n}\n\nconst __browser = !_promise_fs_opts_js__WEBPACK_IMPORTED_MODULE_2__.hasFS\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL3dyaXRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBc0Q7QUFDWDtBQUNrQjtBQUNNOztBQUVuRTtBQUNBLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsa0NBQWtDO0FBQy9DOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTyx3QkFBd0IseURBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGVBQWUsWUFBWTtBQUMzQjtBQUNBOztBQUVBLGVBQWUsdUJBQXVCO0FBQ3RDO0FBQ0E7QUFDQSxxQ0FBcUMsMkRBQU07QUFDM0MsTUFBTSxvRUFBb0U7QUFDMUU7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLHFCQUFxQix3REFBVztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMLFVBQVUsdURBQVU7QUFDcEIsc0JBQXNCLHlEQUFZO0FBQ2xDO0FBQ0EscUdBQXFHLGNBQWMsdUJBQXVCLGtCQUFrQjtBQUM1SjtBQUNBO0FBQ0EsWUFBWSw0REFBTztBQUNuQixNQUFNLG9FQUFvRTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTs7QUFFTyxtQkFBbUIsc0RBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvd3JpdGVyLmpzPzZkOTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVhZEhlYWRlciwgY2h1bmtSZWFkZXIgfSBmcm9tICcuL2RlY29kZXIuanMnXG5pbXBvcnQgeyBjcmVhdGVIZWFkZXIgfSBmcm9tICcuL2VuY29kZXIuanMnXG5pbXBvcnQgeyBmc3JlYWQsIGZzd3JpdGUsIGhhc0ZTIH0gZnJvbSAnLi9wcm9taXNlLWZzLW9wdHMuanMnXG5pbXBvcnQgeyBDYXJXcml0ZXIgYXMgQnJvd3NlckNhcldyaXRlciB9IGZyb20gJy4vd3JpdGVyLWJyb3dzZXIuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NpZCcpLkNJRH0gQ0lEXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkJsb2NrV3JpdGVyfSBCbG9ja1dyaXRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnZnMnKS5wcm9taXNlcy5GaWxlSGFuZGxlfSBGaWxlSGFuZGxlXG4gKi9cblxuLyoqXG4gKiBAY2xhc3NcbiAqIEBpbXBsZW1lbnRzIHtCbG9ja1dyaXRlcn1cbiAqL1xuZXhwb3J0IGNsYXNzIENhcldyaXRlciBleHRlbmRzIEJyb3dzZXJDYXJXcml0ZXIge1xuICAvKipcbiAgICogVXBkYXRlIHRoZSBsaXN0IG9mIHJvb3RzIGluIHRoZSBoZWFkZXIgb2YgYW4gZXhpc3RpbmcgQ0FSIGZpbGUuIFRoZSBmaXJzdFxuICAgKiBhcmd1bWVudCBtdXN0IGJlIGEgZmlsZSBkZXNjcmlwdG9yIGZvciBDQVIgZmlsZSB0aGF0IGlzIG9wZW4gaW4gcmVhZCBhbmRcbiAgICogd3JpdGUgbW9kZSAobm90IGFwcGVuZCksIGUuZy4gYGZzLm9wZW5gIG9yIGBmcy5wcm9taXNlcy5vcGVuYCB3aXRoIGAncisnYFxuICAgKiBtb2RlLlxuICAgKlxuICAgKiBUaGlzIG9wZXJhdGlvbiBpcyBhbiBfb3ZlcndyaXRlXywgdGhlIHRvdGFsIGxlbmd0aCBvZiB0aGUgQ0FSIHdpbGwgbm90IGJlXG4gICAqIG1vZGlmaWVkLiBBIHJlamVjdGlvbiB3aWxsIG9jY3VyIGlmIHRoZSBuZXcgaGVhZGVyIHdpbGwgbm90IGJlIHRoZSBzYW1lXG4gICAqIGxlbmd0aCBhcyB0aGUgZXhpc3RpbmcgaGVhZGVyLCBpbiB3aGljaCBjYXNlIHRoZSBDQVIgd2lsbCBub3QgYmUgbW9kaWZpZWQuXG4gICAqIEl0IGlzIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgdXNlciB0byBlbnN1cmUgdGhhdCB0aGUgcm9vdHMgYmVpbmdcbiAgICogcmVwbGFjZWQgZW5jb2RlIGFzIHRoZSBzYW1lIGxlbmd0aCBhcyB0aGUgbmV3IHJvb3RzLlxuICAgKlxuICAgKiBUaGlzIGZ1bmN0aW9uIGlzICoqb25seSBhdmFpbGFibGUgaW4gTm9kZS5qcyoqIGFuZCBub3QgYSBicm93c2VyXG4gICAqIGVudmlyb25tZW50LlxuICAgKlxuICAgKiBAYXN5bmNcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyb2YgQ2FyV3JpdGVyXG4gICAqIEBwYXJhbSB7RmlsZUhhbmRsZSB8IG51bWJlcn0gZmQgLSBBIGZpbGUgZGVzY3JpcHRvciBmcm9tIHRoZVxuICAgKiBOb2RlLmpzIGBmc2AgbW9kdWxlLiBFaXRoZXIgYW4gaW50ZWdlciwgZnJvbSBgZnMub3BlbigpYCBvciBhIGBGaWxlSGFuZGxlYFxuICAgKiBmcm9tIGBmcy5wcm9taXNlcy5vcGVuKClgLlxuICAgKiBAcGFyYW0ge0NJRFtdfSByb290cyAtIEEgbmV3IGxpc3Qgb2Ygcm9vdHMgdG8gcmVwbGFjZSB0aGUgZXhpc3RpbmcgbGlzdCBpblxuICAgKiB0aGUgQ0FSIGhlYWRlci4gVGhlIG5ldyBoZWFkZXIgbXVzdCB0YWtlIHVwIHRoZSBzYW1lIG51bWJlciBvZiBieXRlcyBhcyB0aGVcbiAgICogZXhpc3RpbmcgaGVhZGVyLCBzbyB0aGUgcm9vdHMgc2hvdWxkIGNvbGxlY3RpdmVseSBiZSB0aGUgc2FtZSBieXRlIGxlbmd0aFxuICAgKiBhcyB0aGUgZXhpc3Rpbmcgcm9vdHMuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgc3RhdGljIGFzeW5jIHVwZGF0ZVJvb3RzSW5GaWxlIChmZCwgcm9vdHMpIHtcbiAgICBjb25zdCBjaHVua1NpemUgPSAyNTZcbiAgICAvKiogQHR5cGUge1VpbnQ4QXJyYXl9ICovXG4gICAgbGV0IGJ5dGVzXG4gICAgbGV0IG9mZnNldCA9IDBcblxuICAgIC8qKiBAdHlwZSB7KCkgPT4gUHJvbWlzZTxudW1iZXI+fSAqL1xuICAgIGxldCByZWFkQ2h1bmtcbiAgICBpZiAodHlwZW9mIGZkID09PSAnbnVtYmVyJykge1xuICAgICAgcmVhZENodW5rID0gYXN5bmMgKCkgPT4gKGF3YWl0IGZzcmVhZChmZCwgYnl0ZXMsIDAsIGNodW5rU2l6ZSwgb2Zmc2V0KSkuYnl0ZXNSZWFkXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZmQgPT09ICdvYmplY3QnICYmIHR5cGVvZiBmZC5yZWFkID09PSAnZnVuY3Rpb24nKSB7IC8vIEZpbGVEZXNjcmlwdG9yXG4gICAgICByZWFkQ2h1bmsgPSBhc3luYyAoKSA9PiAoYXdhaXQgZmQucmVhZChieXRlcywgMCwgY2h1bmtTaXplLCBvZmZzZXQpKS5ieXRlc1JlYWRcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQmFkIGZkJylcbiAgICB9XG4gICAgY29uc3QgZmRSZWFkZXIgPSBjaHVua1JlYWRlcihhc3luYyAoKSA9PiB7XG4gICAgICBieXRlcyA9IG5ldyBVaW50OEFycmF5KGNodW5rU2l6ZSkgLy8gbmVlZCBhIG5ldyBjaHVuayBlYWNoIHRpbWUsIGNhbid0IHJldXNlIG9sZFxuICAgICAgY29uc3QgcmVhZCA9IGF3YWl0IHJlYWRDaHVuaygpXG4gICAgICBvZmZzZXQgKz0gcmVhZFxuICAgICAgLyogZXNsaW50IG5vLXdhcm5pbmctY29tbWVudHM6IDAgKi9cbiAgICAgIC8vIFRPRE86IHRlc3QgaGVhZGVyID4gMjU2IGJ5dGVzXG4gICAgICByZXR1cm4gcmVhZCA8IGNodW5rU2l6ZSA/IGJ5dGVzLnN1YmFycmF5KDAsIHJlYWQpIDogYnl0ZXNcbiAgICB9KVxuXG4gICAgYXdhaXQgcmVhZEhlYWRlcihmZFJlYWRlcilcbiAgICBjb25zdCBuZXdIZWFkZXIgPSBjcmVhdGVIZWFkZXIocm9vdHMpXG4gICAgaWYgKGZkUmVhZGVyLnBvcyAhPT0gbmV3SGVhZGVyLmxlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGB1cGRhdGVSb290cygpIGNhbiBvbmx5IG92ZXJ3cml0ZSBhIGhlYWRlciBvZiB0aGUgc2FtZSBsZW5ndGggKG9sZCBoZWFkZXIgaXMgJHtmZFJlYWRlci5wb3N9IGJ5dGVzLCBuZXcgaGVhZGVyIGlzICR7bmV3SGVhZGVyLmxlbmd0aH0gYnl0ZXMpYClcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBmZCA9PT0gJ251bWJlcicpIHtcbiAgICAgIGF3YWl0IGZzd3JpdGUoZmQsIG5ld0hlYWRlciwgMCwgbmV3SGVhZGVyLmxlbmd0aCwgMClcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBmZCA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIGZkLnJlYWQgPT09ICdmdW5jdGlvbicpIHsgLy8gRmlsZURlc2NyaXB0b3JcbiAgICAgIGF3YWl0IGZkLndyaXRlKG5ld0hlYWRlciwgMCwgbmV3SGVhZGVyLmxlbmd0aCwgMClcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IF9fYnJvd3NlciA9ICFoYXNGU1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/car/src/writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/dag-cbor/src/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/@ipld/dag-cbor/src/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeOptions: () => (/* binding */ decodeOptions),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeOptions: () => (/* binding */ encodeOptions),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   toByteView: () => (/* binding */ toByteView)\n/* harmony export */ });\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/cborg.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js\");\n\n\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.tag, CID_CBOR_TAG),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nconst encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nconst decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nconst name = 'dag-cbor'\nconst code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nconst encode = (node) => cborg__WEBPACK_IMPORTED_MODULE_0__.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nconst decode = (data) => cborg__WEBPACK_IMPORTED_MODULE_0__.decode(toByteView(data), _decodeOptions)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9AaXBsZC9kYWctY2Jvci9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThCO0FBQ1E7O0FBRXRDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEscURBQXFEO0FBQ2xFOztBQUVBO0FBQ0E7QUFDQSxhQUFhLDREQUE0RDtBQUN6RTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxrQ0FBa0M7QUFDN0MsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpREFBRztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3Q0FBVyxDQUFDLHVDQUFVO0FBQzlCLFFBQVEsd0NBQVcsQ0FBQyx1Q0FBVTtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBLFNBQVMsaURBQUc7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOEJBQThCO0FBQzNDO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTs7QUFFTztBQUNBOztBQUVQO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhO0FBQ2I7QUFDTyx5QkFBeUIseUNBQVk7O0FBRTVDO0FBQ0E7QUFDQSxXQUFXLGtDQUFrQztBQUM3QyxhQUFhO0FBQ2I7QUFDTyx5QkFBeUIseUNBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1jYm9yL3NyYy9pbmRleC5qcz9iYzVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNib3JnIGZyb20gJ2Nib3JnJ1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCdcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2lwZnMvZ28taXBmcy9pc3N1ZXMvMzU3MCNpc3N1ZWNvbW1lbnQtMjczOTMxNjkyXG5jb25zdCBDSURfQ0JPUl9UQUcgPSA0MlxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvY29kZWNzL2ludGVyZmFjZScpLkJ5dGVWaWV3PFQ+fSBCeXRlVmlld1xuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ211bHRpZm9ybWF0cy9jb2RlY3MvaW50ZXJmYWNlJykuQXJyYXlCdWZmZXJWaWV3PFQ+fSBBcnJheUJ1ZmZlclZpZXdcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFQ+IHwgQXJyYXlCdWZmZXJWaWV3PFQ+fSBidWZcbiAqIEByZXR1cm5zIHtCeXRlVmlldzxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQnl0ZVZpZXcgKGJ1Zikge1xuICBpZiAoYnVmIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmLCAwLCBidWYuYnl0ZUxlbmd0aClcbiAgfVxuXG4gIHJldHVybiBidWZcbn1cblxuLyoqXG4gKiBjaWRFbmNvZGVyIHdpbGwgcmVjZWl2ZSBhbGwgT2JqZWN0cyBkdXJpbmcgZW5jb2RlLCBpdCBuZWVkcyB0byBmaWx0ZXIgb3V0XG4gKiBhbnl0aGluZyB0aGF0J3Mgbm90IGEgQ0lEIGFuZCByZXR1cm4gYG51bGxgIGZvciB0aGF0IHNvIGl0J3MgZW5jb2RlZCBhc1xuICogbm9ybWFsLlxuICpcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtjYm9yZy5Ub2tlbltdfG51bGx9XG4gKi9cbmZ1bmN0aW9uIGNpZEVuY29kZXIgKG9iaikge1xuICBpZiAob2JqLmFzQ0lEICE9PSBvYmogJiYgb2JqWycvJ10gIT09IG9iai5ieXRlcykge1xuICAgIHJldHVybiBudWxsIC8vIGFueSBvdGhlciBraW5kIG9mIG9iamVjdFxuICB9XG4gIGNvbnN0IGNpZCA9IENJRC5hc0NJRChvYmopXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gdmVyeSB1bmxpa2VseSBjYXNlLCBhbmQgaXQnbGwgcHJvYmFibHkgdGhyb3cgYSByZWN1cnNpb24gZXJyb3IgaW4gY2JvcmdcbiAgaWYgKCFjaWQpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoY2lkLmJ5dGVzLmJ5dGVMZW5ndGggKyAxKVxuICBieXRlcy5zZXQoY2lkLmJ5dGVzLCAxKSAvLyBwcmVmaXggaXMgMHgwMCwgZm9yIGhpc3RvcmljYWwgcmVhc29uc1xuICByZXR1cm4gW1xuICAgIG5ldyBjYm9yZy5Ub2tlbihjYm9yZy5UeXBlLnRhZywgQ0lEX0NCT1JfVEFHKSxcbiAgICBuZXcgY2JvcmcuVG9rZW4oY2JvcmcuVHlwZS5ieXRlcywgYnl0ZXMpXG4gIF1cbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGpzZG9jL3JlcXVpcmUtcmV0dXJucy1jaGVja1xuLyoqXG4gKiBJbnRlcmNlcHQgYWxsIGB1bmRlZmluZWRgIHZhbHVlcyBmcm9tIGFuIG9iamVjdCB3YWxrIGFuZCByZWplY3QgdGhlIGVudGlyZVxuICogb2JqZWN0IGlmIHdlIGZpbmQgb25lLlxuICpcbiAqIEByZXR1cm5zIHtudWxsfVxuICovXG5mdW5jdGlvbiB1bmRlZmluZWRFbmNvZGVyICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdgdW5kZWZpbmVkYCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBJUExEIERhdGEgTW9kZWwgYW5kIGNhbm5vdCBiZSBlbmNvZGVkJylcbn1cblxuLyoqXG4gKiBJbnRlcmNlcHQgYWxsIGBudW1iZXJgIHZhbHVlcyBmcm9tIGFuIG9iamVjdCB3YWxrIGFuZCByZWplY3QgdGhlIGVudGlyZVxuICogb2JqZWN0IGlmIHdlIGZpbmQgc29tZXRoaW5nIHRoYXQgZG9lc24ndCBmaXQgdGhlIElQTEQgZGF0YSBtb2RlbCAoTmFOICZcbiAqIEluZmluaXR5KS5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gbnVtXG4gKiBAcmV0dXJucyB7bnVsbH1cbiAqL1xuZnVuY3Rpb24gbnVtYmVyRW5jb2RlciAobnVtKSB7XG4gIGlmIChOdW1iZXIuaXNOYU4obnVtKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignYE5hTmAgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgSVBMRCBEYXRhIE1vZGVsIGFuZCBjYW5ub3QgYmUgZW5jb2RlZCcpXG4gIH1cbiAgaWYgKG51bSA9PT0gSW5maW5pdHkgfHwgbnVtID09PSAtSW5maW5pdHkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2BJbmZpbml0eWAgYW5kIGAtSW5maW5pdHlgIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIElQTEQgRGF0YSBNb2RlbCBhbmQgY2Fubm90IGJlIGVuY29kZWQnKVxuICB9XG4gIHJldHVybiBudWxsXG59XG5cbmNvbnN0IF9lbmNvZGVPcHRpb25zID0ge1xuICBmbG9hdDY0OiB0cnVlLFxuICB0eXBlRW5jb2RlcnM6IHtcbiAgICBPYmplY3Q6IGNpZEVuY29kZXIsXG4gICAgdW5kZWZpbmVkOiB1bmRlZmluZWRFbmNvZGVyLFxuICAgIG51bWJlcjogbnVtYmVyRW5jb2RlclxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBlbmNvZGVPcHRpb25zID0ge1xuICAuLi5fZW5jb2RlT3B0aW9ucyxcbiAgdHlwZUVuY29kZXJzOiB7XG4gICAgLi4uX2VuY29kZU9wdGlvbnMudHlwZUVuY29kZXJzXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcmV0dXJucyB7Q0lEfVxuICovXG5mdW5jdGlvbiBjaWREZWNvZGVyIChieXRlcykge1xuICBpZiAoYnl0ZXNbMF0gIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgQ0lEIGZvciBDQk9SIHRhZyA0MjsgZXhwZWN0ZWQgbGVhZGluZyAweDAwJylcbiAgfVxuICByZXR1cm4gQ0lELmRlY29kZShieXRlcy5zdWJhcnJheSgxKSkgLy8gaWdub3JlIGxlYWRpbmcgMHgwMFxufVxuXG5jb25zdCBfZGVjb2RlT3B0aW9ucyA9IHtcbiAgYWxsb3dJbmRlZmluaXRlOiBmYWxzZSxcbiAgY29lcmNlVW5kZWZpbmVkVG9OdWxsOiB0cnVlLFxuICBhbGxvd05hTjogZmFsc2UsXG4gIGFsbG93SW5maW5pdHk6IGZhbHNlLFxuICBhbGxvd0JpZ0ludDogdHJ1ZSwgLy8gdGhpcyB3aWxsIGxlYWQgdG8gQmlnSW50IGZvciBpbnRzIG91dHNpZGUgb2ZcbiAgLy8gc2FmZS1pbnRlZ2VyIHJhbmdlLCB3aGljaCBtYXkgc3VycHJpc2UgdXNlcnNcbiAgc3RyaWN0OiB0cnVlLFxuICB1c2VNYXBzOiBmYWxzZSxcbiAgcmVqZWN0RHVwbGljYXRlTWFwS2V5czogdHJ1ZSxcbiAgLyoqIEB0eXBlIHtpbXBvcnQoJ2Nib3JnJykuVGFnRGVjb2RlcltdfSAqL1xuICB0YWdzOiBbXVxufVxuX2RlY29kZU9wdGlvbnMudGFnc1tDSURfQ0JPUl9UQUddID0gY2lkRGVjb2RlclxuXG5leHBvcnQgY29uc3QgZGVjb2RlT3B0aW9ucyA9IHtcbiAgLi4uX2RlY29kZU9wdGlvbnMsXG4gIHRhZ3M6IF9kZWNvZGVPcHRpb25zLnRhZ3Muc2xpY2UoKVxufVxuXG5leHBvcnQgY29uc3QgbmFtZSA9ICdkYWctY2JvcidcbmV4cG9ydCBjb25zdCBjb2RlID0gMHg3MVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IG5vZGVcbiAqIEByZXR1cm5zIHtCeXRlVmlldzxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChub2RlKSA9PiBjYm9yZy5lbmNvZGUobm9kZSwgX2VuY29kZU9wdGlvbnMpXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7Qnl0ZVZpZXc8VD4gfCBBcnJheUJ1ZmZlclZpZXc8VD59IGRhdGFcbiAqIEByZXR1cm5zIHtUfVxuICovXG5leHBvcnQgY29uc3QgZGVjb2RlID0gKGRhdGEpID0+IGNib3JnLmRlY29kZSh0b0J5dGVWaWV3KGRhdGEpLCBfZGVjb2RlT3B0aW9ucylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/@ipld/dag-cbor/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/cborg.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/cborg.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Token),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokeniser),\n/* harmony export */   Type: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Type),\n/* harmony export */   decode: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   tokensToObject: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/encode.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/decode.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _lib_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n\n\n\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9jYm9yZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3dDO0FBQ3BDOztBQUU1QztBQUNBO0FBQ0EsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQSxhQUFhLDJDQUEyQztBQUN4RCxhQUFhLHFDQUFxQztBQUNsRCxhQUFhLHFDQUFxQztBQUNsRDs7QUFVQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvY2JvcmcvY2JvcmcuanM/YjFlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGUgfSBmcm9tICcuL2xpYi9lbmNvZGUuanMnXG5pbXBvcnQgeyBkZWNvZGUsIGRlY29kZUZpcnN0LCBUb2tlbmlzZXIsIHRva2Vuc1RvT2JqZWN0IH0gZnJvbSAnLi9saWIvZGVjb2RlLmpzJ1xuaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL2xpYi90b2tlbi5qcydcblxuLyoqXG4gKiBFeHBvcnQgdGhlIHR5cGVzIHRoYXQgd2VyZSBwcmVzZW50IGluIHRoZSBvcmlnaW5hbCBtYW51YWwgY2JvcmcuZC50c1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5UYWdEZWNvZGVyfSBUYWdEZWNvZGVyXG4gKiBUaGVyZSB3YXMgb3JpZ2luYWxseSBqdXN0IGBUeXBlRW5jb2RlcmAgc28gZG9uJ3QgYnJlYWsgdHlwZXMgYnkgcmVuYW1pbmcgb3Igbm90IGV4cG9ydGluZ1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5PcHRpb25hbFR5cGVFbmNvZGVyfSBUeXBlRW5jb2RlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2ludGVyZmFjZScpLkVuY29kZU9wdGlvbnN9IEVuY29kZU9wdGlvbnNcbiAqL1xuXG5leHBvcnQge1xuICBkZWNvZGUsXG4gIGRlY29kZUZpcnN0LFxuICBUb2tlbmlzZXIgYXMgVG9rZW5pemVyLFxuICB0b2tlbnNUb09iamVjdCxcbiAgZW5jb2RlLFxuICBUb2tlbixcbiAgVHlwZVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/cborg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUint16: () => (/* binding */ decodeUint16),\n/* harmony export */   decodeUint32: () => (/* binding */ decodeUint32),\n/* harmony export */   decodeUint64: () => (/* binding */ decodeUint64),\n/* harmony export */   decodeUint8: () => (/* binding */ decodeUint8),\n/* harmony export */   encodeUint: () => (/* binding */ encodeUint),\n/* harmony export */   encodeUintValue: () => (/* binding */ encodeUintValue),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint64: () => (/* binding */ readUint64),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   uintBoundaries: () => (/* binding */ uintBoundaries)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n/* globals BigInt */\n\n\n\n\nconst uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint8 (data, offset, options) {\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint16 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint32 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nfunction readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nfunction encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/1negint.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/1negint.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNegint16: () => (/* binding */ decodeNegint16),\n/* harmony export */   decodeNegint32: () => (/* binding */ decodeNegint32),\n/* harmony export */   decodeNegint64: () => (/* binding */ decodeNegint64),\n/* harmony export */   decodeNegint8: () => (/* binding */ decodeNegint8),\n/* harmony export */   encodeNegint: () => (/* binding */ encodeNegint)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n/* eslint-env es2020 */\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint64 (data, pos, _minor, options) {\n  const int = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMW5lZ2ludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUV3QztBQUNOO0FBQ1c7O0FBRTdDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksY0FBYyxnREFBYztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxjQUFjLGlEQUFlO0FBQ3BEOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLGNBQWMsaURBQWU7QUFDcEQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGNBQWMsaURBQWU7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRDQUFLLENBQUMsMkNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQO0FBQ0E7QUFDQSxFQUFFLHNEQUFvQjtBQUN0Qjs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8xbmVnaW50LmpzP2EzNjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczIwMjAgKi9cblxuaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIC0xIC0gdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDIpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTmVnaW50MzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIC0xIC0gdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCA1KVxufVxuXG5jb25zdCBuZWcxYiA9IEJpZ0ludCgtMSlcbmNvbnN0IHBvczFiID0gQmlnSW50KDEpXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBpbnQgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBpbnQgIT09ICdiaWdpbnQnKSB7XG4gICAgY29uc3QgdmFsdWUgPSAtMSAtIGludFxuICAgIGlmICh2YWx1ZSA+PSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUikge1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgdmFsdWUsIDkpXG4gICAgfVxuICB9XG4gIGlmIChvcHRpb25zLmFsbG93QmlnSW50ICE9PSB0cnVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW50ZWdlcnMgb3V0c2lkZSBvZiB0aGUgc2FmZSBpbnRlZ2VyIHJhbmdlIGFyZSBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCBuZWcxYiAtIEJpZ0ludChpbnQpLCA5KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZU5lZ2ludCAoYnVmLCB0b2tlbikge1xuICBjb25zdCBuZWdpbnQgPSB0b2tlbi52YWx1ZVxuICBjb25zdCB1bnNpZ25lZCA9ICh0eXBlb2YgbmVnaW50ID09PSAnYmlnaW50JyA/IChuZWdpbnQgKiBuZWcxYiAtIHBvczFiKSA6IChuZWdpbnQgKiAtMSAtIDEpKVxuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIHRva2VuLnR5cGUubWFqb3JFbmNvZGVkLCB1bnNpZ25lZClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlTmVnaW50LmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIGNvbnN0IG5lZ2ludCA9IHRva2VuLnZhbHVlXG4gIGNvbnN0IHVuc2lnbmVkID0gKHR5cGVvZiBuZWdpbnQgPT09ICdiaWdpbnQnID8gKG5lZ2ludCAqIG5lZzFiIC0gcG9zMWIpIDogKG5lZ2ludCAqIC0xIC0gMSkpXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gaGFuZGxlZCBieSBxdWlja0VuY29kZSwgd2Ugc2hvdWxkbid0IGdldCBoZXJlIGJ1dCBpdCdzIGluY2x1ZGVkIGZvciBjb21wbGV0ZW5lc3NcbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1swXSkge1xuICAgIHJldHVybiAxXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1sxXSkge1xuICAgIHJldHVybiAyXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1syXSkge1xuICAgIHJldHVybiAzXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1szXSkge1xuICAgIHJldHVybiA1XG4gIH1cbiAgcmV0dXJuIDlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2sxXG4gKiBAcGFyYW0ge1Rva2VufSB0b2syXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVOZWdpbnQuY29tcGFyZVRva2VucyA9IGZ1bmN0aW9uIGNvbXBhcmVUb2tlbnMgKHRvazEsIHRvazIpIHtcbiAgLy8gb3Bwb3NpdGUgb2YgdGhlIHVpbnQgY29tcGFyaXNvbiBzaW5jZSB3ZSBzdG9yZSB0aGUgdWludCB2ZXJzaW9uIGluIGJ5dGVzXG4gIHJldHVybiB0b2sxLnZhbHVlIDwgdG9rMi52YWx1ZSA/IDEgOiB0b2sxLnZhbHVlID4gdG9rMi52YWx1ZSA/IC0xIDogLyogYzggaWdub3JlIG5leHQgKi8gMFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/1negint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/2bytes.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/2bytes.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareBytes: () => (/* binding */ compareBytes),\n/* harmony export */   decodeBytes16: () => (/* binding */ decodeBytes16),\n/* harmony export */   decodeBytes32: () => (/* binding */ decodeBytes32),\n/* harmony export */   decodeBytes64: () => (/* binding */ decodeBytes64),\n/* harmony export */   decodeBytes8: () => (/* binding */ decodeBytes8),\n/* harmony export */   decodeBytesCompact: () => (/* binding */ decodeBytesCompact),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, prefix + length)\n  const buf = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.slice)(data, pos + prefix, pos + prefix + length)\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.compare)(b1, b2)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMmJ5dGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3VCO0FBQzdCO0FBQzBCOztBQUU1RDtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsRUFBRSw0REFBZ0I7QUFDbEIsY0FBYyxxREFBSztBQUNuQixhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGdEQUFjO0FBQzdDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLGlEQUFlO0FBQzNCO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDJDQUFJLFVBQVUsMERBQVU7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQO0FBQ0EsRUFBRSxzREFBb0I7QUFDdEI7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0I7O0FBRUE7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ087QUFDUCxrRUFBa0UsdURBQU87QUFDekUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8yYnl0ZXMuanM/YzdjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgeyBhc3NlcnRFbm91Z2hEYXRhLCBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGNvbXBhcmUsIGZyb21TdHJpbmcsIHNsaWNlIH0gZnJvbSAnLi9ieXRlLXV0aWxzLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChkYXRhLCBwb3MsIHByZWZpeCwgbGVuZ3RoKSB7XG4gIGFzc2VydEVub3VnaERhdGEoZGF0YSwgcG9zLCBwcmVmaXggKyBsZW5ndGgpXG4gIGNvbnN0IGJ1ZiA9IHNsaWNlKGRhdGEsIHBvcyArIHByZWZpeCwgcG9zICsgcHJlZml4ICsgbGVuZ3RoKVxuICByZXR1cm4gbmV3IFRva2VuKFR5cGUuYnl0ZXMsIGJ1ZiwgcHJlZml4ICsgbGVuZ3RoKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlc0NvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXMxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAzLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBieXRlcyBsZW5ndGhzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgOSwgbClcbn1cblxuLyoqXG4gKiBgZW5jb2RlZEJ5dGVzYCBhbGxvd3MgZm9yIGNhY2hpbmcgd2hlbiB3ZSBkbyBhIGJ5dGUgdmVyc2lvbiBvZiBhIHN0cmluZ1xuICogZm9yIGtleSBzb3J0aW5nIHB1cnBvc2VzXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHRva2VuQnl0ZXMgKHRva2VuKSB7XG4gIGlmICh0b2tlbi5lbmNvZGVkQnl0ZXMgPT09IHVuZGVmaW5lZCkge1xuICAgIHRva2VuLmVuY29kZWRCeXRlcyA9IHRva2VuLnR5cGUgPT09IFR5cGUuc3RyaW5nID8gZnJvbVN0cmluZyh0b2tlbi52YWx1ZSkgOiB0b2tlbi52YWx1ZVxuICB9XG4gIC8vIEB0cy1pZ25vcmUgYydtb25cbiAgcmV0dXJuIHRva2VuLmVuY29kZWRCeXRlc1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUJ5dGVzIChidWYsIHRva2VuKSB7XG4gIGNvbnN0IGJ5dGVzID0gdG9rZW5CeXRlcyh0b2tlbilcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCB0b2tlbi50eXBlLm1ham9yRW5jb2RlZCwgYnl0ZXMubGVuZ3RoKVxuICBidWYucHVzaChieXRlcylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlQnl0ZXMuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgY29uc3QgYnl0ZXMgPSB0b2tlbkJ5dGVzKHRva2VuKVxuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUoYnl0ZXMubGVuZ3RoKSArIGJ5dGVzLmxlbmd0aFxufVxuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRvazFcbiAqIEBwYXJhbSB7VG9rZW59IHRvazJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUJ5dGVzLmNvbXBhcmVUb2tlbnMgPSBmdW5jdGlvbiBjb21wYXJlVG9rZW5zICh0b2sxLCB0b2syKSB7XG4gIHJldHVybiBjb21wYXJlQnl0ZXModG9rZW5CeXRlcyh0b2sxKSwgdG9rZW5CeXRlcyh0b2syKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGIxXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGIyXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZUJ5dGVzIChiMSwgYjIpIHtcbiAgcmV0dXJuIGIxLmxlbmd0aCA8IGIyLmxlbmd0aCA/IC0xIDogYjEubGVuZ3RoID4gYjIubGVuZ3RoID8gMSA6IGNvbXBhcmUoYjEsIGIyKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/2bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/3string.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/3string.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString16: () => (/* binding */ decodeString16),\n/* harmony export */   decodeString32: () => (/* binding */ decodeString32),\n/* harmony export */   decodeString64: () => (/* binding */ decodeString64),\n/* harmony export */   decodeString8: () => (/* binding */ decodeString8),\n/* harmony export */   decodeStringCompact: () => (/* binding */ decodeStringCompact),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, totLength)\n  const tok = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.toString)(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.slice)(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nconst encodeString = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvM3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUF3QztBQUN1QjtBQUM3QjtBQUNPO0FBQ1E7O0FBRWpEO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxFQUFFLDZEQUFnQjtBQUNsQixrQkFBa0IsNENBQUssQ0FBQywyQ0FBSSxTQUFTLHdEQUFRO0FBQzdDO0FBQ0Esb0JBQW9CLHFEQUFLO0FBQ3pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRU8scUJBQXFCLG1EQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvM3N0cmluZy5qcz83YTY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCB7IGFzc2VydEVub3VnaERhdGEsIGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZW5jb2RlQnl0ZXMgfSBmcm9tICcuLzJieXRlcy5qcydcbmltcG9ydCB7IHRvU3RyaW5nLCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChkYXRhLCBwb3MsIHByZWZpeCwgbGVuZ3RoLCBvcHRpb25zKSB7XG4gIGNvbnN0IHRvdExlbmd0aCA9IHByZWZpeCArIGxlbmd0aFxuICBhc3NlcnRFbm91Z2hEYXRhKGRhdGEsIHBvcywgdG90TGVuZ3RoKVxuICBjb25zdCB0b2sgPSBuZXcgVG9rZW4oVHlwZS5zdHJpbmcsIHRvU3RyaW5nKGRhdGEsIHBvcyArIHByZWZpeCwgcG9zICsgdG90TGVuZ3RoKSwgdG90TGVuZ3RoKVxuICBpZiAob3B0aW9ucy5yZXRhaW5TdHJpbmdCeXRlcyA9PT0gdHJ1ZSkge1xuICAgIHRvay5ieXRlVmFsdWUgPSBzbGljZShkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHRvdExlbmd0aClcbiAgfVxuICByZXR1cm4gdG9rXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nQ29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmc4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmcxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAzLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nNjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIHN0cmluZyBsZW5ndGhzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgOSwgbCwgb3B0aW9ucylcbn1cblxuZXhwb3J0IGNvbnN0IGVuY29kZVN0cmluZyA9IGVuY29kZUJ5dGVzXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/3string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/4array.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/4array.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray16: () => (/* binding */ decodeArray16),\n/* harmony export */   decodeArray32: () => (/* binding */ decodeArray32),\n/* harmony export */   decodeArray64: () => (/* binding */ decodeArray64),\n/* harmony export */   decodeArray8: () => (/* binding */ decodeArray8),\n/* harmony export */   decodeArrayCompact: () => (/* binding */ decodeArrayCompact),\n/* harmony export */   decodeArrayIndefinite: () => (/* binding */ decodeArrayIndefinite),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeArray (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNGFycmF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTjtBQUNXOztBQUU3QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUCxFQUFFLHNEQUFvQixNQUFNLDJDQUFJO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEIsaURBQWU7O0FBRTNDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi80YXJyYXkuanM/NGVmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChfZGF0YSwgX3BvcywgcHJlZml4LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmFycmF5LCBsZW5ndGgsIHByZWZpeClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXlDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5MTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXk2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgYXJyYXkgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5SW5kZWZpbml0ZSAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMuYWxsb3dJbmRlZmluaXRlID09PSBmYWxzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGluZGVmaW5pdGUgbGVuZ3RoIGl0ZW1zIG5vdCBhbGxvd2VkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIEluZmluaXR5KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUFycmF5IChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS5hcnJheS5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG4vLyB1c2luZyBhbiBhcnJheSBhcyBhIG1hcCBrZXksIGFyZSB5b3Ugc3VyZSBhYm91dCB0aGlzPyB3ZSBjYW4gb25seSBzb3J0XG4vLyBieSBtYXAgbGVuZ3RoIGhlcmUsIGl0J3MgdXAgdG8gdGhlIGVuY29kZXIgdG8gZGVjaWRlIHRvIGxvb2sgZGVlcGVyXG5lbmNvZGVBcnJheS5jb21wYXJlVG9rZW5zID0gdWludC5lbmNvZGVVaW50LmNvbXBhcmVUb2tlbnNcblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlQXJyYXkuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/4array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/5map.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/5map.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMap16: () => (/* binding */ decodeMap16),\n/* harmony export */   decodeMap32: () => (/* binding */ decodeMap32),\n/* harmony export */   decodeMap64: () => (/* binding */ decodeMap64),\n/* harmony export */   decodeMap8: () => (/* binding */ decodeMap8),\n/* harmony export */   decodeMapCompact: () => (/* binding */ decodeMapCompact),\n/* harmony export */   decodeMapIndefinite: () => (/* binding */ decodeMapIndefinite),\n/* harmony export */   encodeMap: () => (/* binding */ encodeMap)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeMap (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNW1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ047QUFDVzs7QUFFN0M7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1AsRUFBRSxzREFBb0IsTUFBTSwyQ0FBSTtBQUNoQzs7QUFFQTtBQUNBO0FBQ0EsMEJBQTBCLGlEQUFlOztBQUV6QztBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVMsc0RBQW9CO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNW1hcC5qcz9iOGU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gX2RhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBfcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmZ1bmN0aW9uIHRvVG9rZW4gKF9kYXRhLCBfcG9zLCBwcmVmaXgsIGxlbmd0aCkge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubWFwLCBsZW5ndGgsIHByZWZpeClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwQ29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vcilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXAzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBtYXAgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcEluZGVmaW5pdGUgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93SW5kZWZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbmRlZmluaXRlIGxlbmd0aCBpdGVtcyBub3QgYWxsb3dlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBJbmZpbml0eSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVNYXAgKGJ1ZiwgdG9rZW4pIHtcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCBUeXBlLm1hcC5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG4vLyB1c2luZyBhIG1hcCBhcyBhIG1hcCBrZXksIGFyZSB5b3Ugc3VyZSBhYm91dCB0aGlzPyB3ZSBjYW4gb25seSBzb3J0XG4vLyBieSBtYXAgbGVuZ3RoIGhlcmUsIGl0J3MgdXAgdG8gdGhlIGVuY29kZXIgdG8gZGVjaWRlIHRvIGxvb2sgZGVlcGVyXG5lbmNvZGVNYXAuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZU1hcC5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUodG9rZW4udmFsdWUpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/5map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/6tag.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/6tag.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTag16: () => (/* binding */ decodeTag16),\n/* harmony export */   decodeTag32: () => (/* binding */ decodeTag32),\n/* harmony export */   decodeTag64: () => (/* binding */ decodeTag64),\n/* harmony export */   decodeTag8: () => (/* binding */ decodeTag8),\n/* harmony export */   decodeTagCompact: () => (/* binding */ decodeTagCompact),\n/* harmony export */   encodeTag: () => (/* binding */ encodeTag)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeTagCompact (_data, _pos, minor, _options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeTag (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNnRhZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3QztBQUNOOztBQUVsQztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0sZ0RBQWM7QUFDM0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxpREFBZTtBQUM1Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxNQUFNLGlEQUFlO0FBQzVDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0saURBQWU7QUFDNUM7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQLEVBQUUsc0RBQW9CLE1BQU0sMkNBQUk7QUFDaEM7O0FBRUEsMEJBQTBCLGlEQUFlOztBQUV6QztBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVMsc0RBQW9CO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNnRhZy5qcz85MzRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWdDb21wYWN0IChfZGF0YSwgX3BvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIG1pbm9yLCAxKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWc4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgNSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnNjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgOSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUYWcgKGJ1ZiwgdG9rZW4pIHtcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCBUeXBlLnRhZy5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG5lbmNvZGVUYWcuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZVRhZy5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUodG9rZW4udmFsdWUpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/6tag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/7float.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/7float.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBreak: () => (/* binding */ decodeBreak),\n/* harmony export */   decodeFloat16: () => (/* binding */ decodeFloat16),\n/* harmony export */   decodeFloat32: () => (/* binding */ decodeFloat32),\n/* harmony export */   decodeFloat64: () => (/* binding */ decodeFloat64),\n/* harmony export */   decodeUndefined: () => (/* binding */ decodeUndefined),\n/* harmony export */   encodeFloat: () => (/* binding */ encodeFloat)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nfunction encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/7float.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/bl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/bl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ Bl)\n/* harmony export */ });\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/byte-utils.js\");\n/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\n\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nclass Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.slice)(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvYmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNzRDs7QUFFdEQ7QUFDQTtBQUNBOztBQUVBOztBQUVPO0FBQ1A7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsZUFBZSx5QkFBeUI7QUFDeEM7QUFDQTtBQUNBLGVBQWUsMEJBQTBCO0FBQ3pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscURBQUs7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFNBQVM7QUFDdEIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxlQUFlLHFEQUFLO0FBQ3BCO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsYUFBYSxzREFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2JsLmpzPzU0OTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCbCBpcyBhIGxpc3Qgb2YgYnl0ZSBjaHVua3MsIHNpbWlsYXIgdG8gaHR0cHM6Ly9naXRodWIuY29tL3J2YWdnL2JsIGJ1dCBmb3JcbiAqIHdyaXRpbmcgcmF0aGVyIHRoYW4gcmVhZGluZy5cbiAqIEEgQmwgb2JqZWN0IGFjY2VwdHMgc2V0KCkgb3BlcmF0aW9ucyBmb3IgaW5kaXZpZHVhbCBieXRlcyBhbmQgY29weVRvKCkgZm9yXG4gKiBpbnNlcnRpbmcgYnl0ZSBhcnJheXMuIFRoZXNlIHdyaXRlIG9wZXJhdGlvbnMgZG9uJ3QgYXV0b21hdGljYWxseSBpbmNyZW1lbnRcbiAqIHRoZSBpbnRlcm5hbCBjdXJzb3Igc28gaXRzIFwibGVuZ3RoXCIgd29uJ3QgYmUgY2hhbmdlZC4gSW5zdGVhZCwgaW5jcmVtZW50KClcbiAqIG11c3QgYmUgY2FsbGVkIHRvIGV4dGVuZCBpdHMgbGVuZ3RoIHRvIGNvdmVyIHRoZSBpbnNlcnRlZCBkYXRhLlxuICogVGhlIHRvQnl0ZXMoKSBjYWxsIHdpbGwgY29udmVydCBhbGwgaW50ZXJuYWwgbWVtb3J5IHRvIGEgc2luZ2xlIFVpbnQ4QXJyYXkgb2ZcbiAqIHRoZSBjb3JyZWN0IGxlbmd0aCwgdHJ1bmNhdGluZyBhbnkgZGF0YSB0aGF0IGlzIHN0b3JlZCBidXQgaGFzbid0IGJlZW5cbiAqIGluY2x1ZGVkIGJ5IGFuIGluY3JlbWVudCgpLlxuICogZ2V0KCkgY2FuIHJldHJpZXZlIGEgc2luZ2xlIGJ5dGUuXG4gKiBBbGwgb3BlcmF0aW9ucyAoZXhjZXB0IHRvQnl0ZXMoKSkgdGFrZSBhbiBcIm9mZnNldFwiIGFyZ3VtZW50IHRoYXQgd2lsbCBwZXJmb3JtXG4gKiB0aGUgd3JpdGUgYXQgdGhlIG9mZnNldCBfZnJvbSB0aGUgY3VycmVudCBjdXJzb3JfLiBGb3IgbW9zdCBvcGVyYXRpb25zIHRoaXNcbiAqIHdpbGwgYmUgYDBgIHRvIHdyaXRlIGF0IHRoZSBjdXJyZW50IGN1cnNvciBwb3NpdGlvbiBidXQgaXQgY2FuIGJlIGFoZWFkIG9mXG4gKiB0aGUgY3VycmVudCBjdXJzb3IuIE5lZ2F0aXZlIG9mZnNldHMgcHJvYmFibHkgd29yayBidXQgYXJlIHVudGVzdGVkLlxuICovXG5cbi8vIFRPRE86IGlwanMgZG9lc24ndCBzdXBwb3J0IHRoaXMsIG9ubHkgZm9yIHRlc3QgZmlsZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9taWtlYWwvaXBqcy9ibG9iL21hc3Rlci9zcmMvcGFja2FnZS90ZXN0RmlsZS5qcyNMMzlcbmltcG9ydCB7IGFsbG9jLCBjb25jYXQsIHNsaWNlIH0gZnJvbSAnLi9ieXRlLXV0aWxzLmpzJ1xuXG4vLyB0aGUgdHMtaWdub3JlcyBpbiB0aGlzIGZpbGUgYXJlIGFsbW9zdCBhbGwgZm9yIHRoZSBgVWludDhBcnJheXxudW1iZXJbXWAgZHVhbGl0eSB0aGF0IGV4aXN0c1xuLy8gZm9yIHBlcmYgcmVhc29ucy4gQ29uc2lkZXIgYmV0dGVyIGFwcHJvYWNoZXMgdG8gdGhpcyBvciByZW1vdmluZyBpdCBlbnRpcmVseSwgaXQgaXMgcXVpdGVcbi8vIHJpc2t5IGJlY2F1c2Ugb2Ygc29tZSBhc3N1bXB0aW9ucyBhYm91dCBzbWFsbCBjaHVua3MgPT09IG51bWJlcltdIGFuZCBldmVyeXRoaW5nIGVsc2UgPT09IFVpbnQ4QXJyYXkuXG5cbmNvbnN0IGRlZmF1bHRDaHVua1NpemUgPSAyNTZcblxuZXhwb3J0IGNsYXNzIEJsIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbY2h1bmtTaXplXVxuICAgKi9cbiAgY29uc3RydWN0b3IgKGNodW5rU2l6ZSA9IGRlZmF1bHRDaHVua1NpemUpIHtcbiAgICB0aGlzLmNodW5rU2l6ZSA9IGNodW5rU2l6ZVxuICAgIC8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMuY3Vyc29yID0gMFxuICAgIC8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMubWF4Q3Vyc29yID0gLTFcbiAgICAvKiogQHR5cGUgeyhVaW50OEFycmF5fG51bWJlcltdKVtdfSAqL1xuICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICAvLyBrZWVwIHRoZSBmaXJzdCBjaHVuayBhcm91bmQgaWYgd2UgY2FuIHRvIHNhdmUgYWxsb2NhdGlvbnMgZm9yIGZ1dHVyZSBlbmNvZGVzXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fG51bWJlcltdfG51bGx9ICovXG4gICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSBudWxsXG4gIH1cblxuICByZXNldCAoKSB7XG4gICAgdGhpcy5jdXJzb3IgPSAwXG4gICAgdGhpcy5tYXhDdXJzb3IgPSAtMVxuICAgIGlmICh0aGlzLmNodW5rcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICB9XG4gICAgaWYgKHRoaXMuX2luaXRSZXVzZUNodW5rICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmNodW5rcy5wdXNoKHRoaXMuX2luaXRSZXVzZUNodW5rKVxuICAgICAgdGhpcy5tYXhDdXJzb3IgPSB0aGlzLl9pbml0UmV1c2VDaHVuay5sZW5ndGggLSAxXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7VWludDhBcnJheXxudW1iZXJbXX0gYnl0ZXNcbiAgICovXG4gIHB1c2ggKGJ5dGVzKSB7XG4gICAgbGV0IHRvcENodW5rID0gdGhpcy5jaHVua3NbdGhpcy5jaHVua3MubGVuZ3RoIC0gMV1cbiAgICBjb25zdCBuZXdNYXggPSB0aGlzLmN1cnNvciArIGJ5dGVzLmxlbmd0aFxuICAgIGlmIChuZXdNYXggPD0gdGhpcy5tYXhDdXJzb3IgKyAxKSB7XG4gICAgICAvLyB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBjaHVuayBhbmQgd2UgY2FuIGZpdCB0aGVzZSBieXRlcyBpbnRvIHRoYXQgY2h1bmtcbiAgICAgIGNvbnN0IGNodW5rUG9zID0gdG9wQ2h1bmsubGVuZ3RoIC0gKHRoaXMubWF4Q3Vyc29yIC0gdGhpcy5jdXJzb3IpIC0gMVxuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgdG9wQ2h1bmsuc2V0KGJ5dGVzLCBjaHVua1BvcylcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gY2FuJ3QgZml0IGl0IGluXG4gICAgICBpZiAodG9wQ2h1bmspIHtcbiAgICAgICAgLy8gdHJpcCB0aGUgbGFzdCBjaHVuayB0byBgY3Vyc29yYCBpZiB3ZSBuZWVkIHRvXG4gICAgICAgIGNvbnN0IGNodW5rUG9zID0gdG9wQ2h1bmsubGVuZ3RoIC0gKHRoaXMubWF4Q3Vyc29yIC0gdGhpcy5jdXJzb3IpIC0gMVxuICAgICAgICBpZiAoY2h1bmtQb3MgPCB0b3BDaHVuay5sZW5ndGgpIHtcbiAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgdGhpcy5jaHVua3NbdGhpcy5jaHVua3MubGVuZ3RoIC0gMV0gPSB0b3BDaHVuay5zdWJhcnJheSgwLCBjaHVua1BvcylcbiAgICAgICAgICB0aGlzLm1heEN1cnNvciA9IHRoaXMuY3Vyc29yIC0gMVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoYnl0ZXMubGVuZ3RoIDwgNjQgJiYgYnl0ZXMubGVuZ3RoIDwgdGhpcy5jaHVua1NpemUpIHtcbiAgICAgICAgLy8gbWFrZSBhIG5ldyBjaHVuayBhbmQgY29weSB0aGUgbmV3IG9uZSBpbnRvIGl0XG4gICAgICAgIHRvcENodW5rID0gYWxsb2ModGhpcy5jaHVua1NpemUpXG4gICAgICAgIHRoaXMuY2h1bmtzLnB1c2godG9wQ2h1bmspXG4gICAgICAgIHRoaXMubWF4Q3Vyc29yICs9IHRvcENodW5rLmxlbmd0aFxuICAgICAgICBpZiAodGhpcy5faW5pdFJldXNlQ2h1bmsgPT09IG51bGwpIHtcbiAgICAgICAgICB0aGlzLl9pbml0UmV1c2VDaHVuayA9IHRvcENodW5rXG4gICAgICAgIH1cbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICB0b3BDaHVuay5zZXQoYnl0ZXMsIDApXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBwdXNoIHRoZSBuZXcgYnl0ZXMgaW4gYXMgaXRzIG93biBjaHVua1xuICAgICAgICB0aGlzLmNodW5rcy5wdXNoKGJ5dGVzKVxuICAgICAgICB0aGlzLm1heEN1cnNvciArPSBieXRlcy5sZW5ndGhcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5jdXJzb3IgKz0gYnl0ZXMubGVuZ3RoXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtib29sZWFufSBbcmVzZXRdXG4gICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgKi9cbiAgdG9CeXRlcyAocmVzZXQgPSBmYWxzZSkge1xuICAgIGxldCBieXRzXG4gICAgaWYgKHRoaXMuY2h1bmtzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgY29uc3QgY2h1bmsgPSB0aGlzLmNodW5rc1swXVxuICAgICAgaWYgKHJlc2V0ICYmIHRoaXMuY3Vyc29yID4gY2h1bmsubGVuZ3RoIC8gMikge1xuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAyICovXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYnl0cyA9IHRoaXMuY3Vyc29yID09PSBjaHVuay5sZW5ndGggPyBjaHVuayA6IGNodW5rLnN1YmFycmF5KDAsIHRoaXMuY3Vyc29yKVxuICAgICAgICB0aGlzLl9pbml0UmV1c2VDaHVuayA9IG51bGxcbiAgICAgICAgdGhpcy5jaHVua3MgPSBbXVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBieXRzID0gc2xpY2UoY2h1bmssIDAsIHRoaXMuY3Vyc29yKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBieXRzID0gY29uY2F0KHRoaXMuY2h1bmtzLCB0aGlzLmN1cnNvcilcbiAgICB9XG4gICAgaWYgKHJlc2V0KSB7XG4gICAgICB0aGlzLnJlc2V0KClcbiAgICB9XG4gICAgcmV0dXJuIGJ5dHNcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/bl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/byte-utils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/byte-utils.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   asU8A: () => (/* binding */ asU8A),\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   decodeCodePointsArray: () => (/* binding */ decodeCodePointsArray),\n/* harmony export */   fromArray: () => (/* binding */ fromArray),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   useBuffer: () => (/* binding */ useBuffer)\n/* harmony export */ });\n// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nconst useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nfunction asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nconst toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nconst fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nconst fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nconst slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nconst concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nconst alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nconst toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nconst fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvYnl0ZS11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBLGVBQWUsWUFBWTtBQUMzQixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFlBQVk7QUFDM0IsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFlBQVk7QUFDM0IsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0IsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCLGVBQWUsUUFBUTtBQUN2QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsRUFBRSxFQUFFLGdDQUFnQztBQUN0Rzs7QUFFTztBQUNQO0FBQ0E7QUFDQSxhQUFhLG1CQUFtQjtBQUNoQyxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQW1CO0FBQ2hDLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsUUFBUSxpQkFBaUIsUUFBUSxpQkFBaUIsVUFBVSw0QkFBNEIsRUFBRSxFQUFFLFNBQVM7QUFDOUg7QUFDQSx5QkFBeUIsUUFBUTtBQUNqQzs7QUFFQTtBQUNBLFdBQVcsd0NBQXdDO0FBQ25ELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ieXRlLXV0aWxzLmpzPzQwYWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVXNlIFVpbnQ4QXJyYXkgZGlyZWN0bHkgaW4gdGhlIGJyb3dzZXIsIHVzZSBCdWZmZXIgaW4gTm9kZS5qcyBidXQgZG9uJ3Rcbi8vIHNwZWFrIGl0cyBuYW1lIGRpcmVjdGx5IHRvIGF2b2lkIGJ1bmRsZXJzIHB1bGxpbmcgaW4gdGhlIGBCdWZmZXJgIHBvbHlmaWxsXG5cbi8vIEB0cy1pZ25vcmVcbmV4cG9ydCBjb25zdCB1c2VCdWZmZXIgPSBnbG9iYWxUaGlzLnByb2Nlc3MgJiZcbiAgLy8gQHRzLWlnbm9yZVxuICAhZ2xvYmFsVGhpcy5wcm9jZXNzLmJyb3dzZXIgJiZcbiAgLy8gQHRzLWlnbm9yZVxuICBnbG9iYWxUaGlzLkJ1ZmZlciAmJlxuICAvLyBAdHMtaWdub3JlXG4gIHR5cGVvZiBnbG9iYWxUaGlzLkJ1ZmZlci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJ1xuXG5jb25zdCB0ZXh0RGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpXG5jb25zdCB0ZXh0RW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBidWZcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc0J1ZmZlciAoYnVmKSB7XG4gIC8vIEB0cy1pZ25vcmVcbiAgcmV0dXJuIHVzZUJ1ZmZlciAmJiBnbG9iYWxUaGlzLkJ1ZmZlci5pc0J1ZmZlcihidWYpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fG51bWJlcltdfSBidWZcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNVOEEgKGJ1Zikge1xuICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICBpZiAoIShidWYgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oYnVmKVxuICB9XG4gIHJldHVybiBpc0J1ZmZlcihidWYpID8gbmV3IFVpbnQ4QXJyYXkoYnVmLmJ1ZmZlciwgYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5ieXRlTGVuZ3RoKSA6IGJ1ZlxufVxuXG5leHBvcnQgY29uc3QgdG9TdHJpbmcgPSB1c2VCdWZmZXJcbiAgPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc3RhcnRcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZW5kXG4gICAgICovXG4gICAgKGJ5dGVzLCBzdGFydCwgZW5kKSA9PiB7XG4gICAgICByZXR1cm4gZW5kIC0gc3RhcnQgPiA2NFxuICAgICAgICA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgb3BlcmF0b3ItbGluZWJyZWFrXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oYnl0ZXMuc3ViYXJyYXkoc3RhcnQsIGVuZCkpLnRvU3RyaW5nKCd1dGY4JylcbiAgICAgICAgOiB1dGY4U2xpY2UoYnl0ZXMsIHN0YXJ0LCBlbmQpXG4gICAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCAxMSAqL1xuICA6IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgb3BlcmF0b3ItbGluZWJyZWFrXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBlbmRcbiAgICAgKi9cbiAgICAoYnl0ZXMsIHN0YXJ0LCBlbmQpID0+IHtcbiAgICAgIHJldHVybiBlbmQgLSBzdGFydCA+IDY0XG4gICAgICAgID8gdGV4dERlY29kZXIuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHN0YXJ0LCBlbmQpKVxuICAgICAgICA6IHV0ZjhTbGljZShieXRlcywgc3RhcnQsIGVuZClcbiAgICB9XG5cbmV4cG9ydCBjb25zdCBmcm9tU3RyaW5nID0gdXNlQnVmZmVyXG4gID8gLy8gZXNsaW50LWRpc2FibGUtbGluZSBvcGVyYXRvci1saW5lYnJlYWtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gICAgICovXG4gICAgKHN0cmluZykgPT4ge1xuICAgICAgcmV0dXJuIHN0cmluZy5sZW5ndGggPiA2NFxuICAgICAgICA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgb3BlcmF0b3ItbGluZWJyZWFrXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oc3RyaW5nKVxuICAgICAgICA6IHV0ZjhUb0J5dGVzKHN0cmluZylcbiAgICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDcgKi9cbiAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAgICAgKi9cbiAgICAoc3RyaW5nKSA9PiB7XG4gICAgICByZXR1cm4gc3RyaW5nLmxlbmd0aCA+IDY0ID8gdGV4dEVuY29kZXIuZW5jb2RlKHN0cmluZykgOiB1dGY4VG9CeXRlcyhzdHJpbmcpXG4gICAgfVxuXG4vKipcbiAqIEJ1ZmZlciB2YXJpYW50IG5vdCBmYXN0IGVub3VnaCBmb3Igd2hhdCB3ZSBuZWVkXG4gKiBAcGFyYW0ge251bWJlcltdfSBhcnJcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5leHBvcnQgY29uc3QgZnJvbUFycmF5ID0gKGFycikgPT4ge1xuICByZXR1cm4gVWludDhBcnJheS5mcm9tKGFycilcbn1cblxuZXhwb3J0IGNvbnN0IHNsaWNlID0gdXNlQnVmZmVyXG4gID8gLy8gZXNsaW50LWRpc2FibGUtbGluZSBvcGVyYXRvci1saW5lYnJlYWtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGVuZFxuICAgICAqL1xuICAgIChieXRlcywgc3RhcnQsIGVuZCkgPT4ge1xuICAgICAgaWYgKGlzQnVmZmVyKGJ5dGVzKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnl0ZXMuc3ViYXJyYXkoc3RhcnQsIGVuZCkpXG4gICAgICB9XG4gICAgICByZXR1cm4gYnl0ZXMuc2xpY2Uoc3RhcnQsIGVuZClcbiAgICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDkgKi9cbiAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc3RhcnRcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZW5kXG4gICAgICovXG4gICAgKGJ5dGVzLCBzdGFydCwgZW5kKSA9PiB7XG4gICAgICByZXR1cm4gYnl0ZXMuc2xpY2Uoc3RhcnQsIGVuZClcbiAgICB9XG5cbmV4cG9ydCBjb25zdCBjb25jYXQgPSB1c2VCdWZmZXJcbiAgPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheVtdfSBjaHVua3NcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gICAgICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gICAgICovXG4gICAgKGNodW5rcywgbGVuZ3RoKSA9PiB7XG4gICAgICAvLyBtaWdodCBnZXQgYSBzdHJheSBwbGFpbiBBcnJheSBoZXJlXG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgICBjaHVua3MgPSBjaHVua3MubWFwKChjKSA9PiBjIGluc3RhbmNlb2YgVWludDhBcnJheVxuICAgICAgICA/IGNcbiAgICAgICAgLy8gdGhpcyBjYXNlIGlzIG9jY2FzaW9uYWxseSBtaXNzZWQgZHVyaW5nIHRlc3QgcnVucyBzbyBiZWNvbWVzIGNvdmVyYWdlLWZsYWt5XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgICAgICAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oYykpXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICByZXR1cm4gYXNVOEEoZ2xvYmFsVGhpcy5CdWZmZXIuY29uY2F0KGNodW5rcywgbGVuZ3RoKSlcbiAgICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDE5ICovXG4gIDogLy8gZXNsaW50LWRpc2FibGUtbGluZSBvcGVyYXRvci1saW5lYnJlYWtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXlbXX0gY2h1bmtzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICAgICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgICAqL1xuICAgIChjaHVua3MsIGxlbmd0aCkgPT4ge1xuICAgICAgY29uc3Qgb3V0ID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKVxuICAgICAgbGV0IG9mZiA9IDBcbiAgICAgIGZvciAobGV0IGIgb2YgY2h1bmtzKSB7XG4gICAgICAgIGlmIChvZmYgKyBiLmxlbmd0aCA+IG91dC5sZW5ndGgpIHtcbiAgICAgICAgICAvLyBmaW5hbCBjaHVuayB0aGF0J3MgYmlnZ2VyIHRoYW4gd2UgbmVlZFxuICAgICAgICAgIGIgPSBiLnN1YmFycmF5KDAsIG91dC5sZW5ndGggLSBvZmYpXG4gICAgICAgIH1cbiAgICAgICAgb3V0LnNldChiLCBvZmYpXG4gICAgICAgIG9mZiArPSBiLmxlbmd0aFxuICAgICAgfVxuICAgICAgcmV0dXJuIG91dFxuICAgIH1cblxuZXhwb3J0IGNvbnN0IGFsbG9jID0gdXNlQnVmZmVyXG4gID8gLy8gZXNsaW50LWRpc2FibGUtbGluZSBvcGVyYXRvci1saW5lYnJlYWtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc2l6ZVxuICAgICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgICAqL1xuICAgIChzaXplKSA9PiB7XG4gICAgICAvLyB3ZSBhbHdheXMgd3JpdGUgb3ZlciB0aGUgY29udGVudHMgd2UgZXhwb3NlIHNvIHRoaXMgc2hvdWxkIGJlIHNhZmVcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvY1Vuc2FmZShzaXplKVxuICAgIH1cbiAgLyogYzggaWdub3JlIG5leHQgOCAqL1xuICA6IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgb3BlcmF0b3ItbGluZWJyZWFrXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHNpemVcbiAgICAgKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAgICAgKi9cbiAgICAoc2l6ZSkgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHNpemUpXG4gICAgfVxuXG5leHBvcnQgY29uc3QgdG9IZXggPSB1c2VCdWZmZXJcbiAgPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gZFxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgKGQpID0+IHtcbiAgICAgIGlmICh0eXBlb2YgZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGRcbiAgICAgIH1cbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKHRvQnl0ZXMoZCkpLnRvU3RyaW5nKCdoZXgnKVxuICAgIH1cbiAgLyogYzggaWdub3JlIG5leHQgMTIgKi9cbiAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gZFxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgKGQpID0+IHtcbiAgICAgIGlmICh0eXBlb2YgZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGRcbiAgICAgIH1cbiAgICAgIC8vIEB0cy1pZ25vcmUgbm90IHNtYXJ0IGVub3VnaCB0byBmaWd1cmUgdGhpcyBvdXRcbiAgICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUucmVkdWNlLmNhbGwodG9CeXRlcyhkKSwgKHAsIGMpID0+IGAke3B9JHtjLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpfWAsICcnKVxuICAgIH1cblxuZXhwb3J0IGNvbnN0IGZyb21IZXggPSB1c2VCdWZmZXJcbiAgPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd8VWludDhBcnJheX0gaGV4XG4gICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgKi9cbiAgICAoaGV4KSA9PiB7XG4gICAgICBpZiAoaGV4IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gaGV4XG4gICAgICB9XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICByZXR1cm4gZ2xvYmFsVGhpcy5CdWZmZXIuZnJvbShoZXgsICdoZXgnKVxuICAgIH1cbiAgLyogYzggaWdub3JlIG5leHQgMTcgKi9cbiAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd8VWludDhBcnJheX0gaGV4XG4gICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgKi9cbiAgICAoaGV4KSA9PiB7XG4gICAgICBpZiAoaGV4IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gaGV4XG4gICAgICB9XG4gICAgICBpZiAoIWhleC5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KDApXG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaGV4LnNwbGl0KCcnKVxuICAgICAgICAubWFwKCgvKiogQHR5cGUge3N0cmluZ30gKi8gYywgLyoqIEB0eXBlIHtudW1iZXJ9ICovIGksIC8qKiBAdHlwZSB7c3RyaW5nW119ICovIGQpID0+IGkgJSAyID09PSAwID8gYDB4JHtjfSR7ZFtpICsgMV19YCA6ICcnKVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgIC5tYXAoKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyBlKSA9PiBwYXJzZUludChlLCAxNikpKVxuICAgIH1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl8QXJyYXlCdWZmZXJ8QXJyYXlCdWZmZXJWaWV3fSBvYmpcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5mdW5jdGlvbiB0b0J5dGVzIChvYmopIHtcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgb2JqLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdVaW50OEFycmF5Jykge1xuICAgIHJldHVybiBvYmpcbiAgfVxuICBpZiAob2JqIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkob2JqKVxuICB9XG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcob2JqKSkge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShvYmouYnVmZmVyLCBvYmouYnl0ZU9mZnNldCwgb2JqLmJ5dGVMZW5ndGgpXG4gIH1cbiAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYjFcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYjJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlIChiMSwgYjIpIHtcbiAgLyogYzggaWdub3JlIG5leHQgNSAqL1xuICBpZiAoaXNCdWZmZXIoYjEpICYmIGlzQnVmZmVyKGIyKSkge1xuICAgIC8vIHByb2JhYmx5IG5vdCBwb3NzaWJsZSB0byBnZXQgaGVyZSBpbiB0aGUgY3VycmVudCBBUElcbiAgICAvLyBAdHMtaWdub3JlIEJ1ZmZlclxuICAgIHJldHVybiBiMS5jb21wYXJlKGIyKVxuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYjEubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoYjFbaV0gPT09IGIyW2ldKSB7XG4gICAgICBjb250aW51ZVxuICAgIH1cbiAgICByZXR1cm4gYjFbaV0gPCBiMltpXSA/IC0xIDogMVxuICB9IC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgcmV0dXJuIDBcbn1cblxuLy8gVGhlIGJlbG93IGNvZGUgaXMgdGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL2Nsb3N1cmUtbGlicmFyeS9ibG9iLzg1OThkODcyNDJhZjU5YWFjMjMzMjcwNzQyYzg5ODRlMmIyYmRiZTAvY2xvc3VyZS9nb29nL2NyeXB0L2NyeXB0LmpzI0wxMTctTDE0M1xuLy8gTGljZW5zZWQgQXBhY2hlLTIuMC5cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7bnVtYmVyW119XG4gKi9cbmZ1bmN0aW9uIHV0ZjhUb0J5dGVzIChzdHIpIHtcbiAgY29uc3Qgb3V0ID0gW11cbiAgbGV0IHAgPSAwXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IGMgPSBzdHIuY2hhckNvZGVBdChpKVxuICAgIGlmIChjIDwgMTI4KSB7XG4gICAgICBvdXRbcCsrXSA9IGNcbiAgICB9IGVsc2UgaWYgKGMgPCAyMDQ4KSB7XG4gICAgICBvdXRbcCsrXSA9IChjID4+IDYpIHwgMTkyXG4gICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4XG4gICAgfSBlbHNlIGlmIChcbiAgICAgICgoYyAmIDB4RkMwMCkgPT09IDB4RDgwMCkgJiYgKGkgKyAxKSA8IHN0ci5sZW5ndGggJiZcbiAgICAgICgoc3RyLmNoYXJDb2RlQXQoaSArIDEpICYgMHhGQzAwKSA9PT0gMHhEQzAwKSkge1xuICAgICAgLy8gU3Vycm9nYXRlIFBhaXJcbiAgICAgIGMgPSAweDEwMDAwICsgKChjICYgMHgwM0ZGKSA8PCAxMCkgKyAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4MDNGRilcbiAgICAgIG91dFtwKytdID0gKGMgPj4gMTgpIHwgMjQwXG4gICAgICBvdXRbcCsrXSA9ICgoYyA+PiAxMikgJiA2MykgfCAxMjhcbiAgICAgIG91dFtwKytdID0gKChjID4+IDYpICYgNjMpIHwgMTI4XG4gICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dFtwKytdID0gKGMgPj4gMTIpIHwgMjI0XG4gICAgICBvdXRbcCsrXSA9ICgoYyA+PiA2KSAmIDYzKSB8IDEyOFxuICAgICAgb3V0W3ArK10gPSAoYyAmIDYzKSB8IDEyOFxuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0XG59XG5cbi8vIFRoZSBiZWxvdyBjb2RlIGlzIG1vc3RseSB0YWtlbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyXG4vLyBMaWNlbnNlZCBNSVQuIENvcHlyaWdodCAoYykgRmVyb3NzIEFib3VraGFkaWplaFxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnVmXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKiBAcGFyYW0ge251bWJlcn0gZW5kXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiB1dGY4U2xpY2UgKGJ1Ziwgb2Zmc2V0LCBlbmQpIHtcbiAgY29uc3QgcmVzID0gW11cblxuICB3aGlsZSAob2Zmc2V0IDwgZW5kKSB7XG4gICAgY29uc3QgZmlyc3RCeXRlID0gYnVmW29mZnNldF1cbiAgICBsZXQgY29kZVBvaW50ID0gbnVsbFxuICAgIGxldCBieXRlc1BlclNlcXVlbmNlID0gKGZpcnN0Qnl0ZSA+IDB4ZWYpID8gNCA6IChmaXJzdEJ5dGUgPiAweGRmKSA/IDMgOiAoZmlyc3RCeXRlID4gMHhiZikgPyAyIDogMVxuXG4gICAgaWYgKG9mZnNldCArIGJ5dGVzUGVyU2VxdWVuY2UgPD0gZW5kKSB7XG4gICAgICBsZXQgc2Vjb25kQnl0ZSwgdGhpcmRCeXRlLCBmb3VydGhCeXRlLCB0ZW1wQ29kZVBvaW50XG5cbiAgICAgIHN3aXRjaCAoYnl0ZXNQZXJTZXF1ZW5jZSkge1xuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgaWYgKGZpcnN0Qnl0ZSA8IDB4ODApIHtcbiAgICAgICAgICAgIGNvZGVQb2ludCA9IGZpcnN0Qnl0ZVxuICAgICAgICAgIH1cbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgc2Vjb25kQnl0ZSA9IGJ1ZltvZmZzZXQgKyAxXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4YzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4MWYpIDw8IDB4NiB8IChzZWNvbmRCeXRlICYgMHgzZilcbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHg3Zikge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW29mZnNldCArIDFdXG4gICAgICAgICAgdGhpcmRCeXRlID0gYnVmW29mZnNldCArIDJdXG4gICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhjMCkgPT09IDB4ODAgJiYgKHRoaXJkQnl0ZSAmIDB4YzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4ZikgPDwgMHhjIHwgKHNlY29uZEJ5dGUgJiAweDNmKSA8PCAweDYgfCAodGhpcmRCeXRlICYgMHgzZilcbiAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHg3ZmYgJiYgKHRlbXBDb2RlUG9pbnQgPCAweGQ4MDAgfHwgdGVtcENvZGVQb2ludCA+IDB4ZGZmZikpIHtcbiAgICAgICAgICAgICAgY29kZVBvaW50ID0gdGVtcENvZGVQb2ludFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgc2Vjb25kQnl0ZSA9IGJ1ZltvZmZzZXQgKyAxXVxuICAgICAgICAgIHRoaXJkQnl0ZSA9IGJ1ZltvZmZzZXQgKyAyXVxuICAgICAgICAgIGZvdXJ0aEJ5dGUgPSBidWZbb2Zmc2V0ICsgM11cbiAgICAgICAgICBpZiAoKHNlY29uZEJ5dGUgJiAweGMwKSA9PT0gMHg4MCAmJiAodGhpcmRCeXRlICYgMHhjMCkgPT09IDB4ODAgJiYgKGZvdXJ0aEJ5dGUgJiAweGMwKSA9PT0gMHg4MCkge1xuICAgICAgICAgICAgdGVtcENvZGVQb2ludCA9IChmaXJzdEJ5dGUgJiAweGYpIDw8IDB4MTIgfCAoc2Vjb25kQnl0ZSAmIDB4M2YpIDw8IDB4YyB8ICh0aGlyZEJ5dGUgJiAweDNmKSA8PCAweDYgfCAoZm91cnRoQnl0ZSAmIDB4M2YpXG4gICAgICAgICAgICBpZiAodGVtcENvZGVQb2ludCA+IDB4ZmZmZiAmJiB0ZW1wQ29kZVBvaW50IDwgMHgxMTAwMDApIHtcbiAgICAgICAgICAgICAgY29kZVBvaW50ID0gdGVtcENvZGVQb2ludFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBjOCBpZ25vcmUgbmV4dCA1ICovXG4gICAgaWYgKGNvZGVQb2ludCA9PT0gbnVsbCkge1xuICAgICAgLy8gd2UgZGlkIG5vdCBnZW5lcmF0ZSBhIHZhbGlkIGNvZGVQb2ludCBzbyBpbnNlcnQgYVxuICAgICAgLy8gcmVwbGFjZW1lbnQgY2hhciAoVStGRkZEKSBhbmQgYWR2YW5jZSBvbmx5IDEgYnl0ZVxuICAgICAgY29kZVBvaW50ID0gMHhmZmZkXG4gICAgICBieXRlc1BlclNlcXVlbmNlID0gMVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50ID4gMHhmZmZmKSB7XG4gICAgICAvLyBlbmNvZGUgdG8gdXRmMTYgKHN1cnJvZ2F0ZSBwYWlyIGRhbmNlKVxuICAgICAgY29kZVBvaW50IC09IDB4MTAwMDBcbiAgICAgIHJlcy5wdXNoKGNvZGVQb2ludCA+Pj4gMTAgJiAweDNmZiB8IDB4ZDgwMClcbiAgICAgIGNvZGVQb2ludCA9IDB4ZGMwMCB8IGNvZGVQb2ludCAmIDB4M2ZmXG4gICAgfVxuXG4gICAgcmVzLnB1c2goY29kZVBvaW50KVxuICAgIG9mZnNldCArPSBieXRlc1BlclNlcXVlbmNlXG4gIH1cblxuICByZXR1cm4gZGVjb2RlQ29kZVBvaW50c0FycmF5KHJlcylcbn1cblxuLy8gQmFzZWQgb24gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjI3NDcyNzIvNjgwNzQyLCB0aGUgYnJvd3NlciB3aXRoXG4vLyB0aGUgbG93ZXN0IGxpbWl0IGlzIENocm9tZSwgd2l0aCAweDEwMDAwIGFyZ3MuXG4vLyBXZSBnbyAxIG1hZ25pdHVkZSBsZXNzLCBmb3Igc2FmZXR5XG5jb25zdCBNQVhfQVJHVU1FTlRTX0xFTkdUSCA9IDB4MTAwMFxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyW119IGNvZGVQb2ludHNcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkgKGNvZGVQb2ludHMpIHtcbiAgY29uc3QgbGVuID0gY29kZVBvaW50cy5sZW5ndGhcbiAgaWYgKGxlbiA8PSBNQVhfQVJHVU1FTlRTX0xFTkdUSCkge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZywgY29kZVBvaW50cykgLy8gYXZvaWQgZXh0cmEgc2xpY2UoKVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDEwICovXG4gIC8vIERlY29kZSBpbiBjaHVua3MgdG8gYXZvaWQgXCJjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWRcIi5cbiAgbGV0IHJlcyA9ICcnXG4gIGxldCBpID0gMFxuICB3aGlsZSAoaSA8IGxlbikge1xuICAgIHJlcyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFxuICAgICAgU3RyaW5nLFxuICAgICAgY29kZVBvaW50cy5zbGljZShpLCBpICs9IE1BWF9BUkdVTUVOVFNfTEVOR1RIKVxuICAgIClcbiAgfVxuICByZXR1cm4gcmVzXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/byte-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnoughData: () => (/* binding */ assertEnoughData),\n/* harmony export */   decodeErrPrefix: () => (/* binding */ decodeErrPrefix),\n/* harmony export */   encodeErrPrefix: () => (/* binding */ encodeErrPrefix),\n/* harmony export */   uintMinorPrefixBytes: () => (/* binding */ uintMinorPrefixBytes)\n/* harmony export */ });\nconst decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvY29tbW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixpQkFBaUI7QUFDeEM7QUFDQTs7QUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2NvbW1vbi5qcz84Y2I4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRlY29kZUVyclByZWZpeCA9ICdDQk9SIGRlY29kZSBlcnJvcjonXG5jb25zdCBlbmNvZGVFcnJQcmVmaXggPSAnQ0JPUiBlbmNvZGUgZXJyb3I6J1xuXG5jb25zdCB1aW50TWlub3JQcmVmaXhCeXRlcyA9IFtdXG51aW50TWlub3JQcmVmaXhCeXRlc1syM10gPSAxXG51aW50TWlub3JQcmVmaXhCeXRlc1syNF0gPSAyXG51aW50TWlub3JQcmVmaXhCeXRlc1syNV0gPSAzXG51aW50TWlub3JQcmVmaXhCeXRlc1syNl0gPSA1XG51aW50TWlub3JQcmVmaXhCeXRlc1syN10gPSA5XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbmVlZFxuICovXG5mdW5jdGlvbiBhc3NlcnRFbm91Z2hEYXRhIChkYXRhLCBwb3MsIG5lZWQpIHtcbiAgaWYgKGRhdGEubGVuZ3RoIC0gcG9zIDwgbmVlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IG5vdCBlbm91Z2ggZGF0YSBmb3IgdHlwZWApXG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgZGVjb2RlRXJyUHJlZml4LFxuICBlbmNvZGVFcnJQcmVmaXgsXG4gIHVpbnRNaW5vclByZWZpeEJ5dGVzLFxuICBhc3NlcnRFbm91Z2hEYXRhXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/decode.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/decode.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokeniser: () => (/* binding */ Tokeniser),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   tokensToObject: () => (/* binding */ tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/jump.js\");\n\n\n\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = _jump_js__WEBPACK_IMPORTED_MODULE_2__.quick[byt]\n    if (token === undefined) {\n      const decoder = _jump_js__WEBPACK_IMPORTED_MODULE_2__.jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/encode.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/encode.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ref: () => (/* binding */ Ref),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeCustom: () => (/* binding */ encodeCustom),\n/* harmony export */   makeCborEncoders: () => (/* binding */ makeCborEncoders),\n/* harmony export */   objectToTokens: () => (/* binding */ objectToTokens)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/is.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _bl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bl.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/bl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/jump.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/7float.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_4__.quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nfunction makeCborEncoders () {\n  const encoders = []\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint.major] = _0uint_js__WEBPACK_IMPORTED_MODULE_6__.encodeUint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint.major] = _1negint_js__WEBPACK_IMPORTED_MODULE_7__.encodeNegint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes.major] = _2bytes_js__WEBPACK_IMPORTED_MODULE_8__.encodeBytes\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string.major] = _3string_js__WEBPACK_IMPORTED_MODULE_9__.encodeString\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array.major] = _4array_js__WEBPACK_IMPORTED_MODULE_10__.encodeArray\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map.major] = _5map_js__WEBPACK_IMPORTED_MODULE_11__.encodeMap\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag.major] = _6tag_js__WEBPACK_IMPORTED_MODULE_12__.encodeTag\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float.major] = _7float_js__WEBPACK_IMPORTED_MODULE_13__.encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null),\n  undefined: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.undefined, undefined),\n  true: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true),\n  false: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false),\n  emptyArray: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, 0),\n  emptyMap: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, obj)\n    } else if (obj >= 0) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.is)(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_5__.asU8A)(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvZW5jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEI7QUFDWTtBQUNaO0FBQ2lCO0FBQ0Q7QUFDTDs7QUFFQTtBQUNJO0FBQ0Y7QUFDRTtBQUNGO0FBQ0o7QUFDQTtBQUNJOztBQUV6QztBQUNBLGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsNENBQTRDO0FBQ3pELGFBQWEsa0NBQWtDO0FBQy9DLGFBQWEsMENBQTBDO0FBQ3ZELGFBQWEseUNBQXlDO0FBQ3RELGFBQWEsNENBQTRDO0FBQ3pEOztBQUVBLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7O0FBRUEsY0FBYyxvQkFBb0I7QUFDM0I7QUFDUDtBQUNBLFdBQVcsMkNBQUksZUFBZSxpREFBVTtBQUN4QyxXQUFXLDJDQUFJLGlCQUFpQixxREFBWTtBQUM1QyxXQUFXLDJDQUFJLGdCQUFnQixtREFBVztBQUMxQyxXQUFXLDJDQUFJLGlCQUFpQixxREFBWTtBQUM1QyxXQUFXLDJDQUFJLGdCQUFnQixvREFBVztBQUMxQyxXQUFXLDJDQUFJLGNBQWMsZ0RBQVM7QUFDdEMsV0FBVywyQ0FBSSxjQUFjLGdEQUFTO0FBQ3RDLFdBQVcsMkNBQUksZ0JBQWdCLG9EQUFXO0FBQzFDO0FBQ0E7O0FBRUE7O0FBRUEsZ0JBQWdCLHNDQUFFOztBQUVsQixpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0EsYUFBYSxjQUFjO0FBQzNCLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGNBQWM7QUFDM0IsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQyxhQUFhLGNBQWM7QUFDM0IsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1REFBZSxFQUFFO0FBQzFDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3RCLGlCQUFpQiw0Q0FBSyxDQUFDLDJDQUFJO0FBQzNCLFlBQVksNENBQUssQ0FBQywyQ0FBSTtBQUN0QixhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkIsa0JBQWtCLDRDQUFLLENBQUMsMkNBQUk7QUFDNUIsZ0JBQWdCLDRDQUFLLENBQUMsMkNBQUk7QUFDMUI7O0FBRUEsWUFBWSx3Q0FBd0M7QUFDcEQ7QUFDQTtBQUNBLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckIsYUFBYSxlQUFlO0FBQzVCLGFBQWEsV0FBVztBQUN4QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRDQUFLLENBQUMsMkNBQUk7QUFDM0IsTUFBTTtBQUNOLGlCQUFpQiw0Q0FBSyxDQUFDLDJDQUFJO0FBQzNCLE1BQU07QUFDTixpQkFBaUIsNENBQUssQ0FBQywyQ0FBSTtBQUMzQjtBQUNBLEdBQUc7O0FBRUg7QUFDQSxhQUFhLEtBQUs7QUFDbEIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsZUFBZTtBQUM1QixhQUFhLFdBQVc7QUFDeEIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw0Q0FBSyxDQUFDLDJDQUFJO0FBQzNCLE1BQU07QUFDTixpQkFBaUIsNENBQUssQ0FBQywyQ0FBSTtBQUMzQjtBQUNBLEdBQUc7O0FBRUg7QUFDQSxhQUFhLEtBQUs7QUFDbEIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsZUFBZTtBQUM1QixhQUFhLFdBQVc7QUFDeEIsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlLDRDQUFLLENBQUMsMkNBQUk7QUFDekIsR0FBRzs7QUFFSDtBQUNBLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckIsYUFBYSxlQUFlO0FBQzVCLGFBQWEsV0FBVztBQUN4QixlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWUsNENBQUssQ0FBQywyQ0FBSTtBQUN6QixHQUFHOztBQUVIO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUIsYUFBYSxXQUFXO0FBQ3hCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUIsYUFBYSxXQUFXO0FBQ3hCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUIsYUFBYSxXQUFXO0FBQ3hCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUIsYUFBYSxXQUFXO0FBQ3hCLGVBQWU7QUFDZjtBQUNBO0FBQ0EsZUFBZSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3pCLEdBQUc7O0FBRUg7QUFDQSxhQUFhLEtBQUs7QUFDbEIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsZUFBZTtBQUM1QixhQUFhLFdBQVc7QUFDeEIsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlLDRDQUFLLENBQUMsMkNBQUk7QUFDekIsR0FBRzs7QUFFSDtBQUNBLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckIsYUFBYSxlQUFlO0FBQzVCLGFBQWEsV0FBVztBQUN4QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsNENBQUssQ0FBQywyQ0FBSTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0Q0FBSyxDQUFDLDJDQUFJLGtDQUFrQyw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3hFO0FBQ0EsZ0JBQWdCLDRDQUFLLENBQUMsMkNBQUk7QUFDMUIsR0FBRzs7QUFFSDtBQUNBLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckIsYUFBYSxlQUFlO0FBQzVCLGFBQWEsV0FBVztBQUN4QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLDRDQUFLLENBQUMsMkNBQUk7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0Q0FBSyxDQUFDLDJDQUFJLDRCQUE0Qiw0Q0FBSyxDQUFDLDJDQUFJO0FBQ2xFO0FBQ0EsZ0JBQWdCLDRDQUFLLENBQUMsMkNBQUk7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsSUFBSTtBQUN0Qjs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixXQUFXLGVBQWU7QUFDMUIsV0FBVyxXQUFXO0FBQ3RCLGFBQWE7QUFDYjtBQUNBLDBDQUEwQztBQUMxQyxjQUFjLDBDQUFFO0FBQ2hCLDJFQUEyRSxxQkFBcUI7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1REFBZSxFQUFFLG9CQUFvQixJQUFJO0FBQ2hFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsdUJBQXVCO0FBQ2xDLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLG1CQUFtQjtBQUM5QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcscUJBQXFCO0FBQ2hDLFdBQVcsb0JBQW9CO0FBQy9CLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLFdBQVcsb0JBQW9CO0FBQy9CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzQ0FBRTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSxRQUFRO0FBQy9FO0FBQ0EsYUFBYSxxREFBSztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7O0FBRW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvZW5jb2RlLmpzPzc4YjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXMgfSBmcm9tICcuL2lzLmpzJ1xuaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0IHsgQmwgfSBmcm9tICcuL2JsLmpzJ1xuaW1wb3J0IHsgZW5jb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5pbXBvcnQgeyBxdWlja0VuY29kZVRva2VuIH0gZnJvbSAnLi9qdW1wLmpzJ1xuaW1wb3J0IHsgYXNVOEEgfSBmcm9tICcuL2J5dGUtdXRpbHMuanMnXG5cbmltcG9ydCB7IGVuY29kZVVpbnQgfSBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZW5jb2RlTmVnaW50IH0gZnJvbSAnLi8xbmVnaW50LmpzJ1xuaW1wb3J0IHsgZW5jb2RlQnl0ZXMgfSBmcm9tICcuLzJieXRlcy5qcydcbmltcG9ydCB7IGVuY29kZVN0cmluZyB9IGZyb20gJy4vM3N0cmluZy5qcydcbmltcG9ydCB7IGVuY29kZUFycmF5IH0gZnJvbSAnLi80YXJyYXkuanMnXG5pbXBvcnQgeyBlbmNvZGVNYXAgfSBmcm9tICcuLzVtYXAuanMnXG5pbXBvcnQgeyBlbmNvZGVUYWcgfSBmcm9tICcuLzZ0YWcuanMnXG5pbXBvcnQgeyBlbmNvZGVGbG9hdCB9IGZyb20gJy4vN2Zsb2F0LmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkVuY29kZU9wdGlvbnN9IEVuY29kZU9wdGlvbnNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLk9wdGlvbmFsVHlwZUVuY29kZXJ9IE9wdGlvbmFsVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLlJlZmVyZW5jZX0gUmVmZXJlbmNlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5TdHJpY3RUeXBlRW5jb2Rlcn0gU3RyaWN0VHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLlRva2VuVHlwZUVuY29kZXJ9IFRva2VuVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLlRva2VuT3JOZXN0ZWRUb2tlbnN9IFRva2VuT3JOZXN0ZWRUb2tlbnNcbiAqL1xuXG4vKiogQHR5cGUge0VuY29kZU9wdGlvbnN9ICovXG5jb25zdCBkZWZhdWx0RW5jb2RlT3B0aW9ucyA9IHtcbiAgZmxvYXQ2NDogZmFsc2UsXG4gIG1hcFNvcnRlcixcbiAgcXVpY2tFbmNvZGVUb2tlblxufVxuXG4vKiogQHJldHVybnMge1Rva2VuVHlwZUVuY29kZXJbXX0gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYWtlQ2JvckVuY29kZXJzICgpIHtcbiAgY29uc3QgZW5jb2RlcnMgPSBbXVxuICBlbmNvZGVyc1tUeXBlLnVpbnQubWFqb3JdID0gZW5jb2RlVWludFxuICBlbmNvZGVyc1tUeXBlLm5lZ2ludC5tYWpvcl0gPSBlbmNvZGVOZWdpbnRcbiAgZW5jb2RlcnNbVHlwZS5ieXRlcy5tYWpvcl0gPSBlbmNvZGVCeXRlc1xuICBlbmNvZGVyc1tUeXBlLnN0cmluZy5tYWpvcl0gPSBlbmNvZGVTdHJpbmdcbiAgZW5jb2RlcnNbVHlwZS5hcnJheS5tYWpvcl0gPSBlbmNvZGVBcnJheVxuICBlbmNvZGVyc1tUeXBlLm1hcC5tYWpvcl0gPSBlbmNvZGVNYXBcbiAgZW5jb2RlcnNbVHlwZS50YWcubWFqb3JdID0gZW5jb2RlVGFnXG4gIGVuY29kZXJzW1R5cGUuZmxvYXQubWFqb3JdID0gZW5jb2RlRmxvYXRcbiAgcmV0dXJuIGVuY29kZXJzXG59XG5cbmNvbnN0IGNib3JFbmNvZGVycyA9IG1ha2VDYm9yRW5jb2RlcnMoKVxuXG5jb25zdCBidWYgPSBuZXcgQmwoKVxuXG4vKiogQGltcGxlbWVudHMge1JlZmVyZW5jZX0gKi9cbmNsYXNzIFJlZiB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge29iamVjdHxhbnlbXX0gb2JqXG4gICAqIEBwYXJhbSB7UmVmZXJlbmNlfHVuZGVmaW5lZH0gcGFyZW50XG4gICAqL1xuICBjb25zdHJ1Y3RvciAob2JqLCBwYXJlbnQpIHtcbiAgICB0aGlzLm9iaiA9IG9ialxuICAgIHRoaXMucGFyZW50ID0gcGFyZW50XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtvYmplY3R8YW55W119IG9ialxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICovXG4gIGluY2x1ZGVzIChvYmopIHtcbiAgICAvKiogQHR5cGUge1JlZmVyZW5jZXx1bmRlZmluZWR9ICovXG4gICAgbGV0IHAgPSB0aGlzXG4gICAgZG8ge1xuICAgICAgaWYgKHAub2JqID09PSBvYmopIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICB9IHdoaWxlIChwID0gcC5wYXJlbnQpIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1JlZmVyZW5jZXx1bmRlZmluZWR9IHN0YWNrXG4gICAqIEBwYXJhbSB7b2JqZWN0fGFueVtdfSBvYmpcbiAgICogQHJldHVybnMge1JlZmVyZW5jZX1cbiAgICovXG4gIHN0YXRpYyBjcmVhdGVDaGVjayAoc3RhY2ssIG9iaikge1xuICAgIGlmIChzdGFjayAmJiBzdGFjay5pbmNsdWRlcyhvYmopKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZW5jb2RlRXJyUHJlZml4fSBvYmplY3QgY29udGFpbnMgY2lyY3VsYXIgcmVmZXJlbmNlc2ApXG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVmKG9iaiwgc3RhY2spXG4gIH1cbn1cblxuY29uc3Qgc2ltcGxlVG9rZW5zID0ge1xuICBudWxsOiBuZXcgVG9rZW4oVHlwZS5udWxsLCBudWxsKSxcbiAgdW5kZWZpbmVkOiBuZXcgVG9rZW4oVHlwZS51bmRlZmluZWQsIHVuZGVmaW5lZCksXG4gIHRydWU6IG5ldyBUb2tlbihUeXBlLnRydWUsIHRydWUpLFxuICBmYWxzZTogbmV3IFRva2VuKFR5cGUuZmFsc2UsIGZhbHNlKSxcbiAgZW1wdHlBcnJheTogbmV3IFRva2VuKFR5cGUuYXJyYXksIDApLFxuICBlbXB0eU1hcDogbmV3IFRva2VuKFR5cGUubWFwLCAwKVxufVxuXG4vKiogQHR5cGUge3tbdHlwZU5hbWU6IHN0cmluZ106IFN0cmljdFR5cGVFbmNvZGVyfX0gKi9cbmNvbnN0IHR5cGVFbmNvZGVycyA9IHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7YW55fSBvYmpcbiAgICogQHBhcmFtIHtzdHJpbmd9IF90eXBcbiAgICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICAgKiBAcGFyYW0ge1JlZmVyZW5jZX0gW19yZWZTdGFja11cbiAgICogQHJldHVybnMge1Rva2VuT3JOZXN0ZWRUb2tlbnN9XG4gICAqL1xuICBudW1iZXIgKG9iaiwgX3R5cCwgX29wdGlvbnMsIF9yZWZTdGFjaykge1xuICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihvYmopIHx8ICFOdW1iZXIuaXNTYWZlSW50ZWdlcihvYmopKSB7XG4gICAgICByZXR1cm4gbmV3IFRva2VuKFR5cGUuZmxvYXQsIG9iailcbiAgICB9IGVsc2UgaWYgKG9iaiA+PSAwKSB7XG4gICAgICByZXR1cm4gbmV3IFRva2VuKFR5cGUudWludCwgb2JqKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCBvYmopXG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2FueX0gb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBfdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gX29wdGlvbnNcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V9IFtfcmVmU3RhY2tdXG4gICAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICAgKi9cbiAgYmlnaW50IChvYmosIF90eXAsIF9vcHRpb25zLCBfcmVmU3RhY2spIHtcbiAgICBpZiAob2JqID49IEJpZ0ludCgwKSkge1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnVpbnQsIG9iailcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgb2JqKVxuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IG9ialxuICAgKiBAcGFyYW0ge3N0cmluZ30gX3R5cFxuICAgKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gICAqIEBwYXJhbSB7UmVmZXJlbmNlfSBbX3JlZlN0YWNrXVxuICAgKiBAcmV0dXJucyB7VG9rZW5Pck5lc3RlZFRva2Vuc31cbiAgICovXG4gIFVpbnQ4QXJyYXkgKG9iaiwgX3R5cCwgX29wdGlvbnMsIF9yZWZTdGFjaykge1xuICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS5ieXRlcywgb2JqKVxuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2FueX0gb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBfdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gX29wdGlvbnNcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V9IFtfcmVmU3RhY2tdXG4gICAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICAgKi9cbiAgc3RyaW5nIChvYmosIF90eXAsIF9vcHRpb25zLCBfcmVmU3RhY2spIHtcbiAgICByZXR1cm4gbmV3IFRva2VuKFR5cGUuc3RyaW5nLCBvYmopXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7YW55fSBvYmpcbiAgICogQHBhcmFtIHtzdHJpbmd9IF90eXBcbiAgICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICAgKiBAcGFyYW0ge1JlZmVyZW5jZX0gW19yZWZTdGFja11cbiAgICogQHJldHVybnMge1Rva2VuT3JOZXN0ZWRUb2tlbnN9XG4gICAqL1xuICBib29sZWFuIChvYmosIF90eXAsIF9vcHRpb25zLCBfcmVmU3RhY2spIHtcbiAgICByZXR1cm4gb2JqID8gc2ltcGxlVG9rZW5zLnRydWUgOiBzaW1wbGVUb2tlbnMuZmFsc2VcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IF9vYmpcbiAgICogQHBhcmFtIHtzdHJpbmd9IF90eXBcbiAgICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICAgKiBAcGFyYW0ge1JlZmVyZW5jZX0gW19yZWZTdGFja11cbiAgICogQHJldHVybnMge1Rva2VuT3JOZXN0ZWRUb2tlbnN9XG4gICAqL1xuICBudWxsIChfb2JqLCBfdHlwLCBfb3B0aW9ucywgX3JlZlN0YWNrKSB7XG4gICAgcmV0dXJuIHNpbXBsZVRva2Vucy5udWxsXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7YW55fSBfb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBfdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gX29wdGlvbnNcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V9IFtfcmVmU3RhY2tdXG4gICAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICAgKi9cbiAgdW5kZWZpbmVkIChfb2JqLCBfdHlwLCBfb3B0aW9ucywgX3JlZlN0YWNrKSB7XG4gICAgcmV0dXJuIHNpbXBsZVRva2Vucy51bmRlZmluZWRcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IG9ialxuICAgKiBAcGFyYW0ge3N0cmluZ30gX3R5cFxuICAgKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gICAqIEBwYXJhbSB7UmVmZXJlbmNlfSBbX3JlZlN0YWNrXVxuICAgKiBAcmV0dXJucyB7VG9rZW5Pck5lc3RlZFRva2Vuc31cbiAgICovXG4gIEFycmF5QnVmZmVyIChvYmosIF90eXAsIF9vcHRpb25zLCBfcmVmU3RhY2spIHtcbiAgICByZXR1cm4gbmV3IFRva2VuKFR5cGUuYnl0ZXMsIG5ldyBVaW50OEFycmF5KG9iaikpXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7YW55fSBvYmpcbiAgICogQHBhcmFtIHtzdHJpbmd9IF90eXBcbiAgICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICAgKiBAcGFyYW0ge1JlZmVyZW5jZX0gW19yZWZTdGFja11cbiAgICogQHJldHVybnMge1Rva2VuT3JOZXN0ZWRUb2tlbnN9XG4gICAqL1xuICBEYXRhVmlldyAob2JqLCBfdHlwLCBfb3B0aW9ucywgX3JlZlN0YWNrKSB7XG4gICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmJ5dGVzLCBuZXcgVWludDhBcnJheShvYmouYnVmZmVyLCBvYmouYnl0ZU9mZnNldCwgb2JqLmJ5dGVMZW5ndGgpKVxuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2FueX0gb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBfdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1JlZmVyZW5jZX0gW3JlZlN0YWNrXVxuICAgKiBAcmV0dXJucyB7VG9rZW5Pck5lc3RlZFRva2Vuc31cbiAgICovXG4gIEFycmF5IChvYmosIF90eXAsIG9wdGlvbnMsIHJlZlN0YWNrKSB7XG4gICAgaWYgKCFvYmoubGVuZ3RoKSB7XG4gICAgICBpZiAob3B0aW9ucy5hZGRCcmVha1Rva2VucyA9PT0gdHJ1ZSkge1xuICAgICAgICByZXR1cm4gW3NpbXBsZVRva2Vucy5lbXB0eUFycmF5LCBuZXcgVG9rZW4oVHlwZS5icmVhayldXG4gICAgICB9XG4gICAgICByZXR1cm4gc2ltcGxlVG9rZW5zLmVtcHR5QXJyYXlcbiAgICB9XG4gICAgcmVmU3RhY2sgPSBSZWYuY3JlYXRlQ2hlY2socmVmU3RhY2ssIG9iailcbiAgICBjb25zdCBlbnRyaWVzID0gW11cbiAgICBsZXQgaSA9IDBcbiAgICBmb3IgKGNvbnN0IGUgb2Ygb2JqKSB7XG4gICAgICBlbnRyaWVzW2krK10gPSBvYmplY3RUb1Rva2VucyhlLCBvcHRpb25zLCByZWZTdGFjaylcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuYWRkQnJlYWtUb2tlbnMpIHtcbiAgICAgIHJldHVybiBbbmV3IFRva2VuKFR5cGUuYXJyYXksIG9iai5sZW5ndGgpLCBlbnRyaWVzLCBuZXcgVG9rZW4oVHlwZS5icmVhayldXG4gICAgfVxuICAgIHJldHVybiBbbmV3IFRva2VuKFR5cGUuYXJyYXksIG9iai5sZW5ndGgpLCBlbnRyaWVzXVxuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2FueX0gb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBcbiAgICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBvcHRpb25zXG4gICAqIEBwYXJhbSB7UmVmZXJlbmNlfSBbcmVmU3RhY2tdXG4gICAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICAgKi9cbiAgT2JqZWN0IChvYmosIHR5cCwgb3B0aW9ucywgcmVmU3RhY2spIHtcbiAgICAvLyBjb3VsZCBiZSBhbiBPYmplY3Qgb3IgYSBNYXBcbiAgICBjb25zdCBpc01hcCA9IHR5cCAhPT0gJ09iamVjdCdcbiAgICAvLyBpdCdzIHNsaWdodGx5IHF1aWNrZXIgdG8gdXNlIE9iamVjdC5rZXlzKCkgdGhhbiBPYmplY3QuZW50cmllcygpXG4gICAgY29uc3Qga2V5cyA9IGlzTWFwID8gb2JqLmtleXMoKSA6IE9iamVjdC5rZXlzKG9iailcbiAgICBjb25zdCBsZW5ndGggPSBpc01hcCA/IG9iai5zaXplIDoga2V5cy5sZW5ndGhcbiAgICBpZiAoIWxlbmd0aCkge1xuICAgICAgaWYgKG9wdGlvbnMuYWRkQnJlYWtUb2tlbnMgPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIFtzaW1wbGVUb2tlbnMuZW1wdHlNYXAsIG5ldyBUb2tlbihUeXBlLmJyZWFrKV1cbiAgICAgIH1cbiAgICAgIHJldHVybiBzaW1wbGVUb2tlbnMuZW1wdHlNYXBcbiAgICB9XG4gICAgcmVmU3RhY2sgPSBSZWYuY3JlYXRlQ2hlY2socmVmU3RhY2ssIG9iailcbiAgICAvKiogQHR5cGUge1Rva2VuT3JOZXN0ZWRUb2tlbnNbXX0gKi9cbiAgICBjb25zdCBlbnRyaWVzID0gW11cbiAgICBsZXQgaSA9IDBcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG4gICAgICBlbnRyaWVzW2krK10gPSBbXG4gICAgICAgIG9iamVjdFRvVG9rZW5zKGtleSwgb3B0aW9ucywgcmVmU3RhY2spLFxuICAgICAgICBvYmplY3RUb1Rva2Vucyhpc01hcCA/IG9iai5nZXQoa2V5KSA6IG9ialtrZXldLCBvcHRpb25zLCByZWZTdGFjaylcbiAgICAgIF1cbiAgICB9XG4gICAgc29ydE1hcEVudHJpZXMoZW50cmllcywgb3B0aW9ucylcbiAgICBpZiAob3B0aW9ucy5hZGRCcmVha1Rva2Vucykge1xuICAgICAgcmV0dXJuIFtuZXcgVG9rZW4oVHlwZS5tYXAsIGxlbmd0aCksIGVudHJpZXMsIG5ldyBUb2tlbihUeXBlLmJyZWFrKV1cbiAgICB9XG4gICAgcmV0dXJuIFtuZXcgVG9rZW4oVHlwZS5tYXAsIGxlbmd0aCksIGVudHJpZXNdXG4gIH1cbn1cblxudHlwZUVuY29kZXJzLk1hcCA9IHR5cGVFbmNvZGVycy5PYmplY3RcbnR5cGVFbmNvZGVycy5CdWZmZXIgPSB0eXBlRW5jb2RlcnMuVWludDhBcnJheVxuZm9yIChjb25zdCB0eXAgb2YgJ1VpbnQ4Q2xhbXBlZCBVaW50MTYgVWludDMyIEludDggSW50MTYgSW50MzIgQmlnVWludDY0IEJpZ0ludDY0IEZsb2F0MzIgRmxvYXQ2NCcuc3BsaXQoJyAnKSkge1xuICB0eXBlRW5jb2RlcnNbYCR7dHlwfUFycmF5YF0gPSB0eXBlRW5jb2RlcnMuRGF0YVZpZXdcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gb2JqXG4gKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IFtvcHRpb25zXVxuICogQHBhcmFtIHtSZWZlcmVuY2V9IFtyZWZTdGFja11cbiAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICovXG5mdW5jdGlvbiBvYmplY3RUb1Rva2VucyAob2JqLCBvcHRpb25zID0ge30sIHJlZlN0YWNrKSB7XG4gIGNvbnN0IHR5cCA9IGlzKG9iailcbiAgY29uc3QgY3VzdG9tVHlwZUVuY29kZXIgPSAob3B0aW9ucyAmJiBvcHRpb25zLnR5cGVFbmNvZGVycyAmJiAvKiogQHR5cGUge09wdGlvbmFsVHlwZUVuY29kZXJ9ICovIG9wdGlvbnMudHlwZUVuY29kZXJzW3R5cF0pIHx8IHR5cGVFbmNvZGVyc1t0eXBdXG4gIGlmICh0eXBlb2YgY3VzdG9tVHlwZUVuY29kZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjb25zdCB0b2tlbnMgPSBjdXN0b21UeXBlRW5jb2RlcihvYmosIHR5cCwgb3B0aW9ucywgcmVmU3RhY2spXG4gICAgaWYgKHRva2VucyAhPSBudWxsKSB7XG4gICAgICByZXR1cm4gdG9rZW5zXG4gICAgfVxuICB9XG4gIGNvbnN0IHR5cGVFbmNvZGVyID0gdHlwZUVuY29kZXJzW3R5cF1cbiAgaWYgKCF0eXBlRW5jb2Rlcikge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtlbmNvZGVFcnJQcmVmaXh9IHVuc3VwcG9ydGVkIHR5cGU6ICR7dHlwfWApXG4gIH1cbiAgcmV0dXJuIHR5cGVFbmNvZGVyKG9iaiwgdHlwLCBvcHRpb25zLCByZWZTdGFjaylcbn1cblxuLypcbkNCT1Iga2V5IHNvcnRpbmcgaXMgYSBtZXNzLlxuXG5UaGUgY2Fub25pY2FsaXNhdGlvbiByZWNvbW1lbmRhdGlvbiBmcm9tIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3MDQ5I3NlY3Rpb24tMy45XG5pbmNsdWRlcyB0aGUgd29yZGluZzpcblxuPiBUaGUga2V5cyBpbiBldmVyeSBtYXAgbXVzdCBiZSBzb3J0ZWQgbG93ZXN0IHZhbHVlIHRvIGhpZ2hlc3QuXG4+IFNvcnRpbmcgaXMgcGVyZm9ybWVkIG9uIHRoZSBieXRlcyBvZiB0aGUgcmVwcmVzZW50YXRpb24gb2YgdGhlIGtleVxuPiBkYXRhIGl0ZW1zIHdpdGhvdXQgcGF5aW5nIGF0dGVudGlvbiB0byB0aGUgMy81IGJpdCBzcGxpdHRpbmcgZm9yXG4+IG1ham9yIHR5cGVzLlxuPiAuLi5cbj4gICogIElmIHR3byBrZXlzIGhhdmUgZGlmZmVyZW50IGxlbmd0aHMsIHRoZSBzaG9ydGVyIG9uZSBzb3J0c1xuICAgICAgZWFybGllcjtcbj4gICogIElmIHR3byBrZXlzIGhhdmUgdGhlIHNhbWUgbGVuZ3RoLCB0aGUgb25lIHdpdGggdGhlIGxvd2VyIHZhbHVlXG4gICAgICBpbiAoYnl0ZS13aXNlKSBsZXhpY2FsIG9yZGVyIHNvcnRzIGVhcmxpZXIuXG5cbjEuIEl0IGlzIG5vdCBjbGVhciB3aGF0IFwiYnl0ZXMgb2YgdGhlIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXlcIiBtZWFuczogaXMgaXRcbiAgIHRoZSBDQk9SIHJlcHJlc2VudGF0aW9uLCBvciB0aGUgYmluYXJ5IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBvYmplY3QgaXRzZWxmP1xuICAgQ29uc2lkZXIgdGhlIGludCBhbmQgdWludCBkaWZmZXJlbmNlIGhlcmUuXG4yLiBJdCBpcyBub3QgY2xlYXIgd2hhdCBcIndpdGhvdXQgcGF5aW5nIGF0dGVudGlvbiB0b1wiIG1lYW5zOiBkbyB3ZSBpbmNsdWRlIGl0XG4gICBhbmQgY29tcGFyZSBvbiB0aGF0PyBPciBkbyB3ZSBvbWl0IHRoZSBzcGVjaWFsIHByZWZpeCBieXRlLCAobW9zdGx5KSB0cmVhdGluZ1xuICAgdGhlIGtleSBpbiBpdHMgcGxhaW4gYmluYXJ5IHJlcHJlc2VudGF0aW9uIGZvcm0uXG5cblRoZSBGSURPIDIuMDogQ2xpZW50IFRvIEF1dGhlbnRpY2F0b3IgUHJvdG9jb2wgc3BlYyB0YWtlcyB0aGUgb3JpZ2luYWwgQ0JPUlxud29yZGluZyBhbmQgY2xhcmlmaWVzIGl0IGFjY29yZGluZyB0byB0aGVpciB1bmRlcnN0YW5kaW5nLlxuaHR0cHM6Ly9maWRvYWxsaWFuY2Uub3JnL3NwZWNzL2ZpZG8tdjIuMC1yZC0yMDE3MDkyNy9maWRvLWNsaWVudC10by1hdXRoZW50aWNhdG9yLXByb3RvY29sLXYyLjAtcmQtMjAxNzA5MjcuaHRtbCNtZXNzYWdlLWVuY29kaW5nXG5cbj4gVGhlIGtleXMgaW4gZXZlcnkgbWFwIG11c3QgYmUgc29ydGVkIGxvd2VzdCB2YWx1ZSB0byBoaWdoZXN0LiBTb3J0aW5nIGlzXG4+IHBlcmZvcm1lZCBvbiB0aGUgYnl0ZXMgb2YgdGhlIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXkgZGF0YSBpdGVtcyB3aXRob3V0XG4+IHBheWluZyBhdHRlbnRpb24gdG8gdGhlIDMvNSBiaXQgc3BsaXR0aW5nIGZvciBtYWpvciB0eXBlcy4gVGhlIHNvcnRpbmcgcnVsZXNcbj4gYXJlOlxuPiAgKiBJZiB0aGUgbWFqb3IgdHlwZXMgYXJlIGRpZmZlcmVudCwgdGhlIG9uZSB3aXRoIHRoZSBsb3dlciB2YWx1ZSBpbiBudW1lcmljYWxcbj4gICAgb3JkZXIgc29ydHMgZWFybGllci5cbj4gICogSWYgdHdvIGtleXMgaGF2ZSBkaWZmZXJlbnQgbGVuZ3RocywgdGhlIHNob3J0ZXIgb25lIHNvcnRzIGVhcmxpZXI7XG4+ICAqIElmIHR3byBrZXlzIGhhdmUgdGhlIHNhbWUgbGVuZ3RoLCB0aGUgb25lIHdpdGggdGhlIGxvd2VyIHZhbHVlIGluXG4+ICAgIChieXRlLXdpc2UpIGxleGljYWwgb3JkZXIgc29ydHMgZWFybGllci5cblxuU29tZSBvdGhlciBpbXBsZW1lbnRhdGlvbnMsIHN1Y2ggYXMgYm9yYywgZG8gYSBmdWxsIGVuY29kZSB0aGVuIGRvIGFcbmxlbmd0aC1maXJzdCwgYnl0ZS13aXNlLXNlY29uZCBjb21wYXJpc29uOlxuaHR0cHM6Ly9naXRodWIuY29tL2RpZ25pZmllZHF1aXJlL2JvcmMvYmxvYi9iNmJhZThiMGJjZGU3YzM5NzZiMGYwZjA5NTcyMDgwOTVjMzkyYTM2L3NyYy9lbmNvZGVyLmpzI0wzNThcbmh0dHBzOi8vZ2l0aHViLmNvbS9kaWduaWZpZWRxdWlyZS9ib3JjL2Jsb2IvYjZiYWU4YjBiY2RlN2MzOTc2YjBmMGYwOTU3MjA4MDk1YzM5MmEzNi9zcmMvdXRpbHMuanMjTDE0My1MMTUxXG5cblRoaXMgaGFzIHRoZSBiZW5lZml0IG9mIGJlaW5nIGFibGUgdG8gZWFzaWx5IGhhbmRsZSBhcmJpdHJhcnkga2V5cywgaW5jbHVkaW5nXG5jb21wbGV4IHR5cGVzIChtYXBzIGFuZCBhcnJheXMpLlxuXG5XZSdsbCBvcHQgZm9yIHRoZSBGSURPIGFwcHJvYWNoLCBzaW5jZSBpdCBhZmZvcmRzIHNvbWUgZWZmaWNpZXMgc2luY2Ugd2UgZG9uJ3Rcbm5lZWQgYSBmdWxsIGVuY29kZSBvZiBlYWNoIGtleSB0byBkZXRlcm1pbmUgb3JkZXIgYW5kIGNhbiBkZWZlciB0byB0aGUgdHlwZXNcbnRvIGRldGVybWluZSBob3cgdG8gbW9zdCBlZmZpY2llbnRseSBvcmRlciB0aGVpciB2YWx1ZXMgKGkuZS4gaW50IGFuZCB1aW50XG5vcmRlcmluZyBjYW4gYmUgZG9uZSBvbiB0aGUgbnVtYmVycywgbm8gbmVlZCBmb3IgYnl0ZS13aXNlLCBmb3IgZXhhbXBsZSkuXG5cblJlY29tbWVuZGF0aW9uOiBzdGljayB0byBzaW5nbGUga2V5IHR5cGVzIG9yIHlvdSdsbCBnZXQgaW50byB0cm91YmxlLCBhbmQgcHJlZmVyXG5zdHJpbmcga2V5cyBiZWNhdXNlIGl0J3MgbXVjaCBzaW1wbGVyIHRoYXQgd2F5LlxuKi9cblxuLypcbihVUERBVEUsIERlYyAyMDIwKVxuaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzg5NDkgaXMgdGhlIHVwZGF0ZWQgQ0JPUiBzcGVjIGFuZCBjbGFyaWZpZXMgc29tZVxub2YgdGhlIHF1ZXN0aW9ucyBhYm92ZSB3aXRoIGEgbmV3IHJlY29tbWVuZGF0aW9uIGZvciBzb3J0aW5nIG9yZGVyIGJlaW5nIG11Y2hcbmNsb3NlciB0byB3aGF0IHdvdWxkIGJlIGV4cGVjdGVkIGluIG90aGVyIGVudmlyb25tZW50cyAoaS5lLiBubyBsZW5ndGgtZmlyc3RcbndlaXJkbmVzcykuXG5UaGlzIG5ldyBzb3J0aW5nIG9yZGVyIGlzIG5vdCB5ZXQgaW1wbGVtZW50ZWQgaGVyZSBidXQgY291bGQgYmUgYWRkZWQgYXMgYW5cbm9wdGlvbi4gXCJEZXRlcm1pbmlzbVwiIChjYW5vbmljaXR5KSBpcyBzeXN0ZW0gZGVwZW5kZW50IGFuZCBpdCdzIGRpZmZpY3VsdCB0b1xuY2hhbmdlIGV4aXN0aW5nIHN5c3RlbXMgdGhhdCBhcmUgYnVpbHQgd2l0aCBleGlzdGluZyBleHBlY3RhdGlvbnMuIFNvIGlmIGEgbmV3XG5vcmRlcmluZyBpcyBpbnRyb2R1Y2VkIGhlcmUsIHRoZSBvbGQgbmVlZHMgdG8gYmUga2VwdCBhcyB3ZWxsIHdpdGggdGhlIHVzZXJcbmhhdmluZyB0aGUgb3B0aW9uLlxuKi9cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VuT3JOZXN0ZWRUb2tlbnNbXX0gZW50cmllc1xuICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBvcHRpb25zXG4gKi9cbmZ1bmN0aW9uIHNvcnRNYXBFbnRyaWVzIChlbnRyaWVzLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLm1hcFNvcnRlcikge1xuICAgIGVudHJpZXMuc29ydChvcHRpb25zLm1hcFNvcnRlcilcbiAgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7KFRva2VufFRva2VuW10pW119IGUxXG4gKiBAcGFyYW0geyhUb2tlbnxUb2tlbltdKVtdfSBlMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZnVuY3Rpb24gbWFwU29ydGVyIChlMSwgZTIpIHtcbiAgLy8gdGhlIGtleSBwb3NpdGlvbiAoWzBdKSBjb3VsZCBoYXZlIGEgc2luZ2xlIHRva2VuIG9yIGFuIGFycmF5XG4gIC8vIGFsbW9zdCBhbHdheXMgaXQnbGwgYmUgYSBzaW5nbGUgdG9rZW4gYnV0IGNvbXBsZXgga2V5IG1pZ2h0IGdldCBpbnZvbHZlZFxuICAvKiBjOCBpZ25vcmUgbmV4dCAyICovXG4gIGNvbnN0IGtleVRva2VuMSA9IEFycmF5LmlzQXJyYXkoZTFbMF0pID8gZTFbMF1bMF0gOiBlMVswXVxuICBjb25zdCBrZXlUb2tlbjIgPSBBcnJheS5pc0FycmF5KGUyWzBdKSA/IGUyWzBdWzBdIDogZTJbMF1cblxuICAvLyBkaWZmZXJlbnQga2V5IHR5cGVzXG4gIGlmIChrZXlUb2tlbjEudHlwZSAhPT0ga2V5VG9rZW4yLnR5cGUpIHtcbiAgICByZXR1cm4ga2V5VG9rZW4xLnR5cGUuY29tcGFyZShrZXlUb2tlbjIudHlwZSlcbiAgfVxuXG4gIGNvbnN0IG1ham9yID0ga2V5VG9rZW4xLnR5cGUubWFqb3JcbiAgLy8gVE9ETzogaGFuZGxlIGNhc2Ugd2hlcmUgY21wID09PSAwIGJ1dCB0aGVyZSBhcmUgbW9yZSBrZXlUb2tlbiBlLiBjb21wbGV4IHR5cGUpXG4gIGNvbnN0IHRjbXAgPSBjYm9yRW5jb2RlcnNbbWFqb3JdLmNvbXBhcmVUb2tlbnMoa2V5VG9rZW4xLCBrZXlUb2tlbjIpXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDUgKi9cbiAgaWYgKHRjbXAgPT09IDApIHtcbiAgICAvLyBkdXBsaWNhdGUga2V5IG9yIGNvbXBsZXggdHlwZSB3aGVyZSB0aGUgZmlyc3QgdG9rZW4gbWF0Y2hlZCxcbiAgICAvLyBpLmUuIGEgbWFwIG9yIGFycmF5IGFuZCB3ZSdyZSBvbmx5IGNvbXBhcmluZyB0aGUgb3BlbmluZyB0b2tlblxuICAgIGNvbnNvbGUud2FybignV0FSTklORzogY29tcGxleCBrZXkgdHlwZXMgdXNlZCwgQ0JPUiBrZXkgc29ydGluZyBndWFyYW50ZWVzIGFyZSBnb25lJylcbiAgfVxuICByZXR1cm4gdGNtcFxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbk9yTmVzdGVkVG9rZW5zfSB0b2tlbnNcbiAqIEBwYXJhbSB7VG9rZW5UeXBlRW5jb2RlcltdfSBlbmNvZGVyc1xuICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBvcHRpb25zXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRW5jb2RlZCAoYnVmLCB0b2tlbnMsIGVuY29kZXJzLCBvcHRpb25zKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHRva2VucykpIHtcbiAgICBmb3IgKGNvbnN0IHRva2VuIG9mIHRva2Vucykge1xuICAgICAgdG9rZW5zVG9FbmNvZGVkKGJ1ZiwgdG9rZW4sIGVuY29kZXJzLCBvcHRpb25zKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBlbmNvZGVyc1t0b2tlbnMudHlwZS5tYWpvcl0oYnVmLCB0b2tlbnMsIG9wdGlvbnMpXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gZGF0YVxuICogQHBhcmFtIHtUb2tlblR5cGVFbmNvZGVyW119IGVuY29kZXJzXG4gKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5mdW5jdGlvbiBlbmNvZGVDdXN0b20gKGRhdGEsIGVuY29kZXJzLCBvcHRpb25zKSB7XG4gIGNvbnN0IHRva2VucyA9IG9iamVjdFRvVG9rZW5zKGRhdGEsIG9wdGlvbnMpXG4gIGlmICghQXJyYXkuaXNBcnJheSh0b2tlbnMpICYmIG9wdGlvbnMucXVpY2tFbmNvZGVUb2tlbikge1xuICAgIGNvbnN0IHF1aWNrQnl0ZXMgPSBvcHRpb25zLnF1aWNrRW5jb2RlVG9rZW4odG9rZW5zKVxuICAgIGlmIChxdWlja0J5dGVzKSB7XG4gICAgICByZXR1cm4gcXVpY2tCeXRlc1xuICAgIH1cbiAgICBjb25zdCBlbmNvZGVyID0gZW5jb2RlcnNbdG9rZW5zLnR5cGUubWFqb3JdXG4gICAgaWYgKGVuY29kZXIuZW5jb2RlZFNpemUpIHtcbiAgICAgIGNvbnN0IHNpemUgPSBlbmNvZGVyLmVuY29kZWRTaXplKHRva2Vucywgb3B0aW9ucylcbiAgICAgIGNvbnN0IGJ1ZiA9IG5ldyBCbChzaXplKVxuICAgICAgZW5jb2RlcihidWYsIHRva2Vucywgb3B0aW9ucylcbiAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgICAgIC8vIHRoaXMgd291bGQgYmUgYSBwcm9ibGVtIHdpdGggZW5jb2RlZFNpemUoKSBmdW5jdGlvbnNcbiAgICAgIGlmIChidWYuY2h1bmtzLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgZXJyb3I6IHByZS1jYWxjdWxhdGVkIGxlbmd0aCBmb3IgJHt0b2tlbnN9IHdhcyB3cm9uZ2ApXG4gICAgICB9XG4gICAgICByZXR1cm4gYXNVOEEoYnVmLmNodW5rc1swXSlcbiAgICB9XG4gIH1cbiAgYnVmLnJlc2V0KClcbiAgdG9rZW5zVG9FbmNvZGVkKGJ1ZiwgdG9rZW5zLCBlbmNvZGVycywgb3B0aW9ucylcbiAgcmV0dXJuIGJ1Zi50b0J5dGVzKHRydWUpXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IGRhdGFcbiAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gW29wdGlvbnNdXG4gKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAqL1xuZnVuY3Rpb24gZW5jb2RlIChkYXRhLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0RW5jb2RlT3B0aW9ucywgb3B0aW9ucylcbiAgcmV0dXJuIGVuY29kZUN1c3RvbShkYXRhLCBjYm9yRW5jb2RlcnMsIG9wdGlvbnMpXG59XG5cbmV4cG9ydCB7IG9iamVjdFRvVG9rZW5zLCBlbmNvZGUsIGVuY29kZUN1c3RvbSwgUmVmIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/is.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/is.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   is: () => (/* binding */ is)\n/* harmony export */ });\n// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nfunction is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvaXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2lzLmpzPzUyODgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBpcyBhbiB1bmZvcnR1bmF0ZSByZXBsYWNlbWVudCBmb3IgQHNpbmRyZXNvcmh1cy9pcyB0aGF0IHdlIG5lZWQgdG9cbi8vIHJlLWltcGxlbWVudCBmb3IgcGVyZm9ybWFuY2UgcHVycG9zZXMuIEluIHBhcnRpY3VsYXIgdGhlIGlzLm9ic2VydmFibGUoKVxuLy8gY2hlY2sgaXMgZXhwZW5zaXZlLCBhbmQgdW5uZWNlc3NhcnkgZm9yIG91ciBwdXJwb3Nlcy4gVGhlIHZhbHVlcyByZXR1cm5lZFxuLy8gYXJlIGNvbXBhdGlibGUgd2l0aCBAc2luZHJlc29yaHVzL2lzLCBob3dldmVyLlxuXG5jb25zdCB0eXBlb2ZzID0gW1xuICAnc3RyaW5nJyxcbiAgJ251bWJlcicsXG4gICdiaWdpbnQnLFxuICAnc3ltYm9sJ1xuXVxuXG5jb25zdCBvYmplY3RUeXBlTmFtZXMgPSBbXG4gICdGdW5jdGlvbicsXG4gICdHZW5lcmF0b3InLFxuICAnQXN5bmNHZW5lcmF0b3InLFxuICAnR2VuZXJhdG9yRnVuY3Rpb24nLFxuICAnQXN5bmNHZW5lcmF0b3JGdW5jdGlvbicsXG4gICdBc3luY0Z1bmN0aW9uJyxcbiAgJ09ic2VydmFibGUnLFxuICAnQXJyYXknLFxuICAnQnVmZmVyJyxcbiAgJ09iamVjdCcsXG4gICdSZWdFeHAnLFxuICAnRGF0ZScsXG4gICdFcnJvcicsXG4gICdNYXAnLFxuICAnU2V0JyxcbiAgJ1dlYWtNYXAnLFxuICAnV2Vha1NldCcsXG4gICdBcnJheUJ1ZmZlcicsXG4gICdTaGFyZWRBcnJheUJ1ZmZlcicsXG4gICdEYXRhVmlldycsXG4gICdQcm9taXNlJyxcbiAgJ1VSTCcsXG4gICdIVE1MRWxlbWVudCcsXG4gICdJbnQ4QXJyYXknLFxuICAnVWludDhBcnJheScsXG4gICdVaW50OENsYW1wZWRBcnJheScsXG4gICdJbnQxNkFycmF5JyxcbiAgJ1VpbnQxNkFycmF5JyxcbiAgJ0ludDMyQXJyYXknLFxuICAnVWludDMyQXJyYXknLFxuICAnRmxvYXQzMkFycmF5JyxcbiAgJ0Zsb2F0NjRBcnJheScsXG4gICdCaWdJbnQ2NEFycmF5JyxcbiAgJ0JpZ1VpbnQ2NEFycmF5J1xuXVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzICh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gJ251bGwnXG4gIH1cbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gJ3VuZGVmaW5lZCdcbiAgfVxuICBpZiAodmFsdWUgPT09IHRydWUgfHwgdmFsdWUgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuICdib29sZWFuJ1xuICB9XG4gIGNvbnN0IHR5cGVPZiA9IHR5cGVvZiB2YWx1ZVxuICBpZiAodHlwZW9mcy5pbmNsdWRlcyh0eXBlT2YpKSB7XG4gICAgcmV0dXJuIHR5cGVPZlxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gbm90IGdvaW5nIHRvIGJvdGhlciB0ZXN0aW5nIHRoaXMsIGl0J3Mgbm90IGdvaW5nIHRvIGJlIHZhbGlkIGFueXdheVxuICBpZiAodHlwZU9mID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuICdGdW5jdGlvbidcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gJ0FycmF5J1xuICB9XG4gIGlmIChpc0J1ZmZlcih2YWx1ZSkpIHtcbiAgICByZXR1cm4gJ0J1ZmZlcidcbiAgfVxuICBjb25zdCBvYmplY3RUeXBlID0gZ2V0T2JqZWN0VHlwZSh2YWx1ZSlcbiAgaWYgKG9iamVjdFR5cGUpIHtcbiAgICByZXR1cm4gb2JqZWN0VHlwZVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiAnT2JqZWN0J1xufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGlzQnVmZmVyICh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgJiYgdmFsdWUuY29uc3RydWN0b3IgJiYgdmFsdWUuY29uc3RydWN0b3IuaXNCdWZmZXIgJiYgdmFsdWUuY29uc3RydWN0b3IuaXNCdWZmZXIuY2FsbChudWxsLCB2YWx1ZSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtzdHJpbmd8dW5kZWZpbmVkfVxuICovXG5mdW5jdGlvbiBnZXRPYmplY3RUeXBlICh2YWx1ZSkge1xuICBjb25zdCBvYmplY3RUeXBlTmFtZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkuc2xpY2UoOCwgLTEpXG4gIGlmIChvYmplY3RUeXBlTmFtZXMuaW5jbHVkZXMob2JqZWN0VHlwZU5hbWUpKSB7XG4gICAgcmV0dXJuIG9iamVjdFR5cGVOYW1lXG4gIH1cbiAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgcmV0dXJuIHVuZGVmaW5lZFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/jump.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/jump.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jump: () => (/* binding */ jump),\n/* harmony export */   quick: () => (/* binding */ quick),\n/* harmony export */   quickEncodeToken: () => (/* binding */ quickEncodeToken)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/7float.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nconst jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytesCompact\n}\njump[0x58] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeStringCompact\n}\njump[0x78] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayCompact\n}\njump[0x98] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapCompact\n}\njump[0xb8] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTagCompact\n}\njump[0xd8] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag8\njump[0xd9] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag16\njump[0xda] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag32\njump[0xdb] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nconst quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, '', 1)\n// empty list\nquick[0x80] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, 0, 1)\n// empty map\nquick[0xa0] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, 0, 1)\n// false\nquick[0xf4] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false, false, 1)\n// true\nquick[0xf5] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true, true, 1)\n// null\nquick[0xf6] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nfunction quickEncodeToken (token) {\n  switch (token.type) {\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf4])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf5])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf6])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes:\n      if (!token.value.length) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x40])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string:\n      if (token.value === '') {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x60])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint:\n      if (token.value < 24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([Number(token.value)])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint:\n      if (token.value >= -24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([31 - Number(token.value)])\n      }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/jump.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/length.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/length.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodedLength: () => (/* binding */ encodedLength),\n/* harmony export */   tokensToLength: () => (/* binding */ tokensToLength)\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/jump.js\");\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\nconst cborEncoders = (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.makeCborEncoders)()\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_1__.quickEncodeToken\n}\n\n/**\n * Calculate the byte length of the given data when encoded as CBOR with the\n * options provided.\n * This calculation will be accurate if the same options are used as when\n * performing a normal encode. Some encode options can change the encoding\n * output length.\n *\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {number}\n */\nfunction encodedLength (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  options.mapSorter = undefined // won't change the length\n  const tokens = (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.objectToTokens)(data, options)\n  return tokensToLength(tokens, cborEncoders, options)\n}\n\n/**\n * Calculate the byte length of the data as represented by the given tokens when\n * encoded as CBOR with the options provided.\n * This function is for advanced users and would not normally be called\n * directly. See `encodedLength()` for appropriate use.\n *\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} [encoders]\n * @param {EncodeOptions} [options]\n */\nfunction tokensToLength (tokens, encoders = cborEncoders, options = defaultEncodeOptions) {\n  if (Array.isArray(tokens)) {\n    let len = 0\n    for (const token of tokens) {\n      len += tokensToLength(token, encoders, options)\n    }\n    return len\n  } else {\n    const encoder = encoders[tokens.type.major]\n    /* c8 ignore next 3 */\n    if (encoder.encodedSize === undefined || typeof encoder.encodedSize !== 'function') {\n      throw new Error(`Encoder for ${tokens.type.name} does not have an encodedSize()`)\n    }\n    return encoder.encodedSize(tokens, options)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvbGVuZ3RoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEQ7QUFDbEI7O0FBRTVDO0FBQ0EsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSx5Q0FBeUM7QUFDdEQsYUFBYSw0Q0FBNEM7QUFDekQ7O0FBRUEscUJBQXFCLDREQUFnQjs7QUFFckMsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsNEJBQTRCO0FBQzVCO0FBQ0EsaUJBQWlCLDBEQUFjO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEMsV0FBVyxvQkFBb0I7QUFDL0IsV0FBVyxlQUFlO0FBQzFCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGtCQUFrQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2xlbmd0aC5qcz8yMWEzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ha2VDYm9yRW5jb2RlcnMsIG9iamVjdFRvVG9rZW5zIH0gZnJvbSAnLi9lbmNvZGUuanMnXG5pbXBvcnQgeyBxdWlja0VuY29kZVRva2VuIH0gZnJvbSAnLi9qdW1wLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkVuY29kZU9wdGlvbnN9IEVuY29kZU9wdGlvbnNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLlRva2VuVHlwZUVuY29kZXJ9IFRva2VuVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLlRva2VuT3JOZXN0ZWRUb2tlbnN9IFRva2VuT3JOZXN0ZWRUb2tlbnNcbiAqL1xuXG5jb25zdCBjYm9yRW5jb2RlcnMgPSBtYWtlQ2JvckVuY29kZXJzKClcblxuLyoqIEB0eXBlIHtFbmNvZGVPcHRpb25zfSAqL1xuY29uc3QgZGVmYXVsdEVuY29kZU9wdGlvbnMgPSB7XG4gIGZsb2F0NjQ6IGZhbHNlLFxuICBxdWlja0VuY29kZVRva2VuXG59XG5cbi8qKlxuICogQ2FsY3VsYXRlIHRoZSBieXRlIGxlbmd0aCBvZiB0aGUgZ2l2ZW4gZGF0YSB3aGVuIGVuY29kZWQgYXMgQ0JPUiB3aXRoIHRoZVxuICogb3B0aW9ucyBwcm92aWRlZC5cbiAqIFRoaXMgY2FsY3VsYXRpb24gd2lsbCBiZSBhY2N1cmF0ZSBpZiB0aGUgc2FtZSBvcHRpb25zIGFyZSB1c2VkIGFzIHdoZW5cbiAqIHBlcmZvcm1pbmcgYSBub3JtYWwgZW5jb2RlLiBTb21lIGVuY29kZSBvcHRpb25zIGNhbiBjaGFuZ2UgdGhlIGVuY29kaW5nXG4gKiBvdXRwdXQgbGVuZ3RoLlxuICpcbiAqIEBwYXJhbSB7YW55fSBkYXRhXG4gKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZWRMZW5ndGggKGRhdGEsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRFbmNvZGVPcHRpb25zLCBvcHRpb25zKVxuICBvcHRpb25zLm1hcFNvcnRlciA9IHVuZGVmaW5lZCAvLyB3b24ndCBjaGFuZ2UgdGhlIGxlbmd0aFxuICBjb25zdCB0b2tlbnMgPSBvYmplY3RUb1Rva2VucyhkYXRhLCBvcHRpb25zKVxuICByZXR1cm4gdG9rZW5zVG9MZW5ndGgodG9rZW5zLCBjYm9yRW5jb2RlcnMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQ2FsY3VsYXRlIHRoZSBieXRlIGxlbmd0aCBvZiB0aGUgZGF0YSBhcyByZXByZXNlbnRlZCBieSB0aGUgZ2l2ZW4gdG9rZW5zIHdoZW5cbiAqIGVuY29kZWQgYXMgQ0JPUiB3aXRoIHRoZSBvcHRpb25zIHByb3ZpZGVkLlxuICogVGhpcyBmdW5jdGlvbiBpcyBmb3IgYWR2YW5jZWQgdXNlcnMgYW5kIHdvdWxkIG5vdCBub3JtYWxseSBiZSBjYWxsZWRcbiAqIGRpcmVjdGx5LiBTZWUgYGVuY29kZWRMZW5ndGgoKWAgZm9yIGFwcHJvcHJpYXRlIHVzZS5cbiAqXG4gKiBAcGFyYW0ge1Rva2VuT3JOZXN0ZWRUb2tlbnN9IHRva2Vuc1xuICogQHBhcmFtIHtUb2tlblR5cGVFbmNvZGVyW119IFtlbmNvZGVyc11cbiAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gW29wdGlvbnNdXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b2tlbnNUb0xlbmd0aCAodG9rZW5zLCBlbmNvZGVycyA9IGNib3JFbmNvZGVycywgb3B0aW9ucyA9IGRlZmF1bHRFbmNvZGVPcHRpb25zKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHRva2VucykpIHtcbiAgICBsZXQgbGVuID0gMFxuICAgIGZvciAoY29uc3QgdG9rZW4gb2YgdG9rZW5zKSB7XG4gICAgICBsZW4gKz0gdG9rZW5zVG9MZW5ndGgodG9rZW4sIGVuY29kZXJzLCBvcHRpb25zKVxuICAgIH1cbiAgICByZXR1cm4gbGVuXG4gIH0gZWxzZSB7XG4gICAgY29uc3QgZW5jb2RlciA9IGVuY29kZXJzW3Rva2Vucy50eXBlLm1ham9yXVxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICBpZiAoZW5jb2Rlci5lbmNvZGVkU2l6ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBlbmNvZGVyLmVuY29kZWRTaXplICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEVuY29kZXIgZm9yICR7dG9rZW5zLnR5cGUubmFtZX0gZG9lcyBub3QgaGF2ZSBhbiBlbmNvZGVkU2l6ZSgpYClcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZXIuZW5jb2RlZFNpemUodG9rZW5zLCBvcHRpb25zKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/length.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\nclass Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvdG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQixXQUFXLElBQUksVUFBVTtBQUM1Qzs7QUFFQTtBQUNBLGFBQWEsTUFBTTtBQUNuQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0JBQXNCO0FBQ3JDO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLFVBQVUsSUFBSSxXQUFXO0FBQzdDO0FBQ0E7O0FBRXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9jYm9yZy9saWIvdG9rZW4uanM/NjQxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBUeXBlIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBtYWpvclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHRlcm1pbmFsXG4gICAqL1xuICBjb25zdHJ1Y3RvciAobWFqb3IsIG5hbWUsIHRlcm1pbmFsKSB7XG4gICAgdGhpcy5tYWpvciA9IG1ham9yXG4gICAgdGhpcy5tYWpvckVuY29kZWQgPSBtYWpvciA8PCA1XG4gICAgdGhpcy5uYW1lID0gbmFtZVxuICAgIHRoaXMudGVybWluYWwgPSB0ZXJtaW5hbFxuICB9XG5cbiAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICB0b1N0cmluZyAoKSB7XG4gICAgcmV0dXJuIGBUeXBlWyR7dGhpcy5tYWpvcn1dLiR7dGhpcy5uYW1lfWBcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1R5cGV9IHR5cFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgKi9cbiAgY29tcGFyZSAodHlwKSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgIHJldHVybiB0aGlzLm1ham9yIDwgdHlwLm1ham9yID8gLTEgOiB0aGlzLm1ham9yID4gdHlwLm1ham9yID8gMSA6IDBcbiAgfVxufVxuXG4vLyBjb252ZXJ0IHRvIHN0YXRpYyBmaWVsZHMgd2hlbiBiZXR0ZXIgc3VwcG9ydGVkXG5UeXBlLnVpbnQgPSBuZXcgVHlwZSgwLCAndWludCcsIHRydWUpXG5UeXBlLm5lZ2ludCA9IG5ldyBUeXBlKDEsICduZWdpbnQnLCB0cnVlKVxuVHlwZS5ieXRlcyA9IG5ldyBUeXBlKDIsICdieXRlcycsIHRydWUpXG5UeXBlLnN0cmluZyA9IG5ldyBUeXBlKDMsICdzdHJpbmcnLCB0cnVlKVxuVHlwZS5hcnJheSA9IG5ldyBUeXBlKDQsICdhcnJheScsIGZhbHNlKVxuVHlwZS5tYXAgPSBuZXcgVHlwZSg1LCAnbWFwJywgZmFsc2UpXG5UeXBlLnRhZyA9IG5ldyBUeXBlKDYsICd0YWcnLCBmYWxzZSkgLy8gdGVybWluYWw/XG5UeXBlLmZsb2F0ID0gbmV3IFR5cGUoNywgJ2Zsb2F0JywgdHJ1ZSlcblR5cGUuZmFsc2UgPSBuZXcgVHlwZSg3LCAnZmFsc2UnLCB0cnVlKVxuVHlwZS50cnVlID0gbmV3IFR5cGUoNywgJ3RydWUnLCB0cnVlKVxuVHlwZS5udWxsID0gbmV3IFR5cGUoNywgJ251bGwnLCB0cnVlKVxuVHlwZS51bmRlZmluZWQgPSBuZXcgVHlwZSg3LCAndW5kZWZpbmVkJywgdHJ1ZSlcblR5cGUuYnJlYWsgPSBuZXcgVHlwZSg3LCAnYnJlYWsnLCB0cnVlKVxuLy8gVHlwZS5pbmRlZmluaXRlTGVuZ3RoID0gbmV3IFR5cGUoMCwgJ2luZGVmaW5pdGVMZW5ndGgnLCB0cnVlKVxuXG5jbGFzcyBUb2tlbiB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge1R5cGV9IHR5cGVcbiAgICogQHBhcmFtIHthbnl9IFt2YWx1ZV1cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtlbmNvZGVkTGVuZ3RoXVxuICAgKi9cbiAgY29uc3RydWN0b3IgKHR5cGUsIHZhbHVlLCBlbmNvZGVkTGVuZ3RoKSB7XG4gICAgdGhpcy50eXBlID0gdHlwZVxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZVxuICAgIHRoaXMuZW5jb2RlZExlbmd0aCA9IGVuY29kZWRMZW5ndGhcbiAgICAvKiogQHR5cGUge1VpbnQ4QXJyYXl8dW5kZWZpbmVkfSAqL1xuICAgIHRoaXMuZW5jb2RlZEJ5dGVzID0gdW5kZWZpbmVkXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmJ5dGVWYWx1ZSA9IHVuZGVmaW5lZFxuICB9XG5cbiAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICB0b1N0cmluZyAoKSB7XG4gICAgcmV0dXJuIGBUb2tlblske3RoaXMudHlwZX1dLiR7dGhpcy52YWx1ZX1gXG4gIH1cbn1cblxuZXhwb3J0IHsgVHlwZSwgVG9rZW4gfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/cborg/lib/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base32.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base32.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsaURBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHVCQUF1QixpREFBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSwwQkFBMEIsaURBQU87QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sZ0JBQWdCLGlEQUFPO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzPzIyZjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTMyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnYicsXG4gICAgbmFtZTogJ2Jhc2UzMicsXG4gICAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnQicsXG4gICAgbmFtZTogJ2Jhc2UzMnVwcGVyJyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnYycsXG4gICAgbmFtZTogJ2Jhc2UzMnBhZCcsXG4gICAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2Nz0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2Nz0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXggPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd2JyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4dXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdWJyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVYnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWQgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd0JyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4cGFkJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2PScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWPScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnogPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdoJyxcbiAgICBuYW1lOiAnYmFzZTMyeicsXG4gICAgYWxwaGFiZXQ6ICd5Ym5kcmZnOGVqa21jcHF4b3QxdXdpc3phMzQ1aDc2OScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTMyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base36.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base36.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixlQUFlLCtDQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsK0NBQUs7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzPzgwZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzNiA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdrJyxcbiAgICBuYW1lOiAnYmFzZTM2JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzNnVwcGVyID0gYmFzZVgoe1xuICAgIHByZWZpeDogJ0snLFxuICAgIG5hbWU6ICdiYXNlMzZ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzNi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base58.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base58.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixrQkFBa0IsK0NBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQiwrQ0FBSztBQUNqQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanM/MjNmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlWCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTU4YnRjID0gYmFzZVgoe1xuICAgIG5hbWU6ICdiYXNlNThidGMnLFxuICAgIHByZWZpeDogJ3onLFxuICAgIGFscGhhYmV0OiAnMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGZsaWNrciA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4ZmxpY2tyJyxcbiAgICBwcmVmaXg6ICdaJyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OWFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXpBQkNERUZHSEpLTE1OUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U1OC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bytes.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bytes.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanM/YmVlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1wdHkgPSBuZXcgVWludDhBcnJheSgwKTtcbmV4cG9ydCBmdW5jdGlvbiB0b0hleChkKSB7XG4gICAgcmV0dXJuIGQucmVkdWNlKChoZXgsIGJ5dGUpID0+IGhleCArIGJ5dGUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyksICcnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tSGV4KGhleCkge1xuICAgIGNvbnN0IGhleGVzID0gaGV4Lm1hdGNoKC8uLi9nKTtcbiAgICByZXR1cm4gaGV4ZXMgIT0gbnVsbCA/IG5ldyBVaW50OEFycmF5KGhleGVzLm1hcChiID0+IHBhcnNlSW50KGIsIDE2KSkpIDogZW1wdHk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGFhLCBiYikge1xuICAgIGlmIChhYSA9PT0gYmIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChhYS5ieXRlTGVuZ3RoICE9PSBiYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGFhLmJ5dGVMZW5ndGg7IGlpKyspIHtcbiAgICAgICAgaWYgKGFhW2lpXSAhPT0gYmJbaWldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29lcmNlKG8pIHtcbiAgICBpZiAobyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgby5jb25zdHJ1Y3Rvci5uYW1lID09PSAnVWludDhBcnJheScpIHtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfVxuICAgIGlmIChvIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KG8pO1xuICAgIH1cbiAgICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KG8pKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvLmJ1ZmZlciwgby5ieXRlT2Zmc2V0LCBvLmJ5dGVMZW5ndGgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmluYXJ5KG8pIHtcbiAgICByZXR1cm4gbyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IEFycmF5QnVmZmVyLmlzVmlldyhvKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU3RyaW5nKHN0cikge1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1N0cmluZyhiKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/codecs/raw.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/codecs/raw.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bytes.js\");\n\nconst name = 'raw';\nconst code = 0x55;\nfunction encode(node) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\n}\nfunction decode(data) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n}\n//# sourceMappingURL=raw.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL3Jhdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxQztBQUM5QjtBQUNBO0FBQ0E7QUFDUCxXQUFXLGlEQUFNO0FBQ2pCO0FBQ087QUFDUCxXQUFXLGlEQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvcmF3LmpzPzNhYmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuZXhwb3J0IGNvbnN0IG5hbWUgPSAncmF3JztcbmV4cG9ydCBjb25zdCBjb2RlID0gMHg1NTtcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUobm9kZSkge1xuICAgIHJldHVybiBjb2VyY2Uobm9kZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gY29lcmNlKGRhdGEpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmF3LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/digest.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJEO0FBQ3BCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsc0RBQXFCO0FBQzVDLHNDQUFzQyxzREFBcUI7QUFDM0Q7QUFDQSxJQUFJLGdEQUFlO0FBQ25CLElBQUksZ0RBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IsaURBQU07QUFDeEIsK0JBQStCLDhDQUFhO0FBQzVDLGlDQUFpQyw4Q0FBYTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlEQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcz81MDJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSwgZXF1YWxzIGFzIGVxdWFsQnl0ZXMgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJztcbi8qKlxuICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoY29kZSwgZGlnZXN0KSB7XG4gICAgY29uc3Qgc2l6ZSA9IGRpZ2VzdC5ieXRlTGVuZ3RoO1xuICAgIGNvbnN0IHNpemVPZmZzZXQgPSB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoY29kZSk7XG4gICAgY29uc3QgZGlnZXN0T2Zmc2V0ID0gc2l6ZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGRpZ2VzdE9mZnNldCArIHNpemUpO1xuICAgIHZhcmludC5lbmNvZGVUbyhjb2RlLCBieXRlcywgMCk7XG4gICAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KTtcbiAgICBieXRlcy5zZXQoZGlnZXN0LCBkaWdlc3RPZmZzZXQpO1xuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuLyoqXG4gKiBUdXJucyBieXRlcyByZXByZXNlbnRhdGlvbiBvZiBtdWx0aWhhc2ggZGlnZXN0IGludG8gYW4gaW5zdGFuY2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUobXVsdGloYXNoKSB7XG4gICAgY29uc3QgYnl0ZXMgPSBjb2VyY2UobXVsdGloYXNoKTtcbiAgICBjb25zdCBbY29kZSwgc2l6ZU9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKTtcbiAgICBjb25zdCBbc2l6ZSwgZGlnZXN0T2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoc2l6ZU9mZnNldCkpO1xuICAgIGNvbnN0IGRpZ2VzdCA9IGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQgKyBkaWdlc3RPZmZzZXQpO1xuICAgIGlmIChkaWdlc3QuYnl0ZUxlbmd0aCAhPT0gc2l6ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luY29ycmVjdCBsZW5ndGgnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBiO1xuICAgICAgICByZXR1cm4gKGEuY29kZSA9PT0gZGF0YS5jb2RlICYmXG4gICAgICAgICAgICBhLnNpemUgPT09IGRhdGEuc2l6ZSAmJlxuICAgICAgICAgICAgZGF0YS5ieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICAgICAgICAgIGVxdWFsQnl0ZXMoYS5ieXRlcywgZGF0YS5ieXRlcykpO1xuICAgIH1cbn1cbi8qKlxuICogUmVwcmVzZW50cyBhIG11bHRpaGFzaCBkaWdlc3Qgd2hpY2ggY2FycmllcyBpbmZvcm1hdGlvbiBhYm91dCB0aGVcbiAqIGhhc2hpbmcgYWxnb3JpdGhtIGFuZCBhbiBhY3R1YWwgaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBEaWdlc3Qge1xuICAgIGNvZGU7XG4gICAgc2l6ZTtcbiAgICBkaWdlc3Q7XG4gICAgYnl0ZXM7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLmRpZ2VzdCA9IGRpZ2VzdDtcbiAgICAgICAgdGhpcy5ieXRlcyA9IGJ5dGVzO1xuICAgIH1cbn1cbi8qKlxuICogVXNlZCB0byBjaGVjayB0aGF0IHRoZSBwYXNzZWQgbXVsdGloYXNoIGhhcyB0aGUgcGFzc2VkIGNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0NvZGUoZGlnZXN0LCBjb2RlKSB7XG4gICAgcmV0dXJuIGRpZ2VzdC5jb2RlID09PSBjb2RlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlnZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDdEM7QUFDTyxnQkFBZ0Isc0RBQXNEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkZBQTZGLHFCQUFxQjtBQUNsSDtBQUNBO0FBQ0EsMEZBQTBGLHFCQUFxQjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixrQkFBa0I7QUFDeEc7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBYTtBQUN4QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcz9lOWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5jb25zdCBERUZBVUxUX01JTl9ESUdFU1RfTEVOR1RIID0gMjA7XG5leHBvcnQgZnVuY3Rpb24gZnJvbSh7IG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGggfSkge1xuICAgIHJldHVybiBuZXcgSGFzaGVyKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpO1xufVxuLyoqXG4gKiBIYXNoZXIgcmVwcmVzZW50cyBhIGhhc2hpbmcgYWxnb3JpdGhtIGltcGxlbWVudGF0aW9uIHRoYXQgcHJvZHVjZXMgYXNcbiAqIGBNdWx0aWhhc2hEaWdlc3RgLlxuICovXG5leHBvcnQgY2xhc3MgSGFzaGVyIHtcbiAgICBuYW1lO1xuICAgIGNvZGU7XG4gICAgZW5jb2RlO1xuICAgIG1pbkRpZ2VzdExlbmd0aDtcbiAgICBtYXhEaWdlc3RMZW5ndGg7XG4gICAgY29uc3RydWN0b3IobmFtZSwgY29kZSwgZW5jb2RlLCBtaW5EaWdlc3RMZW5ndGgsIG1heERpZ2VzdExlbmd0aCkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLmVuY29kZSA9IGVuY29kZTtcbiAgICAgICAgdGhpcy5taW5EaWdlc3RMZW5ndGggPSBtaW5EaWdlc3RMZW5ndGggPz8gREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSDtcbiAgICAgICAgdGhpcy5tYXhEaWdlc3RMZW5ndGggPSBtYXhEaWdlc3RMZW5ndGg7XG4gICAgfVxuICAgIGRpZ2VzdChpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucz8udHJ1bmNhdGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMudHJ1bmNhdGUgPCB0aGlzLm1pbkRpZ2VzdExlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvICR7dGhpcy5taW5EaWdlc3RMZW5ndGh9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5tYXhEaWdlc3RMZW5ndGggIT0gbnVsbCAmJiBvcHRpb25zLnRydW5jYXRlID4gdGhpcy5tYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWF4RGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZW5jb2RlKGlucHV0KTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZURpZ2VzdChyZXN1bHQsIHRoaXMuY29kZSwgb3B0aW9ucz8udHJ1bmNhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50aGVuKGRpZ2VzdCA9PiBjcmVhdGVEaWdlc3QoZGlnZXN0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlJyk7XG4gICAgICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZSBhIERpZ2VzdCBmcm9tIHRoZSBwYXNzZWQgdWludDhhcnJheSBhbmQgY29kZSwgb3B0aW9uYWxseSB0cnVuY2F0aW5nIGl0XG4gKiBmaXJzdC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgY29kZSwgdHJ1bmNhdGUpIHtcbiAgICBpZiAodHJ1bmNhdGUgIT0gbnVsbCAmJiB0cnVuY2F0ZSAhPT0gZGlnZXN0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgaWYgKHRydW5jYXRlID4gZGlnZXN0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7ZGlnZXN0LmJ5dGVMZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgZGlnZXN0ID0gZGlnZXN0LnN1YmFycmF5KDAsIHRydW5jYXRlKTtcbiAgICB9XG4gICAgcmV0dXJuIERpZ2VzdC5jcmVhdGUoY29kZSwgZGlnZXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/sha2.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/sha2.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/hasher.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: (input) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256').update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: input => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha512').update(input).digest())\n});\n//# sourceMappingURL=sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL3NoYTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEI7QUFDUztBQUNGO0FBQzVCLGVBQWUsZ0RBQUk7QUFDMUI7QUFDQTtBQUNBLHVCQUF1QixpREFBTSxDQUFDLDhDQUFpQjtBQUMvQyxDQUFDO0FBQ00sZUFBZSxnREFBSTtBQUMxQjtBQUNBO0FBQ0EscUJBQXFCLGlEQUFNLENBQUMsOENBQWlCO0FBQzdDLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9zaGEyLmpzPzMzYzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vaGFzaGVyLmpzJztcbmV4cG9ydCBjb25zdCBzaGEyNTYgPSBmcm9tKHtcbiAgICBuYW1lOiAnc2hhMi0yNTYnLFxuICAgIGNvZGU6IDB4MTIsXG4gICAgZW5jb2RlOiAoaW5wdXQpID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pO1xuZXhwb3J0IGNvbnN0IHNoYTUxMiA9IGZyb20oe1xuICAgIG5hbWU6ICdzaGEyLTUxMicsXG4gICAgY29kZTogMHgxMyxcbiAgICBlbmNvZGU6IGlucHV0ID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhNTEyJykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createLegacy: () => (/* binding */ createLegacy),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   format: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.format),\n/* harmony export */   fromJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.fromJSON),\n/* harmony export */   isLink: () => (/* binding */ isLink),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   toJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.toJSON)\n/* harmony export */ });\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link/interface.js\");\n\n// This way TS will also expose all the types from module\n\nconst DAG_PB_CODE = 0x70;\n// eslint-disable-next-line\nconst SHA_256_CODE = 0x12;\n/**\n * Simplified version of `create` for CIDv0.\n */\nfunction createLegacy(digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(0, DAG_PB_CODE, digest);\n}\n/**\n * Simplified version of `create` for CIDv1.\n *\n * @param code - Content encoding format code.\n * @param digest - Miltihash of the content.\n */\nfunction create(code, digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(1, code, digest);\n}\n/**\n * Type predicate returns true if value is the link.\n */\nfunction isLink(value) {\n    if (value == null) {\n        return false;\n    }\n    const withSlash = value;\n    if (withSlash['/'] != null && withSlash['/'] === withSlash.bytes) {\n        return true;\n    }\n    const withAsCID = value;\n    if (withAsCID.asCID === value) {\n        return true;\n    }\n    return false;\n}\n/**\n * Takes cid in a string representation and creates an instance. If `base`\n * decoder is not provided will use a default from the configuration. It will\n * throw an error if encoding of the CID is not compatible with supplied (or\n * a default decoder).\n */\nfunction parse(source, base) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.parse(source, base);\n}\n\n/**\n * Decoded a CID from its binary representation. The byte array must contain\n * only the CID with no additional bytes.\n *\n * An error will be thrown if the bytes provided do not contain a valid\n * binary representation of a CID.\n */\nfunction decode(bytes) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.decode(bytes);\n}\n//# sourceMappingURL=link.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXlEO0FBQ3pEO0FBQ29DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyx3Q0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdDQUFHO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdDQUFHO0FBQ2Q7QUFDb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsd0NBQUc7QUFDZDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay5qcz9hZjI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENJRCwgZm9ybWF0LCB0b0pTT04sIGZyb21KU09OIH0gZnJvbSAnLi9jaWQuanMnO1xuLy8gVGhpcyB3YXkgVFMgd2lsbCBhbHNvIGV4cG9zZSBhbGwgdGhlIHR5cGVzIGZyb20gbW9kdWxlXG5leHBvcnQgKiBmcm9tICcuL2xpbmsvaW50ZXJmYWNlLmpzJztcbmNvbnN0IERBR19QQl9DT0RFID0gMHg3MDtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuY29uc3QgU0hBXzI1Nl9DT0RFID0gMHgxMjtcbi8qKlxuICogU2ltcGxpZmllZCB2ZXJzaW9uIG9mIGBjcmVhdGVgIGZvciBDSUR2MC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxlZ2FjeShkaWdlc3QpIHtcbiAgICByZXR1cm4gQ0lELmNyZWF0ZSgwLCBEQUdfUEJfQ09ERSwgZGlnZXN0KTtcbn1cbi8qKlxuICogU2ltcGxpZmllZCB2ZXJzaW9uIG9mIGBjcmVhdGVgIGZvciBDSUR2MS5cbiAqXG4gKiBAcGFyYW0gY29kZSAtIENvbnRlbnQgZW5jb2RpbmcgZm9ybWF0IGNvZGUuXG4gKiBAcGFyYW0gZGlnZXN0IC0gTWlsdGloYXNoIG9mIHRoZSBjb250ZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIHJldHVybiBDSUQuY3JlYXRlKDEsIGNvZGUsIGRpZ2VzdCk7XG59XG4vKipcbiAqIFR5cGUgcHJlZGljYXRlIHJldHVybnMgdHJ1ZSBpZiB2YWx1ZSBpcyB0aGUgbGluay5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTGluayh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3Qgd2l0aFNsYXNoID0gdmFsdWU7XG4gICAgaWYgKHdpdGhTbGFzaFsnLyddICE9IG51bGwgJiYgd2l0aFNsYXNoWycvJ10gPT09IHdpdGhTbGFzaC5ieXRlcykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3Qgd2l0aEFzQ0lEID0gdmFsdWU7XG4gICAgaWYgKHdpdGhBc0NJRC5hc0NJRCA9PT0gdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogVGFrZXMgY2lkIGluIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIGFuZCBjcmVhdGVzIGFuIGluc3RhbmNlLiBJZiBgYmFzZWBcbiAqIGRlY29kZXIgaXMgbm90IHByb3ZpZGVkIHdpbGwgdXNlIGEgZGVmYXVsdCBmcm9tIHRoZSBjb25maWd1cmF0aW9uLiBJdCB3aWxsXG4gKiB0aHJvdyBhbiBlcnJvciBpZiBlbmNvZGluZyBvZiB0aGUgQ0lEIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggc3VwcGxpZWQgKG9yXG4gKiBhIGRlZmF1bHQgZGVjb2RlcikuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZShzb3VyY2UsIGJhc2UpIHtcbiAgICByZXR1cm4gQ0lELnBhcnNlKHNvdXJjZSwgYmFzZSk7XG59XG5leHBvcnQgeyBmb3JtYXQsIHRvSlNPTiwgZnJvbUpTT04gfTtcbi8qKlxuICogRGVjb2RlZCBhIENJRCBmcm9tIGl0cyBiaW5hcnkgcmVwcmVzZW50YXRpb24uIFRoZSBieXRlIGFycmF5IG11c3QgY29udGFpblxuICogb25seSB0aGUgQ0lEIHdpdGggbm8gYWRkaXRpb25hbCBieXRlcy5cbiAqXG4gKiBBbiBlcnJvciB3aWxsIGJlIHRocm93biBpZiB0aGUgYnl0ZXMgcHJvdmlkZWQgZG8gbm90IGNvbnRhaW4gYSB2YWxpZFxuICogYmluYXJ5IHJlcHJlc2VudGF0aW9uIG9mIGEgQ0lELlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGJ5dGVzKSB7XG4gICAgcmV0dXJuIENJRC5kZWNvZGUoYnl0ZXMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGluay5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link/interface.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link/interface.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcz8wNjU3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/varint.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/varint.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDakM7QUFDUCxpQkFBaUIseURBQU07QUFDdkIsa0JBQWtCLHlEQUFNO0FBQ3hCO0FBQ087QUFDUCxJQUFJLHlEQUFNO0FBQ1Y7QUFDQTtBQUNPO0FBQ1AsV0FBVyx5REFBTTtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzPzM4Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhcmludCBmcm9tICcuL3ZlbmRvci92YXJpbnQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgY29kZSA9IHZhcmludC5kZWNvZGUoZGF0YSwgb2Zmc2V0KTtcbiAgICByZXR1cm4gW2NvZGUsIHZhcmludC5kZWNvZGUuYnl0ZXNdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRvKGludCwgdGFyZ2V0LCBvZmZzZXQgPSAwKSB7XG4gICAgdmFyaW50LmVuY29kZShpbnQsIHRhcmdldCwgb2Zmc2V0KTtcbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kaW5nTGVuZ3RoKGludCkge1xuICAgIHJldHVybiB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoaW50KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhcmludC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/vendor/varint.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxZQUFZLEVBQUM7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzP2ZhYWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBlbmNvZGVfMSA9IGVuY29kZTtcbnZhciBNU0IgPSAweDgwLCBSRVNUID0gMHg3RiwgTVNCQUxMID0gflJFU1QsIElOVCA9IE1hdGgucG93KDIsIDMxKTtcbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bVxuICogQHBhcmFtIHtudW1iZXJbXX0gb3V0XG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKi9cbmZ1bmN0aW9uIGVuY29kZShudW0sIG91dCwgb2Zmc2V0KSB7XG4gICAgb3V0ID0gb3V0IHx8IFtdO1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuICAgIHZhciBvbGRPZmZzZXQgPSBvZmZzZXQ7XG4gICAgd2hpbGUgKG51bSA+PSBJTlQpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtIC89IDEyODtcbiAgICB9XG4gICAgd2hpbGUgKG51bSAmIE1TQkFMTCkge1xuICAgICAgICBvdXRbb2Zmc2V0KytdID0gKG51bSAmIDB4RkYpIHwgTVNCO1xuICAgICAgICBudW0gPj4+PSA3O1xuICAgIH1cbiAgICBvdXRbb2Zmc2V0XSA9IG51bSB8IDA7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGVuY29kZS5ieXRlcyA9IG9mZnNldCAtIG9sZE9mZnNldCArIDE7XG4gICAgcmV0dXJuIG91dDtcbn1cbnZhciBkZWNvZGUgPSByZWFkO1xudmFyIE1TQiQxID0gMHg4MCwgUkVTVCQxID0gMHg3Rjtcbi8qKlxuICogQHBhcmFtIHtzdHJpbmcgfCBhbnlbXX0gYnVmXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKi9cbmZ1bmN0aW9uIHJlYWQoYnVmLCBvZmZzZXQpIHtcbiAgICB2YXIgcmVzID0gMCwgb2Zmc2V0ID0gb2Zmc2V0IHx8IDAsIHNoaWZ0ID0gMCwgY291bnRlciA9IG9mZnNldCwgYiwgbCA9IGJ1Zi5sZW5ndGg7XG4gICAgZG8ge1xuICAgICAgICBpZiAoY291bnRlciA+PSBsKSB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICByZWFkLmJ5dGVzID0gMDtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdDb3VsZCBub3QgZGVjb2RlIHZhcmludCcpO1xuICAgICAgICB9XG4gICAgICAgIGIgPSBidWZbY291bnRlcisrXTtcbiAgICAgICAgcmVzICs9IHNoaWZ0IDwgMjhcbiAgICAgICAgICAgID8gKGIgJiBSRVNUJDEpIDw8IHNoaWZ0XG4gICAgICAgICAgICA6IChiICYgUkVTVCQxKSAqIE1hdGgucG93KDIsIHNoaWZ0KTtcbiAgICAgICAgc2hpZnQgKz0gNztcbiAgICB9IHdoaWxlIChiID49IE1TQiQxKTtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmVhZC5ieXRlcyA9IGNvdW50ZXIgLSBvZmZzZXQ7XG4gICAgcmV0dXJuIHJlcztcbn1cbnZhciBOMSA9IE1hdGgucG93KDIsIDcpO1xudmFyIE4yID0gTWF0aC5wb3coMiwgMTQpO1xudmFyIE4zID0gTWF0aC5wb3coMiwgMjEpO1xudmFyIE40ID0gTWF0aC5wb3coMiwgMjgpO1xudmFyIE41ID0gTWF0aC5wb3coMiwgMzUpO1xudmFyIE42ID0gTWF0aC5wb3coMiwgNDIpO1xudmFyIE43ID0gTWF0aC5wb3coMiwgNDkpO1xudmFyIE44ID0gTWF0aC5wb3coMiwgNTYpO1xudmFyIE45ID0gTWF0aC5wb3coMiwgNjMpO1xudmFyIGxlbmd0aCA9IGZ1bmN0aW9uICgvKiogQHR5cGUge251bWJlcn0gKi8gdmFsdWUpIHtcbiAgICByZXR1cm4gKHZhbHVlIDwgTjEgPyAxXG4gICAgICAgIDogdmFsdWUgPCBOMiA/IDJcbiAgICAgICAgICAgIDogdmFsdWUgPCBOMyA/IDNcbiAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjQgPyA0XG4gICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONSA/IDVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONiA/IDZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjcgPyA3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBOOCA/IDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBOOSA/IDlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IDEwKTtcbn07XG52YXIgdmFyaW50ID0ge1xuICAgIGVuY29kZTogZW5jb2RlXzEsXG4gICAgZGVjb2RlOiBkZWNvZGUsXG4gICAgZW5jb2RpbmdMZW5ndGg6IGxlbmd0aFxufTtcbnZhciBfYnJycF92YXJpbnQgPSB2YXJpbnQ7XG5leHBvcnQgZGVmYXVsdCBfYnJycF92YXJpbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError),\n/* harmony export */   \"default\": () => (/* binding */ pRetry)\n/* harmony export */ });\n/* harmony import */ var retry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! retry */ \"(ssr)/./node_modules/retry/index.js\");\n/* harmony import */ var is_network_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! is-network-error */ \"(ssr)/./node_modules/is-network-error/index.js\");\n\n\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nasync function pRetry(input, options) {\n\treturn new Promise((resolve, reject) => {\n\t\toptions = {...options};\n\t\toptions.onFailedAttempt ??= () => {};\n\t\toptions.shouldRetry ??= () => true;\n\t\toptions.retries ??= 10;\n\n\t\tconst operation = retry__WEBPACK_IMPORTED_MODULE_0__.operation(options);\n\n\t\tconst abortHandler = () => {\n\t\t\toperation.stop();\n\t\t\treject(options.signal?.reason);\n\t\t};\n\n\t\tif (options.signal && !options.signal.aborted) {\n\t\t\toptions.signal.addEventListener('abort', abortHandler, {once: true});\n\t\t}\n\n\t\tconst cleanUp = () => {\n\t\t\toptions.signal?.removeEventListener('abort', abortHandler);\n\t\t\toperation.stop();\n\t\t};\n\n\t\toperation.attempt(async attemptNumber => {\n\t\t\ttry {\n\t\t\t\tconst result = await input(attemptNumber);\n\t\t\t\tcleanUp();\n\t\t\t\tresolve(result);\n\t\t\t} catch (error) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\tthrow new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (error instanceof AbortError) {\n\t\t\t\t\t\tthrow error.originalError;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (error instanceof TypeError && !(0,is_network_error__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(error)) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\t\tif (!(await options.shouldRetry(error))) {\n\t\t\t\t\t\toperation.stop();\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\n\t\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\t\tthrow operation.mainError();\n\t\t\t\t\t}\n\t\t\t\t} catch (finalError) {\n\t\t\t\t\tdecorateErrorWithCounts(finalError, attemptNumber, options);\n\t\t\t\t\tcleanUp();\n\t\t\t\t\treject(finalError);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9wLXJldHJ5L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEI7QUFDb0I7O0FBRXZDO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSyxTQUFTO0FBQ2QsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLDRDQUFlOztBQUVuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJEQUEyRCxXQUFXO0FBQ3RFOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLG9EQUFvRCxNQUFNO0FBQzFEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSx3Q0FBd0MsNERBQWM7QUFDdEQ7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQvbm9kZV9tb2R1bGVzL3AtcmV0cnkvaW5kZXguanM/MWM4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmV0cnkgZnJvbSAncmV0cnknO1xuaW1wb3J0IGlzTmV0d29ya0Vycm9yIGZyb20gJ2lzLW5ldHdvcmstZXJyb3InO1xuXG5leHBvcnQgY2xhc3MgQWJvcnRFcnJvciBleHRlbmRzIEVycm9yIHtcblx0Y29uc3RydWN0b3IobWVzc2FnZSkge1xuXHRcdHN1cGVyKCk7XG5cblx0XHRpZiAobWVzc2FnZSBpbnN0YW5jZW9mIEVycm9yKSB7XG5cdFx0XHR0aGlzLm9yaWdpbmFsRXJyb3IgPSBtZXNzYWdlO1xuXHRcdFx0KHttZXNzYWdlfSA9IG1lc3NhZ2UpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLm9yaWdpbmFsRXJyb3IgPSBuZXcgRXJyb3IobWVzc2FnZSk7XG5cdFx0XHR0aGlzLm9yaWdpbmFsRXJyb3Iuc3RhY2sgPSB0aGlzLnN0YWNrO1xuXHRcdH1cblxuXHRcdHRoaXMubmFtZSA9ICdBYm9ydEVycm9yJztcblx0XHR0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuXHR9XG59XG5cbmNvbnN0IGRlY29yYXRlRXJyb3JXaXRoQ291bnRzID0gKGVycm9yLCBhdHRlbXB0TnVtYmVyLCBvcHRpb25zKSA9PiB7XG5cdC8vIE1pbnVzIDEgZnJvbSBhdHRlbXB0TnVtYmVyIGJlY2F1c2UgdGhlIGZpcnN0IGF0dGVtcHQgZG9lcyBub3QgY291bnQgYXMgYSByZXRyeVxuXHRjb25zdCByZXRyaWVzTGVmdCA9IG9wdGlvbnMucmV0cmllcyAtIChhdHRlbXB0TnVtYmVyIC0gMSk7XG5cblx0ZXJyb3IuYXR0ZW1wdE51bWJlciA9IGF0dGVtcHROdW1iZXI7XG5cdGVycm9yLnJldHJpZXNMZWZ0ID0gcmV0cmllc0xlZnQ7XG5cdHJldHVybiBlcnJvcjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIHBSZXRyeShpbnB1dCwgb3B0aW9ucykge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRcdG9wdGlvbnMgPSB7Li4ub3B0aW9uc307XG5cdFx0b3B0aW9ucy5vbkZhaWxlZEF0dGVtcHQgPz89ICgpID0+IHt9O1xuXHRcdG9wdGlvbnMuc2hvdWxkUmV0cnkgPz89ICgpID0+IHRydWU7XG5cdFx0b3B0aW9ucy5yZXRyaWVzID8/PSAxMDtcblxuXHRcdGNvbnN0IG9wZXJhdGlvbiA9IHJldHJ5Lm9wZXJhdGlvbihvcHRpb25zKTtcblxuXHRcdGNvbnN0IGFib3J0SGFuZGxlciA9ICgpID0+IHtcblx0XHRcdG9wZXJhdGlvbi5zdG9wKCk7XG5cdFx0XHRyZWplY3Qob3B0aW9ucy5zaWduYWw/LnJlYXNvbik7XG5cdFx0fTtcblxuXHRcdGlmIChvcHRpb25zLnNpZ25hbCAmJiAhb3B0aW9ucy5zaWduYWwuYWJvcnRlZCkge1xuXHRcdFx0b3B0aW9ucy5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBhYm9ydEhhbmRsZXIsIHtvbmNlOiB0cnVlfSk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgY2xlYW5VcCA9ICgpID0+IHtcblx0XHRcdG9wdGlvbnMuc2lnbmFsPy5yZW1vdmVFdmVudExpc3RlbmVyKCdhYm9ydCcsIGFib3J0SGFuZGxlcik7XG5cdFx0XHRvcGVyYXRpb24uc3RvcCgpO1xuXHRcdH07XG5cblx0XHRvcGVyYXRpb24uYXR0ZW1wdChhc3luYyBhdHRlbXB0TnVtYmVyID0+IHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbnN0IHJlc3VsdCA9IGF3YWl0IGlucHV0KGF0dGVtcHROdW1iZXIpO1xuXHRcdFx0XHRjbGVhblVwKCk7XG5cdFx0XHRcdHJlc29sdmUocmVzdWx0KTtcblx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0aWYgKCEoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikpIHtcblx0XHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoYE5vbi1lcnJvciB3YXMgdGhyb3duOiBcIiR7ZXJyb3J9XCIuIFlvdSBzaG91bGQgb25seSB0aHJvdyBlcnJvcnMuYCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKGVycm9yIGluc3RhbmNlb2YgQWJvcnRFcnJvcikge1xuXHRcdFx0XHRcdFx0dGhyb3cgZXJyb3Iub3JpZ2luYWxFcnJvcjtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoZXJyb3IgaW5zdGFuY2VvZiBUeXBlRXJyb3IgJiYgIWlzTmV0d29ya0Vycm9yKGVycm9yKSkge1xuXHRcdFx0XHRcdFx0dGhyb3cgZXJyb3I7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZGVjb3JhdGVFcnJvcldpdGhDb3VudHMoZXJyb3IsIGF0dGVtcHROdW1iZXIsIG9wdGlvbnMpO1xuXG5cdFx0XHRcdFx0aWYgKCEoYXdhaXQgb3B0aW9ucy5zaG91bGRSZXRyeShlcnJvcikpKSB7XG5cdFx0XHRcdFx0XHRvcGVyYXRpb24uc3RvcCgpO1xuXHRcdFx0XHRcdFx0cmVqZWN0KGVycm9yKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRhd2FpdCBvcHRpb25zLm9uRmFpbGVkQXR0ZW1wdChlcnJvcik7XG5cblx0XHRcdFx0XHRpZiAoIW9wZXJhdGlvbi5yZXRyeShlcnJvcikpIHtcblx0XHRcdFx0XHRcdHRocm93IG9wZXJhdGlvbi5tYWluRXJyb3IoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gY2F0Y2ggKGZpbmFsRXJyb3IpIHtcblx0XHRcdFx0XHRkZWNvcmF0ZUVycm9yV2l0aENvdW50cyhmaW5hbEVycm9yLCBhdHRlbXB0TnVtYmVyLCBvcHRpb25zKTtcblx0XHRcdFx0XHRjbGVhblVwKCk7XG5cdFx0XHRcdFx0cmVqZWN0KGZpbmFsRXJyb3IpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/upload-client/node_modules/p-retry/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/ability.js":
/*!********************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/ability.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asAbilities: () => (/* binding */ asAbilities)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n\nconst setOfAbilities = new Set(_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_0__.abilitiesAsStrings);\n/**\n * Verify and return Abilities.\n *\n * Given a list of strings representing capability names (Abilities),\n * verify that all the strings are valid Abilities and return Abilities[].\n *\n * Abilities[] is still just a list of strings, but this helps us play\n * nice with Typescript.\n *\n * @param {string[]} abilities\n * @returns {import('@web3-storage/capabilities/types').ServiceAbility[]}\n */\nfunction asAbilities(abilities) {\n    for (const ability of abilities) {\n        if (!setOfAbilities.has(\n        /** @type {import('@web3-storage/capabilities/types').ServiceAbility} */ (ability))) {\n            throw new Error(`${ability} is not a supported capability`);\n        }\n    }\n    return /** @type {import('@web3-storage/capabilities/types').ServiceAbility[]} */ (abilities);\n}\n//# sourceMappingURL=ability.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9hYmlsaXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ2hFLCtCQUErQiwwRUFBa0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiwyREFBMkQ7QUFDOUUsK0JBQStCLFNBQVM7QUFDeEM7QUFDQTtBQUNBLHNCQUFzQiw2REFBNkQ7QUFDbkY7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvYWJpbGl0eS5qcz9hODYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFiaWxpdGllc0FzU3RyaW5ncyB9IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzJztcbmNvbnN0IHNldE9mQWJpbGl0aWVzID0gbmV3IFNldChhYmlsaXRpZXNBc1N0cmluZ3MpO1xuLyoqXG4gKiBWZXJpZnkgYW5kIHJldHVybiBBYmlsaXRpZXMuXG4gKlxuICogR2l2ZW4gYSBsaXN0IG9mIHN0cmluZ3MgcmVwcmVzZW50aW5nIGNhcGFiaWxpdHkgbmFtZXMgKEFiaWxpdGllcyksXG4gKiB2ZXJpZnkgdGhhdCBhbGwgdGhlIHN0cmluZ3MgYXJlIHZhbGlkIEFiaWxpdGllcyBhbmQgcmV0dXJuIEFiaWxpdGllc1tdLlxuICpcbiAqIEFiaWxpdGllc1tdIGlzIHN0aWxsIGp1c3QgYSBsaXN0IG9mIHN0cmluZ3MsIGJ1dCB0aGlzIGhlbHBzIHVzIHBsYXlcbiAqIG5pY2Ugd2l0aCBUeXBlc2NyaXB0LlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nW119IGFiaWxpdGllc1xuICogQHJldHVybnMge2ltcG9ydCgnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdHlwZXMnKS5TZXJ2aWNlQWJpbGl0eVtdfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNBYmlsaXRpZXMoYWJpbGl0aWVzKSB7XG4gICAgZm9yIChjb25zdCBhYmlsaXR5IG9mIGFiaWxpdGllcykge1xuICAgICAgICBpZiAoIXNldE9mQWJpbGl0aWVzLmhhcyhcbiAgICAgICAgLyoqIEB0eXBlIHtpbXBvcnQoJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3R5cGVzJykuU2VydmljZUFiaWxpdHl9ICovIChhYmlsaXR5KSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHthYmlsaXR5fSBpcyBub3QgYSBzdXBwb3J0ZWQgY2FwYWJpbGl0eWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAvKiogQHR5cGUge2ltcG9ydCgnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMvdHlwZXMnKS5TZXJ2aWNlQWJpbGl0eVtdfSAqLyAoYWJpbGl0aWVzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFiaWxpdHkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/ability.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/account.js":
/*!********************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/account.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Account: () => (/* binding */ Account),\n/* harmony export */   AccountPlan: () => (/* binding */ AccountPlan),\n/* harmony export */   externalLogin: () => (/* binding */ externalLogin),\n/* harmony export */   fromEmail: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_6__.fromEmail),\n/* harmony export */   list: () => (/* binding */ list),\n/* harmony export */   login: () => (/* binding */ login)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js\");\n/* harmony import */ var _capability_access_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./capability/access.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/access.js\");\n/* harmony import */ var _capability_plan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./capability/plan.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/plan.js\");\n/* harmony import */ var _capability_subscription_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./capability/subscription.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/subscription.js\");\n/* harmony import */ var _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @web3-storage/access/agent */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent.js\");\n/* harmony import */ var _web3_storage_access_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @web3-storage/access/provider */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/provider.js\");\n/* harmony import */ var _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-storage/did-mailto */ \"(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/index.js\");\n/* harmony import */ var _web3_storage_capabilities_ucan__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @web3-storage/capabilities/ucan */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/ucan.js\");\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('@web3-storage/did-mailto').EmailAddress} EmailAddress\n */\n/**\n * List all accounts that agent has stored access to. Returns a dictionary\n * of accounts keyed by their `did:mailto` identifier.\n *\n * @param {{agent: API.Agent}} client\n * @param {object} query\n * @param {API.DID<'mailto'>} [query.account]\n */\nconst list = ({ agent }, { account } = {}) => {\n    const query = /** @type {API.CapabilityQuery} */ ({\n        with: account ?? /did:mailto:.*/,\n        can: '*',\n    });\n    const proofs = agent.proofs([query]);\n    /** @type {Record<API.DidMailto, Account>} */\n    const accounts = {};\n    /** @type {Record<string, API.Delegation>} */\n    const attestations = {};\n    for (const proof of proofs) {\n        const access = _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_4__.Delegation.allows(proof);\n        for (const [resource, abilities] of Object.entries(access)) {\n            if (_web3_storage_access_provider__WEBPACK_IMPORTED_MODULE_5__.AccountDID.is(resource) && abilities['*']) {\n                const id = /** @type {API.DidMailto} */ (resource);\n                const account = accounts[id] ||\n                    (accounts[id] = new Account({ id, agent, proofs: [] }));\n                account.addProof(proof);\n            }\n            for (const settings of /** @type {{proof?:API.Link}[]} */ (abilities['ucan/attest'] || [])) {\n                const id = settings.proof;\n                if (id) {\n                    attestations[`${id}`] = proof;\n                }\n            }\n        }\n    }\n    for (const account of Object.values(accounts)) {\n        for (const proof of account.proofs) {\n            const attestation = attestations[`${proof.cid}`];\n            if (attestation) {\n                account.addProof(attestation);\n            }\n        }\n    }\n    return accounts;\n};\n/**\n * Attempts to obtains an account access by performing an authentication with\n * the did:mailto account corresponding to given email. Process involves out\n * of bound email verification, so this function returns a promise that will\n * resolve to an account only after access has been granted by the email owner\n * by clicking on the link in the email. If the link is not clicked within the\n * authorization session time bounds (currently 15 minutes), the promise will\n * resolve to an error.\n *\n * @param {{agent: API.Agent}} client\n * @param {EmailAddress} email\n * @param {object} [options]\n * @param {AbortSignal} [options.signal]\n * @returns {Promise<API.Result<Account, Error>>}\n */\nconst login = async ({ agent }, email, options = {}) => {\n    const account = (0,_web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_6__.fromEmail)(email);\n    // If we already have a session for this account we\n    // skip the authentication process, otherwise we will\n    // end up adding more UCAN proofs and attestations to\n    // the store which we then will be sending when using\n    // this account.\n    // Note: This is not a robust solution as there may be\n    // reasons to re-authenticate e.g. previous session is\n    // no longer valid because it was revoked. But dropping\n    // revoked UCANs from store is something we should do\n    // anyway.\n    const session = list({ agent }, { account })[account];\n    if (session) {\n        return { ok: session };\n    }\n    const result = await _capability_access_js__WEBPACK_IMPORTED_MODULE_1__.request({ agent }, {\n        account,\n        access: _capability_access_js__WEBPACK_IMPORTED_MODULE_1__.accountAccess,\n    });\n    const { ok: access, error } = result;\n    /* c8 ignore next 2 - don't know how to test this */\n    if (error) {\n        return { error };\n    }\n    else {\n        const { ok, error } = await access.claim({ signal: options.signal });\n        /* c8 ignore next 2 - don't know how to test this */\n        if (error) {\n            return { error };\n        }\n        else {\n            return { ok: new Account({ id: account, proofs: ok.proofs, agent }) };\n        }\n    }\n};\n/* c8 ignore start */\n/**\n * Attempts to obtain account access for an out of band authentication process.\n * e.g. OAuth.\n *\n * Authentication is typically performed out of band by an OAuth provider. In\n * the OAuth callback, a delegation for the requested capabilities is issued\n * _from_ the email reported by the OAuth provider _to_ the agent. The service\n * also issues an attestation for this delegation.\n *\n * These capabilities are then claimed (using `access/claim`) and the account\n * email is derived from the delegation to the agent.\n *\n * @param {{agent: API.Agent}} client\n * @param {object} input\n * @param {API.Link} input.request Link to the `access/authorize` invocation.\n * @param {API.UTCUnixTimestamp} input.expiration Seconds in UTC.\n * @param {AbortSignal} [input.signal]\n * @param {string} [input.receiptsEndpoint]\n * @returns {Promise<API.Result<Account, Error>>}\n */\nconst externalLogin = async ({ agent }, { request, expiration, ...options }) => {\n    const access = _capability_access_js__WEBPACK_IMPORTED_MODULE_1__.createPendingAccessRequest({ agent }, { request, expiration });\n    const { ok, error } = await access.claim({ signal: options.signal });\n    /* c8 ignore next 2 - don't know how to test this */\n    if (error) {\n        return { error };\n    }\n    let attestedProof;\n    for (const p of ok.proofs) {\n        if (isUCANAttest(p)) {\n            attestedProof = p.capabilities[0].nb.proof;\n            break;\n        }\n    }\n    if (!attestedProof) {\n        return { error: new Error('missing attestation') };\n    }\n    let account;\n    for (const p of ok.proofs) {\n        if (p.cid.toString() === attestedProof.toString()) {\n            try {\n                account = _capability_access_js__WEBPACK_IMPORTED_MODULE_1__.DIDMailto.fromString(p.issuer.did());\n            }\n            catch (err) {\n                return { error: new Error('invalid account DID', { cause: err }) };\n            }\n            break;\n        }\n    }\n    if (!account) {\n        return { error: new Error('missing attested delegation') };\n    }\n    return { ok: new Account({ id: account, proofs: ok.proofs, agent }) };\n};\n/* c8 ignore end */\n/**\n * @param {API.Delegation} d\n * @returns {d is API.Delegation<[API.UCANAttest]>}\n */\nconst isUCANAttest = (d) => d.capabilities[0].can === _web3_storage_capabilities_ucan__WEBPACK_IMPORTED_MODULE_7__.attest.can;\n/**\n * @typedef {object} Model\n * @property {API.DidMailto} id\n * @property {API.Agent} agent\n * @property {API.Delegation[]} proofs\n */\nclass Account {\n    /**\n     * @param {Model} model\n     */\n    constructor(model) {\n        this.model = model;\n        this.plan = new AccountPlan(model);\n    }\n    get agent() {\n        return this.model.agent;\n    }\n    get proofs() {\n        return this.model.proofs;\n    }\n    did() {\n        return this.model.id;\n    }\n    toEmail() {\n        return (0,_web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_6__.toEmail)(this.did());\n    }\n    /**\n     * @param {API.Delegation} proof\n     */\n    addProof(proof) {\n        this.proofs.push(proof);\n    }\n    toJSON() {\n        return {\n            id: this.did(),\n            proofs: this.proofs\n                // we sort proofs to get a deterministic JSON representation.\n                .sort((a, b) => a.cid.toString().localeCompare(b.cid.toString()))\n                .map((proof) => proof.toJSON()),\n        };\n    }\n    /**\n     * Provisions given `space` with this account.\n     *\n     * @param {API.SpaceDID} space\n     * @param {object} input\n     * @param {API.ProviderDID} [input.provider]\n     * @param {API.Agent} [input.agent]\n     */\n    provision(space, input = {}) {\n        return (0,_web3_storage_access_provider__WEBPACK_IMPORTED_MODULE_5__.add)(this.agent, {\n            ...input,\n            account: this.did(),\n            consumer: space,\n            proofs: this.proofs,\n        });\n    }\n    /**\n     * Saves account in the agent store so it can be accessed across sessions.\n     *\n     * @param {object} input\n     * @param {API.Agent} [input.agent]\n     */\n    async save({ agent = this.agent } = {}) {\n        return await (0,_web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_4__.importAuthorization)(agent, this);\n    }\n}\nclass AccountPlan {\n    /**\n     * @param {Model} model\n     */\n    constructor(model) {\n        this.model = model;\n    }\n    /**\n     * Gets information about the plan associated with this account.\n     *\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async get(options) {\n        return await _capability_plan_js__WEBPACK_IMPORTED_MODULE_2__.get(this.model, {\n            ...options,\n            account: this.model.id,\n            proofs: this.model.proofs,\n        });\n    }\n    /**\n     * Sets the plan associated with this account.\n     *\n     * @param {import('@ucanto/interface').DID} productDID\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async set(productDID, options) {\n        return await _capability_plan_js__WEBPACK_IMPORTED_MODULE_2__.set(this.model, {\n            ...options,\n            account: this.model.id,\n            product: productDID,\n            proofs: this.model.proofs,\n        });\n    }\n    /**\n     * Waits for a payment plan to be selected.\n     * This method continuously checks the account's payment plan status\n     * at a specified interval until a valid plan is selected, or when the timeout is reached,\n     * or when the abort signal is aborted.\n     *\n     * @param {object} [options]\n     * @param {number} [options.interval] - The polling interval in milliseconds (default is 1000ms).\n     * @param {number} [options.timeout] - The maximum time to wait in milliseconds before throwing a timeout error (default is 15 minutes).\n     * @param {AbortSignal} [options.signal] - An optional AbortSignal to cancel the waiting process.\n     * @returns {Promise<import('@web3-storage/access').PlanGetSuccess>} - Resolves once a payment plan is selected within the timeout.\n     * @throws {Error} - Throws an error if there is an issue retrieving the payment plan or if the timeout is exceeded.\n     */\n    async wait(options) {\n        const startTime = Date.now();\n        const interval = options?.interval || 1000; // 1 second\n        const timeout = options?.timeout || 60 * 15 * 1000; // 15 minutes\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const res = await this.get();\n            if (res.ok)\n                return res.ok;\n            if (res.error) {\n                throw new Error(`Error retrieving payment plan: ${res.error}`);\n            }\n            if (Date.now() - startTime > timeout) {\n                throw new Error('Timeout: Payment plan selection took too long.');\n            }\n            if (options?.signal?.aborted) {\n                throw new Error('Aborted: Payment plan selection was aborted.');\n            }\n            console.log('Waiting for payment plan to be selected...');\n            await new Promise((resolve) => setTimeout(resolve, interval));\n        }\n    }\n    /**\n     *\n     * @param {import('@web3-storage/access').AccountDID} accountDID\n     * @param {string} returnURL\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async createAdminSession(accountDID, returnURL, options) {\n        return await _capability_plan_js__WEBPACK_IMPORTED_MODULE_2__.createAdminSession(this.model, {\n            ...options,\n            account: accountDID,\n            returnURL,\n        });\n    }\n    /**\n     *\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async subscriptions(options) {\n        return await _capability_subscription_js__WEBPACK_IMPORTED_MODULE_3__.list(this.model, {\n            ...options,\n            account: this.model.id,\n            proofs: this.model.proofs,\n        });\n    }\n}\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/base.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base: () => (/* binding */ Base)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/access/agent */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent.js\");\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./service.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/service.js\");\n\n\nclass Base {\n    /**\n     * @type {Agent}\n     * @protected\n     */\n    _agent;\n    /**\n     * @type {import('./types.js').ServiceConf}\n     * @protected\n     */\n    _serviceConf;\n    /**\n     * @param {import('@web3-storage/access').AgentData} agentData\n     * @param {object} [options]\n     * @param {import('./types.js').ServiceConf} [options.serviceConf]\n     * @param {URL} [options.receiptsEndpoint]\n     */\n    constructor(agentData, options = {}) {\n        this._serviceConf = options.serviceConf ?? _service_js__WEBPACK_IMPORTED_MODULE_1__.serviceConf;\n        this._agent = new _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_0__.Agent(agentData, {\n            servicePrincipal: this._serviceConf.access.id,\n            // @ts-expect-error I know but it will be HTTP for the forseeable.\n            url: this._serviceConf.access.channel.url,\n            connection: this._serviceConf.access,\n        });\n        this._receiptsEndpoint = options.receiptsEndpoint ?? _service_js__WEBPACK_IMPORTED_MODULE_1__.receiptsEndpoint;\n    }\n    /**\n     * The current user agent (this device).\n     *\n     * @type {Agent}\n     */\n    get agent() {\n        return this._agent;\n    }\n    /**\n     * @protected\n     * @param {import('./types.js').Ability[]} abilities\n     */\n    async _invocationConfig(abilities) {\n        const resource = this._agent.currentSpace();\n        if (!resource) {\n            throw new Error('missing current space: use createSpace() or setCurrentSpace()');\n        }\n        const issuer = this._agent.issuer;\n        const proofs = await this._agent.proofs(abilities.map((can) => ({ can, with: resource })));\n        const audience = this._serviceConf.upload.id;\n        return { issuer, with: resource, proofs, audience };\n    }\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQUNVO0FBQ3REO0FBQ1A7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDBDQUEwQztBQUN6RCxlQUFlLFFBQVE7QUFDdkIsZUFBZSxrQ0FBa0M7QUFDakQsZUFBZSxLQUFLO0FBQ3BCO0FBQ0EsdUNBQXVDO0FBQ3ZDLG1EQUFtRCxvREFBVztBQUM5RCwwQkFBMEIsNkRBQUs7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsNkRBQTZELHlEQUFnQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdDQUFnQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSxxQkFBcUI7QUFDL0Y7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9iYXNlLmpzPzY0MDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWdlbnQgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2FjY2Vzcy9hZ2VudCc7XG5pbXBvcnQgeyBzZXJ2aWNlQ29uZiwgcmVjZWlwdHNFbmRwb2ludCB9IGZyb20gJy4vc2VydmljZS5qcyc7XG5leHBvcnQgY2xhc3MgQmFzZSB7XG4gICAgLyoqXG4gICAgICogQHR5cGUge0FnZW50fVxuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKi9cbiAgICBfYWdlbnQ7XG4gICAgLyoqXG4gICAgICogQHR5cGUge2ltcG9ydCgnLi90eXBlcy5qcycpLlNlcnZpY2VDb25mfVxuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKi9cbiAgICBfc2VydmljZUNvbmY7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJ0B3ZWIzLXN0b3JhZ2UvYWNjZXNzJykuQWdlbnREYXRhfSBhZ2VudERhdGFcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5TZXJ2aWNlQ29uZn0gW29wdGlvbnMuc2VydmljZUNvbmZdXG4gICAgICogQHBhcmFtIHtVUkx9IFtvcHRpb25zLnJlY2VpcHRzRW5kcG9pbnRdXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYWdlbnREYXRhLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgdGhpcy5fc2VydmljZUNvbmYgPSBvcHRpb25zLnNlcnZpY2VDb25mID8/IHNlcnZpY2VDb25mO1xuICAgICAgICB0aGlzLl9hZ2VudCA9IG5ldyBBZ2VudChhZ2VudERhdGEsIHtcbiAgICAgICAgICAgIHNlcnZpY2VQcmluY2lwYWw6IHRoaXMuX3NlcnZpY2VDb25mLmFjY2Vzcy5pZCxcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgSSBrbm93IGJ1dCBpdCB3aWxsIGJlIEhUVFAgZm9yIHRoZSBmb3JzZWVhYmxlLlxuICAgICAgICAgICAgdXJsOiB0aGlzLl9zZXJ2aWNlQ29uZi5hY2Nlc3MuY2hhbm5lbC51cmwsXG4gICAgICAgICAgICBjb25uZWN0aW9uOiB0aGlzLl9zZXJ2aWNlQ29uZi5hY2Nlc3MsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9yZWNlaXB0c0VuZHBvaW50ID0gb3B0aW9ucy5yZWNlaXB0c0VuZHBvaW50ID8/IHJlY2VpcHRzRW5kcG9pbnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBjdXJyZW50IHVzZXIgYWdlbnQgKHRoaXMgZGV2aWNlKS5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtBZ2VudH1cbiAgICAgKi9cbiAgICBnZXQgYWdlbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hZ2VudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHByb3RlY3RlZFxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuQWJpbGl0eVtdfSBhYmlsaXRpZXNcbiAgICAgKi9cbiAgICBhc3luYyBfaW52b2NhdGlvbkNvbmZpZyhhYmlsaXRpZXMpIHtcbiAgICAgICAgY29uc3QgcmVzb3VyY2UgPSB0aGlzLl9hZ2VudC5jdXJyZW50U3BhY2UoKTtcbiAgICAgICAgaWYgKCFyZXNvdXJjZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdtaXNzaW5nIGN1cnJlbnQgc3BhY2U6IHVzZSBjcmVhdGVTcGFjZSgpIG9yIHNldEN1cnJlbnRTcGFjZSgpJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaXNzdWVyID0gdGhpcy5fYWdlbnQuaXNzdWVyO1xuICAgICAgICBjb25zdCBwcm9vZnMgPSBhd2FpdCB0aGlzLl9hZ2VudC5wcm9vZnMoYWJpbGl0aWVzLm1hcCgoY2FuKSA9PiAoeyBjYW4sIHdpdGg6IHJlc291cmNlIH0pKSk7XG4gICAgICAgIGNvbnN0IGF1ZGllbmNlID0gdGhpcy5fc2VydmljZUNvbmYudXBsb2FkLmlkO1xuICAgICAgICByZXR1cm4geyBpc3N1ZXIsIHdpdGg6IHJlc291cmNlLCBwcm9vZnMsIGF1ZGllbmNlIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/access.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/access.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessClient: () => (/* binding */ AccessClient),\n/* harmony export */   DIDMailto: () => (/* reexport module object */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   accountAccess: () => (/* binding */ accountAccess),\n/* harmony export */   claim: () => (/* binding */ claim),\n/* harmony export */   createPendingAccessRequest: () => (/* binding */ createPendingAccessRequest),\n/* harmony export */   delegate: () => (/* binding */ delegate),\n/* harmony export */   request: () => (/* binding */ request),\n/* harmony export */   spaceAccess: () => (/* binding */ spaceAccess)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n/* harmony import */ var _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/access/agent */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent.js\");\n/* harmony import */ var _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/did-mailto */ \"(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/index.js\");\n/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../result.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/result.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js\");\n\n\n\n\n\n\n/**\n * Client for interacting with the `access/*` capabilities.\n */\nclass AccessClient extends _base_js__WEBPACK_IMPORTED_MODULE_0__.Base {\n    /* c8 ignore start - testing websocket code is hard */\n    /**\n     * Authorize the current agent to use capabilities granted to the passed\n     * email account.\n     *\n     * @deprecated Use `request` instead.\n     *\n     * @param {`${string}@${string}`} email\n     * @param {object} [options]\n     * @param {AbortSignal} [options.signal]\n     * @param {Iterable<{ can: API.Ability }>} [options.capabilities]\n     */\n    async authorize(email, options) {\n        const account = _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_2__.fromEmail(email);\n        const authorization = _result_js__WEBPACK_IMPORTED_MODULE_3__.unwrap(await request(this, { account }));\n        const access = _result_js__WEBPACK_IMPORTED_MODULE_3__.unwrap(await authorization.claim(options));\n        await _result_js__WEBPACK_IMPORTED_MODULE_3__.unwrap(await access.save());\n        return access.proofs;\n    }\n    /* c8 ignore stop */\n    /**\n     * Claim delegations granted to the account associated with this agent.\n     *\n     * @param {object} [input]\n     * @param {API.DID} [input.audience]\n     */\n    async claim(input) {\n        const access = _result_js__WEBPACK_IMPORTED_MODULE_3__.unwrap(await claim(this, input));\n        await _result_js__WEBPACK_IMPORTED_MODULE_3__.unwrap(await access.save());\n        return access.proofs;\n    }\n    /**\n     * Requests specified `access` level from the account from the given account.\n     *\n     * @param {object} input\n     * @param {API.AccountDID} input.account\n     * @param {API.Access} [input.access]\n     * @param {AbortSignal} [input.signal]\n     */\n    async request(input) {\n        return await request(this, input);\n    }\n    /**\n     * Shares access with delegates.\n     *\n     * @param {object} input\n     * @param {API.Delegation[]} input.delegations\n     * @param {API.SpaceDID} [input.space]\n     * @param {API.Delegation[]} [input.proofs]\n     */\n    async delegate(input) {\n        return await delegate(this, input);\n    }\n}\n/**\n * @param {{agent: API.Agent}} client\n * @param {object} [input]\n * @param {API.DID} [input.audience]\n */\nconst claim = async ({ agent }, input) => _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_1__.Access.claim(agent, input);\n/**\n * Requests specified `access` level from specified `account`. It will invoke\n * `access/authorize` capability and keep polling `access/claim` capability\n * until access is granted or request is aborted.\n *\n * @param {{agent: API.Agent}} agent\n * @param {object} input\n * @param {API.AccountDID} input.account\n * @param {API.Access} [input.access]\n * @param {API.DID} [input.audience]\n */\nconst request = async ({ agent }, input) => _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_1__.Access.request(agent, input);\n/**\n * Creates a new `PendingAccessRequest` object that can be used to poll for the\n * requested delegation through `access/claim` capability.\n *\n * @param {{agent: API.Agent}} agent\n * @param {object} input\n * @param {API.Link} input.request - Link to the `access/authorize` invocation.\n * @param {API.UTCUnixTimestamp} input.expiration - Seconds in UTC.\n * @param {API.DID} [input.audience] - Principal requesting an access.\n * @param {API.ProviderDID} [input.provider] - Provider handling request.\n */\n/* c8 ignore next 2 */\nconst createPendingAccessRequest = ({ agent }, input) => _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_1__.Access.createPendingAccessRequest(agent, input);\n/**\n *\n * @param {{agent: API.Agent}} agent\n * @param {object} input\n * @param {API.Delegation[]} input.delegations\n * @param {API.SpaceDID} [input.space]\n * @param {API.Delegation[]} [input.proofs]\n */\nconst delegate = async ({ agent }, input) => _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_1__.Access.delegate(agent, input);\nconst { spaceAccess, accountAccess } = _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_1__.Access;\n//# sourceMappingURL=access.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L2FjY2Vzcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ2tCO0FBQ0U7QUFDZjtBQUNKO0FBQ2Q7QUFDckI7QUFDQTtBQUNBO0FBQ08sMkJBQTJCLDBDQUFJO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxHQUFHLE9BQU8sR0FBRyxPQUFPLEdBQUc7QUFDdEMsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsYUFBYTtBQUM1QixlQUFlLFdBQVcsa0JBQWtCLEdBQUc7QUFDL0M7QUFDQTtBQUNBLHdCQUF3QiwrREFBbUI7QUFDM0MsOEJBQThCLDhDQUFhLHVCQUF1QixTQUFTO0FBQzNFLHVCQUF1Qiw4Q0FBYTtBQUNwQyxjQUFjLDhDQUFhO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBLHVCQUF1Qiw4Q0FBYTtBQUNwQyxjQUFjLDhDQUFhO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxnQkFBZ0I7QUFDL0IsZUFBZSxZQUFZO0FBQzNCLGVBQWUsYUFBYTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLGtCQUFrQjtBQUNqQyxlQUFlLGNBQWM7QUFDN0IsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUztBQUNwQjtBQUNPLHVCQUF1QixPQUFPLFlBQVksb0VBQWtCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxnQkFBZ0I7QUFDM0IsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsU0FBUztBQUNwQjtBQUNPLHlCQUF5QixPQUFPLFlBQVksc0VBQW9CO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLHNCQUFzQjtBQUNqQyxXQUFXLFNBQVM7QUFDcEIsV0FBVyxpQkFBaUI7QUFDNUI7QUFDQTtBQUNPLHNDQUFzQyxPQUFPLFlBQVkseUZBQXVDO0FBQ3ZHO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxrQkFBa0I7QUFDN0IsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsa0JBQWtCO0FBQzdCO0FBQ08sMEJBQTBCLE9BQU8sWUFBWSx1RUFBcUI7QUFDbEUsUUFBUSw2QkFBNkIsRUFBRSw4REFBWTtBQUMxRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvY2FwYWJpbGl0eS9hY2Nlc3MuanM/ODNiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlIH0gZnJvbSAnLi4vYmFzZS5qcyc7XG5pbXBvcnQgKiBhcyBBZ2VudCBmcm9tICdAd2ViMy1zdG9yYWdlL2FjY2Vzcy9hZ2VudCc7XG5pbXBvcnQgKiBhcyBESURNYWlsdG8gZnJvbSAnQHdlYjMtc3RvcmFnZS9kaWQtbWFpbHRvJztcbmltcG9ydCAqIGFzIFJlc3VsdCBmcm9tICcuLi9yZXN1bHQuanMnO1xuaW1wb3J0ICogYXMgQVBJIGZyb20gJy4uL3R5cGVzLmpzJztcbmV4cG9ydCB7IERJRE1haWx0byB9O1xuLyoqXG4gKiBDbGllbnQgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIGBhY2Nlc3MvKmAgY2FwYWJpbGl0aWVzLlxuICovXG5leHBvcnQgY2xhc3MgQWNjZXNzQ2xpZW50IGV4dGVuZHMgQmFzZSB7XG4gICAgLyogYzggaWdub3JlIHN0YXJ0IC0gdGVzdGluZyB3ZWJzb2NrZXQgY29kZSBpcyBoYXJkICovXG4gICAgLyoqXG4gICAgICogQXV0aG9yaXplIHRoZSBjdXJyZW50IGFnZW50IHRvIHVzZSBjYXBhYmlsaXRpZXMgZ3JhbnRlZCB0byB0aGUgcGFzc2VkXG4gICAgICogZW1haWwgYWNjb3VudC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFVzZSBgcmVxdWVzdGAgaW5zdGVhZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7YCR7c3RyaW5nfUAke3N0cmluZ31gfSBlbWFpbFxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge0Fib3J0U2lnbmFsfSBbb3B0aW9ucy5zaWduYWxdXG4gICAgICogQHBhcmFtIHtJdGVyYWJsZTx7IGNhbjogQVBJLkFiaWxpdHkgfT59IFtvcHRpb25zLmNhcGFiaWxpdGllc11cbiAgICAgKi9cbiAgICBhc3luYyBhdXRob3JpemUoZW1haWwsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgYWNjb3VudCA9IERJRE1haWx0by5mcm9tRW1haWwoZW1haWwpO1xuICAgICAgICBjb25zdCBhdXRob3JpemF0aW9uID0gUmVzdWx0LnVud3JhcChhd2FpdCByZXF1ZXN0KHRoaXMsIHsgYWNjb3VudCB9KSk7XG4gICAgICAgIGNvbnN0IGFjY2VzcyA9IFJlc3VsdC51bndyYXAoYXdhaXQgYXV0aG9yaXphdGlvbi5jbGFpbShvcHRpb25zKSk7XG4gICAgICAgIGF3YWl0IFJlc3VsdC51bndyYXAoYXdhaXQgYWNjZXNzLnNhdmUoKSk7XG4gICAgICAgIHJldHVybiBhY2Nlc3MucHJvb2ZzO1xuICAgIH1cbiAgICAvKiBjOCBpZ25vcmUgc3RvcCAqL1xuICAgIC8qKlxuICAgICAqIENsYWltIGRlbGVnYXRpb25zIGdyYW50ZWQgdG8gdGhlIGFjY291bnQgYXNzb2NpYXRlZCB3aXRoIHRoaXMgYWdlbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW2lucHV0XVxuICAgICAqIEBwYXJhbSB7QVBJLkRJRH0gW2lucHV0LmF1ZGllbmNlXVxuICAgICAqL1xuICAgIGFzeW5jIGNsYWltKGlucHV0KSB7XG4gICAgICAgIGNvbnN0IGFjY2VzcyA9IFJlc3VsdC51bndyYXAoYXdhaXQgY2xhaW0odGhpcywgaW5wdXQpKTtcbiAgICAgICAgYXdhaXQgUmVzdWx0LnVud3JhcChhd2FpdCBhY2Nlc3Muc2F2ZSgpKTtcbiAgICAgICAgcmV0dXJuIGFjY2Vzcy5wcm9vZnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlcXVlc3RzIHNwZWNpZmllZCBgYWNjZXNzYCBsZXZlbCBmcm9tIHRoZSBhY2NvdW50IGZyb20gdGhlIGdpdmVuIGFjY291bnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gaW5wdXRcbiAgICAgKiBAcGFyYW0ge0FQSS5BY2NvdW50RElEfSBpbnB1dC5hY2NvdW50XG4gICAgICogQHBhcmFtIHtBUEkuQWNjZXNzfSBbaW5wdXQuYWNjZXNzXVxuICAgICAqIEBwYXJhbSB7QWJvcnRTaWduYWx9IFtpbnB1dC5zaWduYWxdXG4gICAgICovXG4gICAgYXN5bmMgcmVxdWVzdChpbnB1dCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVxdWVzdCh0aGlzLCBpbnB1dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNoYXJlcyBhY2Nlc3Mgd2l0aCBkZWxlZ2F0ZXMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gaW5wdXRcbiAgICAgKiBAcGFyYW0ge0FQSS5EZWxlZ2F0aW9uW119IGlucHV0LmRlbGVnYXRpb25zXG4gICAgICogQHBhcmFtIHtBUEkuU3BhY2VESUR9IFtpbnB1dC5zcGFjZV1cbiAgICAgKiBAcGFyYW0ge0FQSS5EZWxlZ2F0aW9uW119IFtpbnB1dC5wcm9vZnNdXG4gICAgICovXG4gICAgYXN5bmMgZGVsZWdhdGUoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IGRlbGVnYXRlKHRoaXMsIGlucHV0KTtcbiAgICB9XG59XG4vKipcbiAqIEBwYXJhbSB7e2FnZW50OiBBUEkuQWdlbnR9fSBjbGllbnRcbiAqIEBwYXJhbSB7b2JqZWN0fSBbaW5wdXRdXG4gKiBAcGFyYW0ge0FQSS5ESUR9IFtpbnB1dC5hdWRpZW5jZV1cbiAqL1xuZXhwb3J0IGNvbnN0IGNsYWltID0gYXN5bmMgKHsgYWdlbnQgfSwgaW5wdXQpID0+IEFnZW50LkFjY2Vzcy5jbGFpbShhZ2VudCwgaW5wdXQpO1xuLyoqXG4gKiBSZXF1ZXN0cyBzcGVjaWZpZWQgYGFjY2Vzc2AgbGV2ZWwgZnJvbSBzcGVjaWZpZWQgYGFjY291bnRgLiBJdCB3aWxsIGludm9rZVxuICogYGFjY2Vzcy9hdXRob3JpemVgIGNhcGFiaWxpdHkgYW5kIGtlZXAgcG9sbGluZyBgYWNjZXNzL2NsYWltYCBjYXBhYmlsaXR5XG4gKiB1bnRpbCBhY2Nlc3MgaXMgZ3JhbnRlZCBvciByZXF1ZXN0IGlzIGFib3J0ZWQuXG4gKlxuICogQHBhcmFtIHt7YWdlbnQ6IEFQSS5BZ2VudH19IGFnZW50XG4gKiBAcGFyYW0ge29iamVjdH0gaW5wdXRcbiAqIEBwYXJhbSB7QVBJLkFjY291bnRESUR9IGlucHV0LmFjY291bnRcbiAqIEBwYXJhbSB7QVBJLkFjY2Vzc30gW2lucHV0LmFjY2Vzc11cbiAqIEBwYXJhbSB7QVBJLkRJRH0gW2lucHV0LmF1ZGllbmNlXVxuICovXG5leHBvcnQgY29uc3QgcmVxdWVzdCA9IGFzeW5jICh7IGFnZW50IH0sIGlucHV0KSA9PiBBZ2VudC5BY2Nlc3MucmVxdWVzdChhZ2VudCwgaW5wdXQpO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IGBQZW5kaW5nQWNjZXNzUmVxdWVzdGAgb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gcG9sbCBmb3IgdGhlXG4gKiByZXF1ZXN0ZWQgZGVsZWdhdGlvbiB0aHJvdWdoIGBhY2Nlc3MvY2xhaW1gIGNhcGFiaWxpdHkuXG4gKlxuICogQHBhcmFtIHt7YWdlbnQ6IEFQSS5BZ2VudH19IGFnZW50XG4gKiBAcGFyYW0ge29iamVjdH0gaW5wdXRcbiAqIEBwYXJhbSB7QVBJLkxpbmt9IGlucHV0LnJlcXVlc3QgLSBMaW5rIHRvIHRoZSBgYWNjZXNzL2F1dGhvcml6ZWAgaW52b2NhdGlvbi5cbiAqIEBwYXJhbSB7QVBJLlVUQ1VuaXhUaW1lc3RhbXB9IGlucHV0LmV4cGlyYXRpb24gLSBTZWNvbmRzIGluIFVUQy5cbiAqIEBwYXJhbSB7QVBJLkRJRH0gW2lucHV0LmF1ZGllbmNlXSAtIFByaW5jaXBhbCByZXF1ZXN0aW5nIGFuIGFjY2Vzcy5cbiAqIEBwYXJhbSB7QVBJLlByb3ZpZGVyRElEfSBbaW5wdXQucHJvdmlkZXJdIC0gUHJvdmlkZXIgaGFuZGxpbmcgcmVxdWVzdC5cbiAqL1xuLyogYzggaWdub3JlIG5leHQgMiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVBlbmRpbmdBY2Nlc3NSZXF1ZXN0ID0gKHsgYWdlbnQgfSwgaW5wdXQpID0+IEFnZW50LkFjY2Vzcy5jcmVhdGVQZW5kaW5nQWNjZXNzUmVxdWVzdChhZ2VudCwgaW5wdXQpO1xuLyoqXG4gKlxuICogQHBhcmFtIHt7YWdlbnQ6IEFQSS5BZ2VudH19IGFnZW50XG4gKiBAcGFyYW0ge29iamVjdH0gaW5wdXRcbiAqIEBwYXJhbSB7QVBJLkRlbGVnYXRpb25bXX0gaW5wdXQuZGVsZWdhdGlvbnNcbiAqIEBwYXJhbSB7QVBJLlNwYWNlRElEfSBbaW5wdXQuc3BhY2VdXG4gKiBAcGFyYW0ge0FQSS5EZWxlZ2F0aW9uW119IFtpbnB1dC5wcm9vZnNdXG4gKi9cbmV4cG9ydCBjb25zdCBkZWxlZ2F0ZSA9IGFzeW5jICh7IGFnZW50IH0sIGlucHV0KSA9PiBBZ2VudC5BY2Nlc3MuZGVsZWdhdGUoYWdlbnQsIGlucHV0KTtcbmV4cG9ydCBjb25zdCB7IHNwYWNlQWNjZXNzLCBhY2NvdW50QWNjZXNzIH0gPSBBZ2VudC5BY2Nlc3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY2Nlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/access.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/blob.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/blob.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlobClient: () => (/* binding */ BlobClient)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/upload-client */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/multiformats/esm/src/hashes/sha2.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n\n\n\n\n/**\n * Client for interacting with the `blob/*` capabilities.\n */\nclass BlobClient extends _base_js__WEBPACK_IMPORTED_MODULE_3__.Base {\n    /**\n     * Store a Blob to the resource.\n     *\n     * Required delegated capabilities:\n     * - `space/blob/add`\n     *\n     * @param {Blob} blob - blob data.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async add(blob, options = {}) {\n        options = {\n            receiptsEndpoint: this._receiptsEndpoint.toString(),\n            connection: this._serviceConf.upload,\n            ...options,\n        };\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Blob.add.can]);\n        const bytes = new Uint8Array(await blob.arrayBuffer());\n        const digest = await multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_2__.sha256.digest(bytes);\n        return { digest, ...(await _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Blob.add(conf, digest, bytes, options)) };\n    }\n    /**\n     * List blobs stored to the resource.\n     *\n     * Required delegated capabilities:\n     * - `space/blob/list`\n     *\n     * @param {import('../types.js').ListRequestOptions} [options]\n     */\n    async list(options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Blob.list.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Blob.list(conf, options);\n    }\n    /**\n     * Remove a stored blob by multihash digest.\n     *\n     * Required delegated capabilities:\n     * - `space/blob/remove`\n     *\n     * @param {import('multiformats').MultihashDigest} digest - digest of blob to remove.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async remove(digest, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Blob.remove.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Blob.remove(conf, digest, options);\n    }\n    /**\n     * Gets a stored blob by multihash digest.\n     *\n     * @param {import('multiformats').MultihashDigest} digest - digest of blob to get.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async get(digest, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Blob.get.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Blob.get(conf, digest, options);\n    }\n}\n//# sourceMappingURL=blob.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L2Jsb2IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBbUQ7QUFDbUI7QUFDcEI7QUFDaEI7QUFDbEM7QUFDQTtBQUNBO0FBQ08seUJBQXlCLDBDQUFJO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTTtBQUNyQixlQUFlLHNDQUFzQztBQUNyRDtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGdFQUFvQjtBQUN2RTtBQUNBLDZCQUE2Qiw0REFBTTtBQUNuQyxpQkFBaUIsa0JBQWtCLGlFQUFRO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQ0FBMEM7QUFDekQ7QUFDQSwyQkFBMkI7QUFDM0IsbURBQW1ELGlFQUFxQjtBQUN4RTtBQUNBLGVBQWUsa0VBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdDQUF3QztBQUN2RCxlQUFlLHNDQUFzQztBQUNyRDtBQUNBLHFDQUFxQztBQUNyQyxtREFBbUQsbUVBQXVCO0FBQzFFO0FBQ0EsZUFBZSxvRUFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsd0NBQXdDO0FBQ3ZELGVBQWUsc0NBQXNDO0FBQ3JEO0FBQ0Esa0NBQWtDO0FBQ2xDLG1EQUFtRCxnRUFBb0I7QUFDdkU7QUFDQSxlQUFlLGlFQUFRO0FBQ3ZCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvY2FwYWJpbGl0eS9ibG9iLmpzP2M2ZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmxvYiB9IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvdXBsb2FkLWNsaWVudCc7XG5pbXBvcnQgeyBCbG9iIGFzIEJsb2JDYXBhYmlsaXRpZXMgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcyc7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTInO1xuaW1wb3J0IHsgQmFzZSB9IGZyb20gJy4uL2Jhc2UuanMnO1xuLyoqXG4gKiBDbGllbnQgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIGBibG9iLypgIGNhcGFiaWxpdGllcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEJsb2JDbGllbnQgZXh0ZW5kcyBCYXNlIHtcbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIEJsb2IgdG8gdGhlIHJlc291cmNlLlxuICAgICAqXG4gICAgICogUmVxdWlyZWQgZGVsZWdhdGVkIGNhcGFiaWxpdGllczpcbiAgICAgKiAtIGBzcGFjZS9ibG9iL2FkZGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7QmxvYn0gYmxvYiAtIGJsb2IgZGF0YS5cbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5SZXF1ZXN0T3B0aW9uc30gW29wdGlvbnNdXG4gICAgICovXG4gICAgYXN5bmMgYWRkKGJsb2IsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgcmVjZWlwdHNFbmRwb2ludDogdGhpcy5fcmVjZWlwdHNFbmRwb2ludC50b1N0cmluZygpLFxuICAgICAgICAgICAgY29ubmVjdGlvbjogdGhpcy5fc2VydmljZUNvbmYudXBsb2FkLFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgY29uZiA9IGF3YWl0IHRoaXMuX2ludm9jYXRpb25Db25maWcoW0Jsb2JDYXBhYmlsaXRpZXMuYWRkLmNhbl0pO1xuICAgICAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGF3YWl0IGJsb2IuYXJyYXlCdWZmZXIoKSk7XG4gICAgICAgIGNvbnN0IGRpZ2VzdCA9IGF3YWl0IHNoYTI1Ni5kaWdlc3QoYnl0ZXMpO1xuICAgICAgICByZXR1cm4geyBkaWdlc3QsIC4uLihhd2FpdCBCbG9iLmFkZChjb25mLCBkaWdlc3QsIGJ5dGVzLCBvcHRpb25zKSkgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCBibG9icyBzdG9yZWQgdG8gdGhlIHJlc291cmNlLlxuICAgICAqXG4gICAgICogUmVxdWlyZWQgZGVsZWdhdGVkIGNhcGFiaWxpdGllczpcbiAgICAgKiAtIGBzcGFjZS9ibG9iL2xpc3RgXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5MaXN0UmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICAgICAqL1xuICAgIGFzeW5jIGxpc3Qob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGNvbmYgPSBhd2FpdCB0aGlzLl9pbnZvY2F0aW9uQ29uZmlnKFtCbG9iQ2FwYWJpbGl0aWVzLmxpc3QuY2FuXSk7XG4gICAgICAgIG9wdGlvbnMuY29ubmVjdGlvbiA9IHRoaXMuX3NlcnZpY2VDb25mLnVwbG9hZDtcbiAgICAgICAgcmV0dXJuIEJsb2IubGlzdChjb25mLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGEgc3RvcmVkIGJsb2IgYnkgbXVsdGloYXNoIGRpZ2VzdC5cbiAgICAgKlxuICAgICAqIFJlcXVpcmVkIGRlbGVnYXRlZCBjYXBhYmlsaXRpZXM6XG4gICAgICogLSBgc3BhY2UvYmxvYi9yZW1vdmVgXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnbXVsdGlmb3JtYXRzJykuTXVsdGloYXNoRGlnZXN0fSBkaWdlc3QgLSBkaWdlc3Qgb2YgYmxvYiB0byByZW1vdmUuXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuUmVxdWVzdE9wdGlvbnN9IFtvcHRpb25zXVxuICAgICAqL1xuICAgIGFzeW5jIHJlbW92ZShkaWdlc3QsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBjb25mID0gYXdhaXQgdGhpcy5faW52b2NhdGlvbkNvbmZpZyhbQmxvYkNhcGFiaWxpdGllcy5yZW1vdmUuY2FuXSk7XG4gICAgICAgIG9wdGlvbnMuY29ubmVjdGlvbiA9IHRoaXMuX3NlcnZpY2VDb25mLnVwbG9hZDtcbiAgICAgICAgcmV0dXJuIEJsb2IucmVtb3ZlKGNvbmYsIGRpZ2VzdCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSBzdG9yZWQgYmxvYiBieSBtdWx0aWhhc2ggZGlnZXN0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJ211bHRpZm9ybWF0cycpLk11bHRpaGFzaERpZ2VzdH0gZGlnZXN0IC0gZGlnZXN0IG9mIGJsb2IgdG8gZ2V0LlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICBhc3luYyBnZXQoZGlnZXN0LCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgY29uZiA9IGF3YWl0IHRoaXMuX2ludm9jYXRpb25Db25maWcoW0Jsb2JDYXBhYmlsaXRpZXMuZ2V0LmNhbl0pO1xuICAgICAgICBvcHRpb25zLmNvbm5lY3Rpb24gPSB0aGlzLl9zZXJ2aWNlQ29uZi51cGxvYWQ7XG4gICAgICAgIHJldHVybiBCbG9iLmdldChjb25mLCBkaWdlc3QsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJsb2IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/blob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/filecoin.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/filecoin.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilecoinClient: () => (/* binding */ FilecoinClient)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_filecoin_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/filecoin-client */ \"(ssr)/./node_modules/@web3-storage/filecoin-client/dist/src/index.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n\n\n\n/**\n * Client for interacting with the `filecoin/*` capabilities.\n */\nclass FilecoinClient extends _base_js__WEBPACK_IMPORTED_MODULE_2__.Base {\n    /**\n     * Offer a Filecoin \"piece\" to the resource.\n     *\n     * Required delegated capabilities:\n     * - `filecoin/offer`\n     *\n     * @param {import('multiformats').UnknownLink} content\n     * @param {import('@web3-storage/capabilities/types').PieceLink} piece\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async offer(content, piece, options) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Filecoin.offer.can]);\n        return _web3_storage_filecoin_client__WEBPACK_IMPORTED_MODULE_0__.Storefront.filecoinOffer(conf, content, piece, {\n            ...options,\n            connection: this._serviceConf.filecoin,\n        });\n    }\n    /**\n     * Request info about a content piece in Filecoin deals\n     *\n     * Required delegated capabilities:\n     * - `filecoin/info`\n     *\n     * @param {import('@web3-storage/capabilities/types').PieceLink} piece\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async info(piece, options) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Filecoin.info.can]);\n        return _web3_storage_filecoin_client__WEBPACK_IMPORTED_MODULE_0__.Storefront.filecoinInfo(conf, piece, {\n            ...options,\n            connection: this._serviceConf.filecoin,\n        });\n    }\n}\n//# sourceMappingURL=filecoin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L2ZpbGVjb2luLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDbUI7QUFDNUM7QUFDbEM7QUFDQTtBQUNBO0FBQ08sNkJBQTZCLDBDQUFJO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsc0RBQXNEO0FBQ3JFLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBLG1EQUFtRCxzRUFBMEI7QUFDN0UsZUFBZSxtRkFBd0I7QUFDdkM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQXNEO0FBQ3JFLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBLG1EQUFtRCxxRUFBeUI7QUFDNUUsZUFBZSxrRkFBdUI7QUFDdEM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3czdXAtY2xpZW50L2Rpc3Qvc3JjL2NhcGFiaWxpdHkvZmlsZWNvaW4uanM/ZjI1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdG9yZWZyb250IH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9maWxlY29pbi1jbGllbnQnO1xuaW1wb3J0IHsgRmlsZWNvaW4gYXMgRmlsZWNvaW5DYXBhYmlsaXRpZXMgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcyc7XG5pbXBvcnQgeyBCYXNlIH0gZnJvbSAnLi4vYmFzZS5qcyc7XG4vKipcbiAqIENsaWVudCBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgYGZpbGVjb2luLypgIGNhcGFiaWxpdGllcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEZpbGVjb2luQ2xpZW50IGV4dGVuZHMgQmFzZSB7XG4gICAgLyoqXG4gICAgICogT2ZmZXIgYSBGaWxlY29pbiBcInBpZWNlXCIgdG8gdGhlIHJlc291cmNlLlxuICAgICAqXG4gICAgICogUmVxdWlyZWQgZGVsZWdhdGVkIGNhcGFiaWxpdGllczpcbiAgICAgKiAtIGBmaWxlY29pbi9vZmZlcmBcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCdtdWx0aWZvcm1hdHMnKS5Vbmtub3duTGlua30gY29udGVudFxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcy90eXBlcycpLlBpZWNlTGlua30gcGllY2VcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLm5vbmNlXVxuICAgICAqL1xuICAgIGFzeW5jIG9mZmVyKGNvbnRlbnQsIHBpZWNlLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGNvbmYgPSBhd2FpdCB0aGlzLl9pbnZvY2F0aW9uQ29uZmlnKFtGaWxlY29pbkNhcGFiaWxpdGllcy5vZmZlci5jYW5dKTtcbiAgICAgICAgcmV0dXJuIFN0b3JlZnJvbnQuZmlsZWNvaW5PZmZlcihjb25mLCBjb250ZW50LCBwaWVjZSwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGNvbm5lY3Rpb246IHRoaXMuX3NlcnZpY2VDb25mLmZpbGVjb2luLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVxdWVzdCBpbmZvIGFib3V0IGEgY29udGVudCBwaWVjZSBpbiBGaWxlY29pbiBkZWFsc1xuICAgICAqXG4gICAgICogUmVxdWlyZWQgZGVsZWdhdGVkIGNhcGFiaWxpdGllczpcbiAgICAgKiAtIGBmaWxlY29pbi9pbmZvYFxuICAgICAqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3R5cGVzJykuUGllY2VMaW5rfSBwaWVjZVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubm9uY2VdXG4gICAgICovXG4gICAgYXN5bmMgaW5mbyhwaWVjZSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBjb25mID0gYXdhaXQgdGhpcy5faW52b2NhdGlvbkNvbmZpZyhbRmlsZWNvaW5DYXBhYmlsaXRpZXMuaW5mby5jYW5dKTtcbiAgICAgICAgcmV0dXJuIFN0b3JlZnJvbnQuZmlsZWNvaW5JbmZvKGNvbmYsIHBpZWNlLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgY29ubmVjdGlvbjogdGhpcy5fc2VydmljZUNvbmYuZmlsZWNvaW4sXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbGVjb2luLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/filecoin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexClient: () => (/* binding */ IndexClient)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/upload-client */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n\n\n\n/**\n * Client for interacting with the `index/*` capabilities.\n */\nclass IndexClient extends _base_js__WEBPACK_IMPORTED_MODULE_2__.Base {\n    /**\n     * Register an \"index\" to the resource.\n     *\n     * Required delegated capabilities:\n     * - `space/index/add`\n     *\n     * @param {import('../types.js').CARLink} index - CID of the CAR file that contains the index data.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async add(index, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Index.add.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Index.add(conf, index, options);\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDb0I7QUFDdEM7QUFDbEM7QUFDQTtBQUNBO0FBQ08sMEJBQTBCLDBDQUFJO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0JBQStCO0FBQzlDLGVBQWUsc0NBQXNDO0FBQ3JEO0FBQ0EsaUNBQWlDO0FBQ2pDLG1EQUFtRCxpRUFBcUI7QUFDeEU7QUFDQSxlQUFlLGtFQUFTO0FBQ3hCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvY2FwYWJpbGl0eS9pbmRleC5qcz8zN2MwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluZGV4IH0gZnJvbSAnQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50JztcbmltcG9ydCB7IEluZGV4IGFzIEluZGV4Q2FwYWJpbGl0aWVzIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMnO1xuaW1wb3J0IHsgQmFzZSB9IGZyb20gJy4uL2Jhc2UuanMnO1xuLyoqXG4gKiBDbGllbnQgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIGBpbmRleC8qYCBjYXBhYmlsaXRpZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBJbmRleENsaWVudCBleHRlbmRzIEJhc2Uge1xuICAgIC8qKlxuICAgICAqIFJlZ2lzdGVyIGFuIFwiaW5kZXhcIiB0byB0aGUgcmVzb3VyY2UuXG4gICAgICpcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHNwYWNlL2luZGV4L2FkZGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkNBUkxpbmt9IGluZGV4IC0gQ0lEIG9mIHRoZSBDQVIgZmlsZSB0aGF0IGNvbnRhaW5zIHRoZSBpbmRleCBkYXRhLlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICBhc3luYyBhZGQoaW5kZXgsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBjb25mID0gYXdhaXQgdGhpcy5faW52b2NhdGlvbkNvbmZpZyhbSW5kZXhDYXBhYmlsaXRpZXMuYWRkLmNhbl0pO1xuICAgICAgICBvcHRpb25zLmNvbm5lY3Rpb24gPSB0aGlzLl9zZXJ2aWNlQ29uZi51cGxvYWQ7XG4gICAgICAgIHJldHVybiBJbmRleC5hZGQoY29uZiwgaW5kZXgsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/plan.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/plan.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PlanClient: () => (/* binding */ PlanClient),\n/* harmony export */   createAdminSession: () => (/* binding */ createAdminSession),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js\");\n/* harmony import */ var _web3_storage_capabilities_plan__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/capabilities/plan */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/plan.js\");\n\n\n\nclass PlanClient extends _base_js__WEBPACK_IMPORTED_MODULE_0__.Base {\n    /**\n     * Required delegated capabilities:\n     * - `plan/get`\n     *\n     * @param {import('@web3-storage/access').AccountDID} account\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async get(account, options) {\n        const out = await get({ agent: this.agent }, { ...options, account });\n        if (!out.ok) {\n            throw new Error(`failed ${_web3_storage_capabilities_plan__WEBPACK_IMPORTED_MODULE_2__.get.can} invocation`, {\n                cause: out.error,\n            });\n        }\n        return out.ok;\n    }\n    /**\n     * Required delegated capabilities:\n     * - `plan/set`\n     *\n     * @param {API.AccountDID} account\n     * @param {API.DID} product\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async set(account, product, options) {\n        const out = await set({ agent: this.agent }, { ...options, account, product });\n        if (!out.ok) {\n            throw new Error(`failed ${_web3_storage_capabilities_plan__WEBPACK_IMPORTED_MODULE_2__.set.can} invocation`, {\n                cause: out.error,\n            });\n        }\n        return out.ok;\n    }\n    /**\n     *\n     * @param {API.AccountDID} account\n     * @param {string} returnURL\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async createAdminSession(account, returnURL, options) {\n        const out = await createAdminSession({ agent: this.agent }, { ...options, account, returnURL });\n        if (!out.ok) {\n            throw new Error(`failed ${_web3_storage_capabilities_plan__WEBPACK_IMPORTED_MODULE_2__.createAdminSession.can} invocation`, {\n                cause: out.error,\n            });\n        }\n        return out.ok;\n    }\n}\n/**\n * Gets the plan currently associated with the account.\n *\n * @param {{agent: API.Agent}} client\n * @param {object} options\n * @param {API.AccountDID} options.account\n * @param {string} [options.nonce]\n * @param {API.Delegation[]} [options.proofs]\n */\nconst get = async ({ agent }, { account, nonce, proofs = [] }) => {\n    const receipt = await agent.invokeAndExecute(_web3_storage_capabilities_plan__WEBPACK_IMPORTED_MODULE_2__.get, {\n        with: account,\n        proofs,\n        nonce,\n    });\n    return receipt.out;\n};\n/**\n * Sets the plan currently associated with the account.\n *\n * @param {{agent: API.Agent}} client\n * @param {object} options\n * @param {API.DID} options.product\n * @param {API.AccountDID} options.account\n * @param {string} [options.nonce]\n * @param {API.Delegation[]} [options.proofs]\n */\nconst set = async ({ agent }, { account, product, nonce, proofs = [] }) => {\n    const receipt = await agent.invokeAndExecute(_web3_storage_capabilities_plan__WEBPACK_IMPORTED_MODULE_2__.set, {\n        with: account,\n        nb: { product },\n        nonce,\n        proofs,\n    });\n    return receipt.out;\n};\n/**\n * Creates an admin session for the given account.\n *\n * Returns a URL that a user can resolve to enter the\n * admin billing portal for this account.\n *\n * @param {{agent: API.Agent}} client\n * @param {object} options\n * @param {API.AccountDID} options.account\n * @param {string} options.returnURL\n * @param {string} [options.nonce]\n * @param {API.Delegation[]} [options.proofs]\n */\nconst createAdminSession = async ({ agent }, { account, returnURL, nonce, proofs = [] }) => {\n    const receipt = await agent.invokeAndExecute(_web3_storage_capabilities_plan__WEBPACK_IMPORTED_MODULE_2__.createAdminSession, {\n        with: account,\n        proofs,\n        nonce,\n        nb: {\n            returnURL,\n        },\n    });\n    return receipt.out;\n};\n//# sourceMappingURL=plan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L3BsYW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrQztBQUNDO0FBQ3FCO0FBQ2pELHlCQUF5QiwwQ0FBSTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMkNBQTJDO0FBQzFELGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBLGdDQUFnQyxtQkFBbUIsSUFBSSxxQkFBcUI7QUFDNUU7QUFDQSxzQ0FBc0MsZ0VBQVEsTUFBTTtBQUNwRDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CLGVBQWUsU0FBUztBQUN4QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQSxnQ0FBZ0MsbUJBQW1CLElBQUksOEJBQThCO0FBQ3JGO0FBQ0Esc0NBQXNDLGdFQUFRLE1BQU07QUFDcEQ7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQSwrQ0FBK0MsbUJBQW1CLElBQUksZ0NBQWdDO0FBQ3RHO0FBQ0Esc0NBQXNDLCtFQUF1QixNQUFNO0FBQ25FO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsUUFBUTtBQUNuQixXQUFXLGtCQUFrQjtBQUM3QjtBQUNPLHFCQUFxQixPQUFPLElBQUksNkJBQTZCO0FBQ3BFLGlEQUFpRCxnRUFBUTtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxnQkFBZ0I7QUFDM0IsV0FBVyxRQUFRO0FBQ25CLFdBQVcsa0JBQWtCO0FBQzdCO0FBQ08scUJBQXFCLE9BQU8sSUFBSSxzQ0FBc0M7QUFDN0UsaURBQWlELGdFQUFRO0FBQ3pEO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsa0JBQWtCO0FBQzdCO0FBQ08sb0NBQW9DLE9BQU8sSUFBSSx3Q0FBd0M7QUFDOUYsaURBQWlELCtFQUF1QjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3czdXAtY2xpZW50L2Rpc3Qvc3JjL2NhcGFiaWxpdHkvcGxhbi5qcz9kYmVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2UgfSBmcm9tICcuLi9iYXNlLmpzJztcbmltcG9ydCAqIGFzIEFQSSBmcm9tICcuLi90eXBlcy5qcyc7XG5pbXBvcnQgKiBhcyBQbGFuIGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzL3BsYW4nO1xuZXhwb3J0IGNsYXNzIFBsYW5DbGllbnQgZXh0ZW5kcyBCYXNlIHtcbiAgICAvKipcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHBsYW4vZ2V0YFxuICAgICAqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJ0B3ZWIzLXN0b3JhZ2UvYWNjZXNzJykuQWNjb3VudERJRH0gYWNjb3VudFxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubm9uY2VdXG4gICAgICovXG4gICAgYXN5bmMgZ2V0KGFjY291bnQsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3Qgb3V0ID0gYXdhaXQgZ2V0KHsgYWdlbnQ6IHRoaXMuYWdlbnQgfSwgeyAuLi5vcHRpb25zLCBhY2NvdW50IH0pO1xuICAgICAgICBpZiAoIW91dC5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtQbGFuLmdldC5jYW59IGludm9jYXRpb25gLCB7XG4gICAgICAgICAgICAgICAgY2F1c2U6IG91dC5lcnJvcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvdXQub2s7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlcXVpcmVkIGRlbGVnYXRlZCBjYXBhYmlsaXRpZXM6XG4gICAgICogLSBgcGxhbi9zZXRgXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0FQSS5BY2NvdW50RElEfSBhY2NvdW50XG4gICAgICogQHBhcmFtIHtBUEkuRElEfSBwcm9kdWN0XG4gICAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ub25jZV1cbiAgICAgKi9cbiAgICBhc3luYyBzZXQoYWNjb3VudCwgcHJvZHVjdCwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBvdXQgPSBhd2FpdCBzZXQoeyBhZ2VudDogdGhpcy5hZ2VudCB9LCB7IC4uLm9wdGlvbnMsIGFjY291bnQsIHByb2R1Y3QgfSk7XG4gICAgICAgIGlmICghb3V0Lm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGZhaWxlZCAke1BsYW4uc2V0LmNhbn0gaW52b2NhdGlvbmAsIHtcbiAgICAgICAgICAgICAgICBjYXVzZTogb3V0LmVycm9yLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dC5vaztcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0FQSS5BY2NvdW50RElEfSBhY2NvdW50XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHJldHVyblVSTFxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubm9uY2VdXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlQWRtaW5TZXNzaW9uKGFjY291bnQsIHJldHVyblVSTCwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBvdXQgPSBhd2FpdCBjcmVhdGVBZG1pblNlc3Npb24oeyBhZ2VudDogdGhpcy5hZ2VudCB9LCB7IC4uLm9wdGlvbnMsIGFjY291bnQsIHJldHVyblVSTCB9KTtcbiAgICAgICAgaWYgKCFvdXQub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgZmFpbGVkICR7UGxhbi5jcmVhdGVBZG1pblNlc3Npb24uY2FufSBpbnZvY2F0aW9uYCwge1xuICAgICAgICAgICAgICAgIGNhdXNlOiBvdXQuZXJyb3IsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0Lm9rO1xuICAgIH1cbn1cbi8qKlxuICogR2V0cyB0aGUgcGxhbiBjdXJyZW50bHkgYXNzb2NpYXRlZCB3aXRoIHRoZSBhY2NvdW50LlxuICpcbiAqIEBwYXJhbSB7e2FnZW50OiBBUEkuQWdlbnR9fSBjbGllbnRcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge0FQSS5BY2NvdW50RElEfSBvcHRpb25zLmFjY291bnRcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ub25jZV1cbiAqIEBwYXJhbSB7QVBJLkRlbGVnYXRpb25bXX0gW29wdGlvbnMucHJvb2ZzXVxuICovXG5leHBvcnQgY29uc3QgZ2V0ID0gYXN5bmMgKHsgYWdlbnQgfSwgeyBhY2NvdW50LCBub25jZSwgcHJvb2ZzID0gW10gfSkgPT4ge1xuICAgIGNvbnN0IHJlY2VpcHQgPSBhd2FpdCBhZ2VudC5pbnZva2VBbmRFeGVjdXRlKFBsYW4uZ2V0LCB7XG4gICAgICAgIHdpdGg6IGFjY291bnQsXG4gICAgICAgIHByb29mcyxcbiAgICAgICAgbm9uY2UsXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlY2VpcHQub3V0O1xufTtcbi8qKlxuICogU2V0cyB0aGUgcGxhbiBjdXJyZW50bHkgYXNzb2NpYXRlZCB3aXRoIHRoZSBhY2NvdW50LlxuICpcbiAqIEBwYXJhbSB7e2FnZW50OiBBUEkuQWdlbnR9fSBjbGllbnRcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge0FQSS5ESUR9IG9wdGlvbnMucHJvZHVjdFxuICogQHBhcmFtIHtBUEkuQWNjb3VudERJRH0gb3B0aW9ucy5hY2NvdW50XG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubm9uY2VdXG4gKiBAcGFyYW0ge0FQSS5EZWxlZ2F0aW9uW119IFtvcHRpb25zLnByb29mc11cbiAqL1xuZXhwb3J0IGNvbnN0IHNldCA9IGFzeW5jICh7IGFnZW50IH0sIHsgYWNjb3VudCwgcHJvZHVjdCwgbm9uY2UsIHByb29mcyA9IFtdIH0pID0+IHtcbiAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgYWdlbnQuaW52b2tlQW5kRXhlY3V0ZShQbGFuLnNldCwge1xuICAgICAgICB3aXRoOiBhY2NvdW50LFxuICAgICAgICBuYjogeyBwcm9kdWN0IH0sXG4gICAgICAgIG5vbmNlLFxuICAgICAgICBwcm9vZnMsXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlY2VpcHQub3V0O1xufTtcbi8qKlxuICogQ3JlYXRlcyBhbiBhZG1pbiBzZXNzaW9uIGZvciB0aGUgZ2l2ZW4gYWNjb3VudC5cbiAqXG4gKiBSZXR1cm5zIGEgVVJMIHRoYXQgYSB1c2VyIGNhbiByZXNvbHZlIHRvIGVudGVyIHRoZVxuICogYWRtaW4gYmlsbGluZyBwb3J0YWwgZm9yIHRoaXMgYWNjb3VudC5cbiAqXG4gKiBAcGFyYW0ge3thZ2VudDogQVBJLkFnZW50fX0gY2xpZW50XG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtBUEkuQWNjb3VudERJRH0gb3B0aW9ucy5hY2NvdW50XG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5yZXR1cm5VUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ub25jZV1cbiAqIEBwYXJhbSB7QVBJLkRlbGVnYXRpb25bXX0gW29wdGlvbnMucHJvb2ZzXVxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlQWRtaW5TZXNzaW9uID0gYXN5bmMgKHsgYWdlbnQgfSwgeyBhY2NvdW50LCByZXR1cm5VUkwsIG5vbmNlLCBwcm9vZnMgPSBbXSB9KSA9PiB7XG4gICAgY29uc3QgcmVjZWlwdCA9IGF3YWl0IGFnZW50Lmludm9rZUFuZEV4ZWN1dGUoUGxhbi5jcmVhdGVBZG1pblNlc3Npb24sIHtcbiAgICAgICAgd2l0aDogYWNjb3VudCxcbiAgICAgICAgcHJvb2ZzLFxuICAgICAgICBub25jZSxcbiAgICAgICAgbmI6IHtcbiAgICAgICAgICAgIHJldHVyblVSTCxcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gcmVjZWlwdC5vdXQ7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGxhbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/plan.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/space.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/space.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpaceClient: () => (/* binding */ SpaceClient),\n/* harmony export */   egressRecord: () => (/* binding */ egressRecord)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js\");\n\n\n\n/**\n * Client for interacting with the `space/*` capabilities.\n */\nclass SpaceClient extends _base_js__WEBPACK_IMPORTED_MODULE_0__.Base {\n    /**\n     * Get information about a space.\n     *\n     * Required delegated capabilities:\n     * - `space/info`\n     *\n     * @param {import('../types.js').DID} space - DID of the space to retrieve info about.\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async info(space, options) {\n        return await this._agent.getSpaceInfo(space, options);\n    }\n    /**\n     * Record egress data for a served resource.\n     * It will execute the capability invocation to find the customer and then record the egress data for the resource.\n     *\n     * Required delegated capabilities:\n     * - `space/content/serve/egress/record`\n     *\n     * @param {object} egressData\n     * @param {import('../types.js').SpaceDID} egressData.space\n     * @param {API.UnknownLink} egressData.resource\n     * @param {number} egressData.bytes\n     * @param {string} egressData.servedAt\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     * @param {API.Delegation[]} [options.proofs]\n     * @returns {Promise<API.EgressRecordSuccess>}\n     */\n    async egressRecord(egressData, options) {\n        const out = await egressRecord({ agent: this.agent }, { ...egressData }, { ...options });\n        if (!out.ok) {\n            throw new Error(`failed ${_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Space.egressRecord.can} invocation`, {\n                cause: out.error,\n            });\n        }\n        return /** @type {API.EgressRecordSuccess} */ (out.ok);\n    }\n}\n/**\n * Record egress data for a resource from a given space.\n *\n * @param {{agent: API.Agent}} client\n * @param {object} egressData\n * @param {API.SpaceDID} egressData.space\n * @param {API.UnknownLink} egressData.resource\n * @param {number} egressData.bytes\n * @param {string} egressData.servedAt\n * @param {object} options\n * @param {string} [options.nonce]\n * @param {API.Delegation[]} [options.proofs]\n */\nconst egressRecord = async ({ agent }, { space, resource, bytes, servedAt }, { nonce, proofs = [] }) => {\n    const receipt = await agent.invokeAndExecute(_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Space.egressRecord, {\n        with: space,\n        proofs,\n        nonce,\n        nb: {\n            resource,\n            bytes,\n            servedAt: Math.floor(new Date(servedAt).getTime() / 1000),\n        },\n    });\n    return receipt.out;\n};\n//# sourceMappingURL=space.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L3NwYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWtDO0FBQ3NDO0FBQ3JDO0FBQ25DO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQiwwQ0FBSTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDJCQUEyQjtBQUMxQyxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxnQ0FBZ0M7QUFDL0MsZUFBZSxpQkFBaUI7QUFDaEMsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsa0JBQWtCO0FBQ2pDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EseUNBQXlDLG1CQUFtQixJQUFJLGVBQWUsSUFBSSxZQUFZO0FBQy9GO0FBQ0Esc0NBQXNDLDBFQUE4QixNQUFNO0FBQzFFO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsMEJBQTBCLHlCQUF5QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QixXQUFXLGlCQUFpQjtBQUM1QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxrQkFBa0I7QUFDN0I7QUFDTyw4QkFBOEIsT0FBTyxJQUFJLGtDQUFrQyxJQUFJLG9CQUFvQjtBQUMxRyxpREFBaUQsMEVBQThCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3czdXAtY2xpZW50L2Rpc3Qvc3JjL2NhcGFiaWxpdHkvc3BhY2UuanM/YmY5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlIH0gZnJvbSAnLi4vYmFzZS5qcyc7XG5pbXBvcnQgeyBTcGFjZSBhcyBTcGFjZUNhcGFiaWxpdGllcyB9IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvY2FwYWJpbGl0aWVzJztcbmltcG9ydCAqIGFzIEFQSSBmcm9tICcuLi90eXBlcy5qcyc7XG4vKipcbiAqIENsaWVudCBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgYHNwYWNlLypgIGNhcGFiaWxpdGllcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFNwYWNlQ2xpZW50IGV4dGVuZHMgQmFzZSB7XG4gICAgLyoqXG4gICAgICogR2V0IGluZm9ybWF0aW9uIGFib3V0IGEgc3BhY2UuXG4gICAgICpcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHNwYWNlL2luZm9gXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5ESUR9IHNwYWNlIC0gRElEIG9mIHRoZSBzcGFjZSB0byByZXRyaWV2ZSBpbmZvIGFib3V0LlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubm9uY2VdXG4gICAgICovXG4gICAgYXN5bmMgaW5mbyhzcGFjZSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5fYWdlbnQuZ2V0U3BhY2VJbmZvKHNwYWNlLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVjb3JkIGVncmVzcyBkYXRhIGZvciBhIHNlcnZlZCByZXNvdXJjZS5cbiAgICAgKiBJdCB3aWxsIGV4ZWN1dGUgdGhlIGNhcGFiaWxpdHkgaW52b2NhdGlvbiB0byBmaW5kIHRoZSBjdXN0b21lciBhbmQgdGhlbiByZWNvcmQgdGhlIGVncmVzcyBkYXRhIGZvciB0aGUgcmVzb3VyY2UuXG4gICAgICpcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHNwYWNlL2NvbnRlbnQvc2VydmUvZWdyZXNzL3JlY29yZGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBlZ3Jlc3NEYXRhXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuU3BhY2VESUR9IGVncmVzc0RhdGEuc3BhY2VcbiAgICAgKiBAcGFyYW0ge0FQSS5Vbmtub3duTGlua30gZWdyZXNzRGF0YS5yZXNvdXJjZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBlZ3Jlc3NEYXRhLmJ5dGVzXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGVncmVzc0RhdGEuc2VydmVkQXRcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLm5vbmNlXVxuICAgICAqIEBwYXJhbSB7QVBJLkRlbGVnYXRpb25bXX0gW29wdGlvbnMucHJvb2ZzXVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEFQSS5FZ3Jlc3NSZWNvcmRTdWNjZXNzPn1cbiAgICAgKi9cbiAgICBhc3luYyBlZ3Jlc3NSZWNvcmQoZWdyZXNzRGF0YSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBvdXQgPSBhd2FpdCBlZ3Jlc3NSZWNvcmQoeyBhZ2VudDogdGhpcy5hZ2VudCB9LCB7IC4uLmVncmVzc0RhdGEgfSwgeyAuLi5vcHRpb25zIH0pO1xuICAgICAgICBpZiAoIW91dC5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtTcGFjZUNhcGFiaWxpdGllcy5lZ3Jlc3NSZWNvcmQuY2FufSBpbnZvY2F0aW9uYCwge1xuICAgICAgICAgICAgICAgIGNhdXNlOiBvdXQuZXJyb3IsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gLyoqIEB0eXBlIHtBUEkuRWdyZXNzUmVjb3JkU3VjY2Vzc30gKi8gKG91dC5vayk7XG4gICAgfVxufVxuLyoqXG4gKiBSZWNvcmQgZWdyZXNzIGRhdGEgZm9yIGEgcmVzb3VyY2UgZnJvbSBhIGdpdmVuIHNwYWNlLlxuICpcbiAqIEBwYXJhbSB7e2FnZW50OiBBUEkuQWdlbnR9fSBjbGllbnRcbiAqIEBwYXJhbSB7b2JqZWN0fSBlZ3Jlc3NEYXRhXG4gKiBAcGFyYW0ge0FQSS5TcGFjZURJRH0gZWdyZXNzRGF0YS5zcGFjZVxuICogQHBhcmFtIHtBUEkuVW5rbm93bkxpbmt9IGVncmVzc0RhdGEucmVzb3VyY2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBlZ3Jlc3NEYXRhLmJ5dGVzXG4gKiBAcGFyYW0ge3N0cmluZ30gZWdyZXNzRGF0YS5zZXJ2ZWRBdFxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ub25jZV1cbiAqIEBwYXJhbSB7QVBJLkRlbGVnYXRpb25bXX0gW29wdGlvbnMucHJvb2ZzXVxuICovXG5leHBvcnQgY29uc3QgZWdyZXNzUmVjb3JkID0gYXN5bmMgKHsgYWdlbnQgfSwgeyBzcGFjZSwgcmVzb3VyY2UsIGJ5dGVzLCBzZXJ2ZWRBdCB9LCB7IG5vbmNlLCBwcm9vZnMgPSBbXSB9KSA9PiB7XG4gICAgY29uc3QgcmVjZWlwdCA9IGF3YWl0IGFnZW50Lmludm9rZUFuZEV4ZWN1dGUoU3BhY2VDYXBhYmlsaXRpZXMuZWdyZXNzUmVjb3JkLCB7XG4gICAgICAgIHdpdGg6IHNwYWNlLFxuICAgICAgICBwcm9vZnMsXG4gICAgICAgIG5vbmNlLFxuICAgICAgICBuYjoge1xuICAgICAgICAgICAgcmVzb3VyY2UsXG4gICAgICAgICAgICBieXRlcyxcbiAgICAgICAgICAgIHNlcnZlZEF0OiBNYXRoLmZsb29yKG5ldyBEYXRlKHNlcnZlZEF0KS5nZXRUaW1lKCkgLyAxMDAwKSxcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gcmVjZWlwdC5vdXQ7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/space.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/store.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/store.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoreClient: () => (/* binding */ StoreClient)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/upload-client */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n\n\n\n/**\n * Client for interacting with the `store/*` capabilities.\n */\nclass StoreClient extends _base_js__WEBPACK_IMPORTED_MODULE_2__.Base {\n    /**\n     * Store a DAG encoded as a CAR file.\n     *\n     * Required delegated capabilities:\n     * - `store/add`\n     *\n     * @deprecated Use `client.capability.blob.add()` instead.\n     * @param {Blob} car - CAR file data.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async add(car, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Store.add.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Store.add(conf, car, options);\n    }\n    /**\n     * Get details of a stored item.\n     *\n     * Required delegated capabilities:\n     * - `store/get`\n     *\n     * @deprecated Use `client.capability.blob.get()` instead.\n     * @param {import('../types.js').CARLink} link - Root data CID for the DAG that was stored.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async get(link, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Store.get.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Store.get(conf, link, options);\n    }\n    /**\n     * List CAR files stored to the resource.\n     *\n     * Required delegated capabilities:\n     * - `store/list`\n     *\n     * @deprecated Use `client.capability.blob.list()` instead.\n     * @param {import('../types.js').ListRequestOptions} [options]\n     */\n    async list(options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Store.list.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Store.list(conf, options);\n    }\n    /**\n     * Remove a stored CAR file by CAR CID.\n     *\n     * Required delegated capabilities:\n     * - `store/remove`\n     *\n     * @deprecated Use `client.capability.blob.remove()` instead.\n     * @param {import('../types.js').CARLink} link - CID of CAR file to remove.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async remove(link, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Store.remove.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Store.remove(conf, link, options);\n    }\n}\n//# sourceMappingURL=store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L3N0b3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDb0I7QUFDdEM7QUFDbEM7QUFDQTtBQUNBO0FBQ08sMEJBQTBCLDBDQUFJO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCLGVBQWUsc0NBQXNDO0FBQ3JEO0FBQ0EsK0JBQStCO0FBQy9CLG1EQUFtRCxpRUFBcUI7QUFDeEU7QUFDQSxlQUFlLGtFQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtCQUErQjtBQUM5QyxlQUFlLHNDQUFzQztBQUNyRDtBQUNBLGdDQUFnQztBQUNoQyxtREFBbUQsaUVBQXFCO0FBQ3hFO0FBQ0EsZUFBZSxrRUFBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQ0FBMEM7QUFDekQ7QUFDQSwyQkFBMkI7QUFDM0IsbURBQW1ELGtFQUFzQjtBQUN6RTtBQUNBLGVBQWUsbUVBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0JBQStCO0FBQzlDLGVBQWUsc0NBQXNDO0FBQ3JEO0FBQ0EsbUNBQW1DO0FBQ25DLG1EQUFtRCxvRUFBd0I7QUFDM0U7QUFDQSxlQUFlLHFFQUFZO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvY2FwYWJpbGl0eS9zdG9yZS5qcz8xMDU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0b3JlIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50JztcbmltcG9ydCB7IFN0b3JlIGFzIFN0b3JlQ2FwYWJpbGl0aWVzIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMnO1xuaW1wb3J0IHsgQmFzZSB9IGZyb20gJy4uL2Jhc2UuanMnO1xuLyoqXG4gKiBDbGllbnQgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIGBzdG9yZS8qYCBjYXBhYmlsaXRpZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBTdG9yZUNsaWVudCBleHRlbmRzIEJhc2Uge1xuICAgIC8qKlxuICAgICAqIFN0b3JlIGEgREFHIGVuY29kZWQgYXMgYSBDQVIgZmlsZS5cbiAgICAgKlxuICAgICAqIFJlcXVpcmVkIGRlbGVnYXRlZCBjYXBhYmlsaXRpZXM6XG4gICAgICogLSBgc3RvcmUvYWRkYFxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVXNlIGBjbGllbnQuY2FwYWJpbGl0eS5ibG9iLmFkZCgpYCBpbnN0ZWFkLlxuICAgICAqIEBwYXJhbSB7QmxvYn0gY2FyIC0gQ0FSIGZpbGUgZGF0YS5cbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5SZXF1ZXN0T3B0aW9uc30gW29wdGlvbnNdXG4gICAgICovXG4gICAgYXN5bmMgYWRkKGNhciwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGNvbmYgPSBhd2FpdCB0aGlzLl9pbnZvY2F0aW9uQ29uZmlnKFtTdG9yZUNhcGFiaWxpdGllcy5hZGQuY2FuXSk7XG4gICAgICAgIG9wdGlvbnMuY29ubmVjdGlvbiA9IHRoaXMuX3NlcnZpY2VDb25mLnVwbG9hZDtcbiAgICAgICAgcmV0dXJuIFN0b3JlLmFkZChjb25mLCBjYXIsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgZGV0YWlscyBvZiBhIHN0b3JlZCBpdGVtLlxuICAgICAqXG4gICAgICogUmVxdWlyZWQgZGVsZWdhdGVkIGNhcGFiaWxpdGllczpcbiAgICAgKiAtIGBzdG9yZS9nZXRgXG4gICAgICpcbiAgICAgKiBAZGVwcmVjYXRlZCBVc2UgYGNsaWVudC5jYXBhYmlsaXR5LmJsb2IuZ2V0KClgIGluc3RlYWQuXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuQ0FSTGlua30gbGluayAtIFJvb3QgZGF0YSBDSUQgZm9yIHRoZSBEQUcgdGhhdCB3YXMgc3RvcmVkLlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICBhc3luYyBnZXQobGluaywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGNvbmYgPSBhd2FpdCB0aGlzLl9pbnZvY2F0aW9uQ29uZmlnKFtTdG9yZUNhcGFiaWxpdGllcy5nZXQuY2FuXSk7XG4gICAgICAgIG9wdGlvbnMuY29ubmVjdGlvbiA9IHRoaXMuX3NlcnZpY2VDb25mLnVwbG9hZDtcbiAgICAgICAgcmV0dXJuIFN0b3JlLmdldChjb25mLCBsaW5rLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCBDQVIgZmlsZXMgc3RvcmVkIHRvIHRoZSByZXNvdXJjZS5cbiAgICAgKlxuICAgICAqIFJlcXVpcmVkIGRlbGVnYXRlZCBjYXBhYmlsaXRpZXM6XG4gICAgICogLSBgc3RvcmUvbGlzdGBcbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFVzZSBgY2xpZW50LmNhcGFiaWxpdHkuYmxvYi5saXN0KClgIGluc3RlYWQuXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuTGlzdFJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICBhc3luYyBsaXN0KG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBjb25mID0gYXdhaXQgdGhpcy5faW52b2NhdGlvbkNvbmZpZyhbU3RvcmVDYXBhYmlsaXRpZXMubGlzdC5jYW5dKTtcbiAgICAgICAgb3B0aW9ucy5jb25uZWN0aW9uID0gdGhpcy5fc2VydmljZUNvbmYudXBsb2FkO1xuICAgICAgICByZXR1cm4gU3RvcmUubGlzdChjb25mLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGEgc3RvcmVkIENBUiBmaWxlIGJ5IENBUiBDSUQuXG4gICAgICpcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHN0b3JlL3JlbW92ZWBcbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFVzZSBgY2xpZW50LmNhcGFiaWxpdHkuYmxvYi5yZW1vdmUoKWAgaW5zdGVhZC5cbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5DQVJMaW5rfSBsaW5rIC0gQ0lEIG9mIENBUiBmaWxlIHRvIHJlbW92ZS5cbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5SZXF1ZXN0T3B0aW9uc30gW29wdGlvbnNdXG4gICAgICovXG4gICAgYXN5bmMgcmVtb3ZlKGxpbmssIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBjb25mID0gYXdhaXQgdGhpcy5faW52b2NhdGlvbkNvbmZpZyhbU3RvcmVDYXBhYmlsaXRpZXMucmVtb3ZlLmNhbl0pO1xuICAgICAgICBvcHRpb25zLmNvbm5lY3Rpb24gPSB0aGlzLl9zZXJ2aWNlQ29uZi51cGxvYWQ7XG4gICAgICAgIHJldHVybiBTdG9yZS5yZW1vdmUoY29uZiwgbGluaywgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RvcmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/subscription.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/subscription.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SubscriptionClient: () => (/* binding */ SubscriptionClient),\n/* harmony export */   list: () => (/* binding */ list)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n\n\n\n/**\n * Client for interacting with the `subscription/*` capabilities.\n */\nclass SubscriptionClient extends _base_js__WEBPACK_IMPORTED_MODULE_2__.Base {\n    /**\n     * List subscriptions for the passed account.\n     *\n     * Required delegated capabilities:\n     * - `subscription/list`\n     *\n     * @param {import('@web3-storage/access').AccountDID} account\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    /* c8 ignore next */\n    async list(account, options) {\n        const out = await list({ agent: this.agent }, { ...options, account });\n        /* c8 ignore next 8 */\n        if (!out.ok) {\n            throw new Error(`failed ${_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_0__.Subscription.list.can} invocation`, {\n                cause: out.error,\n            });\n        }\n        return out.ok;\n    }\n}\n/**\n * Gets subscriptions associated with the account.\n *\n * @param {{agent: API.Agent}} client\n * @param {object} options\n * @param {API.AccountDID} options.account\n * @param {string} [options.nonce]\n * @param {API.Delegation[]} [options.proofs]\n */\nconst list = async ({ agent }, { account, nonce, proofs = [] }) => {\n    const receipt = await agent.invokeAndExecute(_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_0__.Subscription.list, {\n        with: account,\n        proofs,\n        nb: {},\n        nonce,\n    });\n    return receipt.out;\n};\n//# sourceMappingURL=subscription.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L3N1YnNjcmlwdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFzRjtBQUNuRDtBQUNEO0FBQ2xDO0FBQ0E7QUFDQTtBQUNPLGlDQUFpQywwQ0FBSTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDJDQUEyQztBQUMxRCxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxtQkFBbUIsSUFBSSxxQkFBcUI7QUFDN0U7QUFDQTtBQUNBLHNDQUFzQyx5RUFBNkIsTUFBTTtBQUN6RTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxrQkFBa0I7QUFDN0I7QUFDTyxzQkFBc0IsT0FBTyxJQUFJLDZCQUE2QjtBQUNyRSxpREFBaUQseUVBQTZCO0FBQzlFO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L3N1YnNjcmlwdGlvbi5qcz85NTAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN1YnNjcmlwdGlvbiBhcyBTdWJzY3JpcHRpb25DYXBhYmlsaXRpZXMgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcyc7XG5pbXBvcnQgKiBhcyBBUEkgZnJvbSAnLi4vdHlwZXMuanMnO1xuaW1wb3J0IHsgQmFzZSB9IGZyb20gJy4uL2Jhc2UuanMnO1xuLyoqXG4gKiBDbGllbnQgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIGBzdWJzY3JpcHRpb24vKmAgY2FwYWJpbGl0aWVzLlxuICovXG5leHBvcnQgY2xhc3MgU3Vic2NyaXB0aW9uQ2xpZW50IGV4dGVuZHMgQmFzZSB7XG4gICAgLyoqXG4gICAgICogTGlzdCBzdWJzY3JpcHRpb25zIGZvciB0aGUgcGFzc2VkIGFjY291bnQuXG4gICAgICpcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHN1YnNjcmlwdGlvbi9saXN0YFxuICAgICAqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJ0B3ZWIzLXN0b3JhZ2UvYWNjZXNzJykuQWNjb3VudERJRH0gYWNjb3VudFxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubm9uY2VdXG4gICAgICovXG4gICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICBhc3luYyBsaXN0KGFjY291bnQsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3Qgb3V0ID0gYXdhaXQgbGlzdCh7IGFnZW50OiB0aGlzLmFnZW50IH0sIHsgLi4ub3B0aW9ucywgYWNjb3VudCB9KTtcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgOCAqL1xuICAgICAgICBpZiAoIW91dC5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgJHtTdWJzY3JpcHRpb25DYXBhYmlsaXRpZXMubGlzdC5jYW59IGludm9jYXRpb25gLCB7XG4gICAgICAgICAgICAgICAgY2F1c2U6IG91dC5lcnJvcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvdXQub2s7XG4gICAgfVxufVxuLyoqXG4gKiBHZXRzIHN1YnNjcmlwdGlvbnMgYXNzb2NpYXRlZCB3aXRoIHRoZSBhY2NvdW50LlxuICpcbiAqIEBwYXJhbSB7e2FnZW50OiBBUEkuQWdlbnR9fSBjbGllbnRcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge0FQSS5BY2NvdW50RElEfSBvcHRpb25zLmFjY291bnRcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ub25jZV1cbiAqIEBwYXJhbSB7QVBJLkRlbGVnYXRpb25bXX0gW29wdGlvbnMucHJvb2ZzXVxuICovXG5leHBvcnQgY29uc3QgbGlzdCA9IGFzeW5jICh7IGFnZW50IH0sIHsgYWNjb3VudCwgbm9uY2UsIHByb29mcyA9IFtdIH0pID0+IHtcbiAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgYWdlbnQuaW52b2tlQW5kRXhlY3V0ZShTdWJzY3JpcHRpb25DYXBhYmlsaXRpZXMubGlzdCwge1xuICAgICAgICB3aXRoOiBhY2NvdW50LFxuICAgICAgICBwcm9vZnMsXG4gICAgICAgIG5iOiB7fSxcbiAgICAgICAgbm9uY2UsXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlY2VpcHQub3V0O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1YnNjcmlwdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/upload.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/upload.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UploadClient: () => (/* binding */ UploadClient)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/upload-client */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n\n\n\n/**\n * Client for interacting with the `upload/*` capabilities.\n */\nclass UploadClient extends _base_js__WEBPACK_IMPORTED_MODULE_2__.Base {\n    /**\n     * Register an \"upload\" to the resource.\n     *\n     * Required delegated capabilities:\n     * - `upload/add`\n     *\n     * @param {import('../types.js').UnknownLink} root - Root data CID for the DAG that was stored.\n     * @param {import('../types.js').CARLink[]} shards - CIDs of CAR files that contain the DAG.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async add(root, shards, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Upload.add.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Upload.add(conf, root, shards, options);\n    }\n    /**\n     * Get details of an \"upload\".\n     *\n     * Required delegated capabilities:\n     * - `upload/get`\n     *\n     * @param {import('../types.js').UnknownLink} root - Root data CID for the DAG that was stored.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async get(root, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Upload.get.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Upload.get(conf, root, options);\n    }\n    /**\n     * List uploads registered to the resource.\n     *\n     * Required delegated capabilities:\n     * - `upload/list`\n     *\n     * @param {import('../types.js').ListRequestOptions} [options]\n     */\n    async list(options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Upload.list.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Upload.list(conf, options);\n    }\n    /**\n     * Remove an upload by root data CID.\n     *\n     * Required delegated capabilities:\n     * - `upload/remove`\n     *\n     * @param {import('../types.js').UnknownLink} root - Root data CID to remove.\n     * @param {import('../types.js').RequestOptions} [options]\n     */\n    async remove(root, options = {}) {\n        const conf = await this._invocationConfig([_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Upload.remove.can]);\n        options.connection = this._serviceConf.upload;\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Upload.remove(conf, root, options);\n    }\n}\n//# sourceMappingURL=upload.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L3VwbG9hZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFEO0FBQ3FCO0FBQ3hDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQiwwQ0FBSTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1DQUFtQztBQUNsRCxlQUFlLGlDQUFpQztBQUNoRCxlQUFlLHNDQUFzQztBQUNyRDtBQUNBLHdDQUF3QztBQUN4QyxtREFBbUQsa0VBQXNCO0FBQ3pFO0FBQ0EsZUFBZSxtRUFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUNBQW1DO0FBQ2xELGVBQWUsc0NBQXNDO0FBQ3JEO0FBQ0EsZ0NBQWdDO0FBQ2hDLG1EQUFtRCxrRUFBc0I7QUFDekU7QUFDQSxlQUFlLG1FQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQ0FBMEM7QUFDekQ7QUFDQSwyQkFBMkI7QUFDM0IsbURBQW1ELG1FQUF1QjtBQUMxRTtBQUNBLGVBQWUsb0VBQVc7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1DQUFtQztBQUNsRCxlQUFlLHNDQUFzQztBQUNyRDtBQUNBLG1DQUFtQztBQUNuQyxtREFBbUQscUVBQXlCO0FBQzVFO0FBQ0EsZUFBZSxzRUFBYTtBQUM1QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3czdXAtY2xpZW50L2Rpc3Qvc3JjL2NhcGFiaWxpdHkvdXBsb2FkLmpzP2RhNDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXBsb2FkIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS91cGxvYWQtY2xpZW50JztcbmltcG9ydCB7IFVwbG9hZCBhcyBVcGxvYWRDYXBhYmlsaXRpZXMgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2NhcGFiaWxpdGllcyc7XG5pbXBvcnQgeyBCYXNlIH0gZnJvbSAnLi4vYmFzZS5qcyc7XG4vKipcbiAqIENsaWVudCBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgYHVwbG9hZC8qYCBjYXBhYmlsaXRpZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBVcGxvYWRDbGllbnQgZXh0ZW5kcyBCYXNlIHtcbiAgICAvKipcbiAgICAgKiBSZWdpc3RlciBhbiBcInVwbG9hZFwiIHRvIHRoZSByZXNvdXJjZS5cbiAgICAgKlxuICAgICAqIFJlcXVpcmVkIGRlbGVnYXRlZCBjYXBhYmlsaXRpZXM6XG4gICAgICogLSBgdXBsb2FkL2FkZGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlVua25vd25MaW5rfSByb290IC0gUm9vdCBkYXRhIENJRCBmb3IgdGhlIERBRyB0aGF0IHdhcyBzdG9yZWQuXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuQ0FSTGlua1tdfSBzaGFyZHMgLSBDSURzIG9mIENBUiBmaWxlcyB0aGF0IGNvbnRhaW4gdGhlIERBRy5cbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5SZXF1ZXN0T3B0aW9uc30gW29wdGlvbnNdXG4gICAgICovXG4gICAgYXN5bmMgYWRkKHJvb3QsIHNoYXJkcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGNvbmYgPSBhd2FpdCB0aGlzLl9pbnZvY2F0aW9uQ29uZmlnKFtVcGxvYWRDYXBhYmlsaXRpZXMuYWRkLmNhbl0pO1xuICAgICAgICBvcHRpb25zLmNvbm5lY3Rpb24gPSB0aGlzLl9zZXJ2aWNlQ29uZi51cGxvYWQ7XG4gICAgICAgIHJldHVybiBVcGxvYWQuYWRkKGNvbmYsIHJvb3QsIHNoYXJkcywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBkZXRhaWxzIG9mIGFuIFwidXBsb2FkXCIuXG4gICAgICpcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHVwbG9hZC9nZXRgXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5Vbmtub3duTGlua30gcm9vdCAtIFJvb3QgZGF0YSBDSUQgZm9yIHRoZSBEQUcgdGhhdCB3YXMgc3RvcmVkLlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICBhc3luYyBnZXQocm9vdCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGNvbmYgPSBhd2FpdCB0aGlzLl9pbnZvY2F0aW9uQ29uZmlnKFtVcGxvYWRDYXBhYmlsaXRpZXMuZ2V0LmNhbl0pO1xuICAgICAgICBvcHRpb25zLmNvbm5lY3Rpb24gPSB0aGlzLl9zZXJ2aWNlQ29uZi51cGxvYWQ7XG4gICAgICAgIHJldHVybiBVcGxvYWQuZ2V0KGNvbmYsIHJvb3QsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0IHVwbG9hZHMgcmVnaXN0ZXJlZCB0byB0aGUgcmVzb3VyY2UuXG4gICAgICpcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHVwbG9hZC9saXN0YFxuICAgICAqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuTGlzdFJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICBhc3luYyBsaXN0KG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBjb25mID0gYXdhaXQgdGhpcy5faW52b2NhdGlvbkNvbmZpZyhbVXBsb2FkQ2FwYWJpbGl0aWVzLmxpc3QuY2FuXSk7XG4gICAgICAgIG9wdGlvbnMuY29ubmVjdGlvbiA9IHRoaXMuX3NlcnZpY2VDb25mLnVwbG9hZDtcbiAgICAgICAgcmV0dXJuIFVwbG9hZC5saXN0KGNvbmYsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYW4gdXBsb2FkIGJ5IHJvb3QgZGF0YSBDSUQuXG4gICAgICpcbiAgICAgKiBSZXF1aXJlZCBkZWxlZ2F0ZWQgY2FwYWJpbGl0aWVzOlxuICAgICAqIC0gYHVwbG9hZC9yZW1vdmVgXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5Vbmtub3duTGlua30gcm9vdCAtIFJvb3QgZGF0YSBDSUQgdG8gcmVtb3ZlLlxuICAgICAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICBhc3luYyByZW1vdmUocm9vdCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGNvbmYgPSBhd2FpdCB0aGlzLl9pbnZvY2F0aW9uQ29uZmlnKFtVcGxvYWRDYXBhYmlsaXRpZXMucmVtb3ZlLmNhbl0pO1xuICAgICAgICBvcHRpb25zLmNvbm5lY3Rpb24gPSB0aGlzLl9zZXJ2aWNlQ29uZi51cGxvYWQ7XG4gICAgICAgIHJldHVybiBVcGxvYWQucmVtb3ZlKGNvbmYsIHJvb3QsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVwbG9hZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/upload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/usage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/capability/usage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UsageClient: () => (/* binding */ UsageClient),\n/* harmony export */   report: () => (/* binding */ report)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n\n\n\n/**\n * Client for interacting with the `usage/*` capabilities.\n */\nclass UsageClient extends _base_js__WEBPACK_IMPORTED_MODULE_2__.Base {\n    /**\n     * Get a usage report for the passed space in the given time period.\n     *\n     * Required delegated capabilities:\n     * - `usage/report`\n     *\n     * @param {import('../types.js').SpaceDID} space\n     * @param {{ from: Date, to: Date }} period\n     * @param {object} [options]\n     * @param {string} [options.nonce]\n     */\n    async report(space, period, options) {\n        const out = await report({ agent: this.agent }, { ...options, space, period });\n        /* c8 ignore next 7 */\n        if (!out.ok) {\n            throw new Error(`failed ${_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_0__.Usage.report.can} invocation`, {\n                cause: out.error,\n            });\n        }\n        return out.ok;\n    }\n}\n/**\n * Get a usage report for the period.\n *\n * @param {{agent: API.Agent}} client\n * @param {object} options\n * @param {API.SpaceDID} options.space\n * @param {{ from: Date, to: Date }} options.period\n * @param {string} [options.nonce]\n * @param {API.Delegation[]} [options.proofs]\n * @returns {Promise<API.Result<API.UsageReportSuccess, API.UsageReportFailure>>}\n */\nconst report = async ({ agent }, { space, period, nonce, proofs = [] }) => {\n    const receipt = await agent.invokeAndExecute(_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_0__.Usage.report, {\n        with: space,\n        proofs,\n        nonce,\n        nb: {\n            period: {\n                from: Math.floor(period.from.getTime() / 1000),\n                to: Math.ceil(period.to.getTime() / 1000),\n            },\n        },\n    });\n    return receipt.out;\n};\n//# sourceMappingURL=usage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jYXBhYmlsaXR5L3VzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXdFO0FBQ3JDO0FBQ0Q7QUFDbEM7QUFDQTtBQUNBO0FBQ08sMEJBQTBCLDBDQUFJO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0NBQWdDO0FBQy9DLGlCQUFpQix3QkFBd0I7QUFDekMsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0EsbUNBQW1DLG1CQUFtQixJQUFJLDJCQUEyQjtBQUNyRjtBQUNBO0FBQ0Esc0NBQXNDLG9FQUF3QixNQUFNO0FBQ3BFO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QixhQUFhLHdCQUF3QjtBQUNyQyxXQUFXLFFBQVE7QUFDbkIsV0FBVyxrQkFBa0I7QUFDN0IsYUFBYTtBQUNiO0FBQ08sd0JBQXdCLE9BQU8sSUFBSSxtQ0FBbUM7QUFDN0UsaURBQWlELG9FQUF3QjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvY2FwYWJpbGl0eS91c2FnZS5qcz8wMDdhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVzYWdlIGFzIFVzYWdlQ2FwYWJpbGl0aWVzIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9jYXBhYmlsaXRpZXMnO1xuaW1wb3J0ICogYXMgQVBJIGZyb20gJy4uL3R5cGVzLmpzJztcbmltcG9ydCB7IEJhc2UgfSBmcm9tICcuLi9iYXNlLmpzJztcbi8qKlxuICogQ2xpZW50IGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBgdXNhZ2UvKmAgY2FwYWJpbGl0aWVzLlxuICovXG5leHBvcnQgY2xhc3MgVXNhZ2VDbGllbnQgZXh0ZW5kcyBCYXNlIHtcbiAgICAvKipcbiAgICAgKiBHZXQgYSB1c2FnZSByZXBvcnQgZm9yIHRoZSBwYXNzZWQgc3BhY2UgaW4gdGhlIGdpdmVuIHRpbWUgcGVyaW9kLlxuICAgICAqXG4gICAgICogUmVxdWlyZWQgZGVsZWdhdGVkIGNhcGFiaWxpdGllczpcbiAgICAgKiAtIGB1c2FnZS9yZXBvcnRgXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5TcGFjZURJRH0gc3BhY2VcbiAgICAgKiBAcGFyYW0ge3sgZnJvbTogRGF0ZSwgdG86IERhdGUgfX0gcGVyaW9kXG4gICAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ub25jZV1cbiAgICAgKi9cbiAgICBhc3luYyByZXBvcnQoc3BhY2UsIHBlcmlvZCwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBvdXQgPSBhd2FpdCByZXBvcnQoeyBhZ2VudDogdGhpcy5hZ2VudCB9LCB7IC4uLm9wdGlvbnMsIHNwYWNlLCBwZXJpb2QgfSk7XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDcgKi9cbiAgICAgICAgaWYgKCFvdXQub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgZmFpbGVkICR7VXNhZ2VDYXBhYmlsaXRpZXMucmVwb3J0LmNhbn0gaW52b2NhdGlvbmAsIHtcbiAgICAgICAgICAgICAgICBjYXVzZTogb3V0LmVycm9yLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dC5vaztcbiAgICB9XG59XG4vKipcbiAqIEdldCBhIHVzYWdlIHJlcG9ydCBmb3IgdGhlIHBlcmlvZC5cbiAqXG4gKiBAcGFyYW0ge3thZ2VudDogQVBJLkFnZW50fX0gY2xpZW50XG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtBUEkuU3BhY2VESUR9IG9wdGlvbnMuc3BhY2VcbiAqIEBwYXJhbSB7eyBmcm9tOiBEYXRlLCB0bzogRGF0ZSB9fSBvcHRpb25zLnBlcmlvZFxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLm5vbmNlXVxuICogQHBhcmFtIHtBUEkuRGVsZWdhdGlvbltdfSBbb3B0aW9ucy5wcm9vZnNdXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxBUEkuUmVzdWx0PEFQSS5Vc2FnZVJlcG9ydFN1Y2Nlc3MsIEFQSS5Vc2FnZVJlcG9ydEZhaWx1cmU+Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IHJlcG9ydCA9IGFzeW5jICh7IGFnZW50IH0sIHsgc3BhY2UsIHBlcmlvZCwgbm9uY2UsIHByb29mcyA9IFtdIH0pID0+IHtcbiAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgYWdlbnQuaW52b2tlQW5kRXhlY3V0ZShVc2FnZUNhcGFiaWxpdGllcy5yZXBvcnQsIHtcbiAgICAgICAgd2l0aDogc3BhY2UsXG4gICAgICAgIHByb29mcyxcbiAgICAgICAgbm9uY2UsXG4gICAgICAgIG5iOiB7XG4gICAgICAgICAgICBwZXJpb2Q6IHtcbiAgICAgICAgICAgICAgICBmcm9tOiBNYXRoLmZsb29yKHBlcmlvZC5mcm9tLmdldFRpbWUoKSAvIDEwMDApLFxuICAgICAgICAgICAgICAgIHRvOiBNYXRoLmNlaWwocGVyaW9kLnRvLmdldFRpbWUoKSAvIDEwMDApLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gcmVjZWlwdC5vdXQ7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/usage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/client.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/client.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Access: () => (/* reexport module object */ _capability_access_js__WEBPACK_IMPORTED_MODULE_14__),\n/* harmony export */   AccessClient: () => (/* reexport safe */ _capability_access_js__WEBPACK_IMPORTED_MODULE_14__.AccessClient),\n/* harmony export */   BlobClient: () => (/* reexport safe */ _capability_blob_js__WEBPACK_IMPORTED_MODULE_7__.BlobClient),\n/* harmony export */   Client: () => (/* binding */ Client),\n/* harmony export */   FilecoinClient: () => (/* reexport safe */ _capability_filecoin_js__WEBPACK_IMPORTED_MODULE_16__.FilecoinClient),\n/* harmony export */   IndexClient: () => (/* reexport safe */ _capability_index_js__WEBPACK_IMPORTED_MODULE_8__.IndexClient),\n/* harmony export */   PlanClient: () => (/* reexport safe */ _capability_plan_js__WEBPACK_IMPORTED_MODULE_15__.PlanClient),\n/* harmony export */   SpaceClient: () => (/* reexport safe */ _capability_space_js__WEBPACK_IMPORTED_MODULE_11__.SpaceClient),\n/* harmony export */   StoreClient: () => (/* reexport safe */ _capability_store_js__WEBPACK_IMPORTED_MODULE_9__.StoreClient),\n/* harmony export */   SubscriptionClient: () => (/* reexport safe */ _capability_subscription_js__WEBPACK_IMPORTED_MODULE_12__.SubscriptionClient),\n/* harmony export */   UploadClient: () => (/* reexport safe */ _capability_upload_js__WEBPACK_IMPORTED_MODULE_10__.UploadClient),\n/* harmony export */   UsageClient: () => (/* reexport safe */ _capability_usage_js__WEBPACK_IMPORTED_MODULE_13__.UsageClient),\n/* harmony export */   authorizeContentServe: () => (/* binding */ authorizeContentServe)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/upload-client */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index.js\");\n/* harmony import */ var _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/capabilities */ \"(ssr)/./node_modules/@web3-storage/capabilities/src/index.js\");\n/* harmony import */ var _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/did-mailto */ \"(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./account.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/account.js\");\n/* harmony import */ var _space_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./space.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/space.js\");\n/* harmony import */ var _delegation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./delegation.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/delegation.js\");\n/* harmony import */ var _capability_blob_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./capability/blob.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/blob.js\");\n/* harmony import */ var _capability_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./capability/index.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/index.js\");\n/* harmony import */ var _capability_store_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./capability/store.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/store.js\");\n/* harmony import */ var _capability_upload_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./capability/upload.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/upload.js\");\n/* harmony import */ var _capability_space_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./capability/space.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/space.js\");\n/* harmony import */ var _capability_subscription_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./capability/subscription.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/subscription.js\");\n/* harmony import */ var _capability_usage_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./capability/usage.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/usage.js\");\n/* harmony import */ var _capability_access_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./capability/access.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/access.js\");\n/* harmony import */ var _capability_plan_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./capability/plan.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/plan.js\");\n/* harmony import */ var _capability_filecoin_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./capability/filecoin.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/filecoin.js\");\n/* harmony import */ var _coupon_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./coupon.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/coupon.js\");\n/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./result.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/result.js\");\n/* harmony import */ var _ucanto_client__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @ucanto/client */ \"(ssr)/./node_modules/@ucanto/client/src/lib.js\");\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _ucanto_transport_car__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @ucanto/transport/car */ \"(ssr)/./node_modules/@ucanto/transport/src/car.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Client extends _base_js__WEBPACK_IMPORTED_MODULE_3__.Base {\n    /**\n     * @param {import('@web3-storage/access').AgentData} agentData\n     * @param {object} [options]\n     * @param {import('./types.js').ServiceConf} [options.serviceConf]\n     * @param {URL} [options.receiptsEndpoint]\n     */\n    constructor(agentData, options) {\n        super(agentData, options);\n        this.capability = {\n            access: new _capability_access_js__WEBPACK_IMPORTED_MODULE_14__.AccessClient(agentData, options),\n            filecoin: new _capability_filecoin_js__WEBPACK_IMPORTED_MODULE_16__.FilecoinClient(agentData, options),\n            index: new _capability_index_js__WEBPACK_IMPORTED_MODULE_8__.IndexClient(agentData, options),\n            plan: new _capability_plan_js__WEBPACK_IMPORTED_MODULE_15__.PlanClient(agentData, options),\n            space: new _capability_space_js__WEBPACK_IMPORTED_MODULE_11__.SpaceClient(agentData, options),\n            blob: new _capability_blob_js__WEBPACK_IMPORTED_MODULE_7__.BlobClient(agentData, options),\n            store: new _capability_store_js__WEBPACK_IMPORTED_MODULE_9__.StoreClient(agentData, options),\n            subscription: new _capability_subscription_js__WEBPACK_IMPORTED_MODULE_12__.SubscriptionClient(agentData, options),\n            upload: new _capability_upload_js__WEBPACK_IMPORTED_MODULE_10__.UploadClient(agentData, options),\n            usage: new _capability_usage_js__WEBPACK_IMPORTED_MODULE_13__.UsageClient(agentData, options),\n        };\n        this.coupon = new _coupon_js__WEBPACK_IMPORTED_MODULE_17__.CouponAPI(agentData, options);\n    }\n    did() {\n        return this._agent.did();\n    }\n    /* c8 ignore start - testing websockets is hard */\n    /**\n     * @deprecated - Use client.login instead.\n     *\n     * Authorize the current agent to use capabilities granted to the passed\n     * email account.\n     *\n     * @param {`${string}@${string}`} email\n     * @param {object} [options]\n     * @param {AbortSignal} [options.signal]\n     * @param {Iterable<{ can: import('./types.js').Ability }>} [options.capabilities]\n     */\n    async authorize(email, options) {\n        await this.capability.access.authorize(email, options);\n    }\n    /**\n     * @param {Account.EmailAddress} email\n     * @param {object} [options]\n     * @param {AbortSignal} [options.signal]\n     */\n    async login(email, options = {}) {\n        const account = _result_js__WEBPACK_IMPORTED_MODULE_18__.unwrap(await _account_js__WEBPACK_IMPORTED_MODULE_4__.login(this, email, options));\n        _result_js__WEBPACK_IMPORTED_MODULE_18__.unwrap(await account.save());\n        return account;\n    }\n    /* c8 ignore stop */\n    /**\n     * List all accounts that agent has stored access to.\n     *\n     * @returns {Record<DIDMailto, Account>} A dictionary with `did:mailto` as keys and `Account` instances as values.\n     */\n    accounts() {\n        return _account_js__WEBPACK_IMPORTED_MODULE_4__.list(this);\n    }\n    /**\n     * Uploads a file to the service and returns the root data CID for the\n     * generated DAG.\n     *\n     * Required delegated capabilities:\n     * - `filecoin/offer`\n     * - `space/blob/add`\n     * - `space/index/add`\n     * - `upload/add`\n     *\n     * @param {import('./types.js').BlobLike} file - File data.\n     * @param {import('./types.js').UploadFileOptions} [options]\n     */\n    async uploadFile(file, options = {}) {\n        const conf = await this._invocationConfig([\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Blob.add.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Index.add.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Filecoin.offer.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Upload.add.can,\n        ]);\n        options = {\n            receiptsEndpoint: this._receiptsEndpoint.toString(),\n            connection: this._serviceConf.upload,\n            ...options,\n        };\n        return (0,_web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.uploadFile)(conf, file, options);\n    }\n    /**\n     * Uploads a directory of files to the service and returns the root data CID\n     * for the generated DAG. All files are added to a container directory, with\n     * paths in the file names preserved.\n     *\n     * Required delegated capabilities:\n     * - `filecoin/offer`\n     * - `space/blob/add`\n     * - `space/index/add`\n     * - `upload/add`\n     *\n     * @param {import('./types.js').FileLike[]} files - File data.\n     * @param {import('./types.js').UploadDirectoryOptions} [options]\n     */\n    async uploadDirectory(files, options = {}) {\n        const conf = await this._invocationConfig([\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Blob.add.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Index.add.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Filecoin.offer.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Upload.add.can,\n        ]);\n        options = {\n            receiptsEndpoint: this._receiptsEndpoint.toString(),\n            connection: this._serviceConf.upload,\n            ...options,\n        };\n        return (0,_web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.uploadDirectory)(conf, files, options);\n    }\n    /**\n     * Uploads a CAR file to the service.\n     *\n     * The difference between this function and `capability.blob.add` is that\n     * the CAR file is automatically sharded, an index is generated, uploaded and\n     * registered (see `capability.index.add`) and finally an an \"upload\" is\n     * registered, linking the individual shards (see `capability.upload.add`).\n     *\n     * Use the `onShardStored` callback to obtain the CIDs of the CAR file shards.\n     *\n     * Required delegated capabilities:\n     * - `filecoin/offer`\n     * - `space/blob/add`\n     * - `space/index/add`\n     * - `upload/add`\n     *\n     * @param {import('./types.js').BlobLike} car - CAR file.\n     * @param {import('./types.js').UploadOptions} [options]\n     */\n    async uploadCAR(car, options = {}) {\n        const conf = await this._invocationConfig([\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Blob.add.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Index.add.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Filecoin.offer.can,\n            _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Upload.add.can,\n        ]);\n        options = {\n            receiptsEndpoint: this._receiptsEndpoint.toString(),\n            connection: this._serviceConf.upload,\n            ...options,\n        };\n        return (0,_web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.uploadCAR)(conf, car, options);\n    }\n    /**\n     * Get a receipt for an executed task by its CID.\n     *\n     * @param {import('multiformats').UnknownLink} taskCid\n     */\n    async getReceipt(taskCid) {\n        const receiptsEndpoint = new URL(this._receiptsEndpoint).toString();\n        return _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_0__.Receipt.poll(taskCid, { receiptsEndpoint });\n    }\n    /**\n     * Return the default provider.\n     */\n    defaultProvider() {\n        return this._agent.connection.id.did();\n    }\n    /**\n     * The current space.\n     */\n    currentSpace() {\n        const agent = this._agent;\n        const id = agent.currentSpace();\n        if (!id)\n            return;\n        const meta = agent.spaces.get(id);\n        return new _space_js__WEBPACK_IMPORTED_MODULE_5__.Space({ id, meta, agent });\n    }\n    /**\n     * Use a specific space.\n     *\n     * @param {import('./types.js').DID} did\n     */\n    async setCurrentSpace(did) {\n        await this._agent.setCurrentSpace(/** @type {`did:key:${string}`} */ (did));\n    }\n    /**\n     * Spaces available to this agent.\n     */\n    spaces() {\n        return [...this._agent.spaces].map(([id, meta]) => {\n            // @ts-expect-error id is not did:key\n            return new _space_js__WEBPACK_IMPORTED_MODULE_5__.Space({ id, meta, agent: this._agent });\n        });\n    }\n    /**\n     * Creates a new space with a given name.\n     * If an account is not provided, the space is created without any delegation and is not saved, hence it is a temporary space.\n     * When an account is provided in the options argument, then it creates a delegated recovery account\n     * by provisioning the space, saving it and then delegating access to the recovery account.\n     * In addition, it authorizes the listed Gateway Services to serve content from the created space.\n     * It is done by delegating the `space/content/serve/*` capability to the Gateway Service.\n     * User can skip the Gateway authorization by setting the `skipGatewayAuthorization` option to `true`.\n     * If no gateways are specified or the `skipGatewayAuthorization` flag is not set, the client will automatically grant access\n     * to the Storacha Gateway by default (https://freewaying.dag.haus/).\n     *\n     * @typedef {import('./types.js').ConnectionView<import('./types.js').ContentServeService>} ConnectionView\n     *\n     * @typedef {object} SpaceCreateOptions\n     * @property {Account.Account} [account] - The account configured as the recovery account for the space.\n     * @property {Array<ConnectionView>} [authorizeGatewayServices] - The DID Key or DID Web of the Gateway to authorize to serve content from the created space.\n     * @property {boolean} [skipGatewayAuthorization] - Whether to skip the Gateway authorization. It means that the content of the space will not be served by any Gateway.\n     *\n     * @param {string} name - The name of the space to create.\n     * @param {SpaceCreateOptions} [options] - Options for the space creation.\n     * @returns {Promise<import(\"./space.js\").OwnedSpace>} The created space owned by the agent.\n     */\n    async createSpace(name, options) {\n        // Save the space to authorize the client to use the space\n        const space = await this._agent.createSpace(name);\n        const account = options?.account;\n        if (account) {\n            // Provision the account with the space\n            const provisionResult = await account.provision(space.did());\n            if (provisionResult.error) {\n                throw new Error(`failed to provision account: ${provisionResult.error.message}`, { cause: provisionResult.error });\n            }\n            // Save the space to authorize the client to use the space\n            await space.save();\n            // Create a recovery for the account\n            const recovery = await space.createRecovery(account.did());\n            // Delegate space access to the recovery\n            const delegationResult = await this.capability.access.delegate({\n                space: space.did(),\n                delegations: [recovery],\n            });\n            if (delegationResult.error) {\n                throw new Error(`failed to authorize recovery account: ${delegationResult.error.message}`, { cause: delegationResult.error });\n            }\n        }\n        // Authorize the listed Gateway Services to serve content from the created space\n        if (options?.skipGatewayAuthorization !== true) {\n            let authorizeGatewayServices = options?.authorizeGatewayServices;\n            if (!authorizeGatewayServices || authorizeGatewayServices.length === 0) {\n                // If no Gateway Services are provided, authorize the Storacha Gateway Service\n                authorizeGatewayServices = [\n                    _ucanto_client__WEBPACK_IMPORTED_MODULE_19__.connect({\n                        id: {\n                            did: () => \n                            /** @type {`did:${string}:${string}`} */ (\n                            /* c8 ignore next - default prod gateway id is not used in tests */\n                            process.env.DEFAULT_GATEWAY_ID ?? 'did:web:w3s.link'),\n                        },\n                        codec: _ucanto_transport_car__WEBPACK_IMPORTED_MODULE_21__.outbound,\n                        channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_20__.HTTP.open({\n                            url: new URL(\n                            /* c8 ignore next - default prod gateway url is not used in tests */\n                            process.env.DEFAULT_GATEWAY_URL ?? 'https://w3s.link'),\n                        }),\n                    }),\n                ];\n            }\n            // Save the space to authorize the client to use the space\n            await space.save();\n            for (const serviceConnection of authorizeGatewayServices) {\n                await authorizeContentServe(this, space, serviceConnection);\n            }\n        }\n        return space;\n    }\n    /**\n     * Share an existing space with another Storacha account via email address delegation.\n     * Delegates access to the space to the specified email account with the following permissions:\n     * - space/* - for managing space metadata\n     * - blob/* - for managing blobs\n     * - store/* - for managing stores\n     * - upload/*- for registering uploads\n     * - access/* - for re-delegating access to other devices\n     * - filecoin/* - for submitting to the filecoin pipeline\n     * - usage/* - for querying usage\n     * The default expiration is set to infinity.\n     *\n     * @typedef {object} ShareOptions\n     * @property {import('./types.js').ServiceAbility[]} abilities - Abilities to delegate to the delegate account.\n     * @property {number} expiration - Expiration time in seconds.\n     \n     * @param {import(\"./types.js\").EmailAddress} delegateEmail - Email of the account to share the space with.\n     * @param {import('./types.js').SpaceDID} spaceDID - The DID of the space to share.\n     * @param {ShareOptions} [options] - Options for the delegation.\n     *\n     * @returns {Promise<import('./delegation.js').AgentDelegation<any>>} Resolves with the AgentDelegation instance once the space is successfully shared.\n     * @throws {Error} - Throws an error if there is an issue delegating access to the space.\n     */\n    async shareSpace(delegateEmail, spaceDID, options = {\n        abilities: [\n            'space/*',\n            'store/*',\n            'upload/*',\n            'access/*',\n            'usage/*',\n            'filecoin/*',\n        ],\n        expiration: Infinity,\n    }) {\n        const { abilities, ...restOptions } = options;\n        const currentSpace = this.agent.currentSpace();\n        try {\n            // Make sure the agent is using the shared space before delegating\n            await this.agent.setCurrentSpace(spaceDID);\n            // Delegate capabilities to the delegate account to access the **current space**\n            const { root, blocks } = await this.agent.delegate({\n                ...restOptions,\n                abilities,\n                audience: {\n                    did: () => _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_2__.fromEmail(_web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_2__.email(delegateEmail)),\n                },\n                // @ts-expect-error audienceMeta is not defined in ShareOptions\n                audienceMeta: options.audienceMeta ?? {},\n            });\n            const delegation = new _delegation_js__WEBPACK_IMPORTED_MODULE_6__.AgentDelegation(root, blocks, {\n                audience: delegateEmail,\n            });\n            const sharingResult = await this.capability.access.delegate({\n                space: spaceDID,\n                delegations: [delegation],\n            });\n            if (sharingResult.error) {\n                throw new Error(`failed to share space with ${delegateEmail}: ${sharingResult.error.message}`, {\n                    cause: sharingResult.error,\n                });\n            }\n            return delegation;\n        }\n        finally {\n            // Reset to the original space if it was different\n            if (currentSpace && currentSpace !== spaceDID) {\n                await this.agent.setCurrentSpace(currentSpace);\n            }\n        }\n    }\n    /* c8 ignore stop */\n    /**\n     * Add a space from a received proof.\n     *\n     * @param {import('./types.js').Delegation} proof\n     */\n    async addSpace(proof) {\n        return await this._agent.importSpaceFromDelegation(proof);\n    }\n    /**\n     * Get all the proofs matching the capabilities.\n     *\n     * Proofs are delegations with an _audience_ matching the agent DID.\n     *\n     * @param {import('./types.js').Capability[]} [caps] - Capabilities to\n     * filter by. Empty or undefined caps with return all the proofs.\n     */\n    proofs(caps) {\n        return this._agent.proofs(caps);\n    }\n    /**\n     * Add a proof to the agent. Proofs are delegations with an _audience_\n     * matching the agent DID.\n     *\n     * @param {import('./types.js').Delegation} proof\n     */\n    async addProof(proof) {\n        await this._agent.addProof(proof);\n    }\n    /**\n     * Get delegations created by the agent for others.\n     *\n     * @param {import('./types.js').Capability[]} [caps] - Capabilities to\n     * filter by. Empty or undefined caps with return all the delegations.\n     */\n    delegations(caps) {\n        const delegations = [];\n        for (const { delegation, meta } of this._agent.delegationsWithMeta(caps)) {\n            delegations.push(new _delegation_js__WEBPACK_IMPORTED_MODULE_6__.AgentDelegation(delegation.root, delegation.blocks, meta));\n        }\n        return delegations;\n    }\n    /**\n     * Create a delegation to the passed audience for the given abilities with\n     * the _current_ space as the resource.\n     *\n     * @param {import('./types.js').Principal} audience\n     * @param {import('./types.js').ServiceAbility[]} abilities\n     * @param {Omit<import('./types.js').UCANOptions, 'audience'> & { audienceMeta?: import('./types.js').AgentMeta }} [options]\n     */\n    async createDelegation(audience, abilities, options = {}) {\n        const audienceMeta = options.audienceMeta ?? {\n            name: 'agent',\n            type: 'device',\n        };\n        const { root, blocks } = await this._agent.delegate({\n            ...options,\n            abilities,\n            audience,\n            audienceMeta,\n        });\n        return new _delegation_js__WEBPACK_IMPORTED_MODULE_6__.AgentDelegation(root, blocks, { audience: audienceMeta });\n    }\n    /**\n     * Revoke a delegation by CID.\n     *\n     * If the delegation was issued by this agent (and therefore is stored in the\n     * delegation store) you can just pass the CID. If not, or if the current agent's\n     * delegation store no longer contains the delegation, you MUST pass a chain of\n     * proofs that proves your authority to revoke this delegation as `options.proofs`.\n     *\n     * @param {import('@ucanto/interface').UCANLink} delegationCID\n     * @param {object} [options]\n     * @param {import('@ucanto/interface').Delegation[]} [options.proofs]\n     */\n    async revokeDelegation(delegationCID, options = {}) {\n        return this._agent.revoke(delegationCID, {\n            proofs: options.proofs,\n        });\n    }\n    /**\n     * Removes association of a content CID with the space. Optionally, also removes\n     * association of CAR shards with space.\n     *\n     * ⚠️ If `shards` option is `true` all shards will be deleted even if there is another upload(s) that\n     * reference same shards, which in turn could corrupt those uploads.\n     *\n     * Required delegated capabilities:\n     * - `space/blob/remove`\n     * - `store/remove`\n     * - `upload/get`\n     * - `upload/remove`\n     *\n     * @param {import('multiformats').UnknownLink} contentCID\n     * @param {object} [options]\n     * @param {boolean} [options.shards]\n     */\n    async remove(contentCID, options = {}) {\n        // Shortcut if there is no request to remove shards\n        if (!options.shards) {\n            // Remove association of content CID with selected space.\n            await this.capability.upload.remove(contentCID);\n            return;\n        }\n        // Get shards associated with upload.\n        const upload = await this.capability.upload.get(contentCID);\n        // Remove shards\n        if (upload.shards?.length) {\n            await Promise.allSettled(upload.shards.map(async (shard) => {\n                try {\n                    const res = await this.capability.blob.remove(shard.multihash);\n                    /* c8 ignore start */\n                    // if no size, the blob was not found, try delete from store\n                    if (res.ok && res.ok.size === 0) {\n                        await this.capability.store.remove(shard);\n                    }\n                }\n                catch ( /** @type {any} */error) {\n                    // If not found, we can tolerate error as it may be a consecutive call for deletion where first failed\n                    if (error?.cause?.name !== 'StoreItemNotFound') {\n                        throw new Error(`failed to remove shard: ${shard}`, {\n                            cause: error,\n                        });\n                    }\n                    /* c8 ignore next 4 */\n                }\n            }));\n        }\n        // Remove association of content CID with selected space.\n        await this.capability.upload.remove(contentCID);\n    }\n}\n/**\n * Authorizes an audience to serve content from the provided space and record egress events.\n * It also publishes the delegation to the content serve service.\n * Delegates the following capabilities to the audience:\n * - `space/content/serve/*`\n *\n * @param {Client} client - The w3up client instance.\n * @param {import('./types.js').OwnedSpace} space - The space to authorize the audience for.\n * @param {import('./types.js').ConnectionView<import('./types.js').ContentServeService>} connection - The connection to the Content Serve Service that will handle, validate, and store the access/delegate UCAN invocation.\n * @param {object} [options] - Options for the content serve authorization invocation.\n * @param {`did:${string}:${string}`} [options.audience] - The Web DID of the audience (gateway or peer) to authorize.\n * @param {number} [options.expiration] - The time at which the delegation expires in seconds from unix epoch.\n */\nconst authorizeContentServe = async (client, space, connection, options = {}) => {\n    const currentSpace = client.currentSpace();\n    try {\n        // Set the current space to the space we are authorizing the gateway for, otherwise the delegation will fail\n        await client.setCurrentSpace(space.did());\n        /** @type {import('@ucanto/client').Principal<`did:${string}:${string}`>} */\n        const audience = {\n            did: () => options.audience ?? connection.id.did(),\n        };\n        // Grant the audience the ability to serve content from the space, it includes existing proofs automatically\n        const delegation = await client.createDelegation(audience, [_web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Space.contentServe.can], {\n            expiration: options.expiration ?? Infinity,\n        });\n        // Publish the delegation to the content serve service\n        const accessProofs = client.proofs([\n            { can: _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Access.access.can, with: space.did() },\n        ]);\n        const verificationResult = await _web3_storage_capabilities__WEBPACK_IMPORTED_MODULE_1__.Access.delegate\n            .invoke({\n            issuer: client.agent.issuer,\n            audience,\n            with: space.did(),\n            proofs: [...accessProofs, delegation],\n            nb: {\n                delegations: {\n                    [delegation.cid.toString()]: delegation.cid,\n                },\n            },\n        })\n            .execute(connection);\n        /* c8 ignore next 8 - can't mock this error */\n        if (verificationResult.out.error) {\n            throw new Error(`failed to publish delegation for audience ${audience.did()}: ${verificationResult.out.error.message}`, {\n                cause: verificationResult.out.error,\n            });\n        }\n        return { ok: { ...verificationResult.out.ok, delegation } };\n    }\n    finally {\n        if (currentSpace) {\n            await client.setCurrentSpace(currentSpace.did());\n        }\n    }\n};\n//# sourceMappingURL=client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/coupon.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/coupon.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Coupon: () => (/* binding */ Coupon),\n/* harmony export */   CouponAPI: () => (/* binding */ CouponAPI),\n/* harmony export */   archive: () => (/* binding */ archive),\n/* harmony export */   extract: () => (/* binding */ extract),\n/* harmony export */   issue: () => (/* binding */ issue),\n/* harmony export */   redeem: () => (/* binding */ redeem)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_access_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/access/types */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _ucanto_principal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/principal */ \"(ssr)/./node_modules/@ucanto/principal/src/lib.js\");\n/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./result.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/result.js\");\n/* harmony import */ var _web3_storage_access_access__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @web3-storage/access/access */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/access.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/base.js\");\n\n\n\n\n\n\nclass CouponAPI extends _base_js__WEBPACK_IMPORTED_MODULE_5__.Base {\n    /**\n     * Redeems coupon from the the the archive. Throws an error if the coupon\n     * password is invalid or if provided archive is not a valid.\n     *\n     * @param {Uint8Array} archive\n     * @param {object} [options]\n     * @param {string} [options.password]\n     */\n    async redeem(archive, options = {}) {\n        const { agent } = this;\n        const coupon = _result_js__WEBPACK_IMPORTED_MODULE_3__.unwrap(await extract(archive));\n        return _result_js__WEBPACK_IMPORTED_MODULE_3__.unwrap(await redeem(coupon, { ...options, agent }));\n    }\n    /**\n     * Issues a coupon for the given delegation.\n     *\n     * @param {Omit<CouponOptions, 'issuer'>} options\n     */\n    async issue({ proofs = [], ...options }) {\n        const { agent } = this;\n        return await issue({\n            ...options,\n            issuer: agent.issuer,\n            proofs: [...proofs, ...agent.proofs(options.capabilities)],\n        });\n    }\n}\n/**\n * Extracts coupon from the archive.\n *\n * @param {Uint8Array} archive\n * @returns {Promise<API.Result<Coupon, Error>>}\n */\nconst extract = async (archive) => {\n    const { ok, error } = await _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Delegation.extract(archive);\n    return ok ? _result_js__WEBPACK_IMPORTED_MODULE_3__.ok(new Coupon({ proofs: [ok] })) : _result_js__WEBPACK_IMPORTED_MODULE_3__.error(error);\n};\n/**\n * Encodes coupon into an archive.\n *\n * @param {Model} coupon\n */\nconst archive = async (coupon) => {\n    const [delegation] = coupon.proofs;\n    return await _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Delegation.archive(delegation);\n};\n/**\n * Issues a coupon for the given delegation.\n *\n * @typedef {Omit<import('@ucanto/interface').DelegationOptions<API.Capabilities>, 'audience'> & { password?: string }} CouponOptions\n * @param {CouponOptions} options\n */\nconst issue = async ({ password = '', ...options }) => {\n    const audience = await deriveSigner(password);\n    const delegation = await (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.delegate)({\n        ...options,\n        audience,\n    });\n    return new Coupon({ proofs: [delegation] });\n};\n/**\n * @typedef {object} Model\n * @property {[API.Delegation]} proofs\n */\n/**\n * Redeems granted access with the given agent from the given coupon.\n *\n * @param {Model} coupon\n * @param {object} options\n * @param {API.Agent} options.agent\n * @param {string} [options.password]\n * @returns {Promise<API.Result<GrantedAccess, Error>>}\n */\nconst redeem = async (coupon, { agent, password = '' }) => {\n    const audience = await deriveSigner(password);\n    const [delegation] = coupon.proofs;\n    if (delegation.audience.did() !== audience.did()) {\n        return _result_js__WEBPACK_IMPORTED_MODULE_3__.error(new RangeError(password === ''\n            ? 'Extracting account requires a password'\n            : 'Provided password is invalid'));\n    }\n    else {\n        const authorization = await (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.delegate)({\n            issuer: audience,\n            audience: agent,\n            capabilities: delegation.capabilities,\n            expiration: delegation.expiration,\n            notBefore: delegation.notBefore,\n            proofs: [delegation],\n        });\n        return _result_js__WEBPACK_IMPORTED_MODULE_3__.ok(new _web3_storage_access_access__WEBPACK_IMPORTED_MODULE_4__.GrantedAccess({ agent, proofs: [authorization] }));\n    }\n};\n/**\n * @param {string} password\n */\nconst deriveSigner = async (password) => {\n    const { digest } = await _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.sha256.digest(new TextEncoder().encode(password));\n    return await _ucanto_principal__WEBPACK_IMPORTED_MODULE_2__.ed25519.Signer.derive(digest);\n};\nclass Coupon {\n    /**\n     * @param {Model} model\n     */\n    constructor(model) {\n        this.model = model;\n    }\n    get proofs() {\n        return this.model.proofs;\n    }\n    /**\n     *\n     * @param {API.Agent} agent\n     * @param {object} [options]\n     * @param {string} [options.password]\n     */\n    redeem(agent, options = {}) {\n        return redeem(this, { ...options, agent });\n    }\n    archive() {\n        return archive(this);\n    }\n}\n//# sourceMappingURL=coupon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jb3Vwb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQ1U7QUFDaEI7QUFDTjtBQUNzQjtBQUMzQjtBQUMxQix3QkFBd0IsMENBQUk7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFlBQVk7QUFDM0IsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBLHNDQUFzQztBQUN0QyxnQkFBZ0IsUUFBUTtBQUN4Qix1QkFBdUIsOENBQWE7QUFDcEMsZUFBZSw4Q0FBYSx3QkFBd0IsbUJBQW1CO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwrQkFBK0I7QUFDOUM7QUFDQSxrQkFBa0IseUJBQXlCO0FBQzNDLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLFlBQVksUUFBUSw0REFBa0I7QUFDbEQsZ0JBQWdCLDBDQUFTLGNBQWMsY0FBYyxLQUFLLDZDQUFZO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUDtBQUNBLGlCQUFpQiw0REFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNGQUFzRixxQkFBcUI7QUFDeEgsV0FBVyxlQUFlO0FBQzFCO0FBQ08sdUJBQXVCLDJCQUEyQjtBQUN6RDtBQUNBLDZCQUE2QixzREFBUTtBQUNyQztBQUNBO0FBQ0EsS0FBSztBQUNMLHdCQUF3QixzQkFBc0I7QUFDOUM7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLGtCQUFrQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTyxnQ0FBZ0Msc0JBQXNCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkNBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msc0RBQVE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULGVBQWUsMENBQVMsS0FBSyxzRUFBYSxHQUFHLGdDQUFnQztBQUM3RTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBLFlBQVksU0FBUyxRQUFRLGdEQUFNO0FBQ25DLGlCQUFpQixvRUFBcUI7QUFDdEM7QUFDTztBQUNQO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsV0FBVztBQUMxQixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsOEJBQThCO0FBQzlCLDhCQUE4QixtQkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9jb3Vwb24uanM/M2UzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBUEkgZnJvbSAnQHdlYjMtc3RvcmFnZS9hY2Nlc3MvdHlwZXMnO1xuaW1wb3J0IHsgc2hhMjU2LCBkZWxlZ2F0ZSwgRGVsZWdhdGlvbiB9IGZyb20gJ0B1Y2FudG8vY29yZSc7XG5pbXBvcnQgeyBlZDI1NTE5IH0gZnJvbSAnQHVjYW50by9wcmluY2lwYWwnO1xuaW1wb3J0ICogYXMgUmVzdWx0IGZyb20gJy4vcmVzdWx0LmpzJztcbmltcG9ydCB7IEdyYW50ZWRBY2Nlc3MgfSBmcm9tICdAd2ViMy1zdG9yYWdlL2FjY2Vzcy9hY2Nlc3MnO1xuaW1wb3J0IHsgQmFzZSB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY2xhc3MgQ291cG9uQVBJIGV4dGVuZHMgQmFzZSB7XG4gICAgLyoqXG4gICAgICogUmVkZWVtcyBjb3Vwb24gZnJvbSB0aGUgdGhlIHRoZSBhcmNoaXZlLiBUaHJvd3MgYW4gZXJyb3IgaWYgdGhlIGNvdXBvblxuICAgICAqIHBhc3N3b3JkIGlzIGludmFsaWQgb3IgaWYgcHJvdmlkZWQgYXJjaGl2ZSBpcyBub3QgYSB2YWxpZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gYXJjaGl2ZVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMucGFzc3dvcmRdXG4gICAgICovXG4gICAgYXN5bmMgcmVkZWVtKGFyY2hpdmUsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB7IGFnZW50IH0gPSB0aGlzO1xuICAgICAgICBjb25zdCBjb3Vwb24gPSBSZXN1bHQudW53cmFwKGF3YWl0IGV4dHJhY3QoYXJjaGl2ZSkpO1xuICAgICAgICByZXR1cm4gUmVzdWx0LnVud3JhcChhd2FpdCByZWRlZW0oY291cG9uLCB7IC4uLm9wdGlvbnMsIGFnZW50IH0pKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSXNzdWVzIGEgY291cG9uIGZvciB0aGUgZ2l2ZW4gZGVsZWdhdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7T21pdDxDb3Vwb25PcHRpb25zLCAnaXNzdWVyJz59IG9wdGlvbnNcbiAgICAgKi9cbiAgICBhc3luYyBpc3N1ZSh7IHByb29mcyA9IFtdLCAuLi5vcHRpb25zIH0pIHtcbiAgICAgICAgY29uc3QgeyBhZ2VudCB9ID0gdGhpcztcbiAgICAgICAgcmV0dXJuIGF3YWl0IGlzc3VlKHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBpc3N1ZXI6IGFnZW50Lmlzc3VlcixcbiAgICAgICAgICAgIHByb29mczogWy4uLnByb29mcywgLi4uYWdlbnQucHJvb2ZzKG9wdGlvbnMuY2FwYWJpbGl0aWVzKV0sXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8qKlxuICogRXh0cmFjdHMgY291cG9uIGZyb20gdGhlIGFyY2hpdmUuXG4gKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBhcmNoaXZlXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxBUEkuUmVzdWx0PENvdXBvbiwgRXJyb3I+Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IGV4dHJhY3QgPSBhc3luYyAoYXJjaGl2ZSkgPT4ge1xuICAgIGNvbnN0IHsgb2ssIGVycm9yIH0gPSBhd2FpdCBEZWxlZ2F0aW9uLmV4dHJhY3QoYXJjaGl2ZSk7XG4gICAgcmV0dXJuIG9rID8gUmVzdWx0Lm9rKG5ldyBDb3Vwb24oeyBwcm9vZnM6IFtva10gfSkpIDogUmVzdWx0LmVycm9yKGVycm9yKTtcbn07XG4vKipcbiAqIEVuY29kZXMgY291cG9uIGludG8gYW4gYXJjaGl2ZS5cbiAqXG4gKiBAcGFyYW0ge01vZGVsfSBjb3Vwb25cbiAqL1xuZXhwb3J0IGNvbnN0IGFyY2hpdmUgPSBhc3luYyAoY291cG9uKSA9PiB7XG4gICAgY29uc3QgW2RlbGVnYXRpb25dID0gY291cG9uLnByb29mcztcbiAgICByZXR1cm4gYXdhaXQgRGVsZWdhdGlvbi5hcmNoaXZlKGRlbGVnYXRpb24pO1xufTtcbi8qKlxuICogSXNzdWVzIGEgY291cG9uIGZvciB0aGUgZ2l2ZW4gZGVsZWdhdGlvbi5cbiAqXG4gKiBAdHlwZWRlZiB7T21pdDxpbXBvcnQoJ0B1Y2FudG8vaW50ZXJmYWNlJykuRGVsZWdhdGlvbk9wdGlvbnM8QVBJLkNhcGFiaWxpdGllcz4sICdhdWRpZW5jZSc+ICYgeyBwYXNzd29yZD86IHN0cmluZyB9fSBDb3Vwb25PcHRpb25zXG4gKiBAcGFyYW0ge0NvdXBvbk9wdGlvbnN9IG9wdGlvbnNcbiAqL1xuZXhwb3J0IGNvbnN0IGlzc3VlID0gYXN5bmMgKHsgcGFzc3dvcmQgPSAnJywgLi4ub3B0aW9ucyB9KSA9PiB7XG4gICAgY29uc3QgYXVkaWVuY2UgPSBhd2FpdCBkZXJpdmVTaWduZXIocGFzc3dvcmQpO1xuICAgIGNvbnN0IGRlbGVnYXRpb24gPSBhd2FpdCBkZWxlZ2F0ZSh7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIGF1ZGllbmNlLFxuICAgIH0pO1xuICAgIHJldHVybiBuZXcgQ291cG9uKHsgcHJvb2ZzOiBbZGVsZWdhdGlvbl0gfSk7XG59O1xuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBNb2RlbFxuICogQHByb3BlcnR5IHtbQVBJLkRlbGVnYXRpb25dfSBwcm9vZnNcbiAqL1xuLyoqXG4gKiBSZWRlZW1zIGdyYW50ZWQgYWNjZXNzIHdpdGggdGhlIGdpdmVuIGFnZW50IGZyb20gdGhlIGdpdmVuIGNvdXBvbi5cbiAqXG4gKiBAcGFyYW0ge01vZGVsfSBjb3Vwb25cbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge0FQSS5BZ2VudH0gb3B0aW9ucy5hZ2VudFxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnBhc3N3b3JkXVxuICogQHJldHVybnMge1Byb21pc2U8QVBJLlJlc3VsdDxHcmFudGVkQWNjZXNzLCBFcnJvcj4+fVxuICovXG5leHBvcnQgY29uc3QgcmVkZWVtID0gYXN5bmMgKGNvdXBvbiwgeyBhZ2VudCwgcGFzc3dvcmQgPSAnJyB9KSA9PiB7XG4gICAgY29uc3QgYXVkaWVuY2UgPSBhd2FpdCBkZXJpdmVTaWduZXIocGFzc3dvcmQpO1xuICAgIGNvbnN0IFtkZWxlZ2F0aW9uXSA9IGNvdXBvbi5wcm9vZnM7XG4gICAgaWYgKGRlbGVnYXRpb24uYXVkaWVuY2UuZGlkKCkgIT09IGF1ZGllbmNlLmRpZCgpKSB7XG4gICAgICAgIHJldHVybiBSZXN1bHQuZXJyb3IobmV3IFJhbmdlRXJyb3IocGFzc3dvcmQgPT09ICcnXG4gICAgICAgICAgICA/ICdFeHRyYWN0aW5nIGFjY291bnQgcmVxdWlyZXMgYSBwYXNzd29yZCdcbiAgICAgICAgICAgIDogJ1Byb3ZpZGVkIHBhc3N3b3JkIGlzIGludmFsaWQnKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBhdXRob3JpemF0aW9uID0gYXdhaXQgZGVsZWdhdGUoe1xuICAgICAgICAgICAgaXNzdWVyOiBhdWRpZW5jZSxcbiAgICAgICAgICAgIGF1ZGllbmNlOiBhZ2VudCxcbiAgICAgICAgICAgIGNhcGFiaWxpdGllczogZGVsZWdhdGlvbi5jYXBhYmlsaXRpZXMsXG4gICAgICAgICAgICBleHBpcmF0aW9uOiBkZWxlZ2F0aW9uLmV4cGlyYXRpb24sXG4gICAgICAgICAgICBub3RCZWZvcmU6IGRlbGVnYXRpb24ubm90QmVmb3JlLFxuICAgICAgICAgICAgcHJvb2ZzOiBbZGVsZWdhdGlvbl0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gUmVzdWx0Lm9rKG5ldyBHcmFudGVkQWNjZXNzKHsgYWdlbnQsIHByb29mczogW2F1dGhvcml6YXRpb25dIH0pKTtcbiAgICB9XG59O1xuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFzc3dvcmRcbiAqL1xuY29uc3QgZGVyaXZlU2lnbmVyID0gYXN5bmMgKHBhc3N3b3JkKSA9PiB7XG4gICAgY29uc3QgeyBkaWdlc3QgfSA9IGF3YWl0IHNoYTI1Ni5kaWdlc3QobmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHBhc3N3b3JkKSk7XG4gICAgcmV0dXJuIGF3YWl0IGVkMjU1MTkuU2lnbmVyLmRlcml2ZShkaWdlc3QpO1xufTtcbmV4cG9ydCBjbGFzcyBDb3Vwb24ge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7TW9kZWx9IG1vZGVsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobW9kZWwpIHtcbiAgICAgICAgdGhpcy5tb2RlbCA9IG1vZGVsO1xuICAgIH1cbiAgICBnZXQgcHJvb2ZzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tb2RlbC5wcm9vZnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHtBUEkuQWdlbnR9IGFnZW50XG4gICAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5wYXNzd29yZF1cbiAgICAgKi9cbiAgICByZWRlZW0oYWdlbnQsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gcmVkZWVtKHRoaXMsIHsgLi4ub3B0aW9ucywgYWdlbnQgfSk7XG4gICAgfVxuICAgIGFyY2hpdmUoKSB7XG4gICAgICAgIHJldHVybiBhcmNoaXZlKHRoaXMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvdXBvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/coupon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/delegation.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/delegation.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentDelegation: () => (/* binding */ AgentDelegation),\n/* harmony export */   ArchiveSchema: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.ArchiveSchema),\n/* harmony export */   Delegation: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.Delegation),\n/* harmony export */   View: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.View),\n/* harmony export */   allows: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.allows),\n/* harmony export */   archive: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.archive),\n/* harmony export */   create: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.create),\n/* harmony export */   delegate: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.delegate),\n/* harmony export */   exportDAG: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.exportDAG),\n/* harmony export */   extract: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.extract),\n/* harmony export */   importDAG: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.importDAG),\n/* harmony export */   isDelegation: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.isDelegation),\n/* harmony export */   isLink: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.isLink),\n/* harmony export */   view: () => (/* reexport safe */ _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.view)\n/* harmony export */ });\n/* harmony import */ var _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/core/delegation */ \"(ssr)/./node_modules/@ucanto/core/src/delegation.js\");\n\n\n/* c8 ignore start */\n/**\n * @template {import('./types.js').Capabilities} C\n * @extends {Delegation<C>}\n */\nclass AgentDelegation extends _ucanto_core_delegation__WEBPACK_IMPORTED_MODULE_0__.Delegation {\n    /* c8 ignore stop */\n    /** @type {Record<string, any>} */\n    #meta;\n    /**\n     * @param {import('./types.js').UCANBlock<C>} root\n     * @param {Map<string, import('./types.js').Block>} [blocks]\n     * @param {Record<string, any>} [meta]\n     */\n    constructor(root, blocks, meta = {}) {\n        super(root, blocks);\n        this.#meta = meta;\n    }\n    /**\n     * User defined delegation metadata.\n     */\n    meta() {\n        return this.#meta;\n    }\n}\n//# sourceMappingURL=delegation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9kZWxlZ2F0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFxRDtBQUNiO0FBQ3hDO0FBQ0E7QUFDQSxjQUFjLG1DQUFtQztBQUNqRCxhQUFhO0FBQ2I7QUFDTyw4QkFBOEIsK0RBQVU7QUFDL0M7QUFDQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBO0FBQ0EsZUFBZSxtQ0FBbUM7QUFDbEQsZUFBZSx5Q0FBeUM7QUFDeEQsZUFBZSxxQkFBcUI7QUFDcEM7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvZGVsZWdhdGlvbi5qcz82NDQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlbGVnYXRpb24gfSBmcm9tICdAdWNhbnRvL2NvcmUvZGVsZWdhdGlvbic7XG5leHBvcnQgKiBmcm9tICdAdWNhbnRvL2NvcmUvZGVsZWdhdGlvbic7XG4vKiBjOCBpZ25vcmUgc3RhcnQgKi9cbi8qKlxuICogQHRlbXBsYXRlIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5DYXBhYmlsaXRpZXN9IENcbiAqIEBleHRlbmRzIHtEZWxlZ2F0aW9uPEM+fVxuICovXG5leHBvcnQgY2xhc3MgQWdlbnREZWxlZ2F0aW9uIGV4dGVuZHMgRGVsZWdhdGlvbiB7XG4gICAgLyogYzggaWdub3JlIHN0b3AgKi9cbiAgICAvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIGFueT59ICovXG4gICAgI21ldGE7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4vdHlwZXMuanMnKS5VQ0FOQmxvY2s8Qz59IHJvb3RcbiAgICAgKiBAcGFyYW0ge01hcDxzdHJpbmcsIGltcG9ydCgnLi90eXBlcy5qcycpLkJsb2NrPn0gW2Jsb2Nrc11cbiAgICAgKiBAcGFyYW0ge1JlY29yZDxzdHJpbmcsIGFueT59IFttZXRhXVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHJvb3QsIGJsb2NrcywgbWV0YSA9IHt9KSB7XG4gICAgICAgIHN1cGVyKHJvb3QsIGJsb2Nrcyk7XG4gICAgICAgIHRoaXMuI21ldGEgPSBtZXRhO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VyIGRlZmluZWQgZGVsZWdhdGlvbiBtZXRhZGF0YS5cbiAgICAgKi9cbiAgICBtZXRhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jbWV0YTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxlZ2F0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/delegation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/index.node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/index.node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Account: () => (/* reexport module object */ _account_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   Client: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_3__.Client),\n/* harmony export */   Result: () => (/* reexport module object */ _result_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   asAbilities: () => (/* reexport safe */ _ability_js__WEBPACK_IMPORTED_MODULE_6__.asAbilities),\n/* harmony export */   create: () => (/* binding */ create)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/access/agent */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/agent.js\");\n/* harmony import */ var _web3_storage_access_stores_store_conf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/access/stores/store-conf */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/stores/store-conf.js\");\n/* harmony import */ var _ucanto_principal_ed25519__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/principal/ed25519 */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/client.js\");\n/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./result.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/result.js\");\n/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./account.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/account.js\");\n/* harmony import */ var _ability_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ability.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/ability.js\");\n/**\n * @hidden\n * @module\n */\n\n\n\n\n\n\n\n/**\n * Create a new w3up client.\n *\n * If no backing store is passed one will be created that is appropriate for\n * the environment.\n *\n * If the backing store is empty, a new signing key will be generated and\n * persisted to the store. In the browser an unextractable RSA key will be\n * generated by default. In other environments an Ed25519 key is generated.\n *\n * If the backing store already has data stored, it will be loaded and used.\n *\n * @type {import('./types.js').ClientFactory}\n */\nasync function create(options = {}) {\n    const store = options.store ?? new _web3_storage_access_stores_store_conf__WEBPACK_IMPORTED_MODULE_1__.StoreConf({ profile: 'w3up-client' });\n    const raw = await store.load();\n    if (raw) {\n        const data = _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_0__.AgentData.fromExport(raw, { store });\n        if (options.principal && data.principal.did() !== options.principal.did()) {\n            throw new Error(`store cannot be used with ${options.principal.did()}, stored principal and passed principal must match`);\n        }\n        return new _client_js__WEBPACK_IMPORTED_MODULE_3__.Client(data, options);\n    }\n    const principal = options.principal ?? (await (0,_ucanto_principal_ed25519__WEBPACK_IMPORTED_MODULE_2__.generate)());\n    const data = await _web3_storage_access_agent__WEBPACK_IMPORTED_MODULE_0__.AgentData.create({ principal }, { store });\n    return new _client_js__WEBPACK_IMPORTED_MODULE_3__.Client(data, options);\n}\n\n//# sourceMappingURL=index.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9pbmRleC5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3VEO0FBQ1k7QUFDZDtBQUNoQjtBQUNDO0FBQ0U7QUFDWDtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDTyxrQ0FBa0M7QUFDekMsdUNBQXVDLDZFQUFTLEdBQUcsd0JBQXdCO0FBQzNFO0FBQ0E7QUFDQSxxQkFBcUIsaUVBQVMsbUJBQW1CLE9BQU87QUFDeEQ7QUFDQSx5REFBeUQsd0JBQXdCO0FBQ2pGO0FBQ0EsbUJBQW1CLDhDQUFNO0FBQ3pCO0FBQ0Esa0RBQWtELG1FQUFRO0FBQzFELHVCQUF1QixpRUFBUyxVQUFVLFdBQVcsSUFBSSxPQUFPO0FBQ2hFLGVBQWUsOENBQU07QUFDckI7QUFDa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1zdG9yYWdlL3czdXAtY2xpZW50L2Rpc3Qvc3JjL2luZGV4Lm5vZGUuanM/ZDkyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBoaWRkZW5cbiAqIEBtb2R1bGVcbiAqL1xuaW1wb3J0IHsgQWdlbnREYXRhIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9hY2Nlc3MvYWdlbnQnO1xuaW1wb3J0IHsgU3RvcmVDb25mIH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9hY2Nlc3Mvc3RvcmVzL3N0b3JlLWNvbmYnO1xuaW1wb3J0IHsgZ2VuZXJhdGUgfSBmcm9tICdAdWNhbnRvL3ByaW5jaXBhbC9lZDI1NTE5JztcbmltcG9ydCB7IENsaWVudCB9IGZyb20gJy4vY2xpZW50LmpzJztcbmV4cG9ydCAqIGFzIFJlc3VsdCBmcm9tICcuL3Jlc3VsdC5qcyc7XG5leHBvcnQgKiBhcyBBY2NvdW50IGZyb20gJy4vYWNjb3VudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2FiaWxpdHkuanMnO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgdzN1cCBjbGllbnQuXG4gKlxuICogSWYgbm8gYmFja2luZyBzdG9yZSBpcyBwYXNzZWQgb25lIHdpbGwgYmUgY3JlYXRlZCB0aGF0IGlzIGFwcHJvcHJpYXRlIGZvclxuICogdGhlIGVudmlyb25tZW50LlxuICpcbiAqIElmIHRoZSBiYWNraW5nIHN0b3JlIGlzIGVtcHR5LCBhIG5ldyBzaWduaW5nIGtleSB3aWxsIGJlIGdlbmVyYXRlZCBhbmRcbiAqIHBlcnNpc3RlZCB0byB0aGUgc3RvcmUuIEluIHRoZSBicm93c2VyIGFuIHVuZXh0cmFjdGFibGUgUlNBIGtleSB3aWxsIGJlXG4gKiBnZW5lcmF0ZWQgYnkgZGVmYXVsdC4gSW4gb3RoZXIgZW52aXJvbm1lbnRzIGFuIEVkMjU1MTkga2V5IGlzIGdlbmVyYXRlZC5cbiAqXG4gKiBJZiB0aGUgYmFja2luZyBzdG9yZSBhbHJlYWR5IGhhcyBkYXRhIHN0b3JlZCwgaXQgd2lsbCBiZSBsb2FkZWQgYW5kIHVzZWQuXG4gKlxuICogQHR5cGUge2ltcG9ydCgnLi90eXBlcy5qcycpLkNsaWVudEZhY3Rvcnl9XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGUob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3Qgc3RvcmUgPSBvcHRpb25zLnN0b3JlID8/IG5ldyBTdG9yZUNvbmYoeyBwcm9maWxlOiAndzN1cC1jbGllbnQnIH0pO1xuICAgIGNvbnN0IHJhdyA9IGF3YWl0IHN0b3JlLmxvYWQoKTtcbiAgICBpZiAocmF3KSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBBZ2VudERhdGEuZnJvbUV4cG9ydChyYXcsIHsgc3RvcmUgfSk7XG4gICAgICAgIGlmIChvcHRpb25zLnByaW5jaXBhbCAmJiBkYXRhLnByaW5jaXBhbC5kaWQoKSAhPT0gb3B0aW9ucy5wcmluY2lwYWwuZGlkKCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgc3RvcmUgY2Fubm90IGJlIHVzZWQgd2l0aCAke29wdGlvbnMucHJpbmNpcGFsLmRpZCgpfSwgc3RvcmVkIHByaW5jaXBhbCBhbmQgcGFzc2VkIHByaW5jaXBhbCBtdXN0IG1hdGNoYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnQoZGF0YSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGNvbnN0IHByaW5jaXBhbCA9IG9wdGlvbnMucHJpbmNpcGFsID8/IChhd2FpdCBnZW5lcmF0ZSgpKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgQWdlbnREYXRhLmNyZWF0ZSh7IHByaW5jaXBhbCB9LCB7IHN0b3JlIH0pO1xuICAgIHJldHVybiBuZXcgQ2xpZW50KGRhdGEsIG9wdGlvbnMpO1xufVxuZXhwb3J0IHsgQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/index.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/result.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/result.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Failure: () => (/* reexport safe */ _ucanto_core_result__WEBPACK_IMPORTED_MODULE_0__.Failure),\n/* harmony export */   error: () => (/* reexport safe */ _ucanto_core_result__WEBPACK_IMPORTED_MODULE_0__.error),\n/* harmony export */   fail: () => (/* reexport safe */ _ucanto_core_result__WEBPACK_IMPORTED_MODULE_0__.fail),\n/* harmony export */   ok: () => (/* reexport safe */ _ucanto_core_result__WEBPACK_IMPORTED_MODULE_0__.ok),\n/* harmony export */   panic: () => (/* reexport safe */ _ucanto_core_result__WEBPACK_IMPORTED_MODULE_0__.panic),\n/* harmony export */   \"try\": () => (/* binding */ unwrap),\n/* harmony export */   unwrap: () => (/* binding */ unwrap)\n/* harmony export */ });\n/* harmony import */ var _ucanto_core_result__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/core/result */ \"(ssr)/./node_modules/@ucanto/core/src/result.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n\n\n/**\n * Returns contained `ok` if result is and throws `error` if result is not ok.\n *\n * @template T\n * @param {API.Result<T, {}>} result\n * @returns {T}\n */\nconst unwrap = ({ ok, error }) => {\n    if (error) {\n        throw error;\n    }\n    else {\n        return /** @type {T} */ (ok);\n    }\n};\n/**\n * Also expose as `Result.try` which is arguably more clear.\n */\n\n//# sourceMappingURL=result.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9yZXN1bHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQ0s7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQixHQUFHO0FBQzlCLGFBQWE7QUFDYjtBQUNPLGtCQUFrQixXQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLEdBQUc7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvcmVzdWx0LmpzPzVhM2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnQHVjYW50by9jb3JlL3Jlc3VsdCc7XG5pbXBvcnQgKiBhcyBBUEkgZnJvbSAnQHVjYW50by9pbnRlcmZhY2UnO1xuLyoqXG4gKiBSZXR1cm5zIGNvbnRhaW5lZCBgb2tgIGlmIHJlc3VsdCBpcyBhbmQgdGhyb3dzIGBlcnJvcmAgaWYgcmVzdWx0IGlzIG5vdCBvay5cbiAqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtBUEkuUmVzdWx0PFQsIHt9Pn0gcmVzdWx0XG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGNvbnN0IHVud3JhcCA9ICh7IG9rLCBlcnJvciB9KSA9PiB7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIC8qKiBAdHlwZSB7VH0gKi8gKG9rKTtcbiAgICB9XG59O1xuLyoqXG4gKiBBbHNvIGV4cG9zZSBhcyBgUmVzdWx0LnRyeWAgd2hpY2ggaXMgYXJndWFibHkgbW9yZSBjbGVhci5cbiAqL1xuZXhwb3J0IHsgdW53cmFwIGFzIHRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzdWx0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/result.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/service.js":
/*!********************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/service.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accessServiceConnection: () => (/* binding */ accessServiceConnection),\n/* harmony export */   accessServicePrincipal: () => (/* binding */ accessServicePrincipal),\n/* harmony export */   accessServiceURL: () => (/* binding */ accessServiceURL),\n/* harmony export */   filecoinServiceConnection: () => (/* binding */ filecoinServiceConnection),\n/* harmony export */   filecoinServicePrincipal: () => (/* binding */ filecoinServicePrincipal),\n/* harmony export */   filecoinServiceURL: () => (/* binding */ filecoinServiceURL),\n/* harmony export */   receiptsEndpoint: () => (/* reexport safe */ _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_3__.receiptsEndpoint),\n/* harmony export */   serviceConf: () => (/* binding */ serviceConf),\n/* harmony export */   uploadServiceConnection: () => (/* binding */ uploadServiceConnection),\n/* harmony export */   uploadServicePrincipal: () => (/* binding */ uploadServicePrincipal),\n/* harmony export */   uploadServiceURL: () => (/* binding */ uploadServiceURL)\n/* harmony export */ });\n/* harmony import */ var _ucanto_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/client */ \"(ssr)/./node_modules/@ucanto/client/src/lib.js\");\n/* harmony import */ var _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/transport */ \"(ssr)/./node_modules/@ucanto/transport/src/lib.js\");\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3-storage/upload-client */ \"(ssr)/./node_modules/@web3-storage/upload-client/dist/src/index.js\");\n\n\n\n\nconst accessServiceURL = new URL('https://up.web3.storage');\nconst accessServicePrincipal = _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_2__.parse('did:web:web3.storage');\nconst accessServiceConnection = _ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect({\n    id: accessServicePrincipal,\n    codec: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.CAR.outbound,\n    channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.HTTP.open({\n        url: accessServiceURL,\n        method: 'POST',\n    }),\n});\nconst uploadServiceURL = new URL('https://up.web3.storage');\nconst uploadServicePrincipal = _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_2__.parse('did:web:web3.storage');\nconst uploadServiceConnection = _ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect({\n    id: uploadServicePrincipal,\n    codec: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.CAR.outbound,\n    channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.HTTP.open({\n        url: uploadServiceURL,\n        method: 'POST',\n    }),\n});\nconst filecoinServiceURL = new URL('https://up.web3.storage');\nconst filecoinServicePrincipal = _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_2__.parse('did:web:web3.storage');\nconst filecoinServiceConnection = _ucanto_client__WEBPACK_IMPORTED_MODULE_0__.connect({\n    id: filecoinServicePrincipal,\n    codec: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.CAR.outbound,\n    channel: _ucanto_transport__WEBPACK_IMPORTED_MODULE_1__.HTTP.open({\n        url: filecoinServiceURL,\n        method: 'POST',\n    }),\n});\n/** @type {import('./types.js').ServiceConf} */\nconst serviceConf = {\n    access: accessServiceConnection,\n    upload: uploadServiceConnection,\n    filecoin: filecoinServiceConnection,\n};\n\n//# sourceMappingURL=service.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9zZXJ2aWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QztBQUNLO0FBQ0o7QUFDcUI7QUFDeEQ7QUFDQSwrQkFBK0IscURBQVM7QUFDeEMsZ0NBQWdDLG1EQUFjO0FBQ3JEO0FBQ0EsV0FBVywyREFBWTtBQUN2QixhQUFhLHdEQUFTO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNNO0FBQ0EsK0JBQStCLHFEQUFTO0FBQ3hDLGdDQUFnQyxtREFBYztBQUNyRDtBQUNBLFdBQVcsMkRBQVk7QUFDdkIsYUFBYSx3REFBUztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDTTtBQUNBLGlDQUFpQyxxREFBUztBQUMxQyxrQ0FBa0MsbURBQWM7QUFDdkQ7QUFDQSxXQUFXLDJEQUFZO0FBQ3ZCLGFBQWEsd0RBQVM7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0QsV0FBVyxrQ0FBa0M7QUFDdEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUM0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvc2VydmljZS5qcz8wOWRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNsaWVudCBmcm9tICdAdWNhbnRvL2NsaWVudCc7XG5pbXBvcnQgeyBDQVIsIEhUVFAgfSBmcm9tICdAdWNhbnRvL3RyYW5zcG9ydCc7XG5pbXBvcnQgKiBhcyBESUQgZnJvbSAnQGlwbGQvZGFnLXVjYW4vZGlkJztcbmltcG9ydCB7IHJlY2VpcHRzRW5kcG9pbnQgfSBmcm9tICdAd2ViMy1zdG9yYWdlL3VwbG9hZC1jbGllbnQnO1xuZXhwb3J0IGNvbnN0IGFjY2Vzc1NlcnZpY2VVUkwgPSBuZXcgVVJMKCdodHRwczovL3VwLndlYjMuc3RvcmFnZScpO1xuZXhwb3J0IGNvbnN0IGFjY2Vzc1NlcnZpY2VQcmluY2lwYWwgPSBESUQucGFyc2UoJ2RpZDp3ZWI6d2ViMy5zdG9yYWdlJyk7XG5leHBvcnQgY29uc3QgYWNjZXNzU2VydmljZUNvbm5lY3Rpb24gPSBjbGllbnQuY29ubmVjdCh7XG4gICAgaWQ6IGFjY2Vzc1NlcnZpY2VQcmluY2lwYWwsXG4gICAgY29kZWM6IENBUi5vdXRib3VuZCxcbiAgICBjaGFubmVsOiBIVFRQLm9wZW4oe1xuICAgICAgICB1cmw6IGFjY2Vzc1NlcnZpY2VVUkwsXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIH0pLFxufSk7XG5leHBvcnQgY29uc3QgdXBsb2FkU2VydmljZVVSTCA9IG5ldyBVUkwoJ2h0dHBzOi8vdXAud2ViMy5zdG9yYWdlJyk7XG5leHBvcnQgY29uc3QgdXBsb2FkU2VydmljZVByaW5jaXBhbCA9IERJRC5wYXJzZSgnZGlkOndlYjp3ZWIzLnN0b3JhZ2UnKTtcbmV4cG9ydCBjb25zdCB1cGxvYWRTZXJ2aWNlQ29ubmVjdGlvbiA9IGNsaWVudC5jb25uZWN0KHtcbiAgICBpZDogdXBsb2FkU2VydmljZVByaW5jaXBhbCxcbiAgICBjb2RlYzogQ0FSLm91dGJvdW5kLFxuICAgIGNoYW5uZWw6IEhUVFAub3Blbih7XG4gICAgICAgIHVybDogdXBsb2FkU2VydmljZVVSTCxcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgfSksXG59KTtcbmV4cG9ydCBjb25zdCBmaWxlY29pblNlcnZpY2VVUkwgPSBuZXcgVVJMKCdodHRwczovL3VwLndlYjMuc3RvcmFnZScpO1xuZXhwb3J0IGNvbnN0IGZpbGVjb2luU2VydmljZVByaW5jaXBhbCA9IERJRC5wYXJzZSgnZGlkOndlYjp3ZWIzLnN0b3JhZ2UnKTtcbmV4cG9ydCBjb25zdCBmaWxlY29pblNlcnZpY2VDb25uZWN0aW9uID0gY2xpZW50LmNvbm5lY3Qoe1xuICAgIGlkOiBmaWxlY29pblNlcnZpY2VQcmluY2lwYWwsXG4gICAgY29kZWM6IENBUi5vdXRib3VuZCxcbiAgICBjaGFubmVsOiBIVFRQLm9wZW4oe1xuICAgICAgICB1cmw6IGZpbGVjb2luU2VydmljZVVSTCxcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgfSksXG59KTtcbi8qKiBAdHlwZSB7aW1wb3J0KCcuL3R5cGVzLmpzJykuU2VydmljZUNvbmZ9ICovXG5leHBvcnQgY29uc3Qgc2VydmljZUNvbmYgPSB7XG4gICAgYWNjZXNzOiBhY2Nlc3NTZXJ2aWNlQ29ubmVjdGlvbixcbiAgICB1cGxvYWQ6IHVwbG9hZFNlcnZpY2VDb25uZWN0aW9uLFxuICAgIGZpbGVjb2luOiBmaWxlY29pblNlcnZpY2VDb25uZWN0aW9uLFxufTtcbmV4cG9ydCB7IHJlY2VpcHRzRW5kcG9pbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZpY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/service.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/space.js":
/*!******************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/space.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OwnedSpace: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.OwnedSpace),\n/* harmony export */   SESSION_LIFETIME: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.SESSION_LIFETIME),\n/* harmony export */   SharedSpace: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.SharedSpace),\n/* harmony export */   Space: () => (/* binding */ Space),\n/* harmony export */   StorageUsage: () => (/* binding */ StorageUsage),\n/* harmony export */   createAuthorization: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.createAuthorization),\n/* harmony export */   createRecovery: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.createRecovery),\n/* harmony export */   fromDelegation: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.fromDelegation),\n/* harmony export */   fromMnemonic: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.fromMnemonic),\n/* harmony export */   generate: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.generate),\n/* harmony export */   provision: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.provision),\n/* harmony export */   toMnemonic: () => (/* reexport safe */ _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__.toMnemonic)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_access_space__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/access/space */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/space.js\");\n/* harmony import */ var _capability_usage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./capability/usage.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/capability/usage.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js\");\n\n\n\n/**\n * @typedef {object} Model\n * @property {API.SpaceDID} id\n * @property {{name?:string}} [meta]\n * @property {API.Agent} agent\n */\nclass Space {\n    #model;\n    /**\n     * @param {Model} model\n     */\n    constructor(model) {\n        this.#model = model;\n        this.usage = new StorageUsage(model);\n    }\n    /**\n     * The given space name.\n     */\n    get name() {\n        /* c8 ignore next */\n        return String(this.#model.meta?.name ?? '');\n    }\n    /**\n     * The DID of the space.\n     */\n    did() {\n        return this.#model.id;\n    }\n    /**\n     * User defined space metadata.\n     */\n    meta() {\n        return this.#model.meta;\n    }\n}\nclass StorageUsage {\n    #model;\n    /**\n     * @param {Model} model\n     */\n    constructor(model) {\n        this.#model = model;\n    }\n    /**\n     * Get the current usage in bytes.\n     */\n    async get() {\n        const { agent } = this.#model;\n        const space = this.#model.id;\n        const now = new Date();\n        const period = {\n            // we may not have done a snapshot for this month _yet_, so get report\n            // from last month -> now\n            from: startOfLastMonth(now),\n            to: now,\n        };\n        const result = await _capability_usage_js__WEBPACK_IMPORTED_MODULE_1__.report({ agent }, { space, period });\n        /* c8 ignore next */\n        if (result.error)\n            return result;\n        const provider = /** @type {API.ProviderDID} */ (agent.connection.id.did());\n        const report = result.ok[provider];\n        return {\n            /* c8 ignore next */\n            ok: report?.size.final == null ? undefined : BigInt(report.size.final),\n        };\n    }\n}\n/** @param {string|number|Date} now */\nconst startOfMonth = (now) => {\n    const d = new Date(now);\n    d.setUTCDate(1);\n    d.setUTCHours(0);\n    d.setUTCMinutes(0);\n    d.setUTCSeconds(0);\n    d.setUTCMilliseconds(0);\n    return d;\n};\n/** @param {string|number|Date} now */\nconst startOfLastMonth = (now) => {\n    const d = startOfMonth(now);\n    d.setUTCMonth(d.getUTCMonth() - 1);\n    return d;\n};\n//# sourceMappingURL=space.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy9zcGFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDSTtBQUNiO0FBQ2xDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsY0FBYztBQUM1QixlQUFlLGVBQWU7QUFDOUIsY0FBYyxXQUFXO0FBQ3pCO0FBQ087QUFDUDtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHdEQUFZLEdBQUcsT0FBTyxJQUFJLGVBQWU7QUFDdEU7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGlCQUFpQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvc3BhY2UuanM/MTU5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICdAd2ViMy1zdG9yYWdlL2FjY2Vzcy9zcGFjZSc7XG5pbXBvcnQgKiBhcyBVc2FnZSBmcm9tICcuL2NhcGFiaWxpdHkvdXNhZ2UuanMnO1xuaW1wb3J0ICogYXMgQVBJIGZyb20gJy4vdHlwZXMuanMnO1xuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBNb2RlbFxuICogQHByb3BlcnR5IHtBUEkuU3BhY2VESUR9IGlkXG4gKiBAcHJvcGVydHkge3tuYW1lPzpzdHJpbmd9fSBbbWV0YV1cbiAqIEBwcm9wZXJ0eSB7QVBJLkFnZW50fSBhZ2VudFxuICovXG5leHBvcnQgY2xhc3MgU3BhY2Uge1xuICAgICNtb2RlbDtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge01vZGVsfSBtb2RlbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG1vZGVsKSB7XG4gICAgICAgIHRoaXMuI21vZGVsID0gbW9kZWw7XG4gICAgICAgIHRoaXMudXNhZ2UgPSBuZXcgU3RvcmFnZVVzYWdlKG1vZGVsKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIGdpdmVuIHNwYWNlIG5hbWUuXG4gICAgICovXG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIHJldHVybiBTdHJpbmcodGhpcy4jbW9kZWwubWV0YT8ubmFtZSA/PyAnJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBESUQgb2YgdGhlIHNwYWNlLlxuICAgICAqL1xuICAgIGRpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI21vZGVsLmlkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VyIGRlZmluZWQgc3BhY2UgbWV0YWRhdGEuXG4gICAgICovXG4gICAgbWV0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI21vZGVsLm1ldGE7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VVc2FnZSB7XG4gICAgI21vZGVsO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7TW9kZWx9IG1vZGVsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobW9kZWwpIHtcbiAgICAgICAgdGhpcy4jbW9kZWwgPSBtb2RlbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBjdXJyZW50IHVzYWdlIGluIGJ5dGVzLlxuICAgICAqL1xuICAgIGFzeW5jIGdldCgpIHtcbiAgICAgICAgY29uc3QgeyBhZ2VudCB9ID0gdGhpcy4jbW9kZWw7XG4gICAgICAgIGNvbnN0IHNwYWNlID0gdGhpcy4jbW9kZWwuaWQ7XG4gICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGNvbnN0IHBlcmlvZCA9IHtcbiAgICAgICAgICAgIC8vIHdlIG1heSBub3QgaGF2ZSBkb25lIGEgc25hcHNob3QgZm9yIHRoaXMgbW9udGggX3lldF8sIHNvIGdldCByZXBvcnRcbiAgICAgICAgICAgIC8vIGZyb20gbGFzdCBtb250aCAtPiBub3dcbiAgICAgICAgICAgIGZyb206IHN0YXJ0T2ZMYXN0TW9udGgobm93KSxcbiAgICAgICAgICAgIHRvOiBub3csXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFVzYWdlLnJlcG9ydCh7IGFnZW50IH0sIHsgc3BhY2UsIHBlcmlvZCB9KTtcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICAgICAgaWYgKHJlc3VsdC5lcnJvcilcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gLyoqIEB0eXBlIHtBUEkuUHJvdmlkZXJESUR9ICovIChhZ2VudC5jb25uZWN0aW9uLmlkLmRpZCgpKTtcbiAgICAgICAgY29uc3QgcmVwb3J0ID0gcmVzdWx0Lm9rW3Byb3ZpZGVyXTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICBvazogcmVwb3J0Py5zaXplLmZpbmFsID09IG51bGwgPyB1bmRlZmluZWQgOiBCaWdJbnQocmVwb3J0LnNpemUuZmluYWwpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbi8qKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ8RGF0ZX0gbm93ICovXG5jb25zdCBzdGFydE9mTW9udGggPSAobm93KSA9PiB7XG4gICAgY29uc3QgZCA9IG5ldyBEYXRlKG5vdyk7XG4gICAgZC5zZXRVVENEYXRlKDEpO1xuICAgIGQuc2V0VVRDSG91cnMoMCk7XG4gICAgZC5zZXRVVENNaW51dGVzKDApO1xuICAgIGQuc2V0VVRDU2Vjb25kcygwKTtcbiAgICBkLnNldFVUQ01pbGxpc2Vjb25kcygwKTtcbiAgICByZXR1cm4gZDtcbn07XG4vKiogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfERhdGV9IG5vdyAqL1xuY29uc3Qgc3RhcnRPZkxhc3RNb250aCA9IChub3cpID0+IHtcbiAgICBjb25zdCBkID0gc3RhcnRPZk1vbnRoKG5vdyk7XG4gICAgZC5zZXRVVENNb250aChkLmdldFVUQ01vbnRoKCkgLSAxKTtcbiAgICByZXR1cm4gZDtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/space.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@web3-storage/w3up-client/dist/src/types.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppName: () => (/* reexport safe */ _web3_storage_access_types__WEBPACK_IMPORTED_MODULE_2__.AppName),\n/* harmony export */   Client: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_3__.Client),\n/* harmony export */   email: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_1__.email),\n/* harmony export */   fromEmail: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_1__.fromEmail),\n/* harmony export */   fromString: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_1__.fromString),\n/* harmony export */   toEmail: () => (/* reexport safe */ _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_1__.toEmail)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _web3_storage_did_mailto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/did-mailto */ \"(ssr)/./node_modules/@web3-storage/did-mailto/dist/src/index.js\");\n/* harmony import */ var _web3_storage_access_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/access/types */ \"(ssr)/./node_modules/@web3-storage/access/dist/src/types.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/client.js\");\n\n\n\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtc3RvcmFnZS93M3VwLWNsaWVudC9kaXN0L3NyYy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ087QUFDWTtBQUNoQjtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXN0b3JhZ2UvdzN1cC1jbGllbnQvZGlzdC9zcmMvdHlwZXMuanM/ZDhkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSc7XG5leHBvcnQgKiBmcm9tICdAd2ViMy1zdG9yYWdlL2RpZC1tYWlsdG8nO1xuZXhwb3J0IHsgQXBwTmFtZSB9IGZyb20gJ0B3ZWIzLXN0b3JhZ2UvYWNjZXNzL3R5cGVzJztcbmV4cG9ydCB7IENsaWVudCB9IGZyb20gJy4vY2xpZW50LmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-storage/w3up-client/dist/src/types.js\n");

/***/ })

};
;