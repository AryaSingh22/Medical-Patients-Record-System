"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/dot-prop";
exports.ids = ["vendor-chunks/dot-prop"];
exports.modules = {

/***/ "(ssr)/./node_modules/dot-prop/index.js":
/*!****************************************!*\
  !*** ./node_modules/dot-prop/index.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepKeys: () => (/* binding */ deepKeys),\n/* harmony export */   deleteProperty: () => (/* binding */ deleteProperty),\n/* harmony export */   escapePath: () => (/* binding */ escapePath),\n/* harmony export */   getProperty: () => (/* binding */ getProperty),\n/* harmony export */   hasProperty: () => (/* binding */ hasProperty),\n/* harmony export */   setProperty: () => (/* binding */ setProperty)\n/* harmony export */ });\nconst isObject = value => {\n\tconst type = typeof value;\n\treturn value !== null && (type === 'object' || type === 'function');\n};\n\nconst disallowedKeys = new Set([\n\t'__proto__',\n\t'prototype',\n\t'constructor',\n]);\n\nconst digits = new Set('0123456789');\n\nfunction getPathSegments(path) {\n\tconst parts = [];\n\tlet currentSegment = '';\n\tlet currentPart = 'start';\n\tlet isIgnoring = false;\n\n\tfor (const character of path) {\n\t\tswitch (character) {\n\t\t\tcase '\\\\':\n\t\t\t\tif (currentPart === 'index') {\n\t\t\t\t\tthrow new Error('Invalid character in an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tthrow new Error('Invalid character after an index');\n\t\t\t\t}\n\n\t\t\t\tif (isIgnoring) {\n\t\t\t\t\tcurrentSegment += character;\n\t\t\t\t}\n\n\t\t\t\tcurrentPart = 'property';\n\t\t\t\tisIgnoring = !isIgnoring;\n\t\t\t\tbreak;\n\n\t\t\tcase '.':\n\t\t\t\tif (currentPart === 'index') {\n\t\t\t\t\tthrow new Error('Invalid character in an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tcurrentPart = 'property';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isIgnoring) {\n\t\t\t\t\tisIgnoring = false;\n\t\t\t\t\tcurrentSegment += character;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (disallowedKeys.has(currentSegment)) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tparts.push(currentSegment);\n\t\t\t\tcurrentSegment = '';\n\t\t\t\tcurrentPart = 'property';\n\t\t\t\tbreak;\n\n\t\t\tcase '[':\n\t\t\t\tif (currentPart === 'index') {\n\t\t\t\t\tthrow new Error('Invalid character in an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tcurrentPart = 'index';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isIgnoring) {\n\t\t\t\t\tisIgnoring = false;\n\t\t\t\t\tcurrentSegment += character;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'property') {\n\t\t\t\t\tif (disallowedKeys.has(currentSegment)) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\tparts.push(currentSegment);\n\t\t\t\t\tcurrentSegment = '';\n\t\t\t\t}\n\n\t\t\t\tcurrentPart = 'index';\n\t\t\t\tbreak;\n\n\t\t\tcase ']':\n\t\t\t\tif (currentPart === 'index') {\n\t\t\t\t\tparts.push(Number.parseInt(currentSegment, 10));\n\t\t\t\t\tcurrentSegment = '';\n\t\t\t\t\tcurrentPart = 'indexEnd';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tthrow new Error('Invalid character after an index');\n\t\t\t\t}\n\n\t\t\t\t// Falls through\n\n\t\t\tdefault:\n\t\t\t\tif (currentPart === 'index' && !digits.has(character)) {\n\t\t\t\t\tthrow new Error('Invalid character in an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tthrow new Error('Invalid character after an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'start') {\n\t\t\t\t\tcurrentPart = 'property';\n\t\t\t\t}\n\n\t\t\t\tif (isIgnoring) {\n\t\t\t\t\tisIgnoring = false;\n\t\t\t\t\tcurrentSegment += '\\\\';\n\t\t\t\t}\n\n\t\t\t\tcurrentSegment += character;\n\t\t}\n\t}\n\n\tif (isIgnoring) {\n\t\tcurrentSegment += '\\\\';\n\t}\n\n\tswitch (currentPart) {\n\t\tcase 'property': {\n\t\t\tif (disallowedKeys.has(currentSegment)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tparts.push(currentSegment);\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'index': {\n\t\t\tthrow new Error('Index was not closed');\n\t\t}\n\n\t\tcase 'start': {\n\t\t\tparts.push('');\n\n\t\t\tbreak;\n\t\t}\n\t// No default\n\t}\n\n\treturn parts;\n}\n\nfunction isStringIndex(object, key) {\n\tif (typeof key !== 'number' && Array.isArray(object)) {\n\t\tconst index = Number.parseInt(key, 10);\n\t\treturn Number.isInteger(index) && object[index] === object[key];\n\t}\n\n\treturn false;\n}\n\nfunction assertNotStringIndex(object, key) {\n\tif (isStringIndex(object, key)) {\n\t\tthrow new Error('Cannot use string index');\n\t}\n}\n\nfunction getProperty(object, path, value) {\n\tif (!isObject(object) || typeof path !== 'string') {\n\t\treturn value === undefined ? object : value;\n\t}\n\n\tconst pathArray = getPathSegments(path);\n\tif (pathArray.length === 0) {\n\t\treturn value;\n\t}\n\n\tfor (let index = 0; index < pathArray.length; index++) {\n\t\tconst key = pathArray[index];\n\n\t\tif (isStringIndex(object, key)) {\n\t\t\tobject = index === pathArray.length - 1 ? undefined : null;\n\t\t} else {\n\t\t\tobject = object[key];\n\t\t}\n\n\t\tif (object === undefined || object === null) {\n\t\t\t// `object` is either `undefined` or `null` so we want to stop the loop, and\n\t\t\t// if this is not the last bit of the path, and\n\t\t\t// if it didn't return `undefined`\n\t\t\t// it would return `null` if `object` is `null`\n\t\t\t// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n\t\t\tif (index !== pathArray.length - 1) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn object === undefined ? value : object;\n}\n\nfunction setProperty(object, path, value) {\n\tif (!isObject(object) || typeof path !== 'string') {\n\t\treturn object;\n\t}\n\n\tconst root = object;\n\tconst pathArray = getPathSegments(path);\n\n\tfor (let index = 0; index < pathArray.length; index++) {\n\t\tconst key = pathArray[index];\n\n\t\tassertNotStringIndex(object, key);\n\n\t\tif (index === pathArray.length - 1) {\n\t\t\tobject[key] = value;\n\t\t} else if (!isObject(object[key])) {\n\t\t\tobject[key] = typeof pathArray[index + 1] === 'number' ? [] : {};\n\t\t}\n\n\t\tobject = object[key];\n\t}\n\n\treturn root;\n}\n\nfunction deleteProperty(object, path) {\n\tif (!isObject(object) || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\tconst pathArray = getPathSegments(path);\n\n\tfor (let index = 0; index < pathArray.length; index++) {\n\t\tconst key = pathArray[index];\n\n\t\tassertNotStringIndex(object, key);\n\n\t\tif (index === pathArray.length - 1) {\n\t\t\tdelete object[key];\n\t\t\treturn true;\n\t\t}\n\n\t\tobject = object[key];\n\n\t\tif (!isObject(object)) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nfunction hasProperty(object, path) {\n\tif (!isObject(object) || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\tconst pathArray = getPathSegments(path);\n\tif (pathArray.length === 0) {\n\t\treturn false;\n\t}\n\n\tfor (const key of pathArray) {\n\t\tif (!isObject(object) || !(key in object) || isStringIndex(object, key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tobject = object[key];\n\t}\n\n\treturn true;\n}\n\nfunction escapePath(path) {\n\tif (typeof path !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn path.replace(/[\\\\.[]/g, '\\\\$&');\n}\n\n// The keys returned by Object.entries() for arrays are strings\nfunction entries(value) {\n\tif (Array.isArray(value)) {\n\t\treturn value.map((value, index) => [index, value]);\n\t}\n\n\treturn Object.entries(value);\n}\n\nfunction stringifyPath(pathSegments) {\n\tlet result = '';\n\n\tfor (let [index, segment] of entries(pathSegments)) {\n\t\tif (typeof segment === 'number') {\n\t\t\tresult += `[${segment}]`;\n\t\t} else {\n\t\t\tsegment = escapePath(segment);\n\t\t\tresult += index === 0 ? segment : `.${segment}`;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction * deepKeysIterator(object, currentPath = []) {\n\tif (!isObject(object)) {\n\t\tif (currentPath.length > 0) {\n\t\t\tyield stringifyPath(currentPath);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tfor (const [key, value] of entries(object)) {\n\t\tyield * deepKeysIterator(value, [...currentPath, key]);\n\t}\n}\n\nfunction deepKeys(object) {\n\treturn [...deepKeysIterator(object)];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZG90LXByb3AvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLDBCQUEwQjtBQUMvQzs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixVQUFVO0FBQ2xDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHFCQUFxQiwwQkFBMEI7QUFDL0M7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxxQkFBcUIsMEJBQTBCO0FBQy9DOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLElBQUk7QUFDSjtBQUNBLHlDQUF5QyxRQUFRO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvZG90LXByb3AvaW5kZXguanM/NGMzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpc09iamVjdCA9IHZhbHVlID0+IHtcblx0Y29uc3QgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcblx0cmV0dXJuIHZhbHVlICE9PSBudWxsICYmICh0eXBlID09PSAnb2JqZWN0JyB8fCB0eXBlID09PSAnZnVuY3Rpb24nKTtcbn07XG5cbmNvbnN0IGRpc2FsbG93ZWRLZXlzID0gbmV3IFNldChbXG5cdCdfX3Byb3RvX18nLFxuXHQncHJvdG90eXBlJyxcblx0J2NvbnN0cnVjdG9yJyxcbl0pO1xuXG5jb25zdCBkaWdpdHMgPSBuZXcgU2V0KCcwMTIzNDU2Nzg5Jyk7XG5cbmZ1bmN0aW9uIGdldFBhdGhTZWdtZW50cyhwYXRoKSB7XG5cdGNvbnN0IHBhcnRzID0gW107XG5cdGxldCBjdXJyZW50U2VnbWVudCA9ICcnO1xuXHRsZXQgY3VycmVudFBhcnQgPSAnc3RhcnQnO1xuXHRsZXQgaXNJZ25vcmluZyA9IGZhbHNlO1xuXG5cdGZvciAoY29uc3QgY2hhcmFjdGVyIG9mIHBhdGgpIHtcblx0XHRzd2l0Y2ggKGNoYXJhY3Rlcikge1xuXHRcdFx0Y2FzZSAnXFxcXCc6XG5cdFx0XHRcdGlmIChjdXJyZW50UGFydCA9PT0gJ2luZGV4Jykge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjaGFyYWN0ZXIgaW4gYW4gaW5kZXgnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChjdXJyZW50UGFydCA9PT0gJ2luZGV4RW5kJykge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjaGFyYWN0ZXIgYWZ0ZXIgYW4gaW5kZXgnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChpc0lnbm9yaW5nKSB7XG5cdFx0XHRcdFx0Y3VycmVudFNlZ21lbnQgKz0gY2hhcmFjdGVyO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y3VycmVudFBhcnQgPSAncHJvcGVydHknO1xuXHRcdFx0XHRpc0lnbm9yaW5nID0gIWlzSWdub3Jpbmc7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICcuJzpcblx0XHRcdFx0aWYgKGN1cnJlbnRQYXJ0ID09PSAnaW5kZXgnKSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNoYXJhY3RlciBpbiBhbiBpbmRleCcpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGN1cnJlbnRQYXJ0ID09PSAnaW5kZXhFbmQnKSB7XG5cdFx0XHRcdFx0Y3VycmVudFBhcnQgPSAncHJvcGVydHknO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGlzSWdub3JpbmcpIHtcblx0XHRcdFx0XHRpc0lnbm9yaW5nID0gZmFsc2U7XG5cdFx0XHRcdFx0Y3VycmVudFNlZ21lbnQgKz0gY2hhcmFjdGVyO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGRpc2FsbG93ZWRLZXlzLmhhcyhjdXJyZW50U2VnbWVudCkpIHtcblx0XHRcdFx0XHRyZXR1cm4gW107XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRwYXJ0cy5wdXNoKGN1cnJlbnRTZWdtZW50KTtcblx0XHRcdFx0Y3VycmVudFNlZ21lbnQgPSAnJztcblx0XHRcdFx0Y3VycmVudFBhcnQgPSAncHJvcGVydHknO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnWyc6XG5cdFx0XHRcdGlmIChjdXJyZW50UGFydCA9PT0gJ2luZGV4Jykge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjaGFyYWN0ZXIgaW4gYW4gaW5kZXgnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChjdXJyZW50UGFydCA9PT0gJ2luZGV4RW5kJykge1xuXHRcdFx0XHRcdGN1cnJlbnRQYXJ0ID0gJ2luZGV4Jztcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChpc0lnbm9yaW5nKSB7XG5cdFx0XHRcdFx0aXNJZ25vcmluZyA9IGZhbHNlO1xuXHRcdFx0XHRcdGN1cnJlbnRTZWdtZW50ICs9IGNoYXJhY3Rlcjtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChjdXJyZW50UGFydCA9PT0gJ3Byb3BlcnR5Jykge1xuXHRcdFx0XHRcdGlmIChkaXNhbGxvd2VkS2V5cy5oYXMoY3VycmVudFNlZ21lbnQpKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gW107XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cGFydHMucHVzaChjdXJyZW50U2VnbWVudCk7XG5cdFx0XHRcdFx0Y3VycmVudFNlZ21lbnQgPSAnJztcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGN1cnJlbnRQYXJ0ID0gJ2luZGV4Jztcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ10nOlxuXHRcdFx0XHRpZiAoY3VycmVudFBhcnQgPT09ICdpbmRleCcpIHtcblx0XHRcdFx0XHRwYXJ0cy5wdXNoKE51bWJlci5wYXJzZUludChjdXJyZW50U2VnbWVudCwgMTApKTtcblx0XHRcdFx0XHRjdXJyZW50U2VnbWVudCA9ICcnO1xuXHRcdFx0XHRcdGN1cnJlbnRQYXJ0ID0gJ2luZGV4RW5kJztcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChjdXJyZW50UGFydCA9PT0gJ2luZGV4RW5kJykge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjaGFyYWN0ZXIgYWZ0ZXIgYW4gaW5kZXgnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEZhbGxzIHRocm91Z2hcblxuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0aWYgKGN1cnJlbnRQYXJ0ID09PSAnaW5kZXgnICYmICFkaWdpdHMuaGFzKGNoYXJhY3RlcikpIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY2hhcmFjdGVyIGluIGFuIGluZGV4Jyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoY3VycmVudFBhcnQgPT09ICdpbmRleEVuZCcpIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY2hhcmFjdGVyIGFmdGVyIGFuIGluZGV4Jyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoY3VycmVudFBhcnQgPT09ICdzdGFydCcpIHtcblx0XHRcdFx0XHRjdXJyZW50UGFydCA9ICdwcm9wZXJ0eSc7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoaXNJZ25vcmluZykge1xuXHRcdFx0XHRcdGlzSWdub3JpbmcgPSBmYWxzZTtcblx0XHRcdFx0XHRjdXJyZW50U2VnbWVudCArPSAnXFxcXCc7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjdXJyZW50U2VnbWVudCArPSBjaGFyYWN0ZXI7XG5cdFx0fVxuXHR9XG5cblx0aWYgKGlzSWdub3JpbmcpIHtcblx0XHRjdXJyZW50U2VnbWVudCArPSAnXFxcXCc7XG5cdH1cblxuXHRzd2l0Y2ggKGN1cnJlbnRQYXJ0KSB7XG5cdFx0Y2FzZSAncHJvcGVydHknOiB7XG5cdFx0XHRpZiAoZGlzYWxsb3dlZEtleXMuaGFzKGN1cnJlbnRTZWdtZW50KSkge1xuXHRcdFx0XHRyZXR1cm4gW107XG5cdFx0XHR9XG5cblx0XHRcdHBhcnRzLnB1c2goY3VycmVudFNlZ21lbnQpO1xuXG5cdFx0XHRicmVhaztcblx0XHR9XG5cblx0XHRjYXNlICdpbmRleCc6IHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignSW5kZXggd2FzIG5vdCBjbG9zZWQnKTtcblx0XHR9XG5cblx0XHRjYXNlICdzdGFydCc6IHtcblx0XHRcdHBhcnRzLnB1c2goJycpO1xuXG5cdFx0XHRicmVhaztcblx0XHR9XG5cdC8vIE5vIGRlZmF1bHRcblx0fVxuXG5cdHJldHVybiBwYXJ0cztcbn1cblxuZnVuY3Rpb24gaXNTdHJpbmdJbmRleChvYmplY3QsIGtleSkge1xuXHRpZiAodHlwZW9mIGtleSAhPT0gJ251bWJlcicgJiYgQXJyYXkuaXNBcnJheShvYmplY3QpKSB7XG5cdFx0Y29uc3QgaW5kZXggPSBOdW1iZXIucGFyc2VJbnQoa2V5LCAxMCk7XG5cdFx0cmV0dXJuIE51bWJlci5pc0ludGVnZXIoaW5kZXgpICYmIG9iamVjdFtpbmRleF0gPT09IG9iamVjdFtrZXldO1xuXHR9XG5cblx0cmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBhc3NlcnROb3RTdHJpbmdJbmRleChvYmplY3QsIGtleSkge1xuXHRpZiAoaXNTdHJpbmdJbmRleChvYmplY3QsIGtleSkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCB1c2Ugc3RyaW5nIGluZGV4Jyk7XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3BlcnR5KG9iamVjdCwgcGF0aCwgdmFsdWUpIHtcblx0aWYgKCFpc09iamVjdChvYmplY3QpIHx8IHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykge1xuXHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID8gb2JqZWN0IDogdmFsdWU7XG5cdH1cblxuXHRjb25zdCBwYXRoQXJyYXkgPSBnZXRQYXRoU2VnbWVudHMocGF0aCk7XG5cdGlmIChwYXRoQXJyYXkubGVuZ3RoID09PSAwKSB7XG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9XG5cblx0Zm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHBhdGhBcnJheS5sZW5ndGg7IGluZGV4KyspIHtcblx0XHRjb25zdCBrZXkgPSBwYXRoQXJyYXlbaW5kZXhdO1xuXG5cdFx0aWYgKGlzU3RyaW5nSW5kZXgob2JqZWN0LCBrZXkpKSB7XG5cdFx0XHRvYmplY3QgPSBpbmRleCA9PT0gcGF0aEFycmF5Lmxlbmd0aCAtIDEgPyB1bmRlZmluZWQgOiBudWxsO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRvYmplY3QgPSBvYmplY3Rba2V5XTtcblx0XHR9XG5cblx0XHRpZiAob2JqZWN0ID09PSB1bmRlZmluZWQgfHwgb2JqZWN0ID09PSBudWxsKSB7XG5cdFx0XHQvLyBgb2JqZWN0YCBpcyBlaXRoZXIgYHVuZGVmaW5lZGAgb3IgYG51bGxgIHNvIHdlIHdhbnQgdG8gc3RvcCB0aGUgbG9vcCwgYW5kXG5cdFx0XHQvLyBpZiB0aGlzIGlzIG5vdCB0aGUgbGFzdCBiaXQgb2YgdGhlIHBhdGgsIGFuZFxuXHRcdFx0Ly8gaWYgaXQgZGlkbid0IHJldHVybiBgdW5kZWZpbmVkYFxuXHRcdFx0Ly8gaXQgd291bGQgcmV0dXJuIGBudWxsYCBpZiBgb2JqZWN0YCBpcyBgbnVsbGBcblx0XHRcdC8vIGJ1dCB3ZSB3YW50IGBnZXQoe2ZvbzogbnVsbH0sICdmb28uYmFyJylgIHRvIGVxdWFsIGB1bmRlZmluZWRgLCBvciB0aGUgc3VwcGxpZWQgdmFsdWUsIG5vdCBgbnVsbGBcblx0XHRcdGlmIChpbmRleCAhPT0gcGF0aEFycmF5Lmxlbmd0aCAtIDEpIHtcblx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gb2JqZWN0ID09PSB1bmRlZmluZWQgPyB2YWx1ZSA6IG9iamVjdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldFByb3BlcnR5KG9iamVjdCwgcGF0aCwgdmFsdWUpIHtcblx0aWYgKCFpc09iamVjdChvYmplY3QpIHx8IHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykge1xuXHRcdHJldHVybiBvYmplY3Q7XG5cdH1cblxuXHRjb25zdCByb290ID0gb2JqZWN0O1xuXHRjb25zdCBwYXRoQXJyYXkgPSBnZXRQYXRoU2VnbWVudHMocGF0aCk7XG5cblx0Zm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHBhdGhBcnJheS5sZW5ndGg7IGluZGV4KyspIHtcblx0XHRjb25zdCBrZXkgPSBwYXRoQXJyYXlbaW5kZXhdO1xuXG5cdFx0YXNzZXJ0Tm90U3RyaW5nSW5kZXgob2JqZWN0LCBrZXkpO1xuXG5cdFx0aWYgKGluZGV4ID09PSBwYXRoQXJyYXkubGVuZ3RoIC0gMSkge1xuXHRcdFx0b2JqZWN0W2tleV0gPSB2YWx1ZTtcblx0XHR9IGVsc2UgaWYgKCFpc09iamVjdChvYmplY3Rba2V5XSkpIHtcblx0XHRcdG9iamVjdFtrZXldID0gdHlwZW9mIHBhdGhBcnJheVtpbmRleCArIDFdID09PSAnbnVtYmVyJyA/IFtdIDoge307XG5cdFx0fVxuXG5cdFx0b2JqZWN0ID0gb2JqZWN0W2tleV07XG5cdH1cblxuXHRyZXR1cm4gcm9vdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVByb3BlcnR5KG9iamVjdCwgcGF0aCkge1xuXHRpZiAoIWlzT2JqZWN0KG9iamVjdCkgfHwgdHlwZW9mIHBhdGggIT09ICdzdHJpbmcnKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0Y29uc3QgcGF0aEFycmF5ID0gZ2V0UGF0aFNlZ21lbnRzKHBhdGgpO1xuXG5cdGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBwYXRoQXJyYXkubGVuZ3RoOyBpbmRleCsrKSB7XG5cdFx0Y29uc3Qga2V5ID0gcGF0aEFycmF5W2luZGV4XTtcblxuXHRcdGFzc2VydE5vdFN0cmluZ0luZGV4KG9iamVjdCwga2V5KTtcblxuXHRcdGlmIChpbmRleCA9PT0gcGF0aEFycmF5Lmxlbmd0aCAtIDEpIHtcblx0XHRcdGRlbGV0ZSBvYmplY3Rba2V5XTtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdG9iamVjdCA9IG9iamVjdFtrZXldO1xuXG5cdFx0aWYgKCFpc09iamVjdChvYmplY3QpKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXNQcm9wZXJ0eShvYmplY3QsIHBhdGgpIHtcblx0aWYgKCFpc09iamVjdChvYmplY3QpIHx8IHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGNvbnN0IHBhdGhBcnJheSA9IGdldFBhdGhTZWdtZW50cyhwYXRoKTtcblx0aWYgKHBhdGhBcnJheS5sZW5ndGggPT09IDApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRmb3IgKGNvbnN0IGtleSBvZiBwYXRoQXJyYXkpIHtcblx0XHRpZiAoIWlzT2JqZWN0KG9iamVjdCkgfHwgIShrZXkgaW4gb2JqZWN0KSB8fCBpc1N0cmluZ0luZGV4KG9iamVjdCwga2V5KSkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdG9iamVjdCA9IG9iamVjdFtrZXldO1xuXHR9XG5cblx0cmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlc2NhcGVQYXRoKHBhdGgpIHtcblx0aWYgKHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGEgc3RyaW5nJyk7XG5cdH1cblxuXHRyZXR1cm4gcGF0aC5yZXBsYWNlKC9bXFxcXC5bXS9nLCAnXFxcXCQmJyk7XG59XG5cbi8vIFRoZSBrZXlzIHJldHVybmVkIGJ5IE9iamVjdC5lbnRyaWVzKCkgZm9yIGFycmF5cyBhcmUgc3RyaW5nc1xuZnVuY3Rpb24gZW50cmllcyh2YWx1ZSkge1xuXHRpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcblx0XHRyZXR1cm4gdmFsdWUubWFwKCh2YWx1ZSwgaW5kZXgpID0+IFtpbmRleCwgdmFsdWVdKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QuZW50cmllcyh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeVBhdGgocGF0aFNlZ21lbnRzKSB7XG5cdGxldCByZXN1bHQgPSAnJztcblxuXHRmb3IgKGxldCBbaW5kZXgsIHNlZ21lbnRdIG9mIGVudHJpZXMocGF0aFNlZ21lbnRzKSkge1xuXHRcdGlmICh0eXBlb2Ygc2VnbWVudCA9PT0gJ251bWJlcicpIHtcblx0XHRcdHJlc3VsdCArPSBgWyR7c2VnbWVudH1dYDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c2VnbWVudCA9IGVzY2FwZVBhdGgoc2VnbWVudCk7XG5cdFx0XHRyZXN1bHQgKz0gaW5kZXggPT09IDAgPyBzZWdtZW50IDogYC4ke3NlZ21lbnR9YDtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiAqIGRlZXBLZXlzSXRlcmF0b3Iob2JqZWN0LCBjdXJyZW50UGF0aCA9IFtdKSB7XG5cdGlmICghaXNPYmplY3Qob2JqZWN0KSkge1xuXHRcdGlmIChjdXJyZW50UGF0aC5sZW5ndGggPiAwKSB7XG5cdFx0XHR5aWVsZCBzdHJpbmdpZnlQYXRoKGN1cnJlbnRQYXRoKTtcblx0XHR9XG5cblx0XHRyZXR1cm47XG5cdH1cblxuXHRmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBlbnRyaWVzKG9iamVjdCkpIHtcblx0XHR5aWVsZCAqIGRlZXBLZXlzSXRlcmF0b3IodmFsdWUsIFsuLi5jdXJyZW50UGF0aCwga2V5XSk7XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlZXBLZXlzKG9iamVjdCkge1xuXHRyZXR1cm4gWy4uLmRlZXBLZXlzSXRlcmF0b3Iob2JqZWN0KV07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/dot-prop/index.js\n");

/***/ })

};
;