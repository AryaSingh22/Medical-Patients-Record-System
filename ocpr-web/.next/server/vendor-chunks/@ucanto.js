"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ucanto";
exports.ids = ["vendor-chunks/@ucanto"];
exports.modules = {

/***/ "(ssr)/./node_modules/@ucanto/client/src/connection.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ucanto/client/src/connection.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   execute: () => (/* binding */ execute)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n\n\n/**\n * Creates a connection to a service.\n *\n * @template {Record<string, any>} T\n * @param {API.ConnectionOptions<T>} options\n * @returns {API.ConnectionView<T>}\n */ const connect = (options)=>new Connection(options);\n/**\n * @template {Record<string, any>} T\n * @implements {API.ConnectionView<T>}\n */ class Connection {\n    /**\n   * @param {API.ConnectionOptions<T>} options\n   */ constructor(options){\n        this.id = options.id;\n        this.options = options;\n        this.codec = options.codec;\n        this.channel = options.channel;\n        this.hasher = options.hasher || _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.sha256;\n    }\n    /**\n   * Execute invocations.\n   *\n   * @template {API.Capability} C\n   * @template {API.Tuple<API.ServiceInvocation<C, T>>} I\n   * @param {I} invocations\n   * @returns {Promise<API.InferReceipts<I, T>>}\n   */ async execute(...invocations) {\n        return execute(invocations, this);\n    }\n}\n/**\n * @template {API.Capability} C\n * @template {Record<string, any>} T\n * @template {API.Tuple<API.ServiceInvocation<C, T>>} I\n * @param {API.Connection<T>} connection\n * @param {I} invocations\n * @returns {Promise<API.InferReceipts<I, T>>}\n */ const execute = async (invocations, connection)=>{\n    const input = await _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Message.build({\n        invocations\n    });\n    const request = await connection.codec.encode(input, connection);\n    const response = await connection.channel.request(request);\n    // We may fail to decode the response if content type is not supported\n    // or if data was corrupted. We do not want to throw in such case however,\n    // because client will get an Error object as opposed to a receipt, to retain\n    // consistent client API with two kinds of errors we encode caught error as\n    // a receipts per workflow invocation.\n    try {\n        const output = await connection.codec.decode(response);\n        const receipts = input.invocationLinks.map((link)=>output.get(link));\n        return /** @type {API.InferReceipts<I, T>} */ receipts;\n    } catch (error) {\n        // No third party code is run during decode and we know\n        // we only throw an Error\n        const { message, name = \"Error\", ...cause } = /** @type {Error} */ error;\n        const receipts = [];\n        for await (const ran of input.invocationLinks){\n            const receipt = await _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Receipt.issue({\n                ran,\n                result: {\n                    error: {\n                        ...cause,\n                        name,\n                        message\n                    }\n                },\n                // @ts-expect-error - we can not really sign a receipt without having\n                // an access to a signer which client does not have. In the future\n                // we will change client API requiring a signer to be passed in but\n                // for now we just use a dummy signer.\n                issuer: {\n                    did () {\n                        return connection.id.did();\n                    },\n                    sign () {\n                        return _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Signature.createNonStandard(\"\", new Uint8Array());\n                    }\n                }\n            });\n            receipts.push(receipt);\n        }\n        return /** @type {API.InferReceipts<I, T>} */ receipts;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jbGllbnQvc3JjL2Nvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUMwQjtBQUVsRTs7Ozs7O0NBTUMsR0FDTSxNQUFNSyxVQUFVQyxDQUFBQSxVQUFXLElBQUlDLFdBQVdELFNBQVE7QUFFekQ7OztDQUdDLEdBQ0QsTUFBTUM7SUFDSjs7R0FFQyxHQUNEQyxZQUFZRixPQUFPLENBQUU7UUFDbkIsSUFBSSxDQUFDRyxFQUFFLEdBQUdILFFBQVFHLEVBQUU7UUFDcEIsSUFBSSxDQUFDSCxPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDSSxLQUFLLEdBQUdKLFFBQVFJLEtBQUs7UUFDMUIsSUFBSSxDQUFDQyxPQUFPLEdBQUdMLFFBQVFLLE9BQU87UUFDOUIsSUFBSSxDQUFDQyxNQUFNLEdBQUdOLFFBQVFNLE1BQU0sSUFBSVIsZ0RBQU1BO0lBQ3hDO0lBQ0E7Ozs7Ozs7R0FPQyxHQUNELE1BQU1TLFFBQVEsR0FBR0MsV0FBVyxFQUFFO1FBQzVCLE9BQU9ELFFBQVFDLGFBQWEsSUFBSTtJQUNsQztBQUNGO0FBRUE7Ozs7Ozs7Q0FPQyxHQUNNLE1BQU1ELFVBQVUsT0FBT0MsYUFBYUM7SUFDekMsTUFBTUMsUUFBUSxNQUFNZCx1REFBYSxDQUFDO1FBQUVZO0lBQVk7SUFDaEQsTUFBTUksVUFBVSxNQUFNSCxXQUFXTCxLQUFLLENBQUNTLE1BQU0sQ0FBQ0gsT0FBT0Q7SUFDckQsTUFBTUssV0FBVyxNQUFNTCxXQUFXSixPQUFPLENBQUNPLE9BQU8sQ0FBQ0E7SUFDbEQsc0VBQXNFO0lBQ3RFLDBFQUEwRTtJQUMxRSw2RUFBNkU7SUFDN0UsMkVBQTJFO0lBQzNFLHNDQUFzQztJQUN0QyxJQUFJO1FBQ0YsTUFBTUcsU0FBUyxNQUFNTixXQUFXTCxLQUFLLENBQUNZLE1BQU0sQ0FBQ0Y7UUFDN0MsTUFBTUcsV0FBV1AsTUFBTVEsZUFBZSxDQUFDQyxHQUFHLENBQUNDLENBQUFBLE9BQVFMLE9BQU9NLEdBQUcsQ0FBQ0Q7UUFDOUQsT0FBTyxvQ0FBb0MsR0FBSUg7SUFDakQsRUFBRSxPQUFPSyxPQUFPO1FBQ2QsdURBQXVEO1FBQ3ZELHlCQUF5QjtRQUN6QixNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxPQUFPLEVBQUUsR0FBR0MsT0FBTyxHQUFHLGtCQUFrQixHQUFJSDtRQUNwRSxNQUFNTCxXQUFXLEVBQUU7UUFDbkIsV0FBVyxNQUFNUyxPQUFPaEIsTUFBTVEsZUFBZSxDQUFFO1lBQzdDLE1BQU1TLFVBQVUsTUFBTTlCLHVEQUFhLENBQUM7Z0JBQ2xDNkI7Z0JBQ0FHLFFBQVE7b0JBQUVQLE9BQU87d0JBQUUsR0FBR0csS0FBSzt3QkFBRUQ7d0JBQU1EO29CQUFRO2dCQUFFO2dCQUM3QyxxRUFBcUU7Z0JBQ3JFLGtFQUFrRTtnQkFDbEUsbUVBQW1FO2dCQUNuRSxzQ0FBc0M7Z0JBQ3RDTyxRQUFRO29CQUNOQzt3QkFDRSxPQUFPdEIsV0FBV04sRUFBRSxDQUFDNEIsR0FBRztvQkFDMUI7b0JBQ0FDO3dCQUNFLE9BQU9yQyxxRUFBMkIsQ0FBQyxJQUFJLElBQUl1QztvQkFDN0M7Z0JBQ0Y7WUFDRjtZQUVBakIsU0FBU2tCLElBQUksQ0FBQ1I7UUFDaEI7UUFFQSxPQUFPLG9DQUFvQyxHQUFJVjtJQUNqRDtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NsaWVudC9zcmMvY29ubmVjdGlvbi5qcz9jNjU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcbmltcG9ydCB7IFNpZ25hdHVyZSwgTWVzc2FnZSwgUmVjZWlwdCwgc2hhMjU2IH0gZnJvbSAnQHVjYW50by9jb3JlJ1xuXG4vKipcbiAqIENyZWF0ZXMgYSBjb25uZWN0aW9uIHRvIGEgc2VydmljZS5cbiAqXG4gKiBAdGVtcGxhdGUge1JlY29yZDxzdHJpbmcsIGFueT59IFRcbiAqIEBwYXJhbSB7QVBJLkNvbm5lY3Rpb25PcHRpb25zPFQ+fSBvcHRpb25zXG4gKiBAcmV0dXJucyB7QVBJLkNvbm5lY3Rpb25WaWV3PFQ+fVxuICovXG5leHBvcnQgY29uc3QgY29ubmVjdCA9IG9wdGlvbnMgPT4gbmV3IENvbm5lY3Rpb24ob3B0aW9ucylcblxuLyoqXG4gKiBAdGVtcGxhdGUge1JlY29yZDxzdHJpbmcsIGFueT59IFRcbiAqIEBpbXBsZW1lbnRzIHtBUEkuQ29ubmVjdGlvblZpZXc8VD59XG4gKi9cbmNsYXNzIENvbm5lY3Rpb24ge1xuICAvKipcbiAgICogQHBhcmFtIHtBUEkuQ29ubmVjdGlvbk9wdGlvbnM8VD59IG9wdGlvbnNcbiAgICovXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICB0aGlzLmlkID0gb3B0aW9ucy5pZFxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnNcbiAgICB0aGlzLmNvZGVjID0gb3B0aW9ucy5jb2RlY1xuICAgIHRoaXMuY2hhbm5lbCA9IG9wdGlvbnMuY2hhbm5lbFxuICAgIHRoaXMuaGFzaGVyID0gb3B0aW9ucy5oYXNoZXIgfHwgc2hhMjU2XG4gIH1cbiAgLyoqXG4gICAqIEV4ZWN1dGUgaW52b2NhdGlvbnMuXG4gICAqXG4gICAqIEB0ZW1wbGF0ZSB7QVBJLkNhcGFiaWxpdHl9IENcbiAgICogQHRlbXBsYXRlIHtBUEkuVHVwbGU8QVBJLlNlcnZpY2VJbnZvY2F0aW9uPEMsIFQ+Pn0gSVxuICAgKiBAcGFyYW0ge0l9IGludm9jYXRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPEFQSS5JbmZlclJlY2VpcHRzPEksIFQ+Pn1cbiAgICovXG4gIGFzeW5jIGV4ZWN1dGUoLi4uaW52b2NhdGlvbnMpIHtcbiAgICByZXR1cm4gZXhlY3V0ZShpbnZvY2F0aW9ucywgdGhpcylcbiAgfVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7QVBJLkNhcGFiaWxpdHl9IENcbiAqIEB0ZW1wbGF0ZSB7UmVjb3JkPHN0cmluZywgYW55Pn0gVFxuICogQHRlbXBsYXRlIHtBUEkuVHVwbGU8QVBJLlNlcnZpY2VJbnZvY2F0aW9uPEMsIFQ+Pn0gSVxuICogQHBhcmFtIHtBUEkuQ29ubmVjdGlvbjxUPn0gY29ubmVjdGlvblxuICogQHBhcmFtIHtJfSBpbnZvY2F0aW9uc1xuICogQHJldHVybnMge1Byb21pc2U8QVBJLkluZmVyUmVjZWlwdHM8SSwgVD4+fVxuICovXG5leHBvcnQgY29uc3QgZXhlY3V0ZSA9IGFzeW5jIChpbnZvY2F0aW9ucywgY29ubmVjdGlvbikgPT4ge1xuICBjb25zdCBpbnB1dCA9IGF3YWl0IE1lc3NhZ2UuYnVpbGQoeyBpbnZvY2F0aW9ucyB9KVxuICBjb25zdCByZXF1ZXN0ID0gYXdhaXQgY29ubmVjdGlvbi5jb2RlYy5lbmNvZGUoaW5wdXQsIGNvbm5lY3Rpb24pXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY29ubmVjdGlvbi5jaGFubmVsLnJlcXVlc3QocmVxdWVzdClcbiAgLy8gV2UgbWF5IGZhaWwgdG8gZGVjb2RlIHRoZSByZXNwb25zZSBpZiBjb250ZW50IHR5cGUgaXMgbm90IHN1cHBvcnRlZFxuICAvLyBvciBpZiBkYXRhIHdhcyBjb3JydXB0ZWQuIFdlIGRvIG5vdCB3YW50IHRvIHRocm93IGluIHN1Y2ggY2FzZSBob3dldmVyLFxuICAvLyBiZWNhdXNlIGNsaWVudCB3aWxsIGdldCBhbiBFcnJvciBvYmplY3QgYXMgb3Bwb3NlZCB0byBhIHJlY2VpcHQsIHRvIHJldGFpblxuICAvLyBjb25zaXN0ZW50IGNsaWVudCBBUEkgd2l0aCB0d28ga2luZHMgb2YgZXJyb3JzIHdlIGVuY29kZSBjYXVnaHQgZXJyb3IgYXNcbiAgLy8gYSByZWNlaXB0cyBwZXIgd29ya2Zsb3cgaW52b2NhdGlvbi5cbiAgdHJ5IHtcbiAgICBjb25zdCBvdXRwdXQgPSBhd2FpdCBjb25uZWN0aW9uLmNvZGVjLmRlY29kZShyZXNwb25zZSlcbiAgICBjb25zdCByZWNlaXB0cyA9IGlucHV0Lmludm9jYXRpb25MaW5rcy5tYXAobGluayA9PiBvdXRwdXQuZ2V0KGxpbmspKVxuICAgIHJldHVybiAvKiogQHR5cGUge0FQSS5JbmZlclJlY2VpcHRzPEksIFQ+fSAqLyAocmVjZWlwdHMpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gTm8gdGhpcmQgcGFydHkgY29kZSBpcyBydW4gZHVyaW5nIGRlY29kZSBhbmQgd2Uga25vd1xuICAgIC8vIHdlIG9ubHkgdGhyb3cgYW4gRXJyb3JcbiAgICBjb25zdCB7IG1lc3NhZ2UsIG5hbWUgPSAnRXJyb3InLCAuLi5jYXVzZSB9ID0gLyoqIEB0eXBlIHtFcnJvcn0gKi8gKGVycm9yKVxuICAgIGNvbnN0IHJlY2VpcHRzID0gW11cbiAgICBmb3IgYXdhaXQgKGNvbnN0IHJhbiBvZiBpbnB1dC5pbnZvY2F0aW9uTGlua3MpIHtcbiAgICAgIGNvbnN0IHJlY2VpcHQgPSBhd2FpdCBSZWNlaXB0Lmlzc3VlKHtcbiAgICAgICAgcmFuLFxuICAgICAgICByZXN1bHQ6IHsgZXJyb3I6IHsgLi4uY2F1c2UsIG5hbWUsIG1lc3NhZ2UgfSB9LFxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gd2UgY2FuIG5vdCByZWFsbHkgc2lnbiBhIHJlY2VpcHQgd2l0aG91dCBoYXZpbmdcbiAgICAgICAgLy8gYW4gYWNjZXNzIHRvIGEgc2lnbmVyIHdoaWNoIGNsaWVudCBkb2VzIG5vdCBoYXZlLiBJbiB0aGUgZnV0dXJlXG4gICAgICAgIC8vIHdlIHdpbGwgY2hhbmdlIGNsaWVudCBBUEkgcmVxdWlyaW5nIGEgc2lnbmVyIHRvIGJlIHBhc3NlZCBpbiBidXRcbiAgICAgICAgLy8gZm9yIG5vdyB3ZSBqdXN0IHVzZSBhIGR1bW15IHNpZ25lci5cbiAgICAgICAgaXNzdWVyOiB7XG4gICAgICAgICAgZGlkKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb24uaWQuZGlkKClcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNpZ24oKSB7XG4gICAgICAgICAgICByZXR1cm4gU2lnbmF0dXJlLmNyZWF0ZU5vblN0YW5kYXJkKCcnLCBuZXcgVWludDhBcnJheSgpKVxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9KVxuXG4gICAgICByZWNlaXB0cy5wdXNoKHJlY2VpcHQpXG4gICAgfVxuXG4gICAgcmV0dXJuIC8qKiBAdHlwZSB7QVBJLkluZmVyUmVjZWlwdHM8SSwgVD59ICovIChyZWNlaXB0cylcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkFQSSIsIlNpZ25hdHVyZSIsIk1lc3NhZ2UiLCJSZWNlaXB0Iiwic2hhMjU2IiwiY29ubmVjdCIsIm9wdGlvbnMiLCJDb25uZWN0aW9uIiwiY29uc3RydWN0b3IiLCJpZCIsImNvZGVjIiwiY2hhbm5lbCIsImhhc2hlciIsImV4ZWN1dGUiLCJpbnZvY2F0aW9ucyIsImNvbm5lY3Rpb24iLCJpbnB1dCIsImJ1aWxkIiwicmVxdWVzdCIsImVuY29kZSIsInJlc3BvbnNlIiwib3V0cHV0IiwiZGVjb2RlIiwicmVjZWlwdHMiLCJpbnZvY2F0aW9uTGlua3MiLCJtYXAiLCJsaW5rIiwiZ2V0IiwiZXJyb3IiLCJtZXNzYWdlIiwibmFtZSIsImNhdXNlIiwicmFuIiwicmVjZWlwdCIsImlzc3VlIiwicmVzdWx0IiwiaXNzdWVyIiwiZGlkIiwic2lnbiIsImNyZWF0ZU5vblN0YW5kYXJkIiwiVWludDhBcnJheSIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/client/src/connection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/client/src/lib.js":
/*!************************************************!*\
  !*** ./node_modules/@ucanto/client/src/lib.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DAG: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.DAG),\n/* harmony export */   Schema: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.Schema),\n/* harmony export */   connect: () => (/* reexport safe */ _connection_js__WEBPACK_IMPORTED_MODULE_0__.connect),\n/* harmony export */   delegate: () => (/* binding */ delegate),\n/* harmony export */   error: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.error),\n/* harmony export */   execute: () => (/* reexport safe */ _connection_js__WEBPACK_IMPORTED_MODULE_0__.execute),\n/* harmony export */   invoke: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.invoke),\n/* harmony export */   ok: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.ok)\n/* harmony export */ });\n/* harmony import */ var _connection_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./connection.js */ \"(ssr)/./node_modules/@ucanto/client/src/connection.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n\n\n\n;\n\nconst delegate = _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.Delegation.delegate\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jbGllbnQvc3JjL2xpYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErQjs7QUFFRTtBQUNqQyxDQUF5RTs7QUFFbEUsaUJBQWlCLDZEQUFtQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jbGllbnQvc3JjL2xpYi5qcz9lZTY2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vY29ubmVjdGlvbi5qcydcblxuZXhwb3J0ICogZnJvbSAnQHVjYW50by9pbnRlcmZhY2UnXG5pbXBvcnQgeyBEZWxlZ2F0aW9uLCBpbnZva2UsIFNjaGVtYSwgREFHLCBvaywgZXJyb3IgfSBmcm9tICdAdWNhbnRvL2NvcmUnXG5cbmV4cG9ydCBjb25zdCBkZWxlZ2F0ZSA9IERlbGVnYXRpb24uZGVsZWdhdGVcbmV4cG9ydCB7IGludm9rZSwgb2ssIGVycm9yLCBTY2hlbWEsIERBRyB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/client/src/lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-decoder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-decoder.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytesReader: () => (/* binding */ bytesReader),\n/* harmony export */   fromBytes: () => (/* binding */ fromBytes),\n/* harmony export */   limitReader: () => (/* binding */ limitReader),\n/* harmony export */   readBlockHead: () => (/* binding */ readBlockHead),\n/* harmony export */   readHeader: () => (/* binding */ readHeader)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decoder-common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/decoder-common.js\");\n/* harmony import */ var _header_validator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./header-validator.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/header-validator.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockHeader} BlockHeader\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./coding.js').BytesBufferReader} BytesBufferReader\n * @typedef {import('./coding.js').CarHeader} CarHeader\n * @typedef {import('./coding.js').CarV2Header} CarV2Header\n * @typedef {import('./coding.js').CarV2FixedHeader} CarV2FixedHeader\n */\n\n/**\n * Reads header data from a `BytesReader`. The header may either be in the form\n * of a `CarHeader` or `CarV2Header` depending on the CAR being read.\n *\n * @name decoder.readHeader(reader)\n * @param {BytesBufferReader} reader\n * @param {number} [strictVersion]\n * @returns {CarHeader | CarV2Header}\n */\nfunction readHeader (reader, strictVersion) {\n  const length = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)')\n  }\n  const header = reader.exactly(length, true)\n  const block = (0,_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__.decode)(header)\n  if (_header_validator_js__WEBPACK_IMPORTED_MODULE_4__.CarV1HeaderOrV2Pragma.toTyped(block) === undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  if ((block.version !== 1 && block.version !== 2) || (strictVersion !== undefined && block.version !== strictVersion)) {\n    throw new Error(`Invalid CAR version: ${block.version}${strictVersion !== undefined ? ` (expected ${strictVersion})` : ''}`)\n  }\n  if (block.version === 1) {\n    // CarV1HeaderOrV2Pragma makes roots optional, let's make it mandatory\n    if (!Array.isArray(block.roots)) {\n      throw new Error('Invalid CAR header format')\n    }\n    return block\n  }\n  // version 2\n  if (block.roots !== undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  const v2Header = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeV2Header)(reader.exactly(_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.V2_HEADER_LENGTH, true))\n  reader.seek(v2Header.dataOffset - reader.pos)\n  const v1Header = readHeader(reader, 1)\n  return Object.assign(v1Header, v2Header)\n}\n\n/**\n * Reads CID sync\n *\n * @param {BytesBufferReader} reader\n * @returns {CID}\n */\nfunction readCid (reader) {\n  const first = reader.exactly(2, false)\n  if (first[0] === _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.SHA2_256 && first[1] === _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.LENGTH) {\n    // cidv0 32-byte sha2-256\n    const bytes = reader.exactly(34, true)\n    const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__.decode(bytes)\n    return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.create(0, _decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.CIDV0_BYTES.DAG_PB, multihash)\n  }\n\n  const version = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${version})`)\n  }\n  const codec = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  const bytes = reader.exactly((0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.getMultihashLength)(reader.upTo(8)), true)\n  const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_2__.decode(bytes)\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.create(version, codec, multihash)\n}\n\n/**\n * Reads the leading data of an individual block from CAR data from a\n * `BytesBufferReader`. Returns a `BlockHeader` object which contains\n * `{ cid, length, blockLength }` which can be used to either index the block\n * or read the block binary data.\n *\n * @name async decoder.readBlockHead(reader)\n * @param {BytesBufferReader} reader\n * @returns {BlockHeader}\n */\nfunction readBlockHead (reader) {\n  // length includes a CID + Binary, where CID has a variable length\n  // we have to deal with\n  const start = reader.pos\n  let length = (0,_decoder_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeVarint)(reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)')\n  }\n  length += (reader.pos - start)\n  const cid = readCid(reader)\n  const blockLength = length - Number(reader.pos - start) // subtract CID length\n\n  return { cid, length, blockLength }\n}\n\n/**\n * Returns Car header and blocks from a Uint8Array\n *\n * @param {Uint8Array} bytes\n * @returns {{ header : CarHeader | CarV2Header , blocks: Block[]}}\n */\nfunction fromBytes (bytes) {\n  let reader = bytesReader(bytes)\n  const header = readHeader(reader)\n  if (header.version === 2) {\n    const v1length = reader.pos - header.dataOffset\n    reader = limitReader(reader, header.dataSize - v1length)\n  }\n\n  const blocks = []\n  while (reader.upTo(8).length > 0) {\n    const { cid, blockLength } = readBlockHead(reader)\n\n    blocks.push({ cid, bytes: reader.exactly(blockLength, true) })\n  }\n\n  return {\n    header, blocks\n  }\n}\n\n/**\n * Creates a `BytesBufferReader` from a `Uint8Array`.\n *\n * @name decoder.bytesReader(bytes)\n * @param {Uint8Array} bytes\n * @returns {BytesBufferReader}\n */\nfunction bytesReader (bytes) {\n  let pos = 0\n\n  /** @type {BytesBufferReader} */\n  return {\n    upTo (length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos))\n    },\n\n    exactly (length, seek = false) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data')\n      }\n\n      const out = bytes.subarray(pos, pos + length)\n      if (seek) {\n        pos += length\n      }\n      return out\n    },\n\n    seek (length) {\n      pos += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * Wraps a `BytesBufferReader` in a limiting `BytesBufferReader` which limits maximum read\n * to `byteLimit` bytes. It _does not_ update `pos` of the original\n * `BytesBufferReader`.\n *\n * @name decoder.limitReader(reader, byteLimit)\n * @param {BytesBufferReader} reader\n * @param {number} byteLimit\n * @returns {BytesBufferReader}\n */\nfunction limitReader (reader, byteLimit) {\n  let bytesRead = 0\n\n  /** @type {BytesBufferReader} */\n  return {\n    upTo (length) {\n      let bytes = reader.upTo(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead)\n      }\n      return bytes\n    },\n\n    exactly (length, seek = false) {\n      const bytes = reader.exactly(length, seek)\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data')\n      }\n      if (seek) {\n        bytesRead += length\n      }\n      return bytes\n    },\n\n    seek (length) {\n      bytesRead += length\n      reader.seek(length)\n    },\n\n    get pos () {\n      return reader.pos\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2J1ZmZlci1kZWNvZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDbEI7QUFDYztBQUNpRTtBQUN4RDs7QUFFN0Q7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLGdDQUFnQztBQUM3QyxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLHlDQUF5QztBQUN0RCxhQUFhLGlDQUFpQztBQUM5QyxhQUFhLG1DQUFtQztBQUNoRCxhQUFhLHdDQUF3QztBQUNyRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AsaUJBQWlCLGdFQUFZO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFhO0FBQzdCLE1BQU0sdUVBQXFCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxjQUFjLEVBQUUsNENBQTRDLGNBQWMsUUFBUTtBQUM5SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0VBQWMsZ0JBQWdCLGdFQUFnQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDJEQUFXLDBCQUEwQiwyREFBVztBQUNuRTtBQUNBO0FBQ0Esc0JBQXNCLDhEQUFhO0FBQ25DLFdBQVcsaURBQUcsV0FBVywyREFBVztBQUNwQzs7QUFFQSxrQkFBa0IsZ0VBQVk7QUFDOUI7QUFDQSwrQ0FBK0MsUUFBUTtBQUN2RDtBQUNBLGdCQUFnQixnRUFBWTtBQUM1QiwrQkFBK0Isc0VBQWtCO0FBQ2pELG9CQUFvQiw4REFBYTtBQUNqQyxTQUFTLGlEQUFHO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTSwwQkFBMEI7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdFQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGVBQWU7QUFDZjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjs7QUFFL0Isa0JBQWtCLCtDQUErQztBQUNqRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQOztBQUVBLGFBQWEsbUJBQW1CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDs7QUFFQSxhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL0BpcGxkL2Nhci9zcmMvYnVmZmVyLWRlY29kZXIuanM/MDFiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGUgYXMgZGVjb2RlRGFnQ2JvciB9IGZyb20gJ0BpcGxkL2RhZy1jYm9yJ1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCdcbmltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL2RpZ2VzdCdcbmltcG9ydCB7IENJRFYwX0JZVEVTLCBkZWNvZGVWMkhlYWRlciwgZGVjb2RlVmFyaW50LCBnZXRNdWx0aWhhc2hMZW5ndGgsIFYyX0hFQURFUl9MRU5HVEggfSBmcm9tICcuL2RlY29kZXItY29tbW9uLmpzJ1xuaW1wb3J0IHsgQ2FyVjFIZWFkZXJPclYyUHJhZ21hIH0gZnJvbSAnLi9oZWFkZXItdmFsaWRhdG9yLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYXBpLmpzJykuQmxvY2t9IEJsb2NrXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkJsb2NrSGVhZGVyfSBCbG9ja0hlYWRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja0luZGV4fSBCbG9ja0luZGV4XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkJ5dGVzQnVmZmVyUmVhZGVyfSBCeXRlc0J1ZmZlclJlYWRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5DYXJIZWFkZXJ9IENhckhlYWRlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9jb2RpbmcuanMnKS5DYXJWMkhlYWRlcn0gQ2FyVjJIZWFkZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29kaW5nLmpzJykuQ2FyVjJGaXhlZEhlYWRlcn0gQ2FyVjJGaXhlZEhlYWRlclxuICovXG5cbi8qKlxuICogUmVhZHMgaGVhZGVyIGRhdGEgZnJvbSBhIGBCeXRlc1JlYWRlcmAuIFRoZSBoZWFkZXIgbWF5IGVpdGhlciBiZSBpbiB0aGUgZm9ybVxuICogb2YgYSBgQ2FySGVhZGVyYCBvciBgQ2FyVjJIZWFkZXJgIGRlcGVuZGluZyBvbiB0aGUgQ0FSIGJlaW5nIHJlYWQuXG4gKlxuICogQG5hbWUgZGVjb2Rlci5yZWFkSGVhZGVyKHJlYWRlcilcbiAqIEBwYXJhbSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9IHJlYWRlclxuICogQHBhcmFtIHtudW1iZXJ9IFtzdHJpY3RWZXJzaW9uXVxuICogQHJldHVybnMge0NhckhlYWRlciB8IENhclYySGVhZGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVhZEhlYWRlciAocmVhZGVyLCBzdHJpY3RWZXJzaW9uKSB7XG4gIGNvbnN0IGxlbmd0aCA9IGRlY29kZVZhcmludChyZWFkZXIudXBUbyg4KSwgcmVhZGVyKVxuICBpZiAobGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIENBUiBoZWFkZXIgKHplcm8gbGVuZ3RoKScpXG4gIH1cbiAgY29uc3QgaGVhZGVyID0gcmVhZGVyLmV4YWN0bHkobGVuZ3RoLCB0cnVlKVxuICBjb25zdCBibG9jayA9IGRlY29kZURhZ0Nib3IoaGVhZGVyKVxuICBpZiAoQ2FyVjFIZWFkZXJPclYyUHJhZ21hLnRvVHlwZWQoYmxvY2spID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgQ0FSIGhlYWRlciBmb3JtYXQnKVxuICB9XG4gIGlmICgoYmxvY2sudmVyc2lvbiAhPT0gMSAmJiBibG9jay52ZXJzaW9uICE9PSAyKSB8fCAoc3RyaWN0VmVyc2lvbiAhPT0gdW5kZWZpbmVkICYmIGJsb2NrLnZlcnNpb24gIT09IHN0cmljdFZlcnNpb24pKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIENBUiB2ZXJzaW9uOiAke2Jsb2NrLnZlcnNpb259JHtzdHJpY3RWZXJzaW9uICE9PSB1bmRlZmluZWQgPyBgIChleHBlY3RlZCAke3N0cmljdFZlcnNpb259KWAgOiAnJ31gKVxuICB9XG4gIGlmIChibG9jay52ZXJzaW9uID09PSAxKSB7XG4gICAgLy8gQ2FyVjFIZWFkZXJPclYyUHJhZ21hIG1ha2VzIHJvb3RzIG9wdGlvbmFsLCBsZXQncyBtYWtlIGl0IG1hbmRhdG9yeVxuICAgIGlmICghQXJyYXkuaXNBcnJheShibG9jay5yb290cykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBDQVIgaGVhZGVyIGZvcm1hdCcpXG4gICAgfVxuICAgIHJldHVybiBibG9ja1xuICB9XG4gIC8vIHZlcnNpb24gMlxuICBpZiAoYmxvY2sucm9vdHMgIT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBDQVIgaGVhZGVyIGZvcm1hdCcpXG4gIH1cbiAgY29uc3QgdjJIZWFkZXIgPSBkZWNvZGVWMkhlYWRlcihyZWFkZXIuZXhhY3RseShWMl9IRUFERVJfTEVOR1RILCB0cnVlKSlcbiAgcmVhZGVyLnNlZWsodjJIZWFkZXIuZGF0YU9mZnNldCAtIHJlYWRlci5wb3MpXG4gIGNvbnN0IHYxSGVhZGVyID0gcmVhZEhlYWRlcihyZWFkZXIsIDEpXG4gIHJldHVybiBPYmplY3QuYXNzaWduKHYxSGVhZGVyLCB2MkhlYWRlcilcbn1cblxuLyoqXG4gKiBSZWFkcyBDSUQgc3luY1xuICpcbiAqIEBwYXJhbSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9IHJlYWRlclxuICogQHJldHVybnMge0NJRH1cbiAqL1xuZnVuY3Rpb24gcmVhZENpZCAocmVhZGVyKSB7XG4gIGNvbnN0IGZpcnN0ID0gcmVhZGVyLmV4YWN0bHkoMiwgZmFsc2UpXG4gIGlmIChmaXJzdFswXSA9PT0gQ0lEVjBfQllURVMuU0hBMl8yNTYgJiYgZmlyc3RbMV0gPT09IENJRFYwX0JZVEVTLkxFTkdUSCkge1xuICAgIC8vIGNpZHYwIDMyLWJ5dGUgc2hhMi0yNTZcbiAgICBjb25zdCBieXRlcyA9IHJlYWRlci5leGFjdGx5KDM0LCB0cnVlKVxuICAgIGNvbnN0IG11bHRpaGFzaCA9IERpZ2VzdC5kZWNvZGUoYnl0ZXMpXG4gICAgcmV0dXJuIENJRC5jcmVhdGUoMCwgQ0lEVjBfQllURVMuREFHX1BCLCBtdWx0aWhhc2gpXG4gIH1cblxuICBjb25zdCB2ZXJzaW9uID0gZGVjb2RlVmFyaW50KHJlYWRlci51cFRvKDgpLCByZWFkZXIpXG4gIGlmICh2ZXJzaW9uICE9PSAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIENJRCB2ZXJzaW9uICgke3ZlcnNpb259KWApXG4gIH1cbiAgY29uc3QgY29kZWMgPSBkZWNvZGVWYXJpbnQocmVhZGVyLnVwVG8oOCksIHJlYWRlcilcbiAgY29uc3QgYnl0ZXMgPSByZWFkZXIuZXhhY3RseShnZXRNdWx0aWhhc2hMZW5ndGgocmVhZGVyLnVwVG8oOCkpLCB0cnVlKVxuICBjb25zdCBtdWx0aWhhc2ggPSBEaWdlc3QuZGVjb2RlKGJ5dGVzKVxuICByZXR1cm4gQ0lELmNyZWF0ZSh2ZXJzaW9uLCBjb2RlYywgbXVsdGloYXNoKVxufVxuXG4vKipcbiAqIFJlYWRzIHRoZSBsZWFkaW5nIGRhdGEgb2YgYW4gaW5kaXZpZHVhbCBibG9jayBmcm9tIENBUiBkYXRhIGZyb20gYVxuICogYEJ5dGVzQnVmZmVyUmVhZGVyYC4gUmV0dXJucyBhIGBCbG9ja0hlYWRlcmAgb2JqZWN0IHdoaWNoIGNvbnRhaW5zXG4gKiBgeyBjaWQsIGxlbmd0aCwgYmxvY2tMZW5ndGggfWAgd2hpY2ggY2FuIGJlIHVzZWQgdG8gZWl0aGVyIGluZGV4IHRoZSBibG9ja1xuICogb3IgcmVhZCB0aGUgYmxvY2sgYmluYXJ5IGRhdGEuXG4gKlxuICogQG5hbWUgYXN5bmMgZGVjb2Rlci5yZWFkQmxvY2tIZWFkKHJlYWRlcilcbiAqIEBwYXJhbSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9IHJlYWRlclxuICogQHJldHVybnMge0Jsb2NrSGVhZGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVhZEJsb2NrSGVhZCAocmVhZGVyKSB7XG4gIC8vIGxlbmd0aCBpbmNsdWRlcyBhIENJRCArIEJpbmFyeSwgd2hlcmUgQ0lEIGhhcyBhIHZhcmlhYmxlIGxlbmd0aFxuICAvLyB3ZSBoYXZlIHRvIGRlYWwgd2l0aFxuICBjb25zdCBzdGFydCA9IHJlYWRlci5wb3NcbiAgbGV0IGxlbmd0aCA9IGRlY29kZVZhcmludChyZWFkZXIudXBUbyg4KSwgcmVhZGVyKVxuICBpZiAobGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIENBUiBzZWN0aW9uICh6ZXJvIGxlbmd0aCknKVxuICB9XG4gIGxlbmd0aCArPSAocmVhZGVyLnBvcyAtIHN0YXJ0KVxuICBjb25zdCBjaWQgPSByZWFkQ2lkKHJlYWRlcilcbiAgY29uc3QgYmxvY2tMZW5ndGggPSBsZW5ndGggLSBOdW1iZXIocmVhZGVyLnBvcyAtIHN0YXJ0KSAvLyBzdWJ0cmFjdCBDSUQgbGVuZ3RoXG5cbiAgcmV0dXJuIHsgY2lkLCBsZW5ndGgsIGJsb2NrTGVuZ3RoIH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIENhciBoZWFkZXIgYW5kIGJsb2NrcyBmcm9tIGEgVWludDhBcnJheVxuICpcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm5zIHt7IGhlYWRlciA6IENhckhlYWRlciB8IENhclYySGVhZGVyICwgYmxvY2tzOiBCbG9ja1tdfX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21CeXRlcyAoYnl0ZXMpIHtcbiAgbGV0IHJlYWRlciA9IGJ5dGVzUmVhZGVyKGJ5dGVzKVxuICBjb25zdCBoZWFkZXIgPSByZWFkSGVhZGVyKHJlYWRlcilcbiAgaWYgKGhlYWRlci52ZXJzaW9uID09PSAyKSB7XG4gICAgY29uc3QgdjFsZW5ndGggPSByZWFkZXIucG9zIC0gaGVhZGVyLmRhdGFPZmZzZXRcbiAgICByZWFkZXIgPSBsaW1pdFJlYWRlcihyZWFkZXIsIGhlYWRlci5kYXRhU2l6ZSAtIHYxbGVuZ3RoKVxuICB9XG5cbiAgY29uc3QgYmxvY2tzID0gW11cbiAgd2hpbGUgKHJlYWRlci51cFRvKDgpLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCB7IGNpZCwgYmxvY2tMZW5ndGggfSA9IHJlYWRCbG9ja0hlYWQocmVhZGVyKVxuXG4gICAgYmxvY2tzLnB1c2goeyBjaWQsIGJ5dGVzOiByZWFkZXIuZXhhY3RseShibG9ja0xlbmd0aCwgdHJ1ZSkgfSlcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaGVhZGVyLCBibG9ja3NcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBgQnl0ZXNCdWZmZXJSZWFkZXJgIGZyb20gYSBgVWludDhBcnJheWAuXG4gKlxuICogQG5hbWUgZGVjb2Rlci5ieXRlc1JlYWRlcihieXRlcylcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm5zIHtCeXRlc0J1ZmZlclJlYWRlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzUmVhZGVyIChieXRlcykge1xuICBsZXQgcG9zID0gMFxuXG4gIC8qKiBAdHlwZSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9ICovXG4gIHJldHVybiB7XG4gICAgdXBUbyAobGVuZ3RoKSB7XG4gICAgICByZXR1cm4gYnl0ZXMuc3ViYXJyYXkocG9zLCBwb3MgKyBNYXRoLm1pbihsZW5ndGgsIGJ5dGVzLmxlbmd0aCAtIHBvcykpXG4gICAgfSxcblxuICAgIGV4YWN0bHkgKGxlbmd0aCwgc2VlayA9IGZhbHNlKSB7XG4gICAgICBpZiAobGVuZ3RoID4gYnl0ZXMubGVuZ3RoIC0gcG9zKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCBlbmQgb2YgZGF0YScpXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG91dCA9IGJ5dGVzLnN1YmFycmF5KHBvcywgcG9zICsgbGVuZ3RoKVxuICAgICAgaWYgKHNlZWspIHtcbiAgICAgICAgcG9zICs9IGxlbmd0aFxuICAgICAgfVxuICAgICAgcmV0dXJuIG91dFxuICAgIH0sXG5cbiAgICBzZWVrIChsZW5ndGgpIHtcbiAgICAgIHBvcyArPSBsZW5ndGhcbiAgICB9LFxuXG4gICAgZ2V0IHBvcyAoKSB7XG4gICAgICByZXR1cm4gcG9zXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogV3JhcHMgYSBgQnl0ZXNCdWZmZXJSZWFkZXJgIGluIGEgbGltaXRpbmcgYEJ5dGVzQnVmZmVyUmVhZGVyYCB3aGljaCBsaW1pdHMgbWF4aW11bSByZWFkXG4gKiB0byBgYnl0ZUxpbWl0YCBieXRlcy4gSXQgX2RvZXMgbm90XyB1cGRhdGUgYHBvc2Agb2YgdGhlIG9yaWdpbmFsXG4gKiBgQnl0ZXNCdWZmZXJSZWFkZXJgLlxuICpcbiAqIEBuYW1lIGRlY29kZXIubGltaXRSZWFkZXIocmVhZGVyLCBieXRlTGltaXQpXG4gKiBAcGFyYW0ge0J5dGVzQnVmZmVyUmVhZGVyfSByZWFkZXJcbiAqIEBwYXJhbSB7bnVtYmVyfSBieXRlTGltaXRcbiAqIEByZXR1cm5zIHtCeXRlc0J1ZmZlclJlYWRlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxpbWl0UmVhZGVyIChyZWFkZXIsIGJ5dGVMaW1pdCkge1xuICBsZXQgYnl0ZXNSZWFkID0gMFxuXG4gIC8qKiBAdHlwZSB7Qnl0ZXNCdWZmZXJSZWFkZXJ9ICovXG4gIHJldHVybiB7XG4gICAgdXBUbyAobGVuZ3RoKSB7XG4gICAgICBsZXQgYnl0ZXMgPSByZWFkZXIudXBUbyhsZW5ndGgpXG4gICAgICBpZiAoYnl0ZXMubGVuZ3RoICsgYnl0ZXNSZWFkID4gYnl0ZUxpbWl0KSB7XG4gICAgICAgIGJ5dGVzID0gYnl0ZXMuc3ViYXJyYXkoMCwgYnl0ZUxpbWl0IC0gYnl0ZXNSZWFkKVxuICAgICAgfVxuICAgICAgcmV0dXJuIGJ5dGVzXG4gICAgfSxcblxuICAgIGV4YWN0bHkgKGxlbmd0aCwgc2VlayA9IGZhbHNlKSB7XG4gICAgICBjb25zdCBieXRlcyA9IHJlYWRlci5leGFjdGx5KGxlbmd0aCwgc2VlaylcbiAgICAgIGlmIChieXRlcy5sZW5ndGggKyBieXRlc1JlYWQgPiBieXRlTGltaXQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIGVuZCBvZiBkYXRhJylcbiAgICAgIH1cbiAgICAgIGlmIChzZWVrKSB7XG4gICAgICAgIGJ5dGVzUmVhZCArPSBsZW5ndGhcbiAgICAgIH1cbiAgICAgIHJldHVybiBieXRlc1xuICAgIH0sXG5cbiAgICBzZWVrIChsZW5ndGgpIHtcbiAgICAgIGJ5dGVzUmVhZCArPSBsZW5ndGhcbiAgICAgIHJlYWRlci5zZWVrKGxlbmd0aClcbiAgICB9LFxuXG4gICAgZ2V0IHBvcyAoKSB7XG4gICAgICByZXR1cm4gcmVhZGVyLnBvc1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-decoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-reader-browser.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-reader-browser.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarBufferReader: () => (/* binding */ CarBufferReader),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var _buffer_decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer-decoder.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-decoder.js\");\n\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').CarBufferReader} ICarBufferReader\n * @typedef {import('./coding.js').CarHeader} CarHeader\n * @typedef {import('./coding.js').CarV2Header} CarV2Header\n */\n\n/**\n * Provides blockstore-like access to a CAR.\n *\n * Implements the `RootsBufferReader` interface:\n * {@link ICarBufferReader.getRoots `getRoots()`}. And the `BlockBufferReader` interface:\n * {@link ICarBufferReader.get `get()`}, {@link ICarBufferReader.has `has()`},\n * {@link ICarBufferReader.blocks `blocks()`} and\n * {@link ICarBufferReader.cids `cids()`}.\n *\n * Load this class with either `import { CarBufferReader } from '@ipld/car/buffer-reader'`\n * (`const { CarBufferReader } = require('@ipld/car/buffer-reader')`). Or\n * `import { CarBufferReader } from '@ipld/car'` (`const { CarBufferReader } = require('@ipld/car')`).\n * The former will likely result in smaller bundle sizes where this is\n * important.\n *\n * @name CarBufferReader\n * @class\n * @implements {ICarBufferReader}\n * @property {number} version The version number of the CAR referenced by this\n * reader (should be `1` or `2`).\n */\nclass CarBufferReader {\n  /**\n   * @constructs CarBufferReader\n   * @param {CarHeader|CarV2Header} header\n   * @param {Block[]} blocks\n   */\n  constructor (header, blocks) {\n    this._header = header\n    this._blocks = blocks\n    this._cids = undefined\n  }\n\n  /**\n   * @property {number} version of the CAR\n   * @memberof CarBufferReader\n   * @instance\n   */\n  get version () {\n    return this._header.version\n  }\n\n  /**\n   * Get the list of roots defined by the CAR referenced by this reader. May be\n   * zero or more `CID`s.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {CID[]}\n   */\n  getRoots () {\n    return this._header.roots\n  }\n\n  /**\n   * Check whether a given `CID` exists within the CAR referenced by this\n   * reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @param {CID} key\n   * @returns {boolean}\n   */\n  has (key) {\n    return this._blocks.some(b => b.cid.equals(key))\n  }\n\n  /**\n   * Fetch a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) from the CAR\n   * referenced by this reader matching the provided `CID`. In the case where\n   * the provided `CID` doesn't exist within the CAR, `undefined` will be\n   * returned.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @param {CID} key\n   * @returns {Block | undefined}\n   */\n  get (key) {\n    return this._blocks.find(b => b.cid.equals(key))\n  }\n\n  /**\n   * Returns a `Block[]` of the `Block`s (`{ cid:CID, bytes:Uint8Array }` pairs) contained within\n   * the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {Block[]}\n   */\n  blocks () {\n    return this._blocks\n  }\n\n  /**\n   * Returns a `CID[]` of the `CID`s contained within the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {CID[]}\n   */\n  cids () {\n    if (!this._cids) {\n      this._cids = this._blocks.map(b => b.cid)\n    }\n    return this._cids\n  }\n\n  /**\n   * Instantiate a {@link CarBufferReader} from a `Uint8Array` blob. This performs a\n   * decode fully in memory and maintains the decoded state in memory for full\n   * access to the data via the `CarReader` API.\n   *\n   * @static\n   * @memberof CarBufferReader\n   * @param {Uint8Array} bytes\n   * @returns {CarBufferReader}\n   */\n  static fromBytes (bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array')\n    }\n\n    const { header, blocks } = _buffer_decoder_js__WEBPACK_IMPORTED_MODULE_0__.fromBytes(bytes)\n    return new CarBufferReader(header, blocks)\n  }\n}\n\nconst __browser = true\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2J1ZmZlci1yZWFkZXItYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0Q7O0FBRXBEO0FBQ0EsYUFBYSw0QkFBNEI7QUFDekMsYUFBYSwwQkFBMEI7QUFDdkMsYUFBYSxvQ0FBb0M7QUFDakQsYUFBYSxpQ0FBaUM7QUFDOUMsYUFBYSxtQ0FBbUM7QUFDaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDZDQUE2QztBQUNqRCxJQUFJLG1DQUFtQyxHQUFHLG1DQUFtQztBQUM3RSxJQUFJLDBDQUEwQztBQUM5QyxJQUFJLHFDQUFxQztBQUN6QztBQUNBLHlDQUF5QyxrQkFBa0I7QUFDM0QsYUFBYSxrQkFBa0I7QUFDL0IsYUFBYSxrQkFBa0IsNEJBQTRCLGtCQUFrQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsYUFBYSx1QkFBdUI7QUFDcEMsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsS0FBSztBQUNsQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkIsMkJBQTJCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZDQUE2QywyQkFBMkI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFlBQVk7QUFDekIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxpQkFBaUIsRUFBRSx5REFBdUI7QUFDdEQ7QUFDQTtBQUNBOztBQUVPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2J1ZmZlci1yZWFkZXItYnJvd3Nlci5qcz80MDgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEJ1ZmZlckRlY29kZXIgZnJvbSAnLi9idWZmZXItZGVjb2Rlci5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMnKS5DSUR9IENJRFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja30gQmxvY2tcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYXBpLmpzJykuQ2FyQnVmZmVyUmVhZGVyfSBJQ2FyQnVmZmVyUmVhZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkNhckhlYWRlcn0gQ2FySGVhZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkNhclYySGVhZGVyfSBDYXJWMkhlYWRlclxuICovXG5cbi8qKlxuICogUHJvdmlkZXMgYmxvY2tzdG9yZS1saWtlIGFjY2VzcyB0byBhIENBUi5cbiAqXG4gKiBJbXBsZW1lbnRzIHRoZSBgUm9vdHNCdWZmZXJSZWFkZXJgIGludGVyZmFjZTpcbiAqIHtAbGluayBJQ2FyQnVmZmVyUmVhZGVyLmdldFJvb3RzIGBnZXRSb290cygpYH0uIEFuZCB0aGUgYEJsb2NrQnVmZmVyUmVhZGVyYCBpbnRlcmZhY2U6XG4gKiB7QGxpbmsgSUNhckJ1ZmZlclJlYWRlci5nZXQgYGdldCgpYH0sIHtAbGluayBJQ2FyQnVmZmVyUmVhZGVyLmhhcyBgaGFzKClgfSxcbiAqIHtAbGluayBJQ2FyQnVmZmVyUmVhZGVyLmJsb2NrcyBgYmxvY2tzKClgfSBhbmRcbiAqIHtAbGluayBJQ2FyQnVmZmVyUmVhZGVyLmNpZHMgYGNpZHMoKWB9LlxuICpcbiAqIExvYWQgdGhpcyBjbGFzcyB3aXRoIGVpdGhlciBgaW1wb3J0IHsgQ2FyQnVmZmVyUmVhZGVyIH0gZnJvbSAnQGlwbGQvY2FyL2J1ZmZlci1yZWFkZXInYFxuICogKGBjb25zdCB7IENhckJ1ZmZlclJlYWRlciB9ID0gcmVxdWlyZSgnQGlwbGQvY2FyL2J1ZmZlci1yZWFkZXInKWApLiBPclxuICogYGltcG9ydCB7IENhckJ1ZmZlclJlYWRlciB9IGZyb20gJ0BpcGxkL2NhcidgIChgY29uc3QgeyBDYXJCdWZmZXJSZWFkZXIgfSA9IHJlcXVpcmUoJ0BpcGxkL2NhcicpYCkuXG4gKiBUaGUgZm9ybWVyIHdpbGwgbGlrZWx5IHJlc3VsdCBpbiBzbWFsbGVyIGJ1bmRsZSBzaXplcyB3aGVyZSB0aGlzIGlzXG4gKiBpbXBvcnRhbnQuXG4gKlxuICogQG5hbWUgQ2FyQnVmZmVyUmVhZGVyXG4gKiBAY2xhc3NcbiAqIEBpbXBsZW1lbnRzIHtJQ2FyQnVmZmVyUmVhZGVyfVxuICogQHByb3BlcnR5IHtudW1iZXJ9IHZlcnNpb24gVGhlIHZlcnNpb24gbnVtYmVyIG9mIHRoZSBDQVIgcmVmZXJlbmNlZCBieSB0aGlzXG4gKiByZWFkZXIgKHNob3VsZCBiZSBgMWAgb3IgYDJgKS5cbiAqL1xuZXhwb3J0IGNsYXNzIENhckJ1ZmZlclJlYWRlciB7XG4gIC8qKlxuICAgKiBAY29uc3RydWN0cyBDYXJCdWZmZXJSZWFkZXJcbiAgICogQHBhcmFtIHtDYXJIZWFkZXJ8Q2FyVjJIZWFkZXJ9IGhlYWRlclxuICAgKiBAcGFyYW0ge0Jsb2NrW119IGJsb2Nrc1xuICAgKi9cbiAgY29uc3RydWN0b3IgKGhlYWRlciwgYmxvY2tzKSB7XG4gICAgdGhpcy5faGVhZGVyID0gaGVhZGVyXG4gICAgdGhpcy5fYmxvY2tzID0gYmxvY2tzXG4gICAgdGhpcy5fY2lkcyA9IHVuZGVmaW5lZFxuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSB2ZXJzaW9uIG9mIHRoZSBDQVJcbiAgICogQG1lbWJlcm9mIENhckJ1ZmZlclJlYWRlclxuICAgKiBAaW5zdGFuY2VcbiAgICovXG4gIGdldCB2ZXJzaW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5faGVhZGVyLnZlcnNpb25cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGxpc3Qgb2Ygcm9vdHMgZGVmaW5lZCBieSB0aGUgQ0FSIHJlZmVyZW5jZWQgYnkgdGhpcyByZWFkZXIuIE1heSBiZVxuICAgKiB6ZXJvIG9yIG1vcmUgYENJRGBzLlxuICAgKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIENhckJ1ZmZlclJlYWRlclxuICAgKiBAaW5zdGFuY2VcbiAgICogQHJldHVybnMge0NJRFtdfVxuICAgKi9cbiAgZ2V0Um9vdHMgKCkge1xuICAgIHJldHVybiB0aGlzLl9oZWFkZXIucm9vdHNcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB3aGV0aGVyIGEgZ2l2ZW4gYENJRGAgZXhpc3RzIHdpdGhpbiB0aGUgQ0FSIHJlZmVyZW5jZWQgYnkgdGhpc1xuICAgKiByZWFkZXIuXG4gICAqXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbWVtYmVyb2YgQ2FyQnVmZmVyUmVhZGVyXG4gICAqIEBpbnN0YW5jZVxuICAgKiBAcGFyYW0ge0NJRH0ga2V5XG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgaGFzIChrZXkpIHtcbiAgICByZXR1cm4gdGhpcy5fYmxvY2tzLnNvbWUoYiA9PiBiLmNpZC5lcXVhbHMoa2V5KSlcbiAgfVxuXG4gIC8qKlxuICAgKiBGZXRjaCBhIGBCbG9ja2AgKGEgYHsgY2lkOkNJRCwgYnl0ZXM6VWludDhBcnJheSB9YCBwYWlyKSBmcm9tIHRoZSBDQVJcbiAgICogcmVmZXJlbmNlZCBieSB0aGlzIHJlYWRlciBtYXRjaGluZyB0aGUgcHJvdmlkZWQgYENJRGAuIEluIHRoZSBjYXNlIHdoZXJlXG4gICAqIHRoZSBwcm92aWRlZCBgQ0lEYCBkb2Vzbid0IGV4aXN0IHdpdGhpbiB0aGUgQ0FSLCBgdW5kZWZpbmVkYCB3aWxsIGJlXG4gICAqIHJldHVybmVkLlxuICAgKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIENhckJ1ZmZlclJlYWRlclxuICAgKiBAaW5zdGFuY2VcbiAgICogQHBhcmFtIHtDSUR9IGtleVxuICAgKiBAcmV0dXJucyB7QmxvY2sgfCB1bmRlZmluZWR9XG4gICAqL1xuICBnZXQgKGtleSkge1xuICAgIHJldHVybiB0aGlzLl9ibG9ja3MuZmluZChiID0+IGIuY2lkLmVxdWFscyhrZXkpKVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBgQmxvY2tbXWAgb2YgdGhlIGBCbG9ja2BzIChgeyBjaWQ6Q0lELCBieXRlczpVaW50OEFycmF5IH1gIHBhaXJzKSBjb250YWluZWQgd2l0aGluXG4gICAqIHRoZSBDQVIgcmVmZXJlbmNlZCBieSB0aGlzIHJlYWRlci5cbiAgICpcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQGluc3RhbmNlXG4gICAqIEByZXR1cm5zIHtCbG9ja1tdfVxuICAgKi9cbiAgYmxvY2tzICgpIHtcbiAgICByZXR1cm4gdGhpcy5fYmxvY2tzXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIGBDSURbXWAgb2YgdGhlIGBDSURgcyBjb250YWluZWQgd2l0aGluIHRoZSBDQVIgcmVmZXJlbmNlZCBieSB0aGlzIHJlYWRlci5cbiAgICpcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQGluc3RhbmNlXG4gICAqIEByZXR1cm5zIHtDSURbXX1cbiAgICovXG4gIGNpZHMgKCkge1xuICAgIGlmICghdGhpcy5fY2lkcykge1xuICAgICAgdGhpcy5fY2lkcyA9IHRoaXMuX2Jsb2Nrcy5tYXAoYiA9PiBiLmNpZClcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX2NpZHNcbiAgfVxuXG4gIC8qKlxuICAgKiBJbnN0YW50aWF0ZSBhIHtAbGluayBDYXJCdWZmZXJSZWFkZXJ9IGZyb20gYSBgVWludDhBcnJheWAgYmxvYi4gVGhpcyBwZXJmb3JtcyBhXG4gICAqIGRlY29kZSBmdWxseSBpbiBtZW1vcnkgYW5kIG1haW50YWlucyB0aGUgZGVjb2RlZCBzdGF0ZSBpbiBtZW1vcnkgZm9yIGZ1bGxcbiAgICogYWNjZXNzIHRvIHRoZSBkYXRhIHZpYSB0aGUgYENhclJlYWRlcmAgQVBJLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICAgKiBAcmV0dXJucyB7Q2FyQnVmZmVyUmVhZGVyfVxuICAgKi9cbiAgc3RhdGljIGZyb21CeXRlcyAoYnl0ZXMpIHtcbiAgICBpZiAoIShieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdmcm9tQnl0ZXMoKSByZXF1aXJlcyBhIFVpbnQ4QXJyYXknKVxuICAgIH1cblxuICAgIGNvbnN0IHsgaGVhZGVyLCBibG9ja3MgfSA9IEJ1ZmZlckRlY29kZXIuZnJvbUJ5dGVzKGJ5dGVzKVxuICAgIHJldHVybiBuZXcgQ2FyQnVmZmVyUmVhZGVyKGhlYWRlciwgYmxvY2tzKVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBfX2Jyb3dzZXIgPSB0cnVlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-reader-browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-reader.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-reader.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarBufferReader: () => (/* binding */ CarBufferReader),\n/* harmony export */   __browser: () => (/* binding */ __browser)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var _buffer_reader_browser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer-reader-browser.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-reader-browser.js\");\n\n\n\n/**\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').BlockIndex} BlockIndex\n * @typedef {import('./api.js').CarBufferReader} ICarBufferReader\n */\n\nconst fsread = fs__WEBPACK_IMPORTED_MODULE_0__.readSync\n\n/**\n * @class\n * @implements {ICarBufferReader}\n */\nclass CarBufferReader extends _buffer_reader_browser_js__WEBPACK_IMPORTED_MODULE_1__.CarBufferReader {\n  /**\n   * Reads a block directly from a file descriptor for an open CAR file. This\n   * function is **only available in Node.js** and not a browser environment.\n   *\n   * This function can be used in connection with {@link CarIndexer} which emits\n   * the `BlockIndex` objects that are required by this function.\n   *\n   * The user is responsible for opening and closing the file used in this call.\n   *\n   * @static\n   * @memberof CarBufferReader\n   * @param {number} fd - A file descriptor from the\n   * Node.js `fs` module. An integer, from `fs.open()`.\n   * @param {BlockIndex} blockIndex - An index pointing to the location of the\n   * Block required. This `BlockIndex` should take the form:\n   * `{cid:CID, blockLength:number, blockOffset:number}`.\n   * @returns {Block} A `{ cid:CID, bytes:Uint8Array }` pair.\n   */\n  static readRaw (fd, blockIndex) {\n    const { cid, blockLength, blockOffset } = blockIndex\n    const bytes = new Uint8Array(blockLength)\n    let read\n    if (typeof fd === 'number') {\n      read = fsread(fd, bytes, 0, blockLength, blockOffset)\n    } else {\n      throw new TypeError('Bad fd')\n    }\n    if (read !== blockLength) {\n      throw new Error(`Failed to read entire block (${read} instead of ${blockLength})`)\n    }\n    return { cid, bytes }\n  }\n}\n\nconst __browser = false\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2J1ZmZlci1yZWFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtQjtBQUNtRTs7QUFFdEY7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLG9DQUFvQztBQUNqRDs7QUFFQSxlQUFlLHdDQUFXOztBQUUxQjtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ08sOEJBQThCLHNFQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxrQkFBa0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCO0FBQ0EsT0FBTyxnREFBZ0Q7QUFDdkQsZUFBZSxPQUFPLEtBQUssMkJBQTJCO0FBQ3REO0FBQ0E7QUFDQSxZQUFZLGdDQUFnQztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsTUFBTSxhQUFhLFlBQVk7QUFDckY7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFTyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvQGlwbGQvY2FyL3NyYy9idWZmZXItcmVhZGVyLmpzPzg3Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IHsgQ2FyQnVmZmVyUmVhZGVyIGFzIEJyb3dzZXJDYXJCdWZmZXJSZWFkZXIgfSBmcm9tICcuL2J1ZmZlci1yZWFkZXItYnJvd3Nlci5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkJsb2NrfSBCbG9ja1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9hcGkuanMnKS5CbG9ja0luZGV4fSBCbG9ja0luZGV4XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2FwaS5qcycpLkNhckJ1ZmZlclJlYWRlcn0gSUNhckJ1ZmZlclJlYWRlclxuICovXG5cbmNvbnN0IGZzcmVhZCA9IGZzLnJlYWRTeW5jXG5cbi8qKlxuICogQGNsYXNzXG4gKiBAaW1wbGVtZW50cyB7SUNhckJ1ZmZlclJlYWRlcn1cbiAqL1xuZXhwb3J0IGNsYXNzIENhckJ1ZmZlclJlYWRlciBleHRlbmRzIEJyb3dzZXJDYXJCdWZmZXJSZWFkZXIge1xuICAvKipcbiAgICogUmVhZHMgYSBibG9jayBkaXJlY3RseSBmcm9tIGEgZmlsZSBkZXNjcmlwdG9yIGZvciBhbiBvcGVuIENBUiBmaWxlLiBUaGlzXG4gICAqIGZ1bmN0aW9uIGlzICoqb25seSBhdmFpbGFibGUgaW4gTm9kZS5qcyoqIGFuZCBub3QgYSBicm93c2VyIGVudmlyb25tZW50LlxuICAgKlxuICAgKiBUaGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIGluIGNvbm5lY3Rpb24gd2l0aCB7QGxpbmsgQ2FySW5kZXhlcn0gd2hpY2ggZW1pdHNcbiAgICogdGhlIGBCbG9ja0luZGV4YCBvYmplY3RzIHRoYXQgYXJlIHJlcXVpcmVkIGJ5IHRoaXMgZnVuY3Rpb24uXG4gICAqXG4gICAqIFRoZSB1c2VyIGlzIHJlc3BvbnNpYmxlIGZvciBvcGVuaW5nIGFuZCBjbG9zaW5nIHRoZSBmaWxlIHVzZWQgaW4gdGhpcyBjYWxsLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJvZiBDYXJCdWZmZXJSZWFkZXJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGZkIC0gQSBmaWxlIGRlc2NyaXB0b3IgZnJvbSB0aGVcbiAgICogTm9kZS5qcyBgZnNgIG1vZHVsZS4gQW4gaW50ZWdlciwgZnJvbSBgZnMub3BlbigpYC5cbiAgICogQHBhcmFtIHtCbG9ja0luZGV4fSBibG9ja0luZGV4IC0gQW4gaW5kZXggcG9pbnRpbmcgdG8gdGhlIGxvY2F0aW9uIG9mIHRoZVxuICAgKiBCbG9jayByZXF1aXJlZC4gVGhpcyBgQmxvY2tJbmRleGAgc2hvdWxkIHRha2UgdGhlIGZvcm06XG4gICAqIGB7Y2lkOkNJRCwgYmxvY2tMZW5ndGg6bnVtYmVyLCBibG9ja09mZnNldDpudW1iZXJ9YC5cbiAgICogQHJldHVybnMge0Jsb2NrfSBBIGB7IGNpZDpDSUQsIGJ5dGVzOlVpbnQ4QXJyYXkgfWAgcGFpci5cbiAgICovXG4gIHN0YXRpYyByZWFkUmF3IChmZCwgYmxvY2tJbmRleCkge1xuICAgIGNvbnN0IHsgY2lkLCBibG9ja0xlbmd0aCwgYmxvY2tPZmZzZXQgfSA9IGJsb2NrSW5kZXhcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGJsb2NrTGVuZ3RoKVxuICAgIGxldCByZWFkXG4gICAgaWYgKHR5cGVvZiBmZCA9PT0gJ251bWJlcicpIHtcbiAgICAgIHJlYWQgPSBmc3JlYWQoZmQsIGJ5dGVzLCAwLCBibG9ja0xlbmd0aCwgYmxvY2tPZmZzZXQpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0JhZCBmZCcpXG4gICAgfVxuICAgIGlmIChyZWFkICE9PSBibG9ja0xlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcmVhZCBlbnRpcmUgYmxvY2sgKCR7cmVhZH0gaW5zdGVhZCBvZiAke2Jsb2NrTGVuZ3RofSlgKVxuICAgIH1cbiAgICByZXR1cm4geyBjaWQsIGJ5dGVzIH1cbiAgfVxufVxuXG5leHBvcnQgY29uc3QgX19icm93c2VyID0gZmFsc2VcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-writer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-writer.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBlock: () => (/* binding */ addBlock),\n/* harmony export */   addRoot: () => (/* binding */ addRoot),\n/* harmony export */   blockLength: () => (/* binding */ blockLength),\n/* harmony export */   calculateHeaderLength: () => (/* binding */ calculateHeaderLength),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   createWriter: () => (/* binding */ createWriter),\n/* harmony export */   estimateHeaderLength: () => (/* binding */ estimateHeaderLength),\n/* harmony export */   headerLength: () => (/* binding */ headerLength),\n/* harmony export */   resizeHeader: () => (/* binding */ resizeHeader)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/cborg.js\");\n/* harmony import */ var cborg_length__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cborg/length */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/length.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n\n\n\n\n\n/**\n * @typedef {import('./api.js').CID} CID\n * @typedef {import('./api.js').Block} Block\n * @typedef {import('./api.js').CarBufferWriter} Writer\n * @typedef {import('./api.js').CarBufferWriterOptions} Options\n * @typedef {import('./coding.js').CarEncoder} CarEncoder\n */\n\n/**\n * A simple CAR writer that writes to a pre-allocated buffer.\n *\n * @class\n * @name CarBufferWriter\n * @implements {Writer}\n */\nclass CarBufferWriter {\n  /**\n   * @param {Uint8Array} bytes\n   * @param {number} headerSize\n   */\n  constructor (bytes, headerSize) {\n    /** @readonly */\n    this.bytes = bytes\n    this.byteOffset = headerSize\n\n    /**\n     * @readonly\n     * @type {CID[]}\n     */\n    this.roots = []\n    this.headerSize = headerSize\n  }\n\n  /**\n   * Add a root to this writer, to be used to create a header when the CAR is\n   * finalized with {@link CarBufferWriter.close `close()`}\n   *\n   * @param {CID} root\n   * @param {{resize?:boolean}} [options]\n   * @returns {CarBufferWriter}\n   */\n  addRoot (root, options) {\n    addRoot(this, root, options)\n    return this\n  }\n\n  /**\n   * Write a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) to the archive.\n   * Throws if there is not enough capacity.\n   *\n   * @param {Block} block - A `{ cid:CID, bytes:Uint8Array }` pair.\n   * @returns {CarBufferWriter}\n   */\n  write (block) {\n    addBlock(this, block)\n    return this\n  }\n\n  /**\n   * Finalize the CAR and return it as a `Uint8Array`.\n   *\n   * @param {object} [options]\n   * @param {boolean} [options.resize]\n   * @returns {Uint8Array}\n   */\n  close (options) {\n    return close(this, options)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {CID} root\n * @param {{resize?:boolean}} [options]\n */\nconst addRoot = (writer, root, options = {}) => {\n  const { resize = false } = options\n  const { bytes, headerSize, byteOffset, roots } = writer\n  writer.roots.push(root)\n  const size = headerLength(writer)\n  // If there is not enough space for the new root\n  if (size > headerSize) {\n    // Check if we root would fit if we were to resize the head.\n    if (size - headerSize + byteOffset < bytes.byteLength) {\n      // If resize is enabled resize head\n      if (resize) {\n        resizeHeader(writer, size)\n      // otherwise remove head and throw an error suggesting to resize\n      } else {\n        roots.pop()\n        throw new RangeError(`Header of size ${headerSize} has no capacity for new root ${root}.\n  However there is a space in the buffer and you could call addRoot(root, { resize: root }) to resize header to make a space for this root.`)\n      }\n    // If head would not fit even with resize pop new root and throw error\n    } else {\n      roots.pop()\n      throw new RangeError(`Buffer has no capacity for a new root ${root}`)\n    }\n  }\n}\n\n/**\n * Calculates number of bytes required for storing given block in CAR. Useful in\n * estimating size of an `ArrayBuffer` for the `CarBufferWriter`.\n *\n * @name CarBufferWriter.blockLength(Block)\n * @param {Block} block\n * @returns {number}\n */\nconst blockLength = ({ cid, bytes }) => {\n  const size = cid.bytes.byteLength + bytes.byteLength\n  return varint__WEBPACK_IMPORTED_MODULE_3__.encodingLength(size) + size\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {Block} block\n */\nconst addBlock = (writer, { cid, bytes }) => {\n  const byteLength = cid.bytes.byteLength + bytes.byteLength\n  const size = varint__WEBPACK_IMPORTED_MODULE_3__.encode(byteLength)\n  if (writer.byteOffset + size.length + byteLength > writer.bytes.byteLength) {\n    throw new RangeError('Buffer has no capacity for this block')\n  } else {\n    writeBytes(writer, size)\n    writeBytes(writer, cid.bytes)\n    writeBytes(writer, bytes)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {object} [options]\n * @param {boolean} [options.resize]\n */\nconst close = (writer, options = {}) => {\n  const { resize = false } = options\n  const { roots, bytes, byteOffset, headerSize } = writer\n\n  const headerBytes = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_0__.encode({ version: 1, roots })\n  const varintBytes = varint__WEBPACK_IMPORTED_MODULE_3__.encode(headerBytes.length)\n\n  const size = varintBytes.length + headerBytes.byteLength\n  const offset = headerSize - size\n\n  // If header size estimate was accurate we just write header and return\n  // view into buffer.\n  if (offset === 0) {\n    writeHeader(writer, varintBytes, headerBytes)\n    return bytes.subarray(0, byteOffset)\n    // If header was overestimated and `{resize: true}` is passed resize header\n  } else if (resize) {\n    resizeHeader(writer, size)\n    writeHeader(writer, varintBytes, headerBytes)\n    return bytes.subarray(0, writer.byteOffset)\n  } else {\n    throw new RangeError(`Header size was overestimated.\nYou can use close({ resize: true }) to resize header`)\n  }\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {number} byteLength\n */\nconst resizeHeader = (writer, byteLength) => {\n  const { bytes, headerSize } = writer\n  // Move data section to a new offset\n  bytes.set(bytes.subarray(headerSize, writer.byteOffset), byteLength)\n  // Update header size & byteOffset\n  writer.byteOffset += byteLength - headerSize\n  writer.headerSize = byteLength\n}\n\n/**\n * @param {CarBufferWriter} writer\n * @param {number[]|Uint8Array} bytes\n */\n\nconst writeBytes = (writer, bytes) => {\n  writer.bytes.set(bytes, writer.byteOffset)\n  writer.byteOffset += bytes.length\n}\n/**\n * @param {{bytes:Uint8Array}} writer\n * @param {number[]} varint\n * @param {Uint8Array} header\n */\nconst writeHeader = ({ bytes }, varint, header) => {\n  bytes.set(varint)\n  bytes.set(header, varint.length)\n}\n\nconst headerPreludeTokens = [\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.map, 2),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.string, 'version'),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.uint, 1),\n  new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.string, 'roots')\n]\n\nconst CID_TAG = new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.tag, 42)\n\n/**\n * Calculates header size given the array of byteLength for roots.\n *\n * @name CarBufferWriter.calculateHeaderLength(rootLengths)\n * @param {number[]} rootLengths\n * @returns {number}\n */\nconst calculateHeaderLength = (rootLengths) => {\n  const tokens = [...headerPreludeTokens]\n  tokens.push(new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.array, rootLengths.length))\n  for (const rootLength of rootLengths) {\n    tokens.push(CID_TAG)\n    tokens.push(new cborg__WEBPACK_IMPORTED_MODULE_1__.Token(cborg__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, { length: rootLength + 1 }))\n  }\n  const length = (0,cborg_length__WEBPACK_IMPORTED_MODULE_2__.tokensToLength)(tokens) // no options needed here because we have simple tokens\n  return varint__WEBPACK_IMPORTED_MODULE_3__.encodingLength(length) + length\n}\n\n/**\n * Calculates header size given the array of roots.\n *\n * @name CarBufferWriter.headerLength({ roots })\n * @param {object} options\n * @param {CID[]} options.roots\n * @returns {number}\n */\nconst headerLength = ({ roots }) =>\n  calculateHeaderLength(roots.map(cid => cid.bytes.byteLength))\n\n/**\n * Estimates header size given a count of the roots and the expected byte length\n * of the root CIDs. The default length works for a standard CIDv1 with a\n * single-byte multihash code, such as SHA2-256 (i.e. the most common CIDv1).\n *\n * @name CarBufferWriter.estimateHeaderLength(rootCount[, rootByteLength])\n * @param {number} rootCount\n * @param {number} [rootByteLength]\n * @returns {number}\n */\nconst estimateHeaderLength = (rootCount, rootByteLength = 36) =>\n  calculateHeaderLength(new Array(rootCount).fill(rootByteLength))\n\n/**\n * Creates synchronous CAR writer that can be used to encode blocks into a given\n * buffer. Optionally you could pass `byteOffset` and `byteLength` to specify a\n * range inside buffer to write into. If car file is going to have `roots` you\n * need to either pass them under `options.roots` (from which header size will\n * be calculated) or provide `options.headerSize` to allocate required space\n * in the buffer. You may also provide known `roots` and `headerSize` to\n * allocate space for the roots that may not be known ahead of time.\n *\n * Note: Incorrect `headerSize` may lead to copying bytes inside a buffer\n * which will have a negative impact on performance.\n *\n * @name CarBufferWriter.createWriter(buffer[, options])\n * @param {ArrayBuffer} buffer\n * @param {object} [options]\n * @param {CID[]} [options.roots]\n * @param {number} [options.byteOffset]\n * @param {number} [options.byteLength]\n * @param {number} [options.headerSize]\n * @returns {CarBufferWriter}\n */\nconst createWriter = (buffer, options = {}) => {\n  const {\n    roots = [],\n    byteOffset = 0,\n    byteLength = buffer.byteLength,\n    headerSize = headerLength({ roots })\n  } = options\n  const bytes = new Uint8Array(buffer, byteOffset, byteLength)\n\n  const writer = new CarBufferWriter(bytes, headerSize)\n  for (const root of roots) {\n    writer.addRoot(root)\n  }\n\n  return writer\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/decoder-common.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/@ipld/car/src/decoder-common.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CIDV0_BYTES: () => (/* binding */ CIDV0_BYTES),\n/* harmony export */   V2_HEADER_LENGTH: () => (/* binding */ V2_HEADER_LENGTH),\n/* harmony export */   decodeV2Header: () => (/* binding */ decodeV2Header),\n/* harmony export */   decodeVarint: () => (/* binding */ decodeVarint),\n/* harmony export */   getMultihashLength: () => (/* binding */ getMultihashLength)\n/* harmony export */ });\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n\n\nconst CIDV0_BYTES = {\n  SHA2_256: 0x12,\n  LENGTH: 0x20,\n  DAG_PB: 0x70\n}\n\nconst V2_HEADER_LENGTH = /* characteristics */ 16 /* v1 offset */ + 8 /* v1 size */ + 8 /* index offset */ + 8\n\n/**\n * Decodes varint and seeks the buffer\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @param {import('./coding.js').Seekable} seeker\n * @returns {number}\n */\nfunction decodeVarint (bytes, seeker) {\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data')\n  }\n  const i = varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes)\n  seeker.seek(/** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes))\n  return i\n}\n\n/**\n * Decode v2 header\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.exactly(V2_HEADER_LENGTH, true) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @returns {import('./coding.js').CarV2FixedHeader}\n */\nfunction decodeV2Header (bytes) {\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  let offset = 0\n  const header = {\n    version: 2,\n    /** @type {[bigint, bigint]} */\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  }\n  return header\n}\n\n/**\n * Checks the length of the multihash to be read afterwards\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n */\nfunction getMultihashLength (bytes) {\n  // | code | length | .... |\n  // where both code and length are varints, so we have to decode\n  // them first before we can know total length\n\n  varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes) // code\n  const codeLength = /** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes)\n  const length = varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes.subarray(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes))\n  const lengthLength = /** @type {number} */(varint__WEBPACK_IMPORTED_MODULE_0__.decode.bytes)\n  const mhLength = codeLength + lengthLength + length\n\n  return mhLength\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2RlY29kZXItY29tbW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQjs7QUFFcEI7QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsZ0NBQWdDO0FBQzNDLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwQ0FBYTtBQUN6Qix5QkFBeUIsUUFBUSxHQUFHLDBDQUFhO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNPO0FBQ1A7QUFDQTtBQUNBOztBQUVBLEVBQUUsMENBQWE7QUFDZixnQ0FBZ0MsUUFBUSxHQUFHLDBDQUFhO0FBQ3hELGlCQUFpQiwwQ0FBYSxnQkFBZ0IsMENBQWE7QUFDM0Qsa0NBQWtDLFFBQVEsR0FBRywwQ0FBYTtBQUMxRDs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9AaXBsZC9jYXIvc3JjL2RlY29kZXItY29tbW9uLmpzPzc2NWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhcmludCBmcm9tICd2YXJpbnQnXG5cbmV4cG9ydCBjb25zdCBDSURWMF9CWVRFUyA9IHtcbiAgU0hBMl8yNTY6IDB4MTIsXG4gIExFTkdUSDogMHgyMCxcbiAgREFHX1BCOiAweDcwXG59XG5cbmV4cG9ydCBjb25zdCBWMl9IRUFERVJfTEVOR1RIID0gLyogY2hhcmFjdGVyaXN0aWNzICovIDE2IC8qIHYxIG9mZnNldCAqLyArIDggLyogdjEgc2l6ZSAqLyArIDggLyogaW5kZXggb2Zmc2V0ICovICsgOFxuXG4vKipcbiAqIERlY29kZXMgdmFyaW50IGFuZCBzZWVrcyB0aGUgYnVmZmVyXG4gKlxuICogYGBganNcbiAqIC8vIG5lZWRzIGJ5dGVzIHRvIGJlIHJlYWQgZmlyc3RcbiAqIGNvbnN0IGJ5dGVzID0gcmVhZGVyLnVwVG8oOCkgLy8gbWF5YmUgYXN5bmNcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2NvZGluZy5qcycpLlNlZWthYmxlfSBzZWVrZXJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVWYXJpbnQgKGJ5dGVzLCBzZWVrZXIpIHtcbiAgaWYgKCFieXRlcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgZW5kIG9mIGRhdGEnKVxuICB9XG4gIGNvbnN0IGkgPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKVxuICBzZWVrZXIuc2VlaygvKiogQHR5cGUge251bWJlcn0gKi8odmFyaW50LmRlY29kZS5ieXRlcykpXG4gIHJldHVybiBpXG59XG5cbi8qKlxuICogRGVjb2RlIHYyIGhlYWRlclxuICpcbiAqIGBgYGpzXG4gKiAvLyBuZWVkcyBieXRlcyB0byBiZSByZWFkIGZpcnN0XG4gKiBjb25zdCBieXRlcyA9IHJlYWRlci5leGFjdGx5KFYyX0hFQURFUl9MRU5HVEgsIHRydWUpIC8vIG1heWJlIGFzeW5jXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL2NvZGluZy5qcycpLkNhclYyRml4ZWRIZWFkZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVWMkhlYWRlciAoYnl0ZXMpIHtcbiAgY29uc3QgZHYgPSBuZXcgRGF0YVZpZXcoYnl0ZXMuYnVmZmVyLCBieXRlcy5ieXRlT2Zmc2V0LCBieXRlcy5ieXRlTGVuZ3RoKVxuICBsZXQgb2Zmc2V0ID0gMFxuICBjb25zdCBoZWFkZXIgPSB7XG4gICAgdmVyc2lvbjogMixcbiAgICAvKiogQHR5cGUge1tiaWdpbnQsIGJpZ2ludF19ICovXG4gICAgY2hhcmFjdGVyaXN0aWNzOiBbXG4gICAgICBkdi5nZXRCaWdVaW50NjQob2Zmc2V0LCB0cnVlKSxcbiAgICAgIGR2LmdldEJpZ1VpbnQ2NChvZmZzZXQgKz0gOCwgdHJ1ZSlcbiAgICBdLFxuICAgIGRhdGFPZmZzZXQ6IE51bWJlcihkdi5nZXRCaWdVaW50NjQob2Zmc2V0ICs9IDgsIHRydWUpKSxcbiAgICBkYXRhU2l6ZTogTnVtYmVyKGR2LmdldEJpZ1VpbnQ2NChvZmZzZXQgKz0gOCwgdHJ1ZSkpLFxuICAgIGluZGV4T2Zmc2V0OiBOdW1iZXIoZHYuZ2V0QmlnVWludDY0KG9mZnNldCArPSA4LCB0cnVlKSlcbiAgfVxuICByZXR1cm4gaGVhZGVyXG59XG5cbi8qKlxuICogQ2hlY2tzIHRoZSBsZW5ndGggb2YgdGhlIG11bHRpaGFzaCB0byBiZSByZWFkIGFmdGVyd2FyZHNcbiAqXG4gKiBgYGBqc1xuICogLy8gbmVlZHMgYnl0ZXMgdG8gYmUgcmVhZCBmaXJzdFxuICogY29uc3QgYnl0ZXMgPSByZWFkZXIudXBUbyg4KSAvLyBtYXliZSBhc3luY1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TXVsdGloYXNoTGVuZ3RoIChieXRlcykge1xuICAvLyB8IGNvZGUgfCBsZW5ndGggfCAuLi4uIHxcbiAgLy8gd2hlcmUgYm90aCBjb2RlIGFuZCBsZW5ndGggYXJlIHZhcmludHMsIHNvIHdlIGhhdmUgdG8gZGVjb2RlXG4gIC8vIHRoZW0gZmlyc3QgYmVmb3JlIHdlIGNhbiBrbm93IHRvdGFsIGxlbmd0aFxuXG4gIHZhcmludC5kZWNvZGUoYnl0ZXMpIC8vIGNvZGVcbiAgY29uc3QgY29kZUxlbmd0aCA9IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyh2YXJpbnQuZGVjb2RlLmJ5dGVzKVxuICBjb25zdCBsZW5ndGggPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHZhcmludC5kZWNvZGUuYnl0ZXMpKVxuICBjb25zdCBsZW5ndGhMZW5ndGggPSAvKiogQHR5cGUge251bWJlcn0gKi8odmFyaW50LmRlY29kZS5ieXRlcylcbiAgY29uc3QgbWhMZW5ndGggPSBjb2RlTGVuZ3RoICsgbGVuZ3RoTGVuZ3RoICsgbGVuZ3RoXG5cbiAgcmV0dXJuIG1oTGVuZ3RoXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/decoder-common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/header-validator.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/@ipld/car/src/header-validator.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CarV1HeaderOrV2Pragma: () => (/* binding */ CarV1HeaderOrV2Pragma)\n/* harmony export */ });\n/* eslint-disable jsdoc/check-indentation, max-depth */\n\n/**\n * Auto-generated with @ipld/schema@v4.2.0 at Thu Sep 14 2023 from IPLD Schema:\n *\n * # CarV1HeaderOrV2Pragma is a more relaxed form, and can parse {version:x} where\n * # roots are optional. This is typically useful for the {verison:2} CARv2\n * # pragma.\n *\n * type CarV1HeaderOrV2Pragma struct {\n *   roots optional [&Any]\n *   # roots is _not_ optional for CarV1 but we defer that check within code to\n *   # gracefully handle the V2 case where it's just {version:X}\n *   version Int\n * }\n *\n * # CarV1Header is the strict form of the header, and requires roots to be\n * # present. This is compatible with the CARv1 specification.\n *\n * # type CarV1Header struct {\n * #   roots [&Any]\n * #   version Int\n * # }\n *\n */\n\nconst Kinds = {\n  Null: /**\n         * @param obj\n         * @returns {undefined|null}\n         */ (/** @type {any} */ obj) => obj === null ? obj : undefined,\n  Int: /**\n        * @param obj\n        * @returns {undefined|number}\n        */ (/** @type {any} */ obj) => Number.isInteger(obj) ? obj : undefined,\n  Float: /**\n          * @param obj\n          * @returns {undefined|number}\n          */ (/** @type {any} */ obj) => typeof obj === 'number' && Number.isFinite(obj) ? obj : undefined,\n  String: /**\n           * @param obj\n           * @returns {undefined|string}\n           */ (/** @type {any} */ obj) => typeof obj === 'string' ? obj : undefined,\n  Bool: /**\n         * @param obj\n         * @returns {undefined|boolean}\n         */ (/** @type {any} */ obj) => typeof obj === 'boolean' ? obj : undefined,\n  Bytes: /**\n          * @param obj\n          * @returns {undefined|Uint8Array}\n          */ (/** @type {any} */ obj) => obj instanceof Uint8Array ? obj : undefined,\n  Link: /**\n         * @param obj\n         * @returns {undefined|object}\n         */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID === obj ? obj : undefined,\n  List: /**\n         * @param obj\n         * @returns {undefined|Array<any>}\n         */ (/** @type {any} */ obj) => Array.isArray(obj) ? obj : undefined,\n  Map: /**\n        * @param obj\n        * @returns {undefined|object}\n        */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID !== obj && !Array.isArray(obj) && !(obj instanceof Uint8Array) ? obj : undefined\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Types = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /**\n                                           * @param obj\n                                           * @returns {undefined|any}\n                                           */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /**\n                          * @param obj\n                          * @returns {undefined|any}\n                          */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Types['CarV1HeaderOrV2Pragma > roots (anon)'](obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Types.Int(obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Reprs = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /**\n                                           * @param obj\n                                           * @returns {undefined|any}\n                                           */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /**\n                          * @param obj\n                          * @returns {undefined|any}\n                          */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Reprs['CarV1HeaderOrV2Pragma > roots (anon)'](value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Reprs.Int(value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n\nconst CarV1HeaderOrV2Pragma = {\n  toTyped: Types.CarV1HeaderOrV2Pragma,\n  toRepresentation: Reprs.CarV1HeaderOrV2Pragma\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/header-validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/dag-cbor/src/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/@ipld/dag-cbor/src/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeOptions: () => (/* binding */ decodeOptions),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeOptions: () => (/* binding */ encodeOptions),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   toByteView: () => (/* binding */ toByteView)\n/* harmony export */ });\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/cborg.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/cid.js\");\n\n\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.tag, CID_CBOR_TAG),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nconst encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nconst decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nconst name = 'dag-cbor'\nconst code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nconst encode = (node) => cborg__WEBPACK_IMPORTED_MODULE_0__.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nconst decode = (data) => cborg__WEBPACK_IMPORTED_MODULE_0__.decode(toByteView(data), _decodeOptions)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctY2Jvci9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThCO0FBQ1E7O0FBRXRDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEscURBQXFEO0FBQ2xFOztBQUVBO0FBQ0E7QUFDQSxhQUFhLDREQUE0RDtBQUN6RTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxrQ0FBa0M7QUFDN0MsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpREFBRztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3Q0FBVyxDQUFDLHVDQUFVO0FBQzlCLFFBQVEsd0NBQVcsQ0FBQyx1Q0FBVTtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBLFNBQVMsaURBQUc7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOEJBQThCO0FBQzNDO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTs7QUFFTztBQUNBOztBQUVQO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhO0FBQ2I7QUFDTyx5QkFBeUIseUNBQVk7O0FBRTVDO0FBQ0E7QUFDQSxXQUFXLGtDQUFrQztBQUM3QyxhQUFhO0FBQ2I7QUFDTyx5QkFBeUIseUNBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1jYm9yL3NyYy9pbmRleC5qcz8zNmQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNib3JnIGZyb20gJ2Nib3JnJ1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCdcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2lwZnMvZ28taXBmcy9pc3N1ZXMvMzU3MCNpc3N1ZWNvbW1lbnQtMjczOTMxNjkyXG5jb25zdCBDSURfQ0JPUl9UQUcgPSA0MlxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvY29kZWNzL2ludGVyZmFjZScpLkJ5dGVWaWV3PFQ+fSBCeXRlVmlld1xuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ211bHRpZm9ybWF0cy9jb2RlY3MvaW50ZXJmYWNlJykuQXJyYXlCdWZmZXJWaWV3PFQ+fSBBcnJheUJ1ZmZlclZpZXdcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFQ+IHwgQXJyYXlCdWZmZXJWaWV3PFQ+fSBidWZcbiAqIEByZXR1cm5zIHtCeXRlVmlldzxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQnl0ZVZpZXcgKGJ1Zikge1xuICBpZiAoYnVmIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmLCAwLCBidWYuYnl0ZUxlbmd0aClcbiAgfVxuXG4gIHJldHVybiBidWZcbn1cblxuLyoqXG4gKiBjaWRFbmNvZGVyIHdpbGwgcmVjZWl2ZSBhbGwgT2JqZWN0cyBkdXJpbmcgZW5jb2RlLCBpdCBuZWVkcyB0byBmaWx0ZXIgb3V0XG4gKiBhbnl0aGluZyB0aGF0J3Mgbm90IGEgQ0lEIGFuZCByZXR1cm4gYG51bGxgIGZvciB0aGF0IHNvIGl0J3MgZW5jb2RlZCBhc1xuICogbm9ybWFsLlxuICpcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtjYm9yZy5Ub2tlbltdfG51bGx9XG4gKi9cbmZ1bmN0aW9uIGNpZEVuY29kZXIgKG9iaikge1xuICBpZiAob2JqLmFzQ0lEICE9PSBvYmogJiYgb2JqWycvJ10gIT09IG9iai5ieXRlcykge1xuICAgIHJldHVybiBudWxsIC8vIGFueSBvdGhlciBraW5kIG9mIG9iamVjdFxuICB9XG4gIGNvbnN0IGNpZCA9IENJRC5hc0NJRChvYmopXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gdmVyeSB1bmxpa2VseSBjYXNlLCBhbmQgaXQnbGwgcHJvYmFibHkgdGhyb3cgYSByZWN1cnNpb24gZXJyb3IgaW4gY2JvcmdcbiAgaWYgKCFjaWQpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoY2lkLmJ5dGVzLmJ5dGVMZW5ndGggKyAxKVxuICBieXRlcy5zZXQoY2lkLmJ5dGVzLCAxKSAvLyBwcmVmaXggaXMgMHgwMCwgZm9yIGhpc3RvcmljYWwgcmVhc29uc1xuICByZXR1cm4gW1xuICAgIG5ldyBjYm9yZy5Ub2tlbihjYm9yZy5UeXBlLnRhZywgQ0lEX0NCT1JfVEFHKSxcbiAgICBuZXcgY2JvcmcuVG9rZW4oY2JvcmcuVHlwZS5ieXRlcywgYnl0ZXMpXG4gIF1cbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGpzZG9jL3JlcXVpcmUtcmV0dXJucy1jaGVja1xuLyoqXG4gKiBJbnRlcmNlcHQgYWxsIGB1bmRlZmluZWRgIHZhbHVlcyBmcm9tIGFuIG9iamVjdCB3YWxrIGFuZCByZWplY3QgdGhlIGVudGlyZVxuICogb2JqZWN0IGlmIHdlIGZpbmQgb25lLlxuICpcbiAqIEByZXR1cm5zIHtudWxsfVxuICovXG5mdW5jdGlvbiB1bmRlZmluZWRFbmNvZGVyICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdgdW5kZWZpbmVkYCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBJUExEIERhdGEgTW9kZWwgYW5kIGNhbm5vdCBiZSBlbmNvZGVkJylcbn1cblxuLyoqXG4gKiBJbnRlcmNlcHQgYWxsIGBudW1iZXJgIHZhbHVlcyBmcm9tIGFuIG9iamVjdCB3YWxrIGFuZCByZWplY3QgdGhlIGVudGlyZVxuICogb2JqZWN0IGlmIHdlIGZpbmQgc29tZXRoaW5nIHRoYXQgZG9lc24ndCBmaXQgdGhlIElQTEQgZGF0YSBtb2RlbCAoTmFOICZcbiAqIEluZmluaXR5KS5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gbnVtXG4gKiBAcmV0dXJucyB7bnVsbH1cbiAqL1xuZnVuY3Rpb24gbnVtYmVyRW5jb2RlciAobnVtKSB7XG4gIGlmIChOdW1iZXIuaXNOYU4obnVtKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignYE5hTmAgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgSVBMRCBEYXRhIE1vZGVsIGFuZCBjYW5ub3QgYmUgZW5jb2RlZCcpXG4gIH1cbiAgaWYgKG51bSA9PT0gSW5maW5pdHkgfHwgbnVtID09PSAtSW5maW5pdHkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2BJbmZpbml0eWAgYW5kIGAtSW5maW5pdHlgIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIElQTEQgRGF0YSBNb2RlbCBhbmQgY2Fubm90IGJlIGVuY29kZWQnKVxuICB9XG4gIHJldHVybiBudWxsXG59XG5cbmNvbnN0IF9lbmNvZGVPcHRpb25zID0ge1xuICBmbG9hdDY0OiB0cnVlLFxuICB0eXBlRW5jb2RlcnM6IHtcbiAgICBPYmplY3Q6IGNpZEVuY29kZXIsXG4gICAgdW5kZWZpbmVkOiB1bmRlZmluZWRFbmNvZGVyLFxuICAgIG51bWJlcjogbnVtYmVyRW5jb2RlclxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBlbmNvZGVPcHRpb25zID0ge1xuICAuLi5fZW5jb2RlT3B0aW9ucyxcbiAgdHlwZUVuY29kZXJzOiB7XG4gICAgLi4uX2VuY29kZU9wdGlvbnMudHlwZUVuY29kZXJzXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcmV0dXJucyB7Q0lEfVxuICovXG5mdW5jdGlvbiBjaWREZWNvZGVyIChieXRlcykge1xuICBpZiAoYnl0ZXNbMF0gIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgQ0lEIGZvciBDQk9SIHRhZyA0MjsgZXhwZWN0ZWQgbGVhZGluZyAweDAwJylcbiAgfVxuICByZXR1cm4gQ0lELmRlY29kZShieXRlcy5zdWJhcnJheSgxKSkgLy8gaWdub3JlIGxlYWRpbmcgMHgwMFxufVxuXG5jb25zdCBfZGVjb2RlT3B0aW9ucyA9IHtcbiAgYWxsb3dJbmRlZmluaXRlOiBmYWxzZSxcbiAgY29lcmNlVW5kZWZpbmVkVG9OdWxsOiB0cnVlLFxuICBhbGxvd05hTjogZmFsc2UsXG4gIGFsbG93SW5maW5pdHk6IGZhbHNlLFxuICBhbGxvd0JpZ0ludDogdHJ1ZSwgLy8gdGhpcyB3aWxsIGxlYWQgdG8gQmlnSW50IGZvciBpbnRzIG91dHNpZGUgb2ZcbiAgLy8gc2FmZS1pbnRlZ2VyIHJhbmdlLCB3aGljaCBtYXkgc3VycHJpc2UgdXNlcnNcbiAgc3RyaWN0OiB0cnVlLFxuICB1c2VNYXBzOiBmYWxzZSxcbiAgcmVqZWN0RHVwbGljYXRlTWFwS2V5czogdHJ1ZSxcbiAgLyoqIEB0eXBlIHtpbXBvcnQoJ2Nib3JnJykuVGFnRGVjb2RlcltdfSAqL1xuICB0YWdzOiBbXVxufVxuX2RlY29kZU9wdGlvbnMudGFnc1tDSURfQ0JPUl9UQUddID0gY2lkRGVjb2RlclxuXG5leHBvcnQgY29uc3QgZGVjb2RlT3B0aW9ucyA9IHtcbiAgLi4uX2RlY29kZU9wdGlvbnMsXG4gIHRhZ3M6IF9kZWNvZGVPcHRpb25zLnRhZ3Muc2xpY2UoKVxufVxuXG5leHBvcnQgY29uc3QgbmFtZSA9ICdkYWctY2JvcidcbmV4cG9ydCBjb25zdCBjb2RlID0gMHg3MVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IG5vZGVcbiAqIEByZXR1cm5zIHtCeXRlVmlldzxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChub2RlKSA9PiBjYm9yZy5lbmNvZGUobm9kZSwgX2VuY29kZU9wdGlvbnMpXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7Qnl0ZVZpZXc8VD4gfCBBcnJheUJ1ZmZlclZpZXc8VD59IGRhdGFcbiAqIEByZXR1cm5zIHtUfVxuICovXG5leHBvcnQgY29uc3QgZGVjb2RlID0gKGRhdGEpID0+IGNib3JnLmRlY29kZSh0b0J5dGVWaWV3KGRhdGEpLCBfZGVjb2RlT3B0aW9ucylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/dag-cbor/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/cborg.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/cborg.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Token),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokeniser),\n/* harmony export */   Type: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Type),\n/* harmony export */   decode: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   tokensToObject: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/encode.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/decode.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _lib_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n\n\n\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9jYm9yZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3dDO0FBQ3BDOztBQUU1QztBQUNBO0FBQ0EsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQSxhQUFhLDJDQUEyQztBQUN4RCxhQUFhLHFDQUFxQztBQUNsRCxhQUFhLHFDQUFxQztBQUNsRDs7QUFVQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvY2JvcmcvY2JvcmcuanM/OTE1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGUgfSBmcm9tICcuL2xpYi9lbmNvZGUuanMnXG5pbXBvcnQgeyBkZWNvZGUsIGRlY29kZUZpcnN0LCBUb2tlbmlzZXIsIHRva2Vuc1RvT2JqZWN0IH0gZnJvbSAnLi9saWIvZGVjb2RlLmpzJ1xuaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL2xpYi90b2tlbi5qcydcblxuLyoqXG4gKiBFeHBvcnQgdGhlIHR5cGVzIHRoYXQgd2VyZSBwcmVzZW50IGluIHRoZSBvcmlnaW5hbCBtYW51YWwgY2JvcmcuZC50c1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5UYWdEZWNvZGVyfSBUYWdEZWNvZGVyXG4gKiBUaGVyZSB3YXMgb3JpZ2luYWxseSBqdXN0IGBUeXBlRW5jb2RlcmAgc28gZG9uJ3QgYnJlYWsgdHlwZXMgYnkgcmVuYW1pbmcgb3Igbm90IGV4cG9ydGluZ1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5PcHRpb25hbFR5cGVFbmNvZGVyfSBUeXBlRW5jb2RlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2ludGVyZmFjZScpLkVuY29kZU9wdGlvbnN9IEVuY29kZU9wdGlvbnNcbiAqL1xuXG5leHBvcnQge1xuICBkZWNvZGUsXG4gIGRlY29kZUZpcnN0LFxuICBUb2tlbmlzZXIgYXMgVG9rZW5pemVyLFxuICB0b2tlbnNUb09iamVjdCxcbiAgZW5jb2RlLFxuICBUb2tlbixcbiAgVHlwZVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/cborg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUint16: () => (/* binding */ decodeUint16),\n/* harmony export */   decodeUint32: () => (/* binding */ decodeUint32),\n/* harmony export */   decodeUint64: () => (/* binding */ decodeUint64),\n/* harmony export */   decodeUint8: () => (/* binding */ decodeUint8),\n/* harmony export */   encodeUint: () => (/* binding */ encodeUint),\n/* harmony export */   encodeUintValue: () => (/* binding */ encodeUintValue),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint64: () => (/* binding */ readUint64),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   uintBoundaries: () => (/* binding */ uintBoundaries)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n/* globals BigInt */\n\n\n\n\nconst uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint8 (data, offset, options) {\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint16 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint32 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nfunction readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nfunction encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/1negint.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/1negint.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNegint16: () => (/* binding */ decodeNegint16),\n/* harmony export */   decodeNegint32: () => (/* binding */ decodeNegint32),\n/* harmony export */   decodeNegint64: () => (/* binding */ decodeNegint64),\n/* harmony export */   decodeNegint8: () => (/* binding */ decodeNegint8),\n/* harmony export */   encodeNegint: () => (/* binding */ encodeNegint)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n/* eslint-env es2020 */\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint64 (data, pos, _minor, options) {\n  const int = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMW5lZ2ludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUV3QztBQUNOO0FBQ1c7O0FBRTdDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksY0FBYyxnREFBYztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxjQUFjLGlEQUFlO0FBQ3BEOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLGNBQWMsaURBQWU7QUFDcEQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGNBQWMsaURBQWU7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRDQUFLLENBQUMsMkNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQO0FBQ0E7QUFDQSxFQUFFLHNEQUFvQjtBQUN0Qjs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFtQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8xbmVnaW50LmpzP2ZlZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczIwMjAgKi9cblxuaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIC0xIC0gdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDIpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTmVnaW50MzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIC0xIC0gdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCA1KVxufVxuXG5jb25zdCBuZWcxYiA9IEJpZ0ludCgtMSlcbmNvbnN0IHBvczFiID0gQmlnSW50KDEpXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBpbnQgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBpbnQgIT09ICdiaWdpbnQnKSB7XG4gICAgY29uc3QgdmFsdWUgPSAtMSAtIGludFxuICAgIGlmICh2YWx1ZSA+PSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUikge1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgdmFsdWUsIDkpXG4gICAgfVxuICB9XG4gIGlmIChvcHRpb25zLmFsbG93QmlnSW50ICE9PSB0cnVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW50ZWdlcnMgb3V0c2lkZSBvZiB0aGUgc2FmZSBpbnRlZ2VyIHJhbmdlIGFyZSBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCBuZWcxYiAtIEJpZ0ludChpbnQpLCA5KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZU5lZ2ludCAoYnVmLCB0b2tlbikge1xuICBjb25zdCBuZWdpbnQgPSB0b2tlbi52YWx1ZVxuICBjb25zdCB1bnNpZ25lZCA9ICh0eXBlb2YgbmVnaW50ID09PSAnYmlnaW50JyA/IChuZWdpbnQgKiBuZWcxYiAtIHBvczFiKSA6IChuZWdpbnQgKiAtMSAtIDEpKVxuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIHRva2VuLnR5cGUubWFqb3JFbmNvZGVkLCB1bnNpZ25lZClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlTmVnaW50LmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIGNvbnN0IG5lZ2ludCA9IHRva2VuLnZhbHVlXG4gIGNvbnN0IHVuc2lnbmVkID0gKHR5cGVvZiBuZWdpbnQgPT09ICdiaWdpbnQnID8gKG5lZ2ludCAqIG5lZzFiIC0gcG9zMWIpIDogKG5lZ2ludCAqIC0xIC0gMSkpXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gaGFuZGxlZCBieSBxdWlja0VuY29kZSwgd2Ugc2hvdWxkbid0IGdldCBoZXJlIGJ1dCBpdCdzIGluY2x1ZGVkIGZvciBjb21wbGV0ZW5lc3NcbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1swXSkge1xuICAgIHJldHVybiAxXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1sxXSkge1xuICAgIHJldHVybiAyXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1syXSkge1xuICAgIHJldHVybiAzXG4gIH1cbiAgaWYgKHVuc2lnbmVkIDwgdWludC51aW50Qm91bmRhcmllc1szXSkge1xuICAgIHJldHVybiA1XG4gIH1cbiAgcmV0dXJuIDlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2sxXG4gKiBAcGFyYW0ge1Rva2VufSB0b2syXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVOZWdpbnQuY29tcGFyZVRva2VucyA9IGZ1bmN0aW9uIGNvbXBhcmVUb2tlbnMgKHRvazEsIHRvazIpIHtcbiAgLy8gb3Bwb3NpdGUgb2YgdGhlIHVpbnQgY29tcGFyaXNvbiBzaW5jZSB3ZSBzdG9yZSB0aGUgdWludCB2ZXJzaW9uIGluIGJ5dGVzXG4gIHJldHVybiB0b2sxLnZhbHVlIDwgdG9rMi52YWx1ZSA/IDEgOiB0b2sxLnZhbHVlID4gdG9rMi52YWx1ZSA/IC0xIDogLyogYzggaWdub3JlIG5leHQgKi8gMFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/1negint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/2bytes.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/2bytes.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareBytes: () => (/* binding */ compareBytes),\n/* harmony export */   decodeBytes16: () => (/* binding */ decodeBytes16),\n/* harmony export */   decodeBytes32: () => (/* binding */ decodeBytes32),\n/* harmony export */   decodeBytes64: () => (/* binding */ decodeBytes64),\n/* harmony export */   decodeBytes8: () => (/* binding */ decodeBytes8),\n/* harmony export */   decodeBytesCompact: () => (/* binding */ decodeBytesCompact),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, prefix + length)\n  const buf = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.slice)(data, pos + prefix, pos + prefix + length)\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.compare)(b1, b2)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMmJ5dGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3VCO0FBQzdCO0FBQzBCOztBQUU1RDtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsRUFBRSw0REFBZ0I7QUFDbEIsY0FBYyxxREFBSztBQUNuQixhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGdEQUFjO0FBQzdDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLGlEQUFlO0FBQzNCO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDJDQUFJLFVBQVUsMERBQVU7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQO0FBQ0EsRUFBRSxzREFBb0I7QUFDdEI7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0I7O0FBRUE7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ087QUFDUCxrRUFBa0UsdURBQU87QUFDekUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8yYnl0ZXMuanM/M2IwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgeyBhc3NlcnRFbm91Z2hEYXRhLCBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGNvbXBhcmUsIGZyb21TdHJpbmcsIHNsaWNlIH0gZnJvbSAnLi9ieXRlLXV0aWxzLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChkYXRhLCBwb3MsIHByZWZpeCwgbGVuZ3RoKSB7XG4gIGFzc2VydEVub3VnaERhdGEoZGF0YSwgcG9zLCBwcmVmaXggKyBsZW5ndGgpXG4gIGNvbnN0IGJ1ZiA9IHNsaWNlKGRhdGEsIHBvcyArIHByZWZpeCwgcG9zICsgcHJlZml4ICsgbGVuZ3RoKVxuICByZXR1cm4gbmV3IFRva2VuKFR5cGUuYnl0ZXMsIGJ1ZiwgcHJlZml4ICsgbGVuZ3RoKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlc0NvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXMxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAzLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBieXRlcyBsZW5ndGhzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgOSwgbClcbn1cblxuLyoqXG4gKiBgZW5jb2RlZEJ5dGVzYCBhbGxvd3MgZm9yIGNhY2hpbmcgd2hlbiB3ZSBkbyBhIGJ5dGUgdmVyc2lvbiBvZiBhIHN0cmluZ1xuICogZm9yIGtleSBzb3J0aW5nIHB1cnBvc2VzXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHRva2VuQnl0ZXMgKHRva2VuKSB7XG4gIGlmICh0b2tlbi5lbmNvZGVkQnl0ZXMgPT09IHVuZGVmaW5lZCkge1xuICAgIHRva2VuLmVuY29kZWRCeXRlcyA9IHRva2VuLnR5cGUgPT09IFR5cGUuc3RyaW5nID8gZnJvbVN0cmluZyh0b2tlbi52YWx1ZSkgOiB0b2tlbi52YWx1ZVxuICB9XG4gIC8vIEB0cy1pZ25vcmUgYydtb25cbiAgcmV0dXJuIHRva2VuLmVuY29kZWRCeXRlc1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUJ5dGVzIChidWYsIHRva2VuKSB7XG4gIGNvbnN0IGJ5dGVzID0gdG9rZW5CeXRlcyh0b2tlbilcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCB0b2tlbi50eXBlLm1ham9yRW5jb2RlZCwgYnl0ZXMubGVuZ3RoKVxuICBidWYucHVzaChieXRlcylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlQnl0ZXMuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgY29uc3QgYnl0ZXMgPSB0b2tlbkJ5dGVzKHRva2VuKVxuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUoYnl0ZXMubGVuZ3RoKSArIGJ5dGVzLmxlbmd0aFxufVxuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRvazFcbiAqIEBwYXJhbSB7VG9rZW59IHRvazJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUJ5dGVzLmNvbXBhcmVUb2tlbnMgPSBmdW5jdGlvbiBjb21wYXJlVG9rZW5zICh0b2sxLCB0b2syKSB7XG4gIHJldHVybiBjb21wYXJlQnl0ZXModG9rZW5CeXRlcyh0b2sxKSwgdG9rZW5CeXRlcyh0b2syKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGIxXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGIyXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZUJ5dGVzIChiMSwgYjIpIHtcbiAgcmV0dXJuIGIxLmxlbmd0aCA8IGIyLmxlbmd0aCA/IC0xIDogYjEubGVuZ3RoID4gYjIubGVuZ3RoID8gMSA6IGNvbXBhcmUoYjEsIGIyKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/2bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/3string.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/3string.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString16: () => (/* binding */ decodeString16),\n/* harmony export */   decodeString32: () => (/* binding */ decodeString32),\n/* harmony export */   decodeString64: () => (/* binding */ decodeString64),\n/* harmony export */   decodeString8: () => (/* binding */ decodeString8),\n/* harmony export */   decodeStringCompact: () => (/* binding */ decodeStringCompact),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, totLength)\n  const tok = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.toString)(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.slice)(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nconst encodeString = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvM3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUF3QztBQUN1QjtBQUM3QjtBQUNPO0FBQ1E7O0FBRWpEO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxFQUFFLDZEQUFnQjtBQUNsQixrQkFBa0IsNENBQUssQ0FBQywyQ0FBSSxTQUFTLHdEQUFRO0FBQzdDO0FBQ0Esb0JBQW9CLHFEQUFLO0FBQ3pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRU8scUJBQXFCLG1EQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvM3N0cmluZy5qcz8yYjk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCB7IGFzc2VydEVub3VnaERhdGEsIGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZW5jb2RlQnl0ZXMgfSBmcm9tICcuLzJieXRlcy5qcydcbmltcG9ydCB7IHRvU3RyaW5nLCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChkYXRhLCBwb3MsIHByZWZpeCwgbGVuZ3RoLCBvcHRpb25zKSB7XG4gIGNvbnN0IHRvdExlbmd0aCA9IHByZWZpeCArIGxlbmd0aFxuICBhc3NlcnRFbm91Z2hEYXRhKGRhdGEsIHBvcywgdG90TGVuZ3RoKVxuICBjb25zdCB0b2sgPSBuZXcgVG9rZW4oVHlwZS5zdHJpbmcsIHRvU3RyaW5nKGRhdGEsIHBvcyArIHByZWZpeCwgcG9zICsgdG90TGVuZ3RoKSwgdG90TGVuZ3RoKVxuICBpZiAob3B0aW9ucy5yZXRhaW5TdHJpbmdCeXRlcyA9PT0gdHJ1ZSkge1xuICAgIHRvay5ieXRlVmFsdWUgPSBzbGljZShkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHRvdExlbmd0aClcbiAgfVxuICByZXR1cm4gdG9rXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nQ29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmc4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmcxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAzLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nNjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIHN0cmluZyBsZW5ndGhzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgOSwgbCwgb3B0aW9ucylcbn1cblxuZXhwb3J0IGNvbnN0IGVuY29kZVN0cmluZyA9IGVuY29kZUJ5dGVzXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/3string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/4array.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/4array.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray16: () => (/* binding */ decodeArray16),\n/* harmony export */   decodeArray32: () => (/* binding */ decodeArray32),\n/* harmony export */   decodeArray64: () => (/* binding */ decodeArray64),\n/* harmony export */   decodeArray8: () => (/* binding */ decodeArray8),\n/* harmony export */   decodeArrayCompact: () => (/* binding */ decodeArrayCompact),\n/* harmony export */   decodeArrayIndefinite: () => (/* binding */ decodeArrayIndefinite),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeArray (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNGFycmF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTjtBQUNXOztBQUU3QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUCxFQUFFLHNEQUFvQixNQUFNLDJDQUFJO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEIsaURBQWU7O0FBRTNDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi80YXJyYXkuanM/ZDZkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChfZGF0YSwgX3BvcywgcHJlZml4LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmFycmF5LCBsZW5ndGgsIHByZWZpeClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXlDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5MTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXk2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgYXJyYXkgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5SW5kZWZpbml0ZSAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMuYWxsb3dJbmRlZmluaXRlID09PSBmYWxzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGluZGVmaW5pdGUgbGVuZ3RoIGl0ZW1zIG5vdCBhbGxvd2VkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIEluZmluaXR5KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUFycmF5IChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS5hcnJheS5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG4vLyB1c2luZyBhbiBhcnJheSBhcyBhIG1hcCBrZXksIGFyZSB5b3Ugc3VyZSBhYm91dCB0aGlzPyB3ZSBjYW4gb25seSBzb3J0XG4vLyBieSBtYXAgbGVuZ3RoIGhlcmUsIGl0J3MgdXAgdG8gdGhlIGVuY29kZXIgdG8gZGVjaWRlIHRvIGxvb2sgZGVlcGVyXG5lbmNvZGVBcnJheS5jb21wYXJlVG9rZW5zID0gdWludC5lbmNvZGVVaW50LmNvbXBhcmVUb2tlbnNcblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlQXJyYXkuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/4array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/5map.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/5map.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMap16: () => (/* binding */ decodeMap16),\n/* harmony export */   decodeMap32: () => (/* binding */ decodeMap32),\n/* harmony export */   decodeMap64: () => (/* binding */ decodeMap64),\n/* harmony export */   decodeMap8: () => (/* binding */ decodeMap8),\n/* harmony export */   decodeMapCompact: () => (/* binding */ decodeMapCompact),\n/* harmony export */   decodeMapIndefinite: () => (/* binding */ decodeMapIndefinite),\n/* harmony export */   encodeMap: () => (/* binding */ encodeMap)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeMap (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNW1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ047QUFDVzs7QUFFN0M7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1AsRUFBRSxzREFBb0IsTUFBTSwyQ0FBSTtBQUNoQzs7QUFFQTtBQUNBO0FBQ0EsMEJBQTBCLGlEQUFlOztBQUV6QztBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVMsc0RBQW9CO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNW1hcC5qcz9hMGZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gX2RhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBfcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmZ1bmN0aW9uIHRvVG9rZW4gKF9kYXRhLCBfcG9zLCBwcmVmaXgsIGxlbmd0aCkge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubWFwLCBsZW5ndGgsIHByZWZpeClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwQ29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vcilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXAzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBtYXAgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcEluZGVmaW5pdGUgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93SW5kZWZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbmRlZmluaXRlIGxlbmd0aCBpdGVtcyBub3QgYWxsb3dlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBJbmZpbml0eSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVNYXAgKGJ1ZiwgdG9rZW4pIHtcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCBUeXBlLm1hcC5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG4vLyB1c2luZyBhIG1hcCBhcyBhIG1hcCBrZXksIGFyZSB5b3Ugc3VyZSBhYm91dCB0aGlzPyB3ZSBjYW4gb25seSBzb3J0XG4vLyBieSBtYXAgbGVuZ3RoIGhlcmUsIGl0J3MgdXAgdG8gdGhlIGVuY29kZXIgdG8gZGVjaWRlIHRvIGxvb2sgZGVlcGVyXG5lbmNvZGVNYXAuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZU1hcC5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUodG9rZW4udmFsdWUpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/5map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/6tag.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/6tag.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTag16: () => (/* binding */ decodeTag16),\n/* harmony export */   decodeTag32: () => (/* binding */ decodeTag32),\n/* harmony export */   decodeTag64: () => (/* binding */ decodeTag64),\n/* harmony export */   decodeTag8: () => (/* binding */ decodeTag8),\n/* harmony export */   decodeTagCompact: () => (/* binding */ decodeTagCompact),\n/* harmony export */   encodeTag: () => (/* binding */ encodeTag)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeTagCompact (_data, _pos, minor, _options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeTag (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNnRhZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3QztBQUNOOztBQUVsQztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0sZ0RBQWM7QUFDM0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxpREFBZTtBQUM1Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxNQUFNLGlEQUFlO0FBQzVDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0saURBQWU7QUFDNUM7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQLEVBQUUsc0RBQW9CLE1BQU0sMkNBQUk7QUFDaEM7O0FBRUEsMEJBQTBCLGlEQUFlOztBQUV6QztBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVMsc0RBQW9CO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNnRhZy5qcz81ZDQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWdDb21wYWN0IChfZGF0YSwgX3BvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIG1pbm9yLCAxKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWc4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgNSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnNjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgOSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUYWcgKGJ1ZiwgdG9rZW4pIHtcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCBUeXBlLnRhZy5tYWpvckVuY29kZWQsIHRva2VuLnZhbHVlKVxufVxuXG5lbmNvZGVUYWcuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZVRhZy5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUodG9rZW4udmFsdWUpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/6tag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/7float.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/7float.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBreak: () => (/* binding */ decodeBreak),\n/* harmony export */   decodeFloat16: () => (/* binding */ decodeFloat16),\n/* harmony export */   decodeFloat32: () => (/* binding */ decodeFloat32),\n/* harmony export */   decodeFloat64: () => (/* binding */ decodeFloat64),\n/* harmony export */   decodeUndefined: () => (/* binding */ decodeUndefined),\n/* harmony export */   encodeFloat: () => (/* binding */ encodeFloat)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nfunction encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvN2Zsb2F0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRXdDO0FBQ0s7QUFDTjs7QUFFdkM7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEMsSUFBSTtBQUNKLGVBQWUsNENBQUssQ0FBQywyQ0FBSTtBQUN6QjtBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdURBQWUsRUFBRTtBQUMxQztBQUNBO0FBQ0EseUJBQXlCLHVEQUFlLEVBQUU7QUFDMUM7QUFDQTtBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQixXQUFXLGVBQWU7QUFDMUI7QUFDTztBQUNQOztBQUVBO0FBQ0EsY0FBYywyQ0FBSTtBQUNsQixJQUFJO0FBQ0osY0FBYywyQ0FBSTtBQUNsQixJQUFJO0FBQ0osY0FBYywyQ0FBSTtBQUNsQixJQUFJO0FBQ0osY0FBYywyQ0FBSTtBQUNsQixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxNQUFNLE9BQU87QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBLDRCQUE0QixpREFBVTtBQUN0QztBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUJBQWlCO0FBQ3RDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi83ZmxvYXQuanM/OGY0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPOiBzaGlmdCBzb21lIG9mIHRoZSBieXRlcyBsb2dpYyB0byBieXRlcy11dGlscyBzbyB3ZSBjYW4gdXNlIEJ1ZmZlclxuLy8gd2hlcmUgcG9zc2libGVcblxuaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5pbXBvcnQgeyBlbmNvZGVVaW50IH0gZnJvbSAnLi8wdWludC5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5FbmNvZGVPcHRpb25zfSBFbmNvZGVPcHRpb25zXG4gKi9cblxuY29uc3QgTUlOT1JfRkFMU0UgPSAyMFxuY29uc3QgTUlOT1JfVFJVRSA9IDIxXG5jb25zdCBNSU5PUl9OVUxMID0gMjJcbmNvbnN0IE1JTk9SX1VOREVGSU5FRCA9IDIzXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVW5kZWZpbmVkIChfZGF0YSwgX3BvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93VW5kZWZpbmVkID09PSBmYWxzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IHVuZGVmaW5lZCB2YWx1ZXMgYXJlIG5vdCBzdXBwb3J0ZWRgKVxuICB9IGVsc2UgaWYgKG9wdGlvbnMuY29lcmNlVW5kZWZpbmVkVG9OdWxsID09PSB0cnVlKSB7XG4gICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm51bGwsIG51bGwsIDEpXG4gIH1cbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnVuZGVmaW5lZCwgdW5kZWZpbmVkLCAxKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gX2RhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBfcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJyZWFrIChfZGF0YSwgX3BvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93SW5kZWZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbmRlZmluaXRlIGxlbmd0aCBpdGVtcyBub3QgYWxsb3dlZGApXG4gIH1cbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmJyZWFrLCB1bmRlZmluZWQsIDEpXG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlXG4gKiBAcGFyYW0ge251bWJlcn0gYnl0ZXNcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiBjcmVhdGVUb2tlbiAodmFsdWUsIGJ5dGVzLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMuYWxsb3dOYU4gPT09IGZhbHNlICYmIE51bWJlci5pc05hTih2YWx1ZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IE5hTiB2YWx1ZXMgYXJlIG5vdCBzdXBwb3J0ZWRgKVxuICAgIH1cbiAgICBpZiAob3B0aW9ucy5hbGxvd0luZmluaXR5ID09PSBmYWxzZSAmJiAodmFsdWUgPT09IEluZmluaXR5IHx8IHZhbHVlID09PSAtSW5maW5pdHkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBJbmZpbml0eSB2YWx1ZXMgYXJlIG5vdCBzdXBwb3J0ZWRgKVxuICAgIH1cbiAgfVxuICByZXR1cm4gbmV3IFRva2VuKFR5cGUuZmxvYXQsIHZhbHVlLCBieXRlcylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlRmxvYXQxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIGNyZWF0ZVRva2VuKHJlYWRGbG9hdDE2KGRhdGEsIHBvcyArIDEpLCAzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVGbG9hdDMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gY3JlYXRlVG9rZW4ocmVhZEZsb2F0MzIoZGF0YSwgcG9zICsgMSksIDUsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUZsb2F0NjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBjcmVhdGVUb2tlbihyZWFkRmxvYXQ2NChkYXRhLCBwb3MgKyAxKSwgOSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUZsb2F0IChidWYsIHRva2VuLCBvcHRpb25zKSB7XG4gIGNvbnN0IGZsb2F0ID0gdG9rZW4udmFsdWVcblxuICBpZiAoZmxvYXQgPT09IGZhbHNlKSB7XG4gICAgYnVmLnB1c2goW1R5cGUuZmxvYXQubWFqb3JFbmNvZGVkIHwgTUlOT1JfRkFMU0VdKVxuICB9IGVsc2UgaWYgKGZsb2F0ID09PSB0cnVlKSB7XG4gICAgYnVmLnB1c2goW1R5cGUuZmxvYXQubWFqb3JFbmNvZGVkIHwgTUlOT1JfVFJVRV0pXG4gIH0gZWxzZSBpZiAoZmxvYXQgPT09IG51bGwpIHtcbiAgICBidWYucHVzaChbVHlwZS5mbG9hdC5tYWpvckVuY29kZWQgfCBNSU5PUl9OVUxMXSlcbiAgfSBlbHNlIGlmIChmbG9hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYnVmLnB1c2goW1R5cGUuZmxvYXQubWFqb3JFbmNvZGVkIHwgTUlOT1JfVU5ERUZJTkVEXSlcbiAgfSBlbHNlIHtcbiAgICBsZXQgZGVjb2RlZFxuICAgIGxldCBzdWNjZXNzID0gZmFsc2VcbiAgICBpZiAoIW9wdGlvbnMgfHwgb3B0aW9ucy5mbG9hdDY0ICE9PSB0cnVlKSB7XG4gICAgICBlbmNvZGVGbG9hdDE2KGZsb2F0KVxuICAgICAgZGVjb2RlZCA9IHJlYWRGbG9hdDE2KHVpOGEsIDEpXG4gICAgICBpZiAoZmxvYXQgPT09IGRlY29kZWQgfHwgTnVtYmVyLmlzTmFOKGZsb2F0KSkge1xuICAgICAgICB1aThhWzBdID0gMHhmOVxuICAgICAgICBidWYucHVzaCh1aThhLnNsaWNlKDAsIDMpKVxuICAgICAgICBzdWNjZXNzID0gdHJ1ZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZW5jb2RlRmxvYXQzMihmbG9hdClcbiAgICAgICAgZGVjb2RlZCA9IHJlYWRGbG9hdDMyKHVpOGEsIDEpXG4gICAgICAgIGlmIChmbG9hdCA9PT0gZGVjb2RlZCkge1xuICAgICAgICAgIHVpOGFbMF0gPSAweGZhXG4gICAgICAgICAgYnVmLnB1c2godWk4YS5zbGljZSgwLCA1KSlcbiAgICAgICAgICBzdWNjZXNzID0gdHJ1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmICghc3VjY2Vzcykge1xuICAgICAgZW5jb2RlRmxvYXQ2NChmbG9hdClcbiAgICAgIGRlY29kZWQgPSByZWFkRmxvYXQ2NCh1aThhLCAxKVxuICAgICAgdWk4YVswXSA9IDB4ZmJcbiAgICAgIGJ1Zi5wdXNoKHVpOGEuc2xpY2UoMCwgOSkpXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlRmxvYXQuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4sIG9wdGlvbnMpIHtcbiAgY29uc3QgZmxvYXQgPSB0b2tlbi52YWx1ZVxuXG4gIGlmIChmbG9hdCA9PT0gZmFsc2UgfHwgZmxvYXQgPT09IHRydWUgfHwgZmxvYXQgPT09IG51bGwgfHwgZmxvYXQgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiAxXG4gIH1cblxuICBpZiAoIW9wdGlvbnMgfHwgb3B0aW9ucy5mbG9hdDY0ICE9PSB0cnVlKSB7XG4gICAgZW5jb2RlRmxvYXQxNihmbG9hdClcbiAgICBsZXQgZGVjb2RlZCA9IHJlYWRGbG9hdDE2KHVpOGEsIDEpXG4gICAgaWYgKGZsb2F0ID09PSBkZWNvZGVkIHx8IE51bWJlci5pc05hTihmbG9hdCkpIHtcbiAgICAgIHJldHVybiAzXG4gICAgfVxuICAgIGVuY29kZUZsb2F0MzIoZmxvYXQpXG4gICAgZGVjb2RlZCA9IHJlYWRGbG9hdDMyKHVpOGEsIDEpXG4gICAgaWYgKGZsb2F0ID09PSBkZWNvZGVkKSB7XG4gICAgICByZXR1cm4gNVxuICAgIH1cbiAgfVxuICByZXR1cm4gOVxufVxuXG5jb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoOSlcbmNvbnN0IGRhdGFWaWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlciwgMSlcbmNvbnN0IHVpOGEgPSBuZXcgVWludDhBcnJheShidWZmZXIsIDApXG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IGlucFxuICovXG5mdW5jdGlvbiBlbmNvZGVGbG9hdDE2IChpbnApIHtcbiAgaWYgKGlucCA9PT0gSW5maW5pdHkpIHtcbiAgICBkYXRhVmlldy5zZXRVaW50MTYoMCwgMHg3YzAwLCBmYWxzZSlcbiAgfSBlbHNlIGlmIChpbnAgPT09IC1JbmZpbml0eSkge1xuICAgIGRhdGFWaWV3LnNldFVpbnQxNigwLCAweGZjMDAsIGZhbHNlKVxuICB9IGVsc2UgaWYgKE51bWJlci5pc05hTihpbnApKSB7XG4gICAgZGF0YVZpZXcuc2V0VWludDE2KDAsIDB4N2UwMCwgZmFsc2UpXG4gIH0gZWxzZSB7XG4gICAgZGF0YVZpZXcuc2V0RmxvYXQzMigwLCBpbnApXG4gICAgY29uc3QgdmFsdTMyID0gZGF0YVZpZXcuZ2V0VWludDMyKDApXG4gICAgY29uc3QgZXhwb25lbnQgPSAodmFsdTMyICYgMHg3ZjgwMDAwMCkgPj4gMjNcbiAgICBjb25zdCBtYW50aXNzYSA9IHZhbHUzMiAmIDB4N2ZmZmZmXG5cbiAgICAvKiBjOCBpZ25vcmUgbmV4dCA2ICovXG4gICAgaWYgKGV4cG9uZW50ID09PSAweGZmKSB7XG4gICAgICAvLyB0b28gYmlnLCBJbmZpbml0eSwgYnV0IHRoaXMgc2hvdWxkIGJlIGhhcmQgKGltcG9zc2libGU/KSB0byB0cmlnZ2VyXG4gICAgICBkYXRhVmlldy5zZXRVaW50MTYoMCwgMHg3YzAwLCBmYWxzZSlcbiAgICB9IGVsc2UgaWYgKGV4cG9uZW50ID09PSAweDAwKSB7XG4gICAgICAvLyAwLjAsIC0wLjAgYW5kIHN1Ym5vcm1hbHMsIHNob3VsZG4ndCBiZSBwb3NzaWJsZSB0byBnZXQgaGVyZSBiZWNhdXNlIDAuMCBzaG91bGQgYmUgY291bnRlZCBhcyBhbiBpbnRcbiAgICAgIGRhdGFWaWV3LnNldFVpbnQxNigwLCAoKGlucCAmIDB4ODAwMDAwMDApID4+IDE2KSB8IChtYW50aXNzYSA+PiAxMyksIGZhbHNlKVxuICAgIH0gZWxzZSB7IC8vIHN0YW5kYXJkIG51bWJlcnNcbiAgICAgIC8vIGNodW5rcyBvZiBsb2dpYyBoZXJlIGJvcnJvd2VkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL1BKSy9saWJjYm9yL2Jsb2IvYzc4ZjQzNzE4MjUzM2UzZWZhOGQ5NjNmZjRiOTQ1YmI2MzVjMjI4NC9zcmMvY2Jvci9lbmNvZGluZy5jI0wxMjdcbiAgICAgIGNvbnN0IGxvZ2ljYWxFeHBvbmVudCA9IGV4cG9uZW50IC0gMTI3XG4gICAgICAvLyBOb3cgd2Uga25vdyB0aGF0IDJeZXhwb25lbnQgPD0gMCBsb2dpY2FsbHlcbiAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDYgKi9cbiAgICAgIGlmIChsb2dpY2FsRXhwb25lbnQgPCAtMjQpIHtcbiAgICAgICAgLyogTm8gdW5hbWJpZ3VvdXMgcmVwcmVzZW50YXRpb24gZXhpc3RzLCB0aGlzIGZsb2F0IGlzIG5vdCBhIGhhbGYgZmxvYXRcbiAgICAgICAgICBhbmQgaXMgdG9vIHNtYWxsIHRvIGJlIHJlcHJlc2VudGVkIHVzaW5nIGEgaGFsZiwgcm91bmQgb2ZmIHRvIHplcm8uXG4gICAgICAgICAgQ29uc2lzdGVudCB3aXRoIHRoZSByZWZlcmVuY2UgaW1wbGVtZW50YXRpb24uICovXG4gICAgICAgIC8vIHNob3VsZCBiZSBkaWZmaWN1bHQgKGltcG9zc2libGU/KSB0byBnZXQgaGVyZSBpbiBKU1xuICAgICAgICBkYXRhVmlldy5zZXRVaW50MTYoMCwgMClcbiAgICAgIH0gZWxzZSBpZiAobG9naWNhbEV4cG9uZW50IDwgLTE0KSB7XG4gICAgICAgIC8qIE9mZnNldCB0aGUgcmVtYWluaW5nIGRlY2ltYWwgcGxhY2VzIGJ5IHNoaWZ0aW5nIHRoZSBzaWduaWZpY2FuZCwgdGhlXG4gICAgICAgICAgdmFsdWUgaXMgbG9zdC4gVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBkZWNpc2lvbiB0aGF0IHdvcmtzIGFyb3VuZCB0aGVcbiAgICAgICAgICBhYnNlbmNlIG9mIHN0YW5kYXJkIGhhbGYtZmxvYXQgaW4gdGhlIGxhbmd1YWdlLiAqL1xuICAgICAgICBkYXRhVmlldy5zZXRVaW50MTYoMCwgKCh2YWx1MzIgJiAweDgwMDAwMDAwKSA+PiAxNikgfCAvKiBzaWduIGJpdCAqLyAoMSA8PCAoMjQgKyBsb2dpY2FsRXhwb25lbnQpKSwgZmFsc2UpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkYXRhVmlldy5zZXRVaW50MTYoMCwgKCh2YWx1MzIgJiAweDgwMDAwMDAwKSA+PiAxNikgfCAoKGxvZ2ljYWxFeHBvbmVudCArIDE1KSA8PCAxMCkgfCAobWFudGlzc2EgPj4gMTMpLCBmYWxzZSlcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IHVpOGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIHJlYWRGbG9hdDE2ICh1aThhLCBwb3MpIHtcbiAgaWYgKHVpOGEubGVuZ3RoIC0gcG9zIDwgMikge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IG5vdCBlbm91Z2ggZGF0YSBmb3IgZmxvYXQxNmApXG4gIH1cblxuICBjb25zdCBoYWxmID0gKHVpOGFbcG9zXSA8PCA4KSArIHVpOGFbcG9zICsgMV1cbiAgaWYgKGhhbGYgPT09IDB4N2MwMCkge1xuICAgIHJldHVybiBJbmZpbml0eVxuICB9XG4gIGlmIChoYWxmID09PSAweGZjMDApIHtcbiAgICByZXR1cm4gLUluZmluaXR5XG4gIH1cbiAgaWYgKGhhbGYgPT09IDB4N2UwMCkge1xuICAgIHJldHVybiBOYU5cbiAgfVxuICBjb25zdCBleHAgPSAoaGFsZiA+PiAxMCkgJiAweDFmXG4gIGNvbnN0IG1hbnQgPSBoYWxmICYgMHgzZmZcbiAgbGV0IHZhbFxuICBpZiAoZXhwID09PSAwKSB7XG4gICAgdmFsID0gbWFudCAqICgyICoqIC0yNClcbiAgfSBlbHNlIGlmIChleHAgIT09IDMxKSB7XG4gICAgdmFsID0gKG1hbnQgKyAxMDI0KSAqICgyICoqIChleHAgLSAyNSkpXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgfSBlbHNlIHtcbiAgICAvLyBtYXkgbm90IGJlIHBvc3NpYmxlIHRvIGdldCBoZXJlXG4gICAgdmFsID0gbWFudCA9PT0gMCA/IEluZmluaXR5IDogTmFOXG4gIH1cbiAgcmV0dXJuIChoYWxmICYgMHg4MDAwKSA/IC12YWwgOiB2YWxcbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gaW5wXG4gKi9cbmZ1bmN0aW9uIGVuY29kZUZsb2F0MzIgKGlucCkge1xuICBkYXRhVmlldy5zZXRGbG9hdDMyKDAsIGlucCwgZmFsc2UpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSB1aThhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5mdW5jdGlvbiByZWFkRmxvYXQzMiAodWk4YSwgcG9zKSB7XG4gIGlmICh1aThhLmxlbmd0aCAtIHBvcyA8IDQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBub3QgZW5vdWdoIGRhdGEgZm9yIGZsb2F0MzJgKVxuICB9XG4gIGNvbnN0IG9mZnNldCA9ICh1aThhLmJ5dGVPZmZzZXQgfHwgMCkgKyBwb3NcbiAgcmV0dXJuIG5ldyBEYXRhVmlldyh1aThhLmJ1ZmZlciwgb2Zmc2V0LCA0KS5nZXRGbG9hdDMyKDAsIGZhbHNlKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbnBcbiAqL1xuZnVuY3Rpb24gZW5jb2RlRmxvYXQ2NCAoaW5wKSB7XG4gIGRhdGFWaWV3LnNldEZsb2F0NjQoMCwgaW5wLCBmYWxzZSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IHVpOGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIHJlYWRGbG9hdDY0ICh1aThhLCBwb3MpIHtcbiAgaWYgKHVpOGEubGVuZ3RoIC0gcG9zIDwgOCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IG5vdCBlbm91Z2ggZGF0YSBmb3IgZmxvYXQ2NGApXG4gIH1cbiAgY29uc3Qgb2Zmc2V0ID0gKHVpOGEuYnl0ZU9mZnNldCB8fCAwKSArIHBvc1xuICByZXR1cm4gbmV3IERhdGFWaWV3KHVpOGEuYnVmZmVyLCBvZmZzZXQsIDgpLmdldEZsb2F0NjQoMCwgZmFsc2UpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gX3RvazFcbiAqIEBwYXJhbSB7VG9rZW59IF90b2syXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVGbG9hdC5jb21wYXJlVG9rZW5zID0gZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG4vKlxuZW5jb2RlRmxvYXQuY29tcGFyZVRva2VucyA9IGZ1bmN0aW9uIGNvbXBhcmVUb2tlbnMgKF90b2sxLCBfdG9rMikge1xuICByZXR1cm4gX3RvazFcbiAgdGhyb3cgbmV3IEVycm9yKGAke2VuY29kZUVyclByZWZpeH0gY2Fubm90IHVzZSBmbG9hdHMgYXMgbWFwIGtleXNgKVxufVxuKi9cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/7float.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/bl.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/bl.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ Bl)\n/* harmony export */ });\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/byte-utils.js\");\n/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\n\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nclass Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.slice)(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvYmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNzRDs7QUFFdEQ7QUFDQTtBQUNBOztBQUVBOztBQUVPO0FBQ1A7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsZUFBZSx5QkFBeUI7QUFDeEM7QUFDQTtBQUNBLGVBQWUsMEJBQTBCO0FBQ3pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscURBQUs7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFNBQVM7QUFDdEIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxlQUFlLHFEQUFLO0FBQ3BCO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsYUFBYSxzREFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2JsLmpzPzcxNjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCbCBpcyBhIGxpc3Qgb2YgYnl0ZSBjaHVua3MsIHNpbWlsYXIgdG8gaHR0cHM6Ly9naXRodWIuY29tL3J2YWdnL2JsIGJ1dCBmb3JcbiAqIHdyaXRpbmcgcmF0aGVyIHRoYW4gcmVhZGluZy5cbiAqIEEgQmwgb2JqZWN0IGFjY2VwdHMgc2V0KCkgb3BlcmF0aW9ucyBmb3IgaW5kaXZpZHVhbCBieXRlcyBhbmQgY29weVRvKCkgZm9yXG4gKiBpbnNlcnRpbmcgYnl0ZSBhcnJheXMuIFRoZXNlIHdyaXRlIG9wZXJhdGlvbnMgZG9uJ3QgYXV0b21hdGljYWxseSBpbmNyZW1lbnRcbiAqIHRoZSBpbnRlcm5hbCBjdXJzb3Igc28gaXRzIFwibGVuZ3RoXCIgd29uJ3QgYmUgY2hhbmdlZC4gSW5zdGVhZCwgaW5jcmVtZW50KClcbiAqIG11c3QgYmUgY2FsbGVkIHRvIGV4dGVuZCBpdHMgbGVuZ3RoIHRvIGNvdmVyIHRoZSBpbnNlcnRlZCBkYXRhLlxuICogVGhlIHRvQnl0ZXMoKSBjYWxsIHdpbGwgY29udmVydCBhbGwgaW50ZXJuYWwgbWVtb3J5IHRvIGEgc2luZ2xlIFVpbnQ4QXJyYXkgb2ZcbiAqIHRoZSBjb3JyZWN0IGxlbmd0aCwgdHJ1bmNhdGluZyBhbnkgZGF0YSB0aGF0IGlzIHN0b3JlZCBidXQgaGFzbid0IGJlZW5cbiAqIGluY2x1ZGVkIGJ5IGFuIGluY3JlbWVudCgpLlxuICogZ2V0KCkgY2FuIHJldHJpZXZlIGEgc2luZ2xlIGJ5dGUuXG4gKiBBbGwgb3BlcmF0aW9ucyAoZXhjZXB0IHRvQnl0ZXMoKSkgdGFrZSBhbiBcIm9mZnNldFwiIGFyZ3VtZW50IHRoYXQgd2lsbCBwZXJmb3JtXG4gKiB0aGUgd3JpdGUgYXQgdGhlIG9mZnNldCBfZnJvbSB0aGUgY3VycmVudCBjdXJzb3JfLiBGb3IgbW9zdCBvcGVyYXRpb25zIHRoaXNcbiAqIHdpbGwgYmUgYDBgIHRvIHdyaXRlIGF0IHRoZSBjdXJyZW50IGN1cnNvciBwb3NpdGlvbiBidXQgaXQgY2FuIGJlIGFoZWFkIG9mXG4gKiB0aGUgY3VycmVudCBjdXJzb3IuIE5lZ2F0aXZlIG9mZnNldHMgcHJvYmFibHkgd29yayBidXQgYXJlIHVudGVzdGVkLlxuICovXG5cbi8vIFRPRE86IGlwanMgZG9lc24ndCBzdXBwb3J0IHRoaXMsIG9ubHkgZm9yIHRlc3QgZmlsZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9taWtlYWwvaXBqcy9ibG9iL21hc3Rlci9zcmMvcGFja2FnZS90ZXN0RmlsZS5qcyNMMzlcbmltcG9ydCB7IGFsbG9jLCBjb25jYXQsIHNsaWNlIH0gZnJvbSAnLi9ieXRlLXV0aWxzLmpzJ1xuXG4vLyB0aGUgdHMtaWdub3JlcyBpbiB0aGlzIGZpbGUgYXJlIGFsbW9zdCBhbGwgZm9yIHRoZSBgVWludDhBcnJheXxudW1iZXJbXWAgZHVhbGl0eSB0aGF0IGV4aXN0c1xuLy8gZm9yIHBlcmYgcmVhc29ucy4gQ29uc2lkZXIgYmV0dGVyIGFwcHJvYWNoZXMgdG8gdGhpcyBvciByZW1vdmluZyBpdCBlbnRpcmVseSwgaXQgaXMgcXVpdGVcbi8vIHJpc2t5IGJlY2F1c2Ugb2Ygc29tZSBhc3N1bXB0aW9ucyBhYm91dCBzbWFsbCBjaHVua3MgPT09IG51bWJlcltdIGFuZCBldmVyeXRoaW5nIGVsc2UgPT09IFVpbnQ4QXJyYXkuXG5cbmNvbnN0IGRlZmF1bHRDaHVua1NpemUgPSAyNTZcblxuZXhwb3J0IGNsYXNzIEJsIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbY2h1bmtTaXplXVxuICAgKi9cbiAgY29uc3RydWN0b3IgKGNodW5rU2l6ZSA9IGRlZmF1bHRDaHVua1NpemUpIHtcbiAgICB0aGlzLmNodW5rU2l6ZSA9IGNodW5rU2l6ZVxuICAgIC8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMuY3Vyc29yID0gMFxuICAgIC8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMubWF4Q3Vyc29yID0gLTFcbiAgICAvKiogQHR5cGUgeyhVaW50OEFycmF5fG51bWJlcltdKVtdfSAqL1xuICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICAvLyBrZWVwIHRoZSBmaXJzdCBjaHVuayBhcm91bmQgaWYgd2UgY2FuIHRvIHNhdmUgYWxsb2NhdGlvbnMgZm9yIGZ1dHVyZSBlbmNvZGVzXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fG51bWJlcltdfG51bGx9ICovXG4gICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSBudWxsXG4gIH1cblxuICByZXNldCAoKSB7XG4gICAgdGhpcy5jdXJzb3IgPSAwXG4gICAgdGhpcy5tYXhDdXJzb3IgPSAtMVxuICAgIGlmICh0aGlzLmNodW5rcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICB9XG4gICAgaWYgKHRoaXMuX2luaXRSZXVzZUNodW5rICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmNodW5rcy5wdXNoKHRoaXMuX2luaXRSZXVzZUNodW5rKVxuICAgICAgdGhpcy5tYXhDdXJzb3IgPSB0aGlzLl9pbml0UmV1c2VDaHVuay5sZW5ndGggLSAxXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7VWludDhBcnJheXxudW1iZXJbXX0gYnl0ZXNcbiAgICovXG4gIHB1c2ggKGJ5dGVzKSB7XG4gICAgbGV0IHRvcENodW5rID0gdGhpcy5jaHVua3NbdGhpcy5jaHVua3MubGVuZ3RoIC0gMV1cbiAgICBjb25zdCBuZXdNYXggPSB0aGlzLmN1cnNvciArIGJ5dGVzLmxlbmd0aFxuICAgIGlmIChuZXdNYXggPD0gdGhpcy5tYXhDdXJzb3IgKyAxKSB7XG4gICAgICAvLyB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBjaHVuayBhbmQgd2UgY2FuIGZpdCB0aGVzZSBieXRlcyBpbnRvIHRoYXQgY2h1bmtcbiAgICAgIGNvbnN0IGNodW5rUG9zID0gdG9wQ2h1bmsubGVuZ3RoIC0gKHRoaXMubWF4Q3Vyc29yIC0gdGhpcy5jdXJzb3IpIC0gMVxuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgdG9wQ2h1bmsuc2V0KGJ5dGVzLCBjaHVua1BvcylcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gY2FuJ3QgZml0IGl0IGluXG4gICAgICBpZiAodG9wQ2h1bmspIHtcbiAgICAgICAgLy8gdHJpcCB0aGUgbGFzdCBjaHVuayB0byBgY3Vyc29yYCBpZiB3ZSBuZWVkIHRvXG4gICAgICAgIGNvbnN0IGNodW5rUG9zID0gdG9wQ2h1bmsubGVuZ3RoIC0gKHRoaXMubWF4Q3Vyc29yIC0gdGhpcy5jdXJzb3IpIC0gMVxuICAgICAgICBpZiAoY2h1bmtQb3MgPCB0b3BDaHVuay5sZW5ndGgpIHtcbiAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgdGhpcy5jaHVua3NbdGhpcy5jaHVua3MubGVuZ3RoIC0gMV0gPSB0b3BDaHVuay5zdWJhcnJheSgwLCBjaHVua1BvcylcbiAgICAgICAgICB0aGlzLm1heEN1cnNvciA9IHRoaXMuY3Vyc29yIC0gMVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoYnl0ZXMubGVuZ3RoIDwgNjQgJiYgYnl0ZXMubGVuZ3RoIDwgdGhpcy5jaHVua1NpemUpIHtcbiAgICAgICAgLy8gbWFrZSBhIG5ldyBjaHVuayBhbmQgY29weSB0aGUgbmV3IG9uZSBpbnRvIGl0XG4gICAgICAgIHRvcENodW5rID0gYWxsb2ModGhpcy5jaHVua1NpemUpXG4gICAgICAgIHRoaXMuY2h1bmtzLnB1c2godG9wQ2h1bmspXG4gICAgICAgIHRoaXMubWF4Q3Vyc29yICs9IHRvcENodW5rLmxlbmd0aFxuICAgICAgICBpZiAodGhpcy5faW5pdFJldXNlQ2h1bmsgPT09IG51bGwpIHtcbiAgICAgICAgICB0aGlzLl9pbml0UmV1c2VDaHVuayA9IHRvcENodW5rXG4gICAgICAgIH1cbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICB0b3BDaHVuay5zZXQoYnl0ZXMsIDApXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBwdXNoIHRoZSBuZXcgYnl0ZXMgaW4gYXMgaXRzIG93biBjaHVua1xuICAgICAgICB0aGlzLmNodW5rcy5wdXNoKGJ5dGVzKVxuICAgICAgICB0aGlzLm1heEN1cnNvciArPSBieXRlcy5sZW5ndGhcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5jdXJzb3IgKz0gYnl0ZXMubGVuZ3RoXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtib29sZWFufSBbcmVzZXRdXG4gICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgKi9cbiAgdG9CeXRlcyAocmVzZXQgPSBmYWxzZSkge1xuICAgIGxldCBieXRzXG4gICAgaWYgKHRoaXMuY2h1bmtzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgY29uc3QgY2h1bmsgPSB0aGlzLmNodW5rc1swXVxuICAgICAgaWYgKHJlc2V0ICYmIHRoaXMuY3Vyc29yID4gY2h1bmsubGVuZ3RoIC8gMikge1xuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAyICovXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYnl0cyA9IHRoaXMuY3Vyc29yID09PSBjaHVuay5sZW5ndGggPyBjaHVuayA6IGNodW5rLnN1YmFycmF5KDAsIHRoaXMuY3Vyc29yKVxuICAgICAgICB0aGlzLl9pbml0UmV1c2VDaHVuayA9IG51bGxcbiAgICAgICAgdGhpcy5jaHVua3MgPSBbXVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBieXRzID0gc2xpY2UoY2h1bmssIDAsIHRoaXMuY3Vyc29yKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBieXRzID0gY29uY2F0KHRoaXMuY2h1bmtzLCB0aGlzLmN1cnNvcilcbiAgICB9XG4gICAgaWYgKHJlc2V0KSB7XG4gICAgICB0aGlzLnJlc2V0KClcbiAgICB9XG4gICAgcmV0dXJuIGJ5dHNcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/bl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/byte-utils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/byte-utils.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   asU8A: () => (/* binding */ asU8A),\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   decodeCodePointsArray: () => (/* binding */ decodeCodePointsArray),\n/* harmony export */   fromArray: () => (/* binding */ fromArray),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   useBuffer: () => (/* binding */ useBuffer)\n/* harmony export */ });\n// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nconst useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nfunction asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nconst toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nconst fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nconst fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nconst slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nconst concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nconst alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nconst toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nconst fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvYnl0ZS11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBLGVBQWUsWUFBWTtBQUMzQixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFlBQVk7QUFDM0IsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFlBQVk7QUFDM0IsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0IsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCLGVBQWUsUUFBUTtBQUN2QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsRUFBRSxFQUFFLGdDQUFnQztBQUN0Rzs7QUFFTztBQUNQO0FBQ0E7QUFDQSxhQUFhLG1CQUFtQjtBQUNoQyxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQW1CO0FBQ2hDLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsUUFBUSxpQkFBaUIsUUFBUSxpQkFBaUIsVUFBVSw0QkFBNEIsRUFBRSxFQUFFLFNBQVM7QUFDOUg7QUFDQSx5QkFBeUIsUUFBUTtBQUNqQzs7QUFFQTtBQUNBLFdBQVcsd0NBQXdDO0FBQ25ELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ieXRlLXV0aWxzLmpzP2MwYjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVXNlIFVpbnQ4QXJyYXkgZGlyZWN0bHkgaW4gdGhlIGJyb3dzZXIsIHVzZSBCdWZmZXIgaW4gTm9kZS5qcyBidXQgZG9uJ3Rcbi8vIHNwZWFrIGl0cyBuYW1lIGRpcmVjdGx5IHRvIGF2b2lkIGJ1bmRsZXJzIHB1bGxpbmcgaW4gdGhlIGBCdWZmZXJgIHBvbHlmaWxsXG5cbi8vIEB0cy1pZ25vcmVcbmV4cG9ydCBjb25zdCB1c2VCdWZmZXIgPSBnbG9iYWxUaGlzLnByb2Nlc3MgJiZcbiAgLy8gQHRzLWlnbm9yZVxuICAhZ2xvYmFsVGhpcy5wcm9jZXNzLmJyb3dzZXIgJiZcbiAgLy8gQHRzLWlnbm9yZVxuICBnbG9iYWxUaGlzLkJ1ZmZlciAmJlxuICAvLyBAdHMtaWdub3JlXG4gIHR5cGVvZiBnbG9iYWxUaGlzLkJ1ZmZlci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJ1xuXG5jb25zdCB0ZXh0RGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpXG5jb25zdCB0ZXh0RW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBidWZcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc0J1ZmZlciAoYnVmKSB7XG4gIC8vIEB0cy1pZ25vcmVcbiAgcmV0dXJuIHVzZUJ1ZmZlciAmJiBnbG9iYWxUaGlzLkJ1ZmZlci5pc0J1ZmZlcihidWYpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fG51bWJlcltdfSBidWZcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNVOEEgKGJ1Zikge1xuICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICBpZiAoIShidWYgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oYnVmKVxuICB9XG4gIHJldHVybiBpc0J1ZmZlcihidWYpID8gbmV3IFVpbnQ4QXJyYXkoYnVmLmJ1ZmZlciwgYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5ieXRlTGVuZ3RoKSA6IGJ1ZlxufVxuXG5leHBvcnQgY29uc3QgdG9TdHJpbmcgPSB1c2VCdWZmZXJcbiAgPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc3RhcnRcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZW5kXG4gICAgICovXG4gICAgKGJ5dGVzLCBzdGFydCwgZW5kKSA9PiB7XG4gICAgICByZXR1cm4gZW5kIC0gc3RhcnQgPiA2NFxuICAgICAgICA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgb3BlcmF0b3ItbGluZWJyZWFrXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oYnl0ZXMuc3ViYXJyYXkoc3RhcnQsIGVuZCkpLnRvU3RyaW5nKCd1dGY4JylcbiAgICAgICAgOiB1dGY4U2xpY2UoYnl0ZXMsIHN0YXJ0LCBlbmQpXG4gICAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCAxMSAqL1xuICA6IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgb3BlcmF0b3ItbGluZWJyZWFrXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBlbmRcbiAgICAgKi9cbiAgICAoYnl0ZXMsIHN0YXJ0LCBlbmQpID0+IHtcbiAgICAgIHJldHVybiBlbmQgLSBzdGFydCA+IDY0XG4gICAgICAgID8gdGV4dERlY29kZXIuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHN0YXJ0LCBlbmQpKVxuICAgICAgICA6IHV0ZjhTbGljZShieXRlcywgc3RhcnQsIGVuZClcbiAgICB9XG5cbmV4cG9ydCBjb25zdCBmcm9tU3RyaW5nID0gdXNlQnVmZmVyXG4gID8gLy8gZXNsaW50LWRpc2FibGUtbGluZSBvcGVyYXRvci1saW5lYnJlYWtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gICAgICovXG4gICAgKHN0cmluZykgPT4ge1xuICAgICAgcmV0dXJuIHN0cmluZy5sZW5ndGggPiA2NFxuICAgICAgICA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgb3BlcmF0b3ItbGluZWJyZWFrXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oc3RyaW5nKVxuICAgICAgICA6IHV0ZjhUb0J5dGVzKHN0cmluZylcbiAgICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDcgKi9cbiAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAgICAgKi9cbiAgICAoc3RyaW5nKSA9PiB7XG4gICAgICByZXR1cm4gc3RyaW5nLmxlbmd0aCA+IDY0ID8gdGV4dEVuY29kZXIuZW5jb2RlKHN0cmluZykgOiB1dGY4VG9CeXRlcyhzdHJpbmcpXG4gICAgfVxuXG4vKipcbiAqIEJ1ZmZlciB2YXJpYW50IG5vdCBmYXN0IGVub3VnaCBmb3Igd2hhdCB3ZSBuZWVkXG4gKiBAcGFyYW0ge251bWJlcltdfSBhcnJcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5leHBvcnQgY29uc3QgZnJvbUFycmF5ID0gKGFycikgPT4ge1xuICByZXR1cm4gVWludDhBcnJheS5mcm9tKGFycilcbn1cblxuZXhwb3J0IGNvbnN0IHNsaWNlID0gdXNlQnVmZmVyXG4gID8gLy8gZXNsaW50LWRpc2FibGUtbGluZSBvcGVyYXRvci1saW5lYnJlYWtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGVuZFxuICAgICAqL1xuICAgIChieXRlcywgc3RhcnQsIGVuZCkgPT4ge1xuICAgICAgaWYgKGlzQnVmZmVyKGJ5dGVzKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnl0ZXMuc3ViYXJyYXkoc3RhcnQsIGVuZCkpXG4gICAgICB9XG4gICAgICByZXR1cm4gYnl0ZXMuc2xpY2Uoc3RhcnQsIGVuZClcbiAgICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDkgKi9cbiAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc3RhcnRcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZW5kXG4gICAgICovXG4gICAgKGJ5dGVzLCBzdGFydCwgZW5kKSA9PiB7XG4gICAgICByZXR1cm4gYnl0ZXMuc2xpY2Uoc3RhcnQsIGVuZClcbiAgICB9XG5cbmV4cG9ydCBjb25zdCBjb25jYXQgPSB1c2VCdWZmZXJcbiAgPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheVtdfSBjaHVua3NcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gICAgICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gICAgICovXG4gICAgKGNodW5rcywgbGVuZ3RoKSA9PiB7XG4gICAgICAvLyBtaWdodCBnZXQgYSBzdHJheSBwbGFpbiBBcnJheSBoZXJlXG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgICBjaHVua3MgPSBjaHVua3MubWFwKChjKSA9PiBjIGluc3RhbmNlb2YgVWludDhBcnJheVxuICAgICAgICA/IGNcbiAgICAgICAgLy8gdGhpcyBjYXNlIGlzIG9jY2FzaW9uYWxseSBtaXNzZWQgZHVyaW5nIHRlc3QgcnVucyBzbyBiZWNvbWVzIGNvdmVyYWdlLWZsYWt5XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgICAgICAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oYykpXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICByZXR1cm4gYXNVOEEoZ2xvYmFsVGhpcy5CdWZmZXIuY29uY2F0KGNodW5rcywgbGVuZ3RoKSlcbiAgICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDE5ICovXG4gIDogLy8gZXNsaW50LWRpc2FibGUtbGluZSBvcGVyYXRvci1saW5lYnJlYWtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXlbXX0gY2h1bmtzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICAgICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgICAqL1xuICAgIChjaHVua3MsIGxlbmd0aCkgPT4ge1xuICAgICAgY29uc3Qgb3V0ID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKVxuICAgICAgbGV0IG9mZiA9IDBcbiAgICAgIGZvciAobGV0IGIgb2YgY2h1bmtzKSB7XG4gICAgICAgIGlmIChvZmYgKyBiLmxlbmd0aCA+IG91dC5sZW5ndGgpIHtcbiAgICAgICAgICAvLyBmaW5hbCBjaHVuayB0aGF0J3MgYmlnZ2VyIHRoYW4gd2UgbmVlZFxuICAgICAgICAgIGIgPSBiLnN1YmFycmF5KDAsIG91dC5sZW5ndGggLSBvZmYpXG4gICAgICAgIH1cbiAgICAgICAgb3V0LnNldChiLCBvZmYpXG4gICAgICAgIG9mZiArPSBiLmxlbmd0aFxuICAgICAgfVxuICAgICAgcmV0dXJuIG91dFxuICAgIH1cblxuZXhwb3J0IGNvbnN0IGFsbG9jID0gdXNlQnVmZmVyXG4gID8gLy8gZXNsaW50LWRpc2FibGUtbGluZSBvcGVyYXRvci1saW5lYnJlYWtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc2l6ZVxuICAgICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgICAqL1xuICAgIChzaXplKSA9PiB7XG4gICAgICAvLyB3ZSBhbHdheXMgd3JpdGUgb3ZlciB0aGUgY29udGVudHMgd2UgZXhwb3NlIHNvIHRoaXMgc2hvdWxkIGJlIHNhZmVcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvY1Vuc2FmZShzaXplKVxuICAgIH1cbiAgLyogYzggaWdub3JlIG5leHQgOCAqL1xuICA6IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgb3BlcmF0b3ItbGluZWJyZWFrXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHNpemVcbiAgICAgKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAgICAgKi9cbiAgICAoc2l6ZSkgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHNpemUpXG4gICAgfVxuXG5leHBvcnQgY29uc3QgdG9IZXggPSB1c2VCdWZmZXJcbiAgPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gZFxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgKGQpID0+IHtcbiAgICAgIGlmICh0eXBlb2YgZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGRcbiAgICAgIH1cbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKHRvQnl0ZXMoZCkpLnRvU3RyaW5nKCdoZXgnKVxuICAgIH1cbiAgLyogYzggaWdub3JlIG5leHQgMTIgKi9cbiAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gZFxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgKGQpID0+IHtcbiAgICAgIGlmICh0eXBlb2YgZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGRcbiAgICAgIH1cbiAgICAgIC8vIEB0cy1pZ25vcmUgbm90IHNtYXJ0IGVub3VnaCB0byBmaWd1cmUgdGhpcyBvdXRcbiAgICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUucmVkdWNlLmNhbGwodG9CeXRlcyhkKSwgKHAsIGMpID0+IGAke3B9JHtjLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpfWAsICcnKVxuICAgIH1cblxuZXhwb3J0IGNvbnN0IGZyb21IZXggPSB1c2VCdWZmZXJcbiAgPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd8VWludDhBcnJheX0gaGV4XG4gICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgKi9cbiAgICAoaGV4KSA9PiB7XG4gICAgICBpZiAoaGV4IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gaGV4XG4gICAgICB9XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICByZXR1cm4gZ2xvYmFsVGhpcy5CdWZmZXIuZnJvbShoZXgsICdoZXgnKVxuICAgIH1cbiAgLyogYzggaWdub3JlIG5leHQgMTcgKi9cbiAgOiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG9wZXJhdG9yLWxpbmVicmVha1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd8VWludDhBcnJheX0gaGV4XG4gICAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICAgKi9cbiAgICAoaGV4KSA9PiB7XG4gICAgICBpZiAoaGV4IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gaGV4XG4gICAgICB9XG4gICAgICBpZiAoIWhleC5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KDApXG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaGV4LnNwbGl0KCcnKVxuICAgICAgICAubWFwKCgvKiogQHR5cGUge3N0cmluZ30gKi8gYywgLyoqIEB0eXBlIHtudW1iZXJ9ICovIGksIC8qKiBAdHlwZSB7c3RyaW5nW119ICovIGQpID0+IGkgJSAyID09PSAwID8gYDB4JHtjfSR7ZFtpICsgMV19YCA6ICcnKVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgIC5tYXAoKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyBlKSA9PiBwYXJzZUludChlLCAxNikpKVxuICAgIH1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl8QXJyYXlCdWZmZXJ8QXJyYXlCdWZmZXJWaWV3fSBvYmpcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5mdW5jdGlvbiB0b0J5dGVzIChvYmopIHtcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgb2JqLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdVaW50OEFycmF5Jykge1xuICAgIHJldHVybiBvYmpcbiAgfVxuICBpZiAob2JqIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkob2JqKVxuICB9XG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcob2JqKSkge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShvYmouYnVmZmVyLCBvYmouYnl0ZU9mZnNldCwgb2JqLmJ5dGVMZW5ndGgpXG4gIH1cbiAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYjFcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYjJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlIChiMSwgYjIpIHtcbiAgLyogYzggaWdub3JlIG5leHQgNSAqL1xuICBpZiAoaXNCdWZmZXIoYjEpICYmIGlzQnVmZmVyKGIyKSkge1xuICAgIC8vIHByb2JhYmx5IG5vdCBwb3NzaWJsZSB0byBnZXQgaGVyZSBpbiB0aGUgY3VycmVudCBBUElcbiAgICAvLyBAdHMtaWdub3JlIEJ1ZmZlclxuICAgIHJldHVybiBiMS5jb21wYXJlKGIyKVxuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYjEubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoYjFbaV0gPT09IGIyW2ldKSB7XG4gICAgICBjb250aW51ZVxuICAgIH1cbiAgICByZXR1cm4gYjFbaV0gPCBiMltpXSA/IC0xIDogMVxuICB9IC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgcmV0dXJuIDBcbn1cblxuLy8gVGhlIGJlbG93IGNvZGUgaXMgdGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL2Nsb3N1cmUtbGlicmFyeS9ibG9iLzg1OThkODcyNDJhZjU5YWFjMjMzMjcwNzQyYzg5ODRlMmIyYmRiZTAvY2xvc3VyZS9nb29nL2NyeXB0L2NyeXB0LmpzI0wxMTctTDE0M1xuLy8gTGljZW5zZWQgQXBhY2hlLTIuMC5cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7bnVtYmVyW119XG4gKi9cbmZ1bmN0aW9uIHV0ZjhUb0J5dGVzIChzdHIpIHtcbiAgY29uc3Qgb3V0ID0gW11cbiAgbGV0IHAgPSAwXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IGMgPSBzdHIuY2hhckNvZGVBdChpKVxuICAgIGlmIChjIDwgMTI4KSB7XG4gICAgICBvdXRbcCsrXSA9IGNcbiAgICB9IGVsc2UgaWYgKGMgPCAyMDQ4KSB7XG4gICAgICBvdXRbcCsrXSA9IChjID4+IDYpIHwgMTkyXG4gICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4XG4gICAgfSBlbHNlIGlmIChcbiAgICAgICgoYyAmIDB4RkMwMCkgPT09IDB4RDgwMCkgJiYgKGkgKyAxKSA8IHN0ci5sZW5ndGggJiZcbiAgICAgICgoc3RyLmNoYXJDb2RlQXQoaSArIDEpICYgMHhGQzAwKSA9PT0gMHhEQzAwKSkge1xuICAgICAgLy8gU3Vycm9nYXRlIFBhaXJcbiAgICAgIGMgPSAweDEwMDAwICsgKChjICYgMHgwM0ZGKSA8PCAxMCkgKyAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4MDNGRilcbiAgICAgIG91dFtwKytdID0gKGMgPj4gMTgpIHwgMjQwXG4gICAgICBvdXRbcCsrXSA9ICgoYyA+PiAxMikgJiA2MykgfCAxMjhcbiAgICAgIG91dFtwKytdID0gKChjID4+IDYpICYgNjMpIHwgMTI4XG4gICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dFtwKytdID0gKGMgPj4gMTIpIHwgMjI0XG4gICAgICBvdXRbcCsrXSA9ICgoYyA+PiA2KSAmIDYzKSB8IDEyOFxuICAgICAgb3V0W3ArK10gPSAoYyAmIDYzKSB8IDEyOFxuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0XG59XG5cbi8vIFRoZSBiZWxvdyBjb2RlIGlzIG1vc3RseSB0YWtlbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyXG4vLyBMaWNlbnNlZCBNSVQuIENvcHlyaWdodCAoYykgRmVyb3NzIEFib3VraGFkaWplaFxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnVmXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKiBAcGFyYW0ge251bWJlcn0gZW5kXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiB1dGY4U2xpY2UgKGJ1Ziwgb2Zmc2V0LCBlbmQpIHtcbiAgY29uc3QgcmVzID0gW11cblxuICB3aGlsZSAob2Zmc2V0IDwgZW5kKSB7XG4gICAgY29uc3QgZmlyc3RCeXRlID0gYnVmW29mZnNldF1cbiAgICBsZXQgY29kZVBvaW50ID0gbnVsbFxuICAgIGxldCBieXRlc1BlclNlcXVlbmNlID0gKGZpcnN0Qnl0ZSA+IDB4ZWYpID8gNCA6IChmaXJzdEJ5dGUgPiAweGRmKSA/IDMgOiAoZmlyc3RCeXRlID4gMHhiZikgPyAyIDogMVxuXG4gICAgaWYgKG9mZnNldCArIGJ5dGVzUGVyU2VxdWVuY2UgPD0gZW5kKSB7XG4gICAgICBsZXQgc2Vjb25kQnl0ZSwgdGhpcmRCeXRlLCBmb3VydGhCeXRlLCB0ZW1wQ29kZVBvaW50XG5cbiAgICAgIHN3aXRjaCAoYnl0ZXNQZXJTZXF1ZW5jZSkge1xuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgaWYgKGZpcnN0Qnl0ZSA8IDB4ODApIHtcbiAgICAgICAgICAgIGNvZGVQb2ludCA9IGZpcnN0Qnl0ZVxuICAgICAgICAgIH1cbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgc2Vjb25kQnl0ZSA9IGJ1ZltvZmZzZXQgKyAxXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4YzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4MWYpIDw8IDB4NiB8IChzZWNvbmRCeXRlICYgMHgzZilcbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHg3Zikge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW29mZnNldCArIDFdXG4gICAgICAgICAgdGhpcmRCeXRlID0gYnVmW29mZnNldCArIDJdXG4gICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhjMCkgPT09IDB4ODAgJiYgKHRoaXJkQnl0ZSAmIDB4YzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4ZikgPDwgMHhjIHwgKHNlY29uZEJ5dGUgJiAweDNmKSA8PCAweDYgfCAodGhpcmRCeXRlICYgMHgzZilcbiAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHg3ZmYgJiYgKHRlbXBDb2RlUG9pbnQgPCAweGQ4MDAgfHwgdGVtcENvZGVQb2ludCA+IDB4ZGZmZikpIHtcbiAgICAgICAgICAgICAgY29kZVBvaW50ID0gdGVtcENvZGVQb2ludFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgc2Vjb25kQnl0ZSA9IGJ1ZltvZmZzZXQgKyAxXVxuICAgICAgICAgIHRoaXJkQnl0ZSA9IGJ1ZltvZmZzZXQgKyAyXVxuICAgICAgICAgIGZvdXJ0aEJ5dGUgPSBidWZbb2Zmc2V0ICsgM11cbiAgICAgICAgICBpZiAoKHNlY29uZEJ5dGUgJiAweGMwKSA9PT0gMHg4MCAmJiAodGhpcmRCeXRlICYgMHhjMCkgPT09IDB4ODAgJiYgKGZvdXJ0aEJ5dGUgJiAweGMwKSA9PT0gMHg4MCkge1xuICAgICAgICAgICAgdGVtcENvZGVQb2ludCA9IChmaXJzdEJ5dGUgJiAweGYpIDw8IDB4MTIgfCAoc2Vjb25kQnl0ZSAmIDB4M2YpIDw8IDB4YyB8ICh0aGlyZEJ5dGUgJiAweDNmKSA8PCAweDYgfCAoZm91cnRoQnl0ZSAmIDB4M2YpXG4gICAgICAgICAgICBpZiAodGVtcENvZGVQb2ludCA+IDB4ZmZmZiAmJiB0ZW1wQ29kZVBvaW50IDwgMHgxMTAwMDApIHtcbiAgICAgICAgICAgICAgY29kZVBvaW50ID0gdGVtcENvZGVQb2ludFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBjOCBpZ25vcmUgbmV4dCA1ICovXG4gICAgaWYgKGNvZGVQb2ludCA9PT0gbnVsbCkge1xuICAgICAgLy8gd2UgZGlkIG5vdCBnZW5lcmF0ZSBhIHZhbGlkIGNvZGVQb2ludCBzbyBpbnNlcnQgYVxuICAgICAgLy8gcmVwbGFjZW1lbnQgY2hhciAoVStGRkZEKSBhbmQgYWR2YW5jZSBvbmx5IDEgYnl0ZVxuICAgICAgY29kZVBvaW50ID0gMHhmZmZkXG4gICAgICBieXRlc1BlclNlcXVlbmNlID0gMVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50ID4gMHhmZmZmKSB7XG4gICAgICAvLyBlbmNvZGUgdG8gdXRmMTYgKHN1cnJvZ2F0ZSBwYWlyIGRhbmNlKVxuICAgICAgY29kZVBvaW50IC09IDB4MTAwMDBcbiAgICAgIHJlcy5wdXNoKGNvZGVQb2ludCA+Pj4gMTAgJiAweDNmZiB8IDB4ZDgwMClcbiAgICAgIGNvZGVQb2ludCA9IDB4ZGMwMCB8IGNvZGVQb2ludCAmIDB4M2ZmXG4gICAgfVxuXG4gICAgcmVzLnB1c2goY29kZVBvaW50KVxuICAgIG9mZnNldCArPSBieXRlc1BlclNlcXVlbmNlXG4gIH1cblxuICByZXR1cm4gZGVjb2RlQ29kZVBvaW50c0FycmF5KHJlcylcbn1cblxuLy8gQmFzZWQgb24gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjI3NDcyNzIvNjgwNzQyLCB0aGUgYnJvd3NlciB3aXRoXG4vLyB0aGUgbG93ZXN0IGxpbWl0IGlzIENocm9tZSwgd2l0aCAweDEwMDAwIGFyZ3MuXG4vLyBXZSBnbyAxIG1hZ25pdHVkZSBsZXNzLCBmb3Igc2FmZXR5XG5jb25zdCBNQVhfQVJHVU1FTlRTX0xFTkdUSCA9IDB4MTAwMFxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyW119IGNvZGVQb2ludHNcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkgKGNvZGVQb2ludHMpIHtcbiAgY29uc3QgbGVuID0gY29kZVBvaW50cy5sZW5ndGhcbiAgaWYgKGxlbiA8PSBNQVhfQVJHVU1FTlRTX0xFTkdUSCkge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZywgY29kZVBvaW50cykgLy8gYXZvaWQgZXh0cmEgc2xpY2UoKVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDEwICovXG4gIC8vIERlY29kZSBpbiBjaHVua3MgdG8gYXZvaWQgXCJjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWRcIi5cbiAgbGV0IHJlcyA9ICcnXG4gIGxldCBpID0gMFxuICB3aGlsZSAoaSA8IGxlbikge1xuICAgIHJlcyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFxuICAgICAgU3RyaW5nLFxuICAgICAgY29kZVBvaW50cy5zbGljZShpLCBpICs9IE1BWF9BUkdVTUVOVFNfTEVOR1RIKVxuICAgIClcbiAgfVxuICByZXR1cm4gcmVzXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/byte-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/common.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnoughData: () => (/* binding */ assertEnoughData),\n/* harmony export */   decodeErrPrefix: () => (/* binding */ decodeErrPrefix),\n/* harmony export */   encodeErrPrefix: () => (/* binding */ encodeErrPrefix),\n/* harmony export */   uintMinorPrefixBytes: () => (/* binding */ uintMinorPrefixBytes)\n/* harmony export */ });\nconst decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvY29tbW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixpQkFBaUI7QUFDeEM7QUFDQTs7QUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2NvbW1vbi5qcz84NTJkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRlY29kZUVyclByZWZpeCA9ICdDQk9SIGRlY29kZSBlcnJvcjonXG5jb25zdCBlbmNvZGVFcnJQcmVmaXggPSAnQ0JPUiBlbmNvZGUgZXJyb3I6J1xuXG5jb25zdCB1aW50TWlub3JQcmVmaXhCeXRlcyA9IFtdXG51aW50TWlub3JQcmVmaXhCeXRlc1syM10gPSAxXG51aW50TWlub3JQcmVmaXhCeXRlc1syNF0gPSAyXG51aW50TWlub3JQcmVmaXhCeXRlc1syNV0gPSAzXG51aW50TWlub3JQcmVmaXhCeXRlc1syNl0gPSA1XG51aW50TWlub3JQcmVmaXhCeXRlc1syN10gPSA5XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbmVlZFxuICovXG5mdW5jdGlvbiBhc3NlcnRFbm91Z2hEYXRhIChkYXRhLCBwb3MsIG5lZWQpIHtcbiAgaWYgKGRhdGEubGVuZ3RoIC0gcG9zIDwgbmVlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IG5vdCBlbm91Z2ggZGF0YSBmb3IgdHlwZWApXG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgZGVjb2RlRXJyUHJlZml4LFxuICBlbmNvZGVFcnJQcmVmaXgsXG4gIHVpbnRNaW5vclByZWZpeEJ5dGVzLFxuICBhc3NlcnRFbm91Z2hEYXRhXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/decode.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/decode.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokeniser: () => (/* binding */ Tokeniser),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   tokensToObject: () => (/* binding */ tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/jump.js\");\n\n\n\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = _jump_js__WEBPACK_IMPORTED_MODULE_2__.quick[byt]\n    if (token === undefined) {\n      const decoder = _jump_js__WEBPACK_IMPORTED_MODULE_2__.jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/encode.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/encode.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ref: () => (/* binding */ Ref),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeCustom: () => (/* binding */ encodeCustom),\n/* harmony export */   makeCborEncoders: () => (/* binding */ makeCborEncoders),\n/* harmony export */   objectToTokens: () => (/* binding */ objectToTokens)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/is.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _bl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bl.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/bl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/jump.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/7float.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_4__.quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nfunction makeCborEncoders () {\n  const encoders = []\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint.major] = _0uint_js__WEBPACK_IMPORTED_MODULE_6__.encodeUint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint.major] = _1negint_js__WEBPACK_IMPORTED_MODULE_7__.encodeNegint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes.major] = _2bytes_js__WEBPACK_IMPORTED_MODULE_8__.encodeBytes\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string.major] = _3string_js__WEBPACK_IMPORTED_MODULE_9__.encodeString\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array.major] = _4array_js__WEBPACK_IMPORTED_MODULE_10__.encodeArray\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map.major] = _5map_js__WEBPACK_IMPORTED_MODULE_11__.encodeMap\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag.major] = _6tag_js__WEBPACK_IMPORTED_MODULE_12__.encodeTag\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float.major] = _7float_js__WEBPACK_IMPORTED_MODULE_13__.encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null),\n  undefined: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.undefined, undefined),\n  true: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true),\n  false: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false),\n  emptyArray: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, 0),\n  emptyMap: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, obj)\n    } else if (obj >= 0) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.is)(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_5__.asU8A)(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/is.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/is.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   is: () => (/* binding */ is)\n/* harmony export */ });\n// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nfunction is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvaXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2lzLmpzP2JkODEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBpcyBhbiB1bmZvcnR1bmF0ZSByZXBsYWNlbWVudCBmb3IgQHNpbmRyZXNvcmh1cy9pcyB0aGF0IHdlIG5lZWQgdG9cbi8vIHJlLWltcGxlbWVudCBmb3IgcGVyZm9ybWFuY2UgcHVycG9zZXMuIEluIHBhcnRpY3VsYXIgdGhlIGlzLm9ic2VydmFibGUoKVxuLy8gY2hlY2sgaXMgZXhwZW5zaXZlLCBhbmQgdW5uZWNlc3NhcnkgZm9yIG91ciBwdXJwb3Nlcy4gVGhlIHZhbHVlcyByZXR1cm5lZFxuLy8gYXJlIGNvbXBhdGlibGUgd2l0aCBAc2luZHJlc29yaHVzL2lzLCBob3dldmVyLlxuXG5jb25zdCB0eXBlb2ZzID0gW1xuICAnc3RyaW5nJyxcbiAgJ251bWJlcicsXG4gICdiaWdpbnQnLFxuICAnc3ltYm9sJ1xuXVxuXG5jb25zdCBvYmplY3RUeXBlTmFtZXMgPSBbXG4gICdGdW5jdGlvbicsXG4gICdHZW5lcmF0b3InLFxuICAnQXN5bmNHZW5lcmF0b3InLFxuICAnR2VuZXJhdG9yRnVuY3Rpb24nLFxuICAnQXN5bmNHZW5lcmF0b3JGdW5jdGlvbicsXG4gICdBc3luY0Z1bmN0aW9uJyxcbiAgJ09ic2VydmFibGUnLFxuICAnQXJyYXknLFxuICAnQnVmZmVyJyxcbiAgJ09iamVjdCcsXG4gICdSZWdFeHAnLFxuICAnRGF0ZScsXG4gICdFcnJvcicsXG4gICdNYXAnLFxuICAnU2V0JyxcbiAgJ1dlYWtNYXAnLFxuICAnV2Vha1NldCcsXG4gICdBcnJheUJ1ZmZlcicsXG4gICdTaGFyZWRBcnJheUJ1ZmZlcicsXG4gICdEYXRhVmlldycsXG4gICdQcm9taXNlJyxcbiAgJ1VSTCcsXG4gICdIVE1MRWxlbWVudCcsXG4gICdJbnQ4QXJyYXknLFxuICAnVWludDhBcnJheScsXG4gICdVaW50OENsYW1wZWRBcnJheScsXG4gICdJbnQxNkFycmF5JyxcbiAgJ1VpbnQxNkFycmF5JyxcbiAgJ0ludDMyQXJyYXknLFxuICAnVWludDMyQXJyYXknLFxuICAnRmxvYXQzMkFycmF5JyxcbiAgJ0Zsb2F0NjRBcnJheScsXG4gICdCaWdJbnQ2NEFycmF5JyxcbiAgJ0JpZ1VpbnQ2NEFycmF5J1xuXVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzICh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gJ251bGwnXG4gIH1cbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gJ3VuZGVmaW5lZCdcbiAgfVxuICBpZiAodmFsdWUgPT09IHRydWUgfHwgdmFsdWUgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuICdib29sZWFuJ1xuICB9XG4gIGNvbnN0IHR5cGVPZiA9IHR5cGVvZiB2YWx1ZVxuICBpZiAodHlwZW9mcy5pbmNsdWRlcyh0eXBlT2YpKSB7XG4gICAgcmV0dXJuIHR5cGVPZlxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDQgKi9cbiAgLy8gbm90IGdvaW5nIHRvIGJvdGhlciB0ZXN0aW5nIHRoaXMsIGl0J3Mgbm90IGdvaW5nIHRvIGJlIHZhbGlkIGFueXdheVxuICBpZiAodHlwZU9mID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuICdGdW5jdGlvbidcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gJ0FycmF5J1xuICB9XG4gIGlmIChpc0J1ZmZlcih2YWx1ZSkpIHtcbiAgICByZXR1cm4gJ0J1ZmZlcidcbiAgfVxuICBjb25zdCBvYmplY3RUeXBlID0gZ2V0T2JqZWN0VHlwZSh2YWx1ZSlcbiAgaWYgKG9iamVjdFR5cGUpIHtcbiAgICByZXR1cm4gb2JqZWN0VHlwZVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiAnT2JqZWN0J1xufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGlzQnVmZmVyICh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgJiYgdmFsdWUuY29uc3RydWN0b3IgJiYgdmFsdWUuY29uc3RydWN0b3IuaXNCdWZmZXIgJiYgdmFsdWUuY29uc3RydWN0b3IuaXNCdWZmZXIuY2FsbChudWxsLCB2YWx1ZSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtzdHJpbmd8dW5kZWZpbmVkfVxuICovXG5mdW5jdGlvbiBnZXRPYmplY3RUeXBlICh2YWx1ZSkge1xuICBjb25zdCBvYmplY3RUeXBlTmFtZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkuc2xpY2UoOCwgLTEpXG4gIGlmIChvYmplY3RUeXBlTmFtZXMuaW5jbHVkZXMob2JqZWN0VHlwZU5hbWUpKSB7XG4gICAgcmV0dXJuIG9iamVjdFR5cGVOYW1lXG4gIH1cbiAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgcmV0dXJuIHVuZGVmaW5lZFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/jump.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/jump.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jump: () => (/* binding */ jump),\n/* harmony export */   quick: () => (/* binding */ quick),\n/* harmony export */   quickEncodeToken: () => (/* binding */ quickEncodeToken)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/7float.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nconst jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytesCompact\n}\njump[0x58] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeStringCompact\n}\njump[0x78] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayCompact\n}\njump[0x98] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapCompact\n}\njump[0xb8] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTagCompact\n}\njump[0xd8] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag8\njump[0xd9] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag16\njump[0xda] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag32\njump[0xdb] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nconst quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, '', 1)\n// empty list\nquick[0x80] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, 0, 1)\n// empty map\nquick[0xa0] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, 0, 1)\n// false\nquick[0xf4] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false, false, 1)\n// true\nquick[0xf5] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true, true, 1)\n// null\nquick[0xf6] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nfunction quickEncodeToken (token) {\n  switch (token.type) {\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf4])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf5])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf6])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes:\n      if (!token.value.length) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x40])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string:\n      if (token.value === '') {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x60])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint:\n      if (token.value < 24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([Number(token.value)])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint:\n      if (token.value >= -24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([31 - Number(token.value)])\n      }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/jump.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/length.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/length.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodedLength: () => (/* binding */ encodedLength),\n/* harmony export */   tokensToLength: () => (/* binding */ tokensToLength)\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/jump.js\");\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\nconst cborEncoders = (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.makeCborEncoders)()\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_1__.quickEncodeToken\n}\n\n/**\n * Calculate the byte length of the given data when encoded as CBOR with the\n * options provided.\n * This calculation will be accurate if the same options are used as when\n * performing a normal encode. Some encode options can change the encoding\n * output length.\n *\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {number}\n */\nfunction encodedLength (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  options.mapSorter = undefined // won't change the length\n  const tokens = (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.objectToTokens)(data, options)\n  return tokensToLength(tokens, cborEncoders, options)\n}\n\n/**\n * Calculate the byte length of the data as represented by the given tokens when\n * encoded as CBOR with the options provided.\n * This function is for advanced users and would not normally be called\n * directly. See `encodedLength()` for appropriate use.\n *\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} [encoders]\n * @param {EncodeOptions} [options]\n */\nfunction tokensToLength (tokens, encoders = cborEncoders, options = defaultEncodeOptions) {\n  if (Array.isArray(tokens)) {\n    let len = 0\n    for (const token of tokens) {\n      len += tokensToLength(token, encoders, options)\n    }\n    return len\n  } else {\n    const encoder = encoders[tokens.type.major]\n    /* c8 ignore next 3 */\n    if (encoder.encodedSize === undefined || typeof encoder.encodedSize !== 'function') {\n      throw new Error(`Encoder for ${tokens.type.name} does not have an encodedSize()`)\n    }\n    return encoder.encodedSize(tokens, options)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvbGVuZ3RoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEQ7QUFDbEI7O0FBRTVDO0FBQ0EsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSx5Q0FBeUM7QUFDdEQsYUFBYSw0Q0FBNEM7QUFDekQ7O0FBRUEscUJBQXFCLDREQUFnQjs7QUFFckMsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsNEJBQTRCO0FBQzVCO0FBQ0EsaUJBQWlCLDBEQUFjO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEMsV0FBVyxvQkFBb0I7QUFDL0IsV0FBVyxlQUFlO0FBQzFCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGtCQUFrQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2xlbmd0aC5qcz82ZmFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ha2VDYm9yRW5jb2RlcnMsIG9iamVjdFRvVG9rZW5zIH0gZnJvbSAnLi9lbmNvZGUuanMnXG5pbXBvcnQgeyBxdWlja0VuY29kZVRva2VuIH0gZnJvbSAnLi9qdW1wLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkVuY29kZU9wdGlvbnN9IEVuY29kZU9wdGlvbnNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLlRva2VuVHlwZUVuY29kZXJ9IFRva2VuVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLlRva2VuT3JOZXN0ZWRUb2tlbnN9IFRva2VuT3JOZXN0ZWRUb2tlbnNcbiAqL1xuXG5jb25zdCBjYm9yRW5jb2RlcnMgPSBtYWtlQ2JvckVuY29kZXJzKClcblxuLyoqIEB0eXBlIHtFbmNvZGVPcHRpb25zfSAqL1xuY29uc3QgZGVmYXVsdEVuY29kZU9wdGlvbnMgPSB7XG4gIGZsb2F0NjQ6IGZhbHNlLFxuICBxdWlja0VuY29kZVRva2VuXG59XG5cbi8qKlxuICogQ2FsY3VsYXRlIHRoZSBieXRlIGxlbmd0aCBvZiB0aGUgZ2l2ZW4gZGF0YSB3aGVuIGVuY29kZWQgYXMgQ0JPUiB3aXRoIHRoZVxuICogb3B0aW9ucyBwcm92aWRlZC5cbiAqIFRoaXMgY2FsY3VsYXRpb24gd2lsbCBiZSBhY2N1cmF0ZSBpZiB0aGUgc2FtZSBvcHRpb25zIGFyZSB1c2VkIGFzIHdoZW5cbiAqIHBlcmZvcm1pbmcgYSBub3JtYWwgZW5jb2RlLiBTb21lIGVuY29kZSBvcHRpb25zIGNhbiBjaGFuZ2UgdGhlIGVuY29kaW5nXG4gKiBvdXRwdXQgbGVuZ3RoLlxuICpcbiAqIEBwYXJhbSB7YW55fSBkYXRhXG4gKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZWRMZW5ndGggKGRhdGEsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRFbmNvZGVPcHRpb25zLCBvcHRpb25zKVxuICBvcHRpb25zLm1hcFNvcnRlciA9IHVuZGVmaW5lZCAvLyB3b24ndCBjaGFuZ2UgdGhlIGxlbmd0aFxuICBjb25zdCB0b2tlbnMgPSBvYmplY3RUb1Rva2VucyhkYXRhLCBvcHRpb25zKVxuICByZXR1cm4gdG9rZW5zVG9MZW5ndGgodG9rZW5zLCBjYm9yRW5jb2RlcnMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQ2FsY3VsYXRlIHRoZSBieXRlIGxlbmd0aCBvZiB0aGUgZGF0YSBhcyByZXByZXNlbnRlZCBieSB0aGUgZ2l2ZW4gdG9rZW5zIHdoZW5cbiAqIGVuY29kZWQgYXMgQ0JPUiB3aXRoIHRoZSBvcHRpb25zIHByb3ZpZGVkLlxuICogVGhpcyBmdW5jdGlvbiBpcyBmb3IgYWR2YW5jZWQgdXNlcnMgYW5kIHdvdWxkIG5vdCBub3JtYWxseSBiZSBjYWxsZWRcbiAqIGRpcmVjdGx5LiBTZWUgYGVuY29kZWRMZW5ndGgoKWAgZm9yIGFwcHJvcHJpYXRlIHVzZS5cbiAqXG4gKiBAcGFyYW0ge1Rva2VuT3JOZXN0ZWRUb2tlbnN9IHRva2Vuc1xuICogQHBhcmFtIHtUb2tlblR5cGVFbmNvZGVyW119IFtlbmNvZGVyc11cbiAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gW29wdGlvbnNdXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b2tlbnNUb0xlbmd0aCAodG9rZW5zLCBlbmNvZGVycyA9IGNib3JFbmNvZGVycywgb3B0aW9ucyA9IGRlZmF1bHRFbmNvZGVPcHRpb25zKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHRva2VucykpIHtcbiAgICBsZXQgbGVuID0gMFxuICAgIGZvciAoY29uc3QgdG9rZW4gb2YgdG9rZW5zKSB7XG4gICAgICBsZW4gKz0gdG9rZW5zVG9MZW5ndGgodG9rZW4sIGVuY29kZXJzLCBvcHRpb25zKVxuICAgIH1cbiAgICByZXR1cm4gbGVuXG4gIH0gZWxzZSB7XG4gICAgY29uc3QgZW5jb2RlciA9IGVuY29kZXJzW3Rva2Vucy50eXBlLm1ham9yXVxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICBpZiAoZW5jb2Rlci5lbmNvZGVkU2l6ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBlbmNvZGVyLmVuY29kZWRTaXplICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEVuY29kZXIgZm9yICR7dG9rZW5zLnR5cGUubmFtZX0gZG9lcyBub3QgaGF2ZSBhbiBlbmNvZGVkU2l6ZSgpYClcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZXIuZW5jb2RlZFNpemUodG9rZW5zLCBvcHRpb25zKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/length.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/cborg/lib/token.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\nclass Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvdG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQixXQUFXLElBQUksVUFBVTtBQUM1Qzs7QUFFQTtBQUNBLGFBQWEsTUFBTTtBQUNuQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0JBQXNCO0FBQ3JDO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLFVBQVUsSUFBSSxXQUFXO0FBQzdDO0FBQ0E7O0FBRXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvdG9rZW4uanM/Yjk2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBUeXBlIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBtYWpvclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHRlcm1pbmFsXG4gICAqL1xuICBjb25zdHJ1Y3RvciAobWFqb3IsIG5hbWUsIHRlcm1pbmFsKSB7XG4gICAgdGhpcy5tYWpvciA9IG1ham9yXG4gICAgdGhpcy5tYWpvckVuY29kZWQgPSBtYWpvciA8PCA1XG4gICAgdGhpcy5uYW1lID0gbmFtZVxuICAgIHRoaXMudGVybWluYWwgPSB0ZXJtaW5hbFxuICB9XG5cbiAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICB0b1N0cmluZyAoKSB7XG4gICAgcmV0dXJuIGBUeXBlWyR7dGhpcy5tYWpvcn1dLiR7dGhpcy5uYW1lfWBcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1R5cGV9IHR5cFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgKi9cbiAgY29tcGFyZSAodHlwKSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgIHJldHVybiB0aGlzLm1ham9yIDwgdHlwLm1ham9yID8gLTEgOiB0aGlzLm1ham9yID4gdHlwLm1ham9yID8gMSA6IDBcbiAgfVxufVxuXG4vLyBjb252ZXJ0IHRvIHN0YXRpYyBmaWVsZHMgd2hlbiBiZXR0ZXIgc3VwcG9ydGVkXG5UeXBlLnVpbnQgPSBuZXcgVHlwZSgwLCAndWludCcsIHRydWUpXG5UeXBlLm5lZ2ludCA9IG5ldyBUeXBlKDEsICduZWdpbnQnLCB0cnVlKVxuVHlwZS5ieXRlcyA9IG5ldyBUeXBlKDIsICdieXRlcycsIHRydWUpXG5UeXBlLnN0cmluZyA9IG5ldyBUeXBlKDMsICdzdHJpbmcnLCB0cnVlKVxuVHlwZS5hcnJheSA9IG5ldyBUeXBlKDQsICdhcnJheScsIGZhbHNlKVxuVHlwZS5tYXAgPSBuZXcgVHlwZSg1LCAnbWFwJywgZmFsc2UpXG5UeXBlLnRhZyA9IG5ldyBUeXBlKDYsICd0YWcnLCBmYWxzZSkgLy8gdGVybWluYWw/XG5UeXBlLmZsb2F0ID0gbmV3IFR5cGUoNywgJ2Zsb2F0JywgdHJ1ZSlcblR5cGUuZmFsc2UgPSBuZXcgVHlwZSg3LCAnZmFsc2UnLCB0cnVlKVxuVHlwZS50cnVlID0gbmV3IFR5cGUoNywgJ3RydWUnLCB0cnVlKVxuVHlwZS5udWxsID0gbmV3IFR5cGUoNywgJ251bGwnLCB0cnVlKVxuVHlwZS51bmRlZmluZWQgPSBuZXcgVHlwZSg3LCAndW5kZWZpbmVkJywgdHJ1ZSlcblR5cGUuYnJlYWsgPSBuZXcgVHlwZSg3LCAnYnJlYWsnLCB0cnVlKVxuLy8gVHlwZS5pbmRlZmluaXRlTGVuZ3RoID0gbmV3IFR5cGUoMCwgJ2luZGVmaW5pdGVMZW5ndGgnLCB0cnVlKVxuXG5jbGFzcyBUb2tlbiB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge1R5cGV9IHR5cGVcbiAgICogQHBhcmFtIHthbnl9IFt2YWx1ZV1cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtlbmNvZGVkTGVuZ3RoXVxuICAgKi9cbiAgY29uc3RydWN0b3IgKHR5cGUsIHZhbHVlLCBlbmNvZGVkTGVuZ3RoKSB7XG4gICAgdGhpcy50eXBlID0gdHlwZVxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZVxuICAgIHRoaXMuZW5jb2RlZExlbmd0aCA9IGVuY29kZWRMZW5ndGhcbiAgICAvKiogQHR5cGUge1VpbnQ4QXJyYXl8dW5kZWZpbmVkfSAqL1xuICAgIHRoaXMuZW5jb2RlZEJ5dGVzID0gdW5kZWZpbmVkXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmJ5dGVWYWx1ZSA9IHVuZGVmaW5lZFxuICB9XG5cbiAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICB0b1N0cmluZyAoKSB7XG4gICAgcmV0dXJuIGBUb2tlblske3RoaXMudHlwZX1dLiR7dGhpcy52YWx1ZX1gXG4gIH1cbn1cblxuZXhwb3J0IHsgVHlwZSwgVG9rZW4gfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/cborg/lib/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFDO0FBQ0c7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsWUFBWSxFQUFFLHVCQUF1QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUscUJBQXFCLElBQUksV0FBVyw2Q0FBNkMsWUFBWTtBQUM5SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLHNCQUFzQiw4QkFBOEIsNEJBQTRCO0FBQ2xKO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSwrQkFBK0IscUJBQXFCO0FBQ3BELGdDQUFnQyx1QkFBdUI7QUFDdkQsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQkFBZ0IsOEJBQThCO0FBQ3JEO0FBQ0E7QUFDTyxpQkFBaUIsd0JBQXdCO0FBQ2hELFlBQVksaUJBQWlCLEVBQUUsNkRBQUs7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsaURBQU07QUFDaEMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLG9CQUFvQjtBQUNwQixxQkFBcUI7QUFDckIsb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLE1BQU07QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixvQkFBb0I7QUFDcEIsb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUJBQW1CLHFDQUFxQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlLmpzPzMyNTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0IGJhc2V4IGZyb20gJy4uL3ZlbmRvci9iYXNlLXguanMnO1xuLyoqXG4gKiBDbGFzcyByZXByZXNlbnRzIGJvdGggQmFzZUVuY29kZXIgYW5kIE11bHRpYmFzZUVuY29kZXIgbWVhbmluZyBpdFxuICogY2FuIGJlIHVzZWQgdG8gZW5jb2RlIHRvIG11bHRpYmFzZSBvciBiYXNlIGVuY29kZSB3aXRob3V0IG11bHRpYmFzZVxuICogcHJlZml4LlxuICovXG5jbGFzcyBFbmNvZGVyIHtcbiAgICBuYW1lO1xuICAgIHByZWZpeDtcbiAgICBiYXNlRW5jb2RlO1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeCwgYmFzZUVuY29kZSkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnByZWZpeCA9IHByZWZpeDtcbiAgICAgICAgdGhpcy5iYXNlRW5jb2RlID0gYmFzZUVuY29kZTtcbiAgICB9XG4gICAgZW5jb2RlKGJ5dGVzKSB7XG4gICAgICAgIGlmIChieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHt0aGlzLnByZWZpeH0ke3RoaXMuYmFzZUVuY29kZShieXRlcyl9YDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgcmVwcmVzZW50cyBib3RoIEJhc2VEZWNvZGVyIGFuZCBNdWx0aWJhc2VEZWNvZGVyIHNvIGl0IGNvdWxkIGJlIHVzZWRcbiAqIHRvIGRlY29kZSBtdWx0aWJhc2VzICh3aXRoIG1hdGNoaW5nIHByZWZpeCkgb3IganVzdCBiYXNlIGRlY29kZSBzdHJpbmdzXG4gKiB3aXRoIGNvcnJlc3BvbmRpbmcgYmFzZSBlbmNvZGluZy5cbiAqL1xuY2xhc3MgRGVjb2RlciB7XG4gICAgbmFtZTtcbiAgICBwcmVmaXg7XG4gICAgYmFzZURlY29kZTtcbiAgICBwcmVmaXhDb2RlUG9pbnQ7XG4gICAgY29uc3RydWN0b3IobmFtZSwgcHJlZml4LCBiYXNlRGVjb2RlKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMucHJlZml4ID0gcHJlZml4O1xuICAgICAgICBjb25zdCBwcmVmaXhDb2RlUG9pbnQgPSBwcmVmaXguY29kZVBvaW50QXQoMCk7XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICAgICAgaWYgKHByZWZpeENvZGVQb2ludCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcHJlZml4IGNoYXJhY3RlcicpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJlZml4Q29kZVBvaW50ID0gcHJlZml4Q29kZVBvaW50O1xuICAgICAgICB0aGlzLmJhc2VEZWNvZGUgPSBiYXNlRGVjb2RlO1xuICAgIH1cbiAgICBkZWNvZGUodGV4dCkge1xuICAgICAgICBpZiAodHlwZW9mIHRleHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBpZiAodGV4dC5jb2RlUG9pbnRBdCgwKSAhPT0gdGhpcy5wcmVmaXhDb2RlUG9pbnQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihgVW5hYmxlIHRvIGRlY29kZSBtdWx0aWJhc2Ugc3RyaW5nICR7SlNPTi5zdHJpbmdpZnkodGV4dCl9LCAke3RoaXMubmFtZX0gZGVjb2RlciBvbmx5IHN1cHBvcnRzIGlucHV0cyBwcmVmaXhlZCB3aXRoICR7dGhpcy5wcmVmaXh9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5iYXNlRGVjb2RlKHRleHQuc2xpY2UodGhpcy5wcmVmaXgubGVuZ3RoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignQ2FuIG9ubHkgbXVsdGliYXNlIGRlY29kZSBzdHJpbmdzJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb3IoZGVjb2Rlcikge1xuICAgICAgICByZXR1cm4gb3IodGhpcywgZGVjb2Rlcik7XG4gICAgfVxufVxuY2xhc3MgQ29tcG9zZWREZWNvZGVyIHtcbiAgICBkZWNvZGVycztcbiAgICBjb25zdHJ1Y3RvcihkZWNvZGVycykge1xuICAgICAgICB0aGlzLmRlY29kZXJzID0gZGVjb2RlcnM7XG4gICAgfVxuICAgIG9yKGRlY29kZXIpIHtcbiAgICAgICAgcmV0dXJuIG9yKHRoaXMsIGRlY29kZXIpO1xuICAgIH1cbiAgICBkZWNvZGUoaW5wdXQpIHtcbiAgICAgICAgY29uc3QgcHJlZml4ID0gaW5wdXRbMF07XG4gICAgICAgIGNvbnN0IGRlY29kZXIgPSB0aGlzLmRlY29kZXJzW3ByZWZpeF07XG4gICAgICAgIGlmIChkZWNvZGVyICE9IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBkZWNvZGVyLmRlY29kZShpbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBSYW5nZUVycm9yKGBVbmFibGUgdG8gZGVjb2RlIG11bHRpYmFzZSBzdHJpbmcgJHtKU09OLnN0cmluZ2lmeShpbnB1dCl9LCBvbmx5IGlucHV0cyBwcmVmaXhlZCB3aXRoICR7T2JqZWN0LmtleXModGhpcy5kZWNvZGVycyl9IGFyZSBzdXBwb3J0ZWRgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBvcihsZWZ0LCByaWdodCkge1xuICAgIHJldHVybiBuZXcgQ29tcG9zZWREZWNvZGVyKHtcbiAgICAgICAgLi4uKGxlZnQuZGVjb2RlcnMgPz8geyBbbGVmdC5wcmVmaXhdOiBsZWZ0IH0pLFxuICAgICAgICAuLi4ocmlnaHQuZGVjb2RlcnMgPz8geyBbcmlnaHQucHJlZml4XTogcmlnaHQgfSlcbiAgICB9KTtcbn1cbmV4cG9ydCBjbGFzcyBDb2RlYyB7XG4gICAgbmFtZTtcbiAgICBwcmVmaXg7XG4gICAgYmFzZUVuY29kZTtcbiAgICBiYXNlRGVjb2RlO1xuICAgIGVuY29kZXI7XG4gICAgZGVjb2RlcjtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBwcmVmaXgsIGJhc2VFbmNvZGUsIGJhc2VEZWNvZGUpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgICAgIHRoaXMuYmFzZUVuY29kZSA9IGJhc2VFbmNvZGU7XG4gICAgICAgIHRoaXMuYmFzZURlY29kZSA9IGJhc2VEZWNvZGU7XG4gICAgICAgIHRoaXMuZW5jb2RlciA9IG5ldyBFbmNvZGVyKG5hbWUsIHByZWZpeCwgYmFzZUVuY29kZSk7XG4gICAgICAgIHRoaXMuZGVjb2RlciA9IG5ldyBEZWNvZGVyKG5hbWUsIHByZWZpeCwgYmFzZURlY29kZSk7XG4gICAgfVxuICAgIGVuY29kZShpbnB1dCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbmNvZGVyLmVuY29kZShpbnB1dCk7XG4gICAgfVxuICAgIGRlY29kZShpbnB1dCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVyLmRlY29kZShpbnB1dCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGZyb20oeyBuYW1lLCBwcmVmaXgsIGVuY29kZSwgZGVjb2RlIH0pIHtcbiAgICByZXR1cm4gbmV3IENvZGVjKG5hbWUsIHByZWZpeCwgZW5jb2RlLCBkZWNvZGUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJhc2VYKHsgbmFtZSwgcHJlZml4LCBhbHBoYWJldCB9KSB7XG4gICAgY29uc3QgeyBlbmNvZGUsIGRlY29kZSB9ID0gYmFzZXgoYWxwaGFiZXQsIG5hbWUpO1xuICAgIHJldHVybiBmcm9tKHtcbiAgICAgICAgcHJlZml4LFxuICAgICAgICBuYW1lLFxuICAgICAgICBlbmNvZGUsXG4gICAgICAgIGRlY29kZTogKHRleHQpID0+IGNvZXJjZShkZWNvZGUodGV4dCkpXG4gICAgfSk7XG59XG5mdW5jdGlvbiBkZWNvZGUoc3RyaW5nLCBhbHBoYWJldElkeCwgYml0c1BlckNoYXIsIG5hbWUpIHtcbiAgICAvLyBDb3VudCB0aGUgcGFkZGluZyBieXRlczpcbiAgICBsZXQgZW5kID0gc3RyaW5nLmxlbmd0aDtcbiAgICB3aGlsZSAoc3RyaW5nW2VuZCAtIDFdID09PSAnPScpIHtcbiAgICAgICAgLS1lbmQ7XG4gICAgfVxuICAgIC8vIEFsbG9jYXRlIHRoZSBvdXRwdXQ6XG4gICAgY29uc3Qgb3V0ID0gbmV3IFVpbnQ4QXJyYXkoKGVuZCAqIGJpdHNQZXJDaGFyIC8gOCkgfCAwKTtcbiAgICAvLyBQYXJzZSB0aGUgZGF0YTpcbiAgICBsZXQgYml0cyA9IDA7IC8vIE51bWJlciBvZiBiaXRzIGN1cnJlbnRseSBpbiB0aGUgYnVmZmVyXG4gICAgbGV0IGJ1ZmZlciA9IDA7IC8vIEJpdHMgd2FpdGluZyB0byBiZSB3cml0dGVuIG91dCwgTVNCIGZpcnN0XG4gICAgbGV0IHdyaXR0ZW4gPSAwOyAvLyBOZXh0IGJ5dGUgdG8gd3JpdGVcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVuZDsgKytpKSB7XG4gICAgICAgIC8vIFJlYWQgb25lIGNoYXJhY3RlciBmcm9tIHRoZSBzdHJpbmc6XG4gICAgICAgIGNvbnN0IHZhbHVlID0gYWxwaGFiZXRJZHhbc3RyaW5nW2ldXTtcbiAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihgTm9uLSR7bmFtZX0gY2hhcmFjdGVyYCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQXBwZW5kIHRoZSBiaXRzIHRvIHRoZSBidWZmZXI6XG4gICAgICAgIGJ1ZmZlciA9IChidWZmZXIgPDwgYml0c1BlckNoYXIpIHwgdmFsdWU7XG4gICAgICAgIGJpdHMgKz0gYml0c1BlckNoYXI7XG4gICAgICAgIC8vIFdyaXRlIG91dCBzb21lIGJpdHMgaWYgdGhlIGJ1ZmZlciBoYXMgYSBieXRlJ3Mgd29ydGg6XG4gICAgICAgIGlmIChiaXRzID49IDgpIHtcbiAgICAgICAgICAgIGJpdHMgLT0gODtcbiAgICAgICAgICAgIG91dFt3cml0dGVuKytdID0gMHhmZiAmIChidWZmZXIgPj4gYml0cyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gVmVyaWZ5IHRoYXQgd2UgaGF2ZSByZWNlaXZlZCBqdXN0IGVub3VnaCBiaXRzOlxuICAgIGlmIChiaXRzID49IGJpdHNQZXJDaGFyIHx8ICgweGZmICYgKGJ1ZmZlciA8PCAoOCAtIGJpdHMpKSkgIT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdVbmV4cGVjdGVkIGVuZCBvZiBkYXRhJyk7XG4gICAgfVxuICAgIHJldHVybiBvdXQ7XG59XG5mdW5jdGlvbiBlbmNvZGUoZGF0YSwgYWxwaGFiZXQsIGJpdHNQZXJDaGFyKSB7XG4gICAgY29uc3QgcGFkID0gYWxwaGFiZXRbYWxwaGFiZXQubGVuZ3RoIC0gMV0gPT09ICc9JztcbiAgICBjb25zdCBtYXNrID0gKDEgPDwgYml0c1BlckNoYXIpIC0gMTtcbiAgICBsZXQgb3V0ID0gJyc7XG4gICAgbGV0IGJpdHMgPSAwOyAvLyBOdW1iZXIgb2YgYml0cyBjdXJyZW50bHkgaW4gdGhlIGJ1ZmZlclxuICAgIGxldCBidWZmZXIgPSAwOyAvLyBCaXRzIHdhaXRpbmcgdG8gYmUgd3JpdHRlbiBvdXQsIE1TQiBmaXJzdFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7ICsraSkge1xuICAgICAgICAvLyBTbHVycCBkYXRhIGludG8gdGhlIGJ1ZmZlcjpcbiAgICAgICAgYnVmZmVyID0gKGJ1ZmZlciA8PCA4KSB8IGRhdGFbaV07XG4gICAgICAgIGJpdHMgKz0gODtcbiAgICAgICAgLy8gV3JpdGUgb3V0IGFzIG11Y2ggYXMgd2UgY2FuOlxuICAgICAgICB3aGlsZSAoYml0cyA+IGJpdHNQZXJDaGFyKSB7XG4gICAgICAgICAgICBiaXRzIC09IGJpdHNQZXJDaGFyO1xuICAgICAgICAgICAgb3V0ICs9IGFscGhhYmV0W21hc2sgJiAoYnVmZmVyID4+IGJpdHMpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBQYXJ0aWFsIGNoYXJhY3RlcjpcbiAgICBpZiAoYml0cyAhPT0gMCkge1xuICAgICAgICBvdXQgKz0gYWxwaGFiZXRbbWFzayAmIChidWZmZXIgPDwgKGJpdHNQZXJDaGFyIC0gYml0cykpXTtcbiAgICB9XG4gICAgLy8gQWRkIHBhZGRpbmcgY2hhcmFjdGVycyB1bnRpbCB3ZSBoaXQgYSBieXRlIGJvdW5kYXJ5OlxuICAgIGlmIChwYWQpIHtcbiAgICAgICAgd2hpbGUgKCgob3V0Lmxlbmd0aCAqIGJpdHNQZXJDaGFyKSAmIDcpICE9PSAwKSB7XG4gICAgICAgICAgICBvdXQgKz0gJz0nO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvdXQ7XG59XG5mdW5jdGlvbiBjcmVhdGVBbHBoYWJldElkeChhbHBoYWJldCkge1xuICAgIC8vIEJ1aWxkIHRoZSBjaGFyYWN0ZXIgbG9va3VwIHRhYmxlOlxuICAgIGNvbnN0IGFscGhhYmV0SWR4ID0ge307XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbHBoYWJldC5sZW5ndGg7ICsraSkge1xuICAgICAgICBhbHBoYWJldElkeFthbHBoYWJldFtpXV0gPSBpO1xuICAgIH1cbiAgICByZXR1cm4gYWxwaGFiZXRJZHg7XG59XG4vKipcbiAqIFJGQzQ2NDggRmFjdG9yeVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmZjNDY0OCh7IG5hbWUsIHByZWZpeCwgYml0c1BlckNoYXIsIGFscGhhYmV0IH0pIHtcbiAgICBjb25zdCBhbHBoYWJldElkeCA9IGNyZWF0ZUFscGhhYmV0SWR4KGFscGhhYmV0KTtcbiAgICByZXR1cm4gZnJvbSh7XG4gICAgICAgIHByZWZpeCxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZW5jb2RlKGlucHV0KSB7XG4gICAgICAgICAgICByZXR1cm4gZW5jb2RlKGlucHV0LCBhbHBoYWJldCwgYml0c1BlckNoYXIpO1xuICAgICAgICB9LFxuICAgICAgICBkZWNvZGUoaW5wdXQpIHtcbiAgICAgICAgICAgIHJldHVybiBkZWNvZGUoaW5wdXQsIGFscGhhYmV0SWR4LCBiaXRzUGVyQ2hhciwgbmFtZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base32.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base32.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsaURBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHVCQUF1QixpREFBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSwwQkFBMEIsaURBQU87QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sZ0JBQWdCLGlEQUFPO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzPzQ1NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTMyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnYicsXG4gICAgbmFtZTogJ2Jhc2UzMicsXG4gICAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnQicsXG4gICAgbmFtZTogJ2Jhc2UzMnVwcGVyJyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnYycsXG4gICAgbmFtZTogJ2Jhc2UzMnBhZCcsXG4gICAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2Nz0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2Nz0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXggPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd2JyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4dXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdWJyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVYnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWQgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd0JyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4cGFkJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2PScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWPScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnogPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdoJyxcbiAgICBuYW1lOiAnYmFzZTMyeicsXG4gICAgYWxwaGFiZXQ6ICd5Ym5kcmZnOGVqa21jcHF4b3QxdXdpc3phMzQ1aDc2OScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTMyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base36.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base36.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixlQUFlLCtDQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsK0NBQUs7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzP2U0NWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzNiA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdrJyxcbiAgICBuYW1lOiAnYmFzZTM2JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzNnVwcGVyID0gYmFzZVgoe1xuICAgIHByZWZpeDogJ0snLFxuICAgIG5hbWU6ICdiYXNlMzZ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzNi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base58.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base58.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixrQkFBa0IsK0NBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQiwrQ0FBSztBQUNqQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanM/ZjY2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlWCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTU4YnRjID0gYmFzZVgoe1xuICAgIG5hbWU6ICdiYXNlNThidGMnLFxuICAgIHByZWZpeDogJ3onLFxuICAgIGFscGhhYmV0OiAnMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGZsaWNrciA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4ZmxpY2tyJyxcbiAgICBwcmVmaXg6ICdaJyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OWFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXpBQkNERUZHSEpLTE1OUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U1OC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/interface.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/interface.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ1U7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2ludGVyZmFjZS5qcz8wZjBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEJhc2UgZW5jb2RlcnMgLyBkZWNvZGVycyBqdXN0IGJhc2UgZW5jb2RlIC8gZGVjb2RlIGJldHdlZW4gYmluYXJ5IGFuZFxuLy8gdGV4dHVhbCByZXByZXNlbnRhdGlvbi4gVGhleSBhcmUgdW5hd2FyZSBvZiBtdWx0aWJhc2UuXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/block/interface.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/block/interface.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmxvY2svaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmxvY2svaW50ZXJmYWNlLmpzPzdjMWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bytes.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bytes.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanM/Nzk4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1wdHkgPSBuZXcgVWludDhBcnJheSgwKTtcbmV4cG9ydCBmdW5jdGlvbiB0b0hleChkKSB7XG4gICAgcmV0dXJuIGQucmVkdWNlKChoZXgsIGJ5dGUpID0+IGhleCArIGJ5dGUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyksICcnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tSGV4KGhleCkge1xuICAgIGNvbnN0IGhleGVzID0gaGV4Lm1hdGNoKC8uLi9nKTtcbiAgICByZXR1cm4gaGV4ZXMgIT0gbnVsbCA/IG5ldyBVaW50OEFycmF5KGhleGVzLm1hcChiID0+IHBhcnNlSW50KGIsIDE2KSkpIDogZW1wdHk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGFhLCBiYikge1xuICAgIGlmIChhYSA9PT0gYmIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChhYS5ieXRlTGVuZ3RoICE9PSBiYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGFhLmJ5dGVMZW5ndGg7IGlpKyspIHtcbiAgICAgICAgaWYgKGFhW2lpXSAhPT0gYmJbaWldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29lcmNlKG8pIHtcbiAgICBpZiAobyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgby5jb25zdHJ1Y3Rvci5uYW1lID09PSAnVWludDhBcnJheScpIHtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfVxuICAgIGlmIChvIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KG8pO1xuICAgIH1cbiAgICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KG8pKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvLmJ1ZmZlciwgby5ieXRlT2Zmc2V0LCBvLmJ5dGVMZW5ndGgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmluYXJ5KG8pIHtcbiAgICByZXR1cm4gbyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IEFycmF5QnVmZmVyLmlzVmlldyhvKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU3RyaW5nKHN0cikge1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1N0cmluZyhiKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/cid.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/cid.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/codecs/interface.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9pbnRlcmZhY2UuanM/MGU2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/digest.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJEO0FBQ3BCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsc0RBQXFCO0FBQzVDLHNDQUFzQyxzREFBcUI7QUFDM0Q7QUFDQSxJQUFJLGdEQUFlO0FBQ25CLElBQUksZ0RBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IsaURBQU07QUFDeEIsK0JBQStCLDhDQUFhO0FBQzVDLGlDQUFpQyw4Q0FBYTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlEQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcz81MmQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSwgZXF1YWxzIGFzIGVxdWFsQnl0ZXMgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJztcbi8qKlxuICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoY29kZSwgZGlnZXN0KSB7XG4gICAgY29uc3Qgc2l6ZSA9IGRpZ2VzdC5ieXRlTGVuZ3RoO1xuICAgIGNvbnN0IHNpemVPZmZzZXQgPSB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoY29kZSk7XG4gICAgY29uc3QgZGlnZXN0T2Zmc2V0ID0gc2l6ZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGRpZ2VzdE9mZnNldCArIHNpemUpO1xuICAgIHZhcmludC5lbmNvZGVUbyhjb2RlLCBieXRlcywgMCk7XG4gICAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KTtcbiAgICBieXRlcy5zZXQoZGlnZXN0LCBkaWdlc3RPZmZzZXQpO1xuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuLyoqXG4gKiBUdXJucyBieXRlcyByZXByZXNlbnRhdGlvbiBvZiBtdWx0aWhhc2ggZGlnZXN0IGludG8gYW4gaW5zdGFuY2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUobXVsdGloYXNoKSB7XG4gICAgY29uc3QgYnl0ZXMgPSBjb2VyY2UobXVsdGloYXNoKTtcbiAgICBjb25zdCBbY29kZSwgc2l6ZU9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKTtcbiAgICBjb25zdCBbc2l6ZSwgZGlnZXN0T2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoc2l6ZU9mZnNldCkpO1xuICAgIGNvbnN0IGRpZ2VzdCA9IGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQgKyBkaWdlc3RPZmZzZXQpO1xuICAgIGlmIChkaWdlc3QuYnl0ZUxlbmd0aCAhPT0gc2l6ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luY29ycmVjdCBsZW5ndGgnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBiO1xuICAgICAgICByZXR1cm4gKGEuY29kZSA9PT0gZGF0YS5jb2RlICYmXG4gICAgICAgICAgICBhLnNpemUgPT09IGRhdGEuc2l6ZSAmJlxuICAgICAgICAgICAgZGF0YS5ieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICAgICAgICAgIGVxdWFsQnl0ZXMoYS5ieXRlcywgZGF0YS5ieXRlcykpO1xuICAgIH1cbn1cbi8qKlxuICogUmVwcmVzZW50cyBhIG11bHRpaGFzaCBkaWdlc3Qgd2hpY2ggY2FycmllcyBpbmZvcm1hdGlvbiBhYm91dCB0aGVcbiAqIGhhc2hpbmcgYWxnb3JpdGhtIGFuZCBhbiBhY3R1YWwgaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBEaWdlc3Qge1xuICAgIGNvZGU7XG4gICAgc2l6ZTtcbiAgICBkaWdlc3Q7XG4gICAgYnl0ZXM7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLmRpZ2VzdCA9IGRpZ2VzdDtcbiAgICAgICAgdGhpcy5ieXRlcyA9IGJ5dGVzO1xuICAgIH1cbn1cbi8qKlxuICogVXNlZCB0byBjaGVjayB0aGF0IHRoZSBwYXNzZWQgbXVsdGloYXNoIGhhcyB0aGUgcGFzc2VkIGNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0NvZGUoZGlnZXN0LCBjb2RlKSB7XG4gICAgcmV0dXJuIGRpZ2VzdC5jb2RlID09PSBjb2RlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlnZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDdEM7QUFDTyxnQkFBZ0Isc0RBQXNEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkZBQTZGLHFCQUFxQjtBQUNsSDtBQUNBO0FBQ0EsMEZBQTBGLHFCQUFxQjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixrQkFBa0I7QUFDeEc7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBYTtBQUN4QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcz9lYWNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5jb25zdCBERUZBVUxUX01JTl9ESUdFU1RfTEVOR1RIID0gMjA7XG5leHBvcnQgZnVuY3Rpb24gZnJvbSh7IG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGggfSkge1xuICAgIHJldHVybiBuZXcgSGFzaGVyKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpO1xufVxuLyoqXG4gKiBIYXNoZXIgcmVwcmVzZW50cyBhIGhhc2hpbmcgYWxnb3JpdGhtIGltcGxlbWVudGF0aW9uIHRoYXQgcHJvZHVjZXMgYXNcbiAqIGBNdWx0aWhhc2hEaWdlc3RgLlxuICovXG5leHBvcnQgY2xhc3MgSGFzaGVyIHtcbiAgICBuYW1lO1xuICAgIGNvZGU7XG4gICAgZW5jb2RlO1xuICAgIG1pbkRpZ2VzdExlbmd0aDtcbiAgICBtYXhEaWdlc3RMZW5ndGg7XG4gICAgY29uc3RydWN0b3IobmFtZSwgY29kZSwgZW5jb2RlLCBtaW5EaWdlc3RMZW5ndGgsIG1heERpZ2VzdExlbmd0aCkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLmVuY29kZSA9IGVuY29kZTtcbiAgICAgICAgdGhpcy5taW5EaWdlc3RMZW5ndGggPSBtaW5EaWdlc3RMZW5ndGggPz8gREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSDtcbiAgICAgICAgdGhpcy5tYXhEaWdlc3RMZW5ndGggPSBtYXhEaWdlc3RMZW5ndGg7XG4gICAgfVxuICAgIGRpZ2VzdChpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucz8udHJ1bmNhdGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMudHJ1bmNhdGUgPCB0aGlzLm1pbkRpZ2VzdExlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvICR7dGhpcy5taW5EaWdlc3RMZW5ndGh9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5tYXhEaWdlc3RMZW5ndGggIT0gbnVsbCAmJiBvcHRpb25zLnRydW5jYXRlID4gdGhpcy5tYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWF4RGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZW5jb2RlKGlucHV0KTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZURpZ2VzdChyZXN1bHQsIHRoaXMuY29kZSwgb3B0aW9ucz8udHJ1bmNhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50aGVuKGRpZ2VzdCA9PiBjcmVhdGVEaWdlc3QoZGlnZXN0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlJyk7XG4gICAgICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZSBhIERpZ2VzdCBmcm9tIHRoZSBwYXNzZWQgdWludDhhcnJheSBhbmQgY29kZSwgb3B0aW9uYWxseSB0cnVuY2F0aW5nIGl0XG4gKiBmaXJzdC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgY29kZSwgdHJ1bmNhdGUpIHtcbiAgICBpZiAodHJ1bmNhdGUgIT0gbnVsbCAmJiB0cnVuY2F0ZSAhPT0gZGlnZXN0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgaWYgKHRydW5jYXRlID4gZGlnZXN0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7ZGlnZXN0LmJ5dGVMZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgZGlnZXN0ID0gZGlnZXN0LnN1YmFycmF5KDAsIHRydW5jYXRlKTtcbiAgICB9XG4gICAgcmV0dXJuIERpZ2VzdC5jcmVhdGUoY29kZSwgZGlnZXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/identity.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/identity.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/digest.js\");\n\n\nconst code = 0x0;\nconst name = 'identity';\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nfunction digest(input, options) {\n    if (options?.truncate != null && options.truncate !== input.byteLength) {\n        if (options.truncate < 0 || options.truncate > input.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${input.byteLength}`);\n        }\n        input = input.subarray(0, options.truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\n}\nconst identity = { code, name, encode, digest };\n//# sourceMappingURL=identity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2lkZW50aXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ3RDO0FBQ0E7QUFDQSxlQUFlLDZDQUFNO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixpQkFBaUI7QUFDdkc7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBYTtBQUN4QjtBQUNPLG1CQUFtQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pZGVudGl0eS5qcz82YzI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5jb25zdCBjb2RlID0gMHgwO1xuY29uc3QgbmFtZSA9ICdpZGVudGl0eSc7XG5jb25zdCBlbmNvZGUgPSBjb2VyY2U7XG5mdW5jdGlvbiBkaWdlc3QoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucz8udHJ1bmNhdGUgIT0gbnVsbCAmJiBvcHRpb25zLnRydW5jYXRlICE9PSBpbnB1dC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmIChvcHRpb25zLnRydW5jYXRlIDwgMCB8fCBvcHRpb25zLnRydW5jYXRlID4gaW5wdXQuYnl0ZUxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHRydW5jYXRlIG9wdGlvbiwgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHtpbnB1dC5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIGlucHV0ID0gaW5wdXQuc3ViYXJyYXkoMCwgb3B0aW9ucy50cnVuY2F0ZSk7XG4gICAgfVxuICAgIHJldHVybiBEaWdlc3QuY3JlYXRlKGNvZGUsIGVuY29kZShpbnB1dCkpO1xufVxuZXhwb3J0IGNvbnN0IGlkZW50aXR5ID0geyBjb2RlLCBuYW1lLCBlbmNvZGUsIGRpZ2VzdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWRlbnRpdHkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/interface.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2ludGVyZmFjZS5qcz9kY2ViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICMgTXVsdGloYXNoXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/sha2.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/sha2.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/hasher.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: (input) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256').update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: input => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha512').update(input).digest())\n});\n//# sourceMappingURL=sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL3NoYTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEI7QUFDUztBQUNGO0FBQzVCLGVBQWUsZ0RBQUk7QUFDMUI7QUFDQTtBQUNBLHVCQUF1QixpREFBTSxDQUFDLDhDQUFpQjtBQUMvQyxDQUFDO0FBQ00sZUFBZSxnREFBSTtBQUMxQjtBQUNBO0FBQ0EscUJBQXFCLGlEQUFNLENBQUMsOENBQWlCO0FBQzdDLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9zaGEyLmpzPzk2ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vaGFzaGVyLmpzJztcbmV4cG9ydCBjb25zdCBzaGEyNTYgPSBmcm9tKHtcbiAgICBuYW1lOiAnc2hhMi0yNTYnLFxuICAgIGNvZGU6IDB4MTIsXG4gICAgZW5jb2RlOiAoaW5wdXQpID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pO1xuZXhwb3J0IGNvbnN0IHNoYTUxMiA9IGZyb20oe1xuICAgIG5hbWU6ICdzaGEyLTUxMicsXG4gICAgY29kZTogMHgxMyxcbiAgICBlbmNvZGU6IGlucHV0ID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhNTEyJykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/interface.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/interface.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ0E7QUFDRjtBQUNDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW50ZXJmYWNlLmpzP2RjZmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9iYXNlcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9oYXNoZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY29kZWNzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpbmsvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmxvY2svaW50ZXJmYWNlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createLegacy: () => (/* binding */ createLegacy),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   format: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.format),\n/* harmony export */   fromJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.fromJSON),\n/* harmony export */   isLink: () => (/* binding */ isLink),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   toJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.toJSON)\n/* harmony export */ });\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link/interface.js\");\n\n// This way TS will also expose all the types from module\n\nconst DAG_PB_CODE = 0x70;\n// eslint-disable-next-line\nconst SHA_256_CODE = 0x12;\n/**\n * Simplified version of `create` for CIDv0.\n */\nfunction createLegacy(digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(0, DAG_PB_CODE, digest);\n}\n/**\n * Simplified version of `create` for CIDv1.\n *\n * @param code - Content encoding format code.\n * @param digest - Miltihash of the content.\n */\nfunction create(code, digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(1, code, digest);\n}\n/**\n * Type predicate returns true if value is the link.\n */\nfunction isLink(value) {\n    if (value == null) {\n        return false;\n    }\n    const withSlash = value;\n    if (withSlash['/'] != null && withSlash['/'] === withSlash.bytes) {\n        return true;\n    }\n    const withAsCID = value;\n    if (withAsCID.asCID === value) {\n        return true;\n    }\n    return false;\n}\n/**\n * Takes cid in a string representation and creates an instance. If `base`\n * decoder is not provided will use a default from the configuration. It will\n * throw an error if encoding of the CID is not compatible with supplied (or\n * a default decoder).\n */\nfunction parse(source, base) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.parse(source, base);\n}\n\n/**\n * Decoded a CID from its binary representation. The byte array must contain\n * only the CID with no additional bytes.\n *\n * An error will be thrown if the bytes provided do not contain a valid\n * binary representation of a CID.\n */\nfunction decode(bytes) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.decode(bytes);\n}\n//# sourceMappingURL=link.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXlEO0FBQ3pEO0FBQ29DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyx3Q0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdDQUFHO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdDQUFHO0FBQ2Q7QUFDb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsd0NBQUc7QUFDZDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay5qcz8xM2ZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENJRCwgZm9ybWF0LCB0b0pTT04sIGZyb21KU09OIH0gZnJvbSAnLi9jaWQuanMnO1xuLy8gVGhpcyB3YXkgVFMgd2lsbCBhbHNvIGV4cG9zZSBhbGwgdGhlIHR5cGVzIGZyb20gbW9kdWxlXG5leHBvcnQgKiBmcm9tICcuL2xpbmsvaW50ZXJmYWNlLmpzJztcbmNvbnN0IERBR19QQl9DT0RFID0gMHg3MDtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuY29uc3QgU0hBXzI1Nl9DT0RFID0gMHgxMjtcbi8qKlxuICogU2ltcGxpZmllZCB2ZXJzaW9uIG9mIGBjcmVhdGVgIGZvciBDSUR2MC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxlZ2FjeShkaWdlc3QpIHtcbiAgICByZXR1cm4gQ0lELmNyZWF0ZSgwLCBEQUdfUEJfQ09ERSwgZGlnZXN0KTtcbn1cbi8qKlxuICogU2ltcGxpZmllZCB2ZXJzaW9uIG9mIGBjcmVhdGVgIGZvciBDSUR2MS5cbiAqXG4gKiBAcGFyYW0gY29kZSAtIENvbnRlbnQgZW5jb2RpbmcgZm9ybWF0IGNvZGUuXG4gKiBAcGFyYW0gZGlnZXN0IC0gTWlsdGloYXNoIG9mIHRoZSBjb250ZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIHJldHVybiBDSUQuY3JlYXRlKDEsIGNvZGUsIGRpZ2VzdCk7XG59XG4vKipcbiAqIFR5cGUgcHJlZGljYXRlIHJldHVybnMgdHJ1ZSBpZiB2YWx1ZSBpcyB0aGUgbGluay5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTGluayh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3Qgd2l0aFNsYXNoID0gdmFsdWU7XG4gICAgaWYgKHdpdGhTbGFzaFsnLyddICE9IG51bGwgJiYgd2l0aFNsYXNoWycvJ10gPT09IHdpdGhTbGFzaC5ieXRlcykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3Qgd2l0aEFzQ0lEID0gdmFsdWU7XG4gICAgaWYgKHdpdGhBc0NJRC5hc0NJRCA9PT0gdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogVGFrZXMgY2lkIGluIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIGFuZCBjcmVhdGVzIGFuIGluc3RhbmNlLiBJZiBgYmFzZWBcbiAqIGRlY29kZXIgaXMgbm90IHByb3ZpZGVkIHdpbGwgdXNlIGEgZGVmYXVsdCBmcm9tIHRoZSBjb25maWd1cmF0aW9uLiBJdCB3aWxsXG4gKiB0aHJvdyBhbiBlcnJvciBpZiBlbmNvZGluZyBvZiB0aGUgQ0lEIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggc3VwcGxpZWQgKG9yXG4gKiBhIGRlZmF1bHQgZGVjb2RlcikuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZShzb3VyY2UsIGJhc2UpIHtcbiAgICByZXR1cm4gQ0lELnBhcnNlKHNvdXJjZSwgYmFzZSk7XG59XG5leHBvcnQgeyBmb3JtYXQsIHRvSlNPTiwgZnJvbUpTT04gfTtcbi8qKlxuICogRGVjb2RlZCBhIENJRCBmcm9tIGl0cyBiaW5hcnkgcmVwcmVzZW50YXRpb24uIFRoZSBieXRlIGFycmF5IG11c3QgY29udGFpblxuICogb25seSB0aGUgQ0lEIHdpdGggbm8gYWRkaXRpb25hbCBieXRlcy5cbiAqXG4gKiBBbiBlcnJvciB3aWxsIGJlIHRocm93biBpZiB0aGUgYnl0ZXMgcHJvdmlkZWQgZG8gbm90IGNvbnRhaW4gYSB2YWxpZFxuICogYmluYXJ5IHJlcHJlc2VudGF0aW9uIG9mIGEgQ0lELlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGJ5dGVzKSB7XG4gICAgcmV0dXJuIENJRC5kZWNvZGUoYnl0ZXMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGluay5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link/interface.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link/interface.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcz9iZTUyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/varint.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/varint.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDakM7QUFDUCxpQkFBaUIseURBQU07QUFDdkIsa0JBQWtCLHlEQUFNO0FBQ3hCO0FBQ087QUFDUCxJQUFJLHlEQUFNO0FBQ1Y7QUFDQTtBQUNPO0FBQ1AsV0FBVyx5REFBTTtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzPzYxYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhcmludCBmcm9tICcuL3ZlbmRvci92YXJpbnQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgY29kZSA9IHZhcmludC5kZWNvZGUoZGF0YSwgb2Zmc2V0KTtcbiAgICByZXR1cm4gW2NvZGUsIHZhcmludC5kZWNvZGUuYnl0ZXNdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRvKGludCwgdGFyZ2V0LCBvZmZzZXQgPSAwKSB7XG4gICAgdmFyaW50LmVuY29kZShpbnQsIHRhcmdldCwgb2Zmc2V0KTtcbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kaW5nTGVuZ3RoKGludCkge1xuICAgIHJldHVybiB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoaW50KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhcmludC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/vendor/varint.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ucanto/core/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxZQUFZLEVBQUM7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzP2EwMzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBlbmNvZGVfMSA9IGVuY29kZTtcbnZhciBNU0IgPSAweDgwLCBSRVNUID0gMHg3RiwgTVNCQUxMID0gflJFU1QsIElOVCA9IE1hdGgucG93KDIsIDMxKTtcbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bVxuICogQHBhcmFtIHtudW1iZXJbXX0gb3V0XG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKi9cbmZ1bmN0aW9uIGVuY29kZShudW0sIG91dCwgb2Zmc2V0KSB7XG4gICAgb3V0ID0gb3V0IHx8IFtdO1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuICAgIHZhciBvbGRPZmZzZXQgPSBvZmZzZXQ7XG4gICAgd2hpbGUgKG51bSA+PSBJTlQpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtIC89IDEyODtcbiAgICB9XG4gICAgd2hpbGUgKG51bSAmIE1TQkFMTCkge1xuICAgICAgICBvdXRbb2Zmc2V0KytdID0gKG51bSAmIDB4RkYpIHwgTVNCO1xuICAgICAgICBudW0gPj4+PSA3O1xuICAgIH1cbiAgICBvdXRbb2Zmc2V0XSA9IG51bSB8IDA7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGVuY29kZS5ieXRlcyA9IG9mZnNldCAtIG9sZE9mZnNldCArIDE7XG4gICAgcmV0dXJuIG91dDtcbn1cbnZhciBkZWNvZGUgPSByZWFkO1xudmFyIE1TQiQxID0gMHg4MCwgUkVTVCQxID0gMHg3Rjtcbi8qKlxuICogQHBhcmFtIHtzdHJpbmcgfCBhbnlbXX0gYnVmXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKi9cbmZ1bmN0aW9uIHJlYWQoYnVmLCBvZmZzZXQpIHtcbiAgICB2YXIgcmVzID0gMCwgb2Zmc2V0ID0gb2Zmc2V0IHx8IDAsIHNoaWZ0ID0gMCwgY291bnRlciA9IG9mZnNldCwgYiwgbCA9IGJ1Zi5sZW5ndGg7XG4gICAgZG8ge1xuICAgICAgICBpZiAoY291bnRlciA+PSBsKSB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICByZWFkLmJ5dGVzID0gMDtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdDb3VsZCBub3QgZGVjb2RlIHZhcmludCcpO1xuICAgICAgICB9XG4gICAgICAgIGIgPSBidWZbY291bnRlcisrXTtcbiAgICAgICAgcmVzICs9IHNoaWZ0IDwgMjhcbiAgICAgICAgICAgID8gKGIgJiBSRVNUJDEpIDw8IHNoaWZ0XG4gICAgICAgICAgICA6IChiICYgUkVTVCQxKSAqIE1hdGgucG93KDIsIHNoaWZ0KTtcbiAgICAgICAgc2hpZnQgKz0gNztcbiAgICB9IHdoaWxlIChiID49IE1TQiQxKTtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmVhZC5ieXRlcyA9IGNvdW50ZXIgLSBvZmZzZXQ7XG4gICAgcmV0dXJuIHJlcztcbn1cbnZhciBOMSA9IE1hdGgucG93KDIsIDcpO1xudmFyIE4yID0gTWF0aC5wb3coMiwgMTQpO1xudmFyIE4zID0gTWF0aC5wb3coMiwgMjEpO1xudmFyIE40ID0gTWF0aC5wb3coMiwgMjgpO1xudmFyIE41ID0gTWF0aC5wb3coMiwgMzUpO1xudmFyIE42ID0gTWF0aC5wb3coMiwgNDIpO1xudmFyIE43ID0gTWF0aC5wb3coMiwgNDkpO1xudmFyIE44ID0gTWF0aC5wb3coMiwgNTYpO1xudmFyIE45ID0gTWF0aC5wb3coMiwgNjMpO1xudmFyIGxlbmd0aCA9IGZ1bmN0aW9uICgvKiogQHR5cGUge251bWJlcn0gKi8gdmFsdWUpIHtcbiAgICByZXR1cm4gKHZhbHVlIDwgTjEgPyAxXG4gICAgICAgIDogdmFsdWUgPCBOMiA/IDJcbiAgICAgICAgICAgIDogdmFsdWUgPCBOMyA/IDNcbiAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjQgPyA0XG4gICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONSA/IDVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONiA/IDZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjcgPyA3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBOOCA/IDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBOOSA/IDlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IDEwKTtcbn07XG52YXIgdmFyaW50ID0ge1xuICAgIGVuY29kZTogZW5jb2RlXzEsXG4gICAgZGVjb2RlOiBkZWNvZGUsXG4gICAgZW5jb2RpbmdMZW5ndGg6IGxlbmd0aFxufTtcbnZhciBfYnJycF92YXJpbnQgPSB2YXJpbnQ7XG5leHBvcnQgZGVmYXVsdCBfYnJycF92YXJpbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/car.js":
/*!**********************************************!*\
  !*** ./node_modules/@ucanto/core/src/car.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   createWriter: () => (/* binding */ createWriter),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   link: () => (/* binding */ link),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   write: () => (/* binding */ write)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ipld_car_buffer_reader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/car/buffer-reader */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-reader.js\");\n/* harmony import */ var _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ipld/car/buffer-writer */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/car/src/buffer-writer.js\");\n/* harmony import */ var multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/bases/base32 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./link.js */ \"(ssr)/./node_modules/@ucanto/core/src/link.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/sha2.js\");\n\n\n\n\n\n\n\n// @see https://www.iana.org/assignments/media-types/application/vnd.ipld.car\nconst contentType = 'application/vnd.ipld.car'\nconst name = 'CAR'\n\n/** @type {API.MulticodecCode<0x0202, 'CAR'>} */\nconst code = 0x0202\n\n/**\n * @typedef {{\n * roots: API.IPLDBlock[]\n * blocks: Map<string, API.IPLDBlock>\n * }} Model\n */\n\nclass Writer {\n  /**\n   * @param {API.IPLDBlock[]} blocks\n   * @param {number} byteLength\n   */\n  constructor(blocks = [], byteLength = 0) {\n    this.written = new Set()\n    this.blocks = blocks\n    this.byteLength = byteLength\n  }\n  /**\n   * @param {API.IPLDBlock[]} blocks\n   */\n  write(...blocks) {\n    for (const block of blocks) {\n      const id = block.cid.toString(multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__.base32)\n      if (!this.written.has(id)) {\n        this.blocks.push(block)\n        this.byteLength += _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_2__.blockLength(\n          /** @type {any} */ (block)\n        )\n        this.written.add(id)\n      }\n    }\n    return this\n  }\n  /**\n   * @param {API.IPLDBlock[]} rootBlocks\n   */\n  flush(...rootBlocks) {\n    const roots = []\n    // We reverse the roots so that the first root is the last block in the CAR\n    for (const block of rootBlocks.reverse()) {\n      const id = block.cid.toString(multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__.base32)\n      if (!this.written.has(id)) {\n        this.blocks.unshift(block)\n        this.byteLength += _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_2__.blockLength({\n          cid: /** @type {CarBufferWriter.CID} */ (block.cid),\n          bytes: block.bytes,\n        })\n        this.written.add(id)\n      }\n\n      // We unshift here because we want to preserve the order of the roots\n      roots.unshift(/** @type {CarBufferWriter.CID} */ (block.cid))\n    }\n\n    this.byteLength += _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_2__.headerLength({ roots })\n\n    const buffer = new ArrayBuffer(this.byteLength)\n    const writer = _ipld_car_buffer_writer__WEBPACK_IMPORTED_MODULE_2__.createWriter(buffer, { roots })\n\n    for (const block of /** @type {CarBufferWriter.Block[]} */ (this.blocks)) {\n      writer.write(block)\n    }\n\n    return writer.close()\n  }\n}\n\nconst createWriter = () => new Writer()\n\n/**\n * @template {Partial<Model>} T\n * @param {T} input\n * @returns {API.ByteView<T>}\n */\nconst encode = ({ roots = [], blocks }) => {\n  const writer = new Writer()\n  if (blocks) {\n    writer.write(...blocks.values())\n  }\n  return writer.flush(...roots)\n}\n\n/**\n * @param {API.ByteView<Partial<Model>>} bytes\n * @returns {Model}\n */\nconst decode = bytes => {\n  const reader = _ipld_car_buffer_reader__WEBPACK_IMPORTED_MODULE_1__.CarBufferReader.fromBytes(bytes)\n  /** @type {API.IPLDBlock[]} */\n  const roots = []\n  const blocks = new Map()\n\n  for (const root of reader.getRoots()) {\n    const block = /** @type {API.IPLDBlock} */ (reader.get(root))\n    if (block) {\n      roots.push(block)\n    }\n  }\n\n  for (const block of reader.blocks()) {\n    blocks.set(block.cid.toString(), block)\n  }\n\n  return { roots, blocks }\n}\n\n/**\n * @template {Partial<Model>} T\n * @param {API.ByteView<T>} bytes\n * @param {{hasher?: API.MultihashHasher }} options\n */\nconst link = async (bytes, { hasher = multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_5__.sha256 } = {}) => {\n  return /** @type {API.Link<T, typeof code, typeof hasher.code>} */ (\n    (0,_link_js__WEBPACK_IMPORTED_MODULE_4__.create)(code, await hasher.digest(bytes))\n  )\n}\n\n/**\n * @template {Partial<Model>} T\n * @param {T} data\n * @param {{hasher?: API.MultihashHasher }} [options]\n * @returns {Promise<API.Block<T, typeof code>>}\n */\nconst write = async (data, options) => {\n  const bytes = encode(data)\n  const cid = await link(bytes, options)\n\n  return { bytes, cid }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9jYXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDaUI7QUFDQztBQUNSO0FBQ0Y7QUFDQzs7QUFFakQ7QUFDTztBQUNBOztBQUVQLFdBQVcsbUNBQW1DO0FBQ3ZDOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOOztBQUVBO0FBQ0E7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNkRBQU07QUFDMUM7QUFDQTtBQUNBLDJCQUEyQixnRUFBMkI7QUFDdEQscUJBQXFCLEtBQUs7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDZEQUFNO0FBQzFDO0FBQ0E7QUFDQSwyQkFBMkIsZ0VBQTJCO0FBQ3RELDBCQUEwQixxQkFBcUI7QUFDL0M7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBLCtCQUErQixxQkFBcUI7QUFDcEQ7O0FBRUEsdUJBQXVCLGlFQUE0QixHQUFHLE9BQU87O0FBRTdEO0FBQ0EsbUJBQW1CLGlFQUE0QixXQUFXLE9BQU87O0FBRWpFLG1DQUFtQyx5QkFBeUI7QUFDNUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRU87O0FBRVA7QUFDQSxjQUFjLGdCQUFnQjtBQUM5QixXQUFXLEdBQUc7QUFDZCxhQUFhO0FBQ2I7QUFDTyxrQkFBa0Isb0JBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsOEJBQThCO0FBQ3pDLGFBQWE7QUFDYjtBQUNPO0FBQ1AsaUJBQWlCLG9FQUFlO0FBQ2hDLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQSw2QkFBNkIsZUFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsV0FBVztBQUNYOztBQUVBO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUIsV0FBVyxpQkFBaUI7QUFDNUIsWUFBWSxnQ0FBZ0M7QUFDNUM7QUFDTyw2QkFBNkIsU0FBUyw0REFBTSxHQUFHLElBQUk7QUFDMUQsb0JBQW9CLDhDQUE4QztBQUNsRSxJQUFJLGdEQUFVO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCLFdBQVcsR0FBRztBQUNkLFlBQVksZ0NBQWdDO0FBQzVDLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQSxXQUFXO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvc3JjL2Nhci5qcz9kMDFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcbmltcG9ydCB7IENhckJ1ZmZlclJlYWRlciB9IGZyb20gJ0BpcGxkL2Nhci9idWZmZXItcmVhZGVyJ1xuaW1wb3J0ICogYXMgQ2FyQnVmZmVyV3JpdGVyIGZyb20gJ0BpcGxkL2Nhci9idWZmZXItd3JpdGVyJ1xuaW1wb3J0IHsgYmFzZTMyIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2UzMidcbmltcG9ydCB7IGNyZWF0ZSBhcyBjcmVhdGVMaW5rIH0gZnJvbSAnLi9saW5rLmpzJ1xuaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuXG4vLyBAc2VlIGh0dHBzOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL21lZGlhLXR5cGVzL2FwcGxpY2F0aW9uL3ZuZC5pcGxkLmNhclxuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlID0gJ2FwcGxpY2F0aW9uL3ZuZC5pcGxkLmNhcidcbmV4cG9ydCBjb25zdCBuYW1lID0gJ0NBUidcblxuLyoqIEB0eXBlIHtBUEkuTXVsdGljb2RlY0NvZGU8MHgwMjAyLCAnQ0FSJz59ICovXG5leHBvcnQgY29uc3QgY29kZSA9IDB4MDIwMlxuXG4vKipcbiAqIEB0eXBlZGVmIHt7XG4gKiByb290czogQVBJLklQTERCbG9ja1tdXG4gKiBibG9ja3M6IE1hcDxzdHJpbmcsIEFQSS5JUExEQmxvY2s+XG4gKiB9fSBNb2RlbFxuICovXG5cbmNsYXNzIFdyaXRlciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0FQSS5JUExEQmxvY2tbXX0gYmxvY2tzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBieXRlTGVuZ3RoXG4gICAqL1xuICBjb25zdHJ1Y3RvcihibG9ja3MgPSBbXSwgYnl0ZUxlbmd0aCA9IDApIHtcbiAgICB0aGlzLndyaXR0ZW4gPSBuZXcgU2V0KClcbiAgICB0aGlzLmJsb2NrcyA9IGJsb2Nrc1xuICAgIHRoaXMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbiAgfVxuICAvKipcbiAgICogQHBhcmFtIHtBUEkuSVBMREJsb2NrW119IGJsb2Nrc1xuICAgKi9cbiAgd3JpdGUoLi4uYmxvY2tzKSB7XG4gICAgZm9yIChjb25zdCBibG9jayBvZiBibG9ja3MpIHtcbiAgICAgIGNvbnN0IGlkID0gYmxvY2suY2lkLnRvU3RyaW5nKGJhc2UzMilcbiAgICAgIGlmICghdGhpcy53cml0dGVuLmhhcyhpZCkpIHtcbiAgICAgICAgdGhpcy5ibG9ja3MucHVzaChibG9jaylcbiAgICAgICAgdGhpcy5ieXRlTGVuZ3RoICs9IENhckJ1ZmZlcldyaXRlci5ibG9ja0xlbmd0aChcbiAgICAgICAgICAvKiogQHR5cGUge2FueX0gKi8gKGJsb2NrKVxuICAgICAgICApXG4gICAgICAgIHRoaXMud3JpdHRlbi5hZGQoaWQpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aGlzXG4gIH1cbiAgLyoqXG4gICAqIEBwYXJhbSB7QVBJLklQTERCbG9ja1tdfSByb290QmxvY2tzXG4gICAqL1xuICBmbHVzaCguLi5yb290QmxvY2tzKSB7XG4gICAgY29uc3Qgcm9vdHMgPSBbXVxuICAgIC8vIFdlIHJldmVyc2UgdGhlIHJvb3RzIHNvIHRoYXQgdGhlIGZpcnN0IHJvb3QgaXMgdGhlIGxhc3QgYmxvY2sgaW4gdGhlIENBUlxuICAgIGZvciAoY29uc3QgYmxvY2sgb2Ygcm9vdEJsb2Nrcy5yZXZlcnNlKCkpIHtcbiAgICAgIGNvbnN0IGlkID0gYmxvY2suY2lkLnRvU3RyaW5nKGJhc2UzMilcbiAgICAgIGlmICghdGhpcy53cml0dGVuLmhhcyhpZCkpIHtcbiAgICAgICAgdGhpcy5ibG9ja3MudW5zaGlmdChibG9jaylcbiAgICAgICAgdGhpcy5ieXRlTGVuZ3RoICs9IENhckJ1ZmZlcldyaXRlci5ibG9ja0xlbmd0aCh7XG4gICAgICAgICAgY2lkOiAvKiogQHR5cGUge0NhckJ1ZmZlcldyaXRlci5DSUR9ICovIChibG9jay5jaWQpLFxuICAgICAgICAgIGJ5dGVzOiBibG9jay5ieXRlcyxcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy53cml0dGVuLmFkZChpZClcbiAgICAgIH1cblxuICAgICAgLy8gV2UgdW5zaGlmdCBoZXJlIGJlY2F1c2Ugd2Ugd2FudCB0byBwcmVzZXJ2ZSB0aGUgb3JkZXIgb2YgdGhlIHJvb3RzXG4gICAgICByb290cy51bnNoaWZ0KC8qKiBAdHlwZSB7Q2FyQnVmZmVyV3JpdGVyLkNJRH0gKi8gKGJsb2NrLmNpZCkpXG4gICAgfVxuXG4gICAgdGhpcy5ieXRlTGVuZ3RoICs9IENhckJ1ZmZlcldyaXRlci5oZWFkZXJMZW5ndGgoeyByb290cyB9KVxuXG4gICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKHRoaXMuYnl0ZUxlbmd0aClcbiAgICBjb25zdCB3cml0ZXIgPSBDYXJCdWZmZXJXcml0ZXIuY3JlYXRlV3JpdGVyKGJ1ZmZlciwgeyByb290cyB9KVxuXG4gICAgZm9yIChjb25zdCBibG9jayBvZiAvKiogQHR5cGUge0NhckJ1ZmZlcldyaXRlci5CbG9ja1tdfSAqLyAodGhpcy5ibG9ja3MpKSB7XG4gICAgICB3cml0ZXIud3JpdGUoYmxvY2spXG4gICAgfVxuXG4gICAgcmV0dXJuIHdyaXRlci5jbG9zZSgpXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVdyaXRlciA9ICgpID0+IG5ldyBXcml0ZXIoKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7UGFydGlhbDxNb2RlbD59IFRcbiAqIEBwYXJhbSB7VH0gaW5wdXRcbiAqIEByZXR1cm5zIHtBUEkuQnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGUgPSAoeyByb290cyA9IFtdLCBibG9ja3MgfSkgPT4ge1xuICBjb25zdCB3cml0ZXIgPSBuZXcgV3JpdGVyKClcbiAgaWYgKGJsb2Nrcykge1xuICAgIHdyaXRlci53cml0ZSguLi5ibG9ja3MudmFsdWVzKCkpXG4gIH1cbiAgcmV0dXJuIHdyaXRlci5mbHVzaCguLi5yb290cylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5CeXRlVmlldzxQYXJ0aWFsPE1vZGVsPj59IGJ5dGVzXG4gKiBAcmV0dXJucyB7TW9kZWx9XG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGUgPSBieXRlcyA9PiB7XG4gIGNvbnN0IHJlYWRlciA9IENhckJ1ZmZlclJlYWRlci5mcm9tQnl0ZXMoYnl0ZXMpXG4gIC8qKiBAdHlwZSB7QVBJLklQTERCbG9ja1tdfSAqL1xuICBjb25zdCByb290cyA9IFtdXG4gIGNvbnN0IGJsb2NrcyA9IG5ldyBNYXAoKVxuXG4gIGZvciAoY29uc3Qgcm9vdCBvZiByZWFkZXIuZ2V0Um9vdHMoKSkge1xuICAgIGNvbnN0IGJsb2NrID0gLyoqIEB0eXBlIHtBUEkuSVBMREJsb2NrfSAqLyAocmVhZGVyLmdldChyb290KSlcbiAgICBpZiAoYmxvY2spIHtcbiAgICAgIHJvb3RzLnB1c2goYmxvY2spXG4gICAgfVxuICB9XG5cbiAgZm9yIChjb25zdCBibG9jayBvZiByZWFkZXIuYmxvY2tzKCkpIHtcbiAgICBibG9ja3Muc2V0KGJsb2NrLmNpZC50b1N0cmluZygpLCBibG9jaylcbiAgfVxuXG4gIHJldHVybiB7IHJvb3RzLCBibG9ja3MgfVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7UGFydGlhbDxNb2RlbD59IFRcbiAqIEBwYXJhbSB7QVBJLkJ5dGVWaWV3PFQ+fSBieXRlc1xuICogQHBhcmFtIHt7aGFzaGVyPzogQVBJLk11bHRpaGFzaEhhc2hlciB9fSBvcHRpb25zXG4gKi9cbmV4cG9ydCBjb25zdCBsaW5rID0gYXN5bmMgKGJ5dGVzLCB7IGhhc2hlciA9IHNoYTI1NiB9ID0ge30pID0+IHtcbiAgcmV0dXJuIC8qKiBAdHlwZSB7QVBJLkxpbms8VCwgdHlwZW9mIGNvZGUsIHR5cGVvZiBoYXNoZXIuY29kZT59ICovIChcbiAgICBjcmVhdGVMaW5rKGNvZGUsIGF3YWl0IGhhc2hlci5kaWdlc3QoYnl0ZXMpKVxuICApXG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtQYXJ0aWFsPE1vZGVsPn0gVFxuICogQHBhcmFtIHtUfSBkYXRhXG4gKiBAcGFyYW0ge3toYXNoZXI/OiBBUEkuTXVsdGloYXNoSGFzaGVyIH19IFtvcHRpb25zXVxuICogQHJldHVybnMge1Byb21pc2U8QVBJLkJsb2NrPFQsIHR5cGVvZiBjb2RlPj59XG4gKi9cbmV4cG9ydCBjb25zdCB3cml0ZSA9IGFzeW5jIChkYXRhLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IGJ5dGVzID0gZW5jb2RlKGRhdGEpXG4gIGNvbnN0IGNpZCA9IGF3YWl0IGxpbmsoYnl0ZXMsIG9wdGlvbnMpXG5cbiAgcmV0dXJuIHsgYnl0ZXMsIGNpZCB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/car.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/cbor.js":
/*!***********************************************!*\
  !*** ./node_modules/@ucanto/core/src/cbor.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* reexport safe */ _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.code),\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   decode: () => (/* reexport safe */ _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   link: () => (/* binding */ link),\n/* harmony export */   name: () => (/* reexport safe */ _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.name),\n/* harmony export */   write: () => (/* binding */ write)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@ucanto/core/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var multiformats_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/link */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link.js\");\n\n\n\n;\n\n\n// @see https://www.iana.org/assignments/media-types/application/vnd.ipld.dag-cbor\nconst contentType = 'application/vnd.ipld.dag-cbor'\n\n/**\n * @param {unknown} data\n * @param {Set<unknown>} seen\n * @returns {unknown}\n */\nconst prepare = (data, seen) => {\n  if (seen.has(data)) {\n    throw new TypeError('Can not encode circular structure')\n  }\n  // top level undefined is ok\n  if (data === undefined && seen.size === 0) {\n    return null\n  }\n\n  if (data === null) {\n    return null\n  }\n\n  if (typeof data === 'symbol' && seen.size === 0) {\n    return null\n  }\n\n  if ((0,multiformats_link__WEBPACK_IMPORTED_MODULE_3__.isLink)(data)) {\n    return data\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return data\n  }\n\n  if (Array.isArray(data)) {\n    seen.add(data)\n    const items = []\n    for (const item of data) {\n      items.push(\n        item === undefined || typeof item === 'symbol'\n          ? null\n          : prepare(item, seen)\n      )\n    }\n    return items\n  }\n\n  if (typeof (/** @type {{toJSON?:unknown}} */ (data).toJSON) === 'function') {\n    seen.add(data)\n    const json = /** @type {{toJSON():unknown}} */ (data).toJSON()\n    return prepare(json, seen)\n  }\n\n  if (typeof data === 'object') {\n    seen.add(data)\n    /** @type {Record<string, unknown>} */\n    const object = {}\n    for (const [key, value] of Object.entries(data)) {\n      if (value !== undefined && typeof value !== 'symbol') {\n        object[key] = prepare(value, new Set(seen))\n      }\n    }\n    return object\n  }\n\n  return data\n}\n\n/**\n * @template T\n * @param {T} data\n * @returns {CBOR.ByteView<T>}\n */\nconst encode = data =>\n  /** @type {CBOR.ByteView<T>} */ (_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.encode(prepare(data, new Set())))\n\n/**\n * @template T\n * @param {API.ByteView<T>} bytes\n * @param {{hasher?: API.MultihashHasher }} options\n * @returns {Promise<API.Link<T, typeof CBOR.code>>}\n *\n */\nconst link = async (bytes, { hasher = multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_2__.sha256 } = {}) => {\n  return /** @type {API.Link<T, typeof CBOR.code>} */ (\n    (0,multiformats_link__WEBPACK_IMPORTED_MODULE_3__.create)(_ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.code, await hasher.digest(bytes))\n  )\n}\n\n/**\n * @template T\n * @param {T} data\n * @param {{hasher?: API.MultihashHasher }} [options]\n * @returns {Promise<API.Block<T, typeof CBOR.code>>}\n */\nconst write = async (data, options) => {\n  const bytes = encode(data)\n  const cid = await link(bytes, options)\n\n  return { cid, bytes }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9jYm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ0Y7QUFDYTtBQUNuRCxDQUFpRDtBQUNlOztBQUVoRTtBQUNPOztBQUVQO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsY0FBYztBQUN6QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTSx5REFBTTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEIsa0JBQWtCO0FBQzVDO0FBQ0EsNkJBQTZCLG1CQUFtQjtBQUNoRDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSxrQkFBa0IsSUFBSSxrREFBVzs7QUFFOUM7QUFDQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFlBQVksZ0NBQWdDO0FBQzVDLGFBQWE7QUFDYjtBQUNBO0FBQ08sNkJBQTZCLFNBQVMsNERBQU0sR0FBRyxJQUFJO0FBQzFELG9CQUFvQiwrQkFBK0I7QUFDbkQsSUFBSSx5REFBVSxDQUFDLGdEQUFTO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFlBQVksZ0NBQWdDO0FBQzVDLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQSxXQUFXO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvc3JjL2Nib3IuanM/ODJmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBUEkgZnJvbSAnQHVjYW50by9pbnRlcmZhY2UnXG5pbXBvcnQgKiBhcyBDQk9SIGZyb20gJ0BpcGxkL2RhZy1jYm9yJ1xuZXhwb3J0IHsgY29kZSwgbmFtZSwgZGVjb2RlIH0gZnJvbSAnQGlwbGQvZGFnLWNib3InXG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTInXG5pbXBvcnQgeyBjcmVhdGUgYXMgY3JlYXRlTGluaywgaXNMaW5rIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2xpbmsnXG5cbi8vIEBzZWUgaHR0cHM6Ly93d3cuaWFuYS5vcmcvYXNzaWdubWVudHMvbWVkaWEtdHlwZXMvYXBwbGljYXRpb24vdm5kLmlwbGQuZGFnLWNib3JcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZSA9ICdhcHBsaWNhdGlvbi92bmQuaXBsZC5kYWctY2JvcidcblxuLyoqXG4gKiBAcGFyYW0ge3Vua25vd259IGRhdGFcbiAqIEBwYXJhbSB7U2V0PHVua25vd24+fSBzZWVuXG4gKiBAcmV0dXJucyB7dW5rbm93bn1cbiAqL1xuY29uc3QgcHJlcGFyZSA9IChkYXRhLCBzZWVuKSA9PiB7XG4gIGlmIChzZWVuLmhhcyhkYXRhKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0NhbiBub3QgZW5jb2RlIGNpcmN1bGFyIHN0cnVjdHVyZScpXG4gIH1cbiAgLy8gdG9wIGxldmVsIHVuZGVmaW5lZCBpcyBva1xuICBpZiAoZGF0YSA9PT0gdW5kZWZpbmVkICYmIHNlZW4uc2l6ZSA9PT0gMCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBpZiAoZGF0YSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBpZiAodHlwZW9mIGRhdGEgPT09ICdzeW1ib2wnICYmIHNlZW4uc2l6ZSA9PT0gMCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBpZiAoaXNMaW5rKGRhdGEpKSB7XG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoZGF0YSkpIHtcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICBzZWVuLmFkZChkYXRhKVxuICAgIGNvbnN0IGl0ZW1zID0gW11cbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZGF0YSkge1xuICAgICAgaXRlbXMucHVzaChcbiAgICAgICAgaXRlbSA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBpdGVtID09PSAnc3ltYm9sJ1xuICAgICAgICAgID8gbnVsbFxuICAgICAgICAgIDogcHJlcGFyZShpdGVtLCBzZWVuKVxuICAgICAgKVxuICAgIH1cbiAgICByZXR1cm4gaXRlbXNcbiAgfVxuXG4gIGlmICh0eXBlb2YgKC8qKiBAdHlwZSB7e3RvSlNPTj86dW5rbm93bn19ICovIChkYXRhKS50b0pTT04pID09PSAnZnVuY3Rpb24nKSB7XG4gICAgc2Vlbi5hZGQoZGF0YSlcbiAgICBjb25zdCBqc29uID0gLyoqIEB0eXBlIHt7dG9KU09OKCk6dW5rbm93bn19ICovIChkYXRhKS50b0pTT04oKVxuICAgIHJldHVybiBwcmVwYXJlKGpzb24sIHNlZW4pXG4gIH1cblxuICBpZiAodHlwZW9mIGRhdGEgPT09ICdvYmplY3QnKSB7XG4gICAgc2Vlbi5hZGQoZGF0YSlcbiAgICAvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIHVua25vd24+fSAqL1xuICAgIGNvbnN0IG9iamVjdCA9IHt9XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZGF0YSkpIHtcbiAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ3N5bWJvbCcpIHtcbiAgICAgICAgb2JqZWN0W2tleV0gPSBwcmVwYXJlKHZhbHVlLCBuZXcgU2V0KHNlZW4pKVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0XG4gIH1cblxuICByZXR1cm4gZGF0YVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IGRhdGFcbiAqIEByZXR1cm5zIHtDQk9SLkJ5dGVWaWV3PFQ+fVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0gZGF0YSA9PlxuICAvKiogQHR5cGUge0NCT1IuQnl0ZVZpZXc8VD59ICovIChDQk9SLmVuY29kZShwcmVwYXJlKGRhdGEsIG5ldyBTZXQoKSkpKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0FQSS5CeXRlVmlldzxUPn0gYnl0ZXNcbiAqIEBwYXJhbSB7e2hhc2hlcj86IEFQSS5NdWx0aWhhc2hIYXNoZXIgfX0gb3B0aW9uc1xuICogQHJldHVybnMge1Byb21pc2U8QVBJLkxpbms8VCwgdHlwZW9mIENCT1IuY29kZT4+fVxuICpcbiAqL1xuZXhwb3J0IGNvbnN0IGxpbmsgPSBhc3luYyAoYnl0ZXMsIHsgaGFzaGVyID0gc2hhMjU2IH0gPSB7fSkgPT4ge1xuICByZXR1cm4gLyoqIEB0eXBlIHtBUEkuTGluazxULCB0eXBlb2YgQ0JPUi5jb2RlPn0gKi8gKFxuICAgIGNyZWF0ZUxpbmsoQ0JPUi5jb2RlLCBhd2FpdCBoYXNoZXIuZGlnZXN0KGJ5dGVzKSlcbiAgKVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IGRhdGFcbiAqIEBwYXJhbSB7e2hhc2hlcj86IEFQSS5NdWx0aWhhc2hIYXNoZXIgfX0gW29wdGlvbnNdXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxBUEkuQmxvY2s8VCwgdHlwZW9mIENCT1IuY29kZT4+fVxuICovXG5leHBvcnQgY29uc3Qgd3JpdGUgPSBhc3luYyAoZGF0YSwgb3B0aW9ucykgPT4ge1xuICBjb25zdCBieXRlcyA9IGVuY29kZShkYXRhKVxuICBjb25zdCBjaWQgPSBhd2FpdCBsaW5rKGJ5dGVzLCBvcHRpb25zKVxuXG4gIHJldHVybiB7IGNpZCwgYnl0ZXMgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/cbor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/dag.js":
/*!**********************************************!*\
  !*** ./node_modules/@ucanto/core/src/dag.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CBOR: () => (/* reexport module object */ _cbor_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   addEveryInto: () => (/* binding */ addEveryInto),\n/* harmony export */   addInto: () => (/* binding */ addInto),\n/* harmony export */   createStore: () => (/* binding */ createStore),\n/* harmony export */   embed: () => (/* binding */ embed),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   identity: () => (/* reexport safe */ multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_5__.identity),\n/* harmony export */   iterate: () => (/* binding */ iterate),\n/* harmony export */   notFound: () => (/* binding */ notFound),\n/* harmony export */   sha256: () => (/* reexport safe */ multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_2__.sha256),\n/* harmony export */   writeInto: () => (/* binding */ writeInto)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./link.js */ \"(ssr)/./node_modules/@ucanto/core/src/link.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var multiformats_interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/interface */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/interface.js\");\n/* harmony import */ var _cbor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cbor.js */ \"(ssr)/./node_modules/@ucanto/core/src/cbor.js\");\n/* harmony import */ var multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/hashes/identity */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/identity.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Function takes arbitrary value and if it happens to be an `IPLDView`\n * it will iterate over it's blocks. It is just a convenience for traversing\n * arbitrary structures that may contain `IPLDView`s in them.\n * Note if you pass anything other than `IPLDView` it will not attempt\n * to find views nested inside them, instead it will just emit no blocks.\n *\n * @param {unknown} value\n * @returns {IterableIterator<API.Block>}\n */\nconst iterate = function* (value) {\n  if (\n    value &&\n    typeof value === 'object' &&\n    'iterateIPLDBlocks' in value &&\n    typeof value.iterateIPLDBlocks === 'function'\n  ) {\n    yield* value.iterateIPLDBlocks()\n  }\n}\n\n/**\n * @template [T=unknown]\n * @typedef {Map<API.ToString<API.Link>, API.Block<T, number, number, 0>|API.Block<T, number, number, 1>>} BlockStore\n */\n\n/**\n * @template [T=unknown]\n * @param {API.Block<T>[]} blocks\n * @returns {API.BlockStore<T>}\n */\nconst createStore = (blocks = []) => {\n  const store = new Map()\n  addEveryInto(blocks, store)\n  return store\n}\n\n/** @type {API.MulticodecCode<typeof identity.code, typeof identity.name>} */\nconst EMBED_CODE = multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_5__.identity.code\n\n/**\n * Gets block corresponding to the given CID from the store. If store does not\n * contain the block, `fallback` is returned. If `fallback` is not provided, it\n * will throw an error.\n *\n * @template {0|1} V\n * @template {T} U\n * @template T\n * @template {API.MulticodecCode} Format\n * @template {API.MulticodecCode} Alg\n * @template [E=never]\n * @param {API.Link<U, Format, Alg, V>} cid\n * @param {BlockStore<T>} store\n * @param {E} [fallback]\n * @returns {API.Block<U, Format, Alg, V>|E}\n */\nconst get = (cid, store, fallback) => {\n  // If CID uses identity hash, we can return the block data directly\n  if (cid.multihash.code === EMBED_CODE) {\n    return { cid, bytes: cid.multihash.digest }\n  }\n\n  const block = /** @type {API.Block<U, Format, Alg, V>|undefined} */ (\n    store.get(`${cid}`)\n  )\n  return block ? block : fallback === undefined ? notFound(cid) : fallback\n}\n\n/**\n * @template T\n * @template {T} U\n * @param {U} source\n * @template {API.MulticodecCode} [C=API.MulticodecCode<typeof CBOR.code, typeof CBOR.name>]\n * @param {object} options\n * @param {MF.BlockEncoder<C, U>} [options.codec]\n * @returns {API.Block<U, C, typeof EMBED_CODE> & { data: U }}\n */\nconst embed = (source, { codec } = {}) => {\n  const encoder = /** @type {MF.BlockEncoder<C, U>}  */ (codec || _cbor_js__WEBPACK_IMPORTED_MODULE_4__)\n  const bytes = encoder.encode(source)\n  const digest = multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_5__.identity.digest(bytes)\n  return {\n    cid: (0,_link_js__WEBPACK_IMPORTED_MODULE_1__.create)(encoder.code, digest),\n    bytes,\n    data: source,\n  }\n}\n\n/**\n * @param {API.Link<*, *, *, *>} link\n * @returns {never}\n */\nconst notFound = link => {\n  throw new Error(`Block for the ${link} is not found`)\n}\n\n/**\n * @template T\n * @template {T} U\n * @template {API.MulticodecCode} C\n * @template {API.MulticodecCode} A\n * @param {U} source\n * @param {BlockStore<T>} store\n * @param {object} options\n * @param {MF.BlockEncoder<C, unknown>} [options.codec]\n * @param {MF.MultihashHasher<A>} [options.hasher]\n * @returns {Promise<API.Block<U, C, A> & { data: U }>}\n */\nconst writeInto = async (source, store, options = {}) => {\n  const codec = /** @type {MF.BlockEncoder<C, U>} */ (options.codec || _cbor_js__WEBPACK_IMPORTED_MODULE_4__)\n  const hasher = /** @type {MF.MultihashHasher<A>} */ (options.hasher || multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_2__.sha256)\n\n  const bytes = codec.encode(source)\n  const digest = await hasher.digest(bytes)\n  /** @type {API.Link<U, typeof codec.code, typeof hasher.code>} */\n  const link = (0,_link_js__WEBPACK_IMPORTED_MODULE_1__.create)(codec.code, digest)\n  store.set(/** @type {API.ToString<typeof link>} */ (link.toString()), {\n    bytes,\n    cid: link,\n  })\n\n  return { bytes, cid: link, data: source }\n}\n\n/**\n * @template T\n * @template {T} U\n * @param {API.Block<U>} block\n * @param {BlockStore<T>} store\n * @returns {API.Block<U>}\n */\nconst addInto = ({ cid, bytes }, store) => {\n  store.set(/** @type {API.ToString<typeof cid>} */ (cid.toString()), {\n    bytes,\n    cid,\n  })\n\n  return { bytes, cid }\n}\n\n/**\n * @template T\n * @template {T} U\n * @param {Iterable<API.Block<U>>} source\n * @param {BlockStore<T>} store\n */\nconst addEveryInto = (source, store) => {\n  for (const block of source) {\n    addInto(block, store)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/dag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/delegation.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ucanto/core/src/delegation.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArchiveSchema: () => (/* binding */ ArchiveSchema),\n/* harmony export */   Delegation: () => (/* binding */ Delegation),\n/* harmony export */   View: () => (/* binding */ Delegation),\n/* harmony export */   allows: () => (/* binding */ allows),\n/* harmony export */   archive: () => (/* binding */ archive),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   delegate: () => (/* binding */ delegate),\n/* harmony export */   exportDAG: () => (/* binding */ exportDAG),\n/* harmony export */   extract: () => (/* binding */ extract),\n/* harmony export */   importDAG: () => (/* binding */ importDAG),\n/* harmony export */   isDelegation: () => (/* binding */ isDelegation),\n/* harmony export */   isLink: () => (/* binding */ isLink),\n/* harmony export */   view: () => (/* binding */ view)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_ucan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-ucan */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/lib.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./link.js */ \"(ssr)/./node_modules/@ucanto/core/src/link.js\");\n/* harmony import */ var _dag_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dag.js */ \"(ssr)/./node_modules/@ucanto/core/src/dag.js\");\n/* harmony import */ var _car_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./car.js */ \"(ssr)/./node_modules/@ucanto/core/src/car.js\");\n/* harmony import */ var _cbor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cbor.js */ \"(ssr)/./node_modules/@ucanto/core/src/cbor.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema.js\");\n/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./result.js */ \"(ssr)/./node_modules/@ucanto/core/src/result.js\");\n\n\n\n\n\n\n\n\n\n/**\n * @deprecated\n * Import `isLink` from module directly\n */\nconst isLink =\n  /** @type {(value:API.Proof) => value is API.UCANLink} */\n  (_link_js__WEBPACK_IMPORTED_MODULE_2__.isLink)\n\n/**\n *\n * @param {API.Proof} proof\n * @return {proof is API.Delegation}\n */\nconst isDelegation = proof => !_link_js__WEBPACK_IMPORTED_MODULE_2__.isLink(proof)\n\n/**\n * Takes one or more delegations and returns all delegated capabilities in\n * UCAN 0.10 format, expanding all the special forms like `with: ucan:*` and\n * `can: *` to explicit forms.\n *\n * Note that this function only considers included proofs and ignores linked\n * proofs. It is up to the user of this function to resolve whatever proofs it\n * needs and build delegation with them before calling this function.\n *\n * Also note that this function does not validate the delegations and may\n * produce result containing capabilities that escalate, which for the validator\n * perspective is no different from not including such capabilities.\n *\n * @template {[API.Delegation, ...API.Delegation[]]} T\n * @param {T} delegations\n * @returns {API.InferAllowedFromDelegations<T>}\n */\nconst allows = (...delegations) => {\n  /** @type {API.Allows} */\n  let allow = {}\n  for (const delegation of delegations) {\n    for (const { with: uri, can, nb } of iterateCapabilities(delegation)) {\n      const resource = allow[uri] || (allow[uri] = {})\n      const abilities = resource[can] || (resource[can] = [])\n      abilities.push({ ...nb })\n    }\n  }\n\n  return /** @type {API.InferAllowedFromDelegations<T>} */ (allow)\n}\n\n/**\n * Function takes a delegation and iterates over all the capabilities expanding\n * all the special forms like `with: ucan:*` and `can: *`.\n *\n * Note that this function only considers proofs that are included in the\n * delegation, linked proofs will not be resolved nor considered. It is up to\n * the user of this function to resolve whatever proofs it needs to consider\n * before calling this function.\n *\n * @param {API.Delegation} delegation\n * @returns {Iterable<API.Capability>}\n */\nconst iterateCapabilities = function* ({ issuer, capabilities, proofs }) {\n  for (const own of capabilities) {\n    // If `with` field is set to  `ucan:*` it implies re-delegation of all own\n    // and delegated capabilities.\n    if (own.with === 'ucan:*') {\n      // Fist we include own capabilities. Note that we can not expand `can`\n      // because it implicitly covers all possible options in the universe.\n      yield {\n        ...own,\n        with: issuer.did(),\n      }\n\n      // Next we iterate over all delegated capabilities including ones that\n      // match ability in the `own.can` field.\n      for (const proof of proofs) {\n        // We only consider proofs that are included and ignore linked proofs.\n        if (isDelegation(proof)) {\n          for (const capability of iterateCapabilities(proof)) {\n            // We attempt to match `capability.can` against `own.can` field\n            // if there is a match we include the capability otherwise we skip\n            const can = matchAbility(capability.can, own.can)\n            if (can) {\n              yield {\n                ...capability,\n                can,\n                // We do not know capability semantics so it is impossible\n                // for us to eliminate capabilities that do not satisfy imposed\n                // caveats (`own.nb`). Therefore we optimistically assume that\n                // `own.nb` further constraints `capability.nb` and do a shallow\n                // merge of the two. As a result we may include capabilities\n                // that during validation will be considered invalid due to\n                // constraint violations. While that is not ideal validator\n                // will treat them as if they were omitted and therefore it\n                // is a reasonable compromise.\n                nb: { ...capability.nb, ...Object(own.nb) },\n              }\n            }\n          }\n        }\n      }\n    } else {\n      yield own\n    }\n  }\n}\n\n/**\n * Function takes `can` field from the delegated capability and attempts to\n * match it against `can` field of the claimed capability. If there is a match\n * the function returns more specific `can` field of two, otherwise it returns\n * `null`.\n *\n * @param {API.Ability} provided\n * @param {API.Ability} claimed\n */\nconst matchAbility = (provided, claimed) => {\n  // If provided capability delegates all abilities we can derive any `can`\n  // from it so we return `claimed` as is.\n  if (provided === '*') {\n    return claimed\n  }\n  // If claimed capability delegates all abilities that includes any `can`\n  // so we return `provided` as is.\n  if (claimed === '*') {\n    return provided\n  }\n  // If claimed `can` is a pattern that includes `provided` `can` we return\n  // `provided` as is.\n  if (claimed.endsWith('/*') && provided.startsWith(claimed.slice(0, -1))) {\n    return provided\n  }\n  // If provided `can` is a pattern that includes `claimed` `can` we can derive\n  // `claimed` from it so we return `claimed` as is.\n  if (provided.endsWith('/*') && claimed.startsWith(provided.slice(0, -1))) {\n    return claimed\n  }\n  // If `can` fields are concrete and the same we have a match and can return it.\n  if (provided === claimed) {\n    return provided\n  }\n  // otherwise two are incompatible and we return null.\n  return null\n}\n\n/**\n * Represents UCAN chain view over the set of DAG UCAN nodes. You can think of\n * this as UCAN interface of the CAR.\n *\n * @template {API.Capabilities} C\n * @implements {API.Delegation<C>}\n * @extends {DelegationView<C>}\n */\nclass Delegation {\n  /**\n   * @param {API.UCANBlock<C>} root\n   * @param {DAG.BlockStore} [blocks]\n   */\n  constructor(root, blocks = new Map()) {\n    this.root = root\n    this.blocks = blocks\n\n    Object.defineProperties(this, {\n      blocks: {\n        enumerable: false,\n      },\n    })\n  }\n\n  /**\n   * @returns {API.AttachedLinkSet}\n   */\n  get attachedLinks() {\n    const _attachedLinks = new Set()\n    const ucanView = this.data\n\n    // Get links from capabilities nb\n    for (const capability of ucanView.capabilities) {\n      /** @type {Link[]} */\n      const links = getLinksFromObject(capability)\n\n      for (const link of links) {\n        _attachedLinks.add(`${link}`)\n      }\n    }\n\n    // Get links from facts values\n    for (const fact of ucanView.facts) {\n      if (_link_js__WEBPACK_IMPORTED_MODULE_2__.isLink(fact)) {\n        _attachedLinks.add(`${fact}`)\n      } else {\n        /** @type {Link[]} */\n        // @ts-expect-error isLink does not infer value type\n        const links = Object.values(fact).filter(e => _link_js__WEBPACK_IMPORTED_MODULE_2__.isLink(e))\n\n        for (const link of links) {\n          _attachedLinks.add(`${link}`)\n        }\n      }\n    }\n\n    return _attachedLinks\n  }\n\n  get version() {\n    return this.data.version\n  }\n  get signature() {\n    return this.data.signature\n  }\n  get cid() {\n    return this.root.cid\n  }\n  link() {\n    return this.root.cid\n  }\n  get asCID() {\n    return this.cid\n  }\n  get bytes() {\n    return this.root.bytes\n  }\n  get data() {\n    const data = decode(this.root)\n    Object.defineProperties(this, { data: { value: data, enumerable: false } })\n    return data\n  }\n  /**\n   * Attach a block to the delegation DAG so it would be included in the\n   * block iterator.\n   * ⚠️ You can only attach blocks that are referenced from the `capabilities`\n   * or `facts`.\n   *\n   * @param {API.Block} block\n   */\n  attach(block) {\n    if (!this.attachedLinks.has(`${block.cid.link()}`)) {\n      throw new Error(`given block with ${block.cid} is not an attached link`)\n    }\n    this.blocks.set(`${block.cid}`, block)\n  }\n  export() {\n    return exportDAG(this.root, this.blocks, this.attachedLinks)\n  }\n\n  /**\n   * @returns {API.Await<API.Result<Uint8Array, Error>>}\n   */\n  archive() {\n    return archive(this)\n  }\n\n  iterateIPLDBlocks() {\n    return exportDAG(this.root, this.blocks, this.attachedLinks)\n  }\n\n  /**\n   * @type {API.Proof[]}\n   */\n  get proofs() {\n    return proofs(this)\n  }\n\n  /**\n   * @type {API.Principal}\n   */\n  get issuer() {\n    return this.data.issuer\n  }\n\n  /**\n   * @type {API.Principal}\n   */\n  get audience() {\n    return this.data.audience\n  }\n\n  /**\n   * @returns {C}\n   */\n  get capabilities() {\n    return /** @type {C} */ (this.data.capabilities)\n  }\n\n  /**\n   * @returns {number}\n   */\n  get expiration() {\n    return this.data.expiration\n  }\n\n  /**\n   * @returns {undefined|number}\n   */\n  get notBefore() {\n    return this.data.notBefore\n  }\n\n  /**\n   * @returns {undefined|string}\n   */\n\n  get nonce() {\n    return this.data.nonce\n  }\n\n  /**\n   * @returns {API.Fact[]}\n   */\n  get facts() {\n    return this.data.facts\n  }\n\n  /**\n   * Iterate over the proofs\n   *\n   * @returns {IterableIterator<API.Delegation>}\n   */\n  iterate() {\n    return it(this)\n  }\n\n  delegate() {\n    return this\n  }\n\n  buildIPLDView() {\n    return this\n  }\n\n  /**\n   * @returns {API.DelegationJSON<this>}\n   */\n  toJSON() {\n    return /** @type {any} */ ({\n      ...this.data.toJSON(),\n      '/': this.cid.toString(),\n      prf: this.proofs.map(proof =>\n        isDelegation(proof) ? proof : { '/': proof.toString() }\n      ),\n    })\n  }\n}\n\n/**\n * Writes given `Delegation` chain into a content addressed archive (CAR)\n * buffer and returns it.\n *\n * @param {API.Delegation} delegation}\n * @returns {Promise<API.Result<Uint8Array, Error>>}\n */\nconst archive = async delegation => {\n  try {\n    // Iterate over all of the blocks in the DAG and add them to the\n    // block store.\n    const store = new Map()\n    for (const block of delegation.iterateIPLDBlocks()) {\n      store.set(`${block.cid}`, block)\n    }\n\n    // Then we we create a descriptor block to describe what this DAG represents\n    // and it to the block store as well.\n    const variant = await _cbor_js__WEBPACK_IMPORTED_MODULE_5__.write({\n      [`ucan@${delegation.version}`]: delegation.root.cid,\n    })\n    store.set(`${variant.cid}`, variant)\n\n    // And finally we encode the whole thing into a CAR.\n    const bytes = _car_js__WEBPACK_IMPORTED_MODULE_4__.encode({\n      roots: [variant],\n      blocks: store,\n    })\n\n    return (0,_result_js__WEBPACK_IMPORTED_MODULE_7__.ok)(bytes)\n  } catch (cause) {\n    return (0,_result_js__WEBPACK_IMPORTED_MODULE_7__.error)(/** @type {Error} */ (cause))\n  }\n}\n\nconst ArchiveSchema = _schema_js__WEBPACK_IMPORTED_MODULE_6__.variant({\n  'ucan@0.9.1': /** @type {Schema.Schema<API.UCANLink>} */ (\n    _schema_js__WEBPACK_IMPORTED_MODULE_6__.link({ version: 1 })\n  ),\n})\n\n/**\n * Extracts a `Delegation` chain from a given content addressed archive (CAR)\n * buffer. Assumes that the CAR contains a single root block corresponding to\n * the delegation variant.\n *\n * @param {Uint8Array} archive\n */\nconst extract = async archive => {\n  try {\n    const { roots, blocks } = _car_js__WEBPACK_IMPORTED_MODULE_4__.decode(archive)\n    const [root] = roots\n    if (root == null) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_6__.error('CAR archive does not contain a root block')\n    }\n    const { bytes } = root\n    const variant = _cbor_js__WEBPACK_IMPORTED_MODULE_5__.decode(bytes)\n    const [, link] = ArchiveSchema.match(variant)\n    return (0,_result_js__WEBPACK_IMPORTED_MODULE_7__.ok)(view({ root: link, blocks }))\n  } catch (cause) {\n    return (0,_result_js__WEBPACK_IMPORTED_MODULE_7__.error)(/** @type {Error} */ (cause))\n  }\n}\n\n/**\n * @param {API.Delegation} delegation\n * @returns {IterableIterator<API.Delegation>}\n */\nconst it = function* (delegation) {\n  for (const proof of delegation.proofs) {\n    if (isDelegation(proof)) {\n      yield* it(proof)\n      yield proof\n    }\n  }\n}\n\nconst decodeCache = new WeakMap()\n/**\n * @template {API.Capabilities} C\n * @param {API.UCANBlock<C>} block\n * @returns {UCAN.View<C>}\n */\nconst decode = ({ bytes }) => {\n  const data = decodeCache.get(bytes)\n  if (!data) {\n    const data = _ipld_dag_ucan__WEBPACK_IMPORTED_MODULE_0__.decode(bytes)\n    decodeCache.set(bytes, data)\n    return data\n  }\n  return data\n}\n\n/**\n * Creates a new signed token with a given `options.issuer`. If expiration is\n * not set it defaults to 30 seconds from now. Returns UCAN in primary - IPLD\n * representation.\n *\n * @template {API.Capabilities} C\n * @param {API.DelegationOptions<C>} data\n * @param {API.EncodeOptions} [options]\n * @returns {Promise<API.Delegation<C>>}\n */\n\nconst delegate = async (\n  { issuer, audience, proofs = [], attachedBlocks = new Map(), ...input },\n  options\n) => {\n  const links = []\n  const blocks = new Map()\n  for (const proof of proofs) {\n    if (!isDelegation(proof)) {\n      links.push(proof)\n    } else {\n      links.push(proof.cid)\n      for (const block of proof.export()) {\n        blocks.set(block.cid.toString(), block)\n      }\n    }\n  }\n\n  const data = await _ipld_dag_ucan__WEBPACK_IMPORTED_MODULE_0__.issue({\n    ...input,\n    issuer,\n    audience,\n    proofs: links,\n  })\n  const { cid, bytes } = await _ipld_dag_ucan__WEBPACK_IMPORTED_MODULE_0__.write(data, options)\n  decodeCache.set(cid, data)\n\n  /** @type {API.Delegation<C>} */\n  const delegation = new Delegation({ cid, bytes }, blocks)\n  Object.defineProperties(delegation, { proofs: { value: proofs } })\n\n  for (const block of attachedBlocks.values()) {\n    delegation.attach(block)\n  }\n\n  return delegation\n}\n\n/**\n * @template {API.Capabilities} C\n * @param {API.UCANBlock<C>} root\n * @param {DAG.BlockStore} blocks\n * @param {API.AttachedLinkSet} attachedLinks\n * @returns {IterableIterator<API.Block>}\n */\n\nconst exportDAG = function* (root, blocks, attachedLinks) {\n  for (const link of decode(root).proofs) {\n    // Check if block is included in this delegation\n    const root = /** @type {UCAN.Block} */ (blocks.get(`${link}`))\n    if (root) {\n      yield* exportSubDAG(root, blocks)\n    }\n  }\n\n  for (const link of attachedLinks.values()) {\n    const block = blocks.get(link)\n\n    if (block) {\n      // @ts-expect-error can get blocks with v0 and v1\n      yield block\n    }\n  }\n\n  yield root\n}\n\n/**\n * @template {API.Capabilities} C\n * @param {API.UCANBlock<C>} root\n * @param {DAG.BlockStore} blocks\n * @returns {IterableIterator<API.Block>}\n */\nconst exportSubDAG = function* (root, blocks) {\n  for (const link of decode(root).proofs) {\n    // Check if block is included in this delegation\n    const root = /** @type {UCAN.Block} */ (blocks.get(`${link}`))\n    if (root) {\n      yield* exportSubDAG(root, blocks)\n    }\n  }\n\n  yield root\n}\n\n/**\n * @template {API.Capabilities} C\n * @param {Iterable<API.Block>} dag\n * @returns {API.Delegation<C>}\n */\nconst importDAG = dag => {\n  /** @type {Array<[string, API.Block]>} */\n  let entries = []\n  for (const block of dag) {\n    entries.push([block.cid.toString(), block])\n  }\n\n  const last = entries.pop()\n  if (!last) {\n    throw new RangeError('Empty DAG can not be turned into a delegation')\n  } else {\n    const [, root] = last\n\n    return new Delegation(\n      /** @type {API.UCANBlock<C>} */ (root),\n      new Map(entries)\n    )\n  }\n}\n\n/**\n * @template {API.Capabilities} C\n * @param {object} dag\n * @param {API.UCANBlock<C>} dag.root\n * @param {DAG.BlockStore} [dag.blocks]\n * @returns {API.Delegation<C>}\n */\nconst create = ({ root, blocks }) => new Delegation(root, blocks)\n\n/**\n * @template {API.Capabilities} C\n * @template [E=never]\n * @param {object} dag\n * @param {API.UCANLink<C>} dag.root\n * @param {DAG.BlockStore} dag.blocks\n * @param {E} [fallback]\n * @returns {API.Delegation<C>|E}\n */\nconst view = ({ root, blocks }, fallback) => {\n  const block = _dag_js__WEBPACK_IMPORTED_MODULE_3__.get(root, blocks, null)\n  if (block == null) {\n    return fallback !== undefined ? fallback : _dag_js__WEBPACK_IMPORTED_MODULE_3__.notFound(root)\n  }\n  return create({ root: block, blocks })\n}\n\n/**\n * @param {API.Delegation} delegation\n */\nconst proofs = delegation => {\n  /** @type {API.Proof[]} */\n  const proofs = []\n  const { root, blocks } = delegation\n  // Iterate over proof links and materialize Delegation views.\n  for (const link of decode(root).proofs) {\n    // Check if linked proof is included in our blocks if so create delegation\n    // view otherwise use a link\n    const root = /** @type {UCAN.Block} */ (blocks.get(link.toString()))\n    proofs.push(root ? create({ root, blocks }) : link)\n  }\n\n  // we cache result of this computation as this property may get accessed\n  // more than once.\n  Object.defineProperty(delegation, 'proofs', { value: proofs })\n  return proofs\n}\n\n/**\n * @param {API.Capability<API.Ability, `${string}:${string}`, unknown>} obj\n */\nfunction getLinksFromObject(obj) {\n  /** @type {Link[]} */\n  const links = []\n\n  /**\n   * @param {object} obj\n   */\n  function recurse(obj) {\n    for (const key in obj) {\n      // @ts-expect-error record type not inferred\n      const value = obj[key]\n      if (_link_js__WEBPACK_IMPORTED_MODULE_2__.isLink(value)) {\n        // @ts-expect-error isLink does not infer value type\n        links.push(value)\n      } else if (value && typeof value === 'object') {\n        recurse(value)\n      }\n    }\n  }\n\n  recurse(obj)\n\n  return links\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/delegation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/invocation.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ucanto/core/src/invocation.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Invocation: () => (/* binding */ Invocation),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   invoke: () => (/* binding */ invoke),\n/* harmony export */   isInvocation: () => (/* binding */ isInvocation),\n/* harmony export */   view: () => (/* binding */ view)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _delegation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delegation.js */ \"(ssr)/./node_modules/@ucanto/core/src/delegation.js\");\n/* harmony import */ var _dag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dag.js */ \"(ssr)/./node_modules/@ucanto/core/src/dag.js\");\n\n\n\n\n/**\n * Takes invocation link or a reference and returns `true` if value\n * passed is a reference, returns `false` if value is a link.\n *\n * @param {API.Invocation | API.Link} value\n * @return {value is API.Invocation}\n */\nconst isInvocation = value => (0,_delegation_js__WEBPACK_IMPORTED_MODULE_1__.isDelegation)(value)\n\n/**\n * @template {API.Capability} Capability\n * @param {API.InvocationOptions<Capability>} options\n * @return {API.IssuedInvocationView<Capability>}\n */\nconst invoke = options => new IssuedInvocation(options)\n\n/**\n * @template {API.Capability} C\n * @param {object} dag\n * @param {API.UCANBlock<[C]>} dag.root\n * @param {DAG.BlockStore} [dag.blocks]\n * @returns {API.Invocation<C>}\n */\nconst create = ({ root, blocks }) => new Invocation(root, blocks)\n\n/**\n * Takes a link of the `root` block and a map of blocks and constructs an\n * `Invocation` from it. If `root` is not included in the provided blocks\n * provided fallback is returned and if not provided than throws an error.\n * If root points to wrong block (that is not an invocation) it will misbehave\n * and likely throw some errors on field access.\n *\n * @template {API.Capability} C\n * @template {API.Invocation} Invocation\n * @template [T=never]\n * @param {object} dag\n * @param {API.UCANLink<[C]>} dag.root\n * @param {DAG.BlockStore} dag.blocks\n * @param {T} [fallback]\n * @returns {API.Invocation<C>|T}\n */\nconst view = ({ root, blocks }, fallback) => {\n  const block = _dag_js__WEBPACK_IMPORTED_MODULE_2__.get(root, blocks, null)\n  if (block == null) {\n    return fallback !== undefined ? fallback : _dag_js__WEBPACK_IMPORTED_MODULE_2__.notFound(root)\n  }\n\n  return /** @type {API.Invocation<C>} */ (create({ root: block, blocks }))\n}\n\n/**\n * @template {API.Capability} Capability\n * @implements {API.IssuedInvocationView<Capability>}\n * @implements {API.IssuedInvocation<Capability>}\n */\nclass IssuedInvocation {\n  /**\n   * @param {API.InvocationOptions<Capability>} data\n   */\n  constructor({\n    issuer,\n    audience,\n    capability,\n    proofs = [],\n    expiration,\n    lifetimeInSeconds,\n    notBefore,\n    nonce,\n    facts = [],\n  }) {\n    /** @readonly */\n    this.issuer = issuer\n    /** @readonly */\n    this.audience = audience\n    /** @readonly */\n    this.proofs = proofs\n\n    /**\n     * @readonly\n     * @type {[Capability]}\n     */\n    this.capabilities = [capability]\n\n    this.expiration = expiration\n    this.lifetimeInSeconds = lifetimeInSeconds\n    this.notBefore = notBefore\n    this.nonce = nonce\n    this.facts = facts\n\n    /** @type {API.BlockStore<unknown>} */\n    this.attachedBlocks = new Map()\n  }\n\n  /**\n   * @param {API.Block} block\n   */\n  attach(block) {\n    this.attachedBlocks.set(`${block.cid}`, block)\n  }\n\n  delegate() {\n    return (0,_delegation_js__WEBPACK_IMPORTED_MODULE_1__.delegate)(this)\n  }\n\n  buildIPLDView() {\n    return (0,_delegation_js__WEBPACK_IMPORTED_MODULE_1__.delegate)(this)\n  }\n\n  /**\n   * @template {API.InvocationService<Capability>} Service\n   * @param {API.ConnectionView<Service>} connection\n   * @returns {Promise<API.InferReceipt<Capability, Service>>}\n   */\n  async execute(connection) {\n    /** @type {API.ServiceInvocation<Capability, Service>} */\n    // @ts-expect-error - Our `API.InvocationService<Capability>` constraint\n    // does not seem to be enough to convince TS that `this` is valid\n    // `ServiceInvocations<Service>`.\n    const invocation = this\n    const [result] = await connection.execute(invocation)\n    return result\n  }\n}\n\n/**\n * @template {API.Capability} Capability\n * @implements {API.Invocation<Capability>}\n * @extends {Delegation<[Capability]>}\n */\nclass Invocation extends _delegation_js__WEBPACK_IMPORTED_MODULE_1__.Delegation {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9pbnZvY2F0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQzRCO0FBQ3JDOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMkJBQTJCO0FBQ3RDLFlBQVk7QUFDWjtBQUNPLDhCQUE4Qiw0REFBWTs7QUFFakQ7QUFDQSxjQUFjLGdCQUFnQjtBQUM5QixXQUFXLG1DQUFtQztBQUM5QyxZQUFZO0FBQ1o7QUFDTzs7QUFFUDtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCLFdBQVcsUUFBUTtBQUNuQixXQUFXLG9CQUFvQjtBQUMvQixXQUFXLGdCQUFnQjtBQUMzQixhQUFhO0FBQ2I7QUFDTyxrQkFBa0IsY0FBYzs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQjtBQUM5QixjQUFjLGdCQUFnQjtBQUM5QjtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLG1CQUFtQjtBQUM5QixXQUFXLGdCQUFnQjtBQUMzQixXQUFXLEdBQUc7QUFDZCxhQUFhO0FBQ2I7QUFDTyxnQkFBZ0IsY0FBYztBQUNyQyxnQkFBZ0Isd0NBQU87QUFDdkI7QUFDQSwrQ0FBK0MsNkNBQVk7QUFDM0Q7O0FBRUEsb0JBQW9CLG1CQUFtQixhQUFhLHFCQUFxQjtBQUN6RTs7QUFFQTtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCLGdCQUFnQjtBQUNoQixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQ0FBbUM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZSx5QkFBeUI7QUFDeEM7QUFDQTs7QUFFQTtBQUNBLGFBQWEsV0FBVztBQUN4QjtBQUNBO0FBQ0EsK0JBQStCLFVBQVU7QUFDekM7O0FBRUE7QUFDQSxXQUFXLHdEQUFRO0FBQ25COztBQUVBO0FBQ0EsV0FBVyx3REFBUTtBQUNuQjs7QUFFQTtBQUNBLGdCQUFnQixtQ0FBbUM7QUFDbkQsYUFBYSw2QkFBNkI7QUFDMUMsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlLDRDQUE0QztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUIsZ0JBQWdCO0FBQ2hCLGFBQWE7QUFDYjtBQUNPLHlCQUF5QixzREFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9zcmMvaW52b2NhdGlvbi5qcz80MWJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcbmltcG9ydCB7IGRlbGVnYXRlLCBEZWxlZ2F0aW9uLCBpc0RlbGVnYXRpb24gfSBmcm9tICcuL2RlbGVnYXRpb24uanMnXG5pbXBvcnQgKiBhcyBEQUcgZnJvbSAnLi9kYWcuanMnXG5cbi8qKlxuICogVGFrZXMgaW52b2NhdGlvbiBsaW5rIG9yIGEgcmVmZXJlbmNlIGFuZCByZXR1cm5zIGB0cnVlYCBpZiB2YWx1ZVxuICogcGFzc2VkIGlzIGEgcmVmZXJlbmNlLCByZXR1cm5zIGBmYWxzZWAgaWYgdmFsdWUgaXMgYSBsaW5rLlxuICpcbiAqIEBwYXJhbSB7QVBJLkludm9jYXRpb24gfCBBUEkuTGlua30gdmFsdWVcbiAqIEByZXR1cm4ge3ZhbHVlIGlzIEFQSS5JbnZvY2F0aW9ufVxuICovXG5leHBvcnQgY29uc3QgaXNJbnZvY2F0aW9uID0gdmFsdWUgPT4gaXNEZWxlZ2F0aW9uKHZhbHVlKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7QVBJLkNhcGFiaWxpdHl9IENhcGFiaWxpdHlcbiAqIEBwYXJhbSB7QVBJLkludm9jYXRpb25PcHRpb25zPENhcGFiaWxpdHk+fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtBUEkuSXNzdWVkSW52b2NhdGlvblZpZXc8Q2FwYWJpbGl0eT59XG4gKi9cbmV4cG9ydCBjb25zdCBpbnZva2UgPSBvcHRpb25zID0+IG5ldyBJc3N1ZWRJbnZvY2F0aW9uKG9wdGlvbnMpXG5cbi8qKlxuICogQHRlbXBsYXRlIHtBUEkuQ2FwYWJpbGl0eX0gQ1xuICogQHBhcmFtIHtvYmplY3R9IGRhZ1xuICogQHBhcmFtIHtBUEkuVUNBTkJsb2NrPFtDXT59IGRhZy5yb290XG4gKiBAcGFyYW0ge0RBRy5CbG9ja1N0b3JlfSBbZGFnLmJsb2Nrc11cbiAqIEByZXR1cm5zIHtBUEkuSW52b2NhdGlvbjxDPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9ICh7IHJvb3QsIGJsb2NrcyB9KSA9PiBuZXcgSW52b2NhdGlvbihyb290LCBibG9ja3MpXG5cbi8qKlxuICogVGFrZXMgYSBsaW5rIG9mIHRoZSBgcm9vdGAgYmxvY2sgYW5kIGEgbWFwIG9mIGJsb2NrcyBhbmQgY29uc3RydWN0cyBhblxuICogYEludm9jYXRpb25gIGZyb20gaXQuIElmIGByb290YCBpcyBub3QgaW5jbHVkZWQgaW4gdGhlIHByb3ZpZGVkIGJsb2Nrc1xuICogcHJvdmlkZWQgZmFsbGJhY2sgaXMgcmV0dXJuZWQgYW5kIGlmIG5vdCBwcm92aWRlZCB0aGFuIHRocm93cyBhbiBlcnJvci5cbiAqIElmIHJvb3QgcG9pbnRzIHRvIHdyb25nIGJsb2NrICh0aGF0IGlzIG5vdCBhbiBpbnZvY2F0aW9uKSBpdCB3aWxsIG1pc2JlaGF2ZVxuICogYW5kIGxpa2VseSB0aHJvdyBzb21lIGVycm9ycyBvbiBmaWVsZCBhY2Nlc3MuXG4gKlxuICogQHRlbXBsYXRlIHtBUEkuQ2FwYWJpbGl0eX0gQ1xuICogQHRlbXBsYXRlIHtBUEkuSW52b2NhdGlvbn0gSW52b2NhdGlvblxuICogQHRlbXBsYXRlIFtUPW5ldmVyXVxuICogQHBhcmFtIHtvYmplY3R9IGRhZ1xuICogQHBhcmFtIHtBUEkuVUNBTkxpbms8W0NdPn0gZGFnLnJvb3RcbiAqIEBwYXJhbSB7REFHLkJsb2NrU3RvcmV9IGRhZy5ibG9ja3NcbiAqIEBwYXJhbSB7VH0gW2ZhbGxiYWNrXVxuICogQHJldHVybnMge0FQSS5JbnZvY2F0aW9uPEM+fFR9XG4gKi9cbmV4cG9ydCBjb25zdCB2aWV3ID0gKHsgcm9vdCwgYmxvY2tzIH0sIGZhbGxiYWNrKSA9PiB7XG4gIGNvbnN0IGJsb2NrID0gREFHLmdldChyb290LCBibG9ja3MsIG51bGwpXG4gIGlmIChibG9jayA9PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbGxiYWNrICE9PSB1bmRlZmluZWQgPyBmYWxsYmFjayA6IERBRy5ub3RGb3VuZChyb290KVxuICB9XG5cbiAgcmV0dXJuIC8qKiBAdHlwZSB7QVBJLkludm9jYXRpb248Qz59ICovIChjcmVhdGUoeyByb290OiBibG9jaywgYmxvY2tzIH0pKVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7QVBJLkNhcGFiaWxpdHl9IENhcGFiaWxpdHlcbiAqIEBpbXBsZW1lbnRzIHtBUEkuSXNzdWVkSW52b2NhdGlvblZpZXc8Q2FwYWJpbGl0eT59XG4gKiBAaW1wbGVtZW50cyB7QVBJLklzc3VlZEludm9jYXRpb248Q2FwYWJpbGl0eT59XG4gKi9cbmNsYXNzIElzc3VlZEludm9jYXRpb24ge1xuICAvKipcbiAgICogQHBhcmFtIHtBUEkuSW52b2NhdGlvbk9wdGlvbnM8Q2FwYWJpbGl0eT59IGRhdGFcbiAgICovXG4gIGNvbnN0cnVjdG9yKHtcbiAgICBpc3N1ZXIsXG4gICAgYXVkaWVuY2UsXG4gICAgY2FwYWJpbGl0eSxcbiAgICBwcm9vZnMgPSBbXSxcbiAgICBleHBpcmF0aW9uLFxuICAgIGxpZmV0aW1lSW5TZWNvbmRzLFxuICAgIG5vdEJlZm9yZSxcbiAgICBub25jZSxcbiAgICBmYWN0cyA9IFtdLFxuICB9KSB7XG4gICAgLyoqIEByZWFkb25seSAqL1xuICAgIHRoaXMuaXNzdWVyID0gaXNzdWVyXG4gICAgLyoqIEByZWFkb25seSAqL1xuICAgIHRoaXMuYXVkaWVuY2UgPSBhdWRpZW5jZVxuICAgIC8qKiBAcmVhZG9ubHkgKi9cbiAgICB0aGlzLnByb29mcyA9IHByb29mc1xuXG4gICAgLyoqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICogQHR5cGUge1tDYXBhYmlsaXR5XX1cbiAgICAgKi9cbiAgICB0aGlzLmNhcGFiaWxpdGllcyA9IFtjYXBhYmlsaXR5XVxuXG4gICAgdGhpcy5leHBpcmF0aW9uID0gZXhwaXJhdGlvblxuICAgIHRoaXMubGlmZXRpbWVJblNlY29uZHMgPSBsaWZldGltZUluU2Vjb25kc1xuICAgIHRoaXMubm90QmVmb3JlID0gbm90QmVmb3JlXG4gICAgdGhpcy5ub25jZSA9IG5vbmNlXG4gICAgdGhpcy5mYWN0cyA9IGZhY3RzXG5cbiAgICAvKiogQHR5cGUge0FQSS5CbG9ja1N0b3JlPHVua25vd24+fSAqL1xuICAgIHRoaXMuYXR0YWNoZWRCbG9ja3MgPSBuZXcgTWFwKClcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0FQSS5CbG9ja30gYmxvY2tcbiAgICovXG4gIGF0dGFjaChibG9jaykge1xuICAgIHRoaXMuYXR0YWNoZWRCbG9ja3Muc2V0KGAke2Jsb2NrLmNpZH1gLCBibG9jaylcbiAgfVxuXG4gIGRlbGVnYXRlKCkge1xuICAgIHJldHVybiBkZWxlZ2F0ZSh0aGlzKVxuICB9XG5cbiAgYnVpbGRJUExEVmlldygpIHtcbiAgICByZXR1cm4gZGVsZWdhdGUodGhpcylcbiAgfVxuXG4gIC8qKlxuICAgKiBAdGVtcGxhdGUge0FQSS5JbnZvY2F0aW9uU2VydmljZTxDYXBhYmlsaXR5Pn0gU2VydmljZVxuICAgKiBAcGFyYW0ge0FQSS5Db25uZWN0aW9uVmlldzxTZXJ2aWNlPn0gY29ubmVjdGlvblxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBUEkuSW5mZXJSZWNlaXB0PENhcGFiaWxpdHksIFNlcnZpY2U+Pn1cbiAgICovXG4gIGFzeW5jIGV4ZWN1dGUoY29ubmVjdGlvbikge1xuICAgIC8qKiBAdHlwZSB7QVBJLlNlcnZpY2VJbnZvY2F0aW9uPENhcGFiaWxpdHksIFNlcnZpY2U+fSAqL1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBPdXIgYEFQSS5JbnZvY2F0aW9uU2VydmljZTxDYXBhYmlsaXR5PmAgY29uc3RyYWludFxuICAgIC8vIGRvZXMgbm90IHNlZW0gdG8gYmUgZW5vdWdoIHRvIGNvbnZpbmNlIFRTIHRoYXQgYHRoaXNgIGlzIHZhbGlkXG4gICAgLy8gYFNlcnZpY2VJbnZvY2F0aW9uczxTZXJ2aWNlPmAuXG4gICAgY29uc3QgaW52b2NhdGlvbiA9IHRoaXNcbiAgICBjb25zdCBbcmVzdWx0XSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShpbnZvY2F0aW9uKVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7QVBJLkNhcGFiaWxpdHl9IENhcGFiaWxpdHlcbiAqIEBpbXBsZW1lbnRzIHtBUEkuSW52b2NhdGlvbjxDYXBhYmlsaXR5Pn1cbiAqIEBleHRlbmRzIHtEZWxlZ2F0aW9uPFtDYXBhYmlsaXR5XT59XG4gKi9cbmV4cG9ydCBjbGFzcyBJbnZvY2F0aW9uIGV4dGVuZHMgRGVsZWdhdGlvbiB7fVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/invocation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/lib.js":
/*!**********************************************!*\
  !*** ./node_modules/@ucanto/core/src/lib.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API: () => (/* reexport module object */ _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   CAR: () => (/* reexport module object */ _car_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   CBOR: () => (/* reexport module object */ _cbor_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   DAG: () => (/* reexport module object */ _dag_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   DID: () => (/* reexport module object */ _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_12__),\n/* harmony export */   Delegation: () => (/* reexport module object */ _delegation_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   Failure: () => (/* reexport safe */ _result_js__WEBPACK_IMPORTED_MODULE_14__.Failure),\n/* harmony export */   Invocation: () => (/* reexport module object */ _invocation_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   Message: () => (/* reexport module object */ _message_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   Receipt: () => (/* reexport module object */ _receipt_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   Schema: () => (/* reexport module object */ _schema_js__WEBPACK_IMPORTED_MODULE_15__),\n/* harmony export */   Signature: () => (/* reexport module object */ _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_13__),\n/* harmony export */   UCAN: () => (/* reexport module object */ _ipld_dag_ucan__WEBPACK_IMPORTED_MODULE_11__),\n/* harmony export */   base58btc: () => (/* reexport safe */ multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_10__.base58btc),\n/* harmony export */   createLegacyLink: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_8__.createLegacy),\n/* harmony export */   createLink: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_8__.create),\n/* harmony export */   decodeLink: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_8__.decode),\n/* harmony export */   delegate: () => (/* reexport safe */ _delegation_js__WEBPACK_IMPORTED_MODULE_1__.delegate),\n/* harmony export */   error: () => (/* reexport safe */ _result_js__WEBPACK_IMPORTED_MODULE_14__.error),\n/* harmony export */   fail: () => (/* reexport safe */ _result_js__WEBPACK_IMPORTED_MODULE_14__.fail),\n/* harmony export */   invoke: () => (/* reexport safe */ _invocation_js__WEBPACK_IMPORTED_MODULE_2__.invoke),\n/* harmony export */   isDelegation: () => (/* reexport safe */ _delegation_js__WEBPACK_IMPORTED_MODULE_1__.isDelegation),\n/* harmony export */   isLink: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_8__.isLink),\n/* harmony export */   ok: () => (/* reexport safe */ _result_js__WEBPACK_IMPORTED_MODULE_14__.ok),\n/* harmony export */   panic: () => (/* reexport safe */ _result_js__WEBPACK_IMPORTED_MODULE_14__.panic),\n/* harmony export */   parseLink: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_8__.parse),\n/* harmony export */   sha256: () => (/* reexport safe */ multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_9__.sha256)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _delegation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delegation.js */ \"(ssr)/./node_modules/@ucanto/core/src/delegation.js\");\n/* harmony import */ var _invocation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./invocation.js */ \"(ssr)/./node_modules/@ucanto/core/src/invocation.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message.js */ \"(ssr)/./node_modules/@ucanto/core/src/message.js\");\n/* harmony import */ var _receipt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./receipt.js */ \"(ssr)/./node_modules/@ucanto/core/src/receipt.js\");\n/* harmony import */ var _dag_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dag.js */ \"(ssr)/./node_modules/@ucanto/core/src/dag.js\");\n/* harmony import */ var _cbor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cbor.js */ \"(ssr)/./node_modules/@ucanto/core/src/cbor.js\");\n/* harmony import */ var _car_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./car.js */ \"(ssr)/./node_modules/@ucanto/core/src/car.js\");\n/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./link.js */ \"(ssr)/./node_modules/@ucanto/core/src/link.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _ipld_dag_ucan__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ipld/dag-ucan */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/lib.js\");\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ipld/dag-ucan/signature */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./result.js */ \"(ssr)/./node_modules/@ucanto/core/src/result.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9saWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNLO0FBQ0E7QUFDTjtBQUNBO0FBQ1I7QUFDRTtBQUNGO0FBQ3lCO0FBQ2hCO0FBT3RCO0FBQytCO0FBQ0k7QUFDZjtBQUNHO0FBQ1k7QUFDMUI7QUFDVSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9zcmMvbGliLmpzPzI2OTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuZXhwb3J0ICogYXMgRGVsZWdhdGlvbiBmcm9tICcuL2RlbGVnYXRpb24uanMnXG5leHBvcnQgKiBhcyBJbnZvY2F0aW9uIGZyb20gJy4vaW52b2NhdGlvbi5qcydcbmV4cG9ydCAqIGFzIE1lc3NhZ2UgZnJvbSAnLi9tZXNzYWdlLmpzJ1xuZXhwb3J0ICogYXMgUmVjZWlwdCBmcm9tICcuL3JlY2VpcHQuanMnXG5leHBvcnQgKiBhcyBEQUcgZnJvbSAnLi9kYWcuanMnXG5leHBvcnQgKiBhcyBDQk9SIGZyb20gJy4vY2Jvci5qcydcbmV4cG9ydCAqIGFzIENBUiBmcm9tICcuL2Nhci5qcydcbmV4cG9ydCB7IGRlbGVnYXRlLCBpc0RlbGVnYXRpb24gfSBmcm9tICcuL2RlbGVnYXRpb24uanMnXG5leHBvcnQgeyBpbnZva2UgfSBmcm9tICcuL2ludm9jYXRpb24uanMnXG5leHBvcnQge1xuICBjcmVhdGUgYXMgY3JlYXRlTGluayxcbiAgY3JlYXRlTGVnYWN5IGFzIGNyZWF0ZUxlZ2FjeUxpbmssXG4gIGlzTGluayxcbiAgcGFyc2UgYXMgcGFyc2VMaW5rLFxuICBkZWNvZGUgYXMgZGVjb2RlTGluayxcbn0gZnJvbSAnLi9saW5rLmpzJ1xuZXhwb3J0IHsgc2hhMjU2IH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuZXhwb3J0IHsgYmFzZTU4YnRjIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U1OCdcbmV4cG9ydCAqIGFzIFVDQU4gZnJvbSAnQGlwbGQvZGFnLXVjYW4nXG5leHBvcnQgKiBhcyBESUQgZnJvbSAnQGlwbGQvZGFnLXVjYW4vZGlkJ1xuZXhwb3J0ICogYXMgU2lnbmF0dXJlIGZyb20gJ0BpcGxkL2RhZy11Y2FuL3NpZ25hdHVyZSdcbmV4cG9ydCAqIGZyb20gJy4vcmVzdWx0LmpzJ1xuZXhwb3J0ICogYXMgU2NoZW1hIGZyb20gJy4vc2NoZW1hLmpzJ1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/link.js":
/*!***********************************************!*\
  !*** ./node_modules/@ucanto/core/src/link.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* reexport safe */ multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_1__.base32),\n/* harmony export */   base58btc: () => (/* reexport safe */ multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_2__.base58btc),\n/* harmony export */   create: () => (/* reexport safe */ multiformats_link__WEBPACK_IMPORTED_MODULE_0__.create),\n/* harmony export */   createLegacy: () => (/* reexport safe */ multiformats_link__WEBPACK_IMPORTED_MODULE_0__.createLegacy),\n/* harmony export */   decode: () => (/* reexport safe */ multiformats_link__WEBPACK_IMPORTED_MODULE_0__.decode),\n/* harmony export */   format: () => (/* reexport safe */ multiformats_link__WEBPACK_IMPORTED_MODULE_0__.format),\n/* harmony export */   fromJSON: () => (/* reexport safe */ multiformats_link__WEBPACK_IMPORTED_MODULE_0__.fromJSON),\n/* harmony export */   isLink: () => (/* reexport safe */ multiformats_link__WEBPACK_IMPORTED_MODULE_0__.isLink),\n/* harmony export */   parse: () => (/* reexport safe */ multiformats_link__WEBPACK_IMPORTED_MODULE_0__.parse),\n/* harmony export */   toJSON: () => (/* reexport safe */ multiformats_link__WEBPACK_IMPORTED_MODULE_0__.toJSON)\n/* harmony export */ });\n/* harmony import */ var multiformats_link__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/link */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/link.js\");\n/* harmony import */ var multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/bases/base32 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/bases/base58.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9saW5rLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaUM7QUFDaUI7QUFDRyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9zcmMvbGluay5qcz8yNGNlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJ211bHRpZm9ybWF0cy9saW5rJ1xuZXhwb3J0IHsgYmFzZTMyIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2UzMidcbmV4cG9ydCB7IGJhc2U1OGJ0YyB9IGZyb20gJ211bHRpZm9ybWF0cy9iYXNlcy9iYXNlNTgnXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/link.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/message.js":
/*!**************************************************!*\
  !*** ./node_modules/@ucanto/core/src/message.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MessageSchema: () => (/* binding */ MessageSchema),\n/* harmony export */   build: () => (/* binding */ build),\n/* harmony export */   view: () => (/* binding */ view)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _dag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dag.js */ \"(ssr)/./node_modules/@ucanto/core/src/dag.js\");\n/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib.js */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _receipt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./receipt.js */ \"(ssr)/./node_modules/@ucanto/core/src/receipt.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema.js\");\n\n\n\n\n\n\nconst MessageSchema = _schema_js__WEBPACK_IMPORTED_MODULE_4__.variant({\n  'ucanto/message@7.0.0': _schema_js__WEBPACK_IMPORTED_MODULE_4__.struct({\n    execute: _schema_js__WEBPACK_IMPORTED_MODULE_4__.link().array().optional(),\n    delegate: _schema_js__WEBPACK_IMPORTED_MODULE_4__.dictionary({\n      key: _schema_js__WEBPACK_IMPORTED_MODULE_4__.string(),\n      value: /** @type {API.Reader<API.Link<API.ReceiptModel>>} */ (\n        _schema_js__WEBPACK_IMPORTED_MODULE_4__.link()\n      ),\n    })\n      .array()\n      .optional(),\n  }),\n})\n\n/**\n * @template {API.Tuple<API.IssuedInvocation>} I\n * @template {API.Tuple<API.Receipt>} R\n * @param {object} source\n * @param {I} [source.invocations]\n * @param {R} [source.receipts]\n * @returns {Promise<API.AgentMessage<{ In: API.InferInvocations<I>, Out: R }>>}\n */\nconst build = ({ invocations, receipts }) =>\n  new MessageBuilder({ invocations, receipts }).buildIPLDView()\n\n/**\n * @template [E=never]\n * @param {object} source\n * @param {API.Link} source.root\n * @param {DAG.BlockStore} source.store\n * @param {E} [fallback]\n * @returns {API.AgentMessage|E}\n */\nconst view = ({ root, store }, fallback) => {\n  const block = _dag_js__WEBPACK_IMPORTED_MODULE_1__.get(root, store, null)\n  if (block === null) {\n    return fallback !== undefined ? fallback : _dag_js__WEBPACK_IMPORTED_MODULE_1__.notFound(root)\n  }\n  const data = _dag_js__WEBPACK_IMPORTED_MODULE_1__.CBOR.decode(block.bytes)\n  const [branch, value] = MessageSchema.match(data, fallback)\n  switch (branch) {\n    case 'ucanto/message@7.0.0':\n      return new Message({ root: { ...block, data }, store })\n    default:\n      return value\n  }\n}\n\n/**\n * @template {API.Tuple<API.IssuedInvocation>} I\n * @template {API.Tuple<API.Receipt>} R\n * @implements {API.AgentMessageBuilder<{In: API.InferInvocations<I>, Out: R }>}\n *\n */\nclass MessageBuilder {\n  /**\n   * @param {object} source\n   * @param {I} [source.invocations]\n   * @param {R} [source.receipts]\n   */\n  constructor({ invocations, receipts }) {\n    this.invocations = invocations\n    this.receipts = receipts\n  }\n  /**\n   *\n   * @param {API.BuildOptions} [options]\n   * @returns {Promise<Message<{ In: API.InferInvocations<I>, Out: R }>>}\n   */\n  async buildIPLDView(options) {\n    const store = new Map()\n\n    const { invocations, ...executeField } = await writeInvocations(\n      this.invocations || [],\n      store\n    )\n\n    const { receipts, ...receiptsField } = await writeReceipts(\n      this.receipts || [],\n      store\n    )\n\n    const root = await _dag_js__WEBPACK_IMPORTED_MODULE_1__.writeInto(\n      /** @type {API.AgentMessageModel<{ In: API.InferInvocations<I>, Out: R }>} */\n      ({\n        'ucanto/message@7.0.0': {\n          ...executeField,\n          ...receiptsField,\n        },\n      }),\n      store,\n      options\n    )\n\n    return new Message({ root, store }, { receipts, invocations })\n  }\n}\n\n/**\n *\n * @param {API.IssuedInvocation[]} run\n * @param {Map<string, API.Block>} store\n */\nconst writeInvocations = async (run, store) => {\n  const invocations = []\n  const execute = []\n  for (const invocation of run) {\n    const view = await invocation.buildIPLDView()\n    execute.push(view.link())\n    invocations.push(view)\n    for (const block of view.iterateIPLDBlocks()) {\n      store.set(`${block.cid}`, block)\n    }\n  }\n\n  return { invocations, ...(execute.length > 0 ? { execute } : {}) }\n}\n\n/**\n * @param {API.Receipt[]} source\n * @param {Map<string, API.Block>} store\n */\nconst writeReceipts = async (source, store) => {\n  if (source.length === 0) {\n    return {}\n  }\n\n  const receipts = new Map()\n  /** @type {Record<API.ToString<API.ReceiptModel['ocm']['ran']>, API.Link<API.ReceiptModel>>} */\n  const report = {}\n\n  for (const [n, receipt] of source.entries()) {\n    const view = await receipt.buildIPLDView()\n    for (const block of view.iterateIPLDBlocks()) {\n      store.set(`${block.cid}`, block)\n    }\n\n    const key = `${view.ran.link()}`\n    if (!(key in report)) {\n      report[key] = view.root.cid\n      receipts.set(key, view)\n    } else {\n      // In theory we could have gotten the same invocation twice and both\n      // should get same receipt. In legacy code we send tuple of results\n      // as opposed to a map keyed by invocation to keep old clients working\n      // we just stick the receipt in the map with a unique key so that when\n      // legacy encoder maps entries to array it will get both receipts in\n      // the right order.\n      receipts.set(`${key}@${n}`, view)\n    }\n  }\n\n  return { receipts, report }\n}\n\n/**\n * @template {{ In: API.Invocation[], Out: API.Receipt[] }} T\n * @implements {API.AgentMessage<T>}\n */\nclass Message {\n  /**\n   * @param {object} source\n   * @param {Required<API.Block<API.AgentMessageModel<T>>>} source.root\n   * @param {DAG.BlockStore} source.store\n   * @param {object} build\n   * @param {API.Invocation[]} [build.invocations]\n   * @param {Map<string, API.Receipt>} [build.receipts]\n   */\n  constructor({ root, store }, { invocations, receipts } = {}) {\n    this.root = root\n    this.store = store\n    this._invocations = invocations\n    this._receipts = receipts\n  }\n  *iterateIPLDBlocks() {\n    for (const invocation of this.invocations) {\n      yield* invocation.iterateIPLDBlocks()\n    }\n\n    for (const receipt of this.receipts.values()) {\n      yield* receipt.iterateIPLDBlocks()\n    }\n\n    yield this.root\n  }\n  /**\n   * @template [E=never]\n   * @param {API.Link} link\n   * @param {E} [fallback]\n   * @returns {API.Receipt|E}\n   */\n  get(link, fallback) {\n    const receipts = this.root.data['ucanto/message@7.0.0'].report || {}\n    const receipt = receipts[`${link}`]\n    if (receipt) {\n      return _receipt_js__WEBPACK_IMPORTED_MODULE_3__.view({ root: receipt, blocks: this.store })\n    } else {\n      return fallback !== undefined\n        ? fallback\n        : (0,_lib_js__WEBPACK_IMPORTED_MODULE_2__.panic)(`Message does not include receipt for ${link}`)\n    }\n  }\n\n  get invocationLinks() {\n    return this.root.data['ucanto/message@7.0.0'].execute || []\n  }\n\n  get invocations() {\n    let invocations = this._invocations\n    if (!invocations) {\n      invocations = this.invocationLinks.map(link => {\n        return _lib_js__WEBPACK_IMPORTED_MODULE_2__.Invocation.view({ root: link, blocks: this.store })\n      })\n    }\n\n    return invocations\n  }\n\n  get receipts() {\n    let receipts = this._receipts\n    if (!receipts) {\n      receipts = new Map()\n      const report = this.root.data['ucanto/message@7.0.0'].report || {}\n      for (const [key, link] of Object.entries(report)) {\n        const receipt = _receipt_js__WEBPACK_IMPORTED_MODULE_3__.view({ root: link, blocks: this.store })\n        receipts.set(`${receipt.ran.link()}`, receipt)\n      }\n    }\n\n    return receipts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/receipt.js":
/*!**************************************************!*\
  !*** ./node_modules/@ucanto/core/src/receipt.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   issue: () => (/* binding */ issue),\n/* harmony export */   view: () => (/* binding */ view)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _invocation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./invocation.js */ \"(ssr)/./node_modules/@ucanto/core/src/invocation.js\");\n/* harmony import */ var _delegation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./delegation.js */ \"(ssr)/./node_modules/@ucanto/core/src/delegation.js\");\n/* harmony import */ var _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ipld/dag-ucan/signature */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n/* harmony import */ var _dag_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dag.js */ \"(ssr)/./node_modules/@ucanto/core/src/dag.js\");\n/* harmony import */ var _cbor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cbor.js */ \"(ssr)/./node_modules/@ucanto/core/src/cbor.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@ucanto/core/node_modules/multiformats/dist/src/hashes/sha2.js\");\n\n\n\n\n\n\n\n\n\n/**\n * @template {{}} Ok\n * @template {{}} Error\n * @template {API.Invocation} Ran\n * @template [E=never]\n * @param {object} input\n * @param {API.Link<API.ReceiptModel<Ok, Error, Ran>>} input.root\n * @param {DAG.BlockStore} input.blocks\n * @param {E} [fallback]\n */\nconst view = ({ root, blocks }, fallback) => {\n  const block = _dag_js__WEBPACK_IMPORTED_MODULE_5__.get(root, blocks, null)\n  if (block == null) {\n    return fallback !== undefined ? fallback : _dag_js__WEBPACK_IMPORTED_MODULE_5__.notFound(root)\n  }\n  const data = _cbor_js__WEBPACK_IMPORTED_MODULE_6__.decode(block.bytes)\n\n  return new Receipt({ root: { ...block, data }, store: blocks })\n}\n\n/**\n * Represents a UCAN invocation receipt view over some block store e.g. in\n * memory CAR. It incrementally decodes proofs, ran invocation etc. on access\n * which reduces overhead but potentially defers errors if references blocks\n * do not conform to the expected IPLD schema.\n *\n * @template {{}} Ok\n * @template {{}} Error\n * @template {API.Invocation} Ran\n * @template {API.SigAlg} [SigAlg=API.SigAlg]\n * @implements {API.Receipt<Ok, Error, Ran, SigAlg>}\n */\nclass Receipt {\n  /**\n   * @param {object} input\n   * @param {Required<API.Block<API.ReceiptModel<Ok, Error, Ran>>>} input.root\n   * @param {DAG.BlockStore} input.store\n   * @param {API.Meta} [input.meta]\n   * @param {Ran|ReturnType<Ran['link']>} [input.ran]\n   * @param {API.EffectsModel} [input.fx]\n   * @param {API.SignatureView<API.OutcomeModel<Ok, Error, Ran>, SigAlg>} [input.signature]\n   * @param {API.UCAN.Principal} [input.issuer]\n   * @param {API.Proof[]} [input.proofs]\n   */\n  constructor({ root, store, ran, issuer, signature, proofs }) {\n    this.store = store\n\n    this.root = root\n    this._ran = ran\n\n    // Field is materialized on demand when `fx` getter is first accessed.\n    /** @type {API.Effects|undefined} */\n    this._fx = undefined\n    this._signature = signature\n    this._proofs = proofs\n    this._issuer = issuer\n  }\n\n  /**\n   * @returns {Ran|ReturnType<Ran['link']>}\n   */\n  get ran() {\n    const ran = this._ran\n    if (!ran) {\n      const ran = /** @type {Ran} */ (\n        _invocation_js__WEBPACK_IMPORTED_MODULE_2__.view(\n          {\n            root: this.root.data.ocm.ran,\n            blocks: this.store,\n          },\n          this.root.data.ocm.ran\n        )\n      )\n      this._ran = ran\n      return ran\n    } else {\n      return ran\n    }\n  }\n  get proofs() {\n    const proofs = this._proofs\n    if (proofs) {\n      return proofs\n    } else {\n      const { store, root } = this\n      const { prf } = root.data.ocm\n      const proofs = []\n      if (prf) {\n        for (const link of prf) {\n          const proof = _delegation_js__WEBPACK_IMPORTED_MODULE_3__.view({ root: link, blocks: store }, link)\n          proofs.push(proof)\n        }\n      }\n\n      this._proofs = proofs\n      return proofs\n    }\n  }\n  link() {\n    return this.root.cid\n  }\n  get meta() {\n    return this.root.data.ocm.meta\n  }\n  get issuer() {\n    const issuer = this._issuer\n    if (issuer) {\n      return issuer\n    } else {\n      const { iss } = this.root.data.ocm\n      if (iss) {\n        const issuer = _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_1__.parse(iss)\n        this._issuer = issuer\n        return issuer\n      }\n    }\n  }\n\n  get out() {\n    return this.root.data.ocm.out\n  }\n\n  get fx() {\n    let fx = this._fx\n    if (!fx) {\n      const { store: blocks } = this\n      const { fork, join } = this.root.data.ocm.fx\n\n      fx = {\n        fork: fork.map(root => _invocation_js__WEBPACK_IMPORTED_MODULE_2__.view({ root, blocks }, root)),\n      }\n\n      if (join) {\n        fx.join = _invocation_js__WEBPACK_IMPORTED_MODULE_2__.view({ root: join, blocks }, join)\n      }\n\n      this._fx = fx\n    }\n    return fx\n  }\n\n  get signature() {\n    const signature = this._signature\n    if (signature) {\n      return signature\n    } else {\n      const signature =\n        /** @type {API.SignatureView<API.OutcomeModel<Ok, Error, Ran>, SigAlg>} */ (\n          _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_4__.view(this.root.data.sig)\n        )\n      this._signature = signature\n      return signature\n    }\n  }\n\n  /**\n   * @param {API.Crypto.Verifier} signingPrincipal\n   */\n  verifySignature(signingPrincipal) {\n    return this.signature.verify(\n      signingPrincipal,\n      _cbor_js__WEBPACK_IMPORTED_MODULE_6__.encode(this.root.data.ocm)\n    )\n  }\n\n  buildIPLDView() {\n    return this\n  }\n\n  *iterateIPLDBlocks() {\n    const { ran, fx, proofs, root } = this\n\n    yield* _dag_js__WEBPACK_IMPORTED_MODULE_5__.iterate(ran)\n\n    for (const fork of fx.fork) {\n      yield* _dag_js__WEBPACK_IMPORTED_MODULE_5__.iterate(fork)\n    }\n\n    if (fx.join) {\n      yield* _dag_js__WEBPACK_IMPORTED_MODULE_5__.iterate(fx.join)\n    }\n\n    for (const proof of proofs) {\n      yield* _dag_js__WEBPACK_IMPORTED_MODULE_5__.iterate(proof)\n    }\n\n    yield root\n  }\n}\n\n/**\n * Represents a receipt builder that can be used to create a receipt that later\n * can be encoded into desired IPLD codec and hasher. In the future we may make\n * this an incremental builder so you could set some fields later on.\n *\n * @template {{}} Ok\n * @template {{}} Error\n * @template {API.Invocation} Ran\n * @template {API.SigAlg} SigAlg\n * @implements {API.IPLDViewBuilder<API.Receipt<Ok, Error, Ran, SigAlg>>}\n */\nclass ReceptBuilder {\n  /**\n   * @param {object} options\n   * @param {API.Signer<API.DID, SigAlg>} options.issuer\n   * @param {Ran|ReturnType<Ran['link']>} options.ran\n   * @param {API.Result<Ok, Error>} options.result\n   * @param {API.Effects} [options.fx]\n   * @param {API.Proof[]} [options.proofs]\n   * @param {Record<string, unknown>} [options.meta]\n   */\n  constructor({ issuer, result, ran, fx = NOFX, proofs = [], meta = {} }) {\n    this.issuer = issuer\n    this.result = result\n    this.ran = ran\n    this.fx = fx\n    this.proofs = proofs\n    this.meta = meta\n  }\n  async buildIPLDView({ hasher = multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_7__.sha256, codec = _cbor_js__WEBPACK_IMPORTED_MODULE_6__ } = {}) {\n    const store = _dag_js__WEBPACK_IMPORTED_MODULE_5__.createStore()\n\n    // copy invocation blocks int\n    _dag_js__WEBPACK_IMPORTED_MODULE_5__.addEveryInto(_dag_js__WEBPACK_IMPORTED_MODULE_5__.iterate(this.ran), store)\n\n    // copy proof blocks into store\n    const prf = []\n    for (const proof of this.proofs) {\n      _dag_js__WEBPACK_IMPORTED_MODULE_5__.addEveryInto(_dag_js__WEBPACK_IMPORTED_MODULE_5__.iterate(proof), store)\n      prf.push(proof.link())\n    }\n\n    // copy blocks from the embedded fx\n    /** @type {{fork: API.Run[], join?:API.Run}}  */\n    const fx = { fork: [] }\n    for (const fork of this.fx.fork) {\n      _dag_js__WEBPACK_IMPORTED_MODULE_5__.addEveryInto(_dag_js__WEBPACK_IMPORTED_MODULE_5__.iterate(fork), store)\n      fx.fork.push(fork.link())\n    }\n\n    if (this.fx.join) {\n      _dag_js__WEBPACK_IMPORTED_MODULE_5__.addEveryInto(_dag_js__WEBPACK_IMPORTED_MODULE_5__.iterate(this.fx.join), store)\n      fx.join = this.fx.join.link()\n    }\n\n    /** @type {API.OutcomeModel<Ok, Error, Ran>} */\n    const outcome = {\n      ran: /** @type {ReturnType<Ran['link']>} */ (this.ran.link()),\n      out: this.result,\n      fx,\n      meta: this.meta,\n      iss: this.issuer.did(),\n      prf,\n    }\n\n    const signature = await this.issuer.sign(_cbor_js__WEBPACK_IMPORTED_MODULE_6__.encode(outcome))\n\n    /** @type {API.ReceiptModel<Ok, Error, Ran>} */\n    const model = {\n      ocm: outcome,\n      sig: signature,\n    }\n    const root = await _dag_js__WEBPACK_IMPORTED_MODULE_5__.writeInto(model, store, {\n      hasher,\n      codec,\n    })\n\n    return new Receipt({\n      root,\n      store,\n      signature,\n      proofs: this.proofs,\n      ran: this.ran,\n    })\n  }\n}\n\nconst NOFX = Object.freeze({ fork: Object.freeze([]) })\n\n/**\n * Creates a receipt in CBOR with sha256 hashed links.\n *\n * @template {{}} Ok\n * @template {{}} Error\n * @template {API.Invocation} Ran\n * @template {API.SigAlg} SigAlg\n * @param {object} options\n * @param {API.Signer<API.DID, SigAlg>} options.issuer\n * @param {Ran|ReturnType<Ran['link']>} options.ran\n * @param {API.Result<Ok, Error>} options.result\n * @param {API.Effects} [options.fx]\n * @param {API.Proof[]} [options.proofs]\n * @param {Record<string, unknown>} [options.meta]\n * @returns {Promise<API.Receipt<Ok, Error, Ran, SigAlg>>}\n */\nconst issue = options => new ReceptBuilder(options).buildIPLDView()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/receipt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/result.js":
/*!*************************************************!*\
  !*** ./node_modules/@ucanto/core/src/result.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Failure: () => (/* binding */ Failure),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   fail: () => (/* binding */ fail),\n/* harmony export */   ok: () => (/* binding */ ok),\n/* harmony export */   panic: () => (/* binding */ panic)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n\n\n/**\n * Creates the success result containing given `value`. Throws if\n * `null` or `undefined` passed to encourage use of units instead.\n *\n * @template {{}|string|boolean|number} T\n * @param {T} value\n * @returns {{ok: T, error?:undefined}}\n */\nconst ok = value => {\n  if (value == null) {\n    throw new TypeError(`ok(${value}) is not allowed, consider ok({}) instead`)\n  } else {\n    return { ok: value }\n  }\n}\n\n/**\n * Creates the failing result containing given `cause` of error.\n * Throws if `cause` is `null` or `undefined` to encourage\n * passing descriptive errors instead.\n *\n * @template {{}|string|boolean|number} X\n * @param {X} cause\n * @returns {{ok?:undefined, error:X}}\n */\nconst error = cause => {\n  if (cause == null) {\n    throw new TypeError(\n      `error(${cause}) is not allowed, consider passing an error instead`\n    )\n  } else {\n    return { error: cause }\n  }\n}\n\n/**\n * Crash the program with a given `message`. This function is\n * intended to be used in places where it is impossible to\n * recover from an error. It is similar to `panic` function in\n * Rust.\n *\n * @param {string} message\n */\nconst panic = message => {\n  throw new Failure(message)\n}\n/**\n * Creates the failing result containing an error with a given\n * `message`. Unlike `error` function it creates a very generic\n *  error with `message` & `stack` fields. The `error` function\n * is recommended over `fail` for all but the most basic use cases.\n *\n * @param {string} message\n * @returns {{error:API.Failure, ok?:undefined}}\n */\nconst fail = message => ({ error: new Failure(message) })\n\n/**\n * @implements {API.Failure}\n */\nclass Failure extends Error {\n  describe() {\n    return this.toString()\n  }\n  get message() {\n    return this.describe()\n  }\n  toJSON() {\n    const { name, message, stack } = this\n    return { name, message, stack }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9yZXN1bHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdDOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3QkFBd0I7QUFDeEMsV0FBVyxHQUFHO0FBQ2QsY0FBYztBQUNkO0FBQ087QUFDUDtBQUNBLDhCQUE4QixNQUFNLGdDQUFnQztBQUNwRSxJQUFJO0FBQ0osYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3QkFBd0I7QUFDeEMsV0FBVyxHQUFHO0FBQ2QsY0FBYztBQUNkO0FBQ087QUFDUDtBQUNBO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCO0FBQ0EsSUFBSTtBQUNKLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixjQUFjO0FBQ2Q7QUFDTywyQkFBMkIsNkJBQTZCOztBQUUvRDtBQUNBLGdCQUFnQjtBQUNoQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9zcmMvcmVzdWx0LmpzPzA3ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuXG4vKipcbiAqIENyZWF0ZXMgdGhlIHN1Y2Nlc3MgcmVzdWx0IGNvbnRhaW5pbmcgZ2l2ZW4gYHZhbHVlYC4gVGhyb3dzIGlmXG4gKiBgbnVsbGAgb3IgYHVuZGVmaW5lZGAgcGFzc2VkIHRvIGVuY291cmFnZSB1c2Ugb2YgdW5pdHMgaW5zdGVhZC5cbiAqXG4gKiBAdGVtcGxhdGUge3t9fHN0cmluZ3xib29sZWFufG51bWJlcn0gVFxuICogQHBhcmFtIHtUfSB2YWx1ZVxuICogQHJldHVybnMge3tvazogVCwgZXJyb3I/OnVuZGVmaW5lZH19XG4gKi9cbmV4cG9ydCBjb25zdCBvayA9IHZhbHVlID0+IHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBvaygke3ZhbHVlfSkgaXMgbm90IGFsbG93ZWQsIGNvbnNpZGVyIG9rKHt9KSBpbnN0ZWFkYClcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geyBvazogdmFsdWUgfVxuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlcyB0aGUgZmFpbGluZyByZXN1bHQgY29udGFpbmluZyBnaXZlbiBgY2F1c2VgIG9mIGVycm9yLlxuICogVGhyb3dzIGlmIGBjYXVzZWAgaXMgYG51bGxgIG9yIGB1bmRlZmluZWRgIHRvIGVuY291cmFnZVxuICogcGFzc2luZyBkZXNjcmlwdGl2ZSBlcnJvcnMgaW5zdGVhZC5cbiAqXG4gKiBAdGVtcGxhdGUge3t9fHN0cmluZ3xib29sZWFufG51bWJlcn0gWFxuICogQHBhcmFtIHtYfSBjYXVzZVxuICogQHJldHVybnMge3tvaz86dW5kZWZpbmVkLCBlcnJvcjpYfX1cbiAqL1xuZXhwb3J0IGNvbnN0IGVycm9yID0gY2F1c2UgPT4ge1xuICBpZiAoY2F1c2UgPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICBgZXJyb3IoJHtjYXVzZX0pIGlzIG5vdCBhbGxvd2VkLCBjb25zaWRlciBwYXNzaW5nIGFuIGVycm9yIGluc3RlYWRgXG4gICAgKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiB7IGVycm9yOiBjYXVzZSB9XG4gIH1cbn1cblxuLyoqXG4gKiBDcmFzaCB0aGUgcHJvZ3JhbSB3aXRoIGEgZ2l2ZW4gYG1lc3NhZ2VgLiBUaGlzIGZ1bmN0aW9uIGlzXG4gKiBpbnRlbmRlZCB0byBiZSB1c2VkIGluIHBsYWNlcyB3aGVyZSBpdCBpcyBpbXBvc3NpYmxlIHRvXG4gKiByZWNvdmVyIGZyb20gYW4gZXJyb3IuIEl0IGlzIHNpbWlsYXIgdG8gYHBhbmljYCBmdW5jdGlvbiBpblxuICogUnVzdC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVxuICovXG5leHBvcnQgY29uc3QgcGFuaWMgPSBtZXNzYWdlID0+IHtcbiAgdGhyb3cgbmV3IEZhaWx1cmUobWVzc2FnZSlcbn1cbi8qKlxuICogQ3JlYXRlcyB0aGUgZmFpbGluZyByZXN1bHQgY29udGFpbmluZyBhbiBlcnJvciB3aXRoIGEgZ2l2ZW5cbiAqIGBtZXNzYWdlYC4gVW5saWtlIGBlcnJvcmAgZnVuY3Rpb24gaXQgY3JlYXRlcyBhIHZlcnkgZ2VuZXJpY1xuICogIGVycm9yIHdpdGggYG1lc3NhZ2VgICYgYHN0YWNrYCBmaWVsZHMuIFRoZSBgZXJyb3JgIGZ1bmN0aW9uXG4gKiBpcyByZWNvbW1lbmRlZCBvdmVyIGBmYWlsYCBmb3IgYWxsIGJ1dCB0aGUgbW9zdCBiYXNpYyB1c2UgY2FzZXMuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VcbiAqIEByZXR1cm5zIHt7ZXJyb3I6QVBJLkZhaWx1cmUsIG9rPzp1bmRlZmluZWR9fVxuICovXG5leHBvcnQgY29uc3QgZmFpbCA9IG1lc3NhZ2UgPT4gKHsgZXJyb3I6IG5ldyBGYWlsdXJlKG1lc3NhZ2UpIH0pXG5cbi8qKlxuICogQGltcGxlbWVudHMge0FQSS5GYWlsdXJlfVxuICovXG5leHBvcnQgY2xhc3MgRmFpbHVyZSBleHRlbmRzIEVycm9yIHtcbiAgZGVzY3JpYmUoKSB7XG4gICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKVxuICB9XG4gIGdldCBtZXNzYWdlKCkge1xuICAgIHJldHVybiB0aGlzLmRlc2NyaWJlKClcbiAgfVxuICB0b0pTT04oKSB7XG4gICAgY29uc3QgeyBuYW1lLCBtZXNzYWdlLCBzdGFjayB9ID0gdGhpc1xuICAgIHJldHVybiB7IG5hbWUsIG1lc3NhZ2UsIHN0YWNrIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/result.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/schema.js":
/*!*************************************************!*\
  !*** ./node_modules/@ucanto/core/src/schema.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.API),\n/* harmony export */   Bytes: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.Bytes),\n/* harmony export */   DID: () => (/* reexport module object */ _schema_did_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   Link: () => (/* reexport module object */ _schema_link_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   Principal: () => (/* reexport module object */ _schema_principal_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   Text: () => (/* reexport module object */ _schema_text_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   URI: () => (/* reexport module object */ _schema_uri_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   and: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.and),\n/* harmony export */   array: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.array),\n/* harmony export */   boolean: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.boolean),\n/* harmony export */   bytes: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.bytes),\n/* harmony export */   dictionary: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.dictionary),\n/* harmony export */   did: () => (/* reexport safe */ _schema_did_js__WEBPACK_IMPORTED_MODULE_3__.match),\n/* harmony export */   didBytes: () => (/* reexport safe */ _schema_did_js__WEBPACK_IMPORTED_MODULE_3__.matchBytes),\n/* harmony export */   endsWith: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.endsWith),\n/* harmony export */   \"enum\": () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__[\"enum\"]),\n/* harmony export */   error: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.error),\n/* harmony export */   float: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.float),\n/* harmony export */   greaterThan: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.greaterThan),\n/* harmony export */   integer: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.integer),\n/* harmony export */   intersection: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.intersection),\n/* harmony export */   lessThan: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.lessThan),\n/* harmony export */   link: () => (/* reexport safe */ _schema_link_js__WEBPACK_IMPORTED_MODULE_1__.match),\n/* harmony export */   literal: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.literal),\n/* harmony export */   memberError: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.memberError),\n/* harmony export */   never: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.never),\n/* harmony export */   nullable: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.nullable),\n/* harmony export */   number: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.number),\n/* harmony export */   ok: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.ok),\n/* harmony export */   optional: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.optional),\n/* harmony export */   or: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.or),\n/* harmony export */   principal: () => (/* reexport safe */ _schema_principal_js__WEBPACK_IMPORTED_MODULE_2__.match),\n/* harmony export */   refine: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.refine),\n/* harmony export */   startsWith: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.startsWith),\n/* harmony export */   string: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.string),\n/* harmony export */   struct: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.struct),\n/* harmony export */   text: () => (/* reexport safe */ _schema_text_js__WEBPACK_IMPORTED_MODULE_4__.match),\n/* harmony export */   toString: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.toString),\n/* harmony export */   tuple: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.tuple),\n/* harmony export */   typeError: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.typeError),\n/* harmony export */   uint64: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.uint64),\n/* harmony export */   union: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.union),\n/* harmony export */   unknown: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.unknown),\n/* harmony export */   uri: () => (/* reexport safe */ _schema_uri_js__WEBPACK_IMPORTED_MODULE_0__.match),\n/* harmony export */   variant: () => (/* reexport safe */ _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__.variant)\n/* harmony export */ });\n/* harmony import */ var _schema_uri_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schema/uri.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/uri.js\");\n/* harmony import */ var _schema_link_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schema/link.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/link.js\");\n/* harmony import */ var _schema_principal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema/principal.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/principal.js\");\n/* harmony import */ var _schema_did_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schema/did.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/did.js\");\n/* harmony import */ var _schema_text_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./schema/text.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/text.js\");\n/* harmony import */ var _schema_schema_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./schema/schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/schema.js\");\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQ0U7QUFDVTtBQUNaO0FBQ0U7QUFDTjtBQUNjO0FBQ1U7QUFDWTtBQUN4QjtBQUNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEuanM/ZDA1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyBVUkkgZnJvbSAnLi9zY2hlbWEvdXJpLmpzJ1xuZXhwb3J0ICogYXMgTGluayBmcm9tICcuL3NjaGVtYS9saW5rLmpzJ1xuZXhwb3J0ICogYXMgUHJpbmNpcGFsIGZyb20gJy4vc2NoZW1hL3ByaW5jaXBhbC5qcydcbmV4cG9ydCAqIGFzIERJRCBmcm9tICcuL3NjaGVtYS9kaWQuanMnXG5leHBvcnQgKiBhcyBUZXh0IGZyb20gJy4vc2NoZW1hL3RleHQuanMnXG5leHBvcnQgKiBmcm9tICcuL3NjaGVtYS9zY2hlbWEuanMnXG5leHBvcnQgeyBtYXRjaCBhcyBsaW5rIH0gZnJvbSAnLi9zY2hlbWEvbGluay5qcydcbmV4cG9ydCB7IG1hdGNoIGFzIHByaW5jaXBhbCB9IGZyb20gJy4vc2NoZW1hL3ByaW5jaXBhbC5qcydcbmV4cG9ydCB7IG1hdGNoIGFzIGRpZCwgbWF0Y2hCeXRlcyBhcyBkaWRCeXRlcyB9IGZyb20gJy4vc2NoZW1hL2RpZC5qcydcbmV4cG9ydCB7IG1hdGNoIGFzIHVyaSB9IGZyb20gJy4vc2NoZW1hL3VyaS5qcydcbmV4cG9ydCB7IG1hdGNoIGFzIHRleHQgfSBmcm9tICcuL3NjaGVtYS90ZXh0LmpzJ1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/schema/did.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ucanto/core/src/schema/did.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   did: () => (/* binding */ did),\n/* harmony export */   didBytes: () => (/* binding */ didBytes),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   fromBytes: () => (/* binding */ fromBytes),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   matchBytes: () => (/* binding */ matchBytes),\n/* harmony export */   read: () => (/* binding */ read),\n/* harmony export */   readBytes: () => (/* binding */ readBytes)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/schema.js\");\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n\n\n\n/**\n * @template {string} Method\n * @extends {Schema.API<API.DID<Method> & API.URI<\"did:\">, string, void|Method>}\n */\nclass DIDSchema extends _schema_js__WEBPACK_IMPORTED_MODULE_1__.API {\n  /**\n   * @param {string} source\n   * @param {void|Method} method\n   */\n  readWith(source, method) {\n    const prefix = method ? `did:${method}:` : `did:`\n    if (!source.startsWith(prefix)) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_1__.error(`Expected a ${prefix} but got \"${source}\" instead`)\n    } else {\n      return { ok: /** @type {API.DID<Method>} */ (source) }\n    }\n  }\n}\n\nconst schema = _schema_js__WEBPACK_IMPORTED_MODULE_1__.string().refine(new DIDSchema())\n\nconst did = () => schema\n/**\n *\n * @param {unknown} input\n */\nconst read = input => schema.read(input)\n\n/**\n * @template {string} Method\n * @param {{method?: Method}} options\n */\nconst match = (options = {}) =>\n  /** @type {Schema.Schema<API.DID<Method> & API.URI<\"did:\">>} */ (\n    _schema_js__WEBPACK_IMPORTED_MODULE_1__.string().refine(new DIDSchema(options.method))\n  )\n\n/**\n * Create a DID string from any input (or throw)\n * @param {unknown} input\n */\nconst from = input => match({}).from(input)\n\n/**\n * @template {string} Method\n * @extends {Schema.API<API.DID<Method> & API.URI<\"did:\">, unknown, void|Method>}\n */\nclass DIDBytesSchema extends _schema_js__WEBPACK_IMPORTED_MODULE_1__.API {\n  /**\n   * @param {unknown} source\n   * @param {void|Method} method\n   */\n  readWith(source, method) {\n    if (!(source instanceof Uint8Array)) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_1__.typeError({ expect: 'Uint8Array', actual: source })\n    }\n    let did\n    try {\n      did = _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_2__.decode(source).did()\n    } catch (err) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_1__.error(`Unable to parse bytes as did: ${err}`)\n    }\n    const prefix = method ? `did:${method}:` : `did:`\n    if (!did.startsWith(prefix)) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_1__.error(`Expected a ${prefix} but got \"${did}\" instead`)\n    } else {\n      return { ok: /** @type {API.DID<Method>} */ (did) }\n    } \n  }\n}\n\nconst schemaBytes = new DIDBytesSchema()\n\n/**\n * @deprecated Use `Schema.principal(...)` instead.\n */\nconst didBytes = () => schemaBytes\n\n/**\n * @deprecated Use `Schema.principal(...)` instead.\n * @param {unknown} input\n */\nconst readBytes = input => schemaBytes.read(input)\n\n/**\n * @deprecated Use `Schema.principal(...)` instead.\n * @template {string} Method\n * @param {{method?: Method}} options\n */\nconst matchBytes = (options = {}) =>\n  /** @type {Schema.Schema<API.DID<Method> & API.URI<\"did:\">>} */ (\n    new DIDBytesSchema(options.method)\n  )\n\n/**\n * Create a DID string from any input (or throw)\n *\n * @deprecated Use `Schema.principal(...)` instead.\n * @param {unknown} input\n */\nconst fromBytes = input => matchBytes({}).from(input)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEvZGlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ0g7QUFDSTtBQUN6QztBQUNBLGNBQWMsUUFBUTtBQUN0QixhQUFhO0FBQ2I7QUFDQSx3QkFBd0IsMkNBQVU7QUFDbEM7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQSxtQ0FBbUMsT0FBTztBQUMxQztBQUNBLGFBQWEsNkNBQVksZUFBZSxRQUFRLFdBQVcsT0FBTztBQUNsRSxNQUFNO0FBQ04sZUFBZSxlQUFlLGlCQUFpQjtBQUMvQztBQUNBO0FBQ0E7O0FBRUEsZUFBZSw4Q0FBYTs7QUFFckI7QUFDUDtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ087O0FBRVA7QUFDQSxjQUFjLFFBQVE7QUFDdEIsWUFBWSxrQkFBa0I7QUFDOUI7QUFDTywyQkFBMkI7QUFDbEMsYUFBYSxrREFBa0Q7QUFDL0QsSUFBSSw4Q0FBYTtBQUNqQjs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ08sOEJBQThCOztBQUVyQztBQUNBLGNBQWMsUUFBUTtBQUN0QixhQUFhO0FBQ2I7QUFDQSw2QkFBNkIsMkNBQVU7QUFDdkM7QUFDQSxhQUFhLFNBQVM7QUFDdEIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaURBQWdCLEdBQUcsc0NBQXNDO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLFlBQVksc0RBQVU7QUFDdEIsTUFBTTtBQUNOLGFBQWEsNkNBQVksa0NBQWtDLElBQUk7QUFDL0Q7QUFDQSxtQ0FBbUMsT0FBTztBQUMxQztBQUNBLGFBQWEsNkNBQVksZUFBZSxRQUFRLFdBQVcsSUFBSTtBQUMvRCxNQUFNO0FBQ04sZUFBZSxlQUFlLGlCQUFpQjtBQUMvQztBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNPOztBQUVQO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsWUFBWSxrQkFBa0I7QUFDOUI7QUFDTyxnQ0FBZ0M7QUFDdkMsYUFBYSxrREFBa0Q7QUFDL0Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNPLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9zcmMvc2NoZW1hL2RpZC5qcz9lOTg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcbmltcG9ydCAqIGFzIFNjaGVtYSBmcm9tICcuL3NjaGVtYS5qcydcbmltcG9ydCAqIGFzIERJRCBmcm9tICdAaXBsZC9kYWctdWNhbi9kaWQnXG4vKipcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBNZXRob2RcbiAqIEBleHRlbmRzIHtTY2hlbWEuQVBJPEFQSS5ESUQ8TWV0aG9kPiAmIEFQSS5VUkk8XCJkaWQ6XCI+LCBzdHJpbmcsIHZvaWR8TWV0aG9kPn1cbiAqL1xuY2xhc3MgRElEU2NoZW1hIGV4dGVuZHMgU2NoZW1hLkFQSSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlXG4gICAqIEBwYXJhbSB7dm9pZHxNZXRob2R9IG1ldGhvZFxuICAgKi9cbiAgcmVhZFdpdGgoc291cmNlLCBtZXRob2QpIHtcbiAgICBjb25zdCBwcmVmaXggPSBtZXRob2QgPyBgZGlkOiR7bWV0aG9kfTpgIDogYGRpZDpgXG4gICAgaWYgKCFzb3VyY2Uuc3RhcnRzV2l0aChwcmVmaXgpKSB7XG4gICAgICByZXR1cm4gU2NoZW1hLmVycm9yKGBFeHBlY3RlZCBhICR7cHJlZml4fSBidXQgZ290IFwiJHtzb3VyY2V9XCIgaW5zdGVhZGApXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB7IG9rOiAvKiogQHR5cGUge0FQSS5ESUQ8TWV0aG9kPn0gKi8gKHNvdXJjZSkgfVxuICAgIH1cbiAgfVxufVxuXG5jb25zdCBzY2hlbWEgPSBTY2hlbWEuc3RyaW5nKCkucmVmaW5lKG5ldyBESURTY2hlbWEoKSlcblxuZXhwb3J0IGNvbnN0IGRpZCA9ICgpID0+IHNjaGVtYVxuLyoqXG4gKlxuICogQHBhcmFtIHt1bmtub3dufSBpbnB1dFxuICovXG5leHBvcnQgY29uc3QgcmVhZCA9IGlucHV0ID0+IHNjaGVtYS5yZWFkKGlucHV0KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBNZXRob2RcbiAqIEBwYXJhbSB7e21ldGhvZD86IE1ldGhvZH19IG9wdGlvbnNcbiAqL1xuZXhwb3J0IGNvbnN0IG1hdGNoID0gKG9wdGlvbnMgPSB7fSkgPT5cbiAgLyoqIEB0eXBlIHtTY2hlbWEuU2NoZW1hPEFQSS5ESUQ8TWV0aG9kPiAmIEFQSS5VUkk8XCJkaWQ6XCI+Pn0gKi8gKFxuICAgIFNjaGVtYS5zdHJpbmcoKS5yZWZpbmUobmV3IERJRFNjaGVtYShvcHRpb25zLm1ldGhvZCkpXG4gIClcblxuLyoqXG4gKiBDcmVhdGUgYSBESUQgc3RyaW5nIGZyb20gYW55IGlucHV0IChvciB0aHJvdylcbiAqIEBwYXJhbSB7dW5rbm93bn0gaW5wdXRcbiAqL1xuZXhwb3J0IGNvbnN0IGZyb20gPSBpbnB1dCA9PiBtYXRjaCh7fSkuZnJvbShpbnB1dClcblxuLyoqXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gTWV0aG9kXG4gKiBAZXh0ZW5kcyB7U2NoZW1hLkFQSTxBUEkuRElEPE1ldGhvZD4gJiBBUEkuVVJJPFwiZGlkOlwiPiwgdW5rbm93biwgdm9pZHxNZXRob2Q+fVxuICovXG5jbGFzcyBESURCeXRlc1NjaGVtYSBleHRlbmRzIFNjaGVtYS5BUEkge1xuICAvKipcbiAgICogQHBhcmFtIHt1bmtub3dufSBzb3VyY2VcbiAgICogQHBhcmFtIHt2b2lkfE1ldGhvZH0gbWV0aG9kXG4gICAqL1xuICByZWFkV2l0aChzb3VyY2UsIG1ldGhvZCkge1xuICAgIGlmICghKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICByZXR1cm4gU2NoZW1hLnR5cGVFcnJvcih7IGV4cGVjdDogJ1VpbnQ4QXJyYXknLCBhY3R1YWw6IHNvdXJjZSB9KVxuICAgIH1cbiAgICBsZXQgZGlkXG4gICAgdHJ5IHtcbiAgICAgIGRpZCA9IERJRC5kZWNvZGUoc291cmNlKS5kaWQoKVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIFNjaGVtYS5lcnJvcihgVW5hYmxlIHRvIHBhcnNlIGJ5dGVzIGFzIGRpZDogJHtlcnJ9YClcbiAgICB9XG4gICAgY29uc3QgcHJlZml4ID0gbWV0aG9kID8gYGRpZDoke21ldGhvZH06YCA6IGBkaWQ6YFxuICAgIGlmICghZGlkLnN0YXJ0c1dpdGgocHJlZml4KSkge1xuICAgICAgcmV0dXJuIFNjaGVtYS5lcnJvcihgRXhwZWN0ZWQgYSAke3ByZWZpeH0gYnV0IGdvdCBcIiR7ZGlkfVwiIGluc3RlYWRgKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4geyBvazogLyoqIEB0eXBlIHtBUEkuRElEPE1ldGhvZD59ICovIChkaWQpIH1cbiAgICB9IFxuICB9XG59XG5cbmNvbnN0IHNjaGVtYUJ5dGVzID0gbmV3IERJREJ5dGVzU2NoZW1hKClcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYFNjaGVtYS5wcmluY2lwYWwoLi4uKWAgaW5zdGVhZC5cbiAqL1xuZXhwb3J0IGNvbnN0IGRpZEJ5dGVzID0gKCkgPT4gc2NoZW1hQnl0ZXNcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYFNjaGVtYS5wcmluY2lwYWwoLi4uKWAgaW5zdGVhZC5cbiAqIEBwYXJhbSB7dW5rbm93bn0gaW5wdXRcbiAqL1xuZXhwb3J0IGNvbnN0IHJlYWRCeXRlcyA9IGlucHV0ID0+IHNjaGVtYUJ5dGVzLnJlYWQoaW5wdXQpXG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBTY2hlbWEucHJpbmNpcGFsKC4uLilgIGluc3RlYWQuXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gTWV0aG9kXG4gKiBAcGFyYW0ge3ttZXRob2Q/OiBNZXRob2R9fSBvcHRpb25zXG4gKi9cbmV4cG9ydCBjb25zdCBtYXRjaEJ5dGVzID0gKG9wdGlvbnMgPSB7fSkgPT5cbiAgLyoqIEB0eXBlIHtTY2hlbWEuU2NoZW1hPEFQSS5ESUQ8TWV0aG9kPiAmIEFQSS5VUkk8XCJkaWQ6XCI+Pn0gKi8gKFxuICAgIG5ldyBESURCeXRlc1NjaGVtYShvcHRpb25zLm1ldGhvZClcbiAgKVxuXG4vKipcbiAqIENyZWF0ZSBhIERJRCBzdHJpbmcgZnJvbSBhbnkgaW5wdXQgKG9yIHRocm93KVxuICpcbiAqIEBkZXByZWNhdGVkIFVzZSBgU2NoZW1hLnByaW5jaXBhbCguLi4pYCBpbnN0ZWFkLlxuICogQHBhcmFtIHt1bmtub3dufSBpbnB1dFxuICovXG5leHBvcnQgY29uc3QgZnJvbUJ5dGVzID0gaW5wdXQgPT4gbWF0Y2hCeXRlcyh7fSkuZnJvbShpbnB1dClcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/schema/did.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/schema/link.js":
/*!******************************************************!*\
  !*** ./node_modules/@ucanto/core/src/schema/link.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_1__.create),\n/* harmony export */   createLegacy: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_1__.createLegacy),\n/* harmony export */   isLink: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_1__.isLink),\n/* harmony export */   link: () => (/* binding */ link),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   optional: () => (/* binding */ optional),\n/* harmony export */   parse: () => (/* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_1__.parse),\n/* harmony export */   read: () => (/* binding */ read),\n/* harmony export */   schema: () => (/* binding */ schema)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../link.js */ \"(ssr)/./node_modules/@ucanto/core/src/link.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/schema.js\");\n\n\n\n\n\n\n/**\n * @template {number} [Code=number]\n * @template {number} [Alg=number]\n * @template {1|0} [Version=0|1]\n * @typedef {{\n * code?:Code,\n * version?:Version\n * multihash?: {code?: Alg, digest?: Uint8Array}\n * }} Settings\n */\n\n/**\n * @template {number} Code\n * @template {number} Alg\n * @template {1|0} Version\n * @extends {Schema.API<API.Link<unknown, Code, Alg, Version>, unknown, Settings<Code, Alg, Version>>}\n */\nclass LinkSchema extends _schema_js__WEBPACK_IMPORTED_MODULE_2__.API {\n  /**\n   *\n   * @param {unknown} cid\n   * @param {Settings<Code, Alg, Version>} settings\n   * @returns {Schema.ReadResult<API.Link<unknown, Code, Alg, Version>>}\n   */\n  readWith(cid, { code, multihash = {}, version }) {\n    if (cid == null) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_2__.error(`Expected link but got ${cid} instead`)\n    } else {\n      if (!(0,_link_js__WEBPACK_IMPORTED_MODULE_1__.isLink)(cid)) {\n        return _schema_js__WEBPACK_IMPORTED_MODULE_2__.error(`Expected link to be a CID instead of ${cid}`)\n      } else {\n        if (code != null && cid.code !== code) {\n          return _schema_js__WEBPACK_IMPORTED_MODULE_2__.error(\n            `Expected link to be CID with 0x${code.toString(16)} codec`\n          )\n        }\n\n        if (multihash.code != null && cid.multihash.code !== multihash.code)\n          return _schema_js__WEBPACK_IMPORTED_MODULE_2__.error(\n            `Expected link to be CID with 0x${multihash.code.toString(\n              16\n            )} hashing algorithm`\n          )\n\n        if (version != null && cid.version !== version) {\n          return _schema_js__WEBPACK_IMPORTED_MODULE_2__.error(\n            `Expected link to be CID version ${version} instead of ${cid.version}`\n          )\n        }\n\n        const [expectDigest, actualDigest] =\n          multihash.digest != null\n            ? [\n                _link_js__WEBPACK_IMPORTED_MODULE_1__.base32.baseEncode(multihash.digest),\n                _link_js__WEBPACK_IMPORTED_MODULE_1__.base32.baseEncode(cid.multihash.digest),\n              ]\n            : ['', '']\n\n        if (expectDigest !== actualDigest) {\n          return _schema_js__WEBPACK_IMPORTED_MODULE_2__.error(\n            `Expected link with \"${expectDigest}\" hash digest instead of \"${actualDigest}\"`\n          )\n        }\n\n        return {\n          ok: /** @type {API.Link<unknown, any, any, any>} */ (cid),\n        }\n      }\n    }\n  }\n}\n\n/** @type {Schema.Schema<API.Link<unknown, number, number, 0|1>, unknown>}  */\nconst schema = new LinkSchema({})\n\nconst link = () => schema\n\n/**\n * @template {number} Code\n * @template {number} Alg\n * @template {1|0} Version\n * @param {Settings<Code, Alg, Version>} options\n * @returns {Schema.Schema<API.Link<unknown, Code, Alg, Version>>}\n */\nconst match = (options = {}) => new LinkSchema(options)\n\n/**\n * @param {unknown} input\n */\nconst read = input => schema.read(input)\n\nconst optional = () => schema.optional()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEvbGluay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDZ0M7QUFDbkM7O0FBRVM7O0FBRTlDO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLEtBQUs7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLE1BQU07QUFDTjs7QUFFQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxLQUFLO0FBQ25CLGFBQWE7QUFDYjtBQUNBLHlCQUF5QiwyQ0FBVTtBQUNuQztBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCLGFBQWEsOEJBQThCO0FBQzNDLGVBQWU7QUFDZjtBQUNBLGtCQUFrQixvQkFBb0IsV0FBVztBQUNqRDtBQUNBLGFBQWEsNkNBQVksMEJBQTBCLEtBQUs7QUFDeEQsTUFBTTtBQUNOLFdBQVcsZ0RBQU07QUFDakIsZUFBZSw2Q0FBWSx5Q0FBeUMsSUFBSTtBQUN4RSxRQUFRO0FBQ1I7QUFDQSxpQkFBaUIsNkNBQVk7QUFDN0IsOENBQThDLG1CQUFtQjtBQUNqRTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLDZDQUFZO0FBQzdCLDhDQUE4QztBQUM5QztBQUNBLGVBQWU7QUFDZjs7QUFFQTtBQUNBLGlCQUFpQiw2Q0FBWTtBQUM3QiwrQ0FBK0MsU0FBUyxhQUFhLFlBQVk7QUFDakY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNENBQU07QUFDdEIsZ0JBQWdCLDRDQUFNO0FBQ3RCO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsNkNBQVk7QUFDN0IsbUNBQW1DLGFBQWEsNEJBQTRCLGFBQWE7QUFDekY7QUFDQTs7QUFFQTtBQUNBLHlCQUF5QixrQ0FBa0M7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXLGlFQUFpRTtBQUNyRSxnQ0FBZ0M7O0FBRWhDOztBQUVQO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLEtBQUs7QUFDbkIsV0FBVyw4QkFBOEI7QUFDekMsYUFBYTtBQUNiO0FBQ08sMkJBQTJCOztBQUVsQztBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNPOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEvbGluay5qcz9mZGU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcbmltcG9ydCB7IGNyZWF0ZSwgY3JlYXRlTGVnYWN5LCBpc0xpbmssIHBhcnNlLCBiYXNlMzIgfSBmcm9tICcuLi9saW5rLmpzJ1xuaW1wb3J0ICogYXMgU2NoZW1hIGZyb20gJy4vc2NoZW1hLmpzJ1xuXG5leHBvcnQgeyBjcmVhdGUsIGNyZWF0ZUxlZ2FjeSwgaXNMaW5rLCBwYXJzZSB9XG5cbi8qKlxuICogQHRlbXBsYXRlIHtudW1iZXJ9IFtDb2RlPW51bWJlcl1cbiAqIEB0ZW1wbGF0ZSB7bnVtYmVyfSBbQWxnPW51bWJlcl1cbiAqIEB0ZW1wbGF0ZSB7MXwwfSBbVmVyc2lvbj0wfDFdXG4gKiBAdHlwZWRlZiB7e1xuICogY29kZT86Q29kZSxcbiAqIHZlcnNpb24/OlZlcnNpb25cbiAqIG11bHRpaGFzaD86IHtjb2RlPzogQWxnLCBkaWdlc3Q/OiBVaW50OEFycmF5fVxuICogfX0gU2V0dGluZ3NcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7bnVtYmVyfSBDb2RlXG4gKiBAdGVtcGxhdGUge251bWJlcn0gQWxnXG4gKiBAdGVtcGxhdGUgezF8MH0gVmVyc2lvblxuICogQGV4dGVuZHMge1NjaGVtYS5BUEk8QVBJLkxpbms8dW5rbm93biwgQ29kZSwgQWxnLCBWZXJzaW9uPiwgdW5rbm93biwgU2V0dGluZ3M8Q29kZSwgQWxnLCBWZXJzaW9uPj59XG4gKi9cbmNsYXNzIExpbmtTY2hlbWEgZXh0ZW5kcyBTY2hlbWEuQVBJIHtcbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7dW5rbm93bn0gY2lkXG4gICAqIEBwYXJhbSB7U2V0dGluZ3M8Q29kZSwgQWxnLCBWZXJzaW9uPn0gc2V0dGluZ3NcbiAgICogQHJldHVybnMge1NjaGVtYS5SZWFkUmVzdWx0PEFQSS5MaW5rPHVua25vd24sIENvZGUsIEFsZywgVmVyc2lvbj4+fVxuICAgKi9cbiAgcmVhZFdpdGgoY2lkLCB7IGNvZGUsIG11bHRpaGFzaCA9IHt9LCB2ZXJzaW9uIH0pIHtcbiAgICBpZiAoY2lkID09IG51bGwpIHtcbiAgICAgIHJldHVybiBTY2hlbWEuZXJyb3IoYEV4cGVjdGVkIGxpbmsgYnV0IGdvdCAke2NpZH0gaW5zdGVhZGApXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghaXNMaW5rKGNpZCkpIHtcbiAgICAgICAgcmV0dXJuIFNjaGVtYS5lcnJvcihgRXhwZWN0ZWQgbGluayB0byBiZSBhIENJRCBpbnN0ZWFkIG9mICR7Y2lkfWApXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoY29kZSAhPSBudWxsICYmIGNpZC5jb2RlICE9PSBjb2RlKSB7XG4gICAgICAgICAgcmV0dXJuIFNjaGVtYS5lcnJvcihcbiAgICAgICAgICAgIGBFeHBlY3RlZCBsaW5rIHRvIGJlIENJRCB3aXRoIDB4JHtjb2RlLnRvU3RyaW5nKDE2KX0gY29kZWNgXG4gICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG11bHRpaGFzaC5jb2RlICE9IG51bGwgJiYgY2lkLm11bHRpaGFzaC5jb2RlICE9PSBtdWx0aWhhc2guY29kZSlcbiAgICAgICAgICByZXR1cm4gU2NoZW1hLmVycm9yKFxuICAgICAgICAgICAgYEV4cGVjdGVkIGxpbmsgdG8gYmUgQ0lEIHdpdGggMHgke211bHRpaGFzaC5jb2RlLnRvU3RyaW5nKFxuICAgICAgICAgICAgICAxNlxuICAgICAgICAgICAgKX0gaGFzaGluZyBhbGdvcml0aG1gXG4gICAgICAgICAgKVxuXG4gICAgICAgIGlmICh2ZXJzaW9uICE9IG51bGwgJiYgY2lkLnZlcnNpb24gIT09IHZlcnNpb24pIHtcbiAgICAgICAgICByZXR1cm4gU2NoZW1hLmVycm9yKFxuICAgICAgICAgICAgYEV4cGVjdGVkIGxpbmsgdG8gYmUgQ0lEIHZlcnNpb24gJHt2ZXJzaW9ufSBpbnN0ZWFkIG9mICR7Y2lkLnZlcnNpb259YFxuICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IFtleHBlY3REaWdlc3QsIGFjdHVhbERpZ2VzdF0gPVxuICAgICAgICAgIG11bHRpaGFzaC5kaWdlc3QgIT0gbnVsbFxuICAgICAgICAgICAgPyBbXG4gICAgICAgICAgICAgICAgYmFzZTMyLmJhc2VFbmNvZGUobXVsdGloYXNoLmRpZ2VzdCksXG4gICAgICAgICAgICAgICAgYmFzZTMyLmJhc2VFbmNvZGUoY2lkLm11bHRpaGFzaC5kaWdlc3QpLFxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICA6IFsnJywgJyddXG5cbiAgICAgICAgaWYgKGV4cGVjdERpZ2VzdCAhPT0gYWN0dWFsRGlnZXN0KSB7XG4gICAgICAgICAgcmV0dXJuIFNjaGVtYS5lcnJvcihcbiAgICAgICAgICAgIGBFeHBlY3RlZCBsaW5rIHdpdGggXCIke2V4cGVjdERpZ2VzdH1cIiBoYXNoIGRpZ2VzdCBpbnN0ZWFkIG9mIFwiJHthY3R1YWxEaWdlc3R9XCJgXG4gICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBvazogLyoqIEB0eXBlIHtBUEkuTGluazx1bmtub3duLCBhbnksIGFueSwgYW55Pn0gKi8gKGNpZCksXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqIEB0eXBlIHtTY2hlbWEuU2NoZW1hPEFQSS5MaW5rPHVua25vd24sIG51bWJlciwgbnVtYmVyLCAwfDE+LCB1bmtub3duPn0gICovXG5leHBvcnQgY29uc3Qgc2NoZW1hID0gbmV3IExpbmtTY2hlbWEoe30pXG5cbmV4cG9ydCBjb25zdCBsaW5rID0gKCkgPT4gc2NoZW1hXG5cbi8qKlxuICogQHRlbXBsYXRlIHtudW1iZXJ9IENvZGVcbiAqIEB0ZW1wbGF0ZSB7bnVtYmVyfSBBbGdcbiAqIEB0ZW1wbGF0ZSB7MXwwfSBWZXJzaW9uXG4gKiBAcGFyYW0ge1NldHRpbmdzPENvZGUsIEFsZywgVmVyc2lvbj59IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtTY2hlbWEuU2NoZW1hPEFQSS5MaW5rPHVua25vd24sIENvZGUsIEFsZywgVmVyc2lvbj4+fVxuICovXG5leHBvcnQgY29uc3QgbWF0Y2ggPSAob3B0aW9ucyA9IHt9KSA9PiBuZXcgTGlua1NjaGVtYShvcHRpb25zKVxuXG4vKipcbiAqIEBwYXJhbSB7dW5rbm93bn0gaW5wdXRcbiAqL1xuZXhwb3J0IGNvbnN0IHJlYWQgPSBpbnB1dCA9PiBzY2hlbWEucmVhZChpbnB1dClcblxuZXhwb3J0IGNvbnN0IG9wdGlvbmFsID0gKCkgPT4gc2NoZW1hLm9wdGlvbmFsKClcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/schema/link.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/schema/principal.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ucanto/core/src/schema/principal.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   principal: () => (/* binding */ principal),\n/* harmony export */   read: () => (/* binding */ read)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/schema.js\");\n\n\n\n\n/**\n * @template {string} Method\n * @extends {Schema.API<API.PrincipalView<API.DID<Method> & API.URI<\"did:\">>, unknown, void|Method>}\n */\nclass PrincipalSchema extends _schema_js__WEBPACK_IMPORTED_MODULE_2__.API {\n  /**\n   * @param {unknown} source\n   * @param {void|Method} method\n   */\n  readWith(source, method) {\n    if (!(source instanceof Uint8Array)) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_2__.typeError({ expect: 'Uint8Array', actual: source })\n    }\n    let principal\n    try {\n      principal = _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_1__.decode(source)\n    } catch (err) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_2__.error(`Unable to decode bytes as DID: ${err}`)\n    }\n    const prefix = method ? `did:${method}:` : `did:`\n    if (!principal.did().startsWith(prefix)) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_2__.error(\n        `Expected a ${prefix} but got \"${principal.did()}\" instead`\n      )\n    }\n    return { ok: /** @type {API.PrincipalView<API.DID<Method>>} */ (principal) }\n  }\n}\n\nconst schema = new PrincipalSchema()\n\n/** A schema that reads byte encoded DIDs. */\nconst principal = () => schema\n\n/** @param {unknown} input */\nconst read = input => schema.read(input)\n\n/**\n * Matches a byte encoded DID.\n *\n * @template {string} Method\n * @param {{ method?: Method }} options\n */\nconst match = (options = {}) =>\n  /** @type {Schema.Schema<API.PrincipalView<API.DID<Method> & API.URI<\"did:\">>>} */\n  (new PrincipalSchema(options.method))\n\n/**\n * Create a Principal from any input (or throw).\n *\n * @param {unknown} input\n */\nconst from = input => match({}).from(input)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEvcHJpbmNpcGFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0M7QUFDQztBQUNKOztBQUVyQztBQUNBLGNBQWMsUUFBUTtBQUN0QixhQUFhO0FBQ2I7QUFDQSw4QkFBOEIsMkNBQVU7QUFDeEM7QUFDQSxhQUFhLFNBQVM7QUFDdEIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaURBQWdCLEdBQUcsc0NBQXNDO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzREFBVTtBQUM1QixNQUFNO0FBQ04sYUFBYSw2Q0FBWSxtQ0FBbUMsSUFBSTtBQUNoRTtBQUNBLG1DQUFtQyxPQUFPO0FBQzFDO0FBQ0EsYUFBYSw2Q0FBWTtBQUN6QixzQkFBc0IsUUFBUSxXQUFXLGdCQUFnQjtBQUN6RDtBQUNBO0FBQ0EsYUFBYSxlQUFlLG9DQUFvQztBQUNoRTtBQUNBOztBQUVBOztBQUVBO0FBQ087O0FBRVAsWUFBWSxTQUFTO0FBQ2Q7O0FBRVA7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGFBQWEsbUJBQW1CO0FBQ2hDO0FBQ08sMkJBQTJCO0FBQ2xDLGFBQWEscUVBQXFFO0FBQ2xGOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNPLDhCQUE4QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vY29yZS9zcmMvc2NoZW1hL3ByaW5jaXBhbC5qcz9jYmJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcbmltcG9ydCAqIGFzIERJRCBmcm9tICdAaXBsZC9kYWctdWNhbi9kaWQnXG5pbXBvcnQgKiBhcyBTY2hlbWEgZnJvbSAnLi9zY2hlbWEuanMnXG5cbi8qKlxuICogQHRlbXBsYXRlIHtzdHJpbmd9IE1ldGhvZFxuICogQGV4dGVuZHMge1NjaGVtYS5BUEk8QVBJLlByaW5jaXBhbFZpZXc8QVBJLkRJRDxNZXRob2Q+ICYgQVBJLlVSSTxcImRpZDpcIj4+LCB1bmtub3duLCB2b2lkfE1ldGhvZD59XG4gKi9cbmNsYXNzIFByaW5jaXBhbFNjaGVtYSBleHRlbmRzIFNjaGVtYS5BUEkge1xuICAvKipcbiAgICogQHBhcmFtIHt1bmtub3dufSBzb3VyY2VcbiAgICogQHBhcmFtIHt2b2lkfE1ldGhvZH0gbWV0aG9kXG4gICAqL1xuICByZWFkV2l0aChzb3VyY2UsIG1ldGhvZCkge1xuICAgIGlmICghKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICByZXR1cm4gU2NoZW1hLnR5cGVFcnJvcih7IGV4cGVjdDogJ1VpbnQ4QXJyYXknLCBhY3R1YWw6IHNvdXJjZSB9KVxuICAgIH1cbiAgICBsZXQgcHJpbmNpcGFsXG4gICAgdHJ5IHtcbiAgICAgIHByaW5jaXBhbCA9IERJRC5kZWNvZGUoc291cmNlKVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIFNjaGVtYS5lcnJvcihgVW5hYmxlIHRvIGRlY29kZSBieXRlcyBhcyBESUQ6ICR7ZXJyfWApXG4gICAgfVxuICAgIGNvbnN0IHByZWZpeCA9IG1ldGhvZCA/IGBkaWQ6JHttZXRob2R9OmAgOiBgZGlkOmBcbiAgICBpZiAoIXByaW5jaXBhbC5kaWQoKS5zdGFydHNXaXRoKHByZWZpeCkpIHtcbiAgICAgIHJldHVybiBTY2hlbWEuZXJyb3IoXG4gICAgICAgIGBFeHBlY3RlZCBhICR7cHJlZml4fSBidXQgZ290IFwiJHtwcmluY2lwYWwuZGlkKCl9XCIgaW5zdGVhZGBcbiAgICAgIClcbiAgICB9XG4gICAgcmV0dXJuIHsgb2s6IC8qKiBAdHlwZSB7QVBJLlByaW5jaXBhbFZpZXc8QVBJLkRJRDxNZXRob2Q+Pn0gKi8gKHByaW5jaXBhbCkgfVxuICB9XG59XG5cbmNvbnN0IHNjaGVtYSA9IG5ldyBQcmluY2lwYWxTY2hlbWEoKVxuXG4vKiogQSBzY2hlbWEgdGhhdCByZWFkcyBieXRlIGVuY29kZWQgRElEcy4gKi9cbmV4cG9ydCBjb25zdCBwcmluY2lwYWwgPSAoKSA9PiBzY2hlbWFcblxuLyoqIEBwYXJhbSB7dW5rbm93bn0gaW5wdXQgKi9cbmV4cG9ydCBjb25zdCByZWFkID0gaW5wdXQgPT4gc2NoZW1hLnJlYWQoaW5wdXQpXG5cbi8qKlxuICogTWF0Y2hlcyBhIGJ5dGUgZW5jb2RlZCBESUQuXG4gKlxuICogQHRlbXBsYXRlIHtzdHJpbmd9IE1ldGhvZFxuICogQHBhcmFtIHt7IG1ldGhvZD86IE1ldGhvZCB9fSBvcHRpb25zXG4gKi9cbmV4cG9ydCBjb25zdCBtYXRjaCA9IChvcHRpb25zID0ge30pID0+XG4gIC8qKiBAdHlwZSB7U2NoZW1hLlNjaGVtYTxBUEkuUHJpbmNpcGFsVmlldzxBUEkuRElEPE1ldGhvZD4gJiBBUEkuVVJJPFwiZGlkOlwiPj4+fSAqL1xuICAobmV3IFByaW5jaXBhbFNjaGVtYShvcHRpb25zLm1ldGhvZCkpXG5cbi8qKlxuICogQ3JlYXRlIGEgUHJpbmNpcGFsIGZyb20gYW55IGlucHV0IChvciB0aHJvdykuXG4gKlxuICogQHBhcmFtIHt1bmtub3dufSBpbnB1dFxuICovXG5leHBvcnQgY29uc3QgZnJvbSA9IGlucHV0ID0+IG1hdGNoKHt9KS5mcm9tKGlucHV0KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/schema/principal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/schema/schema.js":
/*!********************************************************!*\
  !*** ./node_modules/@ucanto/core/src/schema/schema.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API: () => (/* binding */ API),\n/* harmony export */   Bytes: () => (/* binding */ Bytes),\n/* harmony export */   and: () => (/* binding */ and),\n/* harmony export */   array: () => (/* binding */ array),\n/* harmony export */   boolean: () => (/* binding */ boolean),\n/* harmony export */   bytes: () => (/* binding */ bytes),\n/* harmony export */   dictionary: () => (/* binding */ dictionary),\n/* harmony export */   endsWith: () => (/* binding */ endsWith),\n/* harmony export */   \"enum\": () => (/* binding */ createEnum),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   float: () => (/* binding */ float),\n/* harmony export */   greaterThan: () => (/* binding */ greaterThan),\n/* harmony export */   integer: () => (/* binding */ integer),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   lessThan: () => (/* binding */ lessThan),\n/* harmony export */   literal: () => (/* binding */ literal),\n/* harmony export */   memberError: () => (/* binding */ memberError),\n/* harmony export */   never: () => (/* binding */ never),\n/* harmony export */   nullable: () => (/* binding */ nullable),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   ok: () => (/* reexport safe */ _result_js__WEBPACK_IMPORTED_MODULE_1__.ok),\n/* harmony export */   optional: () => (/* binding */ optional),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   refine: () => (/* binding */ refine),\n/* harmony export */   startsWith: () => (/* binding */ startsWith),\n/* harmony export */   string: () => (/* binding */ string),\n/* harmony export */   struct: () => (/* binding */ struct),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   tuple: () => (/* binding */ tuple),\n/* harmony export */   typeError: () => (/* binding */ typeError),\n/* harmony export */   uint64: () => (/* binding */ uint64),\n/* harmony export */   union: () => (/* binding */ union),\n/* harmony export */   unknown: () => (/* binding */ unknown),\n/* harmony export */   variant: () => (/* binding */ variant)\n/* harmony export */ });\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/type.js\");\n/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../result.js */ \"(ssr)/./node_modules/@ucanto/core/src/result.js\");\n\n\n\n\n\n/**\n * @abstract\n * @template [T=unknown]\n * @template [I=unknown]\n * @template [Settings=void]\n * @extends {Schema.Base<T, I, Settings>}\n * @implements {Schema.Schema<T, I>}\n */\nclass API {\n  /**\n   * @param {Settings} settings\n   */\n  constructor(settings) {\n    this.settings = settings\n  }\n\n  toString() {\n    return `new ${this.constructor.name}()`\n  }\n  /**\n   * @abstract\n   * @param {I} input\n   * @param {Settings} settings\n   * @returns {Schema.ReadResult<T>}\n   */\n  /* c8 ignore next 3 */\n  readWith(input, settings) {\n    throw new Error(`Abstract method readWith must be implemented by subclass`)\n  }\n  /**\n   * @param {I} input\n   * @returns {Schema.ReadResult<T>}\n   */\n  read(input) {\n    return this.readWith(input, this.settings)\n  }\n\n  /**\n   * @param {unknown} value\n   * @returns {value is T}\n   */\n  is(value) {\n    return !this.read(/** @type {I} */ (value))?.error\n  }\n\n  /**\n   * @param {unknown} value\n   * @return {T}\n   */\n  from(value) {\n    const result = this.read(/** @type {I} */ (value))\n    if (result.error) {\n      throw result.error\n    } else {\n      return result.ok\n    }\n  }\n\n  /**\n   * @returns {Schema.Schema<T|undefined, I>}\n   */\n  optional() {\n    return optional(this)\n  }\n\n  /**\n   * @returns {Schema.Schema<T|null, I>}\n   */\n  nullable() {\n    return nullable(this)\n  }\n\n  /**\n   * @returns {Schema.Schema<T[], I>}\n   */\n  array() {\n    return array(this)\n  }\n  /**\n   * @template U\n   * @param {Schema.Reader<U, I>} schema\n   * @returns {Schema.Schema<T | U, I>}\n   */\n\n  or(schema) {\n    return or(this, schema)\n  }\n\n  /**\n   * @template U\n   * @param {Schema.Reader<U, I>} schema\n   * @returns {Schema.Schema<T & U, I>}\n   */\n  and(schema) {\n    return and(this, schema)\n  }\n\n  /**\n   * @template {T} U\n   * @param {Schema.Reader<U, T>} schema\n   * @returns {Schema.Schema<U, I>}\n   */\n  refine(schema) {\n    return refine(this, schema)\n  }\n\n  /**\n   * @template {string} Kind\n   * @param {Kind} [kind]\n   * @returns {Schema.Schema<Schema.Branded<T, Kind>, I>}\n   */\n  brand(kind) {\n    return /** @type {Schema.Schema<Schema.Branded<T, Kind>, I>} */ (this)\n  }\n\n  /**\n   * @param {Schema.NotUndefined<T>} value\n   * @returns {Schema.DefaultSchema<Schema.NotUndefined<T>, I>}\n   */\n  default(value) {\n    // ⚠️ this.from will throw if wrong default is provided\n    const fallback = this.from(value)\n    // we also check that fallback is not undefined because that is the point\n    // of having a fallback\n    if (fallback === undefined) {\n      throw new Error(`Value of type undefined is not a valid default`)\n    }\n\n    const schema = new Default({\n      reader: /** @type {Schema.Reader<T, I>} */ (this),\n      value: /** @type {Schema.NotUndefined<T>} */ (fallback),\n    })\n\n    return /** @type {Schema.DefaultSchema<Schema.NotUndefined<T>, I>} */ (\n      schema\n    )\n  }\n}\n\n/**\n * @template [I=unknown]\n * @extends {API<never, I>}\n * @implements {Schema.Schema<never, I>}\n */\nclass Never extends API {\n  toString() {\n    return 'never()'\n  }\n  /**\n   * @param {I} input\n   * @returns {Schema.ReadResult<never>}\n   */\n  read(input) {\n    return typeError({ expect: 'never', actual: input })\n  }\n}\n\n/**\n * @template [I=unknown]\n * @returns {Schema.Schema<never, I>}\n */\nconst never = () => new Never()\n\n/**\n * @template [I=unknown]\n * @extends API<unknown, I, void>\n * @implements {Schema.Schema<unknown, I>}\n */\nclass Unknown extends API {\n  /**\n   * @param {I} input\n   */\n  read(input) {\n    return /** @type {Schema.ReadResult<unknown>}*/ ({ ok: input })\n  }\n  toString() {\n    return 'unknown()'\n  }\n}\n\n/**\n * @template [I=unknown]\n * @returns {Schema.Schema<unknown, I>}\n */\nconst unknown = () => new Unknown()\n\n/**\n * @template O\n * @template [I=unknown]\n * @extends {API<null|O, I, Schema.Reader<O, I>>}\n * @implements {Schema.Schema<null|O, I>}\n */\nclass Nullable extends API {\n  /**\n   * @param {I} input\n   * @param {Schema.Reader<O, I>} reader\n   */\n  readWith(input, reader) {\n    const result = reader.read(input)\n    if (result.error) {\n      return input === null\n        ? { ok: null }\n        : {\n            error: new UnionError({\n              causes: [\n                result.error,\n                typeError({ expect: 'null', actual: input }).error,\n              ],\n            }),\n          }\n    } else {\n      return result\n    }\n  }\n  toString() {\n    return `${this.settings}.nullable()`\n  }\n}\n\n/**\n * @template O\n * @template [I=unknown]\n * @param {Schema.Reader<O, I>} schema\n * @returns {Schema.Schema<O|null, I>}\n */\nconst nullable = schema => new Nullable(schema)\n\n/**\n * @template O\n * @template [I=unknown]\n * @extends {API<O|undefined, I, Schema.Reader<O, I>>}\n * @implements {Schema.Schema<O|undefined, I>}\n */\nclass Optional extends API {\n  optional() {\n    return this\n  }\n  /**\n   * @param {I} input\n   * @param {Schema.Reader<O, I>} reader\n   * @returns {Schema.ReadResult<O|undefined>}\n   */\n  readWith(input, reader) {\n    const result = reader.read(input)\n    return result.error && input === undefined ? { ok: undefined } : result\n  }\n  toString() {\n    return `${this.settings}.optional()`\n  }\n}\n\n/**\n * @template {unknown} O\n * @template [I=unknown]\n * @extends {API<O, I, {reader:Schema.Reader<O, I>, value:O & Schema.NotUndefined<O>}>}\n * @implements {Schema.DefaultSchema<O, I>}\n */\nclass Default extends API {\n  /**\n   * @returns {Schema.DefaultSchema<O & Schema.NotUndefined<O>, I>}\n   */\n  optional() {\n    // Short circuit here as we there is no point in wrapping this in optional.\n    return /** @type {Schema.DefaultSchema<O & Schema.NotUndefined<O>, I>} */ (\n      this\n    )\n  }\n  /**\n   * @param {I} input\n   * @param {object} options\n   * @param {Schema.Reader<O|undefined, I>} options.reader\n   * @param {O} options.value\n   * @returns {Schema.ReadResult<O>}\n   */\n  readWith(input, { reader, value }) {\n    if (input === undefined) {\n      return /** @type {Schema.ReadResult<O>} */ ({ ok: value })\n    } else {\n      const result = reader.read(input)\n\n      return result.error\n        ? result\n        : result.ok !== undefined\n        ? // We just checked that result.ok is not undefined but still needs\n          // reassurance\n          /** @type {Schema.ReadResult<O>} */ (result)\n        : { ok: value }\n    }\n  }\n  toString() {\n    return `${this.settings.reader}.default(${JSON.stringify(\n      this.settings.value\n    )})`\n  }\n\n  get value() {\n    return this.settings.value\n  }\n}\n\n/**\n * @template O\n * @template [I=unknown]\n * @param {Schema.Reader<O, I>} schema\n * @returns {Schema.Schema<O|undefined, I>}\n */\nconst optional = schema => new Optional(schema)\n\n/**\n * @template O\n * @template [I=unknown]\n * @extends {API<O[], I, Schema.Reader<O, I>>}\n * @implements {Schema.ArraySchema<O, I>}\n */\nclass ArrayOf extends API {\n  /**\n   * @param {I} input\n   * @param {Schema.Reader<O, I>} schema\n   */\n  readWith(input, schema) {\n    if (!Array.isArray(input)) {\n      return typeError({ expect: 'array', actual: input })\n    }\n    /** @type {O[]} */\n    const results = []\n    for (const [index, value] of input.entries()) {\n      const result = schema.read(value)\n      if (result.error) {\n        return memberError({ at: index, cause: result.error })\n      } else {\n        results.push(result.ok)\n      }\n    }\n    return { ok: results }\n  }\n  get element() {\n    return this.settings\n  }\n  toString() {\n    return `array(${this.element})`\n  }\n}\n\n/**\n * @template O\n * @template [I=unknown]\n * @param {Schema.Reader<O, I>} schema\n * @returns {Schema.ArraySchema<O, I>}\n */\nconst array = schema => new ArrayOf(schema)\n\n/**\n * @template {Schema.Reader<unknown, I>} T\n * @template {[T, ...T[]]} U\n * @template [I=unknown]\n * @extends {API<Schema.InferTuple<U>, I, U>}\n * @implements {Schema.Schema<Schema.InferTuple<U>, I>}\n */\nclass Tuple extends API {\n  /**\n   * @param {I} input\n   * @param {U} shape\n   * @returns {Schema.ReadResult<Schema.InferTuple<U>>}\n   */\n  readWith(input, shape) {\n    if (!Array.isArray(input)) {\n      return typeError({ expect: 'array', actual: input })\n    }\n    if (input.length !== this.shape.length) {\n      return error(`Array must contain exactly ${this.shape.length} elements`)\n    }\n\n    const results = []\n    for (const [index, reader] of shape.entries()) {\n      const result = reader.read(input[index])\n      if (result.error) {\n        return memberError({ at: index, cause: result.error })\n      } else {\n        results[index] = result.ok\n      }\n    }\n\n    return { ok: /** @type {Schema.InferTuple<U>} */ (results) }\n  }\n\n  /** @type {U} */\n  get shape() {\n    return this.settings\n  }\n\n  toString() {\n    return `tuple([${this.shape.map(reader => reader.toString()).join(', ')}])`\n  }\n}\n\n/**\n * @template {Schema.Reader<unknown, I>} T\n * @template {[T, ...T[]]} U\n * @template [I=unknown]\n * @param {U} shape\n * @returns {Schema.Schema<Schema.InferTuple<U>, I>}\n */\nconst tuple = shape => new Tuple(shape)\n\n/**\n * @template V\n * @template {string} K\n * @template [I=unknown]\n * @extends {API<Schema.Dictionary<K, V>, I, { key: Schema.Reader<K, string>, value: Schema.Reader<V, I> }>}\n * @implements {Schema.DictionarySchema<V, K, I>}\n */\nclass Dictionary extends API {\n  /**\n   * @param {I} input\n   * @param {object} schema\n   * @param {Schema.Reader<K, string>} schema.key\n   * @param {Schema.Reader<V, I>} schema.value\n   */\n  readWith(input, { key, value }) {\n    if (typeof input != 'object' || input === null || Array.isArray(input)) {\n      return typeError({\n        expect: 'dictionary',\n        actual: input,\n      })\n    }\n\n    const dict = /** @type {Schema.Dictionary<K, V>} */ ({})\n\n    for (const [k, v] of Object.entries(input)) {\n      const keyResult = key.read(k)\n      if (keyResult.error) {\n        return memberError({ at: k, cause: keyResult.error })\n      }\n\n      const valueResult = value.read(v)\n      if (valueResult.error) {\n        return memberError({ at: k, cause: valueResult.error })\n      }\n\n      // skip undefined because they mess up CBOR and are generally useless.\n      if (valueResult.ok !== undefined) {\n        dict[keyResult.ok] = valueResult.ok\n      }\n    }\n\n    return { ok: dict }\n  }\n  get key() {\n    return this.settings.key\n  }\n  get value() {\n    return this.settings.value\n  }\n\n  partial() {\n    const { key, value } = this.settings\n    return new Dictionary({\n      key,\n      value: optional(value),\n    })\n  }\n  toString() {\n    return `dictionary(${this.settings})`\n  }\n}\n\n/**\n * @template {string} K\n * @template {unknown} V\n * @template [I=unknown]\n * @param {object} shape\n * @param {Schema.Reader<V, I>} shape.value\n * @param {Schema.Reader<K, string>} [shape.key]\n * @returns {Schema.DictionarySchema<V, K, I>}\n */\nconst dictionary = ({ value, key }) =>\n  new Dictionary({\n    value,\n    key: key || /** @type {Schema.Reader<K, string>} */ (string()),\n  })\n\n/**\n * @template {[unknown, ...unknown[]]} T\n * @template [I=unknown]\n * @extends {API<T[number], I, {type: string, variants:Set<T[number]>}>}\n * @implements {Schema.Schema<T[number], I>}\n */\nclass Enum extends API {\n  /**\n   * @param {I} input\n   * @param {{type:string, variants:Set<T[number]>}} settings\n   * @returns {Schema.ReadResult<T[number]>}\n   */\n  readWith(input, { variants, type }) {\n    if (variants.has(input)) {\n      return /** @type {Schema.ReadResult<T[number]>} */ ({ ok: input })\n    } else {\n      return typeError({ expect: type, actual: input })\n    }\n  }\n  toString() {\n    return this.settings.type\n  }\n}\n\n/**\n * @template {string} T\n * @template {[T, ...T[]]} U\n * @template [I=unknown]\n * @param {U} variants\n * @returns {Schema.Schema<U[number], I>}\n */\nconst createEnum = variants =>\n  new Enum({\n    type: variants.join('|'),\n    variants: new Set(variants),\n  })\n\n\n/**\n * @template {Schema.Reader<unknown, I>} T\n * @template {[T, ...T[]]} U\n * @template [I=unknown]\n * @extends {API<Schema.InferUnion<U>, I, U>}\n * @implements {Schema.Schema<Schema.InferUnion<U>, I>}\n */\nclass Union extends API {\n  /**\n   * @param {I} input\n   * @param {U} variants\n   */\n  readWith(input, variants) {\n    const causes = []\n    for (const reader of variants) {\n      const result = reader.read(input)\n      if (result.error) {\n        causes.push(result.error)\n      } else {\n        return /** @type {Schema.ReadResult<Schema.InferUnion<U>>} */ (result)\n      }\n    }\n    return { error: new UnionError({ causes }) }\n  }\n\n  get variants() {\n    return this.settings\n  }\n  toString() {\n    return `union([${this.variants.map(type => type.toString()).join(', ')}])`\n  }\n}\n\n/**\n * @template {Schema.Reader<unknown, I>} T\n * @template {[T, ...T[]]} U\n * @template [I=unknown]\n * @param {U} variants\n * @returns {Schema.Schema<Schema.InferUnion<U>, I>}\n */\nconst union = variants => new Union(variants)\n\n/**\n * @template T, U\n * @template [I=unknown]\n * @param {Schema.Reader<T, I>} left\n * @param {Schema.Reader<U, I>} right\n * @returns {Schema.Schema<T|U, I>}\n */\nconst or = (left, right) => union([left, right])\n\n/**\n * @template {Schema.Reader<unknown, I>} T\n * @template {[T, ...T[]]} U\n * @template [I=unknown]\n * @extends {API<Schema.InferIntersection<U>, I, U>}\n * @implements {Schema.Schema<Schema.InferIntersection<U>, I>}\n */\nclass Intersection extends API {\n  /**\n   * @param {I} input\n   * @param {U} schemas\n   * @returns {Schema.ReadResult<Schema.InferIntersection<U>>}\n   */\n  readWith(input, schemas) {\n    const causes = []\n    for (const schema of schemas) {\n      const result = schema.read(input)\n      if (result.error) {\n        causes.push(result.error)\n      }\n    }\n\n    return causes.length > 0\n      ? { error: new IntersectionError({ causes }) }\n      : /** @type {Schema.ReadResult<Schema.InferIntersection<U>>} */ ({\n          ok: input,\n        })\n  }\n  toString() {\n    return `intersection([${this.settings\n      .map(type => type.toString())\n      .join(',')}])`\n  }\n}\n\n/**\n * @template {Schema.Reader<unknown, I>} T\n * @template {[T, ...T[]]} U\n * @template [I=unknown]\n * @param {U} variants\n * @returns {Schema.Schema<Schema.InferIntersection<U>, I>}\n */\nconst intersection = variants => new Intersection(variants)\n\n/**\n * @template T, U\n * @template [I=unknown]\n * @param {Schema.Reader<T, I>} left\n * @param {Schema.Reader<U, I>} right\n * @returns {Schema.Schema<T & U, I>}\n */\nconst and = (left, right) => intersection([left, right])\n\n/**\n * @template [I=unknown]\n * @extends {API<boolean, I>}\n */\nclass Boolean extends API {\n  /**\n   * @param {I} input\n   */\n  readWith(input) {\n    switch (input) {\n      case true:\n      case false:\n        return { ok: /** @type {boolean} */ (input) }\n      default:\n        return typeError({\n          expect: 'boolean',\n          actual: input,\n        })\n    }\n  }\n\n  toString() {\n    return `boolean()`\n  }\n}\n\n/** @type {Schema.Schema<boolean, unknown>} */\nconst anyBoolean = new Boolean()\n\nconst boolean = () => anyBoolean\n\n/**\n * @template {number} [O=number]\n * @template [I=unknown]\n * @template [Settings=void]\n * @extends {API<O, I, Settings>}\n * @implements {Schema.NumberSchema<O, I>}\n */\nclass UnknownNumber extends API {\n  /**\n   * @param {number} n\n   */\n  greaterThan(n) {\n    return this.refine(greaterThan(n))\n  }\n  /**\n   * @param {number} n\n   */\n  lessThan(n) {\n    return this.refine(lessThan(n))\n  }\n\n  /**\n   * @template {O} U\n   * @param {Schema.Reader<U, O>} schema\n   * @returns {Schema.NumberSchema<U, I>}\n   */\n  refine(schema) {\n    return new RefinedNumber({ base: this, schema })\n  }\n}\n\n/**\n * @template [I=unknown]\n * @extends {UnknownNumber<number, I>}\n * @implements {Schema.NumberSchema<number, I>}\n */\nclass AnyNumber extends UnknownNumber {\n  /**\n   * @param {I} input\n   * @returns {Schema.ReadResult<number>}\n   */\n  readWith(input) {\n    return typeof input === 'number'\n      ? { ok: input }\n      : typeError({ expect: 'number', actual: input })\n  }\n  toString() {\n    return `number()`\n  }\n}\n\n/** @type {Schema.NumberSchema<number, unknown>} */\nconst anyNumber = new AnyNumber()\nconst number = () => anyNumber\n\n/**\n * @template {number} [T=number]\n * @template {T} [O=T]\n * @template [I=unknown]\n * @extends {UnknownNumber<O, I, {base:Schema.Reader<T, I>, schema:Schema.Reader<O, T>}>}\n * @implements {Schema.NumberSchema<O, I>}\n */\nclass RefinedNumber extends UnknownNumber {\n  /**\n   * @param {I} input\n   * @param {{base:Schema.Reader<T, I>, schema:Schema.Reader<O, T>}} settings\n   * @returns {Schema.ReadResult<O>}\n   */\n  readWith(input, { base, schema }) {\n    const result = base.read(input)\n    return result.error ? result : schema.read(result.ok)\n  }\n  toString() {\n    return `${this.settings.base}.refine(${this.settings.schema})`\n  }\n}\n\n/**\n * @template {number} T\n * @extends {API<T, T, number>}\n */\nclass LessThan extends API {\n  /**\n   * @param {T} input\n   * @param {number} number\n   * @returns {Schema.ReadResult<T>}\n   */\n  readWith(input, number) {\n    if (input < number) {\n      return { ok: input }\n    } else {\n      return error(`Expected ${input} < ${number}`)\n    }\n  }\n  toString() {\n    return `lessThan(${this.settings})`\n  }\n}\n\n/**\n * @template {number} T\n * @param {number} n\n * @returns {Schema.Schema<T, T>}\n */\nconst lessThan = n => new LessThan(n)\n\n/**\n * @template {number} T\n * @extends {API<T, T, number>}\n */\nclass GreaterThan extends API {\n  /**\n   * @param {T} input\n   * @param {number} number\n   * @returns {Schema.ReadResult<T>}\n   */\n  readWith(input, number) {\n    if (input > number) {\n      return { ok: input }\n    } else {\n      return error(`Expected ${input} > ${number}`)\n    }\n  }\n  toString() {\n    return `greaterThan(${this.settings})`\n  }\n}\n\n/**\n * @template {number} T\n * @param {number} n\n * @returns {Schema.Schema<T, T>}\n */\nconst greaterThan = n => new GreaterThan(n)\n\nconst Integer = {\n  /**\n   * @param {number} input\n   * @returns {Schema.ReadResult<Schema.Integer>}\n   */\n  read(input) {\n    return Number.isInteger(input)\n      ? { ok: /** @type {Schema.Integer} */ (input) }\n      : typeError({\n          expect: 'integer',\n          actual: input,\n        })\n  },\n  toString() {\n    return `Integer`\n  },\n}\n\nconst anyInteger = anyNumber.refine(Integer)\nconst integer = () => anyInteger\n\nconst MAX_UINT64 = 2n ** 64n - 1n\n\n/**\n * @template {bigint} [O=Schema.Uint64]\n * @template [I=unknown]\n * @extends {API<O, I, void>}\n * @implements {Schema.Schema<O, I>}\n */\nclass Uint64Schema extends API {\n  /**\n   * @param {I} input\n   * @returns {Schema.ReadResult<O>}\n   */\n  read(input) {\n    switch (typeof input) {\n      case 'bigint':\n        return input > MAX_UINT64\n          ? error(`Integer is too big for uint64, ${input} > ${MAX_UINT64}`)\n          : input < 0\n          ? error(\n              `Negative integer can not be represented as uint64, ${input} < ${0}`\n            )\n          : { ok: /** @type {I & O} */ (input) }\n\n      case 'number':\n        return !Number.isInteger(input)\n          ? typeError({\n              expect: 'uint64',\n              actual: input,\n            })\n          : input < 0\n          ? error(\n              `Negative integer can not be represented as uint64, ${input} < ${0}`\n            )\n          : { ok: /** @type {O} */ (BigInt(input)) }\n\n      default:\n        return typeError({\n          expect: 'uint64',\n          actual: input,\n        })\n    }\n  }\n\n  toString() {\n    return `uint64`\n  }\n}\n\n/** @type {Schema.Schema<Schema.Uint64, unknown>} */\nconst Uint64 = new Uint64Schema()\n\n/**\n * Creates a schema for {@link Schema.Uint64} values represented as  a`bigint`.\n *\n * ⚠️ Please note that while IPLD in principal considers the range of integers\n * to be infinite n practice, many libraries / codecs may choose to implement\n * things in such a way that numbers may have limited sizes.\n *\n * So please use this with caution and always ensure that used codecs do support\n * uint64.\n */\nconst uint64 = () => Uint64\n\nconst Float = {\n  /**\n   * @param {number} number\n   * @returns {Schema.ReadResult<Schema.Float>}\n   */\n  read(number) {\n    return Number.isFinite(number)\n      ? { ok: /** @type {Schema.Float} */ (number) }\n      : typeError({\n          expect: 'Float',\n          actual: number,\n        })\n  },\n  toString() {\n    return 'Float'\n  },\n}\n\nconst anyFloat = anyNumber.refine(Float)\nconst float = () => anyFloat\n\n/**\n * @template {string} [O=string]\n * @template [I=unknown]\n * @template [Settings=void]\n * @extends {API<O, I, Settings>}\n */\nclass UnknownString extends API {\n  /**\n   * @template {O|unknown} U\n   * @param {Schema.Reader<U, O>} schema\n   * @returns {Schema.StringSchema<O & U, I>}\n   */\n  refine(schema) {\n    const other = /** @type {Schema.Reader<U, O>} */ (schema)\n    const rest = new RefinedString({\n      base: this,\n      schema: other,\n    })\n\n    return /** @type {Schema.StringSchema<O & U, I>} */ (rest)\n  }\n  /**\n   * @template {string} Prefix\n   * @param {Prefix} prefix\n   */\n  startsWith(prefix) {\n    return this.refine(startsWith(prefix))\n  }\n  /**\n   * @template {string} Suffix\n   * @param {Suffix} suffix\n   */\n  endsWith(suffix) {\n    return this.refine(endsWith(suffix))\n  }\n  toString() {\n    return `string()`\n  }\n}\n\n/**\n * @template O\n * @template {string} [T=string]\n * @template [I=unknown]\n * @extends {UnknownString<T & O, I, {base:Schema.Reader<T, I>, schema:Schema.Reader<O, T>}>}\n * @implements {Schema.StringSchema<O & T, I>}\n */\nclass RefinedString extends UnknownString {\n  /**\n   * @param {I} input\n   * @param {{base:Schema.Reader<T, I>, schema:Schema.Reader<O, T>}} settings\n   * @returns {Schema.ReadResult<T & O>}\n   */\n  readWith(input, { base, schema }) {\n    const result = base.read(input)\n    return result.error\n      ? result\n      : /** @type {Schema.ReadResult<T & O>} */ (schema.read(result.ok))\n  }\n  toString() {\n    return `${this.settings.base}.refine(${this.settings.schema})`\n  }\n}\n\n/**\n * @template [I=unknown]\n * @extends {UnknownString<string, I>}\n * @implements {Schema.StringSchema<string, I>}\n */\nclass AnyString extends UnknownString {\n  /**\n   * @param {I} input\n   * @returns {Schema.ReadResult<string>}\n   */\n  readWith(input) {\n    return typeof input === 'string'\n      ? { ok: input }\n      : typeError({ expect: 'string', actual: input })\n  }\n}\n\n/** @type {Schema.StringSchema<string, unknown>} */\nconst anyString = new AnyString()\nconst string = () => anyString\n\n/**\n * @template [I=unknown]\n * @extends {API<Uint8Array, I, void>}\n */\nclass BytesSchema extends API {\n  /**\n   * @param {I} input\n   * @returns {Schema.ReadResult<Uint8Array>}\n   */\n  readWith(input) {\n    if (input instanceof Uint8Array) {\n      return { ok: input }\n    } else {\n      return typeError({ expect: 'Uint8Array', actual: input })\n    }\n  }\n}\n\n/** @type {Schema.Schema<Uint8Array, unknown>} */\nconst Bytes = new BytesSchema()\nconst bytes = () => Bytes\n\n/**\n * @template {string} Prefix\n * @template {string} Body\n * @extends {API<Body & `${Prefix}${Body}`, Body, Prefix>}\n * @implements {Schema.Schema<Body & `${Prefix}${Body}`, Body>}\n */\nclass StartsWith extends API {\n  /**\n   * @param {Body} input\n   * @param {Prefix} prefix\n   */\n  readWith(input, prefix) {\n    const result = input.startsWith(prefix)\n      ? /** @type {Schema.ReadResult<Body & `${Prefix}${Body}`>} */ ({\n          ok: input,\n        })\n      : error(`Expect string to start with \"${prefix}\" instead got \"${input}\"`)\n\n    return result\n  }\n  get prefix() {\n    return this.settings\n  }\n  toString() {\n    return `startsWith(\"${this.prefix}\")`\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {string} Body\n * @param {Prefix} prefix\n * @returns {Schema.Schema<`${Prefix}${string}`, string>}\n */\nconst startsWith = prefix => new StartsWith(prefix)\n\n/**\n * @template {string} Suffix\n * @template {string} Body\n * @extends {API<Body & `${Body}${Suffix}`, Body, Suffix>}\n */\nclass EndsWith extends API {\n  /**\n   * @param {Body} input\n   * @param {Suffix} suffix\n   */\n  readWith(input, suffix) {\n    return input.endsWith(suffix)\n      ? /** @type {Schema.ReadResult<Body & `${Body}${Suffix}`>} */ ({\n          ok: input,\n        })\n      : error(`Expect string to end with \"${suffix}\" instead got \"${input}\"`)\n  }\n  get suffix() {\n    return this.settings\n  }\n  toString() {\n    return `endsWith(\"${this.suffix}\")`\n  }\n}\n\n/**\n * @template {string} Suffix\n * @param {Suffix} suffix\n * @returns {Schema.Schema<`${string}${Suffix}`, string>}\n */\nconst endsWith = suffix => new EndsWith(suffix)\n\n/**\n * @template T\n * @template {T} U\n * @template [I=unknown]\n * @extends {API<U, I, { base: Schema.Reader<T, I>, schema: Schema.Reader<U, T> }>}\n * @implements {Schema.Schema<U, I>}\n */\n\nclass Refine extends API {\n  /**\n   * @param {I} input\n   * @param {{ base: Schema.Reader<T, I>, schema: Schema.Reader<U, T> }} settings\n   */\n  readWith(input, { base, schema }) {\n    const result = base.read(input)\n    return result.error ? result : schema.read(result.ok)\n  }\n  toString() {\n    return `${this.settings.base}.refine(${this.settings.schema})`\n  }\n}\n\n/**\n * @template T\n * @template {T} U\n * @template [I=unknown]\n * @param {Schema.Reader<T, I>} base\n * @param {Schema.Reader<U, T>} schema\n * @returns {Schema.Schema<U, I>}\n */\nconst refine = (base, schema) => new Refine({ base, schema })\n\n/**\n * @template {null|boolean|string|number} T\n * @template [I=unknown]\n * @extends {API<T, I, T>}\n * @implements {Schema.LiteralSchema<T, I>}\n */\nclass Literal extends API {\n  /**\n   * @param {I} input\n   * @param {T} expect\n   * @returns {Schema.ReadResult<T>}\n   */\n  readWith(input, expect) {\n    return input !== /** @type {unknown} */ (expect)\n      ? { error: new LiteralError({ expect, actual: input }) }\n      : { ok: expect }\n  }\n  get value() {\n    return /** @type {Exclude<T, undefined>} */ (this.settings)\n  }\n  /**\n   * @template {Schema.NotUndefined<T>} U\n   * @param {U} value\n   */\n  default(value = /** @type {U} */ (this.value)) {\n    return super.default(value)\n  }\n  toString() {\n    return `literal(${toString(this.value)})`\n  }\n}\n\n/**\n * @template {null|boolean|string|number} T\n * @template [I=unknown]\n * @param {T} value\n * @returns {Schema.LiteralSchema<T, I>}\n */\nconst literal = value => new Literal(value)\n\n/**\n * @template {{[key:string]: Schema.Reader}} U\n * @template [I=unknown]\n * @extends {API<Schema.InferStruct<U>, I, U>}\n */\nclass Struct extends API {\n  /**\n   * @param {I} input\n   * @param {U} shape\n   * @returns {Schema.ReadResult<Schema.InferStruct<U>>}\n   */\n  readWith(input, shape) {\n    if (typeof input != 'object' || input === null || Array.isArray(input)) {\n      return typeError({\n        expect: 'object',\n        actual: input,\n      })\n    }\n\n    const source = /** @type {{[K in keyof U]: unknown}} */ (input)\n\n    const struct = /** @type {{[K in keyof U]: Schema.Infer<U[K]>}} */ ({})\n    const entries =\n      /** @type {{[K in keyof U]: [K & string, U[K]]}[keyof U][]} */ (\n        Object.entries(shape)\n      )\n\n    for (const [at, reader] of entries) {\n      const result = reader.read(source[at])\n      if (result.error) {\n        return memberError({ at, cause: result.error })\n      }\n      // skip undefined because they mess up CBOR and are generally useless.\n      else if (result.ok !== undefined) {\n        struct[at] = /** @type {Schema.Infer<U[typeof at]>} */ (result.ok)\n      }\n    }\n\n    return { ok: struct }\n  }\n\n  /**\n   * @returns {Schema.MapRepresentation<Partial<Schema.InferStruct<U>>> & Schema.StructSchema}\n   */\n  partial() {\n    return new Struct(\n      Object.fromEntries(\n        Object.entries(this.shape).map(([key, value]) => [key, optional(value)])\n      )\n    )\n  }\n\n  /** @type {U} */\n  get shape() {\n    // @ts-ignore - We declared `settings` private but we access it here\n    return this.settings\n  }\n\n  toString() {\n    return [\n      `struct({ `,\n      ...Object.entries(this.shape)\n        .map(([key, schema]) => `${key}: ${schema}`)\n        .join(', '),\n      ` })`,\n    ].join('')\n  }\n\n  /**\n   * @param {Schema.InferStructSource<U>} data\n   */\n  create(data) {\n    return this.from(data || {})\n  }\n\n  /**\n   * @template {{[key:string]: Schema.Reader}} E\n   * @param {E} extension\n   * @returns {Schema.StructSchema<U & E, I>}\n   */\n  extend(extension) {\n    return new Struct({ ...this.shape, ...extension })\n  }\n}\n\n/**\n * @template {null|boolean|string|number} T\n * @template {{[key:string]: T|Schema.Reader}} U\n * @template {{[K in keyof U]: U[K] extends Schema.Reader ? U[K] : Schema.LiteralSchema<U[K] & T>}} V\n * @template [I=unknown]\n * @param {U} fields\n * @returns {Schema.StructSchema<V, I>}\n */\nconst struct = fields => {\n  const shape =\n    /** @type {{[K in keyof U]: Schema.Reader<unknown, unknown>}} */ ({})\n  /** @type {[keyof U & string, T|Schema.Reader][]} */\n  const entries = Object.entries(fields)\n\n  for (const [key, field] of entries) {\n    switch (typeof field) {\n      case 'number':\n      case 'string':\n      case 'boolean':\n        shape[key] = literal(field)\n        break\n      case 'object':\n        shape[key] = field === null ? literal(null) : field\n        break\n      default:\n        throw new Error(\n          `Invalid struct field \"${key}\", expected schema or literal, instead got ${typeof field}`\n        )\n    }\n  }\n\n  return new Struct(/** @type {V} */ (shape))\n}\n\n/**\n * @template {Schema.VariantChoices} U\n * @template [I=unknown]\n * @extends {API<Schema.InferVariant<U>, I, U>}\n * @implements {Schema.VariantSchema<U, I>}\n */\nclass Variant extends API {\n  /**\n   * @param {I} input\n   * @param {U} variants\n   * @returns {Schema.ReadResult<Schema.InferVariant<U>>}\n   */\n  readWith(input, variants) {\n    if (typeof input != 'object' || input === null || Array.isArray(input)) {\n      return typeError({\n        expect: 'object',\n        actual: input,\n      })\n    }\n\n    const keys = /** @type {Array<keyof input & keyof variants & string>} */ (\n      Object.keys(input)\n    )\n\n    const [key] = keys.length === 1 ? keys : []\n    const reader = key ? variants[key] : undefined\n\n    if (reader) {\n      const result = reader.read(input[key])\n      return result.error\n        ? memberError({ at: key, cause: result.error })\n        : { ok: /** @type {Schema.InferVariant<U>} */ ({ [key]: result.ok }) }\n    } else if (variants._) {\n      const result = variants._.read(input)\n      return result.error\n        ? result\n        : { ok: /** @type {Schema.InferVariant<U>} */ ({ _: result.ok }) }\n    } else if (key) {\n      return error(\n        `Expected an object with one of the these keys: ${Object.keys(variants)\n          .sort()\n          .join(', ')} instead got object with key ${key}`\n      )\n    } else {\n      return error(\n        'Expected an object with a single key instead got object with keys ' +\n          keys.sort().join(', ')\n      )\n    }\n  }\n\n  /**\n   * @template [E=never]\n   * @param {I} input\n   * @param {E} [fallback]\n   */\n  match(input, fallback) {\n    const result = this.read(input)\n    if (result.error) {\n      if (fallback !== undefined) {\n        return [null, fallback]\n      } else {\n        throw result.error\n      }\n    } else {\n      const [key] = Object.keys(result.ok)\n      const value = result.ok[key]\n      return /** @type {any} */ ([key, value])\n    }\n  }\n\n  /**\n   * @template {Schema.InferVariant<U>} O\n   * @param {O} source\n   * @returns {O}\n   */\n  create(source) {\n    return /** @type {O} */ (this.from(source))\n  }\n}\n\n/**\n * Defines a schema for the `Variant` type. It takes an object where\n * keys denote branches of the variant and values are schemas for the values of\n * those branches. The schema will only match objects with a single key and\n * value that matches the schema for that key. If the object has more than one\n * key or the key does not match any of the keys in the schema then the schema\n * will fail.\n *\n * The `_` branch is a special case. If such branch is present then it will be\n * used as a fallback for any object that does not match any of the variant\n * branches. The `_` branch will be used even if the object has more than one\n * key. Unlike other branches the `_` branch will receive the entire object as\n * input and not just the value of the key. Usually the `_` branch can be set\n * to `Schema.unknown` or `Schema.dictionary` to facilitate exhaustive matching.\n *\n * @example\n * ```ts\n * const Shape = Variant({\n *    circle: Schema.struct({ radius: Schema.integer() }),\n *    rectangle: Schema.struct({ width: Schema.integer(), height: Schema.integer() })\n * })\n *\n * const demo = (input:unknown) => {\n *   const [kind, value] = Schema.match(input)\n *   switch (kind) {\n *     case \"circle\":\n *       return `Circle with radius ${shape.radius}`\n *     case \"rectangle\":\n *       return `Rectangle with width ${shape.width} and height ${shape.height}`\n *    }\n * }\n *\n * const ExhaustiveShape = Variant({\n *   circle: Schema.struct({ radius: Schema.integer() }),\n *   rectangle: Schema.struct({ width: Schema.integer(), height: Schema.integer() }),\n *  _: Schema.dictionary({ value: Schema.unknown() })\n * })\n *\n * const exhastiveDemo = (input:unknown) => {\n *   const [kind, value] = Schema.match(input)\n *   switch (kind) {\n *     case \"circle\":\n *       return `Circle with radius ${shape.radius}`\n *     case \"rectangle\":\n *       return `Rectangle with width ${shape.width} and height ${shape.height}`\n *     case: \"_\":\n *       return `Unknown shape ${JSON.stringify(value)}`\n *    }\n * }\n * ```\n *\n * @template {Schema.VariantChoices} Choices\n * @template [In=unknown]\n * @param {Choices} variants\n * @returns {Schema.VariantSchema<Choices, In>}\n */\nconst variant = variants => new Variant(variants)\n\n/**\n * @param {string} message\n * @returns {{error: Schema.Error, ok?: undefined}}\n */\nconst error = message => ({ error: new SchemaError(message) })\n\nclass SchemaError extends _result_js__WEBPACK_IMPORTED_MODULE_1__.Failure {\n  get name() {\n    return 'SchemaError'\n  }\n  /* c8 ignore next 3 */\n  describe() {\n    return this.name\n  }\n}\n\nclass TypeError extends SchemaError {\n  /**\n   * @param {{expect:string, actual:unknown}} data\n   */\n  constructor({ expect, actual }) {\n    super()\n    this.expect = expect\n    this.actual = actual\n  }\n  get name() {\n    return 'TypeError'\n  }\n  describe() {\n    return `Expected value of type ${this.expect} instead got ${toString(\n      this.actual\n    )}`\n  }\n}\n\n/**\n * @param {object} data\n * @param {string} data.expect\n * @param {unknown} data.actual\n * @returns {{ error: Schema.Error }}\n */\nconst typeError = data => ({ error: new TypeError(data) })\n\n/**\n *\n * @param {unknown} value\n */\nconst toString = value => {\n  const type = typeof value\n  switch (type) {\n    case 'boolean':\n    case 'string':\n      return JSON.stringify(value)\n    // if these types we do not want JSON.stringify as it may mess things up\n    // eg turn NaN and Infinity to null\n    case 'bigint':\n      return `${value}n`\n    case 'number':\n    case 'symbol':\n    case 'undefined':\n      return String(value)\n    case 'object':\n      return value === null\n        ? 'null'\n        : Array.isArray(value)\n        ? 'array'\n        : Symbol.toStringTag in /** @type {object} */ (value)\n        ? value[Symbol.toStringTag]\n        : 'object'\n    default:\n      return type\n  }\n}\n\nclass LiteralError extends SchemaError {\n  /**\n   * @param {{\n   * expect:string|number|boolean|null\n   * actual:unknown\n   * }} data\n   */\n  constructor({ expect, actual }) {\n    super()\n    this.expect = expect\n    this.actual = actual\n  }\n  get name() {\n    return 'LiteralError'\n  }\n  describe() {\n    return `Expected literal ${toString(this.expect)} instead got ${toString(\n      this.actual\n    )}`\n  }\n}\n\nclass ElementError extends SchemaError {\n  /**\n   * @param {{at:number, cause:Schema.Error}} data\n   */\n  constructor({ at, cause }) {\n    super()\n    this.at = at\n    this.cause = cause\n  }\n  get name() {\n    return 'ElementError'\n  }\n  describe() {\n    return [\n      `Array contains invalid element at ${this.at}:`,\n      li(this.cause.message),\n    ].join('\\n')\n  }\n}\n\nclass FieldError extends SchemaError {\n  /**\n   * @param {{at:string, cause:Schema.Error}} data\n   */\n  constructor({ at, cause }) {\n    super()\n    this.at = at\n    this.cause = cause\n  }\n  get name() {\n    return 'FieldError'\n  }\n  describe() {\n    return [\n      `Object contains invalid field \"${this.at}\":`,\n      li(this.cause.message),\n    ].join('\\n')\n  }\n}\n\n/**\n * @param {object} options\n * @param {string|number} options.at\n * @param {Schema.Error} options.cause\n * @returns {{error: Schema.Error}}\n */\nconst memberError = ({ at, cause }) =>\n  typeof at === 'string'\n    ? { error: new FieldError({ at, cause }) }\n    : { error: new ElementError({ at, cause }) }\n\nclass UnionError extends SchemaError {\n  /**\n   * @param {{causes: Schema.Error[]}} data\n   */\n  constructor({ causes }) {\n    super()\n    this.causes = causes\n  }\n  get name() {\n    return 'UnionError'\n  }\n  describe() {\n    const { causes } = this\n    return [\n      `Value does not match any type of the union:`,\n      ...causes.map(cause => li(cause.message)),\n    ].join('\\n')\n  }\n}\n\nclass IntersectionError extends SchemaError {\n  /**\n   * @param {{causes: Schema.Error[]}} data\n   */\n  constructor({ causes }) {\n    super()\n    this.causes = causes\n  }\n  get name() {\n    return 'IntersectionError'\n  }\n  describe() {\n    const { causes } = this\n    return [\n      `Value does not match following types of the intersection:`,\n      ...causes.map(cause => li(cause.message)),\n    ].join('\\n')\n  }\n}\n\n/**\n * @param {string} message\n */\nconst indent = (message, indent = '  ') =>\n  `${indent}${message.split('\\n').join(`\\n${indent}`)}`\n\n/**\n * @param {string} message\n */\nconst li = message => indent(`- ${message}`)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/schema/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/schema/text.js":
/*!******************************************************!*\
  !*** ./node_modules/@ucanto/core/src/schema/text.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   read: () => (/* binding */ read),\n/* harmony export */   text: () => (/* binding */ text)\n/* harmony export */ });\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/schema.js\");\n\n\nconst schema = _schema_js__WEBPACK_IMPORTED_MODULE_0__.string()\n\n/**\n * @param {{pattern: RegExp}} [options]\n */\nconst match = options =>\n  options ? schema.refine(new Match(options.pattern)) : schema\n\nconst text = match\n\n/**\n * @param {unknown} input\n */\nconst read = input => schema.read(input)\n\n/**\n * @extends {Schema.API<string, string, RegExp>}\n */\nclass Match extends _schema_js__WEBPACK_IMPORTED_MODULE_0__.API {\n  /**\n   * @param {string} source\n   * @param {RegExp} pattern\n   */\n  readWith(source, pattern) {\n    if (!pattern.test(source)) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_0__.error(\n        `Expected to match ${pattern} but got \"${source}\" instead`\n      )\n    } else {\n      return { ok: source }\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEvdGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFDOztBQUVyQyxlQUFlLDhDQUFhOztBQUU1QjtBQUNBLFlBQVksa0JBQWtCO0FBQzlCO0FBQ087QUFDUDs7QUFFTzs7QUFFUDtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNPOztBQUVQO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esb0JBQW9CLDJDQUFVO0FBQzlCO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLDZDQUFZO0FBQ3pCLDZCQUE2QixTQUFTLFdBQVcsT0FBTztBQUN4RDtBQUNBLE1BQU07QUFDTixlQUFlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEvdGV4dC5qcz9mZWQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFNjaGVtYSBmcm9tICcuL3NjaGVtYS5qcydcblxuY29uc3Qgc2NoZW1hID0gU2NoZW1hLnN0cmluZygpXG5cbi8qKlxuICogQHBhcmFtIHt7cGF0dGVybjogUmVnRXhwfX0gW29wdGlvbnNdXG4gKi9cbmV4cG9ydCBjb25zdCBtYXRjaCA9IG9wdGlvbnMgPT5cbiAgb3B0aW9ucyA/IHNjaGVtYS5yZWZpbmUobmV3IE1hdGNoKG9wdGlvbnMucGF0dGVybikpIDogc2NoZW1hXG5cbmV4cG9ydCBjb25zdCB0ZXh0ID0gbWF0Y2hcblxuLyoqXG4gKiBAcGFyYW0ge3Vua25vd259IGlucHV0XG4gKi9cbmV4cG9ydCBjb25zdCByZWFkID0gaW5wdXQgPT4gc2NoZW1hLnJlYWQoaW5wdXQpXG5cbi8qKlxuICogQGV4dGVuZHMge1NjaGVtYS5BUEk8c3RyaW5nLCBzdHJpbmcsIFJlZ0V4cD59XG4gKi9cbmNsYXNzIE1hdGNoIGV4dGVuZHMgU2NoZW1hLkFQSSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlXG4gICAqIEBwYXJhbSB7UmVnRXhwfSBwYXR0ZXJuXG4gICAqL1xuICByZWFkV2l0aChzb3VyY2UsIHBhdHRlcm4pIHtcbiAgICBpZiAoIXBhdHRlcm4udGVzdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gU2NoZW1hLmVycm9yKFxuICAgICAgICBgRXhwZWN0ZWQgdG8gbWF0Y2ggJHtwYXR0ZXJufSBidXQgZ290IFwiJHtzb3VyY2V9XCIgaW5zdGVhZGBcbiAgICAgIClcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHsgb2s6IHNvdXJjZSB9XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/schema/text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/schema/type.js":
/*!******************************************************!*\
  !*** ./node_modules/@ucanto/core/src/schema/type.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/core/src/schema/uri.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ucanto/core/src/schema/uri.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   read: () => (/* binding */ read),\n/* harmony export */   uri: () => (/* binding */ uri)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ucanto/core/src/schema/schema.js\");\n\n\n\n/**\n * @template {API.Protocol} [P=API.Protocol]\n * @typedef {{protocol: P}} Options\n */\n\n/**\n * @template {Options} O\n * @extends {Schema.API<API.URI<O['protocol']>, unknown, Partial<O>>}\n */\nclass URISchema extends _schema_js__WEBPACK_IMPORTED_MODULE_1__.API {\n  /**\n   * @param {unknown} input\n   * @param {Partial<O>} options\n   * @returns {Schema.ReadResult<API.URI<O['protocol']>>}\n   */\n  readWith(input, { protocol } = {}) {\n    if (typeof input !== 'string' && !(input instanceof URL)) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_1__.error(\n        `Expected URI but got ${input === null ? 'null' : typeof input}`\n      )\n    }\n\n    try {\n      const url = new URL(String(input))\n      if (protocol != null && url.protocol !== protocol) {\n        return _schema_js__WEBPACK_IMPORTED_MODULE_1__.error(`Expected ${protocol} URI instead got ${url.href}`)\n      } else {\n        return { ok: /** @type {API.URI<O['protocol']>} */ (url.href) }\n      }\n    } catch (_) {\n      return _schema_js__WEBPACK_IMPORTED_MODULE_1__.error(`Invalid URI`)\n    }\n  }\n}\n\nconst schema = new URISchema({})\n\n/**\n * @returns {Schema.Schema<API.URI, unknown>}\n */\nconst uri = () => schema\n\n/**\n * @param {unknown} input\n */\nconst read = input => schema.read(input)\n\n/**\n * @template {API.Protocol} P\n * @template {Options<P>} O\n * @param {O} options\n * @returns {Schema.Schema<API.URI<O['protocol']>, unknown>}\n */\nconst match = options => new URISchema(options)\n\n/**\n * @template {string} [Scheme=string]\n * @param {`${Scheme}:${string}`} input\n */\nconst from = input =>\n  /** @type {API.URI<`${Scheme}:`>} */ (schema.from(input))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9jb3JlL3NyYy9zY2hlbWEvdXJpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF3QztBQUNIOztBQUVyQztBQUNBLGNBQWMsY0FBYztBQUM1QixjQUFjLGNBQWM7QUFDNUI7O0FBRUE7QUFDQSxjQUFjLFNBQVM7QUFDdkIsYUFBYTtBQUNiO0FBQ0Esd0JBQXdCLDJDQUFVO0FBQ2xDO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCLGFBQWEsWUFBWTtBQUN6QixlQUFlO0FBQ2Y7QUFDQSxvQkFBb0IsV0FBVyxJQUFJO0FBQ25DO0FBQ0EsYUFBYSw2Q0FBWTtBQUN6QixnQ0FBZ0MsdUNBQXVDO0FBQ3ZFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2Q0FBWSxhQUFhLFVBQVUsa0JBQWtCLFNBQVM7QUFDN0UsUUFBUTtBQUNSLGlCQUFpQixlQUFlLHdCQUF3QjtBQUN4RDtBQUNBLE1BQU07QUFDTixhQUFhLDZDQUFZO0FBQ3pCO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0I7O0FBRS9CO0FBQ0EsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDTzs7QUFFUDtBQUNBLGNBQWMsY0FBYztBQUM1QixjQUFjLFlBQVk7QUFDMUIsV0FBVyxHQUFHO0FBQ2QsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQSxjQUFjLFFBQVE7QUFDdEIsV0FBVyxHQUFHLE9BQU8sR0FBRyxPQUFPLEdBQUc7QUFDbEM7QUFDTztBQUNQLGFBQWEsV0FBVyxPQUFPLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL2NvcmUvc3JjL3NjaGVtYS91cmkuanM/NzJmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBUEkgZnJvbSAnQHVjYW50by9pbnRlcmZhY2UnXG5pbXBvcnQgKiBhcyBTY2hlbWEgZnJvbSAnLi9zY2hlbWEuanMnXG5cbi8qKlxuICogQHRlbXBsYXRlIHtBUEkuUHJvdG9jb2x9IFtQPUFQSS5Qcm90b2NvbF1cbiAqIEB0eXBlZGVmIHt7cHJvdG9jb2w6IFB9fSBPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAdGVtcGxhdGUge09wdGlvbnN9IE9cbiAqIEBleHRlbmRzIHtTY2hlbWEuQVBJPEFQSS5VUkk8T1sncHJvdG9jb2wnXT4sIHVua25vd24sIFBhcnRpYWw8Tz4+fVxuICovXG5jbGFzcyBVUklTY2hlbWEgZXh0ZW5kcyBTY2hlbWEuQVBJIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7dW5rbm93bn0gaW5wdXRcbiAgICogQHBhcmFtIHtQYXJ0aWFsPE8+fSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtTY2hlbWEuUmVhZFJlc3VsdDxBUEkuVVJJPE9bJ3Byb3RvY29sJ10+Pn1cbiAgICovXG4gIHJlYWRXaXRoKGlucHV0LCB7IHByb3RvY29sIH0gPSB7fSkge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnICYmICEoaW5wdXQgaW5zdGFuY2VvZiBVUkwpKSB7XG4gICAgICByZXR1cm4gU2NoZW1hLmVycm9yKFxuICAgICAgICBgRXhwZWN0ZWQgVVJJIGJ1dCBnb3QgJHtpbnB1dCA9PT0gbnVsbCA/ICdudWxsJyA6IHR5cGVvZiBpbnB1dH1gXG4gICAgICApXG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoU3RyaW5nKGlucHV0KSlcbiAgICAgIGlmIChwcm90b2NvbCAhPSBudWxsICYmIHVybC5wcm90b2NvbCAhPT0gcHJvdG9jb2wpIHtcbiAgICAgICAgcmV0dXJuIFNjaGVtYS5lcnJvcihgRXhwZWN0ZWQgJHtwcm90b2NvbH0gVVJJIGluc3RlYWQgZ290ICR7dXJsLmhyZWZ9YClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7IG9rOiAvKiogQHR5cGUge0FQSS5VUkk8T1sncHJvdG9jb2wnXT59ICovICh1cmwuaHJlZikgfVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgIHJldHVybiBTY2hlbWEuZXJyb3IoYEludmFsaWQgVVJJYClcbiAgICB9XG4gIH1cbn1cblxuY29uc3Qgc2NoZW1hID0gbmV3IFVSSVNjaGVtYSh7fSlcblxuLyoqXG4gKiBAcmV0dXJucyB7U2NoZW1hLlNjaGVtYTxBUEkuVVJJLCB1bmtub3duPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHVyaSA9ICgpID0+IHNjaGVtYVxuXG4vKipcbiAqIEBwYXJhbSB7dW5rbm93bn0gaW5wdXRcbiAqL1xuZXhwb3J0IGNvbnN0IHJlYWQgPSBpbnB1dCA9PiBzY2hlbWEucmVhZChpbnB1dClcblxuLyoqXG4gKiBAdGVtcGxhdGUge0FQSS5Qcm90b2NvbH0gUFxuICogQHRlbXBsYXRlIHtPcHRpb25zPFA+fSBPXG4gKiBAcGFyYW0ge099IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtTY2hlbWEuU2NoZW1hPEFQSS5VUkk8T1sncHJvdG9jb2wnXT4sIHVua25vd24+fVxuICovXG5leHBvcnQgY29uc3QgbWF0Y2ggPSBvcHRpb25zID0+IG5ldyBVUklTY2hlbWEob3B0aW9ucylcblxuLyoqXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gW1NjaGVtZT1zdHJpbmddXG4gKiBAcGFyYW0ge2Ake1NjaGVtZX06JHtzdHJpbmd9YH0gaW5wdXRcbiAqL1xuZXhwb3J0IGNvbnN0IGZyb20gPSBpbnB1dCA9PlxuICAvKiogQHR5cGUge0FQSS5VUkk8YCR7U2NoZW1lfTpgPn0gKi8gKHNjaGVtYS5mcm9tKGlucHV0KSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/core/src/schema/uri.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/interface/src/lib.js":
/*!***************************************************!*\
  !*** ./node_modules/@ucanto/interface/src/lib.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base32.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base32.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFvQztBQUM3QixlQUFlLGlEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQixpREFBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLGtCQUFrQixpREFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSx1QkFBdUIsaURBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLGlEQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLDBCQUEwQixpREFBTztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxnQkFBZ0IsaURBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzMi5qcz8wNTg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2InLFxuICAgIG5hbWU6ICdiYXNlMzInLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0InLFxuICAgIG5hbWU6ICdiYXNlMzJ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWQnLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdDJyxcbiAgICBuYW1lOiAnYmFzZTMycGFkdXBwZXInLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dicsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1QnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXhwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ6ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnaCcsXG4gICAgbmFtZTogJ2Jhc2UzMnonLFxuICAgIGFscGhhYmV0OiAneWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjknLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base36.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base36.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGVBQWUsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQiwrQ0FBSztBQUNoQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzNi5qcz8yZTMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzYgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnaycsXG4gICAgbmFtZTogJ2Jhc2UzNicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzZ1cHBlciA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdLJyxcbiAgICBuYW1lOiAnYmFzZTM2dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMzYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base58.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base58.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGtCQUFrQiwrQ0FBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLCtDQUFLO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vcHJpbmNpcGFsL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzP2M2NWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgICBwcmVmaXg6ICd6JyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gICAgbmFtZTogJ2Jhc2U1OGZsaWNrcicsXG4gICAgcHJlZml4OiAnWicsXG4gICAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNTguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base64.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base64.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'm',\n    name: 'base64',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'M',\n    name: 'base64pad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'u',\n    name: 'base64url',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'U',\n    name: 'base64urlpad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n    bitsPerChar: 6\n});\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vcHJpbmNpcGFsL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTY0LmpzP2NiYzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTY0ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnbScsXG4gICAgbmFtZTogJ2Jhc2U2NCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJyxcbiAgICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnTScsXG4gICAgbmFtZTogJ2Jhc2U2NHBhZCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPScsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ3UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmwnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXycsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybHBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmxwYWQnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXz0nLFxuICAgIGJpdHNQZXJDaGFyOiA2XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/interface.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/interface.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanM/ZmIyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlIGVuY29kZXJzIC8gZGVjb2RlcnMganVzdCBiYXNlIGVuY29kZSAvIGRlY29kZSBiZXR3ZWVuIGJpbmFyeSBhbmRcbi8vIHRleHR1YWwgcmVwcmVzZW50YXRpb24uIFRoZXkgYXJlIHVuYXdhcmUgb2YgbXVsdGliYXNlLlxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/block/interface.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/block/interface.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ibG9jay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jsb2NrL2ludGVyZmFjZS5qcz85NjM2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bytes.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bytes.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixvQkFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2J5dGVzLmpzP2I3NWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVtcHR5ID0gbmV3IFVpbnQ4QXJyYXkoMCk7XG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoZCkge1xuICAgIHJldHVybiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChoZXgpIHtcbiAgICBjb25zdCBoZXhlcyA9IGhleC5tYXRjaCgvLi4vZyk7XG4gICAgcmV0dXJuIGhleGVzICE9IG51bGwgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhYSwgYmIpIHtcbiAgICBpZiAoYWEgPT09IGJiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoYWEuYnl0ZUxlbmd0aCAhPT0gYmIuYnl0ZUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGlpID0gMDsgaWkgPCBhYS5ieXRlTGVuZ3RoOyBpaSsrKSB7XG4gICAgICAgIGlmIChhYVtpaV0gIT09IGJiW2lpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvZXJjZShvKSB7XG4gICAgaWYgKG8gaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIG8uY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKSB7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH1cbiAgICBpZiAobyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvKTtcbiAgICB9XG4gICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhvKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0JpbmFyeShvKSB7XG4gICAgcmV0dXJuIG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcobyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbVN0cmluZyhzdHIpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYikge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/cid.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/cid.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/codecs/interface.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzPzQ2N2MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/digest.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkQ7QUFDcEI7QUFDdkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHVCQUF1QixzREFBcUI7QUFDNUMsc0NBQXNDLHNEQUFxQjtBQUMzRDtBQUNBLElBQUksZ0RBQWU7QUFDbkIsSUFBSSxnREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQixpREFBTTtBQUN4QiwrQkFBK0IsOENBQWE7QUFDNUMsaUNBQWlDLDhDQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9kaWdlc3QuanM/ODY3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UsIGVxdWFscyBhcyBlcXVhbEJ5dGVzIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgdmFyaW50IGZyb20gJy4uL3ZhcmludC5qcyc7XG4vKipcbiAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgICBjb25zdCBzaXplT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGNvZGUpO1xuICAgIGNvbnN0IGRpZ2VzdE9mZnNldCA9IHNpemVPZmZzZXQgKyB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoc2l6ZSk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgYnl0ZXMsIDApO1xuICAgIHZhcmludC5lbmNvZGVUbyhzaXplLCBieXRlcywgc2l6ZU9mZnNldCk7XG4gICAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKTtcbn1cbi8qKlxuICogVHVybnMgYnl0ZXMgcmVwcmVzZW50YXRpb24gb2YgbXVsdGloYXNoIGRpZ2VzdCBpbnRvIGFuIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKG11bHRpaGFzaCkge1xuICAgIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gICAgY29uc3QgW2NvZGUsIHNpemVPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcyk7XG4gICAgY29uc3QgW3NpemUsIGRpZ2VzdE9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQpKTtcbiAgICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgICBpZiAoZGlnZXN0LmJ5dGVMZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBkYXRhID0gYjtcbiAgICAgICAgcmV0dXJuIChhLmNvZGUgPT09IGRhdGEuY29kZSAmJlxuICAgICAgICAgICAgYS5zaXplID09PSBkYXRhLnNpemUgJiZcbiAgICAgICAgICAgIGRhdGEuYnl0ZXMgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmXG4gICAgICAgICAgICBlcXVhbEJ5dGVzKGEuYnl0ZXMsIGRhdGEuYnl0ZXMpKTtcbiAgICB9XG59XG4vKipcbiAqIFJlcHJlc2VudHMgYSBtdWx0aWhhc2ggZGlnZXN0IHdoaWNoIGNhcnJpZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlXG4gKiBoYXNoaW5nIGFsZ29yaXRobSBhbmQgYW4gYWN0dWFsIGhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgICBjb2RlO1xuICAgIHNpemU7XG4gICAgZGlnZXN0O1xuICAgIGJ5dGVzO1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBkaWdlc3Q7XG4gICAgICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgICB9XG59XG4vKipcbiAqIFVzZWQgdG8gY2hlY2sgdGhhdCB0aGUgcGFzc2VkIG11bHRpaGFzaCBoYXMgdGhlIHBhc3NlZCBjb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNDb2RlKGRpZ2VzdCwgY29kZSkge1xuICAgIHJldHVybiBkaWdlc3QuY29kZSA9PT0gY29kZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpZ2VzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaGFzaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUN0QztBQUNPLGdCQUFnQixzREFBc0Q7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RkFBNkYscUJBQXFCO0FBQ2xIO0FBQ0E7QUFDQSwwRkFBMEYscUJBQXFCO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGtCQUFrQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSxXQUFXLDhDQUFhO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9oYXNoZXIuanM/OWIwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSCA9IDIwO1xuZXhwb3J0IGZ1bmN0aW9uIGZyb20oeyBuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoIH0pIHtcbiAgICByZXR1cm4gbmV3IEhhc2hlcihuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoKTtcbn1cbi8qKlxuICogSGFzaGVyIHJlcHJlc2VudHMgYSBoYXNoaW5nIGFsZ29yaXRobSBpbXBsZW1lbnRhdGlvbiB0aGF0IHByb2R1Y2VzIGFzXG4gKiBgTXVsdGloYXNoRGlnZXN0YC5cbiAqL1xuZXhwb3J0IGNsYXNzIEhhc2hlciB7XG4gICAgbmFtZTtcbiAgICBjb2RlO1xuICAgIGVuY29kZTtcbiAgICBtaW5EaWdlc3RMZW5ndGg7XG4gICAgbWF4RGlnZXN0TGVuZ3RoO1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5lbmNvZGUgPSBlbmNvZGU7XG4gICAgICAgIHRoaXMubWluRGlnZXN0TGVuZ3RoID0gbWluRGlnZXN0TGVuZ3RoID8/IERFRkFVTFRfTUlOX0RJR0VTVF9MRU5HVEg7XG4gICAgICAgIHRoaXMubWF4RGlnZXN0TGVuZ3RoID0gbWF4RGlnZXN0TGVuZ3RoO1xuICAgIH1cbiAgICBkaWdlc3QoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnM/LnRydW5jYXRlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnRydW5jYXRlIDwgdGhpcy5taW5EaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWluRGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubWF4RGlnZXN0TGVuZ3RoICE9IG51bGwgJiYgb3B0aW9ucy50cnVuY2F0ZSA+IHRoaXMubWF4RGlnZXN0TGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHRydW5jYXRlIG9wdGlvbiwgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHt0aGlzLm1heERpZ2VzdExlbmd0aH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmVuY29kZShpbnB1dCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVEaWdlc3QocmVzdWx0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQudGhlbihkaWdlc3QgPT4gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgdGhpcy5jb2RlLCBvcHRpb25zPy50cnVuY2F0ZSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgICAgICB9XG4gICAgfVxufVxuLyoqXG4gKiBDcmVhdGUgYSBEaWdlc3QgZnJvbSB0aGUgcGFzc2VkIHVpbnQ4YXJyYXkgYW5kIGNvZGUsIG9wdGlvbmFsbHkgdHJ1bmNhdGluZyBpdFxuICogZmlyc3QuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURpZ2VzdChkaWdlc3QsIGNvZGUsIHRydW5jYXRlKSB7XG4gICAgaWYgKHRydW5jYXRlICE9IG51bGwgJiYgdHJ1bmNhdGUgIT09IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmICh0cnVuY2F0ZSA+IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke2RpZ2VzdC5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIGRpZ2VzdCA9IGRpZ2VzdC5zdWJhcnJheSgwLCB0cnVuY2F0ZSk7XG4gICAgfVxuICAgIHJldHVybiBEaWdlc3QuY3JlYXRlKGNvZGUsIGRpZ2VzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/interface.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pbnRlcmZhY2UuanM/NmQyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjIE11bHRpaGFzaFxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE1BQU07QUFDbEI7QUFDQSxZQUFZLFNBQVM7QUFDckI7QUFDQSwrQkFBK0IsZ0JBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0Esb0NBQW9DLHNCQUFzQjtBQUMxRDtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxtQ0FBbUM7QUFDbkU7QUFDQTtBQUNBLGdDQUFnQyxtREFBbUQ7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw2QkFBNkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0Esa0RBQWtELGdCQUFnQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsc0NBQXNDLHNCQUFzQjtBQUM1RCxXQUFXLE1BQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw4QkFBOEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29DO0FBQ0w7QUFDYztBQUNBO0FBQ1A7QUFDdEM7QUFDK0I7QUFDZTtBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vcHJpbmNpcGFsL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW5kZXguanM/OGUxMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxuICpcbiAqIFRoaXMgbGlicmFyeSBkZWZpbmVzIGNvbW1vbiBpbnRlcmZhY2VzIGFuZCBsb3cgbGV2ZWwgYnVpbGRpbmcgYmxvY2tzIGZvciB2YXJpb3VzIGludGVycmVsYXRlZCBtdWx0aWZvcm1hdCB0ZWNobm9sb2dpZXMgKG11bHRpY29kZWMsIG11bHRpaGFzaCwgbXVsdGliYXNlLCBhbmQgQ0lEKS4gVGhleSBjYW4gYmUgdXNlZCB0byBpbXBsZW1lbnQgY3VzdG9tIGJhc2UgZW5jb2RlcnMgLyBkZWNvZGVycyAvIGNvZGVjcywgY29kZWMgZW5jb2RlcnMgL2RlY29kZXJzIGFuZCBtdWx0aWhhc2ggaGFzaGVycyB0aGF0IGNvbXBseSB0byB0aGUgaW50ZXJmYWNlIHRoYXQgbGF5ZXJzIGFib3ZlIGFzc3VtZS5cbiAqXG4gKiBUaGlzIGxpYnJhcnkgcHJvdmlkZXMgaW1wbGVtZW50YXRpb25zIGZvciBtb3N0IGJhc2ljcyBhbmQgbWFueSBvdGhlcnMgY2FuIGJlIGZvdW5kIGluIGxpbmtlZCByZXBvc2l0b3JpZXMuXG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCdcbiAqIGltcG9ydCAqIGFzIGpzb24gZnJvbSAnbXVsdGlmb3JtYXRzL2NvZGVjcy9qc29uJ1xuICogaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuICpcbiAqIGNvbnN0IGJ5dGVzID0ganNvbi5lbmNvZGUoeyBoZWxsbzogJ3dvcmxkJyB9KVxuICpcbiAqIGNvbnN0IGhhc2ggPSBhd2FpdCBzaGEyNTYuZGlnZXN0KGJ5dGVzKVxuICogY29uc3QgY2lkID0gQ0lELmNyZWF0ZSgxLCBqc29uLmNvZGUsIGhhc2gpXG4gKiAvLz4gQ0lEKGJhZ2FhaWVyYXNvcmRzNG5qY3RzNnZzN3F2ZGpmY3ZnbnVtZTRocW9oZjY1enNmZ3VwcnFwaHMzaWN3ZWEpXG4gKiBgYGBcbiAqXG4gKiAjIyBDcmVhdGluZyBCbG9ja3NcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBpbXBvcnQgKiBhcyBCbG9jayBmcm9tICdtdWx0aWZvcm1hdHMvYmxvY2snXG4gKiBpbXBvcnQgKiBhcyBjb2RlYyBmcm9tICdAaXBsZC9kYWctY2JvcidcbiAqIGltcG9ydCB7IHNoYTI1NiBhcyBoYXNoZXIgfSBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTInXG4gKlxuICogY29uc3QgdmFsdWUgPSB7IGhlbGxvOiAnd29ybGQnIH1cbiAqXG4gKiAvLyBlbmNvZGUgYSBibG9ja1xuICogbGV0IGJsb2NrID0gYXdhaXQgQmxvY2suZW5jb2RlKHsgdmFsdWUsIGNvZGVjLCBoYXNoZXIgfSlcbiAqXG4gKiBibG9jay52YWx1ZSAvLyB7IGhlbGxvOiAnd29ybGQnIH1cbiAqIGJsb2NrLmJ5dGVzIC8vIFVpbnQ4QXJyYXlcbiAqIGJsb2NrLmNpZCAgIC8vIENJRCgpIHcvIHNoYTItMjU2IGhhc2ggYWRkcmVzcyBhbmQgZGFnLWNib3IgY29kZWNcbiAqXG4gKiAvLyB5b3UgY2FuIGFsc28gZGVjb2RlIGJsb2NrcyBmcm9tIHRoZWlyIGJpbmFyeSBzdGF0ZVxuICogYmxvY2sgPSBhd2FpdCBCbG9jay5kZWNvZGUoeyBieXRlczogYmxvY2suYnl0ZXMsIGNvZGVjLCBoYXNoZXIgfSlcbiAqXG4gKiAvLyBpZiB5b3UgaGF2ZSB0aGUgY2lkIHlvdSBjYW4gYWxzbyB2ZXJpZnkgdGhlIGhhc2ggb24gZGVjb2RlXG4gKiBibG9jayA9IGF3YWl0IEJsb2NrLmNyZWF0ZSh7IGJ5dGVzOiBibG9jay5ieXRlcywgY2lkOiBibG9jay5jaWQsIGNvZGVjLCBoYXNoZXIgfSlcbiAqIGBgYFxuICpcbiAqICMjIE11bHRpYmFzZSBFbmNvZGVycyAvIERlY29kZXJzIC8gQ29kZWNzXG4gKlxuICogQ0lEcyBjYW4gYmUgc2VyaWFsaXplZCB0byBzdHJpbmcgcmVwcmVzZW50YXRpb24gdXNpbmcgbXVsdGliYXNlIGVuY29kZXJzIHRoYXQgaW1wbGVtZW50IFtgTXVsdGliYXNlRW5jb2RlcmBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9iYXNlcy9pbnRlcmZhY2UudHMpIGludGVyZmFjZS4gVGhpcyBsaWJyYXJ5IHByb3ZpZGVzIHF1aXRlIGEgZmV3IGltcGxlbWVudGF0aW9ucyB0aGF0IGNhbiBiZSBpbXBvcnRlZDpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBpbXBvcnQgeyBiYXNlNjQgfSBmcm9tIFwibXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U2NFwiXG4gKiBjaWQudG9TdHJpbmcoYmFzZTY0LmVuY29kZXIpXG4gKiAvLz4gJ21BWUFFRWlDVG9qbHhxUlRsNnN2d3FOSlJWTTJqQ2NQQnh5KzdtUlRVZkdEenkyZ1ZpQSdcbiAqIGBgYFxuICpcbiAqIFBhcnNpbmcgQ0lEIHN0cmluZyBzZXJpYWxpemVkIENJRHMgcmVxdWlyZXMgbXVsdGliYXNlIGRlY29kZXIgdGhhdCBpbXBsZW1lbnRzIFtgTXVsdGliYXNlRGVjb2RlcmBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9iYXNlcy9pbnRlcmZhY2UudHMpIGludGVyZmFjZS4gVGhpcyBsaWJyYXJ5IHByb3ZpZGVzIGEgZGVjb2RlciBmb3IgZXZlcnkgZW5jb2RlciBpdCBwcm92aWRlczpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBDSUQucGFyc2UoJ21BWUFFRWlDVG9qbHhxUlRsNnN2d3FOSlJWTTJqQ2NQQnh5KzdtUlRVZkdEenkyZ1ZpQScsIGJhc2U2NC5kZWNvZGVyKVxuICogLy8+IENJRChiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhKVxuICogYGBgXG4gKlxuICogRHVhbCBvZiBtdWx0aWJhc2UgZW5jb2RlciAmIGRlY29kZXIgaXMgZGVmaW5lZCBhcyBtdWx0aWJhc2UgY29kZWMgYW5kIGl0IGV4cG9zZXNcbiAqIHRoZW0gYXMgYGVuY29kZXJgIGFuZCBgZGVjb2RlcmAgcHJvcGVydGllcy4gRm9yIGFkZGVkIGNvbnZlbmllbmNlIGNvZGVjcyBhbHNvXG4gKiBpbXBsZW1lbnQgYE11bHRpYmFzZUVuY29kZXJgIGFuZCBgTXVsdGliYXNlRGVjb2RlcmAgaW50ZXJmYWNlcyBzbyB0aGV5IGNvdWxkIGJlXG4gKiB1c2VkIGFzIGVpdGhlciBvciBib3RoOlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGNpZC50b1N0cmluZyhiYXNlNjQpXG4gKiBDSUQucGFyc2UoY2lkLnRvU3RyaW5nKGJhc2U2NCksIGJhc2U2NClcbiAqIGBgYFxuICpcbiAqICoqTm90ZToqKiBDSUQgaW1wbGVtZW50YXRpb24gY29tZXMgYnVuZGxlZCB3aXRoIGBiYXNlMzJgIGFuZCBgYmFzZTU4YnRjYFxuICogbXVsdGliYXNlIGNvZGVjcyBzbyB0aGF0IENJRHMgY2FuIGJlIGJhc2Ugc2VyaWFsaXplZCB0byAodmVyc2lvbiBzcGVjaWZpYylcbiAqIGRlZmF1bHQgYmFzZSBlbmNvZGluZyBhbmQgcGFyc2VkIHdpdGhvdXQgaGF2aW5nIHRvIHN1cHBseSBiYXNlIGVuY29kZXJzL2RlY29kZXJzOlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGNvbnN0IHYxID0gQ0lELnBhcnNlKCdiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhJylcbiAqIHYxLnRvU3RyaW5nKClcbiAqIC8vPiAnYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYSdcbiAqXG4gKiBjb25zdCB2MCA9IENJRC5wYXJzZSgnUW1kZlRiQnFCUFE3Vk54WkVZRWoxNFZtUnVaQmtxRmJpd1Jlb2dKZ1MxelIxbicpXG4gKiB2MC50b1N0cmluZygpXG4gKiAvLz4gJ1FtZGZUYkJxQlBRN1ZOeFpFWUVqMTRWbVJ1WkJrcUZiaXdSZW9nSmdTMXpSMW4nXG4gKiB2MC50b1YxKCkudG9TdHJpbmcoKVxuICogLy8+ICdiYWZ5YmVpaGR3ZGNlZmdoNGRxa2p2Njd1emNtdzdvamVlNnhlZHpkZXRvanV6amV2dGVueHF1dnlrdSdcbiAqIGBgYFxuICpcbiAqICMjIE11bHRpY29kZWMgRW5jb2RlcnMgLyBEZWNvZGVycyAvIENvZGVjc1xuICpcbiAqIFRoaXMgbGlicmFyeSBkZWZpbmVzIFtgQmxvY2tFbmNvZGVyYCwgYEJsb2NrRGVjb2RlcmAgYW5kIGBCbG9ja0NvZGVjYCBpbnRlcmZhY2VzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvY29kZWNzL2ludGVyZmFjZS50cykuXG4gKiBDb2RlYyBpbXBsZW1lbnRhdGlvbnMgc2hvdWxkIGNvbmZvcm0gdG8gdGhlIGBCbG9ja0NvZGVjYCBpbnRlcmZhY2Ugd2hpY2ggaW1wbGVtZW50cyBib3RoIGBCbG9ja0VuY29kZXJgIGFuZCBgQmxvY2tEZWNvZGVyYC5cbiAqIEhlcmUgaXMgYW4gZXhhbXBsZSBpbXBsZW1lbnRhdGlvbiBvZiBKU09OIGBCbG9ja0NvZGVjYC5cbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBleHBvcnQgY29uc3QgeyBuYW1lLCBjb2RlLCBlbmNvZGUsIGRlY29kZSB9ID0ge1xuICogICBuYW1lOiAnanNvbicsXG4gKiAgIGNvZGU6IDB4MDIwMCxcbiAqICAgZW5jb2RlOiBqc29uID0+IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShKU09OLnN0cmluZ2lmeShqc29uKSksXG4gKiAgIGRlY29kZTogYnl0ZXMgPT4gSlNPTi5wYXJzZShuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYnl0ZXMpKVxuICogfVxuICogYGBgXG4gKlxuICogIyMgTXVsdGloYXNoIEhhc2hlcnNcbiAqXG4gKiBUaGlzIGxpYnJhcnkgZGVmaW5lcyBbYE11bHRpaGFzaEhhc2hlcmAgYW5kIGBNdWx0aWhhc2hEaWdlc3RgIGludGVyZmFjZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9oYXNoZXMvaW50ZXJmYWNlLnRzKSBhbmQgY29udmluaWVudCBmdW5jdGlvbiBmb3IgaW1wbGVtZW50aW5nIHRoZW06XG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0ICogYXMgaGFzaGVyIGZyb20gJ211bHRpZm9ybWF0cy9oYXNoZXMvaGFzaGVyJ1xuICpcbiAqIGNvbnN0IHNoYTI1NiA9IGhhc2hlci5mcm9tKHtcbiAqICAgLy8gQXMgcGVyIG11bHRpZm9ybWF0cyB0YWJsZVxuICogICAvLyBodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL211bHRpY29kZWMvYmxvYi9tYXN0ZXIvdGFibGUuY3N2I0w5XG4gKiAgIG5hbWU6ICdzaGEyLTI1NicsXG4gKiAgIGNvZGU6IDB4MTIsXG4gKlxuICogICBlbmNvZGU6IChpbnB1dCkgPT4gbmV3IFVpbnQ4QXJyYXkoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG4gKiB9KVxuICpcbiAqIGNvbnN0IGhhc2ggPSBhd2FpdCBzaGEyNTYuZGlnZXN0KGpzb24uZW5jb2RlKHsgaGVsbG86ICd3b3JsZCcgfSkpXG4gKiBDSUQuY3JlYXRlKDEsIGpzb24uY29kZSwgaGFzaClcbiAqXG4gKiAvLz4gQ0lEKGJhZ2FhaWVyYXNvcmRzNG5qY3RzNnZzN3F2ZGpmY3ZnbnVtZTRocW9oZjY1enNmZ3VwcnFwaHMzaWN3ZWEpXG4gKiBgYGBcbiAqXG4gKiAjIyBUcmF2ZXJzYWxcbiAqXG4gKiBUaGlzIGxpYnJhcnkgY29udGFpbnMgaGlnaGVyLW9yZGVyIGZ1bmN0aW9ucyBmb3IgdHJhdmVyc2luZyBncmFwaHMgb2YgZGF0YSBlYXNpbHkuXG4gKlxuICogYHdhbGsoKWAgd2Fsa3MgdGhyb3VnaCB0aGUgbGlua3MgaW4gZWFjaCBibG9jayBvZiBhIERBRyBjYWxsaW5nIGEgdXNlci1zdXBwbGllZCBsb2FkZXIgZnVuY3Rpb24gZm9yIGVhY2ggb25lLCBpbiBkZXB0aC1maXJzdCBvcmRlciB3aXRoIG5vIGR1cGxpY2F0ZSBibG9jayB2aXNpdHMuIFRoZSBsb2FkZXIgc2hvdWxkIHJldHVybiBhIGBCbG9ja2Agb2JqZWN0IGFuZCBjYW4gYmUgdXNlZCB0byBpbnNwZWN0IGFuZCBjb2xsZWN0IGJsb2NrIG9yZGVyaW5nIGZvciBhIGZ1bGwgREFHIHdhbGsuIFRoZSBsb2FkZXIgc2hvdWxkIGB0aHJvd2Agb24gZXJyb3IsIGFuZCByZXR1cm4gYG51bGxgIGlmIGEgYmxvY2sgc2hvdWxkIGJlIHNraXBwZWQgYnkgYHdhbGsoKWAuXG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0IHsgd2FsayB9IGZyb20gJ211bHRpZm9ybWF0cy90cmF2ZXJzYWwnXG4gKiBpbXBvcnQgKiBhcyBCbG9jayBmcm9tICdtdWx0aWZvcm1hdHMvYmxvY2snXG4gKiBpbXBvcnQgKiBhcyBjb2RlYyBmcm9tICdtdWx0aWZvcm1hdHMvY29kZWNzL2pzb24nXG4gKiBpbXBvcnQgeyBzaGEyNTYgYXMgaGFzaGVyIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuICpcbiAqIC8vIGJ1aWxkIGEgREFHIChhIHNpbmdsZSBibG9jayBmb3IgdGhpcyBzaW1wbGUgZXhhbXBsZSlcbiAqIGNvbnN0IHZhbHVlID0geyBoZWxsbzogJ3dvcmxkJyB9XG4gKiBjb25zdCBibG9jayA9IGF3YWl0IEJsb2NrLmVuY29kZSh7IHZhbHVlLCBjb2RlYywgaGFzaGVyIH0pXG4gKiBjb25zdCB7IGNpZCB9ID0gYmxvY2tcbiAqIGNvbnNvbGUubG9nKGNpZClcbiAqIC8vPiBDSUQoYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYSlcbiAqXG4gKiAvLyBjcmVhdGUgYSBsb2FkZXIgZnVuY3Rpb24gdGhhdCBhbHNvIGNvbGxlY3RzIENJRHMgb2YgYmxvY2tzIGluXG4gKiAvLyB0aGVpciB0cmF2ZXJzYWwgb3JkZXJcbiAqIGNvbnN0IGxvYWQgPSAoY2lkLCBibG9ja3MpID0+IGFzeW5jIChjaWQpID0+IHtcbiAqICAgLy8gZmV0Y2ggYSBibG9jayB1c2luZyBpdHMgY2lkXG4gKiAgIC8vIGUuZy46IGNvbnN0IGJsb2NrID0gYXdhaXQgZmV0Y2hCbG9ja0J5Q0lEKGNpZClcbiAqICAgYmxvY2tzLnB1c2goY2lkKVxuICogICByZXR1cm4gYmxvY2tcbiAqIH1cbiAqXG4gKiAvLyBjb2xsZWN0IGJsb2NrcyBpbiB0aGlzIERBRyBzdGFydGluZyBmcm9tIHRoZSByb290IGBjaWRgXG4gKiBjb25zdCBibG9ja3MgPSBbXVxuICogYXdhaXQgd2Fsayh7IGNpZCwgbG9hZDogbG9hZChjaWQsIGJsb2NrcykgfSlcbiAqXG4gKiBjb25zb2xlLmxvZyhibG9ja3MpXG4gKiAvLz4gW0NJRChiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhKV1cbiAqIGBgYFxuICpcbiAqICMjIExlZ2FjeSBpbnRlcmZhY2VcbiAqXG4gKiBbYGJsb2NrY29kZWMtdG8taXBsZC1mb3JtYXRgXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1ibG9ja2NvZGVjLXRvLWlwbGQtZm9ybWF0KSBjb252ZXJ0cyBhIG11bHRpZm9ybWF0cyBbYEJsb2NrQ29kZWNgXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvY29kZWNzL2ludGVyZmFjZS50cyNMMjEpIGludG8gYW5cbiAqIFtgaW50ZXJmYWNlLWlwbGQtZm9ybWF0YF0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvaW50ZXJmYWNlLWlwbGQtZm9ybWF0KSBmb3IgdXNlIHdpdGggdGhlIFtgaXBsZGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9pcGxkL2lwbGQpIHBhY2thZ2UuIFRoaXMgY2FuIGhlbHAgYnJpZGdlIElQTEQgY29kZWNzIGltcGxlbWVudGVkIHVzaW5nIHRoZSBzdHJ1Y3R1cmUgYW5kIGludGVyZmFjZXMgZGVmaW5lZCBoZXJlIHRvIGV4aXN0aW5nIGNvZGUgdGhhdCBhc3N1bWVzLCBvciByZXF1aXJlcyBgaW50ZXJmYWNlLWlwbGQtZm9ybWF0YC4gVGhpcyBicmlkZ2UgYWxzbyBpbmNsdWRlcyB0aGUgcmVsZXZhbnQgVHlwZVNjcmlwdCBkZWZpbml0aW9ucy5cbiAqXG4gKiAjIyBJbXBsZW1lbnRhdGlvbnNcbiAqXG4gKiBCeSBkZWZhdWx0LCBubyBiYXNlIGVuY29kaW5ncyAob3RoZXIgdGhhbiBiYXNlMzIgJiBiYXNlNThidGMpLCBoYXNoIGZ1bmN0aW9ucyxcbiAqIG9yIGNvZGVjIGltcGxlbWVudGF0aW9ucyBhcmUgZXhwb3NlZCBieSBgbXVsdGlmb3JtYXRzYCwgeW91IG5lZWQgdG9cbiAqIGltcG9ydCB0aGUgb25lcyB5b3UgbmVlZCB5b3Vyc2VsZi5cbiAqXG4gKiAjIyMgTXVsdGliYXNlIGNvZGVjc1xuICpcbiAqIHwgYmFzZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGltcG9ydCAgICAgICAgICAgICAgICAgICAgICB8IHJlcG8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IGBiYXNlMTZgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2UxNmAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvYmFzZXMpIHxcbiAqIHwgYGJhc2UzMmAsIGBiYXNlMzJwYWRgLCBgYmFzZTMyaGV4YCwgYGJhc2UzMmhleHBhZGAsIGBiYXNlMzJ6YCB8IGBtdWx0aWZvcm1hdHMvYmFzZXMvYmFzZTMyYCB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9iYXNlcykgfFxuICogfCBgYmFzZTY0YCwgYGJhc2U2NHBhZGAsIGBiYXNlNjR1cmxgLCBgYmFzZTY0dXJscGFkYCAgICAgICAgICAgIHwgYG11bHRpZm9ybWF0cy9iYXNlcy9iYXNlNjRgIHwgW211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL3RyZWUvbWFzdGVyL2Jhc2VzKSB8XG4gKiB8IGBiYXNlNThidGNgLCBgYmFzZTU4ZmxpY2s0YCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U1OGAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvYmFzZXMpIHxcbiAqXG4gKiBPdGhlciAobGVzcyB1c2VmdWwpIGJhc2VzIGltcGxlbWVudGVkIGluIFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9iYXNlcykgaW5jbHVkZTogYGJhc2UyYCwgYGJhc2U4YCwgYGJhc2UxMGAsIGBiYXNlMzZgIGFuZCBgYmFzZTI1NmVtb2ppYC5cbiAqXG4gKiAjIyMgTXVsdGloYXNoIGhhc2hlcnNcbiAqXG4gKiB8IGhhc2hlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpbXBvcnQgICAgICAgICAgICAgICAgICAgICAgICAgfCByZXBvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHxcbiAqIHwgYHNoYTItMjU2YCwgYHNoYTItNTEyYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGBtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTJgICAgICB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvaGFzaGVzKSAgICAgICAgICAgICB8XG4gKiB8IGBzaGEzLTIyNGAsIGBzaGEzLTI1NmAsIGBzaGEzLTM4NGAsYHNoYTMtNTEyYCwgYHNoYWtlLTEyOGAsIGBzaGFrZS0yNTZgLCBga2VjY2FrLTIyNGAsIGBrZWNjYWstMjU2YCwgYGtlY2Nhay0zODRgLCBga2VjY2FrLTUxMmAgfCBgQG11bHRpZm9ybWF0cy9zaGEzYCAgICAgICAgICAgfCBbbXVsdGlmb3JtYXRzL2pzLXNoYTNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtc2hhMykgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCBgaWRlbnRpdHlgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYG11bHRpZm9ybWF0cy9oYXNoZXMvaWRlbnRpdHlgIHwgW211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL3RyZWUvbWFzdGVyL3NyYy9oYXNoZXMvaWRlbnRpdHkuanMpIHxcbiAqIHwgYG11cm11cjMtMTI4YCwgYG11cm11cjMtMzJgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGBAbXVsdGlmb3JtYXRzL211cm11cjNgICAgICAgICB8IFttdWx0aWZvcm1hdHMvanMtbXVybXVyM10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdXJtdXIzKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBibGFrZTJiLSpgLCBgYmxha2Uycy0qYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgQG11bHRpZm9ybWF0cy9ibGFrZTJgICAgICAgICAgfCBbbXVsdGlmb3JtYXRzL2pzLWJsYWtlMl0oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1ibGFrZTIpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICpcbiAqICMjIyBJUExEIGNvZGVjcyAobXVsdGljb2RlYylcbiAqXG4gKiB8IGNvZGVjICAgICAgfCBpbXBvcnQgICAgICAgICAgICAgICAgICAgICB8IHJlcG8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IC0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IGByYXdgICAgICAgfCBgbXVsdGlmb3JtYXRzL2NvZGVjcy9yYXdgICB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvY29kZWNzKSB8XG4gKiB8IGBqc29uYCAgICAgfCBgbXVsdGlmb3JtYXRzL2NvZGVjcy9qc29uYCB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvY29kZWNzKSB8XG4gKiB8IGBkYWctY2JvcmAgfCBgQGlwbGQvZGFnLWNib3JgICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1jYm9yXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1kYWctY2JvcikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctanNvbmAgfCBgQGlwbGQvZGFnLWpzb25gICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1qc29uXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1kYWctanNvbikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctcGJgICAgfCBgQGlwbGQvZGFnLXBiYCAgICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1wYl0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvanMtZGFnLXBiKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctam9zZWAgfCBgZGFnLWpvc2VgICAgICAgICAgICAgICAgICB8IFtjZXJhbWljbmV0d29yay9qcy1kYWctam9zZV0oaHR0cHM6Ly9naXRodWIuY29tL2NlcmFtaWNuZXR3b3JrL2pzLWRhZy1qb3NlKSAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKi9cbmltcG9ydCAqIGFzIGJ5dGVzIGZyb20gJy4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnLi9jaWQuanMnO1xuaW1wb3J0ICogYXMgZGlnZXN0IGZyb20gJy4vaGFzaGVzL2RpZ2VzdC5qcyc7XG5pbXBvcnQgKiBhcyBoYXNoZXIgZnJvbSAnLi9oYXNoZXMvaGFzaGVyLmpzJztcbmltcG9ydCAqIGFzIHZhcmludCBmcm9tICcuL3ZhcmludC5qcyc7XG4vLyBUaGlzIHdheSBUUyB3aWxsIGFsc28gZXhwb3NlIGFsbCB0aGUgdHlwZXMgZnJvbSBtb2R1bGVcbmV4cG9ydCAqIGZyb20gJy4vaW50ZXJmYWNlLmpzJztcbmV4cG9ydCB7IENJRCwgaGFzaGVyLCBkaWdlc3QsIHZhcmludCwgYnl0ZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/interface.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/interface.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFDQTtBQUNGO0FBQ0M7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2ludGVyZmFjZS5qcz8xOTBiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYmFzZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaGFzaGVzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvZGVjcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9saW5rL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Jsb2NrL2ludGVyZmFjZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/link/interface.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/link/interface.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vcHJpbmNpcGFsL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanM/MzlmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/varint.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/varint.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92YXJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNqQztBQUNQLGlCQUFpQix5REFBTTtBQUN2QixrQkFBa0IseURBQU07QUFDeEI7QUFDTztBQUNQLElBQUkseURBQU07QUFDVjtBQUNBO0FBQ087QUFDUCxXQUFXLHlEQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZhcmludC5qcz8yY2Q4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAnLi92ZW5kb3IvdmFyaW50LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb2Zmc2V0ID0gMCkge1xuICAgIGNvbnN0IGNvZGUgPSB2YXJpbnQuZGVjb2RlKGRhdGEsIG9mZnNldCk7XG4gICAgcmV0dXJuIFtjb2RlLCB2YXJpbnQuZGVjb2RlLmJ5dGVzXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUbyhpbnQsIHRhcmdldCwgb2Zmc2V0ID0gMCkge1xuICAgIHZhcmludC5lbmNvZGUoaW50LCB0YXJnZXQsIG9mZnNldCk7XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGluZ0xlbmd0aChpbnQpIHtcbiAgICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGludCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/vendor/varint.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFlBQVksRUFBQztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vcHJpbmNpcGFsL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcz81N2VkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgZW5jb2RlXzEgPSBlbmNvZGU7XG52YXIgTVNCID0gMHg4MCwgUkVTVCA9IDB4N0YsIE1TQkFMTCA9IH5SRVNULCBJTlQgPSBNYXRoLnBvdygyLCAzMSk7XG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBudW1cbiAqIEBwYXJhbSB7bnVtYmVyW119IG91dFxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiBlbmNvZGUobnVtLCBvdXQsIG9mZnNldCkge1xuICAgIG91dCA9IG91dCB8fCBbXTtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcbiAgICB2YXIgb2xkT2Zmc2V0ID0gb2Zmc2V0O1xuICAgIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgICAgIG91dFtvZmZzZXQrK10gPSAobnVtICYgMHhGRikgfCBNU0I7XG4gICAgICAgIG51bSAvPSAxMjg7XG4gICAgfVxuICAgIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtID4+Pj0gNztcbiAgICB9XG4gICAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICAgIHJldHVybiBvdXQ7XG59XG52YXIgZGVjb2RlID0gcmVhZDtcbnZhciBNU0IkMSA9IDB4ODAsIFJFU1QkMSA9IDB4N0Y7XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nIHwgYW55W119IGJ1ZlxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiByZWFkKGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICAgIGRvIHtcbiAgICAgICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICAgICAgfVxuICAgICAgICBiID0gYnVmW2NvdW50ZXIrK107XG4gICAgICAgIHJlcyArPSBzaGlmdCA8IDI4XG4gICAgICAgICAgICA/IChiICYgUkVTVCQxKSA8PCBzaGlmdFxuICAgICAgICAgICAgOiAoYiAmIFJFU1QkMSkgKiBNYXRoLnBvdygyLCBzaGlmdCk7XG4gICAgICAgIHNoaWZ0ICs9IDc7XG4gICAgfSB3aGlsZSAoYiA+PSBNU0IkMSk7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHJlYWQuYnl0ZXMgPSBjb3VudGVyIC0gb2Zmc2V0O1xuICAgIHJldHVybiByZXM7XG59XG52YXIgTjEgPSBNYXRoLnBvdygyLCA3KTtcbnZhciBOMiA9IE1hdGgucG93KDIsIDE0KTtcbnZhciBOMyA9IE1hdGgucG93KDIsIDIxKTtcbnZhciBONCA9IE1hdGgucG93KDIsIDI4KTtcbnZhciBONSA9IE1hdGgucG93KDIsIDM1KTtcbnZhciBONiA9IE1hdGgucG93KDIsIDQyKTtcbnZhciBONyA9IE1hdGgucG93KDIsIDQ5KTtcbnZhciBOOCA9IE1hdGgucG93KDIsIDU2KTtcbnZhciBOOSA9IE1hdGgucG93KDIsIDYzKTtcbnZhciBsZW5ndGggPSBmdW5jdGlvbiAoLyoqIEB0eXBlIHtudW1iZXJ9ICovIHZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSA8IE4xID8gMVxuICAgICAgICA6IHZhbHVlIDwgTjIgPyAyXG4gICAgICAgICAgICA6IHZhbHVlIDwgTjMgPyAzXG4gICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE40ID8gNFxuICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjUgPyA1XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjYgPyA2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE43ID8gN1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjggPyA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjkgPyA5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAxMCk7XG59O1xudmFyIHZhcmludCA9IHtcbiAgICBlbmNvZGU6IGVuY29kZV8xLFxuICAgIGRlY29kZTogZGVjb2RlLFxuICAgIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFyaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/absentee.js":
/*!********************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/absentee.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-ucan/signature */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n/* harmony import */ var _ipld_dag_ucan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/dag-ucan */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/lib.js\");\n\n\n\n/**\n * @template {UCAN.DID} ID\n * @param {{id: ID }} id\n * @returns {UCAN.Signer<ID, Signature.NON_STANDARD>}\n */\nconst from = ({ id }) => new Absentee(id)\n\n/**\n * An absentee is a special type of signer that produces an absent signature,\n * which signals that verifier needs to verify authorization interactively.\n *\n * @template {UCAN.DID} ID\n * @implements {UCAN.Signer<ID, Signature.NON_STANDARD>}\n */\nclass Absentee {\n  /**\n   * @param {ID} id\n   */\n  constructor(id) {\n    this.id = id\n  }\n  did() {\n    return this.id\n  }\n  /* c8 ignore next 3 */\n  get signatureCode() {\n    return _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_0__.NON_STANDARD\n  }\n  get signatureAlgorithm() {\n    return ''\n  }\n  sign() {\n    return _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_0__.createNonStandard(\n      this.signatureAlgorithm,\n      new Uint8Array(0)\n    )\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL2Fic2VudGVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUNmOztBQUV0QztBQUNBLGNBQWMsVUFBVTtBQUN4QixZQUFZLFVBQVU7QUFDdEIsYUFBYTtBQUNiO0FBQ08sZ0JBQWdCLElBQUk7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLElBQUk7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrRUFBc0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdUVBQTJCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9zcmMvYWJzZW50ZWUuanM/OTQwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBTaWduYXR1cmUgZnJvbSAnQGlwbGQvZGFnLXVjYW4vc2lnbmF0dXJlJ1xuaW1wb3J0ICogYXMgVUNBTiBmcm9tICdAaXBsZC9kYWctdWNhbidcblxuLyoqXG4gKiBAdGVtcGxhdGUge1VDQU4uRElEfSBJRFxuICogQHBhcmFtIHt7aWQ6IElEIH19IGlkXG4gKiBAcmV0dXJucyB7VUNBTi5TaWduZXI8SUQsIFNpZ25hdHVyZS5OT05fU1RBTkRBUkQ+fVxuICovXG5leHBvcnQgY29uc3QgZnJvbSA9ICh7IGlkIH0pID0+IG5ldyBBYnNlbnRlZShpZClcblxuLyoqXG4gKiBBbiBhYnNlbnRlZSBpcyBhIHNwZWNpYWwgdHlwZSBvZiBzaWduZXIgdGhhdCBwcm9kdWNlcyBhbiBhYnNlbnQgc2lnbmF0dXJlLFxuICogd2hpY2ggc2lnbmFscyB0aGF0IHZlcmlmaWVyIG5lZWRzIHRvIHZlcmlmeSBhdXRob3JpemF0aW9uIGludGVyYWN0aXZlbHkuXG4gKlxuICogQHRlbXBsYXRlIHtVQ0FOLkRJRH0gSURcbiAqIEBpbXBsZW1lbnRzIHtVQ0FOLlNpZ25lcjxJRCwgU2lnbmF0dXJlLk5PTl9TVEFOREFSRD59XG4gKi9cbmNsYXNzIEFic2VudGVlIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7SUR9IGlkXG4gICAqL1xuICBjb25zdHJ1Y3RvcihpZCkge1xuICAgIHRoaXMuaWQgPSBpZFxuICB9XG4gIGRpZCgpIHtcbiAgICByZXR1cm4gdGhpcy5pZFxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgZ2V0IHNpZ25hdHVyZUNvZGUoKSB7XG4gICAgcmV0dXJuIFNpZ25hdHVyZS5OT05fU1RBTkRBUkRcbiAgfVxuICBnZXQgc2lnbmF0dXJlQWxnb3JpdGhtKCkge1xuICAgIHJldHVybiAnJ1xuICB9XG4gIHNpZ24oKSB7XG4gICAgcmV0dXJuIFNpZ25hdHVyZS5jcmVhdGVOb25TdGFuZGFyZChcbiAgICAgIHRoaXMuc2lnbmF0dXJlQWxnb3JpdGhtLFxuICAgICAgbmV3IFVpbnQ4QXJyYXkoMClcbiAgICApXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/absentee.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/ed25519.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/ed25519.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PUB_KEY_OFFSET: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.PUB_KEY_OFFSET),\n/* harmony export */   Signer: () => (/* reexport module object */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   Verifier: () => (/* reexport module object */ _ed25519_verifier_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   code: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.code),\n/* harmony export */   decode: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.decode),\n/* harmony export */   derive: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.derive),\n/* harmony export */   encode: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   format: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.format),\n/* harmony export */   from: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.from),\n/* harmony export */   generate: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.generate),\n/* harmony export */   name: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.name),\n/* harmony export */   or: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.or),\n/* harmony export */   parse: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.parse),\n/* harmony export */   signatureAlgorithm: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.signatureAlgorithm),\n/* harmony export */   signatureCode: () => (/* reexport safe */ _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__.signatureCode)\n/* harmony export */ });\n/* harmony import */ var _ed25519_signer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ed25519/signer.js */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519/signer.js\");\n/* harmony import */ var _ed25519_verifier_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ed25519/verifier.js */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519/verifier.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL2VkMjU1MTkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBbUM7QUFDYztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL2VkMjU1MTkuanM/MGVlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2VkMjU1MTkvc2lnbmVyLmpzJ1xuZXhwb3J0ICogYXMgVmVyaWZpZXIgZnJvbSAnLi9lZDI1NTE5L3ZlcmlmaWVyLmpzJ1xuZXhwb3J0ICogYXMgU2lnbmVyIGZyb20gJy4vZWQyNTUxOS9zaWduZXIuanMnXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/ed25519.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/ed25519/signer.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/ed25519/signer.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PUB_KEY_OFFSET: () => (/* binding */ PUB_KEY_OFFSET),\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   derive: () => (/* binding */ derive),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   generate: () => (/* binding */ generate),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   signatureAlgorithm: () => (/* binding */ signatureAlgorithm),\n/* harmony export */   signatureCode: () => (/* binding */ signatureCode)\n/* harmony export */ });\n/* harmony import */ var _noble_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/ed25519 */ \"(ssr)/./node_modules/@noble/ed25519/lib/esm/index.js\");\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/index.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type.js */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519/type.js\");\n/* harmony import */ var _verifier_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./verifier.js */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519/verifier.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ipld/dag-ucan/signature */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n/* harmony import */ var _signer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signer.js */ \"(ssr)/./node_modules/@ucanto/principal/src/signer.js\");\n\n\n\n\n\n\n\n\n\nconst code = 0x1300\nconst name = _verifier_js__WEBPACK_IMPORTED_MODULE_3__.name\n\n/** @type {'EdDSA'} */\nconst signatureAlgorithm = _verifier_js__WEBPACK_IMPORTED_MODULE_3__.signatureAlgorithm\nconst signatureCode = _verifier_js__WEBPACK_IMPORTED_MODULE_3__.signatureCode\n\nconst PRIVATE_TAG_SIZE = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(code)\nconst PUBLIC_TAG_SIZE = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(_verifier_js__WEBPACK_IMPORTED_MODULE_3__.code)\nconst KEY_SIZE = 32\nconst SIZE = PRIVATE_TAG_SIZE + KEY_SIZE + PUBLIC_TAG_SIZE + KEY_SIZE\n\nconst PUB_KEY_OFFSET = PRIVATE_TAG_SIZE + KEY_SIZE\n\n/**\n * Generates new issuer by generating underlying ED25519 keypair.\n * @returns {Promise<API.EdSigner>}\n */\nconst generate = () => derive(_noble_ed25519__WEBPACK_IMPORTED_MODULE_0__.utils.randomPrivateKey())\n\n/**\n * Derives issuer from 32 byte long secret key.\n * @param {Uint8Array} secret\n * @returns {Promise<API.EdSigner>}\n */\nconst derive = async secret => {\n  if (secret.byteLength !== KEY_SIZE) {\n    throw new Error(\n      `Expected Uint8Array with byteLength of ${KEY_SIZE} instead not ${secret.byteLength}`\n    )\n  }\n\n  const publicKey = await _noble_ed25519__WEBPACK_IMPORTED_MODULE_0__.getPublicKey(secret)\n  const signer = new Ed25519Signer(SIZE)\n\n  multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodeTo(code, signer, 0)\n  signer.set(secret, PRIVATE_TAG_SIZE)\n\n  multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodeTo(_verifier_js__WEBPACK_IMPORTED_MODULE_3__.code, signer, PRIVATE_TAG_SIZE + KEY_SIZE)\n  signer.set(publicKey, PRIVATE_TAG_SIZE + KEY_SIZE + PUBLIC_TAG_SIZE)\n\n  return signer\n}\n\n/**\n * @param {API.SignerArchive<API.DID, typeof signatureCode>} archive\n * @returns {API.EdSigner}\n */\nconst from = ({ id, keys }) => {\n  if (id.startsWith('did:key:')) {\n    const key = keys[/** @type {API.DIDKey} */ (id)]\n    if (key instanceof Uint8Array) {\n      return decode(key)\n    }\n  }\n  throw new TypeError(`Unsupported archive format`)\n}\n\n/**\n * @template {API.SignerImporter} O\n * @param {O} other\n */\nconst or = other => _signer_js__WEBPACK_IMPORTED_MODULE_6__.or({ from }, other)\n\n/**\n * @param {Uint8Array} bytes\n * @returns {API.EdSigner}\n */\nconst decode = bytes => {\n  if (bytes.byteLength !== SIZE) {\n    throw new Error(\n      `Expected Uint8Array with byteLength of ${SIZE} instead not ${bytes.byteLength}`\n    )\n  }\n\n  {\n    const [keyCode] = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.decode(bytes)\n    if (keyCode !== code) {\n      throw new Error(`Given bytes must be a multiformat with ${code} tag`)\n    }\n  }\n\n  {\n    const [code] = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.decode(bytes.subarray(PUB_KEY_OFFSET))\n    if (code !== _verifier_js__WEBPACK_IMPORTED_MODULE_3__.code) {\n      throw new Error(\n        `Given bytes must contain public key in multiformats with ${_verifier_js__WEBPACK_IMPORTED_MODULE_3__.code} tag`\n      )\n    }\n  }\n\n  return new Ed25519Signer(bytes)\n}\n\n/**\n * @param {API.EdSigner} signer\n * @return {API.ByteView<API.EdSigner & CryptoKeyPair>}\n */\nconst encode = signer => signer.encode()\n\n/**\n * @template {string} Prefix\n * @param {API.EdSigner} signer\n * @param {API.MultibaseEncoder<Prefix>} [encoder]\n */\nconst format = (signer, encoder) =>\n  (encoder || multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_4__.base64pad).encode(encode(signer))\n\n/**\n * @template {string} Prefix\n * @param {string} principal\n * @param {API.MultibaseDecoder<Prefix>} [decoder]\n * @returns {API.EdSigner}\n */\nconst parse = (principal, decoder) =>\n  decode((decoder || multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_4__.base64pad).decode(principal))\n\n/**\n * @implements {API.EdSigner}\n */\nclass Ed25519Signer extends Uint8Array {\n  /** @type {typeof code} */\n  get code() {\n    return code\n  }\n  get signer() {\n    return this\n  }\n  /** @type {API.EdVerifier} */\n  get verifier() {\n    const bytes = new Uint8Array(this.buffer, PRIVATE_TAG_SIZE + KEY_SIZE)\n    const verifier = _verifier_js__WEBPACK_IMPORTED_MODULE_3__.decode(bytes)\n\n    Object.defineProperties(this, {\n      verifier: {\n        value: verifier,\n      },\n    })\n\n    return verifier\n  }\n\n  /**\n   * Raw public key without multiformat code.\n   */\n  get secret() {\n    const secret = new Uint8Array(this.buffer, PRIVATE_TAG_SIZE, KEY_SIZE)\n    Object.defineProperties(this, {\n      secret: {\n        value: secret,\n      },\n    })\n\n    return secret\n  }\n\n  /**\n   * DID of this principal in `did:key` format.\n   */\n  did() {\n    return this.verifier.did()\n  }\n\n  toDIDKey() {\n    return this.verifier.toDIDKey()\n  }\n\n  /**\n   * @template {API.DID} ID\n   * @param {ID} id\n   * @returns {API.Signer<ID, typeof Signature.EdDSA>}\n   */\n  withDID(id) {\n    return _signer_js__WEBPACK_IMPORTED_MODULE_6__.withDID(this, id)\n  }\n\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   * @returns {Promise<API.SignatureView<T, typeof Signature.EdDSA>>}\n   */\n  async sign(payload) {\n    const raw = await _noble_ed25519__WEBPACK_IMPORTED_MODULE_0__.sign(payload, this.secret)\n\n    return _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_5__.create(this.signatureCode, raw)\n  }\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   * @param {API.Signature<T, typeof this.signatureCode>} signature\n   */\n\n  verify(payload, signature) {\n    return this.verifier.verify(payload, signature)\n  }\n\n  get signatureAlgorithm() {\n    return signatureAlgorithm\n  }\n  get signatureCode() {\n    return _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_5__.EdDSA\n  }\n\n  encode() {\n    return this\n  }\n\n  toArchive() {\n    const id = this.did()\n    return {\n      id,\n      keys: { [id]: this.encode() },\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/ed25519/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/ed25519/type.js":
/*!************************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/ed25519/type.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/ed25519/verifier.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/ed25519/verifier.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   signatureAlgorithm: () => (/* binding */ signatureAlgorithm),\n/* harmony export */   signatureCode: () => (/* binding */ signatureCode)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _noble_ed25519__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/ed25519 */ \"(ssr)/./node_modules/@noble/ed25519/lib/esm/index.js\");\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/index.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type.js */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519/type.js\");\n/* harmony import */ var _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ipld/dag-ucan/signature */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _verifier_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../verifier.js */ \"(ssr)/./node_modules/@ucanto/principal/src/verifier.js\");\n\n\n\n\n\n\n\n\n/** @type {API.EdVerifier['code']} */\nconst code = 0xed\nconst name = 'Ed25519'\n\n/** @type {API.SigAlg} */\nconst signatureCode = _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_4__.EdDSA\nconst signatureAlgorithm = 'EdDSA'\nconst PUBLIC_TAG_SIZE = multiformats__WEBPACK_IMPORTED_MODULE_2__.varint.encodingLength(code)\nconst SIZE = 32 + PUBLIC_TAG_SIZE\n\n/**\n * @typedef {API.EdVerifier} EdVerifier\n */\n\n/**\n * Parses `did:key:` string as a VerifyingPrincipal.\n *\n * @param {API.DID|string} did\n * @returns {API.Verifier<API.DID, typeof signatureCode>}\n */\nconst parse = did => decode(_ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__.parse(did))\n\n/**\n * Takes ed25519 public key tagged with `0xed` multiformat code and creates a\n * corresponding `Principal` that can be used to verify signatures.\n *\n * @param {Uint8Array} bytes\n * @returns {API.EdVerifier}\n */\nconst decode = bytes => {\n  const [algorithm] = multiformats__WEBPACK_IMPORTED_MODULE_2__.varint.decode(bytes)\n  if (algorithm !== code) {\n    throw new RangeError(\n      `Unsupported key algorithm with multicode 0x${code.toString(16)}`\n    )\n  } else if (bytes.byteLength !== SIZE) {\n    throw new RangeError(\n      `Expected Uint8Array with byteLength ${SIZE}, instead got Uint8Array with byteLength ${bytes.byteLength}`\n    )\n  } else {\n    return new Ed25519Verifier(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  }\n}\n\n/**\n * Formats given Principal into `did:key:` format.\n *\n * @param {API.Principal<API.DID>} principal\n */\nconst format = principal => _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__.format(principal)\n\n/**\n * Encodes given Principal by tagging it's ed25519 public key with `0xed`\n * multiformat code.\n *\n * @param {API.Principal<API.DID<\"key\">>} principal\n */\nconst encode = principal => _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_0__.encode(principal)\n\n/**\n * @implements {API.EdVerifier}\n */\nclass Ed25519Verifier extends Uint8Array {\n  /** @type {typeof code} */\n  get code() {\n    return code\n  }\n  /** @type {typeof signatureCode} */\n  get signatureCode() {\n    return signatureCode\n  }\n  /** @type {typeof signatureAlgorithm} */\n  get signatureAlgorithm() {\n    return signatureAlgorithm\n  }\n  /**\n   * Raw public key without a multiformat code.\n   *\n   * @readonly\n   */\n  get publicKey() {\n    const key = new Uint8Array(this.buffer, this.byteOffset + PUBLIC_TAG_SIZE)\n    Object.defineProperties(this, {\n      publicKey: {\n        value: key,\n      },\n    })\n    return key\n  }\n  /**\n   * DID of the Principal in `did:key` format.\n   * @returns {API.DID<\"key\">}\n   */\n  did() {\n    return `did:key:${multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_5__.base58btc.encode(this)}`\n  }\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   * @param {API.Signature<T, Signature.EdDSA>} signature\n   * @returns {API.Await<boolean>}\n   */\n  verify(payload, signature) {\n    return (\n      signature.code === signatureCode &&\n      _noble_ed25519__WEBPACK_IMPORTED_MODULE_1__.verify(signature.raw, payload, this.publicKey)\n    )\n  }\n\n  /**\n   * @template {API.DID} ID\n   * @param {ID} id\n   * @returns {API.Verifier<ID, typeof signatureCode>}\n   */\n  withDID(id) {\n    return _verifier_js__WEBPACK_IMPORTED_MODULE_6__.withDID(this, id)\n  }\n\n  toDIDKey() {\n    return this.did()\n  }\n}\n\n/**\n * @param {API.PrincipalParser} other\n */\nconst or = other => _verifier_js__WEBPACK_IMPORTED_MODULE_6__.or({ parse }, other)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL2VkMjU1MTkvdmVyaWZpZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QztBQUNBO0FBQ0o7QUFDTDtBQUNxQjtBQUNBO0FBQ1g7O0FBRTFDLFdBQVcsd0JBQXdCO0FBQzVCO0FBQ0E7O0FBRVAsV0FBVyxZQUFZO0FBQ2hCLHNCQUFzQiwyREFBZTtBQUNyQztBQUNQLHdCQUF3QiwrREFBcUI7QUFDN0M7O0FBRUE7QUFDQSxhQUFhLGdCQUFnQjtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixhQUFhO0FBQ2I7QUFDTyw0QkFBNEIscURBQVM7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNPO0FBQ1Asc0JBQXNCLHVEQUFhO0FBQ25DO0FBQ0E7QUFDQSxvREFBb0Qsa0JBQWtCO0FBQ3RFO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsNkNBQTZDLEtBQUssMkNBQTJDLGlCQUFpQjtBQUM5RztBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3QkFBd0I7QUFDbkM7QUFDTyw0QkFBNEIsc0RBQVU7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywrQkFBK0I7QUFDMUM7QUFDTyw0QkFBNEIsc0RBQVU7O0FBRTdDO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxhQUFhLGFBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsYUFBYSwyQkFBMkI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxzQkFBc0IsZ0VBQVMsY0FBYztBQUM3QztBQUNBO0FBQ0E7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QixhQUFhLG1DQUFtQztBQUNoRCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLGtEQUFjO0FBQ3BCO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QixhQUFhLElBQUk7QUFDakIsZUFBZTtBQUNmO0FBQ0E7QUFDQSxXQUFXLGlEQUFnQjtBQUMzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDO0FBQ08sb0JBQW9CLDRDQUFXLEdBQUcsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vcHJpbmNpcGFsL3NyYy9lZDI1NTE5L3ZlcmlmaWVyLmpzP2M5NmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRElEIGZyb20gJ0BpcGxkL2RhZy11Y2FuL2RpZCdcbmltcG9ydCAqIGFzIEVEMjU1MTkgZnJvbSAnQG5vYmxlL2VkMjU1MTknXG5pbXBvcnQgeyB2YXJpbnQgfSBmcm9tICdtdWx0aWZvcm1hdHMnXG5pbXBvcnQgKiBhcyBBUEkgZnJvbSAnLi90eXBlLmpzJ1xuaW1wb3J0ICogYXMgU2lnbmF0dXJlIGZyb20gJ0BpcGxkL2RhZy11Y2FuL3NpZ25hdHVyZSdcbmltcG9ydCB7IGJhc2U1OGJ0YyB9IGZyb20gJ211bHRpZm9ybWF0cy9iYXNlcy9iYXNlNTgnXG5pbXBvcnQgKiBhcyBWZXJpZmllciBmcm9tICcuLi92ZXJpZmllci5qcydcblxuLyoqIEB0eXBlIHtBUEkuRWRWZXJpZmllclsnY29kZSddfSAqL1xuZXhwb3J0IGNvbnN0IGNvZGUgPSAweGVkXG5leHBvcnQgY29uc3QgbmFtZSA9ICdFZDI1NTE5J1xuXG4vKiogQHR5cGUge0FQSS5TaWdBbGd9ICovXG5leHBvcnQgY29uc3Qgc2lnbmF0dXJlQ29kZSA9IFNpZ25hdHVyZS5FZERTQVxuZXhwb3J0IGNvbnN0IHNpZ25hdHVyZUFsZ29yaXRobSA9ICdFZERTQSdcbmNvbnN0IFBVQkxJQ19UQUdfU0laRSA9IHZhcmludC5lbmNvZGluZ0xlbmd0aChjb2RlKVxuY29uc3QgU0laRSA9IDMyICsgUFVCTElDX1RBR19TSVpFXG5cbi8qKlxuICogQHR5cGVkZWYge0FQSS5FZFZlcmlmaWVyfSBFZFZlcmlmaWVyXG4gKi9cblxuLyoqXG4gKiBQYXJzZXMgYGRpZDprZXk6YCBzdHJpbmcgYXMgYSBWZXJpZnlpbmdQcmluY2lwYWwuXG4gKlxuICogQHBhcmFtIHtBUEkuRElEfHN0cmluZ30gZGlkXG4gKiBAcmV0dXJucyB7QVBJLlZlcmlmaWVyPEFQSS5ESUQsIHR5cGVvZiBzaWduYXR1cmVDb2RlPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHBhcnNlID0gZGlkID0+IGRlY29kZShESUQucGFyc2UoZGlkKSlcblxuLyoqXG4gKiBUYWtlcyBlZDI1NTE5IHB1YmxpYyBrZXkgdGFnZ2VkIHdpdGggYDB4ZWRgIG11bHRpZm9ybWF0IGNvZGUgYW5kIGNyZWF0ZXMgYVxuICogY29ycmVzcG9uZGluZyBgUHJpbmNpcGFsYCB0aGF0IGNhbiBiZSB1c2VkIHRvIHZlcmlmeSBzaWduYXR1cmVzLlxuICpcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm5zIHtBUEkuRWRWZXJpZmllcn1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IGJ5dGVzID0+IHtcbiAgY29uc3QgW2FsZ29yaXRobV0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKVxuICBpZiAoYWxnb3JpdGhtICE9PSBjb2RlKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXG4gICAgICBgVW5zdXBwb3J0ZWQga2V5IGFsZ29yaXRobSB3aXRoIG11bHRpY29kZSAweCR7Y29kZS50b1N0cmluZygxNil9YFxuICAgIClcbiAgfSBlbHNlIGlmIChieXRlcy5ieXRlTGVuZ3RoICE9PSBTSVpFKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXG4gICAgICBgRXhwZWN0ZWQgVWludDhBcnJheSB3aXRoIGJ5dGVMZW5ndGggJHtTSVpFfSwgaW5zdGVhZCBnb3QgVWludDhBcnJheSB3aXRoIGJ5dGVMZW5ndGggJHtieXRlcy5ieXRlTGVuZ3RofWBcbiAgICApXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG5ldyBFZDI1NTE5VmVyaWZpZXIoYnl0ZXMuYnVmZmVyLCBieXRlcy5ieXRlT2Zmc2V0LCBieXRlcy5ieXRlTGVuZ3RoKVxuICB9XG59XG5cbi8qKlxuICogRm9ybWF0cyBnaXZlbiBQcmluY2lwYWwgaW50byBgZGlkOmtleTpgIGZvcm1hdC5cbiAqXG4gKiBAcGFyYW0ge0FQSS5QcmluY2lwYWw8QVBJLkRJRD59IHByaW5jaXBhbFxuICovXG5leHBvcnQgY29uc3QgZm9ybWF0ID0gcHJpbmNpcGFsID0+IERJRC5mb3JtYXQocHJpbmNpcGFsKVxuXG4vKipcbiAqIEVuY29kZXMgZ2l2ZW4gUHJpbmNpcGFsIGJ5IHRhZ2dpbmcgaXQncyBlZDI1NTE5IHB1YmxpYyBrZXkgd2l0aCBgMHhlZGBcbiAqIG11bHRpZm9ybWF0IGNvZGUuXG4gKlxuICogQHBhcmFtIHtBUEkuUHJpbmNpcGFsPEFQSS5ESUQ8XCJrZXlcIj4+fSBwcmluY2lwYWxcbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IHByaW5jaXBhbCA9PiBESUQuZW5jb2RlKHByaW5jaXBhbClcblxuLyoqXG4gKiBAaW1wbGVtZW50cyB7QVBJLkVkVmVyaWZpZXJ9XG4gKi9cbmNsYXNzIEVkMjU1MTlWZXJpZmllciBleHRlbmRzIFVpbnQ4QXJyYXkge1xuICAvKiogQHR5cGUge3R5cGVvZiBjb2RlfSAqL1xuICBnZXQgY29kZSgpIHtcbiAgICByZXR1cm4gY29kZVxuICB9XG4gIC8qKiBAdHlwZSB7dHlwZW9mIHNpZ25hdHVyZUNvZGV9ICovXG4gIGdldCBzaWduYXR1cmVDb2RlKCkge1xuICAgIHJldHVybiBzaWduYXR1cmVDb2RlXG4gIH1cbiAgLyoqIEB0eXBlIHt0eXBlb2Ygc2lnbmF0dXJlQWxnb3JpdGhtfSAqL1xuICBnZXQgc2lnbmF0dXJlQWxnb3JpdGhtKCkge1xuICAgIHJldHVybiBzaWduYXR1cmVBbGdvcml0aG1cbiAgfVxuICAvKipcbiAgICogUmF3IHB1YmxpYyBrZXkgd2l0aG91dCBhIG11bHRpZm9ybWF0IGNvZGUuXG4gICAqXG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgZ2V0IHB1YmxpY0tleSgpIHtcbiAgICBjb25zdCBrZXkgPSBuZXcgVWludDhBcnJheSh0aGlzLmJ1ZmZlciwgdGhpcy5ieXRlT2Zmc2V0ICsgUFVCTElDX1RBR19TSVpFKVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICAgIHB1YmxpY0tleToge1xuICAgICAgICB2YWx1ZToga2V5LFxuICAgICAgfSxcbiAgICB9KVxuICAgIHJldHVybiBrZXlcbiAgfVxuICAvKipcbiAgICogRElEIG9mIHRoZSBQcmluY2lwYWwgaW4gYGRpZDprZXlgIGZvcm1hdC5cbiAgICogQHJldHVybnMge0FQSS5ESUQ8XCJrZXlcIj59XG4gICAqL1xuICBkaWQoKSB7XG4gICAgcmV0dXJuIGBkaWQ6a2V5OiR7YmFzZTU4YnRjLmVuY29kZSh0aGlzKX1gXG4gIH1cbiAgLyoqXG4gICAqIEB0ZW1wbGF0ZSBUXG4gICAqIEBwYXJhbSB7QVBJLkJ5dGVWaWV3PFQ+fSBwYXlsb2FkXG4gICAqIEBwYXJhbSB7QVBJLlNpZ25hdHVyZTxULCBTaWduYXR1cmUuRWREU0E+fSBzaWduYXR1cmVcbiAgICogQHJldHVybnMge0FQSS5Bd2FpdDxib29sZWFuPn1cbiAgICovXG4gIHZlcmlmeShwYXlsb2FkLCBzaWduYXR1cmUpIHtcbiAgICByZXR1cm4gKFxuICAgICAgc2lnbmF0dXJlLmNvZGUgPT09IHNpZ25hdHVyZUNvZGUgJiZcbiAgICAgIEVEMjU1MTkudmVyaWZ5KHNpZ25hdHVyZS5yYXcsIHBheWxvYWQsIHRoaXMucHVibGljS2V5KVxuICAgIClcbiAgfVxuXG4gIC8qKlxuICAgKiBAdGVtcGxhdGUge0FQSS5ESUR9IElEXG4gICAqIEBwYXJhbSB7SUR9IGlkXG4gICAqIEByZXR1cm5zIHtBUEkuVmVyaWZpZXI8SUQsIHR5cGVvZiBzaWduYXR1cmVDb2RlPn1cbiAgICovXG4gIHdpdGhESUQoaWQpIHtcbiAgICByZXR1cm4gVmVyaWZpZXIud2l0aERJRCh0aGlzLCBpZClcbiAgfVxuXG4gIHRvRElES2V5KCkge1xuICAgIHJldHVybiB0aGlzLmRpZCgpXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5QcmluY2lwYWxQYXJzZXJ9IG90aGVyXG4gKi9cbmV4cG9ydCBjb25zdCBvciA9IG90aGVyID0+IFZlcmlmaWVyLm9yKHsgcGFyc2UgfSwgb3RoZXIpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/ed25519/verifier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/lib.js":
/*!***************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/lib.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Absentee: () => (/* reexport module object */ _absentee_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   RSA: () => (/* reexport module object */ _rsa_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   Signer: () => (/* binding */ Signer),\n/* harmony export */   Verifier: () => (/* binding */ Verifier),\n/* harmony export */   decode: () => (/* reexport safe */ _multiformat_js__WEBPACK_IMPORTED_MODULE_3__.decode),\n/* harmony export */   ed25519: () => (/* reexport module object */ _ed25519_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   encodeTo: () => (/* reexport safe */ _multiformat_js__WEBPACK_IMPORTED_MODULE_3__.encodeTo),\n/* harmony export */   encodingLength: () => (/* reexport safe */ _multiformat_js__WEBPACK_IMPORTED_MODULE_3__.encodingLength),\n/* harmony export */   tagWith: () => (/* reexport safe */ _multiformat_js__WEBPACK_IMPORTED_MODULE_3__.tagWith),\n/* harmony export */   untagWith: () => (/* reexport safe */ _multiformat_js__WEBPACK_IMPORTED_MODULE_3__.untagWith)\n/* harmony export */ });\n/* harmony import */ var _ed25519_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ed25519.js */ \"(ssr)/./node_modules/@ucanto/principal/src/ed25519.js\");\n/* harmony import */ var _rsa_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rsa.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa.js\");\n/* harmony import */ var _absentee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./absentee.js */ \"(ssr)/./node_modules/@ucanto/principal/src/absentee.js\");\n/* harmony import */ var _multiformat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./multiformat.js */ \"(ssr)/./node_modules/@ucanto/principal/src/multiformat.js\");\n\n\n\n\nconst Verifier = _ed25519_js__WEBPACK_IMPORTED_MODULE_0__.Verifier.or(_rsa_js__WEBPACK_IMPORTED_MODULE_1__.Verifier)\nconst Signer = _ed25519_js__WEBPACK_IMPORTED_MODULE_0__.or(_rsa_js__WEBPACK_IMPORTED_MODULE_1__)\n\n// exports\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL2xpYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUF1QztBQUNSO0FBQ1U7QUFDVDtBQUN6QixpQkFBaUIsb0RBQW1CLENBQUMsNkNBQVk7QUFDakQsZUFBZSwyQ0FBVSxDQUFDLG9DQUFHOztBQUVwQztBQUNpQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vcHJpbmNpcGFsL3NyYy9saWIuanM/MjE2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBlZDI1NTE5IGZyb20gJy4vZWQyNTUxOS5qcydcbmltcG9ydCAqIGFzIFJTQSBmcm9tICcuL3JzYS5qcydcbmltcG9ydCAqIGFzIEFic2VudGVlIGZyb20gJy4vYWJzZW50ZWUuanMnXG5leHBvcnQgKiBmcm9tICcuL211bHRpZm9ybWF0LmpzJ1xuZXhwb3J0IGNvbnN0IFZlcmlmaWVyID0gZWQyNTUxOS5WZXJpZmllci5vcihSU0EuVmVyaWZpZXIpXG5leHBvcnQgY29uc3QgU2lnbmVyID0gZWQyNTUxOS5vcihSU0EpXG5cbi8vIGV4cG9ydHNcbmV4cG9ydCB7IGVkMjU1MTksIFJTQSwgQWJzZW50ZWUgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/multiformat.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/multiformat.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength),\n/* harmony export */   tagWith: () => (/* binding */ tagWith),\n/* harmony export */   untagWith: () => (/* binding */ untagWith)\n/* harmony export */ });\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/index.js\");\n\n\n/**\n *\n * @param {number} code\n * @param {Uint8Array} bytes\n */\nconst tagWith = (code, bytes) => {\n  const offset = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodingLength(code)\n  const multiformat = new Uint8Array(bytes.byteLength + offset)\n  multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodeTo(code, multiformat, 0)\n  multiformat.set(bytes, offset)\n\n  return multiformat\n}\n\n/**\n * @param {number} code\n * @param {Uint8Array} source\n * @param {number} byteOffset\n * @returns\n */\nconst untagWith = (code, source, byteOffset = 0) => {\n  const bytes = byteOffset !== 0 ? source.subarray(byteOffset) : source\n  const [tag, size] = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode(bytes)\n  if (tag !== code) {\n    throw new Error(\n      `Expected multiformat with 0x${code.toString(\n        16\n      )} tag instead got 0x${tag.toString(16)}`\n    )\n  } else {\n    return new Uint8Array(bytes.buffer, bytes.byteOffset + size)\n  }\n}\n\nconst encodingLength = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodingLength\nconst encodeTo = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.encodeTo\nconst decode = multiformats__WEBPACK_IMPORTED_MODULE_0__.varint.decode\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL211bHRpZm9ybWF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxQzs7QUFFckM7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFlBQVk7QUFDdkI7QUFDTztBQUNQLGlCQUFpQiwrREFBcUI7QUFDdEM7QUFDQSxFQUFFLHlEQUFlO0FBQ2pCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ087QUFDUDtBQUNBLHNCQUFzQix1REFBYTtBQUNuQztBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0EsU0FBUyxvQkFBb0IsaUJBQWlCO0FBQzlDO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFTyx1QkFBdUIsK0RBQXFCO0FBQzVDLGlCQUFpQix5REFBZTtBQUNoQyxlQUFlLHVEQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL211bHRpZm9ybWF0LmpzPzc2MjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmFyaW50IH0gZnJvbSAnbXVsdGlmb3JtYXRzJ1xuXG4vKipcbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gY29kZVxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICovXG5leHBvcnQgY29uc3QgdGFnV2l0aCA9IChjb2RlLCBieXRlcykgPT4ge1xuICBjb25zdCBvZmZzZXQgPSB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoY29kZSlcbiAgY29uc3QgbXVsdGlmb3JtYXQgPSBuZXcgVWludDhBcnJheShieXRlcy5ieXRlTGVuZ3RoICsgb2Zmc2V0KVxuICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgbXVsdGlmb3JtYXQsIDApXG4gIG11bHRpZm9ybWF0LnNldChieXRlcywgb2Zmc2V0KVxuXG4gIHJldHVybiBtdWx0aWZvcm1hdFxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb2RlXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IHNvdXJjZVxuICogQHBhcmFtIHtudW1iZXJ9IGJ5dGVPZmZzZXRcbiAqIEByZXR1cm5zXG4gKi9cbmV4cG9ydCBjb25zdCB1bnRhZ1dpdGggPSAoY29kZSwgc291cmNlLCBieXRlT2Zmc2V0ID0gMCkgPT4ge1xuICBjb25zdCBieXRlcyA9IGJ5dGVPZmZzZXQgIT09IDAgPyBzb3VyY2Uuc3ViYXJyYXkoYnl0ZU9mZnNldCkgOiBzb3VyY2VcbiAgY29uc3QgW3RhZywgc2l6ZV0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKVxuICBpZiAodGFnICE9PSBjb2RlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEV4cGVjdGVkIG11bHRpZm9ybWF0IHdpdGggMHgke2NvZGUudG9TdHJpbmcoXG4gICAgICAgIDE2XG4gICAgICApfSB0YWcgaW5zdGVhZCBnb3QgMHgke3RhZy50b1N0cmluZygxNil9YFxuICAgIClcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnl0ZXMuYnVmZmVyLCBieXRlcy5ieXRlT2Zmc2V0ICsgc2l6ZSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZW5jb2RpbmdMZW5ndGggPSB2YXJpbnQuZW5jb2RpbmdMZW5ndGhcbmV4cG9ydCBjb25zdCBlbmNvZGVUbyA9IHZhcmludC5lbmNvZGVUb1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IHZhcmludC5kZWNvZGVcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/multiformat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/rsa.js":
/*!***************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/rsa.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Verifier: () => (/* binding */ RSAVerifier),\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   generate: () => (/* binding */ generate),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   signatureAlgorithm: () => (/* binding */ signatureAlgorithm),\n/* harmony export */   signatureCode: () => (/* binding */ signatureCode)\n/* harmony export */ });\n/* harmony import */ var one_webcrypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! one-webcrypto */ \"(ssr)/./node_modules/one-webcrypto/node.mjs\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _rsa_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rsa/type.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/type.js\");\n/* harmony import */ var _ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ipld/dag-ucan/did */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _multiformat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./multiformat.js */ \"(ssr)/./node_modules/@ucanto/principal/src/multiformat.js\");\n/* harmony import */ var _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ipld/dag-ucan/signature */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n/* harmony import */ var _rsa_spki_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rsa/spki.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/spki.js\");\n/* harmony import */ var _rsa_pkcs8_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rsa/pkcs8.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/pkcs8.js\");\n/* harmony import */ var _rsa_private_key_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rsa/private-key.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/private-key.js\");\n/* harmony import */ var _rsa_public_key_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rsa/public-key.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/public-key.js\");\n/* harmony import */ var _verifier_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./verifier.js */ \"(ssr)/./node_modules/@ucanto/principal/src/verifier.js\");\n/* harmony import */ var _signer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./signer.js */ \"(ssr)/./node_modules/@ucanto/principal/src/signer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst name = 'RSA'\n\n/** @type {API.RSASigner['code']} */\nconst code = 0x1305\n\n/** @type {API.RSAVerifier['code']} */\nconst verifierCode = 0x1205\n\n/** @type {API.SigAlg} */\nconst signatureCode = _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_5__.RS256\nconst signatureAlgorithm = 'RS256'\n\nconst ALG = 'RSASSA-PKCS1-v1_5'\nconst HASH_ALG = 'SHA-256'\nconst KEY_SIZE = 2048\nconst SALT_LENGTH = 128\nconst IMPORT_PARAMS = {\n  name: ALG,\n  hash: { name: HASH_ALG },\n}\n\n/**\n * @param {object} options\n * @param {number} [options.size]\n * @param {boolean} [options.extractable]\n * @returns {Promise<API.RSASigner>}\n */\nconst generate = async ({\n  size = KEY_SIZE,\n  extractable = false,\n} = {}) => {\n  // We start by generate an RSA keypair using web crypto API.\n  const { publicKey, privateKey } = await one_webcrypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle.generateKey(\n    {\n      name: ALG,\n      modulusLength: size,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: HASH_ALG },\n    },\n\n    extractable,\n    ['sign', 'verify']\n  )\n\n  // Next we need to encode public key, because `RSAVerifier` uses it to\n  // for implementing a `did()` method. To do this we first export\n  // Subject Public Key Info (SPKI) using web crypto API.\n  const spki = await one_webcrypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle.exportKey('spki', publicKey)\n  // Then we extract public key from the SPKI and tag it with RSA public key\n  // multicode\n  const publicBytes = (0,_multiformat_js__WEBPACK_IMPORTED_MODULE_4__.tagWith)(verifierCode, _rsa_spki_js__WEBPACK_IMPORTED_MODULE_6__.decode(new Uint8Array(spki)))\n  // Now that we have publicKey and it's multiformat representation we can\n  // create a verifier.\n  const verifier = new RSAVerifier({ bytes: publicBytes, publicKey })\n\n  // If we generated non extractable key we just wrap actual keys and verifier\n  // in the RSASigner view.\n  if (!extractable) {\n    return new UnextractableRSASigner({\n      privateKey,\n      verifier,\n    })\n  }\n  // Otherwise we export key in Private Key Cryptography Standards (PKCS)\n  // format and extract a bytes corresponding to the private key, which\n  // we tag with RSA private key multiformat code. With both binary and actual\n  // key representation we create a RSASigner view.\n  // Please note that do key export flow during generation so that we can:\n  // 1. Guarantee that it will be exportable.\n  // 2. Make `export` method sync.\n  else {\n    const pkcs8 = await one_webcrypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle.exportKey('pkcs8', privateKey)\n    const bytes = (0,_multiformat_js__WEBPACK_IMPORTED_MODULE_4__.tagWith)(code, _rsa_pkcs8_js__WEBPACK_IMPORTED_MODULE_7__.decode(new Uint8Array(pkcs8)))\n    return new ExtractableRSASigner({\n      privateKey,\n      bytes,\n      verifier,\n    })\n  }\n}\n\n/**\n * @param {API.SignerArchive<API.DID, typeof signatureCode>} archive\n * @returns {API.RSASigner}\n */\nconst from = ({ id, keys }) => {\n  if (id.startsWith('did:key:')) {\n    const did = /** @type {API.DIDKey} */ (id)\n    const key = keys[did]\n    if (key instanceof Uint8Array) {\n      return decode(key)\n    } else {\n      return new UnextractableRSASigner({\n        privateKey: key,\n        verifier: RSAVerifier.parse(did),\n      })\n    }\n  } else {\n    throw new TypeError(\n      `RSA can not import from ${id} archive, try generic Signer instead`\n    )\n  }\n}\n\n/**\n * @template {API.SignerImporter} Other\n * @param {Other} other\n */\nconst or = other => _signer_js__WEBPACK_IMPORTED_MODULE_11__.or({ from }, other)\n\n/**\n * @param {EncodedSigner} bytes\n * @returns {API.RSASigner}\n */\nconst decode = bytes => {\n  // First we decode RSA key data from the private key with multicode tag.\n  const rsa = _rsa_private_key_js__WEBPACK_IMPORTED_MODULE_8__.decode((0,_multiformat_js__WEBPACK_IMPORTED_MODULE_4__.untagWith)(code, bytes))\n  // Then we encode RSA key data as public key with multicode tag.\n  const publicBytes = (0,_multiformat_js__WEBPACK_IMPORTED_MODULE_4__.tagWith)(verifierCode, _rsa_public_key_js__WEBPACK_IMPORTED_MODULE_9__.encode(rsa))\n\n  return new ExtractableRSASigner({\n    bytes,\n    privateKey: one_webcrypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle.importKey(\n      'pkcs8',\n      _rsa_pkcs8_js__WEBPACK_IMPORTED_MODULE_7__.encode((0,_multiformat_js__WEBPACK_IMPORTED_MODULE_4__.untagWith)(code, bytes)),\n      IMPORT_PARAMS,\n      true,\n      ['sign']\n    ),\n\n    verifier: RSAVerifier.decode(publicBytes),\n  })\n}\n\n/**\n * @implements {API.RSAVerifier}\n */\nclass RSAVerifier {\n  /**\n   * @param {object} options\n   * @param {API.Await<CryptoKey>} options.publicKey\n   * @param {API.ByteView<API.RSAVerifier>} options.bytes\n   */\n  constructor({ publicKey, bytes }) {\n    /** @private */\n    this.publicKey = publicKey\n    /** @private */\n    this.bytes = bytes\n  }\n\n  /**\n   * @template {API.DID} ID\n   * @param {ID} id\n   * @returns {API.Verifier<ID, typeof signatureCode>}\n   */\n  withDID(id) {\n    return _verifier_js__WEBPACK_IMPORTED_MODULE_10__.withDID(this, id)\n  }\n\n  toDIDKey() {\n    return this.did()\n  }\n\n  /**\n   * @param {API.ByteView<API.RSAVerifier>} bytes\n   * @returns {API.RSAVerifier}\n   */\n  static decode(bytes) {\n    return new this({\n      bytes,\n      publicKey: one_webcrypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle.importKey(\n        'spki',\n        _rsa_spki_js__WEBPACK_IMPORTED_MODULE_6__.encode((0,_multiformat_js__WEBPACK_IMPORTED_MODULE_4__.untagWith)(verifierCode, bytes)),\n        IMPORT_PARAMS,\n        true,\n        ['verify']\n      ),\n    })\n  }\n  /**\n   * @param {API.DIDKey} did\n   * @returns {API.RSAVerifier}\n   */\n  static parse(did) {\n    return RSAVerifier.decode(/** @type {Uint8Array} */ (_ipld_dag_ucan_did__WEBPACK_IMPORTED_MODULE_3__.parse(did)))\n  }\n\n  /**\n   * @param {API.PrincipalParser} other\n   */\n  static or(other) {\n    return _verifier_js__WEBPACK_IMPORTED_MODULE_10__.or(this, other)\n  }\n\n  /** @type {typeof verifierCode} */\n  get code() {\n    return verifierCode\n  }\n  /**\n   * @type {typeof signatureCode}\n   */\n  get signatureCode() {\n    return signatureCode\n  }\n  /**\n   * @type {typeof signatureAlgorithm}\n   */\n  get signatureAlgorithm() {\n    return signatureAlgorithm\n  }\n  /**\n   * DID of the Principal in `did:key` format.\n   * @returns {API.DID<\"key\">}\n   */\n  did() {\n    return `did:key:${multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__.base58btc.encode(this.bytes)}`\n  }\n\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   * @param {API.Signature<T, typeof this.signatureCode>} signature\n   * @returns {Promise<boolean>}\n   */\n  async verify(payload, signature) {\n    // if signature code does not match RS256 it's not signed by corresponding\n    // signer.\n    if (signature.code !== signatureCode) {\n      return false\n    }\n\n    return one_webcrypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle.verify(\n      { name: ALG, hash: { name: HASH_ALG } },\n      await this.publicKey,\n      signature.raw,\n      payload\n    )\n  }\n}\n\nconst RSAVerifier$ = /** @type {API.ComposedDIDParser} */ (RSAVerifier)\n\n\n/**\n * @typedef {API.ByteView<API.Signer<API.DID<'key'>, typeof signatureCode> & CryptoKey>} EncodedSigner\n */\n\nclass RSASigner {\n  /**\n   * @param {object} options\n   * @param {API.Await<CryptoKey>} options.privateKey\n   * @param {API.RSAVerifier} options.verifier\n   */\n  constructor({ privateKey, verifier }) {\n    /** @readonly */\n    this.verifier = verifier\n    /** @protected */\n    this.privateKey = privateKey\n  }\n  get signer() {\n    return this\n  }\n\n  /**\n   * @type {typeof code}\n   */\n  get code() {\n    return code\n  }\n  /**\n   * @type {typeof signatureCode}\n   */\n  get signatureCode() {\n    return signatureCode\n  }\n  /**\n   * @type {typeof signatureAlgorithm}\n   */\n  get signatureAlgorithm() {\n    return signatureAlgorithm\n  }\n\n  did() {\n    return this.verifier.did()\n  }\n\n  toDIDKey() {\n    return this.verifier.toDIDKey()\n  }\n\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   * @param {API.Signature<T, typeof this.signatureCode>} signature\n   */\n  verify(payload, signature) {\n    return this.verifier.verify(payload, signature)\n  }\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   * @returns {Promise<API.SignatureView<T, typeof signatureCode>>}\n   */\n  async sign(payload) {\n    const buffer = await one_webcrypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle.sign(\n      { name: ALG, saltLength: SALT_LENGTH },\n      await this.privateKey,\n      payload\n    )\n\n    return _ipld_dag_ucan_signature__WEBPACK_IMPORTED_MODULE_5__.create(signatureCode, new Uint8Array(buffer))\n  }\n}\n\n/**\n * @implements {API.RSASigner}\n */\nclass ExtractableRSASigner extends RSASigner {\n  /**\n   * @param {object} options\n   * @param {API.Await<CryptoKey>} options.privateKey\n   * @param {EncodedSigner} options.bytes\n   * @param {API.RSAVerifier} options.verifier\n   */\n  constructor(options) {\n    super(options)\n    this.bytes = options.bytes\n  }\n\n  /**\n   * @template {API.DID} ID\n   * @param {ID} id\n   * @returns {API.Signer<ID, typeof signatureCode>}\n   */\n  withDID(id) {\n    return _signer_js__WEBPACK_IMPORTED_MODULE_11__.withDID(this, id)\n  }\n\n  toArchive() {\n    const id = this.did()\n    return {\n      id,\n      keys: { [id]: this.bytes },\n    }\n  }\n}\n\n/**\n * @implements {API.RSASigner}\n */\nclass UnextractableRSASigner extends RSASigner {\n  /**\n   * @param {object} options\n   * @param {CryptoKey} options.privateKey\n   * @param {API.RSAVerifier} options.verifier\n   */\n  constructor(options) {\n    super(options)\n    this.privateKey = options.privateKey\n  }\n\n  /**\n   * @template {API.DID} ID\n   * @param {ID} id\n   * @returns {API.Signer<ID, typeof signatureCode>}\n   */\n  withDID(id) {\n    return _signer_js__WEBPACK_IMPORTED_MODULE_11__.withDID(this, id)\n  }\n\n  toArchive() {\n    const id = this.did()\n    return {\n      id,\n      keys: { [id]: this.privateKey },\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/rsa.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/rsa/asn1.js":
/*!********************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/rsa/asn1.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BITSTRING_TAG: () => (/* binding */ BITSTRING_TAG),\n/* harmony export */   INT_TAG: () => (/* binding */ INT_TAG),\n/* harmony export */   NULL_TAG: () => (/* binding */ NULL_TAG),\n/* harmony export */   OBJECT_TAG: () => (/* binding */ OBJECT_TAG),\n/* harmony export */   OCTET_STRING_TAG: () => (/* binding */ OCTET_STRING_TAG),\n/* harmony export */   SEQUENCE_TAG: () => (/* binding */ SEQUENCE_TAG),\n/* harmony export */   UNUSED_BIT_PAD: () => (/* binding */ UNUSED_BIT_PAD),\n/* harmony export */   encodeBitString: () => (/* binding */ encodeBitString),\n/* harmony export */   encodeDERLength: () => (/* binding */ encodeDERLength),\n/* harmony export */   encodeInt: () => (/* binding */ encodeInt),\n/* harmony export */   encodeOctetString: () => (/* binding */ encodeOctetString),\n/* harmony export */   encodeSequence: () => (/* binding */ encodeSequence),\n/* harmony export */   enterSequence: () => (/* binding */ enterSequence),\n/* harmony export */   into: () => (/* binding */ into),\n/* harmony export */   readBitString: () => (/* binding */ readBitString),\n/* harmony export */   readDERLength: () => (/* binding */ readDERLength),\n/* harmony export */   readInt: () => (/* binding */ readInt),\n/* harmony export */   readOctetString: () => (/* binding */ readOctetString),\n/* harmony export */   readSequence: () => (/* binding */ readSequence),\n/* harmony export */   readSequenceWith: () => (/* binding */ readSequenceWith),\n/* harmony export */   skip: () => (/* binding */ skip),\n/* harmony export */   skipInt: () => (/* binding */ skipInt),\n/* harmony export */   skipSequence: () => (/* binding */ skipSequence)\n/* harmony export */ });\n/**\n * ASN1 Tags as per https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nconst TAG_SIZE = 1\nconst INT_TAG = 0x02\nconst BITSTRING_TAG = 0x03\nconst OCTET_STRING_TAG = 0x04\nconst NULL_TAG = 0x05\nconst OBJECT_TAG = 0x06\nconst SEQUENCE_TAG = 0x30\n\nconst UNUSED_BIT_PAD = 0x00\n\n/**\n * @param {number} length\n * @returns {Uint8Array}\n */\nconst encodeDERLength = length => {\n  if (length <= 127) {\n    return new Uint8Array([length])\n  }\n\n  /** @type {number[]} */\n  const octets = []\n  while (length !== 0) {\n    octets.push(length & 0xff)\n    length = length >>> 8\n  }\n  octets.reverse()\n  return new Uint8Array([0x80 | (octets.length & 0xff), ...octets])\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {{number: number, consumed: number}}\n */\nconst readDERLength = (bytes, offset = 0) => {\n  if ((bytes[offset] & 0x80) === 0) {\n    return { number: bytes[offset], consumed: 1 }\n  }\n\n  const numberBytes = bytes[offset] & 0x7f\n  /* c8 ignore next 5 */\n  if (bytes.length < numberBytes + 1) {\n    throw new Error(\n      `ASN parsing error: Too few bytes. Expected encoded length's length to be at least ${numberBytes}`\n    )\n  }\n\n  let length = 0\n  for (let i = 0; i < numberBytes; i++) {\n    length = length << 8\n    length = length | bytes[offset + i + 1]\n  }\n\n  return { number: length, consumed: numberBytes + 1 }\n}\n\n/**\n * @param {Uint8Array} input\n * @param {number} expectedTag\n * @param {number} position\n * @returns {number}\n */\nconst skip = (input, expectedTag, position) => {\n  const parsed = into(input, expectedTag, position)\n  return parsed.position + parsed.length\n}\n\n/**\n * @param {Uint8Array} input\n * @param {number} expectedTag\n * @param {number} offset\n * @returns {{ position: number, length: number }}\n */\nconst into = (input, expectedTag, offset) => {\n  const actualTag = input[offset]\n  /* c8 ignore next 7 */\n  if (actualTag !== expectedTag) {\n    throw new Error(\n      `ASN parsing error: Expected tag 0x${expectedTag.toString(\n        16\n      )} at position ${offset}, but got 0x${actualTag.toString(16)}.`\n    )\n  }\n\n  // length\n  const length = readDERLength(input, offset + TAG_SIZE)\n  const position = offset + TAG_SIZE + length.consumed\n\n  // content\n  return { position, length: length.number }\n}\n\n/**\n * @param {Uint8Array} input\n */\nconst encodeBitString = input => {\n  // encode input length + 1 for unused bit pad\n  const length = encodeDERLength(input.byteLength + 1)\n  // allocate a buffer of desired size\n  const bytes = new Uint8Array(\n    TAG_SIZE + // ASN_BITSTRING_TAG\n      length.byteLength +\n      1 + // amount of unused bits at the end of our bitstring\n      input.byteLength\n  )\n\n  let byteOffset = 0\n  // write bytestring tag\n  bytes[byteOffset] = BITSTRING_TAG\n  byteOffset += TAG_SIZE\n\n  // write length of the bytestring\n  bytes.set(length, byteOffset)\n  byteOffset += length.byteLength\n\n  // write unused bits at the end of our bitstring\n  bytes[byteOffset] = UNUSED_BIT_PAD\n  byteOffset += 1\n\n  // write actual data into bitstring\n  bytes.set(input, byteOffset)\n\n  return bytes\n}\n\n/**\n * @param {Uint8Array} input\n */\nconst encodeOctetString = input => {\n  // encode input length\n  const length = encodeDERLength(input.byteLength)\n  // allocate a buffer of desired size\n  const bytes = new Uint8Array(TAG_SIZE + length.byteLength + input.byteLength)\n\n  let byteOffset = 0\n  // write octet string tag\n  bytes[byteOffset] = OCTET_STRING_TAG\n  byteOffset += TAG_SIZE\n\n  // write octet string length\n  bytes.set(length, byteOffset)\n  byteOffset += length.byteLength\n\n  // write actual data into bitstring\n  bytes.set(input, byteOffset)\n\n  return bytes\n}\n\n/**\n * @param {Uint8Array[]} sequence\n */\nconst encodeSequence = sequence => {\n  // calculate bytelength for all the parts\n  let byteLength = 0\n  for (const item of sequence) {\n    byteLength += item.byteLength\n  }\n\n  // encode sequence byte length\n  const length = encodeDERLength(byteLength)\n\n  // allocate the buffer to write sequence into\n  const bytes = new Uint8Array(TAG_SIZE + length.byteLength + byteLength)\n\n  let byteOffset = 0\n\n  // write the sequence tag\n  bytes[byteOffset] = SEQUENCE_TAG\n  byteOffset += TAG_SIZE\n\n  // write sequence length\n  bytes.set(length, byteOffset)\n  byteOffset += length.byteLength\n\n  // write each item in the sequence\n  for (const item of sequence) {\n    bytes.set(item, byteOffset)\n    byteOffset += item.byteLength\n  }\n\n  return bytes\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n */\nconst readSequence = (bytes, offset = 0) => {\n  const { position, length } = into(bytes, SEQUENCE_TAG, offset)\n\n  return new Uint8Array(bytes.buffer, bytes.byteOffset + position, length)\n}\n\n/**\n * @param {Uint8Array} input\n */\nconst encodeInt = input => {\n  const extra = input.byteLength === 0 || input[0] & 0x80 ? 1 : 0\n\n  // encode input length\n  const length = encodeDERLength(input.byteLength + extra)\n  // allocate a buffer of desired size\n  const bytes = new Uint8Array(\n    TAG_SIZE + // INT_TAG\n      length.byteLength +\n      input.byteLength +\n      extra\n  )\n\n  let byteOffset = 0\n  // write octet string tag\n  bytes[byteOffset] = INT_TAG\n  byteOffset += TAG_SIZE\n\n  // write int length\n  bytes.set(length, byteOffset)\n  byteOffset += length.byteLength\n\n  // add 0 if the most-significant bit is set\n  if (extra > 0) {\n    bytes[byteOffset] = UNUSED_BIT_PAD\n    byteOffset += extra\n  }\n\n  // write actual data into bitstring\n  bytes.set(input, byteOffset)\n\n  return bytes\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {number}\n */\n\nconst enterSequence = (bytes, offset = 0) =>\n  into(bytes, SEQUENCE_TAG, offset).position\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {number}\n */\nconst skipSequence = (bytes, offset = 0) =>\n  skip(bytes, SEQUENCE_TAG, offset)\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {number}\n */\nconst skipInt = (bytes, offset = 0) => skip(bytes, INT_TAG, offset)\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {Uint8Array}\n */\nconst readBitString = (bytes, offset = 0) => {\n  const { position, length } = into(bytes, BITSTRING_TAG, offset)\n  const tag = bytes[position]\n  /* c8 ignore next 5 */\n  if (tag !== UNUSED_BIT_PAD) {\n    throw new Error(\n      `Can not read bitstring, expected length to be multiple of 8, but got ${tag} unused bits in last byte.`\n    )\n  }\n\n  return new Uint8Array(\n    bytes.buffer,\n    bytes.byteOffset + position + 1,\n    length - 1\n  )\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} byteOffset\n * @returns {Uint8Array}\n */\nconst readInt = (bytes, byteOffset = 0) => {\n  const { position, length } = into(bytes, INT_TAG, byteOffset)\n  let delta = 0\n\n  // drop leading 0s\n  while (bytes[position + delta] === 0) {\n    delta++\n  }\n\n  return new Uint8Array(\n    bytes.buffer,\n    bytes.byteOffset + position + delta,\n    length - delta\n  )\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {Uint8Array}\n */\nconst readOctetString = (bytes, offset = 0) => {\n  const { position, length } = into(bytes, OCTET_STRING_TAG, offset)\n\n  return new Uint8Array(bytes.buffer, bytes.byteOffset + position, length)\n}\n\n/**\n * @typedef {(bytes:Uint8Array, offset:number) => Uint8Array} Reader\n * @param {[Reader, ...Reader[]]} readers\n * @param {Uint8Array} source\n * @param {number} byteOffset\n */\nconst readSequenceWith = (readers, source, byteOffset = 0) => {\n  const results = []\n  const sequence = readSequence(source, byteOffset)\n  let offset = 0\n  for (const read of readers) {\n    const chunk = read(sequence, offset)\n    results.push(chunk)\n    offset = chunk.byteOffset + chunk.byteLength - sequence.byteOffset\n  }\n  return results\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3JzYS9hc24xLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRVA7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLGNBQWM7QUFDZDtBQUNPO0FBQ1A7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRkFBMkYsWUFBWTtBQUN2RztBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBO0FBQ0E7O0FBRUEsV0FBVztBQUNYOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixlQUFlO0FBQ2Y7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0EsU0FBUyxjQUFjLE9BQU8sY0FBYyx1QkFBdUI7QUFDbkU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXO0FBQ1g7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsY0FBYztBQUN6QjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CO0FBQ087QUFDUCxVQUFVLG1CQUFtQjs7QUFFN0I7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiOztBQUVPO0FBQ1A7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPOztBQUVQO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQLFVBQVUsbUJBQW1CO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLEtBQUs7QUFDbkY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AsVUFBVSxtQkFBbUI7QUFDN0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQLFVBQVUsbUJBQW1COztBQUU3QjtBQUNBOztBQUVBO0FBQ0EsYUFBYSxpREFBaUQ7QUFDOUQsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9zcmMvcnNhL2FzbjEuanM/OTRhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFTTjEgVGFncyBhcyBwZXIgaHR0cHM6Ly9sdWNhLm50b3Aub3JnL1RlYWNoaW5nL0FwcHVudGkvYXNuMS5odG1sXG4gKi9cbmNvbnN0IFRBR19TSVpFID0gMVxuZXhwb3J0IGNvbnN0IElOVF9UQUcgPSAweDAyXG5leHBvcnQgY29uc3QgQklUU1RSSU5HX1RBRyA9IDB4MDNcbmV4cG9ydCBjb25zdCBPQ1RFVF9TVFJJTkdfVEFHID0gMHgwNFxuZXhwb3J0IGNvbnN0IE5VTExfVEFHID0gMHgwNVxuZXhwb3J0IGNvbnN0IE9CSkVDVF9UQUcgPSAweDA2XG5leHBvcnQgY29uc3QgU0VRVUVOQ0VfVEFHID0gMHgzMFxuXG5leHBvcnQgY29uc3QgVU5VU0VEX0JJVF9QQUQgPSAweDAwXG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGVERVJMZW5ndGggPSBsZW5ndGggPT4ge1xuICBpZiAobGVuZ3RoIDw9IDEyNykge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShbbGVuZ3RoXSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7bnVtYmVyW119ICovXG4gIGNvbnN0IG9jdGV0cyA9IFtdXG4gIHdoaWxlIChsZW5ndGggIT09IDApIHtcbiAgICBvY3RldHMucHVzaChsZW5ndGggJiAweGZmKVxuICAgIGxlbmd0aCA9IGxlbmd0aCA+Pj4gOFxuICB9XG4gIG9jdGV0cy5yZXZlcnNlKClcbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFsweDgwIHwgKG9jdGV0cy5sZW5ndGggJiAweGZmKSwgLi4ub2N0ZXRzXSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKiBAcmV0dXJucyB7e251bWJlcjogbnVtYmVyLCBjb25zdW1lZDogbnVtYmVyfX1cbiAqL1xuZXhwb3J0IGNvbnN0IHJlYWRERVJMZW5ndGggPSAoYnl0ZXMsIG9mZnNldCA9IDApID0+IHtcbiAgaWYgKChieXRlc1tvZmZzZXRdICYgMHg4MCkgPT09IDApIHtcbiAgICByZXR1cm4geyBudW1iZXI6IGJ5dGVzW29mZnNldF0sIGNvbnN1bWVkOiAxIH1cbiAgfVxuXG4gIGNvbnN0IG51bWJlckJ5dGVzID0gYnl0ZXNbb2Zmc2V0XSAmIDB4N2ZcbiAgLyogYzggaWdub3JlIG5leHQgNSAqL1xuICBpZiAoYnl0ZXMubGVuZ3RoIDwgbnVtYmVyQnl0ZXMgKyAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEFTTiBwYXJzaW5nIGVycm9yOiBUb28gZmV3IGJ5dGVzLiBFeHBlY3RlZCBlbmNvZGVkIGxlbmd0aCdzIGxlbmd0aCB0byBiZSBhdCBsZWFzdCAke251bWJlckJ5dGVzfWBcbiAgICApXG4gIH1cblxuICBsZXQgbGVuZ3RoID0gMFxuICBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlckJ5dGVzOyBpKyspIHtcbiAgICBsZW5ndGggPSBsZW5ndGggPDwgOFxuICAgIGxlbmd0aCA9IGxlbmd0aCB8IGJ5dGVzW29mZnNldCArIGkgKyAxXVxuICB9XG5cbiAgcmV0dXJuIHsgbnVtYmVyOiBsZW5ndGgsIGNvbnN1bWVkOiBudW1iZXJCeXRlcyArIDEgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gaW5wdXRcbiAqIEBwYXJhbSB7bnVtYmVyfSBleHBlY3RlZFRhZ1xuICogQHBhcmFtIHtudW1iZXJ9IHBvc2l0aW9uXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3Qgc2tpcCA9IChpbnB1dCwgZXhwZWN0ZWRUYWcsIHBvc2l0aW9uKSA9PiB7XG4gIGNvbnN0IHBhcnNlZCA9IGludG8oaW5wdXQsIGV4cGVjdGVkVGFnLCBwb3NpdGlvbilcbiAgcmV0dXJuIHBhcnNlZC5wb3NpdGlvbiArIHBhcnNlZC5sZW5ndGhcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGlucHV0XG4gKiBAcGFyYW0ge251bWJlcn0gZXhwZWN0ZWRUYWdcbiAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcbiAqIEByZXR1cm5zIHt7IHBvc2l0aW9uOiBudW1iZXIsIGxlbmd0aDogbnVtYmVyIH19XG4gKi9cbmV4cG9ydCBjb25zdCBpbnRvID0gKGlucHV0LCBleHBlY3RlZFRhZywgb2Zmc2V0KSA9PiB7XG4gIGNvbnN0IGFjdHVhbFRhZyA9IGlucHV0W29mZnNldF1cbiAgLyogYzggaWdub3JlIG5leHQgNyAqL1xuICBpZiAoYWN0dWFsVGFnICE9PSBleHBlY3RlZFRhZykge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBBU04gcGFyc2luZyBlcnJvcjogRXhwZWN0ZWQgdGFnIDB4JHtleHBlY3RlZFRhZy50b1N0cmluZyhcbiAgICAgICAgMTZcbiAgICAgICl9IGF0IHBvc2l0aW9uICR7b2Zmc2V0fSwgYnV0IGdvdCAweCR7YWN0dWFsVGFnLnRvU3RyaW5nKDE2KX0uYFxuICAgIClcbiAgfVxuXG4gIC8vIGxlbmd0aFxuICBjb25zdCBsZW5ndGggPSByZWFkREVSTGVuZ3RoKGlucHV0LCBvZmZzZXQgKyBUQUdfU0laRSlcbiAgY29uc3QgcG9zaXRpb24gPSBvZmZzZXQgKyBUQUdfU0laRSArIGxlbmd0aC5jb25zdW1lZFxuXG4gIC8vIGNvbnRlbnRcbiAgcmV0dXJuIHsgcG9zaXRpb24sIGxlbmd0aDogbGVuZ3RoLm51bWJlciB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBpbnB1dFxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlQml0U3RyaW5nID0gaW5wdXQgPT4ge1xuICAvLyBlbmNvZGUgaW5wdXQgbGVuZ3RoICsgMSBmb3IgdW51c2VkIGJpdCBwYWRcbiAgY29uc3QgbGVuZ3RoID0gZW5jb2RlREVSTGVuZ3RoKGlucHV0LmJ5dGVMZW5ndGggKyAxKVxuICAvLyBhbGxvY2F0ZSBhIGJ1ZmZlciBvZiBkZXNpcmVkIHNpemVcbiAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShcbiAgICBUQUdfU0laRSArIC8vIEFTTl9CSVRTVFJJTkdfVEFHXG4gICAgICBsZW5ndGguYnl0ZUxlbmd0aCArXG4gICAgICAxICsgLy8gYW1vdW50IG9mIHVudXNlZCBiaXRzIGF0IHRoZSBlbmQgb2Ygb3VyIGJpdHN0cmluZ1xuICAgICAgaW5wdXQuYnl0ZUxlbmd0aFxuICApXG5cbiAgbGV0IGJ5dGVPZmZzZXQgPSAwXG4gIC8vIHdyaXRlIGJ5dGVzdHJpbmcgdGFnXG4gIGJ5dGVzW2J5dGVPZmZzZXRdID0gQklUU1RSSU5HX1RBR1xuICBieXRlT2Zmc2V0ICs9IFRBR19TSVpFXG5cbiAgLy8gd3JpdGUgbGVuZ3RoIG9mIHRoZSBieXRlc3RyaW5nXG4gIGJ5dGVzLnNldChsZW5ndGgsIGJ5dGVPZmZzZXQpXG4gIGJ5dGVPZmZzZXQgKz0gbGVuZ3RoLmJ5dGVMZW5ndGhcblxuICAvLyB3cml0ZSB1bnVzZWQgYml0cyBhdCB0aGUgZW5kIG9mIG91ciBiaXRzdHJpbmdcbiAgYnl0ZXNbYnl0ZU9mZnNldF0gPSBVTlVTRURfQklUX1BBRFxuICBieXRlT2Zmc2V0ICs9IDFcblxuICAvLyB3cml0ZSBhY3R1YWwgZGF0YSBpbnRvIGJpdHN0cmluZ1xuICBieXRlcy5zZXQoaW5wdXQsIGJ5dGVPZmZzZXQpXG5cbiAgcmV0dXJuIGJ5dGVzXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBpbnB1dFxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlT2N0ZXRTdHJpbmcgPSBpbnB1dCA9PiB7XG4gIC8vIGVuY29kZSBpbnB1dCBsZW5ndGhcbiAgY29uc3QgbGVuZ3RoID0gZW5jb2RlREVSTGVuZ3RoKGlucHV0LmJ5dGVMZW5ndGgpXG4gIC8vIGFsbG9jYXRlIGEgYnVmZmVyIG9mIGRlc2lyZWQgc2l6ZVxuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KFRBR19TSVpFICsgbGVuZ3RoLmJ5dGVMZW5ndGggKyBpbnB1dC5ieXRlTGVuZ3RoKVxuXG4gIGxldCBieXRlT2Zmc2V0ID0gMFxuICAvLyB3cml0ZSBvY3RldCBzdHJpbmcgdGFnXG4gIGJ5dGVzW2J5dGVPZmZzZXRdID0gT0NURVRfU1RSSU5HX1RBR1xuICBieXRlT2Zmc2V0ICs9IFRBR19TSVpFXG5cbiAgLy8gd3JpdGUgb2N0ZXQgc3RyaW5nIGxlbmd0aFxuICBieXRlcy5zZXQobGVuZ3RoLCBieXRlT2Zmc2V0KVxuICBieXRlT2Zmc2V0ICs9IGxlbmd0aC5ieXRlTGVuZ3RoXG5cbiAgLy8gd3JpdGUgYWN0dWFsIGRhdGEgaW50byBiaXRzdHJpbmdcbiAgYnl0ZXMuc2V0KGlucHV0LCBieXRlT2Zmc2V0KVxuXG4gIHJldHVybiBieXRlc1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheVtdfSBzZXF1ZW5jZVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlU2VxdWVuY2UgPSBzZXF1ZW5jZSA9PiB7XG4gIC8vIGNhbGN1bGF0ZSBieXRlbGVuZ3RoIGZvciBhbGwgdGhlIHBhcnRzXG4gIGxldCBieXRlTGVuZ3RoID0gMFxuICBmb3IgKGNvbnN0IGl0ZW0gb2Ygc2VxdWVuY2UpIHtcbiAgICBieXRlTGVuZ3RoICs9IGl0ZW0uYnl0ZUxlbmd0aFxuICB9XG5cbiAgLy8gZW5jb2RlIHNlcXVlbmNlIGJ5dGUgbGVuZ3RoXG4gIGNvbnN0IGxlbmd0aCA9IGVuY29kZURFUkxlbmd0aChieXRlTGVuZ3RoKVxuXG4gIC8vIGFsbG9jYXRlIHRoZSBidWZmZXIgdG8gd3JpdGUgc2VxdWVuY2UgaW50b1xuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KFRBR19TSVpFICsgbGVuZ3RoLmJ5dGVMZW5ndGggKyBieXRlTGVuZ3RoKVxuXG4gIGxldCBieXRlT2Zmc2V0ID0gMFxuXG4gIC8vIHdyaXRlIHRoZSBzZXF1ZW5jZSB0YWdcbiAgYnl0ZXNbYnl0ZU9mZnNldF0gPSBTRVFVRU5DRV9UQUdcbiAgYnl0ZU9mZnNldCArPSBUQUdfU0laRVxuXG4gIC8vIHdyaXRlIHNlcXVlbmNlIGxlbmd0aFxuICBieXRlcy5zZXQobGVuZ3RoLCBieXRlT2Zmc2V0KVxuICBieXRlT2Zmc2V0ICs9IGxlbmd0aC5ieXRlTGVuZ3RoXG5cbiAgLy8gd3JpdGUgZWFjaCBpdGVtIGluIHRoZSBzZXF1ZW5jZVxuICBmb3IgKGNvbnN0IGl0ZW0gb2Ygc2VxdWVuY2UpIHtcbiAgICBieXRlcy5zZXQoaXRlbSwgYnl0ZU9mZnNldClcbiAgICBieXRlT2Zmc2V0ICs9IGl0ZW0uYnl0ZUxlbmd0aFxuICB9XG5cbiAgcmV0dXJuIGJ5dGVzXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5leHBvcnQgY29uc3QgcmVhZFNlcXVlbmNlID0gKGJ5dGVzLCBvZmZzZXQgPSAwKSA9PiB7XG4gIGNvbnN0IHsgcG9zaXRpb24sIGxlbmd0aCB9ID0gaW50byhieXRlcywgU0VRVUVOQ0VfVEFHLCBvZmZzZXQpXG5cbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ5dGVzLmJ1ZmZlciwgYnl0ZXMuYnl0ZU9mZnNldCArIHBvc2l0aW9uLCBsZW5ndGgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBpbnB1dFxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlSW50ID0gaW5wdXQgPT4ge1xuICBjb25zdCBleHRyYSA9IGlucHV0LmJ5dGVMZW5ndGggPT09IDAgfHwgaW5wdXRbMF0gJiAweDgwID8gMSA6IDBcblxuICAvLyBlbmNvZGUgaW5wdXQgbGVuZ3RoXG4gIGNvbnN0IGxlbmd0aCA9IGVuY29kZURFUkxlbmd0aChpbnB1dC5ieXRlTGVuZ3RoICsgZXh0cmEpXG4gIC8vIGFsbG9jYXRlIGEgYnVmZmVyIG9mIGRlc2lyZWQgc2l6ZVxuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KFxuICAgIFRBR19TSVpFICsgLy8gSU5UX1RBR1xuICAgICAgbGVuZ3RoLmJ5dGVMZW5ndGggK1xuICAgICAgaW5wdXQuYnl0ZUxlbmd0aCArXG4gICAgICBleHRyYVxuICApXG5cbiAgbGV0IGJ5dGVPZmZzZXQgPSAwXG4gIC8vIHdyaXRlIG9jdGV0IHN0cmluZyB0YWdcbiAgYnl0ZXNbYnl0ZU9mZnNldF0gPSBJTlRfVEFHXG4gIGJ5dGVPZmZzZXQgKz0gVEFHX1NJWkVcblxuICAvLyB3cml0ZSBpbnQgbGVuZ3RoXG4gIGJ5dGVzLnNldChsZW5ndGgsIGJ5dGVPZmZzZXQpXG4gIGJ5dGVPZmZzZXQgKz0gbGVuZ3RoLmJ5dGVMZW5ndGhcblxuICAvLyBhZGQgMCBpZiB0aGUgbW9zdC1zaWduaWZpY2FudCBiaXQgaXMgc2V0XG4gIGlmIChleHRyYSA+IDApIHtcbiAgICBieXRlc1tieXRlT2Zmc2V0XSA9IFVOVVNFRF9CSVRfUEFEXG4gICAgYnl0ZU9mZnNldCArPSBleHRyYVxuICB9XG5cbiAgLy8gd3JpdGUgYWN0dWFsIGRhdGEgaW50byBiaXRzdHJpbmdcbiAgYnl0ZXMuc2V0KGlucHV0LCBieXRlT2Zmc2V0KVxuXG4gIHJldHVybiBieXRlc1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cblxuZXhwb3J0IGNvbnN0IGVudGVyU2VxdWVuY2UgPSAoYnl0ZXMsIG9mZnNldCA9IDApID0+XG4gIGludG8oYnl0ZXMsIFNFUVVFTkNFX1RBRywgb2Zmc2V0KS5wb3NpdGlvblxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBza2lwU2VxdWVuY2UgPSAoYnl0ZXMsIG9mZnNldCA9IDApID0+XG4gIHNraXAoYnl0ZXMsIFNFUVVFTkNFX1RBRywgb2Zmc2V0KVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBza2lwSW50ID0gKGJ5dGVzLCBvZmZzZXQgPSAwKSA9PiBza2lwKGJ5dGVzLCBJTlRfVEFHLCBvZmZzZXQpXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gKi9cbmV4cG9ydCBjb25zdCByZWFkQml0U3RyaW5nID0gKGJ5dGVzLCBvZmZzZXQgPSAwKSA9PiB7XG4gIGNvbnN0IHsgcG9zaXRpb24sIGxlbmd0aCB9ID0gaW50byhieXRlcywgQklUU1RSSU5HX1RBRywgb2Zmc2V0KVxuICBjb25zdCB0YWcgPSBieXRlc1twb3NpdGlvbl1cbiAgLyogYzggaWdub3JlIG5leHQgNSAqL1xuICBpZiAodGFnICE9PSBVTlVTRURfQklUX1BBRCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBDYW4gbm90IHJlYWQgYml0c3RyaW5nLCBleHBlY3RlZCBsZW5ndGggdG8gYmUgbXVsdGlwbGUgb2YgOCwgYnV0IGdvdCAke3RhZ30gdW51c2VkIGJpdHMgaW4gbGFzdCBieXRlLmBcbiAgICApXG4gIH1cblxuICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoXG4gICAgYnl0ZXMuYnVmZmVyLFxuICAgIGJ5dGVzLmJ5dGVPZmZzZXQgKyBwb3NpdGlvbiArIDEsXG4gICAgbGVuZ3RoIC0gMVxuICApXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHBhcmFtIHtudW1iZXJ9IGJ5dGVPZmZzZXRcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5leHBvcnQgY29uc3QgcmVhZEludCA9IChieXRlcywgYnl0ZU9mZnNldCA9IDApID0+IHtcbiAgY29uc3QgeyBwb3NpdGlvbiwgbGVuZ3RoIH0gPSBpbnRvKGJ5dGVzLCBJTlRfVEFHLCBieXRlT2Zmc2V0KVxuICBsZXQgZGVsdGEgPSAwXG5cbiAgLy8gZHJvcCBsZWFkaW5nIDBzXG4gIHdoaWxlIChieXRlc1twb3NpdGlvbiArIGRlbHRhXSA9PT0gMCkge1xuICAgIGRlbHRhKytcbiAgfVxuXG4gIHJldHVybiBuZXcgVWludDhBcnJheShcbiAgICBieXRlcy5idWZmZXIsXG4gICAgYnl0ZXMuYnl0ZU9mZnNldCArIHBvc2l0aW9uICsgZGVsdGEsXG4gICAgbGVuZ3RoIC0gZGVsdGFcbiAgKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5leHBvcnQgY29uc3QgcmVhZE9jdGV0U3RyaW5nID0gKGJ5dGVzLCBvZmZzZXQgPSAwKSA9PiB7XG4gIGNvbnN0IHsgcG9zaXRpb24sIGxlbmd0aCB9ID0gaW50byhieXRlcywgT0NURVRfU1RSSU5HX1RBRywgb2Zmc2V0KVxuXG4gIHJldHVybiBuZXcgVWludDhBcnJheShieXRlcy5idWZmZXIsIGJ5dGVzLmJ5dGVPZmZzZXQgKyBwb3NpdGlvbiwgbGVuZ3RoKVxufVxuXG4vKipcbiAqIEB0eXBlZGVmIHsoYnl0ZXM6VWludDhBcnJheSwgb2Zmc2V0Om51bWJlcikgPT4gVWludDhBcnJheX0gUmVhZGVyXG4gKiBAcGFyYW0ge1tSZWFkZXIsIC4uLlJlYWRlcltdXX0gcmVhZGVyc1xuICogQHBhcmFtIHtVaW50OEFycmF5fSBzb3VyY2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBieXRlT2Zmc2V0XG4gKi9cbmV4cG9ydCBjb25zdCByZWFkU2VxdWVuY2VXaXRoID0gKHJlYWRlcnMsIHNvdXJjZSwgYnl0ZU9mZnNldCA9IDApID0+IHtcbiAgY29uc3QgcmVzdWx0cyA9IFtdXG4gIGNvbnN0IHNlcXVlbmNlID0gcmVhZFNlcXVlbmNlKHNvdXJjZSwgYnl0ZU9mZnNldClcbiAgbGV0IG9mZnNldCA9IDBcbiAgZm9yIChjb25zdCByZWFkIG9mIHJlYWRlcnMpIHtcbiAgICBjb25zdCBjaHVuayA9IHJlYWQoc2VxdWVuY2UsIG9mZnNldClcbiAgICByZXN1bHRzLnB1c2goY2h1bmspXG4gICAgb2Zmc2V0ID0gY2h1bmsuYnl0ZU9mZnNldCArIGNodW5rLmJ5dGVMZW5ndGggLSBzZXF1ZW5jZS5ieXRlT2Zmc2V0XG4gIH1cbiAgcmV0dXJuIHJlc3VsdHNcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/rsa/asn1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/rsa/pkcs8.js":
/*!*********************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/rsa/pkcs8.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _asn1_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./asn1.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/asn1.js\");\n\n\n\n\nconst PKSC8_HEADER = new Uint8Array([\n  // version\n  2, 1, 0,\n  // privateKeyAlgorithm\n  48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0,\n])\n/**\n * @typedef {import('./private-key').RSAPrivateKey} RSAPrivateKey\n * @typedef {object} AlgorithmIdentifier\n * @property {Uint8Array} version\n * @property {Uint8Array} parameters\n *\n * @see https://datatracker.ietf.org/doc/html/rfc5208#section-5\n * @typedef {object} PrivateKeyInfo\n * @property {API.ByteView<number>} version\n * @property {API.ByteView<AlgorithmIdentifier>} privateKeyAlgorithm\n * @property {API.ByteView<RSAPrivateKey>} privateKey\n * @property {API.ByteView<unknown>} [attributes]\n */\n\n/**\n * @param {API.ByteView<PrivateKeyInfo>} info\n * @returns {API.ByteView<RSAPrivateKey>}\n */\nconst decode = info => {\n  let offset = 0\n  // go into the top-level SEQUENCE\n  offset = (0,_asn1_js__WEBPACK_IMPORTED_MODULE_2__.enterSequence)(info, offset)\n  offset = (0,_asn1_js__WEBPACK_IMPORTED_MODULE_2__.skipInt)(info, offset)\n  offset = (0,_asn1_js__WEBPACK_IMPORTED_MODULE_2__.skipSequence)(info, offset)\n\n  // we expect the bitstring next\n  return (0,_asn1_js__WEBPACK_IMPORTED_MODULE_2__.readOctetString)(info, offset)\n}\n\n/**\n * @param {API.ByteView<RSAPrivateKey>} key\n * @returns {API.ByteView<PrivateKeyInfo>}\n */\nconst encode = key =>\n  (0,_asn1_js__WEBPACK_IMPORTED_MODULE_2__.encodeSequence)([PKSC8_HEADER, (0,_asn1_js__WEBPACK_IMPORTED_MODULE_2__.encodeOctetString)(key)])\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3JzYS9wa2NzOC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3QztBQUNhO0FBUW5DOztBQUVsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsdUNBQXVDO0FBQ3BELGFBQWEsUUFBUTtBQUNyQixjQUFjLFlBQVk7QUFDMUIsY0FBYyxZQUFZO0FBQzFCO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxzQkFBc0I7QUFDcEMsY0FBYyxtQ0FBbUM7QUFDakQsY0FBYyw2QkFBNkI7QUFDM0MsY0FBYyx1QkFBdUI7QUFDckM7O0FBRUE7QUFDQSxXQUFXLDhCQUE4QjtBQUN6QyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQSxXQUFXLHVEQUFhO0FBQ3hCLFdBQVcsaURBQU87QUFDbEIsV0FBVyxzREFBWTs7QUFFdkI7QUFDQSxTQUFTLHlEQUFlO0FBQ3hCOztBQUVBO0FBQ0EsV0FBVyw2QkFBNkI7QUFDeEMsYUFBYTtBQUNiO0FBQ087QUFDUCxFQUFFLHdEQUFjLGdCQUFnQiwyREFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ByaW5jaXBhbC9zcmMvcnNhL3BrY3M4LmpzPzY3YzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuaW1wb3J0IHsgYmFzZTY0dXJsIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U2NCdcbmltcG9ydCB7XG4gIGVuY29kZVNlcXVlbmNlLFxuICBlbmNvZGVPY3RldFN0cmluZyxcbiAgZW50ZXJTZXF1ZW5jZSxcbiAgc2tpcFNlcXVlbmNlLFxuICBza2lwSW50LFxuICByZWFkT2N0ZXRTdHJpbmcsXG59IGZyb20gJy4vYXNuMS5qcydcblxuY29uc3QgUEtTQzhfSEVBREVSID0gbmV3IFVpbnQ4QXJyYXkoW1xuICAvLyB2ZXJzaW9uXG4gIDIsIDEsIDAsXG4gIC8vIHByaXZhdGVLZXlBbGdvcml0aG1cbiAgNDgsIDEzLCA2LCA5LCA0MiwgMTM0LCA3MiwgMTM0LCAyNDcsIDEzLCAxLCAxLCAxLCA1LCAwLFxuXSlcbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9wcml2YXRlLWtleScpLlJTQVByaXZhdGVLZXl9IFJTQVByaXZhdGVLZXlcbiAqIEB0eXBlZGVmIHtvYmplY3R9IEFsZ29yaXRobUlkZW50aWZpZXJcbiAqIEBwcm9wZXJ0eSB7VWludDhBcnJheX0gdmVyc2lvblxuICogQHByb3BlcnR5IHtVaW50OEFycmF5fSBwYXJhbWV0ZXJzXG4gKlxuICogQHNlZSBodHRwczovL2RhdGF0cmFja2VyLmlldGYub3JnL2RvYy9odG1sL3JmYzUyMDgjc2VjdGlvbi01XG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBQcml2YXRlS2V5SW5mb1xuICogQHByb3BlcnR5IHtBUEkuQnl0ZVZpZXc8bnVtYmVyPn0gdmVyc2lvblxuICogQHByb3BlcnR5IHtBUEkuQnl0ZVZpZXc8QWxnb3JpdGhtSWRlbnRpZmllcj59IHByaXZhdGVLZXlBbGdvcml0aG1cbiAqIEBwcm9wZXJ0eSB7QVBJLkJ5dGVWaWV3PFJTQVByaXZhdGVLZXk+fSBwcml2YXRlS2V5XG4gKiBAcHJvcGVydHkge0FQSS5CeXRlVmlldzx1bmtub3duPn0gW2F0dHJpYnV0ZXNdXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5CeXRlVmlldzxQcml2YXRlS2V5SW5mbz59IGluZm9cbiAqIEByZXR1cm5zIHtBUEkuQnl0ZVZpZXc8UlNBUHJpdmF0ZUtleT59XG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGUgPSBpbmZvID0+IHtcbiAgbGV0IG9mZnNldCA9IDBcbiAgLy8gZ28gaW50byB0aGUgdG9wLWxldmVsIFNFUVVFTkNFXG4gIG9mZnNldCA9IGVudGVyU2VxdWVuY2UoaW5mbywgb2Zmc2V0KVxuICBvZmZzZXQgPSBza2lwSW50KGluZm8sIG9mZnNldClcbiAgb2Zmc2V0ID0gc2tpcFNlcXVlbmNlKGluZm8sIG9mZnNldClcblxuICAvLyB3ZSBleHBlY3QgdGhlIGJpdHN0cmluZyBuZXh0XG4gIHJldHVybiByZWFkT2N0ZXRTdHJpbmcoaW5mbywgb2Zmc2V0KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7QVBJLkJ5dGVWaWV3PFJTQVByaXZhdGVLZXk+fSBrZXlcbiAqIEByZXR1cm5zIHtBUEkuQnl0ZVZpZXc8UHJpdmF0ZUtleUluZm8+fVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0ga2V5ID0+XG4gIGVuY29kZVNlcXVlbmNlKFtQS1NDOF9IRUFERVIsIGVuY29kZU9jdGV0U3RyaW5nKGtleSldKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/rsa/pkcs8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/rsa/private-key.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/rsa/private-key.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   fromJWK: () => (/* binding */ fromJWK),\n/* harmony export */   fromPKCS8: () => (/* binding */ fromPKCS8),\n/* harmony export */   toJWK: () => (/* binding */ toJWK),\n/* harmony export */   toPKCS8: () => (/* binding */ toPKCS8),\n/* harmony export */   toSPKI: () => (/* binding */ toSPKI)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _asn1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./asn1.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/asn1.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _pkcs8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pkcs8.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/pkcs8.js\");\n/* harmony import */ var _spki_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spki.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/spki.js\");\n/* harmony import */ var _public_key_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./public-key.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/public-key.js\");\n\n\n\n\n\n\n\nconst code = 0x1305\nconst VERSION = new Uint8Array()\n\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc3447#appendix-A.1.2\n * @typedef {object} RSAPrivateKey\n * @property {Uint8Array} v\n * @property {Uint8Array} n\n * @property {Uint8Array} e\n * @property {Uint8Array} d\n * @property {Uint8Array} p\n * @property {Uint8Array} q\n * @property {Uint8Array} dp\n * @property {Uint8Array} dq\n * @property {Uint8Array} qi\n */\n\n/**\n * Takes private-key information in [Private-Key Information Syntax](https://datatracker.ietf.org/doc/html/rfc5208#section-5)\n * and extracts all the fields as per [RSA private key syntax](https://datatracker.ietf.org/doc/html/rfc3447#appendix-A.1.2)\n *\n *\n * @param {API.ByteView<RSAPrivateKey>} source\n * @param {number} byteOffset\n * @returns {RSAPrivateKey}\n */\nconst decode = (source, byteOffset = 0) => {\n  const [v, n, e, d, p, q, dp, dq, qi] = (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.readSequenceWith)(\n    [\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n      _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt,\n    ],\n    source,\n    byteOffset\n  )\n\n  return { v, n, e, d, p, q, dp, dq, qi }\n}\n\n/**\n * @param {RSAPrivateKey} key\n * @returns {API.ByteView<RSAPrivateKey>}\n */\nconst encode = ({ v, n, e, d, p, q, dp, dq, qi }) => {\n  return (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeSequence)([\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(v),\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(n),\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(e),\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(d),\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(p),\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(q),\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(dp),\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(dq),\n    (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(qi),\n  ])\n}\n\n/**\n * @param {RSAPrivateKey} key\n * @returns {JsonWebKey}\n */\nconst toJWK = ({ n, e, d, p, q, dp, dq, qi }) => ({\n  kty: 'RSA',\n  alg: 'RS256',\n  key_ops: ['sign'],\n  ext: true,\n  n: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseEncode(n),\n  e: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseEncode(e),\n  d: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseEncode(d),\n  p: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseEncode(p),\n  q: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseEncode(q),\n  dp: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseEncode(dp),\n  dq: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseEncode(dq),\n  qi: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseEncode(qi),\n})\n\n/**\n * @param {JsonWebKey} key\n * @returns {RSAPrivateKey}\n */\nconst fromJWK = ({ n, e, d, p, q, dp, dq, qi }) => ({\n  v: VERSION,\n  n: base64urlDecode(n),\n  e: base64urlDecode(e),\n  d: base64urlDecode(d),\n  p: base64urlDecode(p),\n  q: base64urlDecode(q),\n  dp: base64urlDecode(dp),\n  dq: base64urlDecode(dq),\n  qi: base64urlDecode(qi),\n})\n\n/**\n * @param {RSAPrivateKey} key\n */\nconst toPKCS8 = key => _pkcs8_js__WEBPACK_IMPORTED_MODULE_3__.encode(encode(key))\n\n/**\n * @param {API.ByteView<PKCS8.PrivateKeyInfo>} info\n */\nconst fromPKCS8 = info => decode(_pkcs8_js__WEBPACK_IMPORTED_MODULE_3__.decode(info))\n\n/**\n * @param {RSAPrivateKey} key\n */\nconst toSPKI = key => _spki_js__WEBPACK_IMPORTED_MODULE_4__.encode(_public_key_js__WEBPACK_IMPORTED_MODULE_5__.encode(key))\n\n/**\n *\n * @param {string|undefined} input\n * @returns\n */\nconst base64urlDecode = (input = '') => multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url.baseDecode(input)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3JzYS9wcml2YXRlLWtleS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUN3QztBQUMzQjtBQUNsQjtBQUNGO0FBQ1c7O0FBRXJDO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLFlBQVk7QUFDMUIsY0FBYyxZQUFZO0FBQzFCLGNBQWMsWUFBWTtBQUMxQixjQUFjLFlBQVk7QUFDMUIsY0FBYyxZQUFZO0FBQzFCLGNBQWMsWUFBWTtBQUMxQixjQUFjLFlBQVk7QUFDMUIsY0FBYyxZQUFZO0FBQzFCLGNBQWMsWUFBWTtBQUMxQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw2QkFBNkI7QUFDeEMsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AseUNBQXlDLDBEQUFnQjtBQUN6RDtBQUNBLE1BQU0sNkNBQU87QUFDYixNQUFNLDZDQUFPO0FBQ2IsTUFBTSw2Q0FBTztBQUNiLE1BQU0sNkNBQU87QUFDYixNQUFNLDZDQUFPO0FBQ2IsTUFBTSw2Q0FBTztBQUNiLE1BQU0sNkNBQU87QUFDYixNQUFNLDZDQUFPO0FBQ2IsTUFBTSw2Q0FBTztBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFdBQVc7QUFDWDs7QUFFQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTyxrQkFBa0IsOEJBQThCO0FBQ3ZELFNBQVMsd0RBQWM7QUFDdkIsSUFBSSxtREFBUztBQUNiLElBQUksbURBQVM7QUFDYixJQUFJLG1EQUFTO0FBQ2IsSUFBSSxtREFBUztBQUNiLElBQUksbURBQVM7QUFDYixJQUFJLG1EQUFTO0FBQ2IsSUFBSSxtREFBUztBQUNiLElBQUksbURBQVM7QUFDYixJQUFJLG1EQUFTO0FBQ2I7QUFDQTs7QUFFQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTyxpQkFBaUIsMkJBQTJCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxnRUFBUztBQUNkLEtBQUssZ0VBQVM7QUFDZCxLQUFLLGdFQUFTO0FBQ2QsS0FBSyxnRUFBUztBQUNkLEtBQUssZ0VBQVM7QUFDZCxNQUFNLGdFQUFTO0FBQ2YsTUFBTSxnRUFBUztBQUNmLE1BQU0sZ0VBQVM7QUFDZixDQUFDOztBQUVEO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNPLG1CQUFtQiwyQkFBMkI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLFdBQVcsZUFBZTtBQUMxQjtBQUNPLHVCQUF1Qiw2Q0FBWTs7QUFFMUM7QUFDQSxXQUFXLG9DQUFvQztBQUMvQztBQUNPLGlDQUFpQyw2Q0FBWTs7QUFFcEQ7QUFDQSxXQUFXLGVBQWU7QUFDMUI7QUFDTyxzQkFBc0IsNENBQVcsQ0FBQyxrREFBZ0I7O0FBRXpEO0FBQ0E7QUFDQSxXQUFXLGtCQUFrQjtBQUM3QjtBQUNBO0FBQ0Esd0NBQXdDLGdFQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3JzYS9wcml2YXRlLWtleS5qcz9hZGIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcbmltcG9ydCB7IGVuY29kZVNlcXVlbmNlLCByZWFkSW50LCByZWFkU2VxdWVuY2VXaXRoLCBlbmNvZGVJbnQgfSBmcm9tICcuL2FzbjEuanMnXG5pbXBvcnQgeyBiYXNlNjR1cmwgfSBmcm9tICdtdWx0aWZvcm1hdHMvYmFzZXMvYmFzZTY0J1xuaW1wb3J0ICogYXMgUEtDUzggZnJvbSAnLi9wa2NzOC5qcydcbmltcG9ydCAqIGFzIFNQS0kgZnJvbSAnLi9zcGtpLmpzJ1xuaW1wb3J0ICogYXMgUHVibGljS2V5IGZyb20gJy4vcHVibGljLWtleS5qcydcblxuZXhwb3J0IGNvbnN0IGNvZGUgPSAweDEzMDVcbmNvbnN0IFZFUlNJT04gPSBuZXcgVWludDhBcnJheSgpXG5cbi8qKlxuICogQHNlZSBodHRwczovL2RhdGF0cmFja2VyLmlldGYub3JnL2RvYy9odG1sL3JmYzM0NDcjYXBwZW5kaXgtQS4xLjJcbiAqIEB0eXBlZGVmIHtvYmplY3R9IFJTQVByaXZhdGVLZXlcbiAqIEBwcm9wZXJ0eSB7VWludDhBcnJheX0gdlxuICogQHByb3BlcnR5IHtVaW50OEFycmF5fSBuXG4gKiBAcHJvcGVydHkge1VpbnQ4QXJyYXl9IGVcbiAqIEBwcm9wZXJ0eSB7VWludDhBcnJheX0gZFxuICogQHByb3BlcnR5IHtVaW50OEFycmF5fSBwXG4gKiBAcHJvcGVydHkge1VpbnQ4QXJyYXl9IHFcbiAqIEBwcm9wZXJ0eSB7VWludDhBcnJheX0gZHBcbiAqIEBwcm9wZXJ0eSB7VWludDhBcnJheX0gZHFcbiAqIEBwcm9wZXJ0eSB7VWludDhBcnJheX0gcWlcbiAqL1xuXG4vKipcbiAqIFRha2VzIHByaXZhdGUta2V5IGluZm9ybWF0aW9uIGluIFtQcml2YXRlLUtleSBJbmZvcm1hdGlvbiBTeW50YXhdKGh0dHBzOi8vZGF0YXRyYWNrZXIuaWV0Zi5vcmcvZG9jL2h0bWwvcmZjNTIwOCNzZWN0aW9uLTUpXG4gKiBhbmQgZXh0cmFjdHMgYWxsIHRoZSBmaWVsZHMgYXMgcGVyIFtSU0EgcHJpdmF0ZSBrZXkgc3ludGF4XShodHRwczovL2RhdGF0cmFja2VyLmlldGYub3JnL2RvYy9odG1sL3JmYzM0NDcjYXBwZW5kaXgtQS4xLjIpXG4gKlxuICpcbiAqIEBwYXJhbSB7QVBJLkJ5dGVWaWV3PFJTQVByaXZhdGVLZXk+fSBzb3VyY2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBieXRlT2Zmc2V0XG4gKiBAcmV0dXJucyB7UlNBUHJpdmF0ZUtleX1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChzb3VyY2UsIGJ5dGVPZmZzZXQgPSAwKSA9PiB7XG4gIGNvbnN0IFt2LCBuLCBlLCBkLCBwLCBxLCBkcCwgZHEsIHFpXSA9IHJlYWRTZXF1ZW5jZVdpdGgoXG4gICAgW1xuICAgICAgcmVhZEludCxcbiAgICAgIHJlYWRJbnQsXG4gICAgICByZWFkSW50LFxuICAgICAgcmVhZEludCxcbiAgICAgIHJlYWRJbnQsXG4gICAgICByZWFkSW50LFxuICAgICAgcmVhZEludCxcbiAgICAgIHJlYWRJbnQsXG4gICAgICByZWFkSW50LFxuICAgIF0sXG4gICAgc291cmNlLFxuICAgIGJ5dGVPZmZzZXRcbiAgKVxuXG4gIHJldHVybiB7IHYsIG4sIGUsIGQsIHAsIHEsIGRwLCBkcSwgcWkgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7UlNBUHJpdmF0ZUtleX0ga2V5XG4gKiBAcmV0dXJucyB7QVBJLkJ5dGVWaWV3PFJTQVByaXZhdGVLZXk+fVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0gKHsgdiwgbiwgZSwgZCwgcCwgcSwgZHAsIGRxLCBxaSB9KSA9PiB7XG4gIHJldHVybiBlbmNvZGVTZXF1ZW5jZShbXG4gICAgZW5jb2RlSW50KHYpLFxuICAgIGVuY29kZUludChuKSxcbiAgICBlbmNvZGVJbnQoZSksXG4gICAgZW5jb2RlSW50KGQpLFxuICAgIGVuY29kZUludChwKSxcbiAgICBlbmNvZGVJbnQocSksXG4gICAgZW5jb2RlSW50KGRwKSxcbiAgICBlbmNvZGVJbnQoZHEpLFxuICAgIGVuY29kZUludChxaSksXG4gIF0pXG59XG5cbi8qKlxuICogQHBhcmFtIHtSU0FQcml2YXRlS2V5fSBrZXlcbiAqIEByZXR1cm5zIHtKc29uV2ViS2V5fVxuICovXG5leHBvcnQgY29uc3QgdG9KV0sgPSAoeyBuLCBlLCBkLCBwLCBxLCBkcCwgZHEsIHFpIH0pID0+ICh7XG4gIGt0eTogJ1JTQScsXG4gIGFsZzogJ1JTMjU2JyxcbiAga2V5X29wczogWydzaWduJ10sXG4gIGV4dDogdHJ1ZSxcbiAgbjogYmFzZTY0dXJsLmJhc2VFbmNvZGUobiksXG4gIGU6IGJhc2U2NHVybC5iYXNlRW5jb2RlKGUpLFxuICBkOiBiYXNlNjR1cmwuYmFzZUVuY29kZShkKSxcbiAgcDogYmFzZTY0dXJsLmJhc2VFbmNvZGUocCksXG4gIHE6IGJhc2U2NHVybC5iYXNlRW5jb2RlKHEpLFxuICBkcDogYmFzZTY0dXJsLmJhc2VFbmNvZGUoZHApLFxuICBkcTogYmFzZTY0dXJsLmJhc2VFbmNvZGUoZHEpLFxuICBxaTogYmFzZTY0dXJsLmJhc2VFbmNvZGUocWkpLFxufSlcblxuLyoqXG4gKiBAcGFyYW0ge0pzb25XZWJLZXl9IGtleVxuICogQHJldHVybnMge1JTQVByaXZhdGVLZXl9XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tSldLID0gKHsgbiwgZSwgZCwgcCwgcSwgZHAsIGRxLCBxaSB9KSA9PiAoe1xuICB2OiBWRVJTSU9OLFxuICBuOiBiYXNlNjR1cmxEZWNvZGUobiksXG4gIGU6IGJhc2U2NHVybERlY29kZShlKSxcbiAgZDogYmFzZTY0dXJsRGVjb2RlKGQpLFxuICBwOiBiYXNlNjR1cmxEZWNvZGUocCksXG4gIHE6IGJhc2U2NHVybERlY29kZShxKSxcbiAgZHA6IGJhc2U2NHVybERlY29kZShkcCksXG4gIGRxOiBiYXNlNjR1cmxEZWNvZGUoZHEpLFxuICBxaTogYmFzZTY0dXJsRGVjb2RlKHFpKSxcbn0pXG5cbi8qKlxuICogQHBhcmFtIHtSU0FQcml2YXRlS2V5fSBrZXlcbiAqL1xuZXhwb3J0IGNvbnN0IHRvUEtDUzggPSBrZXkgPT4gUEtDUzguZW5jb2RlKGVuY29kZShrZXkpKVxuXG4vKipcbiAqIEBwYXJhbSB7QVBJLkJ5dGVWaWV3PFBLQ1M4LlByaXZhdGVLZXlJbmZvPn0gaW5mb1xuICovXG5leHBvcnQgY29uc3QgZnJvbVBLQ1M4ID0gaW5mbyA9PiBkZWNvZGUoUEtDUzguZGVjb2RlKGluZm8pKVxuXG4vKipcbiAqIEBwYXJhbSB7UlNBUHJpdmF0ZUtleX0ga2V5XG4gKi9cbmV4cG9ydCBjb25zdCB0b1NQS0kgPSBrZXkgPT4gU1BLSS5lbmNvZGUoUHVibGljS2V5LmVuY29kZShrZXkpKVxuXG4vKipcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3x1bmRlZmluZWR9IGlucHV0XG4gKiBAcmV0dXJuc1xuICovXG5jb25zdCBiYXNlNjR1cmxEZWNvZGUgPSAoaW5wdXQgPSAnJykgPT4gYmFzZTY0dXJsLmJhc2VEZWNvZGUoaW5wdXQpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/rsa/private-key.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/rsa/public-key.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/rsa/public-key.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   fromJWK: () => (/* binding */ fromJWK),\n/* harmony export */   fromSPKI: () => (/* binding */ fromSPKI),\n/* harmony export */   toJWK: () => (/* binding */ toJWK),\n/* harmony export */   toSPKI: () => (/* binding */ toSPKI)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _asn1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./asn1.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/asn1.js\");\n/* harmony import */ var _spki_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spki.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/spki.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/@ucanto/principal/node_modules/multiformats/dist/src/bases/base64.js\");\n\n\n\n\n/**\n * RSA public key represenatation\n * @see https://datatracker.ietf.org/doc/html/rfc3447#appendix-A.1\n *\n * @typedef {object} RSAPublicKey\n * @property {API.ByteView<number>} n\n * @property {API.ByteView<number>} e\n */\n\n/**\n * Takes private-key information in [Private-Key Information Syntax](https://datatracker.ietf.org/doc/html/rfc5208#section-5)\n * and extracts all the fields as per [RSA private key syntax](https://datatracker.ietf.org/doc/html/rfc3447#appendix-A.1.2)\n *\n *\n * @param {API.ByteView<RSAPublicKey>} key\n * @param {number} byteOffset\n * @returns {RSAPublicKey}\n */\nconst decode = (key, byteOffset = 0) => {\n  const [n, e] = (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.readSequenceWith)([_asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt, _asn1_js__WEBPACK_IMPORTED_MODULE_1__.readInt], key, byteOffset)\n\n  return { n, e }\n}\n\n/**\n * @param {RSAPublicKey} key\n * @returns {API.ByteView<RSAPublicKey>}\n */\nconst encode = ({ n, e }) => (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeSequence)([(0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(n), (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeInt)(e)])\n\n/**\n * @param {RSAPublicKey} key\n */\nconst toSPKI = key => _spki_js__WEBPACK_IMPORTED_MODULE_2__.encode(encode(key))\n\n/**\n * @param {API.ByteView<SPKI.SubjectPublicKeyInfo>} info\n */\nconst fromSPKI = info => decode(_spki_js__WEBPACK_IMPORTED_MODULE_2__.decode(info))\n\n/**\n * @param {RSAPublicKey} key\n * @returns {JsonWebKey}\n */\nconst toJWK = ({ n, e }) => ({\n  kty: 'RSA',\n  alg: 'RS256',\n  key_ops: ['verify'],\n  ext: true,\n  n: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseEncode(n),\n  e: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseEncode(e),\n})\n\n/**\n * @param {JsonWebKey} jwk\n * @returns {RSAPublicKey}\n */\nconst fromJWK = ({ n, e }) => ({\n  n: base64urlDecode(n),\n  e: base64urlDecode(e),\n})\n\n/**\n * @param {string|undefined} input\n */\nconst base64urlDecode = (input = '') => multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseDecode(input)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3JzYS9wdWJsaWMta2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDd0M7QUFDL0M7QUFDb0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxzQkFBc0I7QUFDcEMsY0FBYyxzQkFBc0I7QUFDcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQLGlCQUFpQiwwREFBZ0IsRUFBRSw2Q0FBTyxFQUFFLDZDQUFPOztBQUVuRCxXQUFXO0FBQ1g7O0FBRUE7QUFDQSxXQUFXLGNBQWM7QUFDekIsYUFBYTtBQUNiO0FBQ08sa0JBQWtCLE1BQU0sS0FBSyx3REFBYyxFQUFFLG1EQUFTLEtBQUssbURBQVM7O0FBRTNFO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCO0FBQ08sc0JBQXNCLDRDQUFXOztBQUV4QztBQUNBLFdBQVcseUNBQXlDO0FBQ3BEO0FBQ08sZ0NBQWdDLDRDQUFXOztBQUVsRDtBQUNBLFdBQVcsY0FBYztBQUN6QixhQUFhO0FBQ2I7QUFDTyxpQkFBaUIsTUFBTTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZ0VBQVM7QUFDZCxLQUFLLGdFQUFTO0FBQ2QsQ0FBQzs7QUFFRDtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTyxtQkFBbUIsTUFBTTtBQUNoQztBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLFdBQVcsa0JBQWtCO0FBQzdCO0FBQ0Esd0NBQXdDLGdFQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3JzYS9wdWJsaWMta2V5LmpzPzA0OTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuaW1wb3J0IHsgZW5jb2RlU2VxdWVuY2UsIHJlYWRJbnQsIGVuY29kZUludCwgcmVhZFNlcXVlbmNlV2l0aCB9IGZyb20gJy4vYXNuMS5qcydcbmltcG9ydCAqIGFzIFNQS0kgZnJvbSAnLi9zcGtpLmpzJ1xuaW1wb3J0IHsgYmFzZTY0dXJsIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U2NCdcbi8qKlxuICogUlNBIHB1YmxpYyBrZXkgcmVwcmVzZW5hdGF0aW9uXG4gKiBAc2VlIGh0dHBzOi8vZGF0YXRyYWNrZXIuaWV0Zi5vcmcvZG9jL2h0bWwvcmZjMzQ0NyNhcHBlbmRpeC1BLjFcbiAqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBSU0FQdWJsaWNLZXlcbiAqIEBwcm9wZXJ0eSB7QVBJLkJ5dGVWaWV3PG51bWJlcj59IG5cbiAqIEBwcm9wZXJ0eSB7QVBJLkJ5dGVWaWV3PG51bWJlcj59IGVcbiAqL1xuXG4vKipcbiAqIFRha2VzIHByaXZhdGUta2V5IGluZm9ybWF0aW9uIGluIFtQcml2YXRlLUtleSBJbmZvcm1hdGlvbiBTeW50YXhdKGh0dHBzOi8vZGF0YXRyYWNrZXIuaWV0Zi5vcmcvZG9jL2h0bWwvcmZjNTIwOCNzZWN0aW9uLTUpXG4gKiBhbmQgZXh0cmFjdHMgYWxsIHRoZSBmaWVsZHMgYXMgcGVyIFtSU0EgcHJpdmF0ZSBrZXkgc3ludGF4XShodHRwczovL2RhdGF0cmFja2VyLmlldGYub3JnL2RvYy9odG1sL3JmYzM0NDcjYXBwZW5kaXgtQS4xLjIpXG4gKlxuICpcbiAqIEBwYXJhbSB7QVBJLkJ5dGVWaWV3PFJTQVB1YmxpY0tleT59IGtleVxuICogQHBhcmFtIHtudW1iZXJ9IGJ5dGVPZmZzZXRcbiAqIEByZXR1cm5zIHtSU0FQdWJsaWNLZXl9XG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGUgPSAoa2V5LCBieXRlT2Zmc2V0ID0gMCkgPT4ge1xuICBjb25zdCBbbiwgZV0gPSByZWFkU2VxdWVuY2VXaXRoKFtyZWFkSW50LCByZWFkSW50XSwga2V5LCBieXRlT2Zmc2V0KVxuXG4gIHJldHVybiB7IG4sIGUgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7UlNBUHVibGljS2V5fSBrZXlcbiAqIEByZXR1cm5zIHtBUEkuQnl0ZVZpZXc8UlNBUHVibGljS2V5Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9ICh7IG4sIGUgfSkgPT4gZW5jb2RlU2VxdWVuY2UoW2VuY29kZUludChuKSwgZW5jb2RlSW50KGUpXSlcblxuLyoqXG4gKiBAcGFyYW0ge1JTQVB1YmxpY0tleX0ga2V5XG4gKi9cbmV4cG9ydCBjb25zdCB0b1NQS0kgPSBrZXkgPT4gU1BLSS5lbmNvZGUoZW5jb2RlKGtleSkpXG5cbi8qKlxuICogQHBhcmFtIHtBUEkuQnl0ZVZpZXc8U1BLSS5TdWJqZWN0UHVibGljS2V5SW5mbz59IGluZm9cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21TUEtJID0gaW5mbyA9PiBkZWNvZGUoU1BLSS5kZWNvZGUoaW5mbykpXG5cbi8qKlxuICogQHBhcmFtIHtSU0FQdWJsaWNLZXl9IGtleVxuICogQHJldHVybnMge0pzb25XZWJLZXl9XG4gKi9cbmV4cG9ydCBjb25zdCB0b0pXSyA9ICh7IG4sIGUgfSkgPT4gKHtcbiAga3R5OiAnUlNBJyxcbiAgYWxnOiAnUlMyNTYnLFxuICBrZXlfb3BzOiBbJ3ZlcmlmeSddLFxuICBleHQ6IHRydWUsXG4gIG46IGJhc2U2NHVybC5iYXNlRW5jb2RlKG4pLFxuICBlOiBiYXNlNjR1cmwuYmFzZUVuY29kZShlKSxcbn0pXG5cbi8qKlxuICogQHBhcmFtIHtKc29uV2ViS2V5fSBqd2tcbiAqIEByZXR1cm5zIHtSU0FQdWJsaWNLZXl9XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tSldLID0gKHsgbiwgZSB9KSA9PiAoe1xuICBuOiBiYXNlNjR1cmxEZWNvZGUobiksXG4gIGU6IGJhc2U2NHVybERlY29kZShlKSxcbn0pXG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd8dW5kZWZpbmVkfSBpbnB1dFxuICovXG5jb25zdCBiYXNlNjR1cmxEZWNvZGUgPSAoaW5wdXQgPSAnJykgPT4gYmFzZTY0dXJsLmJhc2VEZWNvZGUoaW5wdXQpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/rsa/public-key.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/rsa/spki.js":
/*!********************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/rsa/spki.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SPKI_PARAMS_ENCODED: () => (/* binding */ SPKI_PARAMS_ENCODED),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _asn1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./asn1.js */ \"(ssr)/./node_modules/@ucanto/principal/src/rsa/asn1.js\");\n\n\n\n/**\n * @typedef {import('./public-key.js').RSAPublicKey} RSAPublicKey\n */\n/**\n * Described in RFC 5208 Section 4.1: https://tools.ietf.org/html/rfc5280#section-4.1\n * ```\n * SubjectPublicKeyInfo  ::=  SEQUENCE  {\n *    algorithm            AlgorithmIdentifier,\n *    subjectPublicKey     BIT STRING  }\n * ```\n *\n * @typedef {object} SubjectPublicKeyInfo\n * @property {API.ByteView<AlgorithmIdentifier>} algorithm\n * @property {API.ByteView<RSAPublicKey>} subjectPublicKey\n * @typedef {import('./pkcs8.js').AlgorithmIdentifier} AlgorithmIdentifier\n */\n\n/**\n * The ASN.1 DER encoded header that needs to be added to an\n * ASN.1 DER encoded RSAPublicKey to make it a SubjectPublicKeyInfo.\n *\n * This byte sequence is always the same.\n *\n * A human-readable version of this as part of a dumpasn1 dump:\n *\n *     SEQUENCE {\n *       OBJECT IDENTIFIER rsaEncryption (1 2 840 113549 1 1 1)\n *       NULL\n *     }\n *\n * See https://github.com/ucan-wg/ts-ucan/issues/30\n */\nconst SPKI_PARAMS_ENCODED = new Uint8Array([\n  48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0,\n])\n\n/**\n * @param {API.ByteView<RSAPublicKey>} key\n * @returns {API.ByteView<SubjectPublicKeyInfo>}\n */\nconst encode = key =>\n  (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeSequence)([SPKI_PARAMS_ENCODED, (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.encodeBitString)(key)])\n\n/**\n *\n * @param {API.ByteView<SubjectPublicKeyInfo>} info\n * @returns {API.ByteView<RSAPublicKey>}\n */\nconst decode = info => {\n  // go into the top-level SEQUENCE\n  const offset = (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.enterSequence)(info, 0)\n  // skip the header we expect (SKPI_PARAMS_ENCODED)\n  const keyOffset = (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.skipSequence)(info, offset)\n\n  // we expect the bitstring next\n  return (0,_asn1_js__WEBPACK_IMPORTED_MODULE_1__.readBitString)(info, keyOffset)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3JzYS9zcGtpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXdDO0FBT3RCOztBQUVsQjtBQUNBLGFBQWEsd0NBQXdDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLG1DQUFtQztBQUNqRCxjQUFjLDRCQUE0QjtBQUMxQyxhQUFhLDBDQUEwQztBQUN2RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QyxhQUFhO0FBQ2I7QUFDTztBQUNQLEVBQUUsd0RBQWMsdUJBQXVCLHlEQUFlOztBQUV0RDtBQUNBO0FBQ0EsV0FBVyxvQ0FBb0M7QUFDL0MsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLGlCQUFpQix1REFBYTtBQUM5QjtBQUNBLG9CQUFvQixzREFBWTs7QUFFaEM7QUFDQSxTQUFTLHVEQUFhO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3JzYS9zcGtpLmpzPzkxZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuaW1wb3J0IHtcbiAgZW5jb2RlU2VxdWVuY2UsXG4gIGVuY29kZUJpdFN0cmluZyxcbiAgZW50ZXJTZXF1ZW5jZSxcbiAgc2tpcFNlcXVlbmNlLFxuICByZWFkQml0U3RyaW5nLFxufSBmcm9tICcuL2FzbjEuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9wdWJsaWMta2V5LmpzJykuUlNBUHVibGljS2V5fSBSU0FQdWJsaWNLZXlcbiAqL1xuLyoqXG4gKiBEZXNjcmliZWQgaW4gUkZDIDUyMDggU2VjdGlvbiA0LjE6IGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM1MjgwI3NlY3Rpb24tNC4xXG4gKiBgYGBcbiAqIFN1YmplY3RQdWJsaWNLZXlJbmZvICA6Oj0gIFNFUVVFTkNFICB7XG4gKiAgICBhbGdvcml0aG0gICAgICAgICAgICBBbGdvcml0aG1JZGVudGlmaWVyLFxuICogICAgc3ViamVjdFB1YmxpY0tleSAgICAgQklUIFNUUklORyAgfVxuICogYGBgXG4gKlxuICogQHR5cGVkZWYge29iamVjdH0gU3ViamVjdFB1YmxpY0tleUluZm9cbiAqIEBwcm9wZXJ0eSB7QVBJLkJ5dGVWaWV3PEFsZ29yaXRobUlkZW50aWZpZXI+fSBhbGdvcml0aG1cbiAqIEBwcm9wZXJ0eSB7QVBJLkJ5dGVWaWV3PFJTQVB1YmxpY0tleT59IHN1YmplY3RQdWJsaWNLZXlcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vcGtjczguanMnKS5BbGdvcml0aG1JZGVudGlmaWVyfSBBbGdvcml0aG1JZGVudGlmaWVyXG4gKi9cblxuLyoqXG4gKiBUaGUgQVNOLjEgREVSIGVuY29kZWQgaGVhZGVyIHRoYXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gYW5cbiAqIEFTTi4xIERFUiBlbmNvZGVkIFJTQVB1YmxpY0tleSB0byBtYWtlIGl0IGEgU3ViamVjdFB1YmxpY0tleUluZm8uXG4gKlxuICogVGhpcyBieXRlIHNlcXVlbmNlIGlzIGFsd2F5cyB0aGUgc2FtZS5cbiAqXG4gKiBBIGh1bWFuLXJlYWRhYmxlIHZlcnNpb24gb2YgdGhpcyBhcyBwYXJ0IG9mIGEgZHVtcGFzbjEgZHVtcDpcbiAqXG4gKiAgICAgU0VRVUVOQ0Uge1xuICogICAgICAgT0JKRUNUIElERU5USUZJRVIgcnNhRW5jcnlwdGlvbiAoMSAyIDg0MCAxMTM1NDkgMSAxIDEpXG4gKiAgICAgICBOVUxMXG4gKiAgICAgfVxuICpcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdWNhbi13Zy90cy11Y2FuL2lzc3Vlcy8zMFxuICovXG5leHBvcnQgY29uc3QgU1BLSV9QQVJBTVNfRU5DT0RFRCA9IG5ldyBVaW50OEFycmF5KFtcbiAgNDgsIDEzLCA2LCA5LCA0MiwgMTM0LCA3MiwgMTM0LCAyNDcsIDEzLCAxLCAxLCAxLCA1LCAwLFxuXSlcblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5CeXRlVmlldzxSU0FQdWJsaWNLZXk+fSBrZXlcbiAqIEByZXR1cm5zIHtBUEkuQnl0ZVZpZXc8U3ViamVjdFB1YmxpY0tleUluZm8+fVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0ga2V5ID0+XG4gIGVuY29kZVNlcXVlbmNlKFtTUEtJX1BBUkFNU19FTkNPREVELCBlbmNvZGVCaXRTdHJpbmcoa2V5KV0pXG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7QVBJLkJ5dGVWaWV3PFN1YmplY3RQdWJsaWNLZXlJbmZvPn0gaW5mb1xuICogQHJldHVybnMge0FQSS5CeXRlVmlldzxSU0FQdWJsaWNLZXk+fVxuICovXG5leHBvcnQgY29uc3QgZGVjb2RlID0gaW5mbyA9PiB7XG4gIC8vIGdvIGludG8gdGhlIHRvcC1sZXZlbCBTRVFVRU5DRVxuICBjb25zdCBvZmZzZXQgPSBlbnRlclNlcXVlbmNlKGluZm8sIDApXG4gIC8vIHNraXAgdGhlIGhlYWRlciB3ZSBleHBlY3QgKFNLUElfUEFSQU1TX0VOQ09ERUQpXG4gIGNvbnN0IGtleU9mZnNldCA9IHNraXBTZXF1ZW5jZShpbmZvLCBvZmZzZXQpXG5cbiAgLy8gd2UgZXhwZWN0IHRoZSBiaXRzdHJpbmcgbmV4dFxuICByZXR1cm4gcmVhZEJpdFN0cmluZyhpbmZvLCBrZXlPZmZzZXQpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/rsa/spki.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/rsa/type.js":
/*!********************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/rsa/type.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/signer.js":
/*!******************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/signer.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   withDID: () => (/* binding */ withDID)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n\n\n/**\n * @template {API.SignerImporter} L\n * @template {API.SignerImporter} R\n * @param {L} left\n * @param {R} right\n * @returns {API.CompositeImporter<[L, R]>}\n */\nconst or = (left, right) => new Importer([left, right])\n\n/**\n * @template {[API.SignerImporter, ...API.SignerImporter[]]} Importers\n * @implements {API.CompositeImporter<Importers>}\n */\nclass Importer {\n  /**\n   * @param {Importers} variants\n   */\n  constructor(variants) {\n    this.variants = variants\n    this.from = create(variants)\n  }\n\n  /**\n   * @template {API.SignerImporter} Other\n   * @param {Other} other\n   * @returns {API.CompositeImporter<[Other, ...Importers]>}\n   */\n  or(other) {\n    return new Importer([other, ...this.variants])\n  }\n}\n\n/**\n * @template {[API.SignerImporter, ...API.SignerImporter[]]} Importers\n * @param {Importers} importers\n */\nconst create = importers => {\n  /**\n   * @template {API.DID} ID - DID that can be imported, which may be a type union.\n   * @template {API.SigAlg} Alg - Multicodec code corresponding to signature algorithm.\n   * @param {API.SignerArchive<ID, Alg>} archive\n   * @returns {API.Signer<ID, Alg>}\n   */\n  const from = archive => {\n    if (archive.id.startsWith('did:key:')) {\n      return /** @type {API.Signer<ID, Alg>} */ (importWith(archive, importers))\n    } else {\n      for (const [name, key] of Object.entries(archive.keys)) {\n        const id = /** @type {API.DIDKey} */ (name)\n        const signer = /** @type {API.Signer<API.DIDKey, Alg>} */ (\n          importWith(\n            {\n              id,\n              keys: { [id]: key },\n            },\n            importers\n          )\n        )\n\n        return signer.withDID(archive.id)\n      }\n\n      throw new Error(`Archive ${archive.id} contains no keys`)\n    }\n  }\n\n  return /** @type {API.Intersection<Importers[number]['from']>} */ (from)\n}\n\n/**\n * @param {API.SignerArchive} archive\n * @param {API.SignerImporter[]} importers\n * @returns {API.Signer}\n */\nconst importWith = (archive, importers) => {\n  for (const importer of importers) {\n    try {\n      return importer.from(archive)\n    } catch (_) {}\n  }\n  throw new Error(`Unsupported signer`)\n}\n/**\n * @template {number} Code\n * @template {API.DID} ID\n * @param {API.Signer<API.DID<'key'>, Code>} signer\n * @param {ID} id\n * @returns {API.Signer<ID, Code>}\n */\nconst withDID = ({ signer, verifier }, id) =>\n  new SignerWithDID(signer, verifier.withDID(id))\n\n/**\n * @template {API.DID} ID\n * @template {number} Code\n * @implements {API.Signer<ID, Code>}\n */\nclass SignerWithDID {\n  /**\n   * @param {API.Signer<API.DID<'key'>, Code>} key\n   * @param {API.Verifier<ID, Code>} verifier\n   */\n  constructor(key, verifier) {\n    this.key = key\n    this.verifier = verifier\n  }\n  /** @type {API.Signer<ID, Code>} */\n  get signer() {\n    return this\n  }\n\n  get signatureAlgorithm() {\n    return this.key.signatureAlgorithm\n  }\n  get signatureCode() {\n    return this.key.signatureCode\n  }\n\n  /**\n   * @returns {ID}\n   */\n  did() {\n    return this.verifier.did()\n  }\n\n  toDIDKey() {\n    return this.verifier.toDIDKey()\n  }\n\n  /**\n   * @template {API.DID} ID\n   * @param {ID} id\n   */\n  withDID(id) {\n    return withDID(this.key, id)\n  }\n\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   */\n  sign(payload) {\n    return this.key.sign(payload)\n  }\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   * @param {API.Signature<T, Code>} signature\n   */\n  verify(payload, signature) {\n    return this.verifier.verify(payload, signature)\n  }\n\n  toArchive() {\n    const { keys } = this.key.toArchive()\n    return {\n      id: this.did(),\n      keys,\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3NpZ25lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0M7O0FBRXhDO0FBQ0EsY0FBYyxvQkFBb0I7QUFDbEMsY0FBYyxvQkFBb0I7QUFDbEMsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQSxjQUFjLCtDQUErQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxXQUFXO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0Isb0JBQW9CO0FBQ3BDLGFBQWEsT0FBTztBQUNwQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsK0NBQStDO0FBQzdELFdBQVcsV0FBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QixnQkFBZ0IsWUFBWTtBQUM1QixhQUFhLDRCQUE0QjtBQUN6QyxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFCQUFxQjtBQUM3QyxNQUFNO0FBQ047QUFDQSw4QkFBOEIsWUFBWTtBQUMxQyxrQ0FBa0MsNkJBQTZCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixXQUFXO0FBQ2pDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpQ0FBaUMsWUFBWTtBQUM3QztBQUNBOztBQUVBLG9CQUFvQiw2Q0FBNkM7QUFDakU7O0FBRUE7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLHNCQUFzQjtBQUNqQyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFNBQVM7QUFDdkIsV0FBVyxrQ0FBa0M7QUFDN0MsV0FBVyxJQUFJO0FBQ2YsYUFBYTtBQUNiO0FBQ08sbUJBQW1CLGtCQUFrQjtBQUM1Qzs7QUFFQTtBQUNBLGNBQWMsU0FBUztBQUN2QixjQUFjLFFBQVE7QUFDdEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0NBQWtDO0FBQy9DLGFBQWEsd0JBQXdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCLGFBQWEsSUFBSTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUIsYUFBYSx3QkFBd0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3NpZ25lci5qcz9kMWUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcblxuLyoqXG4gKiBAdGVtcGxhdGUge0FQSS5TaWduZXJJbXBvcnRlcn0gTFxuICogQHRlbXBsYXRlIHtBUEkuU2lnbmVySW1wb3J0ZXJ9IFJcbiAqIEBwYXJhbSB7TH0gbGVmdFxuICogQHBhcmFtIHtSfSByaWdodFxuICogQHJldHVybnMge0FQSS5Db21wb3NpdGVJbXBvcnRlcjxbTCwgUl0+fVxuICovXG5leHBvcnQgY29uc3Qgb3IgPSAobGVmdCwgcmlnaHQpID0+IG5ldyBJbXBvcnRlcihbbGVmdCwgcmlnaHRdKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7W0FQSS5TaWduZXJJbXBvcnRlciwgLi4uQVBJLlNpZ25lckltcG9ydGVyW11dfSBJbXBvcnRlcnNcbiAqIEBpbXBsZW1lbnRzIHtBUEkuQ29tcG9zaXRlSW1wb3J0ZXI8SW1wb3J0ZXJzPn1cbiAqL1xuY2xhc3MgSW1wb3J0ZXIge1xuICAvKipcbiAgICogQHBhcmFtIHtJbXBvcnRlcnN9IHZhcmlhbnRzXG4gICAqL1xuICBjb25zdHJ1Y3Rvcih2YXJpYW50cykge1xuICAgIHRoaXMudmFyaWFudHMgPSB2YXJpYW50c1xuICAgIHRoaXMuZnJvbSA9IGNyZWF0ZSh2YXJpYW50cylcbiAgfVxuXG4gIC8qKlxuICAgKiBAdGVtcGxhdGUge0FQSS5TaWduZXJJbXBvcnRlcn0gT3RoZXJcbiAgICogQHBhcmFtIHtPdGhlcn0gb3RoZXJcbiAgICogQHJldHVybnMge0FQSS5Db21wb3NpdGVJbXBvcnRlcjxbT3RoZXIsIC4uLkltcG9ydGVyc10+fVxuICAgKi9cbiAgb3Iob3RoZXIpIHtcbiAgICByZXR1cm4gbmV3IEltcG9ydGVyKFtvdGhlciwgLi4udGhpcy52YXJpYW50c10pXG4gIH1cbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge1tBUEkuU2lnbmVySW1wb3J0ZXIsIC4uLkFQSS5TaWduZXJJbXBvcnRlcltdXX0gSW1wb3J0ZXJzXG4gKiBAcGFyYW0ge0ltcG9ydGVyc30gaW1wb3J0ZXJzXG4gKi9cbmNvbnN0IGNyZWF0ZSA9IGltcG9ydGVycyA9PiB7XG4gIC8qKlxuICAgKiBAdGVtcGxhdGUge0FQSS5ESUR9IElEIC0gRElEIHRoYXQgY2FuIGJlIGltcG9ydGVkLCB3aGljaCBtYXkgYmUgYSB0eXBlIHVuaW9uLlxuICAgKiBAdGVtcGxhdGUge0FQSS5TaWdBbGd9IEFsZyAtIE11bHRpY29kZWMgY29kZSBjb3JyZXNwb25kaW5nIHRvIHNpZ25hdHVyZSBhbGdvcml0aG0uXG4gICAqIEBwYXJhbSB7QVBJLlNpZ25lckFyY2hpdmU8SUQsIEFsZz59IGFyY2hpdmVcbiAgICogQHJldHVybnMge0FQSS5TaWduZXI8SUQsIEFsZz59XG4gICAqL1xuICBjb25zdCBmcm9tID0gYXJjaGl2ZSA9PiB7XG4gICAgaWYgKGFyY2hpdmUuaWQuc3RhcnRzV2l0aCgnZGlkOmtleTonKSkge1xuICAgICAgcmV0dXJuIC8qKiBAdHlwZSB7QVBJLlNpZ25lcjxJRCwgQWxnPn0gKi8gKGltcG9ydFdpdGgoYXJjaGl2ZSwgaW1wb3J0ZXJzKSlcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChjb25zdCBbbmFtZSwga2V5XSBvZiBPYmplY3QuZW50cmllcyhhcmNoaXZlLmtleXMpKSB7XG4gICAgICAgIGNvbnN0IGlkID0gLyoqIEB0eXBlIHtBUEkuRElES2V5fSAqLyAobmFtZSlcbiAgICAgICAgY29uc3Qgc2lnbmVyID0gLyoqIEB0eXBlIHtBUEkuU2lnbmVyPEFQSS5ESURLZXksIEFsZz59ICovIChcbiAgICAgICAgICBpbXBvcnRXaXRoKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBpZCxcbiAgICAgICAgICAgICAga2V5czogeyBbaWRdOiBrZXkgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbXBvcnRlcnNcbiAgICAgICAgICApXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gc2lnbmVyLndpdGhESUQoYXJjaGl2ZS5pZClcbiAgICAgIH1cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBBcmNoaXZlICR7YXJjaGl2ZS5pZH0gY29udGFpbnMgbm8ga2V5c2ApXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIC8qKiBAdHlwZSB7QVBJLkludGVyc2VjdGlvbjxJbXBvcnRlcnNbbnVtYmVyXVsnZnJvbSddPn0gKi8gKGZyb20pXG59XG5cbi8qKlxuICogQHBhcmFtIHtBUEkuU2lnbmVyQXJjaGl2ZX0gYXJjaGl2ZVxuICogQHBhcmFtIHtBUEkuU2lnbmVySW1wb3J0ZXJbXX0gaW1wb3J0ZXJzXG4gKiBAcmV0dXJucyB7QVBJLlNpZ25lcn1cbiAqL1xuY29uc3QgaW1wb3J0V2l0aCA9IChhcmNoaXZlLCBpbXBvcnRlcnMpID0+IHtcbiAgZm9yIChjb25zdCBpbXBvcnRlciBvZiBpbXBvcnRlcnMpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGltcG9ydGVyLmZyb20oYXJjaGl2ZSlcbiAgICB9IGNhdGNoIChfKSB7fVxuICB9XG4gIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgc2lnbmVyYClcbn1cbi8qKlxuICogQHRlbXBsYXRlIHtudW1iZXJ9IENvZGVcbiAqIEB0ZW1wbGF0ZSB7QVBJLkRJRH0gSURcbiAqIEBwYXJhbSB7QVBJLlNpZ25lcjxBUEkuRElEPCdrZXknPiwgQ29kZT59IHNpZ25lclxuICogQHBhcmFtIHtJRH0gaWRcbiAqIEByZXR1cm5zIHtBUEkuU2lnbmVyPElELCBDb2RlPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHdpdGhESUQgPSAoeyBzaWduZXIsIHZlcmlmaWVyIH0sIGlkKSA9PlxuICBuZXcgU2lnbmVyV2l0aERJRChzaWduZXIsIHZlcmlmaWVyLndpdGhESUQoaWQpKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7QVBJLkRJRH0gSURcbiAqIEB0ZW1wbGF0ZSB7bnVtYmVyfSBDb2RlXG4gKiBAaW1wbGVtZW50cyB7QVBJLlNpZ25lcjxJRCwgQ29kZT59XG4gKi9cbmNsYXNzIFNpZ25lcldpdGhESUQge1xuICAvKipcbiAgICogQHBhcmFtIHtBUEkuU2lnbmVyPEFQSS5ESUQ8J2tleSc+LCBDb2RlPn0ga2V5XG4gICAqIEBwYXJhbSB7QVBJLlZlcmlmaWVyPElELCBDb2RlPn0gdmVyaWZpZXJcbiAgICovXG4gIGNvbnN0cnVjdG9yKGtleSwgdmVyaWZpZXIpIHtcbiAgICB0aGlzLmtleSA9IGtleVxuICAgIHRoaXMudmVyaWZpZXIgPSB2ZXJpZmllclxuICB9XG4gIC8qKiBAdHlwZSB7QVBJLlNpZ25lcjxJRCwgQ29kZT59ICovXG4gIGdldCBzaWduZXIoKSB7XG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIGdldCBzaWduYXR1cmVBbGdvcml0aG0oKSB7XG4gICAgcmV0dXJuIHRoaXMua2V5LnNpZ25hdHVyZUFsZ29yaXRobVxuICB9XG4gIGdldCBzaWduYXR1cmVDb2RlKCkge1xuICAgIHJldHVybiB0aGlzLmtleS5zaWduYXR1cmVDb2RlXG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge0lEfVxuICAgKi9cbiAgZGlkKCkge1xuICAgIHJldHVybiB0aGlzLnZlcmlmaWVyLmRpZCgpXG4gIH1cblxuICB0b0RJREtleSgpIHtcbiAgICByZXR1cm4gdGhpcy52ZXJpZmllci50b0RJREtleSgpXG4gIH1cblxuICAvKipcbiAgICogQHRlbXBsYXRlIHtBUEkuRElEfSBJRFxuICAgKiBAcGFyYW0ge0lEfSBpZFxuICAgKi9cbiAgd2l0aERJRChpZCkge1xuICAgIHJldHVybiB3aXRoRElEKHRoaXMua2V5LCBpZClcbiAgfVxuXG4gIC8qKlxuICAgKiBAdGVtcGxhdGUgVFxuICAgKiBAcGFyYW0ge0FQSS5CeXRlVmlldzxUPn0gcGF5bG9hZFxuICAgKi9cbiAgc2lnbihwYXlsb2FkKSB7XG4gICAgcmV0dXJuIHRoaXMua2V5LnNpZ24ocGF5bG9hZClcbiAgfVxuICAvKipcbiAgICogQHRlbXBsYXRlIFRcbiAgICogQHBhcmFtIHtBUEkuQnl0ZVZpZXc8VD59IHBheWxvYWRcbiAgICogQHBhcmFtIHtBUEkuU2lnbmF0dXJlPFQsIENvZGU+fSBzaWduYXR1cmVcbiAgICovXG4gIHZlcmlmeShwYXlsb2FkLCBzaWduYXR1cmUpIHtcbiAgICByZXR1cm4gdGhpcy52ZXJpZmllci52ZXJpZnkocGF5bG9hZCwgc2lnbmF0dXJlKVxuICB9XG5cbiAgdG9BcmNoaXZlKCkge1xuICAgIGNvbnN0IHsga2V5cyB9ID0gdGhpcy5rZXkudG9BcmNoaXZlKClcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IHRoaXMuZGlkKCksXG4gICAgICBrZXlzLFxuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/principal/src/verifier.js":
/*!********************************************************!*\
  !*** ./node_modules/@ucanto/principal/src/verifier.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   withDID: () => (/* binding */ withDID)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n\n\n/**\n * @param {API.DID} did\n * @param {API.PrincipalParser[]} parsers\n * @return {API.Verifier}\n */\nconst parseWith = (did, parsers) => {\n  if (did.startsWith('did:')) {\n    for (const parser of parsers) {\n      try {\n        return parser.parse(did)\n      } catch (_) {}\n    }\n    throw new Error(`Unsupported did ${did}`)\n  } else {\n    throw new Error(`Expected did instead got ${did}`)\n  }\n}\n\n/**\n * @param {API.PrincipalParser} left\n * @param {API.PrincipalParser} right\n * @returns {API.ComposedDIDParser}\n */\nconst or = (left, right) => new Parser([left, right])\n\n/**\n * @implements {API.ComposedDIDParser}\n */\nclass Parser {\n  /**\n   * @param {API.PrincipalParser[]} variants\n   */\n  constructor(variants) {\n    this.variants = variants\n  }\n\n  /**\n   * @param {API.DID} did\n   */\n  parse(did) {\n    return parseWith(did, this.variants)\n  }\n\n  /**\n   * @param {API.PrincipalParser} parser\n   */\n  or(parser) {\n    return new Parser([...this.variants, parser])\n  }\n}\n\n/**\n * @template {API.DID} ID\n * @template {API.MulticodecCode} SigAlg\n * @param {API.VerifierKey<SigAlg>} key\n * @param {ID} id\n * @returns {API.Verifier<ID, SigAlg>}\n */\nconst withDID = (key, id) => new VerifierWithDID(id, key)\n\n/**\n * @template {API.DID} ID\n * @template {API.MulticodecCode} SigAlg\n * @implements {API.Verifier<ID, SigAlg>}\n */\nclass VerifierWithDID {\n  /**\n   * @param {ID} id\n   * @param {API.VerifierKey<SigAlg>} key\n   */\n  constructor(id, key) {\n    this.id = id\n    this.key = key\n  }\n  did() {\n    return this.id\n  }\n\n  toDIDKey() {\n    return this.key.toDIDKey()\n  }\n\n  /**\n   * @template T\n   * @param {API.ByteView<T>} payload\n   * @param {API.Signature<T, SigAlg>} signature\n   * @returns {API.Await<boolean>}\n   */\n  verify(payload, signature) {\n    return this.key.verify(payload, signature)\n  }\n\n  /**\n   * @template {API.DID} ID\n   * @param {ID} id\n   */\n  withDID(id) {\n    return withDID(this.key, id)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3ZlcmlmaWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3Qzs7QUFFeEM7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyx1QkFBdUI7QUFDbEMsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLHVDQUF1QyxJQUFJO0FBQzNDLElBQUk7QUFDSixnREFBZ0QsSUFBSTtBQUNwRDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEMsV0FBVyxxQkFBcUI7QUFDaEMsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1QkFBdUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCLGNBQWMsb0JBQW9CO0FBQ2xDLFdBQVcseUJBQXlCO0FBQ3BDLFdBQVcsSUFBSTtBQUNmLGFBQWE7QUFDYjtBQUNPOztBQUVQO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCLGNBQWMsb0JBQW9CO0FBQ2xDLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLElBQUk7QUFDakIsYUFBYSx5QkFBeUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCLGFBQWEsMEJBQTBCO0FBQ3ZDLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCLGFBQWEsSUFBSTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by9wcmluY2lwYWwvc3JjL3ZlcmlmaWVyLmpzPzE0ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuXG4vKipcbiAqIEBwYXJhbSB7QVBJLkRJRH0gZGlkXG4gKiBAcGFyYW0ge0FQSS5QcmluY2lwYWxQYXJzZXJbXX0gcGFyc2Vyc1xuICogQHJldHVybiB7QVBJLlZlcmlmaWVyfVxuICovXG5jb25zdCBwYXJzZVdpdGggPSAoZGlkLCBwYXJzZXJzKSA9PiB7XG4gIGlmIChkaWQuc3RhcnRzV2l0aCgnZGlkOicpKSB7XG4gICAgZm9yIChjb25zdCBwYXJzZXIgb2YgcGFyc2Vycykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIHBhcnNlci5wYXJzZShkaWQpXG4gICAgICB9IGNhdGNoIChfKSB7fVxuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGRpZCAke2RpZH1gKVxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgZGlkIGluc3RlYWQgZ290ICR7ZGlkfWApXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FQSS5QcmluY2lwYWxQYXJzZXJ9IGxlZnRcbiAqIEBwYXJhbSB7QVBJLlByaW5jaXBhbFBhcnNlcn0gcmlnaHRcbiAqIEByZXR1cm5zIHtBUEkuQ29tcG9zZWRESURQYXJzZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBvciA9IChsZWZ0LCByaWdodCkgPT4gbmV3IFBhcnNlcihbbGVmdCwgcmlnaHRdKVxuXG4vKipcbiAqIEBpbXBsZW1lbnRzIHtBUEkuQ29tcG9zZWRESURQYXJzZXJ9XG4gKi9cbmNsYXNzIFBhcnNlciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0FQSS5QcmluY2lwYWxQYXJzZXJbXX0gdmFyaWFudHNcbiAgICovXG4gIGNvbnN0cnVjdG9yKHZhcmlhbnRzKSB7XG4gICAgdGhpcy52YXJpYW50cyA9IHZhcmlhbnRzXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtBUEkuRElEfSBkaWRcbiAgICovXG4gIHBhcnNlKGRpZCkge1xuICAgIHJldHVybiBwYXJzZVdpdGgoZGlkLCB0aGlzLnZhcmlhbnRzKVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7QVBJLlByaW5jaXBhbFBhcnNlcn0gcGFyc2VyXG4gICAqL1xuICBvcihwYXJzZXIpIHtcbiAgICByZXR1cm4gbmV3IFBhcnNlcihbLi4udGhpcy52YXJpYW50cywgcGFyc2VyXSlcbiAgfVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7QVBJLkRJRH0gSURcbiAqIEB0ZW1wbGF0ZSB7QVBJLk11bHRpY29kZWNDb2RlfSBTaWdBbGdcbiAqIEBwYXJhbSB7QVBJLlZlcmlmaWVyS2V5PFNpZ0FsZz59IGtleVxuICogQHBhcmFtIHtJRH0gaWRcbiAqIEByZXR1cm5zIHtBUEkuVmVyaWZpZXI8SUQsIFNpZ0FsZz59XG4gKi9cbmV4cG9ydCBjb25zdCB3aXRoRElEID0gKGtleSwgaWQpID0+IG5ldyBWZXJpZmllcldpdGhESUQoaWQsIGtleSlcblxuLyoqXG4gKiBAdGVtcGxhdGUge0FQSS5ESUR9IElEXG4gKiBAdGVtcGxhdGUge0FQSS5NdWx0aWNvZGVjQ29kZX0gU2lnQWxnXG4gKiBAaW1wbGVtZW50cyB7QVBJLlZlcmlmaWVyPElELCBTaWdBbGc+fVxuICovXG5jbGFzcyBWZXJpZmllcldpdGhESUQge1xuICAvKipcbiAgICogQHBhcmFtIHtJRH0gaWRcbiAgICogQHBhcmFtIHtBUEkuVmVyaWZpZXJLZXk8U2lnQWxnPn0ga2V5XG4gICAqL1xuICBjb25zdHJ1Y3RvcihpZCwga2V5KSB7XG4gICAgdGhpcy5pZCA9IGlkXG4gICAgdGhpcy5rZXkgPSBrZXlcbiAgfVxuICBkaWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaWRcbiAgfVxuXG4gIHRvRElES2V5KCkge1xuICAgIHJldHVybiB0aGlzLmtleS50b0RJREtleSgpXG4gIH1cblxuICAvKipcbiAgICogQHRlbXBsYXRlIFRcbiAgICogQHBhcmFtIHtBUEkuQnl0ZVZpZXc8VD59IHBheWxvYWRcbiAgICogQHBhcmFtIHtBUEkuU2lnbmF0dXJlPFQsIFNpZ0FsZz59IHNpZ25hdHVyZVxuICAgKiBAcmV0dXJucyB7QVBJLkF3YWl0PGJvb2xlYW4+fVxuICAgKi9cbiAgdmVyaWZ5KHBheWxvYWQsIHNpZ25hdHVyZSkge1xuICAgIHJldHVybiB0aGlzLmtleS52ZXJpZnkocGF5bG9hZCwgc2lnbmF0dXJlKVxuICB9XG5cbiAgLyoqXG4gICAqIEB0ZW1wbGF0ZSB7QVBJLkRJRH0gSURcbiAgICogQHBhcmFtIHtJRH0gaWRcbiAgICovXG4gIHdpdGhESUQoaWQpIHtcbiAgICByZXR1cm4gd2l0aERJRCh0aGlzLmtleSwgaWQpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/principal/src/verifier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/car.js":
/*!***************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/car.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codec: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_0__.CAR),\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   inbound: () => (/* binding */ inbound),\n/* harmony export */   outbound: () => (/* binding */ outbound),\n/* harmony export */   request: () => (/* reexport module object */ _car_request_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   response: () => (/* reexport module object */ _car_response_js__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _car_request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./car/request.js */ \"(ssr)/./node_modules/@ucanto/transport/src/car/request.js\");\n/* harmony import */ var _car_response_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./car/response.js */ \"(ssr)/./node_modules/@ucanto/transport/src/car/response.js\");\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@ucanto/transport/src/codec.js\");\n\n\n\n\n\n\n\nconst contentType = _ucanto_core__WEBPACK_IMPORTED_MODULE_0__.CAR.contentType\n\nconst inbound = _codec_js__WEBPACK_IMPORTED_MODULE_3__.inbound({\n  decoders: {\n    [_car_request_js__WEBPACK_IMPORTED_MODULE_1__.contentType]: _car_request_js__WEBPACK_IMPORTED_MODULE_1__,\n  },\n  encoders: {\n    [_car_response_js__WEBPACK_IMPORTED_MODULE_2__.contentType]: _car_response_js__WEBPACK_IMPORTED_MODULE_2__,\n  },\n})\n\nconst outbound = _codec_js__WEBPACK_IMPORTED_MODULE_3__.outbound({\n  encoders: {\n    [_car_request_js__WEBPACK_IMPORTED_MODULE_1__.contentType]: _car_request_js__WEBPACK_IMPORTED_MODULE_1__,\n  },\n  decoders: {\n    [_car_response_js__WEBPACK_IMPORTED_MODULE_2__.contentType]: _car_response_js__WEBPACK_IMPORTED_MODULE_2__,\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2Nhci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ1M7QUFDRTtBQUNWOztBQUVPOztBQUVuQyxvQkFBb0IseURBQWU7O0FBRW5DLGdCQUFnQiw4Q0FBYTtBQUNwQztBQUNBLEtBQUssd0RBQW1CLEdBQUcsNENBQU87QUFDbEMsR0FBRztBQUNIO0FBQ0EsS0FBSyx5REFBb0IsR0FBRyw2Q0FBUTtBQUNwQyxHQUFHO0FBQ0gsQ0FBQzs7QUFFTSxpQkFBaUIsK0NBQWM7QUFDdEM7QUFDQSxLQUFLLHdEQUFtQixHQUFHLDRDQUFPO0FBQ2xDLEdBQUc7QUFDSDtBQUNBLEtBQUsseURBQW9CLEdBQUcsNkNBQVE7QUFDcEMsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3RyYW5zcG9ydC9zcmMvY2FyLmpzPzA5NDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0FSIH0gZnJvbSAnQHVjYW50by9jb3JlJ1xuaW1wb3J0ICogYXMgcmVxdWVzdCBmcm9tICcuL2Nhci9yZXF1ZXN0LmpzJ1xuaW1wb3J0ICogYXMgcmVzcG9uc2UgZnJvbSAnLi9jYXIvcmVzcG9uc2UuanMnXG5pbXBvcnQgKiBhcyBDb2RlYyBmcm9tICcuL2NvZGVjLmpzJ1xuXG5leHBvcnQgeyBDQVIgYXMgY29kZWMsIHJlcXVlc3QsIHJlc3BvbnNlIH1cblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlID0gQ0FSLmNvbnRlbnRUeXBlXG5cbmV4cG9ydCBjb25zdCBpbmJvdW5kID0gQ29kZWMuaW5ib3VuZCh7XG4gIGRlY29kZXJzOiB7XG4gICAgW3JlcXVlc3QuY29udGVudFR5cGVdOiByZXF1ZXN0LFxuICB9LFxuICBlbmNvZGVyczoge1xuICAgIFtyZXNwb25zZS5jb250ZW50VHlwZV06IHJlc3BvbnNlLFxuICB9LFxufSlcblxuZXhwb3J0IGNvbnN0IG91dGJvdW5kID0gQ29kZWMub3V0Ym91bmQoe1xuICBlbmNvZGVyczoge1xuICAgIFtyZXF1ZXN0LmNvbnRlbnRUeXBlXTogcmVxdWVzdCxcbiAgfSxcbiAgZGVjb2RlcnM6IHtcbiAgICBbcmVzcG9uc2UuY29udGVudFR5cGVdOiByZXNwb25zZSxcbiAgfSxcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/car.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/car/request.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/car/request.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codec: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR),\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n\n\n\n\n\nconst contentType = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR.contentType\n\nconst HEADERS = Object.freeze({\n  'content-type': contentType,\n  // We will signal that we want to receive a CAR file in the response\n  accept: contentType,\n})\n\n/**\n * Encodes `AgentMessage` into an `HTTPRequest`.\n *\n * @template {API.AgentMessage} Message\n * @param {Message} message\n * @param {API.EncodeOptions & { headers?: Record<string, string> }} [options]\n * @returns {API.HTTPRequest<Message>}\n */\nconst encode = (message, options) => {\n  const blocks = new Map()\n  for (const block of message.iterateIPLDBlocks()) {\n    blocks.set(`${block.cid}`, block)\n  }\n\n  /**\n   * Cast to Uint8Array to remove phantom type set by the\n   * CAR encoder which is too specific.\n   *\n   * @type {Uint8Array}\n   */\n  const body = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR.encode({\n    roots: [message.root],\n    blocks,\n  })\n\n  return {\n    headers: options?.headers || { ...HEADERS },\n    body,\n  }\n}\n\n/**\n * Decodes `AgentMessage` from the received `HTTPRequest`.\n *\n * @template {API.AgentMessage} Message\n * @param {API.HTTPRequest<Message>} request\n * @returns {Promise<Message>}\n */\nconst decode = async ({ headers, body }) => {\n  const { roots, blocks } = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR.decode(/** @type {Uint8Array} */ (body))\n  const message = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Message.view({ root: roots[0].cid, store: blocks })\n  return /** @type {Message} */ (message)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2Nhci9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF3QztBQUNHOztBQUVwQjs7QUFFaEIsb0JBQW9CLHlEQUFlOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsY0FBYyxrQkFBa0I7QUFDaEMsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsc0JBQXNCLG9DQUFvQztBQUNyRSxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQSxrQkFBa0IsVUFBVTtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLGVBQWUsb0RBQVU7QUFDekI7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxtQ0FBbUMsWUFBWTtBQUMvQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxrQkFBa0I7QUFDaEMsV0FBVywwQkFBMEI7QUFDckMsYUFBYTtBQUNiO0FBQ08sd0JBQXdCLGVBQWU7QUFDOUMsVUFBVSxnQkFBZ0IsRUFBRSxvREFBVSxZQUFZLFlBQVk7QUFDOUQsa0JBQWtCLHNEQUFZLEdBQUcsbUNBQW1DO0FBQ3BFLG9CQUFvQixTQUFTO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2Nhci9yZXF1ZXN0LmpzPzI1MjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuaW1wb3J0IHsgQ0FSLCBNZXNzYWdlIH0gZnJvbSAnQHVjYW50by9jb3JlJ1xuXG5leHBvcnQgeyBDQVIgYXMgY29kZWMgfVxuXG5leHBvcnQgY29uc3QgY29udGVudFR5cGUgPSBDQVIuY29udGVudFR5cGVcblxuY29uc3QgSEVBREVSUyA9IE9iamVjdC5mcmVlemUoe1xuICAnY29udGVudC10eXBlJzogY29udGVudFR5cGUsXG4gIC8vIFdlIHdpbGwgc2lnbmFsIHRoYXQgd2Ugd2FudCB0byByZWNlaXZlIGEgQ0FSIGZpbGUgaW4gdGhlIHJlc3BvbnNlXG4gIGFjY2VwdDogY29udGVudFR5cGUsXG59KVxuXG4vKipcbiAqIEVuY29kZXMgYEFnZW50TWVzc2FnZWAgaW50byBhbiBgSFRUUFJlcXVlc3RgLlxuICpcbiAqIEB0ZW1wbGF0ZSB7QVBJLkFnZW50TWVzc2FnZX0gTWVzc2FnZVxuICogQHBhcmFtIHtNZXNzYWdlfSBtZXNzYWdlXG4gKiBAcGFyYW0ge0FQSS5FbmNvZGVPcHRpb25zICYgeyBoZWFkZXJzPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPiB9fSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtBUEkuSFRUUFJlcXVlc3Q8TWVzc2FnZT59XG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGUgPSAobWVzc2FnZSwgb3B0aW9ucykgPT4ge1xuICBjb25zdCBibG9ja3MgPSBuZXcgTWFwKClcbiAgZm9yIChjb25zdCBibG9jayBvZiBtZXNzYWdlLml0ZXJhdGVJUExEQmxvY2tzKCkpIHtcbiAgICBibG9ja3Muc2V0KGAke2Jsb2NrLmNpZH1gLCBibG9jaylcbiAgfVxuXG4gIC8qKlxuICAgKiBDYXN0IHRvIFVpbnQ4QXJyYXkgdG8gcmVtb3ZlIHBoYW50b20gdHlwZSBzZXQgYnkgdGhlXG4gICAqIENBUiBlbmNvZGVyIHdoaWNoIGlzIHRvbyBzcGVjaWZpYy5cbiAgICpcbiAgICogQHR5cGUge1VpbnQ4QXJyYXl9XG4gICAqL1xuICBjb25zdCBib2R5ID0gQ0FSLmVuY29kZSh7XG4gICAgcm9vdHM6IFttZXNzYWdlLnJvb3RdLFxuICAgIGJsb2NrcyxcbiAgfSlcblxuICByZXR1cm4ge1xuICAgIGhlYWRlcnM6IG9wdGlvbnM/LmhlYWRlcnMgfHwgeyAuLi5IRUFERVJTIH0sXG4gICAgYm9keSxcbiAgfVxufVxuXG4vKipcbiAqIERlY29kZXMgYEFnZW50TWVzc2FnZWAgZnJvbSB0aGUgcmVjZWl2ZWQgYEhUVFBSZXF1ZXN0YC5cbiAqXG4gKiBAdGVtcGxhdGUge0FQSS5BZ2VudE1lc3NhZ2V9IE1lc3NhZ2VcbiAqIEBwYXJhbSB7QVBJLkhUVFBSZXF1ZXN0PE1lc3NhZ2U+fSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZTxNZXNzYWdlPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IGFzeW5jICh7IGhlYWRlcnMsIGJvZHkgfSkgPT4ge1xuICBjb25zdCB7IHJvb3RzLCBibG9ja3MgfSA9IENBUi5kZWNvZGUoLyoqIEB0eXBlIHtVaW50OEFycmF5fSAqLyAoYm9keSkpXG4gIGNvbnN0IG1lc3NhZ2UgPSBNZXNzYWdlLnZpZXcoeyByb290OiByb290c1swXS5jaWQsIHN0b3JlOiBibG9ja3MgfSlcbiAgcmV0dXJuIC8qKiBAdHlwZSB7TWVzc2FnZX0gKi8gKG1lc3NhZ2UpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/car/request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/car/response.js":
/*!************************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/car/response.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codec: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR),\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n\n\n\n\nconst contentType = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR.contentType\n\nconst HEADERS = Object.freeze({\n  'content-type': contentType,\n})\n\n/**\n * Encodes `AgentMessage` into an `HTTPRequest`.\n *\n * @template {API.AgentMessage} Message\n * @param {Message} message\n * @param {API.EncodeOptions} [options]\n * @returns {API.HTTPResponse<Message>}\n */\nconst encode = (message, options) => {\n  const blocks = new Map()\n  for (const block of message.iterateIPLDBlocks()) {\n    blocks.set(`${block.cid}`, block)\n  }\n\n  /**\n   * Cast to Uint8Array to remove phantom type set by the\n   * CAR encoder which is too specific.\n   *\n   * @type {Uint8Array}\n   */\n  const body = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR.encode({\n    roots: [message.root],\n    blocks,\n  })\n\n  return {\n    headers: { ...HEADERS },\n    body,\n  }\n}\n\n/**\n * Decodes `AgentMessage` from the received `HTTPResponse`.\n *\n * @template {API.AgentMessage} Message\n * @param {API.HTTPResponse<Message>} response\n * @returns {Promise<Message>}\n */\nconst decode = async ({ headers, body }) => {\n  const { roots, blocks } = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.CAR.decode(/** @type {Uint8Array} */ (body))\n  const message = _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.Message.view({ root: roots[0].cid, store: blocks })\n  return /** @type {Message} */ (message)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2Nhci9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBd0M7QUFDRztBQUNwQjs7QUFFaEIsb0JBQW9CLHlEQUFlOztBQUUxQztBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxjQUFjLGtCQUFrQjtBQUNoQyxXQUFXLFNBQVM7QUFDcEIsV0FBVyxtQkFBbUI7QUFDOUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0Esa0JBQWtCLFVBQVU7QUFDNUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxlQUFlLG9EQUFVO0FBQ3pCO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsZUFBZSxZQUFZO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGtCQUFrQjtBQUNoQyxXQUFXLDJCQUEyQjtBQUN0QyxhQUFhO0FBQ2I7QUFDTyx3QkFBd0IsZUFBZTtBQUM5QyxVQUFVLGdCQUFnQixFQUFFLG9EQUFVLFlBQVksWUFBWTtBQUM5RCxrQkFBa0Isc0RBQVksR0FBRyxtQ0FBbUM7QUFDcEUsb0JBQW9CLFNBQVM7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3RyYW5zcG9ydC9zcmMvY2FyL3Jlc3BvbnNlLmpzPzk3NTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuaW1wb3J0IHsgQ0FSLCBNZXNzYWdlIH0gZnJvbSAnQHVjYW50by9jb3JlJ1xuZXhwb3J0IHsgQ0FSIGFzIGNvZGVjIH1cblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlID0gQ0FSLmNvbnRlbnRUeXBlXG5cbmNvbnN0IEhFQURFUlMgPSBPYmplY3QuZnJlZXplKHtcbiAgJ2NvbnRlbnQtdHlwZSc6IGNvbnRlbnRUeXBlLFxufSlcblxuLyoqXG4gKiBFbmNvZGVzIGBBZ2VudE1lc3NhZ2VgIGludG8gYW4gYEhUVFBSZXF1ZXN0YC5cbiAqXG4gKiBAdGVtcGxhdGUge0FQSS5BZ2VudE1lc3NhZ2V9IE1lc3NhZ2VcbiAqIEBwYXJhbSB7TWVzc2FnZX0gbWVzc2FnZVxuICogQHBhcmFtIHtBUEkuRW5jb2RlT3B0aW9uc30gW29wdGlvbnNdXG4gKiBAcmV0dXJucyB7QVBJLkhUVFBSZXNwb25zZTxNZXNzYWdlPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChtZXNzYWdlLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IGJsb2NrcyA9IG5ldyBNYXAoKVxuICBmb3IgKGNvbnN0IGJsb2NrIG9mIG1lc3NhZ2UuaXRlcmF0ZUlQTERCbG9ja3MoKSkge1xuICAgIGJsb2Nrcy5zZXQoYCR7YmxvY2suY2lkfWAsIGJsb2NrKVxuICB9XG5cbiAgLyoqXG4gICAqIENhc3QgdG8gVWludDhBcnJheSB0byByZW1vdmUgcGhhbnRvbSB0eXBlIHNldCBieSB0aGVcbiAgICogQ0FSIGVuY29kZXIgd2hpY2ggaXMgdG9vIHNwZWNpZmljLlxuICAgKlxuICAgKiBAdHlwZSB7VWludDhBcnJheX1cbiAgICovXG4gIGNvbnN0IGJvZHkgPSBDQVIuZW5jb2RlKHtcbiAgICByb290czogW21lc3NhZ2Uucm9vdF0sXG4gICAgYmxvY2tzLFxuICB9KVxuXG4gIHJldHVybiB7XG4gICAgaGVhZGVyczogeyAuLi5IRUFERVJTIH0sXG4gICAgYm9keSxcbiAgfVxufVxuXG4vKipcbiAqIERlY29kZXMgYEFnZW50TWVzc2FnZWAgZnJvbSB0aGUgcmVjZWl2ZWQgYEhUVFBSZXNwb25zZWAuXG4gKlxuICogQHRlbXBsYXRlIHtBUEkuQWdlbnRNZXNzYWdlfSBNZXNzYWdlXG4gKiBAcGFyYW0ge0FQSS5IVFRQUmVzcG9uc2U8TWVzc2FnZT59IHJlc3BvbnNlXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxNZXNzYWdlPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IGFzeW5jICh7IGhlYWRlcnMsIGJvZHkgfSkgPT4ge1xuICBjb25zdCB7IHJvb3RzLCBibG9ja3MgfSA9IENBUi5kZWNvZGUoLyoqIEB0eXBlIHtVaW50OEFycmF5fSAqLyAoYm9keSkpXG4gIGNvbnN0IG1lc3NhZ2UgPSBNZXNzYWdlLnZpZXcoeyByb290OiByb290c1swXS5jaWQsIHN0b3JlOiBibG9ja3MgfSlcbiAgcmV0dXJuIC8qKiBAdHlwZSB7TWVzc2FnZX0gKi8gKG1lc3NhZ2UpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/car/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/codec.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/codec.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatAcceptHeader: () => (/* binding */ formatAcceptHeader),\n/* harmony export */   formatMediaType: () => (/* binding */ formatMediaType),\n/* harmony export */   inbound: () => (/* binding */ inbound),\n/* harmony export */   outbound: () => (/* binding */ outbound),\n/* harmony export */   parseAcceptHeader: () => (/* binding */ parseAcceptHeader),\n/* harmony export */   parseMediaType: () => (/* binding */ parseMediaType)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n\n\n/**\n * @typedef {`${Lowercase<string>}/${Lowercase<string>}`|`${Lowercase<string>}/${Lowercase<string>}+${Lowercase<string>}`} ContentType\n * @typedef {`${Lowercase<string>}/${Lowercase<string>}`|`${Lowercase<string>}/${Lowercase<string>};q=${number}.${number}`} MediaType\n * @param {object} source\n * @param {Record<ContentType, API.Transport.RequestDecoder>} source.decoders\n * @param {Record<MediaType, API.Transport.ResponseEncoder>} source.encoders\n * @returns {API.InboundCodec}\n */\nconst inbound = source => new Inbound(source)\n\n/**\n * @implements {API.InboundCodec}\n */\nclass Inbound {\n  /**\n   * @param {API.HTTPRequest} request\n   * @returns {API.Result<API.InboundAcceptCodec, API.HTTPError>} transport\n   */\n  accept({ headers }) {\n    const contentType = headers['content-type'] || headers['Content-Type']\n    const decoder = this.decoders[contentType]\n    if (!decoder) {\n      return {\n        error: {\n          status: 415,\n          message: `The server cannot process the request because the payload format is not supported. Please check the content-type header and try again with a supported media type.`,\n          headers: {\n            accept: Object.keys(this.decoders).join(', '),\n          },\n        },\n      }\n    }\n\n    const accept = parseAcceptHeader(headers.accept || headers.Accept || '*/*')\n    for (const { category, type } of accept) {\n      for (const encoder of this.encoders) {\n        const select =\n          (category === '*' || category === encoder.category) &&\n          (type === '*' || type === encoder.type)\n\n        if (select) {\n          return { ok: { ...encoder, decoder } }\n        }\n      }\n    }\n\n    return {\n      error: {\n        status: 406,\n        message: `The requested resource cannot be served in the requested content type. Please specify a supported content type using the Accept header.`,\n        headers: {\n          accept: formatAcceptHeader(Object.values(this.encoders)),\n        },\n      },\n    }\n  }\n\n  /**\n   * @param {object} source\n   * @param {Record<string, API.Transport.RequestDecoder>} source.decoders\n   * @param {Record<string, API.Transport.ResponseEncoder>} source.encoders\n   */\n  constructor({ decoders = {}, encoders = {} }) {\n    this.decoders = decoders\n\n    if (Object.keys(decoders).length === 0) {\n      throw new Error('At least one decoder MUST be provided')\n    }\n\n    // We sort the encoders by preference, so that we can pick the most\n    // preferred one when client accepts multiple content types.\n    this.encoders = Object.entries(encoders)\n      .map(([mediaType, encoder]) => {\n        return { ...parseMediaType(mediaType), encoder }\n      })\n      .sort((a, b) => b.preference - a.preference)\n\n    if (this.encoders.length === 0) {\n      throw new Error('At least one encoder MUST be provided')\n    }\n  }\n}\n\n/**\n * @param {object} source\n * @param {Record<MediaType, API.Transport.RequestEncoder>} source.encoders\n * @param {Record<ContentType, API.Transport.ResponseDecoder>} source.decoders\n * @returns {API.OutboundCodec}\n */\nconst outbound = source => new Outbound(source)\n\n/**\n * @implements {API.OutboundCodec}\n */\nclass Outbound {\n  /**\n   * @param {object} source\n   * @param {Record<string, API.Transport.RequestEncoder>} source.encoders\n   * @param {Record<string, API.Transport.ResponseDecoder>} source.decoders\n   */\n  constructor({ decoders = {}, encoders = {} }) {\n    this.decoders = decoders\n\n    if (Object.keys(decoders).length === 0) {\n      throw new Error('At least one decoder MUST be provided')\n    }\n\n    // We sort the encoders by preference, so that we can pick the most\n    // preferred one when client accepts multiple content types.\n    this.encoders = Object.entries(encoders)\n      .map(([mediaType, encoder]) => {\n        return { ...parseMediaType(mediaType), encoder }\n      })\n      .sort((a, b) => b.preference - a.preference)\n\n    this.acceptType = formatAcceptHeader(this.encoders)\n\n    if (this.encoders.length === 0) {\n      throw new Error('At least one encoder MUST be provided')\n    }\n\n    this.encoder = this.encoders[0].encoder\n  }\n\n  /**\n   * @template {API.AgentMessage} Message\n   * @param {Message} message\n   */\n  encode(message) {\n    return this.encoder.encode(message, {\n      accept: this.acceptType,\n    })\n  }\n  /**\n   * @template {API.AgentMessage} Message\n   * @param {API.HTTPResponse<Message>} response\n   * @returns {API.Await<Message>}\n   */\n  decode(response) {\n    const { headers } = response\n    const contentType = headers['content-type'] || headers['Content-Type']\n    const decoder = this.decoders[contentType] || this.decoders['*/*']\n    switch (response.status) {\n      case 415:\n      case 406:\n        throw Object.assign(\n          new RangeError(new TextDecoder().decode(response.body)),\n          {\n            status: response.status,\n            headers: response.headers,\n          }\n        )\n    }\n    if (!decoder) {\n      throw Object.assign(\n        TypeError(\n          `Can not decode response with content-type '${contentType}' because no matching transport decoder is configured.`\n        ),\n        {\n          error: true,\n        }\n      )\n    }\n\n    return decoder.decode(response)\n  }\n}\n\n/**\n * @typedef {{ category: string, type: string, preference: number }} Media\n * @param {string} source\n * @returns {Media}\n */\nconst parseMediaType = source => {\n  const [mediaType = '*/*', mediaRange = ''] = source.trim().split(';')\n  const [category = '*', type = '*'] = mediaType.split('/')\n  const params = new URLSearchParams(mediaRange)\n  const preference = parseFloat(params.get('q') || '0')\n  return {\n    category,\n    type,\n    /* c8 ignore next */\n    preference: isNaN(preference) ? 0 : preference,\n  }\n}\n\n/**\n * @param {Media} media\n */\nconst formatMediaType = ({ category, type, preference }) =>\n  /** @type {MediaType}  */ (\n    `${category}/${type}${preference ? `;q=${preference}` : ''}`\n  )\n\n/**\n * @param {string} source\n */\nconst parseAcceptHeader = source =>\n  source\n    .split(',')\n    .map(parseMediaType)\n    .sort((a, b) => b.preference - a.preference)\n\n/**\n * @param {Media[]} source\n */\nconst formatAcceptHeader = source =>\n  source.map(formatMediaType).join(', ')\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/http.js":
/*!****************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/http.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   open: () => (/* binding */ open)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n\n\n/**\n * @typedef {{\n * ok: boolean\n * arrayBuffer():API.Await<ArrayBuffer>\n * headers: {\n *  entries?: () => Iterable<[string, string]>\n * } | Headers\n * status?: number\n * statusText?: string\n * url?: string\n * }} FetchResponse\n * @typedef {(url:string, init:API.HTTPRequest) => API.Await<FetchResponse>} Fetcher\n */\n/**\n * @template S\n * @param {object} options\n * @param {URL} options.url\n * @param {(url:string, init:API.HTTPRequest) => API.Await<FetchResponse>} [options.fetch]\n * @param {string} [options.method]\n * @param {Record<string, string>} [options.headers]\n * @returns {API.Channel<S>}\n */\nconst open = ({ url, method = 'POST', fetch, headers }) => {\n  /* c8 ignore next 9 */\n  if (!fetch) {\n    if (typeof globalThis.fetch !== 'undefined') {\n      fetch = globalThis.fetch.bind(globalThis)\n    } else {\n      throw new TypeError(\n        `ucanto HTTP transport got undefined \\`fetch\\`. Try passing in a \\`fetch\\` implementation explicitly.`\n      )\n    }\n  }\n  return new Channel({ url, method, fetch, headers })\n}\n\n/**\n * @template {Record<string, any>} S\n * @implements {API.Channel<S>}\n */\nclass Channel {\n  /**\n   * @param {object} options\n   * @param {URL} options.url\n   * @param {Fetcher} options.fetch\n   * @param {string} [options.method]\n   * @param {Record<string, string>} [options.headers]\n   */\n  constructor({ url, fetch, method, headers }) {\n    this.fetch = fetch\n    this.method = method\n    this.url = url\n    this.headers = headers\n  }\n  /**\n   * @template {API.Tuple<API.ServiceInvocation<API.Capability, S>>} I\n   * @param {API.HTTPRequest<API.AgentMessage<{ In: API.InferInvocations<I>, Out: API.Tuple<API.Receipt> }>>} request\n   * @returns {Promise<API.HTTPResponse<API.AgentMessage<{ Out: API.InferReceipts<I, S>, In: API.Tuple<API.Invocation> }>>>}\n   */\n  async request({ headers, body }) {\n    const response = await this.fetch(this.url.href, {\n      headers: { ...this.headers, ...headers },\n      body,\n      method: this.method,\n    })\n\n    const buffer = response.ok\n      ? await response.arrayBuffer()\n      : HTTPError.throw(`HTTP Request failed. ${this.method} ${this.url.href} → ${response.status}`, response)\n\n    return {\n      headers: response.headers.entries\n        ? Object.fromEntries(response.headers.entries())\n        : /* c8 ignore next */\n          {},\n      body: new Uint8Array(buffer),\n    }\n  }\n}\n\n/**\n * @typedef {{\n * status?: number\n * statusText?: string\n * url?: string\n * }} Options\n */\nclass HTTPError extends Error {\n  /**\n   * @param {string} message\n   * @param {Options} options\n   * @returns {never}\n   */\n  static throw(message, options) {\n    throw new this(message, options)\n  }\n  /**\n   * @param {string} message\n   * @param {Options} options\n   */\n  constructor(message, { url, status = 500, statusText = 'Server error' }) {\n    super(message)\n    /** @type {'HTTPError'} */\n    this.name = 'HTTPError'\n    this.url = url\n    this.status = status\n    this.statusText = statusText\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2h0dHAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sYUFBYSxnRUFBZ0U7QUFDN0U7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsS0FBSztBQUNoQixXQUFXLGdFQUFnRTtBQUMzRSxXQUFXLFFBQVE7QUFDbkIsV0FBVyx3QkFBd0I7QUFDbkMsYUFBYTtBQUNiO0FBQ08sZ0JBQWdCLHNDQUFzQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDZCQUE2QjtBQUNwRDs7QUFFQTtBQUNBLGNBQWMscUJBQXFCO0FBQ25DLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsU0FBUztBQUN0QixhQUFhLFFBQVE7QUFDckIsYUFBYSx3QkFBd0I7QUFDckM7QUFDQSxnQkFBZ0IsNkJBQTZCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxREFBcUQ7QUFDckUsYUFBYSxtQ0FBbUMsMERBQTBELElBQUk7QUFDOUcsZUFBZSw0Q0FBNEMsNkRBQTZEO0FBQ3hIO0FBQ0Esa0JBQWtCLGVBQWU7QUFDakM7QUFDQSxpQkFBaUIsNkJBQTZCO0FBQzlDO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxnREFBZ0QsYUFBYSxFQUFFLGVBQWUsSUFBSSxnQkFBZ0I7O0FBRWxHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEI7QUFDQSx5QkFBeUIsZ0RBQWdEO0FBQ3pFO0FBQ0EsZUFBZSxhQUFhO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vdHJhbnNwb3J0L3NyYy9odHRwLmpzPzhhZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7XG4gKiBvazogYm9vbGVhblxuICogYXJyYXlCdWZmZXIoKTpBUEkuQXdhaXQ8QXJyYXlCdWZmZXI+XG4gKiBoZWFkZXJzOiB7XG4gKiAgZW50cmllcz86ICgpID0+IEl0ZXJhYmxlPFtzdHJpbmcsIHN0cmluZ10+XG4gKiB9IHwgSGVhZGVyc1xuICogc3RhdHVzPzogbnVtYmVyXG4gKiBzdGF0dXNUZXh0Pzogc3RyaW5nXG4gKiB1cmw/OiBzdHJpbmdcbiAqIH19IEZldGNoUmVzcG9uc2VcbiAqIEB0eXBlZGVmIHsodXJsOnN0cmluZywgaW5pdDpBUEkuSFRUUFJlcXVlc3QpID0+IEFQSS5Bd2FpdDxGZXRjaFJlc3BvbnNlPn0gRmV0Y2hlclxuICovXG4vKipcbiAqIEB0ZW1wbGF0ZSBTXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtVUkx9IG9wdGlvbnMudXJsXG4gKiBAcGFyYW0geyh1cmw6c3RyaW5nLCBpbml0OkFQSS5IVFRQUmVxdWVzdCkgPT4gQVBJLkF3YWl0PEZldGNoUmVzcG9uc2U+fSBbb3B0aW9ucy5mZXRjaF1cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5tZXRob2RdXG4gKiBAcGFyYW0ge1JlY29yZDxzdHJpbmcsIHN0cmluZz59IFtvcHRpb25zLmhlYWRlcnNdXG4gKiBAcmV0dXJucyB7QVBJLkNoYW5uZWw8Uz59XG4gKi9cbmV4cG9ydCBjb25zdCBvcGVuID0gKHsgdXJsLCBtZXRob2QgPSAnUE9TVCcsIGZldGNoLCBoZWFkZXJzIH0pID0+IHtcbiAgLyogYzggaWdub3JlIG5leHQgOSAqL1xuICBpZiAoIWZldGNoKSB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzLmZldGNoICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgZmV0Y2ggPSBnbG9iYWxUaGlzLmZldGNoLmJpbmQoZ2xvYmFsVGhpcylcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgYHVjYW50byBIVFRQIHRyYW5zcG9ydCBnb3QgdW5kZWZpbmVkIFxcYGZldGNoXFxgLiBUcnkgcGFzc2luZyBpbiBhIFxcYGZldGNoXFxgIGltcGxlbWVudGF0aW9uIGV4cGxpY2l0bHkuYFxuICAgICAgKVxuICAgIH1cbiAgfVxuICByZXR1cm4gbmV3IENoYW5uZWwoeyB1cmwsIG1ldGhvZCwgZmV0Y2gsIGhlYWRlcnMgfSlcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge1JlY29yZDxzdHJpbmcsIGFueT59IFNcbiAqIEBpbXBsZW1lbnRzIHtBUEkuQ2hhbm5lbDxTPn1cbiAqL1xuY2xhc3MgQ2hhbm5lbCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1VSTH0gb3B0aW9ucy51cmxcbiAgICogQHBhcmFtIHtGZXRjaGVyfSBvcHRpb25zLmZldGNoXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5tZXRob2RdXG4gICAqIEBwYXJhbSB7UmVjb3JkPHN0cmluZywgc3RyaW5nPn0gW29wdGlvbnMuaGVhZGVyc11cbiAgICovXG4gIGNvbnN0cnVjdG9yKHsgdXJsLCBmZXRjaCwgbWV0aG9kLCBoZWFkZXJzIH0pIHtcbiAgICB0aGlzLmZldGNoID0gZmV0Y2hcbiAgICB0aGlzLm1ldGhvZCA9IG1ldGhvZFxuICAgIHRoaXMudXJsID0gdXJsXG4gICAgdGhpcy5oZWFkZXJzID0gaGVhZGVyc1xuICB9XG4gIC8qKlxuICAgKiBAdGVtcGxhdGUge0FQSS5UdXBsZTxBUEkuU2VydmljZUludm9jYXRpb248QVBJLkNhcGFiaWxpdHksIFM+Pn0gSVxuICAgKiBAcGFyYW0ge0FQSS5IVFRQUmVxdWVzdDxBUEkuQWdlbnRNZXNzYWdlPHsgSW46IEFQSS5JbmZlckludm9jYXRpb25zPEk+LCBPdXQ6IEFQSS5UdXBsZTxBUEkuUmVjZWlwdD4gfT4+fSByZXF1ZXN0XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPEFQSS5IVFRQUmVzcG9uc2U8QVBJLkFnZW50TWVzc2FnZTx7IE91dDogQVBJLkluZmVyUmVjZWlwdHM8SSwgUz4sIEluOiBBUEkuVHVwbGU8QVBJLkludm9jYXRpb24+IH0+Pj59XG4gICAqL1xuICBhc3luYyByZXF1ZXN0KHsgaGVhZGVycywgYm9keSB9KSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmZldGNoKHRoaXMudXJsLmhyZWYsIHtcbiAgICAgIGhlYWRlcnM6IHsgLi4udGhpcy5oZWFkZXJzLCAuLi5oZWFkZXJzIH0sXG4gICAgICBib2R5LFxuICAgICAgbWV0aG9kOiB0aGlzLm1ldGhvZCxcbiAgICB9KVxuXG4gICAgY29uc3QgYnVmZmVyID0gcmVzcG9uc2Uub2tcbiAgICAgID8gYXdhaXQgcmVzcG9uc2UuYXJyYXlCdWZmZXIoKVxuICAgICAgOiBIVFRQRXJyb3IudGhyb3coYEhUVFAgUmVxdWVzdCBmYWlsZWQuICR7dGhpcy5tZXRob2R9ICR7dGhpcy51cmwuaHJlZn0g4oaSICR7cmVzcG9uc2Uuc3RhdHVzfWAsIHJlc3BvbnNlKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMuZW50cmllc1xuICAgICAgICA/IE9iamVjdC5mcm9tRW50cmllcyhyZXNwb25zZS5oZWFkZXJzLmVudHJpZXMoKSlcbiAgICAgICAgOiAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICAgIHt9LFxuICAgICAgYm9keTogbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKSxcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBAdHlwZWRlZiB7e1xuICogc3RhdHVzPzogbnVtYmVyXG4gKiBzdGF0dXNUZXh0Pzogc3RyaW5nXG4gKiB1cmw/OiBzdHJpbmdcbiAqIH19IE9wdGlvbnNcbiAqL1xuY2xhc3MgSFRUUEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VcbiAgICogQHBhcmFtIHtPcHRpb25zfSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtuZXZlcn1cbiAgICovXG4gIHN0YXRpYyB0aHJvdyhtZXNzYWdlLCBvcHRpb25zKSB7XG4gICAgdGhyb3cgbmV3IHRoaXMobWVzc2FnZSwgb3B0aW9ucylcbiAgfVxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VcbiAgICogQHBhcmFtIHtPcHRpb25zfSBvcHRpb25zXG4gICAqL1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB7IHVybCwgc3RhdHVzID0gNTAwLCBzdGF0dXNUZXh0ID0gJ1NlcnZlciBlcnJvcicgfSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpXG4gICAgLyoqIEB0eXBlIHsnSFRUUEVycm9yJ30gKi9cbiAgICB0aGlzLm5hbWUgPSAnSFRUUEVycm9yJ1xuICAgIHRoaXMudXJsID0gdXJsXG4gICAgdGhpcy5zdGF0dXMgPSBzdGF0dXNcbiAgICB0aGlzLnN0YXR1c1RleHQgPSBzdGF0dXNUZXh0XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/http.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/legacy.js":
/*!******************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/legacy.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   inbound: () => (/* binding */ inbound),\n/* harmony export */   request: () => (/* reexport module object */ _legacy_request_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   response: () => (/* reexport module object */ _legacy_response_js__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@ucanto/transport/src/codec.js\");\n/* harmony import */ var _car_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./car.js */ \"(ssr)/./node_modules/@ucanto/transport/src/car.js\");\n/* harmony import */ var _legacy_response_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./legacy/response.js */ \"(ssr)/./node_modules/@ucanto/transport/src/legacy/response.js\");\n/* harmony import */ var _legacy_request_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./legacy/request.js */ \"(ssr)/./node_modules/@ucanto/transport/src/legacy/request.js\");\n\n\n\n\n\nconst { contentType } = _legacy_request_js__WEBPACK_IMPORTED_MODULE_3__\n\n\n/**\n * This is an inbound codec designed to support legacy clients and encode\n * responses in a legacy (CBOR) format.\n */\nconst inbound = _codec_js__WEBPACK_IMPORTED_MODULE_0__.inbound({\n  decoders: {\n    [contentType]: _legacy_request_js__WEBPACK_IMPORTED_MODULE_3__,\n    [_car_js__WEBPACK_IMPORTED_MODULE_1__.contentType]: _car_js__WEBPACK_IMPORTED_MODULE_1__.request,\n  },\n  encoders: {\n    // Here we configure encoders such that if accept header is `*/*` (which is\n    // the default if omitted) we will encode the response in CBOR. If\n    // `application/vnd.ipld.car` is set we will encode the response in current\n    // format.\n    // Here we exploit the fact that legacy clients do not send an accept header\n    // and therefore will get response in legacy format. New clients on the other\n    // hand will send `application/vnd.ipld.car` and consequently get response\n    // in current format.\n    '*/*;q=0.1': _legacy_response_js__WEBPACK_IMPORTED_MODULE_2__,\n    [_car_js__WEBPACK_IMPORTED_MODULE_1__.contentType]: _car_js__WEBPACK_IMPORTED_MODULE_1__.response,\n  },\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2xlZ2FjeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFtQztBQUNKO0FBQ2lCO0FBQ0Y7O0FBRXZDLFFBQVEsY0FBYyxFQUFFLCtDQUFPO0FBQ1Y7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0JBQWdCLDhDQUFhO0FBQ3BDO0FBQ0EsbUJBQW1CLCtDQUFPO0FBQzFCLEtBQUssZ0RBQWUsR0FBRyw0Q0FBVztBQUNsQyxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxRQUFRLGdEQUFRO0FBQ3pCLEtBQUssZ0RBQWUsR0FBRyw2Q0FBWTtBQUNuQyxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vdHJhbnNwb3J0L3NyYy9sZWdhY3kuanM/YjRkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBDb2RlYyBmcm9tICcuL2NvZGVjLmpzJ1xuaW1wb3J0ICogYXMgQ0FSIGZyb20gJy4vY2FyLmpzJ1xuaW1wb3J0ICogYXMgcmVzcG9uc2UgZnJvbSAnLi9sZWdhY3kvcmVzcG9uc2UuanMnXG5pbXBvcnQgKiBhcyByZXF1ZXN0IGZyb20gJy4vbGVnYWN5L3JlcXVlc3QuanMnXG5cbmV4cG9ydCBjb25zdCB7IGNvbnRlbnRUeXBlIH0gPSByZXF1ZXN0XG5leHBvcnQgeyByZXF1ZXN0LCByZXNwb25zZSB9XG5cbi8qKlxuICogVGhpcyBpcyBhbiBpbmJvdW5kIGNvZGVjIGRlc2lnbmVkIHRvIHN1cHBvcnQgbGVnYWN5IGNsaWVudHMgYW5kIGVuY29kZVxuICogcmVzcG9uc2VzIGluIGEgbGVnYWN5IChDQk9SKSBmb3JtYXQuXG4gKi9cbmV4cG9ydCBjb25zdCBpbmJvdW5kID0gQ29kZWMuaW5ib3VuZCh7XG4gIGRlY29kZXJzOiB7XG4gICAgW2NvbnRlbnRUeXBlXTogcmVxdWVzdCxcbiAgICBbQ0FSLmNvbnRlbnRUeXBlXTogQ0FSLnJlcXVlc3QsXG4gIH0sXG4gIGVuY29kZXJzOiB7XG4gICAgLy8gSGVyZSB3ZSBjb25maWd1cmUgZW5jb2RlcnMgc3VjaCB0aGF0IGlmIGFjY2VwdCBoZWFkZXIgaXMgYCovKmAgKHdoaWNoIGlzXG4gICAgLy8gdGhlIGRlZmF1bHQgaWYgb21pdHRlZCkgd2Ugd2lsbCBlbmNvZGUgdGhlIHJlc3BvbnNlIGluIENCT1IuIElmXG4gICAgLy8gYGFwcGxpY2F0aW9uL3ZuZC5pcGxkLmNhcmAgaXMgc2V0IHdlIHdpbGwgZW5jb2RlIHRoZSByZXNwb25zZSBpbiBjdXJyZW50XG4gICAgLy8gZm9ybWF0LlxuICAgIC8vIEhlcmUgd2UgZXhwbG9pdCB0aGUgZmFjdCB0aGF0IGxlZ2FjeSBjbGllbnRzIGRvIG5vdCBzZW5kIGFuIGFjY2VwdCBoZWFkZXJcbiAgICAvLyBhbmQgdGhlcmVmb3JlIHdpbGwgZ2V0IHJlc3BvbnNlIGluIGxlZ2FjeSBmb3JtYXQuIE5ldyBjbGllbnRzIG9uIHRoZSBvdGhlclxuICAgIC8vIGhhbmQgd2lsbCBzZW5kIGBhcHBsaWNhdGlvbi92bmQuaXBsZC5jYXJgIGFuZCBjb25zZXF1ZW50bHkgZ2V0IHJlc3BvbnNlXG4gICAgLy8gaW4gY3VycmVudCBmb3JtYXQuXG4gICAgJyovKjtxPTAuMSc6IHJlc3BvbnNlLFxuICAgIFtDQVIuY29udGVudFR5cGVdOiBDQVIucmVzcG9uc2UsXG4gIH0sXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/legacy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/legacy/request.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/legacy/request.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   decode: () => (/* binding */ decode)\n/* harmony export */ });\n/* harmony import */ var _ucanto_core_car__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/core/car */ \"(ssr)/./node_modules/@ucanto/core/src/car.js\");\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n\n\n\n\nconst contentType = 'application/car'\n\n/**\n * @template {API.AgentMessage} Message\n * @param {API.HTTPRequest<Message>} request\n */\nconst decode = async ({ body }) => {\n  const { roots, blocks } = _ucanto_core_car__WEBPACK_IMPORTED_MODULE_0__.decode(/** @type {Uint8Array} */ (body))\n  /** @type {API.IssuedInvocation[]} */\n  const run = []\n  for (const { cid } of roots) {\n    // We don't have a way to know if the root matches a ucan link.\n    const invocation = _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.Invocation.view({\n      root: /** @type {API.Link} */ (cid),\n      blocks,\n    })\n    run.push(invocation)\n  }\n\n  const message = await _ucanto_core__WEBPACK_IMPORTED_MODULE_2__.Message.build({\n    invocations: /** @type {API.Tuple<API.IssuedInvocation>} */ (run),\n  })\n\n  return /** @type {Message} */ (message)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2xlZ2FjeS9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVDO0FBQ0M7QUFDVTs7QUFFM0M7O0FBRVA7QUFDQSxjQUFjLGtCQUFrQjtBQUNoQyxXQUFXLDBCQUEwQjtBQUNyQztBQUNPLHdCQUF3QixNQUFNO0FBQ3JDLFVBQVUsZ0JBQWdCLEVBQUUsb0RBQVUsWUFBWSxZQUFZO0FBQzlELGFBQWEsd0JBQXdCO0FBQ3JDO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCO0FBQ0EsdUJBQXVCLHlEQUFlO0FBQ3RDLHVCQUF1QixVQUFVO0FBQ2pDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUEsd0JBQXdCLHVEQUFhO0FBQ3JDLDRCQUE0QixpQ0FBaUM7QUFDN0QsR0FBRzs7QUFFSCxvQkFBb0IsU0FBUztBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vdHJhbnNwb3J0L3NyYy9sZWdhY3kvcmVxdWVzdC5qcz84MWQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENBUiBmcm9tICdAdWNhbnRvL2NvcmUvY2FyJ1xuaW1wb3J0ICogYXMgQVBJIGZyb20gJ0B1Y2FudG8vaW50ZXJmYWNlJ1xuaW1wb3J0IHsgSW52b2NhdGlvbiwgTWVzc2FnZSB9IGZyb20gJ0B1Y2FudG8vY29yZSdcblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlID0gJ2FwcGxpY2F0aW9uL2NhcidcblxuLyoqXG4gKiBAdGVtcGxhdGUge0FQSS5BZ2VudE1lc3NhZ2V9IE1lc3NhZ2VcbiAqIEBwYXJhbSB7QVBJLkhUVFBSZXF1ZXN0PE1lc3NhZ2U+fSByZXF1ZXN0XG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGUgPSBhc3luYyAoeyBib2R5IH0pID0+IHtcbiAgY29uc3QgeyByb290cywgYmxvY2tzIH0gPSBDQVIuZGVjb2RlKC8qKiBAdHlwZSB7VWludDhBcnJheX0gKi8gKGJvZHkpKVxuICAvKiogQHR5cGUge0FQSS5Jc3N1ZWRJbnZvY2F0aW9uW119ICovXG4gIGNvbnN0IHJ1biA9IFtdXG4gIGZvciAoY29uc3QgeyBjaWQgfSBvZiByb290cykge1xuICAgIC8vIFdlIGRvbid0IGhhdmUgYSB3YXkgdG8ga25vdyBpZiB0aGUgcm9vdCBtYXRjaGVzIGEgdWNhbiBsaW5rLlxuICAgIGNvbnN0IGludm9jYXRpb24gPSBJbnZvY2F0aW9uLnZpZXcoe1xuICAgICAgcm9vdDogLyoqIEB0eXBlIHtBUEkuTGlua30gKi8gKGNpZCksXG4gICAgICBibG9ja3MsXG4gICAgfSlcbiAgICBydW4ucHVzaChpbnZvY2F0aW9uKVxuICB9XG5cbiAgY29uc3QgbWVzc2FnZSA9IGF3YWl0IE1lc3NhZ2UuYnVpbGQoe1xuICAgIGludm9jYXRpb25zOiAvKiogQHR5cGUge0FQSS5UdXBsZTxBUEkuSXNzdWVkSW52b2NhdGlvbj59ICovIChydW4pLFxuICB9KVxuXG4gIHJldHVybiAvKiogQHR5cGUge01lc3NhZ2V9ICovIChtZXNzYWdlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/legacy/request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/legacy/response.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/legacy/response.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ucanto_core_cbor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/core/cbor */ \"(ssr)/./node_modules/@ucanto/core/src/cbor.js\");\n\n\nconst contentType = 'application/cbor'\n\nconst HEADERS = Object.freeze({\n  'content-type': contentType,\n})\n\n/**\n * Encodes `AgentMessage` into a legacy CBOR representation.\n *\n * @template {API.AgentMessage} Message\n * @param {Message} message\n * @param {API.EncodeOptions} [options]\n * @returns {API.HTTPResponse<Message>}\n */\nconst encode = (message, options) => {\n  const legacyResults = []\n  for (const receipt of message.receipts.values()) {\n    const result = receipt.out\n    if (result.ok) {\n      legacyResults.push(result.ok)\n    } else {\n      legacyResults.push({\n        ...result.error,\n        error: true,\n      })\n    }\n  }\n\n  /** @type {Uint8Array} */\n  const body = _ucanto_core_cbor__WEBPACK_IMPORTED_MODULE_1__.encode(legacyResults)\n\n  return /** @type {API.HTTPResponse<Message>} */ ({\n    headers: HEADERS,\n    body,\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2xlZ2FjeS9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdDO0FBQ0M7QUFDbEM7O0FBRVA7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsY0FBYyxrQkFBa0I7QUFDaEMsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsbUJBQW1CO0FBQzlCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQSxhQUFhLFlBQVk7QUFDekIsZUFBZSxxREFBVzs7QUFFMUIsb0JBQW9CLDJCQUEyQjtBQUMvQztBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2xlZ2FjeS9yZXNwb25zZS5qcz83OWJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcbmltcG9ydCAqIGFzIENCT1IgZnJvbSAnQHVjYW50by9jb3JlL2Nib3InXG5leHBvcnQgY29uc3QgY29udGVudFR5cGUgPSAnYXBwbGljYXRpb24vY2JvcidcblxuY29uc3QgSEVBREVSUyA9IE9iamVjdC5mcmVlemUoe1xuICAnY29udGVudC10eXBlJzogY29udGVudFR5cGUsXG59KVxuXG4vKipcbiAqIEVuY29kZXMgYEFnZW50TWVzc2FnZWAgaW50byBhIGxlZ2FjeSBDQk9SIHJlcHJlc2VudGF0aW9uLlxuICpcbiAqIEB0ZW1wbGF0ZSB7QVBJLkFnZW50TWVzc2FnZX0gTWVzc2FnZVxuICogQHBhcmFtIHtNZXNzYWdlfSBtZXNzYWdlXG4gKiBAcGFyYW0ge0FQSS5FbmNvZGVPcHRpb25zfSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtBUEkuSFRUUFJlc3BvbnNlPE1lc3NhZ2U+fVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0gKG1lc3NhZ2UsIG9wdGlvbnMpID0+IHtcbiAgY29uc3QgbGVnYWN5UmVzdWx0cyA9IFtdXG4gIGZvciAoY29uc3QgcmVjZWlwdCBvZiBtZXNzYWdlLnJlY2VpcHRzLnZhbHVlcygpKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gcmVjZWlwdC5vdXRcbiAgICBpZiAocmVzdWx0Lm9rKSB7XG4gICAgICBsZWdhY3lSZXN1bHRzLnB1c2gocmVzdWx0Lm9rKVxuICAgIH0gZWxzZSB7XG4gICAgICBsZWdhY3lSZXN1bHRzLnB1c2goe1xuICAgICAgICAuLi5yZXN1bHQuZXJyb3IsXG4gICAgICAgIGVycm9yOiB0cnVlLFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICAvKiogQHR5cGUge1VpbnQ4QXJyYXl9ICovXG4gIGNvbnN0IGJvZHkgPSBDQk9SLmVuY29kZShsZWdhY3lSZXN1bHRzKVxuXG4gIHJldHVybiAvKiogQHR5cGUge0FQSS5IVFRQUmVzcG9uc2U8TWVzc2FnZT59ICovICh7XG4gICAgaGVhZGVyczogSEVBREVSUyxcbiAgICBib2R5LFxuICB9KVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/legacy/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/lib.js":
/*!***************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/lib.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CAR: () => (/* reexport module object */ _car_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   Codec: () => (/* reexport module object */ _codec_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   HTTP: () => (/* reexport module object */ _http_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   Legacy: () => (/* reexport module object */ _legacy_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   UTF8: () => (/* reexport module object */ _utf8_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   formatAcceptHeader: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_4__.formatAcceptHeader),\n/* harmony export */   formatMediaType: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_4__.formatMediaType),\n/* harmony export */   inbound: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_4__.inbound),\n/* harmony export */   outbound: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_4__.outbound),\n/* harmony export */   parseAcceptHeader: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_4__.parseAcceptHeader),\n/* harmony export */   parseMediaType: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_4__.parseMediaType)\n/* harmony export */ });\n/* harmony import */ var _car_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./car.js */ \"(ssr)/./node_modules/@ucanto/transport/src/car.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./http.js */ \"(ssr)/./node_modules/@ucanto/transport/src/http.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utf8.js */ \"(ssr)/./node_modules/@ucanto/transport/src/utf8.js\");\n/* harmony import */ var _legacy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./legacy.js */ \"(ssr)/./node_modules/@ucanto/transport/src/legacy.js\");\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@ucanto/transport/src/codec.js\");\n// top level exports\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2xpYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDRTtBQUNBO0FBQ0k7QUFDRjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL2xpYi5qcz81MWUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRvcCBsZXZlbCBleHBvcnRzXG5leHBvcnQgKiBhcyBDQVIgZnJvbSAnLi9jYXIuanMnXG5leHBvcnQgKiBhcyBIVFRQIGZyb20gJy4vaHR0cC5qcydcbmV4cG9ydCAqIGFzIFVURjggZnJvbSAnLi91dGY4LmpzJ1xuZXhwb3J0ICogYXMgTGVnYWN5IGZyb20gJy4vbGVnYWN5LmpzJ1xuZXhwb3J0ICogYXMgQ29kZWMgZnJvbSAnLi9jb2RlYy5qcydcbmV4cG9ydCAqIGZyb20gJy4vY29kZWMuanMnXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/transport/src/utf8.js":
/*!****************************************************!*\
  !*** ./node_modules/@ucanto/transport/src/utf8.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decoder: () => (/* binding */ decoder),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encoder: () => (/* binding */ encoder)\n/* harmony export */ });\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encode = text => encoder.encode(text)\n\n/**\n *\n * @param {Uint8Array} bytes\n * @returns {string}\n */\nconst decode = bytes => decoder.decode(bytes)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by90cmFuc3BvcnQvc3JjL3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPO0FBQ0E7O0FBRVA7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0B1Y2FudG8vdHJhbnNwb3J0L3NyYy91dGY4LmpzPzYwODYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuZXhwb3J0IGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0XG4gKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IHRleHQgPT4gZW5jb2Rlci5lbmNvZGUodGV4dClcblxuLyoqXG4gKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IGJ5dGVzID0+IGRlY29kZXIuZGVjb2RlKGJ5dGVzKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/transport/src/utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/validator/src/authorization.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ucanto/validator/src/authorization.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   iterate: () => (/* binding */ iterate)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n\n\n/**\n * @template {API.ParsedCapability} C\n * @implements {API.Authorization<C>}\n */\nclass Authorization {\n  /**\n   * @param {API.Match<C>} match\n   * @param {API.Authorization<API.ParsedCapability>[]} proofs\n   */\n  constructor(match, proofs) {\n    this.match = match\n    this.proofs = proofs\n  }\n  get capability() {\n    return this.match.value\n  }\n  get delegation() {\n    return this.match.source[0].delegation\n  }\n  get issuer() {\n    return this.delegation.issuer\n  }\n  get audience() {\n    return this.delegation.audience\n  }\n}\n\n/**\n * @template {API.ParsedCapability} C\n * @param {API.Match<C>} match\n * @param {API.Authorization<API.ParsedCapability>[]} proofs\n * @returns {API.Authorization<C>}\n */\nconst create = (match, proofs = []) => new Authorization(match, proofs)\n\n/**\n *\n * @param {API.Authorization} authorization\n * @returns {Iterable<API.UCANLink>}\n */\nconst iterate = function* ({ delegation, proofs }) {\n  yield delegation.cid\n  for (const proof of proofs) {\n    yield* iterate(proof)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by92YWxpZGF0b3Ivc3JjL2F1dGhvcml6YXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdDOztBQUV4QztBQUNBLGNBQWMsc0JBQXNCO0FBQ3BDLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0IsYUFBYSwyQ0FBMkM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxzQkFBc0I7QUFDcEMsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsMkNBQTJDO0FBQ3RELGFBQWE7QUFDYjtBQUNPOztBQUVQO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixhQUFhO0FBQ2I7QUFDTyw2QkFBNkIsb0JBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ZhbGlkYXRvci9zcmMvYXV0aG9yaXphdGlvbi5qcz9hZTY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tICdAdWNhbnRvL2ludGVyZmFjZSdcblxuLyoqXG4gKiBAdGVtcGxhdGUge0FQSS5QYXJzZWRDYXBhYmlsaXR5fSBDXG4gKiBAaW1wbGVtZW50cyB7QVBJLkF1dGhvcml6YXRpb248Qz59XG4gKi9cbmNsYXNzIEF1dGhvcml6YXRpb24ge1xuICAvKipcbiAgICogQHBhcmFtIHtBUEkuTWF0Y2g8Qz59IG1hdGNoXG4gICAqIEBwYXJhbSB7QVBJLkF1dGhvcml6YXRpb248QVBJLlBhcnNlZENhcGFiaWxpdHk+W119IHByb29mc1xuICAgKi9cbiAgY29uc3RydWN0b3IobWF0Y2gsIHByb29mcykge1xuICAgIHRoaXMubWF0Y2ggPSBtYXRjaFxuICAgIHRoaXMucHJvb2ZzID0gcHJvb2ZzXG4gIH1cbiAgZ2V0IGNhcGFiaWxpdHkoKSB7XG4gICAgcmV0dXJuIHRoaXMubWF0Y2gudmFsdWVcbiAgfVxuICBnZXQgZGVsZWdhdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5tYXRjaC5zb3VyY2VbMF0uZGVsZWdhdGlvblxuICB9XG4gIGdldCBpc3N1ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGlvbi5pc3N1ZXJcbiAgfVxuICBnZXQgYXVkaWVuY2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGlvbi5hdWRpZW5jZVxuICB9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtBUEkuUGFyc2VkQ2FwYWJpbGl0eX0gQ1xuICogQHBhcmFtIHtBUEkuTWF0Y2g8Qz59IG1hdGNoXG4gKiBAcGFyYW0ge0FQSS5BdXRob3JpemF0aW9uPEFQSS5QYXJzZWRDYXBhYmlsaXR5PltdfSBwcm9vZnNcbiAqIEByZXR1cm5zIHtBUEkuQXV0aG9yaXphdGlvbjxDPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChtYXRjaCwgcHJvb2ZzID0gW10pID0+IG5ldyBBdXRob3JpemF0aW9uKG1hdGNoLCBwcm9vZnMpXG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7QVBJLkF1dGhvcml6YXRpb259IGF1dGhvcml6YXRpb25cbiAqIEByZXR1cm5zIHtJdGVyYWJsZTxBUEkuVUNBTkxpbms+fVxuICovXG5leHBvcnQgY29uc3QgaXRlcmF0ZSA9IGZ1bmN0aW9uKiAoeyBkZWxlZ2F0aW9uLCBwcm9vZnMgfSkge1xuICB5aWVsZCBkZWxlZ2F0aW9uLmNpZFxuICBmb3IgKGNvbnN0IHByb29mIG9mIHByb29mcykge1xuICAgIHlpZWxkKiBpdGVyYXRlKHByb29mKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/validator/src/authorization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/validator/src/capability.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ucanto/validator/src/capability.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   and: () => (/* binding */ and),\n/* harmony export */   capability: () => (/* binding */ capability),\n/* harmony export */   derive: () => (/* binding */ derive),\n/* harmony export */   or: () => (/* binding */ or)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@ucanto/validator/src/util.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/@ucanto/validator/src/error.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n\n\n\n\n\n/**\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template {API.Caveats} C\n * @typedef {{\n * can: A\n * with: API.Reader<R, API.Resource, API.Failure>\n * nb?: Schema.MapRepresentation<C, unknown>\n * derives?: (claim: {can:A, with: R, nb: C}, proof:{can:A, with:R, nb:C}) => API.Result<{}, API.Failure>\n * }} Descriptor\n */\n\n/**\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template {API.Caveats} [C={}]\n * @param {Descriptor<A, R, C>} descriptor\n \n * @returns {API.TheCapabilityParser<API.CapabilityMatch<A, R, C>>}\n */\nconst capability = ({\n  derives = defaultDerives,\n  nb = defaultNBSchema,\n  ...etc\n}) => new Capability({ derives, nb, ...etc })\n\nconst defaultNBSchema =\n  /** @type {Schema.MapRepresentation<any>} */\n  (_ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Schema.struct({}))\n\n/**\n * @template {API.Match} M\n * @template {API.Match} W\n * @param {API.Matcher<M>} left\n * @param {API.Matcher<W>} right\n * @returns {API.CapabilityParser<M|W>}\n */\nconst or = (left, right) => new Or(left, right)\n\n/**\n * @template {API.MatchSelector<API.Match>[]} Selectors\n * @param {Selectors} selectors\n * @returns {API.CapabilitiesParser<API.InferMembers<Selectors>>}\n */\nconst and = (...selectors) => new And(selectors)\n\n/**\n * @template {API.Match} M\n * @template {API.ParsedCapability} T\n * @param {object} source\n * @param {API.MatchSelector<M>} source.from\n * @param {API.TheCapabilityParser<API.DirectMatch<T>>} source.to\n * @param {API.Derives<T, API.InferDeriveProof<M['value']>>} source.derives\n \n * @returns {API.TheCapabilityParser<API.DerivedMatch<T, M>>}\n */\nconst derive = ({ from, to, derives }) => new Derive(from, to, derives)\n\n/**\n * @template {API.Match} M\n * @implements {API.View<M>}\n */\nclass View {\n  /**\n   * @param {API.Source} source\n   * @returns {API.MatchResult<M>}\n   */\n  /* c8 ignore next 3 */\n  match(source) {\n    return { error: new _error_js__WEBPACK_IMPORTED_MODULE_2__.UnknownCapability(source.capability) }\n  }\n\n  /**\n   * @param {API.Source[]} capabilities\n   * @returns {API.Select<M>}\n   */\n  select(capabilities) {\n    return select(this, capabilities)\n  }\n\n  /**\n   * @template {API.ParsedCapability} U\n   * @param {object} source\n   * @param {API.TheCapabilityParser<API.DirectMatch<U>>} source.to\n   * @param {API.Derives<U, API.InferDeriveProof<M['value']>>} source.derives\n   * @returns {API.TheCapabilityParser<API.DerivedMatch<U, M>>}\n   */\n  derive({ derives, to }) {\n    return derive({ derives, to, from: this })\n  }\n}\n\n/**\n * @template {API.Match} M\n * @implements {API.CapabilityParser<M>}\n * @extends {View<M>}\n */\nclass Unit extends View {\n  /**\n   * @template {API.Match} W\n   * @param {API.MatchSelector<W>} other\n   * @returns {API.CapabilityParser<M | W>}\n   */\n  or(other) {\n    return or(this, other)\n  }\n\n  /**\n   * @template {API.Match} W\n   * @param {API.CapabilityParser<W>} other\n   * @returns {API.CapabilitiesParser<[M, W]>}\n   */\n  and(other) {\n    return and(/** @type {API.CapabilityParser<M>} */ (this), other)\n  }\n}\n\n/**\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template {API.Caveats} C\n * @implements {API.TheCapabilityParser<API.DirectMatch<API.ParsedCapability<A, R, C>>>}\n * @extends {Unit<API.DirectMatch<API.ParsedCapability<A, R, C>>>}\n */\nclass Capability extends Unit {\n  /**\n   * @param {Required<Descriptor<A, R, C>>} descriptor\n   */\n  constructor(descriptor) {\n    super()\n    this.descriptor = descriptor\n    this.schema = _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Schema.struct({\n      can: _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Schema.literal(descriptor.can),\n      with: descriptor.with,\n      nb: descriptor.nb,\n    })\n  }\n\n  /**\n   * @param {API.InferCreateOptions<R, C>} options\n   */\n  create(options) {\n    const { descriptor, can } = this\n    const decoders = descriptor.nb\n    const data = /** @type {C} */ (options.nb || {})\n\n    const resource = descriptor.with.read(options.with)\n    if (resource.error) {\n      throw Object.assign(\n        new Error(`Invalid 'with' - ${resource.error.message}`),\n        {\n          cause: resource,\n        }\n      )\n    }\n\n    const nb = descriptor.nb.read(data)\n    if (nb.error) {\n      throw Object.assign(new Error(`Invalid 'nb' - ${nb.error.message}`), {\n        cause: nb,\n      })\n    }\n\n    return createCapability({ can, with: resource.ok, nb: nb.ok })\n  }\n\n  /**\n   * @param {API.InferInvokeOptions<R, C>} options\n   */\n  invoke({ with: with_, nb, ...options }) {\n    return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_3__.invoke)({\n      ...options,\n      capability: this.create(\n        /** @type {API.InferCreateOptions<R, C>} */\n        ({ with: with_, nb })\n      ),\n    })\n  }\n\n  /**\n   * @param {API.InferDelegationOptions<R, C>} options\n   * @returns {Promise<API.Delegation<[API.InferDelegatedCapability<API.ParsedCapability<A, R, C>>]>>}\n   */\n  async delegate({ nb: input = {}, with: with_, ...options }) {\n    const { descriptor, can } = this\n    const readers = descriptor.nb\n\n    const resource = descriptor.with.read(with_)\n    if (resource.error) {\n      throw Object.assign(\n        new Error(`Invalid 'with' - ${resource.error.message}`),\n        {\n          cause: resource,\n        }\n      )\n    }\n\n    const nb = descriptor.nb.partial().read(input)\n    if (nb.error) {\n      throw Object.assign(new Error(`Invalid 'nb' - ${nb.error.message}`), {\n        cause: nb,\n      })\n    }\n\n    return (0,_ucanto_core__WEBPACK_IMPORTED_MODULE_3__.delegate)({\n      capabilities: [createCapability({ can, with: resource.ok, nb: nb.ok })],\n      ...options,\n    })\n  }\n\n  get can() {\n    return this.descriptor.can\n  }\n\n  /**\n   * @param {API.Source} source\n   * @returns {API.MatchResult<API.DirectMatch<API.ParsedCapability<A, R, C>>>}\n   */\n  match(source) {\n    const result = parseCapability(this.descriptor, source)\n    return result.error\n      ? result\n      : { ok: new Match(source, result.ok, this.descriptor) }\n  }\n  toString() {\n    return JSON.stringify({ can: this.descriptor.can })\n  }\n}\n\n/**\n * Normalizes capability by removing empty nb field.\n *\n * @template {API.ParsedCapability} T\n * @param {T} source\n */\n\nconst createCapability = ({ can, with: with_, nb }) =>\n  /** @type {API.InferCapability<T>} */ ({\n    can,\n    with: with_,\n    ...(isEmpty(nb) ? {} : { nb }),\n  })\n\n/**\n * @param {object} object\n * @returns {object is {}}\n */\nconst isEmpty = object => {\n  for (const _ in object) {\n    return false\n  }\n  return true\n}\n\n/**\n * @template {API.Match} M\n * @template {API.Match} W\n * @implements {API.CapabilityParser<M|W>}\n * @extends {Unit<M|W>}\n */\nclass Or extends Unit {\n  /**\n   * @param {API.Matcher<M>} left\n   * @param {API.Matcher<W>} right\n   */\n  constructor(left, right) {\n    super()\n    this.left = left\n    this.right = right\n  }\n\n  /**\n   * @param {API.Source} capability\n   * @return {API.MatchResult<M|W>}\n   */\n  match(capability) {\n    const left = this.left.match(capability)\n    if (left.error) {\n      const right = this.right.match(capability)\n      if (right.error) {\n        return right.error.name === 'MalformedCapability'\n          ? //\n            right\n          : //\n            left\n      } else {\n        return right\n      }\n    } else {\n      return left\n    }\n  }\n\n  toString() {\n    return `${this.left.toString()}|${this.right.toString()}`\n  }\n}\n\n/**\n * @template {API.MatchSelector<API.Match>[]} Selectors\n * @implements {API.CapabilitiesParser<API.InferMembers<Selectors>>}\n * @extends {View<API.Amplify<API.InferMembers<Selectors>>>}\n */\nclass And extends View {\n  /**\n   * @param {Selectors} selectors\n   */\n  constructor(selectors) {\n    super()\n    this.selectors = selectors\n  }\n  /**\n   * @param {API.Source} capability\n   * @returns {API.MatchResult<API.Amplify<API.InferMembers<Selectors>>>}\n   */\n  match(capability) {\n    const group = []\n    for (const selector of this.selectors) {\n      const result = selector.match(capability)\n      if (result.error) {\n        return result\n      } else {\n        group.push(result.ok)\n      }\n    }\n\n    return {\n      ok: new AndMatch(/** @type {API.InferMembers<Selectors>} */ (group)),\n    }\n  }\n\n  /**\n   * @param {API.Source[]} capabilities\n   */\n  select(capabilities) {\n    return selectGroup(this, capabilities)\n  }\n  /**\n   * @template E\n   * @template {API.Match} X\n   * @param {API.MatchSelector<API.Match<E, X>>} other\n   * @returns {API.CapabilitiesParser<[...API.InferMembers<Selectors>, API.Match<E, X>]>}\n   */\n  and(other) {\n    return new And([...this.selectors, other])\n  }\n  toString() {\n    return `[${this.selectors.map(String).join(', ')}]`\n  }\n}\n\n/**\n * @template {API.ParsedCapability} T\n * @template {API.Match} M\n * @implements {API.TheCapabilityParser<API.DerivedMatch<T, M>>}\n * @extends {Unit<API.DerivedMatch<T, M>>}\n */\n\nclass Derive extends Unit {\n  /**\n   * @param {API.MatchSelector<M>} from\n   * @param {API.TheCapabilityParser<API.DirectMatch<T>>} to\n   * @param {API.Derives<T, API.InferDeriveProof<M['value']>>} derives\n   */\n  constructor(from, to, derives) {\n    super()\n    this.from = from\n    this.to = to\n    this.derives = derives\n  }\n\n  /**\n   * @type {typeof this.to['create']}\n   */\n  create(options) {\n    return this.to.create(options)\n  }\n  /**\n   * @type {typeof this.to['invoke']}\n   */\n  invoke(options) {\n    return this.to.invoke(options)\n  }\n  /**\n   * @type {typeof this.to['delegate']}\n   */\n  delegate(options) {\n    return this.to.delegate(options)\n  }\n  get can() {\n    return this.to.can\n  }\n  /**\n   * @param {API.Source} capability\n   * @returns {API.MatchResult<API.DerivedMatch<T, M>>}\n   */\n  match(capability) {\n    const match = this.to.match(capability)\n    if (match.error) {\n      return match\n    } else {\n      return { ok: new DerivedMatch(match.ok, this.from, this.derives) }\n    }\n  }\n  toString() {\n    return this.to.toString()\n  }\n}\n\n/**\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template {API.Caveats} C\n * @implements {API.DirectMatch<API.ParsedCapability<A, R, C>>}\n */\nclass Match {\n  /**\n   * @param {API.Source} source\n   * @param {API.ParsedCapability<A, R, C>} value\n   * @param {Required<Descriptor<A, R, C>>} descriptor\n   */\n  constructor(source, value, descriptor) {\n    this.source = [source]\n    this.value = value\n    this.descriptor = descriptor\n  }\n  get can() {\n    return this.value.can\n  }\n\n  get proofs() {\n    const proofs = [this.source[0].delegation]\n    Object.defineProperties(this, {\n      proofs: { value: proofs },\n    })\n    return proofs\n  }\n\n  /**\n   * @param {API.CanIssue} context\n   * @returns {API.DirectMatch<API.ParsedCapability<A, R, C>>|null}\n   */\n  prune(context) {\n    if (context.canIssue(this.value, this.source[0].delegation.issuer.did())) {\n      return null\n    } else {\n      return this\n    }\n  }\n\n  /**\n   * @param {API.Source[]} capabilities\n   * @returns {API.Select<API.DirectMatch<API.ParsedCapability<A, R, C>>>}\n   */\n  select(capabilities) {\n    const unknown = []\n    const errors = []\n    const matches = []\n    for (const capability of capabilities) {\n      const result = resolveCapability(this.descriptor, this.value, capability)\n      if (result.ok) {\n        const claim = this.descriptor.derives(this.value, result.ok)\n        if (claim.error) {\n          errors.push(\n            new _error_js__WEBPACK_IMPORTED_MODULE_2__.DelegationError(\n              [new _error_js__WEBPACK_IMPORTED_MODULE_2__.EscalatedCapability(this.value, result.ok, claim.error)],\n              this\n            )\n          )\n        } else {\n          matches.push(new Match(capability, result.ok, this.descriptor))\n        }\n      } else {\n        switch (result.error.name) {\n          case 'UnknownCapability':\n            unknown.push(result.error.capability)\n            break\n          case 'MalformedCapability':\n          default:\n            errors.push(new _error_js__WEBPACK_IMPORTED_MODULE_2__.DelegationError([result.error], this))\n        }\n      }\n    }\n\n    return { matches, unknown, errors }\n  }\n  toString() {\n    const { nb } = this.value\n    return JSON.stringify({\n      can: this.descriptor.can,\n      with: this.value.with,\n      nb: nb && Object.keys(nb).length > 0 ? nb : undefined,\n    })\n  }\n}\n\n/**\n * @template {API.ParsedCapability} T\n * @template {API.Match} M\n * @implements {API.DerivedMatch<T, M>}\n */\n\nclass DerivedMatch {\n  /**\n   * @param {API.DirectMatch<T>} selected\n   * @param {API.MatchSelector<M>} from\n   * @param {API.Derives<T, API.InferDeriveProof<M['value']>>} derives\n   */\n  constructor(selected, from, derives) {\n    this.selected = selected\n    this.from = from\n    this.derives = derives\n  }\n  get can() {\n    return this.value.can\n  }\n  get source() {\n    return this.selected.source\n  }\n  get proofs() {\n    const proofs = []\n    for (const { delegation } of this.selected.source) {\n      proofs.push(delegation)\n    }\n    Object.defineProperties(this, { proofs: { value: proofs } })\n    return proofs\n  }\n  get value() {\n    return this.selected.value\n  }\n\n  /**\n   * @param {API.CanIssue} context\n   */\n  prune(context) {\n    const selected =\n      /** @type {API.DirectMatch<T>|null} */\n      (this.selected.prune(context))\n    return selected ? new DerivedMatch(selected, this.from, this.derives) : null\n  }\n\n  /**\n   * @param {API.Source[]} capabilities\n   */\n  select(capabilities) {\n    const { derives, selected, from } = this\n    const { value } = selected\n\n    const direct = selected.select(capabilities)\n\n    const derived = from.select(capabilities)\n    const matches = []\n    const errors = []\n    for (const match of derived.matches) {\n      // If capability can not be derived it escalates\n      const result = derives(value, match.value)\n      if (result.error) {\n        errors.push(\n          new _error_js__WEBPACK_IMPORTED_MODULE_2__.DelegationError(\n            [new _error_js__WEBPACK_IMPORTED_MODULE_2__.EscalatedCapability(value, match.value, result.error)],\n            this\n          )\n        )\n      } else {\n        matches.push(match)\n      }\n    }\n\n    return {\n      unknown: (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.intersection)(direct.unknown, derived.unknown),\n      errors: [\n        ...errors,\n        ...direct.errors,\n        ...derived.errors.map(error => new _error_js__WEBPACK_IMPORTED_MODULE_2__.DelegationError([error], this)),\n      ],\n      matches: [\n        ...direct.matches.map(match => new DerivedMatch(match, from, derives)),\n        ...matches,\n      ],\n    }\n  }\n\n  toString() {\n    return this.selected.toString()\n  }\n}\n\n/**\n * @template {API.MatchSelector<API.Match>[]} Selectors\n * @implements {API.Amplify<API.InferMembers<Selectors>>}\n */\nclass AndMatch {\n  /**\n   * @param {API.Match[]} matches\n   */\n  constructor(matches) {\n    this.matches = matches\n  }\n  get selectors() {\n    return this.matches\n  }\n  /**\n   * @returns {API.Source[]}\n   */\n  get source() {\n    const source = []\n\n    for (const match of this.matches) {\n      source.push(...match.source)\n    }\n    Object.defineProperties(this, { source: { value: source } })\n    return source\n  }\n\n  /**\n   * @param {API.CanIssue} context\n   */\n  prune(context) {\n    const matches = []\n    for (const match of this.matches) {\n      const pruned = match.prune(context)\n      if (pruned) {\n        matches.push(pruned)\n      }\n    }\n    return matches.length === 0 ? null : new AndMatch(matches)\n  }\n\n  get proofs() {\n    const proofs = []\n\n    for (const { delegation } of this.source) {\n      proofs.push(delegation)\n    }\n\n    Object.defineProperties(this, { proofs: { value: proofs } })\n    return proofs\n  }\n  /**\n   * @type {API.InferValue<API.InferMembers<Selectors>>}\n   */\n  get value() {\n    const value = []\n\n    for (const match of this.matches) {\n      value.push(match.value)\n    }\n    Object.defineProperties(this, { value: { value } })\n    return /** @type {any} */ (value)\n  }\n  /**\n   * @param {API.Source[]} capabilities\n   */\n  select(capabilities) {\n    return selectGroup(this, capabilities)\n  }\n  toString() {\n    return `[${this.matches.map(match => match.toString()).join(', ')}]`\n  }\n}\n\n/**\n * Resolves ability `pattern` of the delegated capability from the ability\n * of the claimed capability. If pattern matches returns claimed ability\n * otherwise returns given `fallback`.\n *\n * @example\n * ```js\n * resolveAbility('*', 'store/add', null) // => 'store/add'\n * resolveAbility('store/*', 'store/add', null) // => 'store/add'\n * resolveAbility('store/add', 'store/add', null) // => 'store/add'\n * resolveAbility('store/', 'store/add', null) // => null\n * resolveAbility('store/a*', 'store/add', null) // => null\n * resolveAbility('store/list', 'store/add', null) // => null\n * ```\n *\n * @template {API.Ability} T\n * @template U\n * @param {string} pattern\n * @param {T} can\n * @param {U} fallback\n * @returns {T|U}\n */\nconst resolveAbility = (pattern, can, fallback) => {\n  switch (pattern) {\n    case can:\n    case '*':\n      return can\n    default:\n      return pattern.endsWith('/*') && can.startsWith(pattern.slice(0, -1))\n        ? can\n        : fallback\n  }\n}\n\n/**\n * Resolves `source` resource of the delegated capability from the resource\n * `uri` of the claimed capability. If `source` is `\"ucan:*\"\"` or matches `uri`\n * then it returns `uri` back otherwise it returns `fallback`.\n *\n * @example\n * ```js\n * resolveResource('ucan:*', 'did:key:zAlice', null) // => 'did:key:zAlice'\n * resolveAbility('ucan:*', 'https://example.com', null) // => 'https://example.com'\n * resolveAbility('did:*', 'did:key:zAlice', null) // => null\n * resolveAbility('did:key:zAlice', 'did:key:zAlice', null) // => did:key:zAlice\n * ```\n * @template {string} T\n * @template U\n * @param {T} uri\n * @param {string} source\n * @param {U} fallback\n * @returns {T|U}\n */\nconst resolveResource = (source, uri, fallback) => {\n  switch (source) {\n    case uri:\n    case 'ucan:*':\n      return uri\n    default:\n      return fallback\n  }\n}\n\n/**\n * Parses capability from the `source` using a provided `parser`.\n *\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template {API.Caveats} C\n * @param {Required<Descriptor<A, R, C>>} descriptor\n * @param {API.Source} source\n * @returns {API.Result<API.ParsedCapability<A, R, C>, API.InvalidCapability>}\n */\nconst parseCapability = (descriptor, source) => {\n  const { delegation } = source\n  const capability = /** @type {API.Capability<A, R, C>} */ (source.capability)\n\n  if (descriptor.can !== capability.can) {\n    return { error: new _error_js__WEBPACK_IMPORTED_MODULE_2__.UnknownCapability(capability) }\n  }\n\n  const uri = descriptor.with.read(capability.with)\n  if (uri.error) {\n    return { error: new _error_js__WEBPACK_IMPORTED_MODULE_2__.MalformedCapability(capability, uri.error) }\n  }\n\n  const nb = descriptor.nb.read(capability.nb || {})\n  if (nb.error) {\n    return { error: new _error_js__WEBPACK_IMPORTED_MODULE_2__.MalformedCapability(capability, nb.error) }\n  }\n\n  return { ok: new CapabilityView(descriptor.can, uri.ok, nb.ok, delegation) }\n}\n\n/**\n * Resolves delegated capability `source` from the `claimed` capability using\n * provided capability `parser`. It is similar to `parseCapability` except\n * `source` here is treated as capability pattern which is matched against the\n * `claimed` capability. This means we resolve `can` and `with` fields from the\n * `claimed` capability and inherit all missing `nb` fields from the claimed\n * capability.\n *\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template {API.Caveats} C\n * @param {Required<Descriptor<A, R, C>>} descriptor\n * @param {API.ParsedCapability<A, R, C>} claimed\n * @param {API.Source} source\n * @returns {API.Result<API.ParsedCapability<A, R, C>, API.InvalidCapability>}\n */\n\nconst resolveCapability = (descriptor, claimed, { capability, delegation }) => {\n  const can = resolveAbility(capability.can, claimed.can, null)\n  if (can == null) {\n    return { error: new _error_js__WEBPACK_IMPORTED_MODULE_2__.UnknownCapability(capability) }\n  }\n\n  const resource = resolveResource(\n    capability.with,\n    claimed.with,\n    capability.with\n  )\n  const uri = descriptor.with.read(resource)\n  if (uri.error) {\n    return { error: new _error_js__WEBPACK_IMPORTED_MODULE_2__.MalformedCapability(capability, uri.error) }\n  }\n\n  const nb = descriptor.nb.read({\n    ...claimed.nb,\n    ...capability.nb,\n  })\n\n  if (nb.error) {\n    return { error: new _error_js__WEBPACK_IMPORTED_MODULE_2__.MalformedCapability(capability, nb.error) }\n  }\n\n  return { ok: new CapabilityView(can, uri.ok, nb.ok, delegation) }\n}\n\n/**\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template C\n */\nclass CapabilityView {\n  /**\n   * @param {A} can\n   * @param {R} with_\n   * @param {C} nb\n   * @param {API.Delegation} delegation\n   */\n  constructor(can, with_, nb, delegation) {\n    this.can = can\n    this.with = with_\n    this.delegation = delegation\n    this.nb = nb\n  }\n}\n\n/**\n * @template {API.Match} M\n * @param {API.Matcher<M>} matcher\n * @param {API.Source[]} capabilities\n * @returns {API.Select<M>}\n */\n\nconst select = (matcher, capabilities) => {\n  const unknown = []\n  const matches = []\n  const errors = []\n  for (const capability of capabilities) {\n    const result = matcher.match(capability)\n    if (result.error) {\n      switch (result.error.name) {\n        case 'UnknownCapability':\n          unknown.push(result.error.capability)\n          break\n        case 'MalformedCapability':\n        default:\n          errors.push(new _error_js__WEBPACK_IMPORTED_MODULE_2__.DelegationError([result.error], result.error.capability))\n      }\n    } else {\n      matches.push(result.ok)\n    }\n  }\n\n  return { matches, errors, unknown }\n}\n\n/**\n * @template {API.Selector<API.Match>[]} S\n * @param {{selectors:S}} self\n * @param {API.Source[]} capabilities\n */\n\nconst selectGroup = (self, capabilities) => {\n  let unknown\n  const data = []\n  const errors = []\n  for (const selector of self.selectors) {\n    const selected = selector.select(capabilities)\n    unknown = unknown\n      ? (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.intersection)(unknown, selected.unknown)\n      : selected.unknown\n\n    for (const error of selected.errors) {\n      errors.push(new _error_js__WEBPACK_IMPORTED_MODULE_2__.DelegationError([error], self))\n    }\n\n    data.push(selected.matches)\n  }\n\n  const matches = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.combine)(data).map(group => new AndMatch(group))\n\n  return {\n    unknown:\n      /* c8 ignore next */\n      unknown || [],\n    errors,\n    matches,\n  }\n}\n\n/**\n * @template {API.ParsedCapability} T\n * @template {API.ParsedCapability} U\n * @param {T} claimed\n * @param {U} delegated\n * @return {API.Result<true, API.Failure>}\n */\nconst defaultDerives = (claimed, delegated) => {\n  if (delegated.with.endsWith('*')) {\n    if (!claimed.with.startsWith(delegated.with.slice(0, -1))) {\n      return _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Schema.error(\n        `Resource ${claimed.with} does not match delegated ${delegated.with} `\n      )\n    }\n  } else if (delegated.with !== claimed.with) {\n    return _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Schema.error(\n      `Resource ${claimed.with} is not contained by ${delegated.with}`\n    )\n  }\n\n  /* c8 ignore next 2 */\n  const caveats = delegated.nb || {}\n  const nb = claimed.nb || {}\n  const kv = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.entries)(caveats)\n\n  for (const [name, value] of kv) {\n    if (nb[name] != value) {\n      return _ucanto_core__WEBPACK_IMPORTED_MODULE_3__.Schema.error(`${String(name)}: ${nb[name]} violates ${value}`)\n    }\n  }\n\n  return { ok: true }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/validator/src/capability.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/validator/src/error.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ucanto/validator/src/error.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DIDKeyResolutionError: () => (/* binding */ DIDKeyResolutionError),\n/* harmony export */   DelegationError: () => (/* binding */ DelegationError),\n/* harmony export */   EscalatedCapability: () => (/* binding */ EscalatedCapability),\n/* harmony export */   Expired: () => (/* binding */ Expired),\n/* harmony export */   Failure: () => (/* reexport safe */ _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure),\n/* harmony export */   InvalidSignature: () => (/* binding */ InvalidSignature),\n/* harmony export */   MalformedCapability: () => (/* binding */ MalformedCapability),\n/* harmony export */   NotValidBefore: () => (/* binding */ NotValidBefore),\n/* harmony export */   PrincipalAlignmentError: () => (/* binding */ PrincipalAlignmentError),\n/* harmony export */   Revoked: () => (/* binding */ Revoked),\n/* harmony export */   SessionEscalation: () => (/* binding */ SessionEscalation),\n/* harmony export */   Unauthorized: () => (/* binding */ Unauthorized),\n/* harmony export */   UnavailableProof: () => (/* binding */ UnavailableProof),\n/* harmony export */   UnknownCapability: () => (/* binding */ UnknownCapability),\n/* harmony export */   fail: () => (/* reexport safe */ _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.fail),\n/* harmony export */   indent: () => (/* binding */ indent),\n/* harmony export */   li: () => (/* binding */ li)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@ucanto/validator/src/util.js\");\n/* harmony import */ var _ucanto_core_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ucanto/core/link */ \"(ssr)/./node_modules/@ucanto/core/src/link.js\");\n/* harmony import */ var _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ucanto/core/result */ \"(ssr)/./node_modules/@ucanto/core/src/result.js\");\n\n\n\n\n\n\n\nclass EscalatedCapability extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.ParsedCapability} claimed\n   * @param {object} delegated\n   * @param {API.Failure} cause\n   */\n  constructor(claimed, delegated, cause) {\n    super()\n    this.claimed = claimed\n    this.delegated = delegated\n    this.cause = cause\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('EscalatedCapability')\n  }\n  describe() {\n    return `Constraint violation: ${this.cause.message}`\n  }\n}\n\n/**\n * @implements {API.DelegationError}\n */\nclass DelegationError extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {(API.InvalidCapability | API.EscalatedDelegation | API.DelegationError)[]} causes\n   * @param {object} context\n   */\n  constructor(causes, context) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('InvalidClaim')\n    this.causes = causes\n    this.context = context\n  }\n  describe() {\n    return [\n      `Can not derive ${this.context} from delegated capabilities:`,\n      ...this.causes.map(cause => li(cause.message)),\n    ].join('\\n')\n  }\n\n  /**\n   * @type {API.InvalidCapability | API.EscalatedDelegation | API.DelegationError}\n   */\n  get cause() {\n    /* c8 ignore next 9 */\n    if (this.causes.length !== 1) {\n      return this\n    } else {\n      const [cause] = this.causes\n      const value = cause.name === 'InvalidClaim' ? cause.cause : cause\n      Object.defineProperties(this, { cause: { value } })\n      return value\n    }\n  }\n}\n\n/**\n * @implements {API.SessionEscalation}\n */\nclass SessionEscalation extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {object} source\n   * @param {API.Delegation} source.delegation\n   * @param {API.Failure} source.cause\n   */\n  constructor({ delegation, cause }) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('SessionEscalation')\n    this.delegation = delegation\n    this.cause = cause\n  }\n  describe() {\n    const issuer = this.delegation.issuer.did()\n    return [\n      `Delegation ${this.delegation.cid} issued by ${issuer} has an invalid session`,\n      li(this.cause.message),\n    ].join('\\n')\n  }\n}\n\n/**\n * @implements {API.InvalidSignature}\n */\nclass InvalidSignature extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.Delegation} delegation\n   * @param {API.Verifier} verifier\n   */\n  constructor(delegation, verifier) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('InvalidSignature')\n    this.delegation = delegation\n    this.verifier = verifier\n  }\n  get issuer() {\n    return this.delegation.issuer\n  }\n  get audience() {\n    return this.delegation.audience\n  }\n  get key() {\n    return this.verifier.toDIDKey()\n  }\n  describe() {\n    const issuer = this.issuer.did()\n    const key = this.key\n    return (\n      issuer.startsWith('did:key')\n        ? [\n            `Proof ${this.delegation.cid} does not has a valid signature from ${key}`,\n          ]\n        : [\n            `Proof ${this.delegation.cid} issued by ${issuer} does not has a valid signature from ${key}`,\n            `  ℹ️ Probably issuer signed with a different key, which got rotated, invalidating delegations that were issued with prior keys`,\n          ]\n    ).join('\\n')\n  }\n}\n\n/**\n * @implements {API.UnavailableProof}\n */\nclass UnavailableProof extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.UCAN.Link} link\n   * @param {Error} [cause]\n   */\n  constructor(link, cause) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('UnavailableProof')\n    this.link = link\n    this.cause = cause\n  }\n  describe() {\n    return [\n      `Linked proof '${this.link}' is not included and could not be resolved`,\n      ...(this.cause\n        ? [li(`Proof resolution failed with: ${this.cause.message}`)]\n        : []),\n    ].join('\\n')\n  }\n}\n\nclass DIDKeyResolutionError extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.UCAN.DID} did\n   * @param {API.Failure} [cause]\n   */\n  constructor(did, cause) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('DIDKeyResolutionError')\n    this.did = did\n    this.cause = cause\n  }\n  describe() {\n    return `Unable to resolve '${this.did}' key`\n  }\n}\n\n/**\n * @implements {API.InvalidAudience}\n */\nclass PrincipalAlignmentError extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.UCAN.Principal} audience\n   * @param {API.Delegation} delegation\n   */\n  constructor(audience, delegation) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('InvalidAudience')\n    this.audience = audience\n    this.delegation = delegation\n  }\n  describe() {\n    return `Delegation audience is '${this.delegation.audience.did()}' instead of '${this.audience.did()}'`\n  }\n  toJSON() {\n    const { name, audience, message, stack } = this\n    return {\n      name,\n      audience: audience.did(),\n      delegation: { audience: this.delegation.audience.did() },\n      message,\n      stack,\n    }\n  }\n}\n\n/**\n * @implements {API.MalformedCapability}\n */\nclass MalformedCapability extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.Capability} capability\n   * @param {API.Failure} cause\n   */\n  constructor(capability, cause) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('MalformedCapability')\n    this.capability = capability\n    this.cause = cause\n  }\n  describe() {\n    return [\n      `Encountered malformed '${this.capability.can}' capability: ${format(\n        this.capability\n      )}`,\n      li(this.cause.message),\n    ].join('\\n')\n  }\n}\n\nclass UnknownCapability extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.Capability} capability\n   */\n  constructor(capability) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('UnknownCapability')\n    this.capability = capability\n  }\n  /* c8 ignore next 3 */\n  describe() {\n    return `Encountered unknown capability: ${format(this.capability)}`\n  }\n}\n\nclass Expired extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.Delegation & { expiration: number }} delegation\n   */\n  constructor(delegation) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('Expired')\n    this.delegation = delegation\n  }\n  describe() {\n    return `Proof ${this.delegation.cid} has expired on ${new Date(\n      this.delegation.expiration * 1000\n    )}`\n  }\n  get expiredAt() {\n    return this.delegation.expiration\n  }\n  toJSON() {\n    const { name, expiredAt, message, stack } = this\n    return {\n      name,\n      message,\n      expiredAt,\n      stack,\n    }\n  }\n}\n\n/**\n * @implements {API.Revoked}\n */\nclass Revoked extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.Delegation} delegation\n   */\n  constructor(delegation) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('Revoked')\n    this.delegation = delegation\n  }\n  describe() {\n    return `Proof ${this.delegation.cid} has been revoked`\n  }\n  toJSON() {\n    const { name, message, stack } = this\n    return {\n      name,\n      message,\n      stack,\n    }\n  }\n}\n\nclass NotValidBefore extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {API.Delegation & { notBefore: number }} delegation\n   */\n  constructor(delegation) {\n    super()\n    this.name = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.the)('NotValidBefore')\n    this.delegation = delegation\n  }\n  describe() {\n    return `Proof ${this.delegation.cid} is not valid before ${new Date(\n      this.delegation.notBefore * 1000\n    )}`\n  }\n  get validAt() {\n    return this.delegation.notBefore\n  }\n  toJSON() {\n    const { name, validAt, message, stack } = this\n    return {\n      name,\n      message,\n      validAt,\n      stack,\n    }\n  }\n}\n\n/**\n * @implements {API.Unauthorized}\n */\n\nclass Unauthorized extends _ucanto_core_result__WEBPACK_IMPORTED_MODULE_3__.Failure {\n  /**\n   * @param {{\n   * capability: API.CapabilityParser\n   * delegationErrors: API.DelegationError[]\n   * unknownCapabilities: API.Capability[]\n   * invalidProofs: API.InvalidProof[]\n   * failedProofs: API.InvalidClaim[]\n   * }} cause\n   */\n  constructor({\n    capability,\n    delegationErrors,\n    unknownCapabilities,\n    invalidProofs,\n    failedProofs,\n  }) {\n    super()\n    this.name = /** @type {const} */  ('Unauthorized')\n    this.capability = capability\n    this.delegationErrors = delegationErrors\n    this.unknownCapabilities = unknownCapabilities\n    this.invalidProofs = invalidProofs\n    this.failedProofs = failedProofs\n  }\n\n  describe() {\n    const errors = [\n      ...this.failedProofs.map(error => li(error.message)),\n      ...this.delegationErrors.map(error => li(error.message)),\n      ...this.invalidProofs.map(error => li(error.message)),\n    ]\n\n    const unknown = this.unknownCapabilities.map(c => li(JSON.stringify(c)))\n\n    return [\n      `Claim ${this.capability} is not authorized`,\n      ...(errors.length > 0\n        ? errors\n        : [li(`No matching delegated capability found`)]),\n      ...(unknown.length > 0\n        ? [li(`Encountered unknown capabilities\\n${unknown.join('\\n')}`)]\n        : []),\n    ].join('\\n')\n  }\n}\n\n/**\n * @param {unknown} capability\n * @param {string|number} [space]\n */\n\nconst format = (capability, space) =>\n  JSON.stringify(\n    capability,\n    (_key, value) => {\n      /* c8 ignore next 2 */\n      if ((0,_ucanto_core_link__WEBPACK_IMPORTED_MODULE_2__.isLink)(value)) {\n        return value.toString()\n      } else {\n        return value\n      }\n    },\n    space\n  )\n\n/**\n * @param {string} message\n */\nconst indent = (message, indent = '  ') =>\n  `${indent}${message.split('\\n').join(`\\n${indent}`)}`\n\n/**\n * @param {string} message\n */\nconst li = message => indent(`- ${message}`)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/validator/src/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/validator/src/lib.js":
/*!***************************************************!*\
  !*** ./node_modules/@ucanto/validator/src/lib.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.API),\n/* harmony export */   Authorization: () => (/* reexport module object */ _authorization_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   Bytes: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.Bytes),\n/* harmony export */   DID: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.DID),\n/* harmony export */   DIDResolutionError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.DIDKeyResolutionError),\n/* harmony export */   Failure: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.Failure),\n/* harmony export */   Link: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.Link),\n/* harmony export */   MalformedCapability: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.MalformedCapability),\n/* harmony export */   Principal: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.Principal),\n/* harmony export */   Revoked: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.Revoked),\n/* harmony export */   Schema: () => (/* reexport module object */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   Text: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.Text),\n/* harmony export */   URI: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.URI),\n/* harmony export */   Unauthorized: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.Unauthorized),\n/* harmony export */   UnavailableProof: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.UnavailableProof),\n/* harmony export */   access: () => (/* binding */ access),\n/* harmony export */   and: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.and),\n/* harmony export */   array: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.array),\n/* harmony export */   authorize: () => (/* binding */ authorize),\n/* harmony export */   boolean: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.boolean),\n/* harmony export */   bytes: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.bytes),\n/* harmony export */   capability: () => (/* reexport safe */ _capability_js__WEBPACK_IMPORTED_MODULE_2__.capability),\n/* harmony export */   claim: () => (/* binding */ claim),\n/* harmony export */   dictionary: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.dictionary),\n/* harmony export */   did: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.did),\n/* harmony export */   didBytes: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.didBytes),\n/* harmony export */   endsWith: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.endsWith),\n/* harmony export */   \"enum\": () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__[\"enum\"]),\n/* harmony export */   error: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.error),\n/* harmony export */   fail: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.fail),\n/* harmony export */   float: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.float),\n/* harmony export */   greaterThan: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.greaterThan),\n/* harmony export */   integer: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.integer),\n/* harmony export */   intersection: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.intersection),\n/* harmony export */   lessThan: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.lessThan),\n/* harmony export */   link: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.link),\n/* harmony export */   literal: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.literal),\n/* harmony export */   memberError: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.memberError),\n/* harmony export */   never: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.never),\n/* harmony export */   nullable: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.nullable),\n/* harmony export */   number: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.number),\n/* harmony export */   ok: () => (/* reexport safe */ _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.ok),\n/* harmony export */   optional: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.optional),\n/* harmony export */   or: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.or),\n/* harmony export */   principal: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.principal),\n/* harmony export */   refine: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.refine),\n/* harmony export */   startsWith: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.startsWith),\n/* harmony export */   string: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.string),\n/* harmony export */   struct: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.struct),\n/* harmony export */   text: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.text),\n/* harmony export */   toString: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.toString),\n/* harmony export */   tuple: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.tuple),\n/* harmony export */   typeError: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.typeError),\n/* harmony export */   uint64: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.uint64),\n/* harmony export */   union: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.union),\n/* harmony export */   unknown: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.unknown),\n/* harmony export */   uri: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.uri),\n/* harmony export */   variant: () => (/* reexport safe */ _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.variant)\n/* harmony export */ });\n/* harmony import */ var _ucanto_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ucanto/interface */ \"(ssr)/./node_modules/@ucanto/interface/src/lib.js\");\n/* harmony import */ var _ucanto_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ucanto/core */ \"(ssr)/./node_modules/@ucanto/core/src/lib.js\");\n/* harmony import */ var _capability_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./capability.js */ \"(ssr)/./node_modules/@ucanto/validator/src/capability.js\");\n/* harmony import */ var _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ucanto/core/schema */ \"(ssr)/./node_modules/@ucanto/core/src/schema.js\");\n/* harmony import */ var _authorization_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./authorization.js */ \"(ssr)/./node_modules/@ucanto/validator/src/authorization.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/@ucanto/validator/src/error.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @param {UCAN.Link} proof\n * @returns {{error:API.UnavailableProof}}\n */\nconst unavailable = proof => ({ error: new _error_js__WEBPACK_IMPORTED_MODULE_5__.UnavailableProof(proof) })\n\n/**\n *\n * @param {UCAN.DID} did\n * @returns {{error:API.DIDKeyResolutionError}}\n */\nconst failDIDKeyResolution = did => ({ error: new _error_js__WEBPACK_IMPORTED_MODULE_5__.DIDKeyResolutionError(did) })\n\n/**\n * @param {Required<API.ClaimOptions>} config\n * @param {API.Match<unknown, API.Match>} match\n */\n\nconst resolveMatch = async (match, config) => {\n  const promises = []\n  const includes = new Set()\n  for (const source of match.source) {\n    const id = source.delegation.cid.toString()\n    if (!includes.has(id)) {\n      promises.push(await resolveSources(source, config))\n    }\n  }\n  const groups = await Promise.all(promises)\n  const sources = []\n  const errors = []\n  for (const group of groups) {\n    sources.push(...group.sources)\n    errors.push(...group.errors)\n  }\n\n  return { sources, errors }\n}\n\n/**\n * Takes `proofs` from the delegation which may contain `Delegation` or a link\n * to one and attempts to resolve links by side loading them. Returns set of\n * resolved `Delegation`s and errors for the proofs that could not be resolved.\n *\n * @param {API.Proof[]} proofs\n * @param {Required<API.ProofResolver>} config\n */\nconst resolveProofs = async (proofs, config) => {\n  /** @type {API.Delegation[]} */\n  const delegations = []\n  /** @type {API.UnavailableProof[]} */\n  const errors = []\n  const promises = []\n  for (const proof of proofs) {\n    // If it is a delegation we can just add it to the resolved set.\n    if ((0,_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.isDelegation)(proof)) {\n      delegations.push(proof)\n    }\n    // otherwise we attempt to resolve the link asynchronously. To avoid doing\n    // sequential requests we create promise for each link and then wait for\n    // all of them at the end.\n    else {\n      promises.push(\n        new Promise(async resolve => {\n          // config.resolve is not supposed to throw, but we catch it just in\n          // case it does and consider proof resolution failed.\n          try {\n            const result = await config.resolve(proof)\n            if (result.error) {\n              errors.push(result.error)\n            } else {\n              delegations.push(result.ok)\n            }\n          } catch (error) {\n            errors.push(\n              new _error_js__WEBPACK_IMPORTED_MODULE_5__.UnavailableProof(proof, /** @type {Error} */ (error))\n            )\n          }\n\n          // we don't care about the result, we just need to signal that we are\n          // done with this promise.\n          resolve(null)\n        })\n      )\n    }\n  }\n\n  // Wait for all the promises to resolve. At this point we have collected all\n  // the resolved delegations and errors.\n  await Promise.all(promises)\n  return { delegations, errors }\n}\n\n/**\n * Takes a delegation source and attempts to resolve all the linked proofs.\n *\n * @param {API.Source} from\n * @param {Required<API.ClaimOptions>} config\n * @return {Promise<{sources:API.Source[], errors:ProofError[]}>}\n */\nconst resolveSources = async ({ delegation }, config) => {\n  const errors = []\n  const sources = []\n  const proofs = []\n  // First we attempt to resolve all the linked proofs.\n  const { delegations, errors: failedProofs } = await resolveProofs(\n    delegation.proofs,\n    config\n  )\n\n  // All the proofs that failed to resolve are saved as proof errors.\n  for (const error of failedProofs) {\n    errors.push(new ProofError(error.link, error))\n  }\n\n  // All the proofs that resolved are checked for principal alignment. Ones that\n  // do not align are saved as proof errors.\n  for (const proof of delegations) {\n    // If proof does not delegate to a matching audience save an proof error.\n    if (delegation.issuer.did() !== proof.audience.did()) {\n      errors.push(\n        new ProofError(\n          proof.cid,\n          new _error_js__WEBPACK_IMPORTED_MODULE_5__.PrincipalAlignmentError(delegation.issuer, proof)\n        )\n      )\n    } else {\n      proofs.push(proof)\n    }\n  }\n  // In the second pass we attempt to proofs that were resolved and are aligned.\n  for (const proof of proofs) {\n    // If proof is not valid (expired, not active yet or has incorrect\n    // signature) save a corresponding proof error.\n    const validation = await validate(proof, proofs, config)\n    if (validation.error) {\n      errors.push(new ProofError(proof.cid, validation.error))\n    } else {\n      // otherwise create source objects for it's capabilities, so we could\n      // track which proof in which capability the are from.\n      for (const capability of proof.capabilities) {\n        sources.push(\n          /** @type {API.Source} */ ({\n            capability,\n            delegation: proof,\n          })\n        )\n      }\n    }\n  }\n\n  return { sources, errors }\n}\n\n/**\n * @param {API.ParsedCapability} capability\n * @param {API.DID} issuer\n */\nconst isSelfIssued = (capability, issuer) => capability.with === issuer\n\n/**\n * Finds a valid path in a proof chain of the given `invocation` by exploring\n * every possible option. On success an `Authorization` object is returned that\n * illustrates the valid path. If no valid path is found `Unauthorized` error\n * is returned detailing all explored paths and where they proved to fail.\n *\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template {R} URI\n * @template {API.Caveats} C\n * @param {API.Invocation<API.Capability<A, URI, C>>} invocation\n * @param {API.ValidationOptions<API.ParsedCapability<A, R, C>>} options\n * @returns {Promise<API.Result<API.Authorization<API.ParsedCapability<A, R, C>>, API.Unauthorized>>}\n */\nconst access = async (invocation, { capability, ...config }) =>\n  claim(capability, [invocation], config)\n\n/**\n * Attempts to find a valid proof chain for the claimed `capability` given set\n * of `proofs`. On success an `Authorization` object with detailed proof chain\n * is returned and on failure `Unauthorized` error is returned with details on\n * paths explored and why they have failed.\n *\n * @template {API.Ability} A\n * @template {API.URI} R\n * @template {API.Caveats} C\n * @param {API.CapabilityParser<API.Match<API.ParsedCapability<A, R, C>>>} capability\n * @param {API.Proof[]} proofs\n * @param {API.ClaimOptions} config\n * @returns {Promise<API.Result<API.Authorization<API.ParsedCapability<A, R, C>>, API.Unauthorized>>}\n */\nconst claim = async (\n  capability,\n  proofs,\n  {\n    authority,\n    principal,\n    validateAuthorization,\n    resolveDIDKey = failDIDKeyResolution,\n    canIssue = isSelfIssued,\n    resolve = unavailable,\n    proofs: localProofs = []\n  }\n) => {\n  const config = {\n    canIssue,\n    resolve,\n    principal,\n    capability,\n    authority,\n    validateAuthorization,\n    resolveDIDKey,\n    proofs: localProofs\n  }\n\n  const invalidProofs = []\n\n  /** @type {API.Source[]} */\n  const sources = []\n\n  const { delegations, errors } = await resolveProofs(proofs, config)\n  invalidProofs.push(...errors)\n\n  for (const proof of delegations) {\n    // Validate each proof if valid add ech capability to the list of sources.\n    // otherwise collect the error.\n    const validation = await validate(proof, delegations, config)\n    if (validation.ok) {\n      for (const capability of validation.ok.capabilities.values()) {\n        sources.push(\n          /** @type {API.Source} */ ({\n            capability,\n            delegation: validation.ok,\n          })\n        )\n      }\n    } else {\n      invalidProofs.push(validation.error)\n    }\n  }\n  // look for the matching capability\n  const selection = capability.select(sources)\n\n  const { errors: delegationErrors, unknown: unknownCapabilities } = selection\n  const failedProofs = []\n  for (const matched of selection.matches) {\n    const selector = matched.prune(config)\n    if (selector == null) {\n      const authorization = _authorization_js__WEBPACK_IMPORTED_MODULE_4__.create(matched, [])\n      const result = await validateAuthorization(authorization)\n      if (result.error) {\n        invalidProofs.push(result.error)\n      } else {\n        return { ok: authorization }\n      }\n    } else {\n      const result = await authorize(selector, config)\n      if (result.error) {\n        failedProofs.push(result.error)\n      } else {\n        const authorization = _authorization_js__WEBPACK_IMPORTED_MODULE_4__.create(matched, [result.ok])\n        const approval = await validateAuthorization(authorization)\n        if (approval.error) {\n          invalidProofs.push(approval.error)\n        } else {\n          return { ok: authorization }\n        }\n      }\n    }\n  }\n\n  return {\n    error: new _error_js__WEBPACK_IMPORTED_MODULE_5__.Unauthorized({\n      capability,\n      delegationErrors,\n      unknownCapabilities,\n      invalidProofs,\n      failedProofs,\n    }),\n  }\n}\n\n/**\n * Verifies whether any of the delegated proofs grant give capability.\n *\n * @template {API.Match} Match\n * @param {Match} match\n * @param {Required<API.ClaimOptions>} config\n * @returns {Promise<API.Result<API.Authorization<API.ParsedCapability>, API.InvalidClaim>>}\n */\n\nconst authorize = async (match, config) => {\n  // load proofs from all delegations\n  const { sources, errors: invalidProofs } = await resolveMatch(match, config)\n\n  const selection = match.select(sources)\n  const { errors: delegationErrors, unknown: unknownCapabilities } = selection\n\n  const failedProofs = []\n  for (const matched of selection.matches) {\n    const selector = matched.prune(config)\n    if (selector == null) {\n      return {\n        ok: _authorization_js__WEBPACK_IMPORTED_MODULE_4__.create(\n          // @ts-expect-error - it may not be a parsed capability but rather a\n          // group of capabilities but we can deal with that in the future.\n          matched,\n          []\n        ),\n      }\n    } else {\n      const result = await authorize(selector, config)\n      if (result.error) {\n        failedProofs.push(result.error)\n      } else {\n        return {\n          ok: _authorization_js__WEBPACK_IMPORTED_MODULE_4__.create(\n            // @ts-expect-error - it may not be a parsed capability but rather a\n            // group of capabilities but we can deal with that in the future.\n            matched,\n            [result.ok]\n          ),\n        }\n      }\n    }\n  }\n\n  return {\n    error: new InvalidClaim({\n      match,\n      delegationErrors,\n      unknownCapabilities,\n      invalidProofs,\n      failedProofs,\n    }),\n  }\n}\n\nclass ProofError extends _error_js__WEBPACK_IMPORTED_MODULE_5__.Failure {\n  /**\n   * @param {API.UCANLink} proof\n   * @param {API.Failure} cause\n   */\n  constructor(proof, cause) {\n    super()\n    this.name = 'ProofError'\n    this.proof = proof\n    this.cause = cause\n  }\n  describe() {\n    return [\n      `Capability can not be derived from prf:${this.proof} because:`,\n      (0,_error_js__WEBPACK_IMPORTED_MODULE_5__.li)(this.cause.message),\n    ].join(`\\n`)\n  }\n}\n\n/**\n * @implements {API.InvalidClaim}\n */\nclass InvalidClaim extends _error_js__WEBPACK_IMPORTED_MODULE_5__.Failure {\n  /**\n   * @param {{\n   * match: API.Match\n   * delegationErrors: API.DelegationError[]\n   * unknownCapabilities: API.Capability[]\n   * invalidProofs: ProofError[]\n   * failedProofs: API.InvalidClaim[]\n   * }} info\n   */\n  constructor(info) {\n    super()\n    this.info = info\n    this.name = /** @type {const} */ ('InvalidClaim')\n  }\n  get issuer() {\n    return this.delegation.issuer\n  }\n  get delegation() {\n    return this.info.match.source[0].delegation\n  }\n  describe() {\n    const errors = [\n      ...this.info.failedProofs.map(error => (0,_error_js__WEBPACK_IMPORTED_MODULE_5__.li)(error.message)),\n      ...this.info.delegationErrors.map(error => (0,_error_js__WEBPACK_IMPORTED_MODULE_5__.li)(error.message)),\n      ...this.info.invalidProofs.map(error => (0,_error_js__WEBPACK_IMPORTED_MODULE_5__.li)(error.message)),\n    ]\n\n    const unknown = this.info.unknownCapabilities.map(c =>\n      (0,_error_js__WEBPACK_IMPORTED_MODULE_5__.li)(JSON.stringify(c))\n    )\n\n    return [\n      `Capability ${this.info.match} is not authorized because:`,\n      (0,_error_js__WEBPACK_IMPORTED_MODULE_5__.li)(`Capability can not be (self) issued by '${this.issuer.did()}'`),\n      ...(errors.length > 0 ? errors : [(0,_error_js__WEBPACK_IMPORTED_MODULE_5__.li)(`Delegated capability not found`)]),\n      ...(unknown.length > 0\n        ? [(0,_error_js__WEBPACK_IMPORTED_MODULE_5__.li)(`Encountered unknown capabilities\\n${unknown.join('\\n')}`)]\n        : []),\n    ].join('\\n')\n  }\n}\n\n/**\n * Validate a delegation to check it is within the time bound and that it is\n * authorized by the issuer.\n *\n * @template {API.Delegation} T\n * @param {T} delegation\n * @param {API.Delegation[]} proofs\n * @param {Required<API.ClaimOptions>} config\n * @returns {Promise<API.Result<T, API.InvalidProof|API.SessionEscalation|API.DIDKeyResolutionError>>}\n */\nconst validate = async (delegation, proofs, config) => {\n  if (_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.UCAN.isExpired(delegation.data)) {\n    return {\n      error: new _error_js__WEBPACK_IMPORTED_MODULE_5__.Expired(\n        /** @type {API.Delegation & {expiration: number}} */ (delegation)\n      ),\n    }\n  }\n\n  if (_ucanto_core__WEBPACK_IMPORTED_MODULE_1__.UCAN.isTooEarly(delegation.data)) {\n    return {\n      error: new _error_js__WEBPACK_IMPORTED_MODULE_5__.NotValidBefore(\n        /** @type {API.Delegation & {notBefore: number}} */ (delegation)\n      ),\n    }\n  }\n\n  return await verifyAuthorization(delegation, proofs, config)\n}\n\n/**\n * Verifies that delegation has been authorized by the issuer. If issued by the\n * did:key principal checks that the signature is valid. If issued by the root\n * authority checks that the signature is valid. If issued by the principal\n * identified by other DID method attempts to resolve a valid `ucan/attest`\n * attestation from the authority, if attestation is not found falls back to\n * resolving did:key for the issuer and verifying its signature.\n *\n * @template {API.Delegation} T\n * @param {T} delegation\n * @param {API.Delegation[]} proofs\n * @param {Required<API.ClaimOptions>} config\n * @returns {Promise<API.Result<T, API.InvalidSignature|API.SessionEscalation|API.DIDKeyResolutionError>>}\n */\nconst verifyAuthorization = async (delegation, proofs, config) => {\n  const issuer = delegation.issuer.did()\n  // If the issuer is a did:key we just verify a signature\n  if (issuer.startsWith('did:key:')) {\n    return verifySignature(delegation, config.principal.parse(issuer))\n  }\n  // If the issuer is the root authority we use authority itself to verify\n  else if (issuer === config.authority.did()) {\n    return verifySignature(delegation, config.authority)\n  } else {\n    // If issuer is not a did:key principal nor configured authority, we\n    // attempt to resolve embedded authorization session from the authority.\n    const session = await verifySession(delegation, proofs, config)\n    // If we have valid session we consider authorization valid\n    if (session.ok) {\n      return { ok: delegation }\n    } else if (session.error.failedProofs.length > 0) {\n      return {\n        error: new _error_js__WEBPACK_IMPORTED_MODULE_5__.SessionEscalation({ delegation, cause: session.error }),\n      }\n    }\n    // Otherwise we try to resolve did:key from the DID instead\n    // and use that to verify the signature\n    else {\n      const verifier = await config.resolveDIDKey(issuer)\n      if (verifier.error) {\n        return verifier\n      } else {\n        return verifySignature(\n          delegation,\n          config.principal.parse(verifier.ok).withDID(issuer)\n        )\n      }\n    }\n  }\n}\n\n/**\n * @template {API.Delegation} T\n * @param {T} delegation\n * @param {API.Verifier} verifier\n * @returns {Promise<API.Result<T, API.InvalidSignature|API.DIDKeyResolutionError>>}\n */\nconst verifySignature = async (delegation, verifier) => {\n  const valid = await _ucanto_core__WEBPACK_IMPORTED_MODULE_1__.UCAN.verifySignature(delegation.data, verifier)\n  return valid\n    ? { ok: delegation }\n    : { error: new _error_js__WEBPACK_IMPORTED_MODULE_5__.InvalidSignature(delegation, verifier) }\n}\n\n/**\n * Attempts to find an authorization session - an `ucan/attest` capability\n * delegation where `with` matches `config.authority` and `nb.proof`\n * matches given delegation.\n * @see https://github.com/web3-storage/specs/blob/feat/auth+account/w3-session.md#authorization-session\n *\n * @param {API.Delegation} delegation\n * @param {API.Delegation[]} proofs\n * @param {Required<API.ClaimOptions>} config\n */\nconst verifySession = async (delegation, proofs, config) => {\n  // Recognize attestations from all authorized principals, not just authority\n  const withSchemas = config.proofs\n    .filter(p => p.capabilities[0].can === 'ucan/attest' && p.capabilities[0].with === config.authority.did())\n    .map(p => _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.literal(p.audience.did()))\n\n  const withSchema = withSchemas.length\n    ? _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.union([_ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.literal(config.authority.did()), ...withSchemas])\n    : _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.literal(config.authority.did())\n\n  // Create a schema that will match an authorization for this exact delegation\n  const attestation = (0,_capability_js__WEBPACK_IMPORTED_MODULE_2__.capability)({\n    with: withSchema,\n    can: 'ucan/attest',\n    nb: _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.struct({\n      proof: _ucanto_core_schema__WEBPACK_IMPORTED_MODULE_3__.link(delegation.cid),\n    }),\n  })\n\n  return await claim(\n    attestation,\n    proofs\n      // We only consider attestations otherwise we will end up doing an\n      // exponential scan if there are other proofs that require attestations.\n      .filter(isAttestation)\n      // Also filter any proofs that _are_ the delegation we're verifying so\n      // we don't recurse indefinitely.\n      .filter(p => p.cid.toString() !== delegation.cid.toString()),\n    config\n  )\n}\n\n/**\n * Checks if the delegation is an attestation.\n *\n * @param {API.Delegation} proof\n */\nconst isAttestation = proof => proof.capabilities[0]?.can === 'ucan/attest'\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/validator/src/lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ucanto/validator/src/util.js":
/*!****************************************************!*\
  !*** ./node_modules/@ucanto/validator/src/util.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   entries: () => (/* binding */ entries),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   the: () => (/* binding */ the)\n/* harmony export */ });\n/**\n * @template {string|boolean|number|[unknown, ...unknown[]]} T\n * @param {T} value\n * @returns {T}\n */\nconst the = value => value\n\n/**\n * @template {{}} O\n * @param {O} object\n * @returns {({ [K in keyof O]: [K, O[K]][] }[keyof O])|[[never, never]]}\n */\n\nconst entries = object => /** @type {any} */ (Object.entries(object))\n\n/**\n * @template T\n * @param {T[][]} dataset\n * @returns {T[][]}\n */\nconst combine = ([first, ...rest]) => {\n  const results = first.map(value => [value])\n  for (const values of rest) {\n    const tuples = results.splice(0)\n    for (const value of values) {\n      for (const tuple of tuples) {\n        results.push([...tuple, value])\n      }\n    }\n  }\n  return results\n}\n\n/**\n * @template T\n * @param {T[]} left\n * @param {T[]} right\n * @returns {T[]}\n */\nconst intersection = (left, right) => {\n  const [result, other] =\n    left.length < right.length\n      ? [new Set(left), new Set(right)]\n      : [new Set(right), new Set(left)]\n\n  for (const item of result) {\n    if (!other.has(item)) {\n      result.delete(item)\n    }\n  }\n\n  return [...result]\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVjYW50by92YWxpZGF0b3Ivc3JjL3V0aWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsY0FBYywrQ0FBK0M7QUFDN0QsV0FBVyxHQUFHO0FBQ2QsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQSxrQkFBa0I7QUFDbEIsV0FBVyxHQUFHO0FBQ2QsYUFBYSxHQUFHLDZCQUE2QjtBQUM3Qzs7QUFFTyxxQ0FBcUMsS0FBSzs7QUFFakQ7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsS0FBSztBQUNoQixXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AdWNhbnRvL3ZhbGlkYXRvci9zcmMvdXRpbC5qcz80YzVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHRlbXBsYXRlIHtzdHJpbmd8Ym9vbGVhbnxudW1iZXJ8W3Vua25vd24sIC4uLnVua25vd25bXV19IFRcbiAqIEBwYXJhbSB7VH0gdmFsdWVcbiAqIEByZXR1cm5zIHtUfVxuICovXG5leHBvcnQgY29uc3QgdGhlID0gdmFsdWUgPT4gdmFsdWVcblxuLyoqXG4gKiBAdGVtcGxhdGUge3t9fSBPXG4gKiBAcGFyYW0ge099IG9iamVjdFxuICogQHJldHVybnMgeyh7IFtLIGluIGtleW9mIE9dOiBbSywgT1tLXV1bXSB9W2tleW9mIE9dKXxbW25ldmVyLCBuZXZlcl1dfVxuICovXG5cbmV4cG9ydCBjb25zdCBlbnRyaWVzID0gb2JqZWN0ID0+IC8qKiBAdHlwZSB7YW55fSAqLyAoT2JqZWN0LmVudHJpZXMob2JqZWN0KSlcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtUW11bXX0gZGF0YXNldFxuICogQHJldHVybnMge1RbXVtdfVxuICovXG5leHBvcnQgY29uc3QgY29tYmluZSA9IChbZmlyc3QsIC4uLnJlc3RdKSA9PiB7XG4gIGNvbnN0IHJlc3VsdHMgPSBmaXJzdC5tYXAodmFsdWUgPT4gW3ZhbHVlXSlcbiAgZm9yIChjb25zdCB2YWx1ZXMgb2YgcmVzdCkge1xuICAgIGNvbnN0IHR1cGxlcyA9IHJlc3VsdHMuc3BsaWNlKDApXG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGZvciAoY29uc3QgdHVwbGUgb2YgdHVwbGVzKSB7XG4gICAgICAgIHJlc3VsdHMucHVzaChbLi4udHVwbGUsIHZhbHVlXSlcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdHNcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtUW119IGxlZnRcbiAqIEBwYXJhbSB7VFtdfSByaWdodFxuICogQHJldHVybnMge1RbXX1cbiAqL1xuZXhwb3J0IGNvbnN0IGludGVyc2VjdGlvbiA9IChsZWZ0LCByaWdodCkgPT4ge1xuICBjb25zdCBbcmVzdWx0LCBvdGhlcl0gPVxuICAgIGxlZnQubGVuZ3RoIDwgcmlnaHQubGVuZ3RoXG4gICAgICA/IFtuZXcgU2V0KGxlZnQpLCBuZXcgU2V0KHJpZ2h0KV1cbiAgICAgIDogW25ldyBTZXQocmlnaHQpLCBuZXcgU2V0KGxlZnQpXVxuXG4gIGZvciAoY29uc3QgaXRlbSBvZiByZXN1bHQpIHtcbiAgICBpZiAoIW90aGVyLmhhcyhpdGVtKSkge1xuICAgICAgcmVzdWx0LmRlbGV0ZShpdGVtKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBbLi4ucmVzdWx0XVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ucanto/validator/src/util.js\n");

/***/ })

};
;