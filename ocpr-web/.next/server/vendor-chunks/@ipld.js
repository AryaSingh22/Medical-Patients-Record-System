"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ipld";
exports.ids = ["vendor-chunks/@ipld"];
exports.modules = {

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/minimal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/minimal.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// minimal library entry point.\n\n\nmodule.exports = __webpack_require__(/*! ./src/index-minimal */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/index-minimal.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL21pbmltYWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRWE7QUFDYixpSkFBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvbWluaW1hbC5qcz80ZWVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIG1pbmltYWwgbGlicmFyeSBlbnRyeSBwb2ludC5cblxuXCJ1c2Ugc3RyaWN0XCI7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL3NyYy9pbmRleC1taW5pbWFsXCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/minimal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/index-minimal.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/index-minimal.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = __webpack_require__(/*! ./writer */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer.js\");\nprotobuf.BufferWriter = __webpack_require__(/*! ./writer_buffer */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer_buffer.js\");\nprotobuf.Reader       = __webpack_require__(/*! ./reader */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader.js\");\nprotobuf.BufferReader = __webpack_require__(/*! ./reader_buffer */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader_buffer.js\");\n\n// Utility\nprotobuf.util         = __webpack_require__(/*! ./util/minimal */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js\");\nprotobuf.rpc          = __webpack_require__(/*! ./rpc */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/rpc.js\");\nprotobuf.roots        = __webpack_require__(/*! ./roots */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/roots.js\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL3NyYy9pbmRleC1taW5pbWFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdCQUF3QixtQkFBTyxDQUFDLHlGQUFVO0FBQzFDLHdCQUF3QixtQkFBTyxDQUFDLHVHQUFpQjtBQUNqRCx3QkFBd0IsbUJBQU8sQ0FBQyx5RkFBVTtBQUMxQyx3QkFBd0IsbUJBQU8sQ0FBQyx1R0FBaUI7O0FBRWpEO0FBQ0Esd0JBQXdCLG1CQUFPLENBQUMscUdBQWdCO0FBQ2hELHdCQUF3QixtQkFBTyxDQUFDLG1GQUFPO0FBQ3ZDLHdCQUF3QixtQkFBTyxDQUFDLHVGQUFTO0FBQ3pDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvaW5kZXgtbWluaW1hbC5qcz80NjZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIHByb3RvYnVmID0gZXhwb3J0cztcblxuLyoqXG4gKiBCdWlsZCB0eXBlLCBvbmUgb2YgYFwiZnVsbFwiYCwgYFwibGlnaHRcImAgb3IgYFwibWluaW1hbFwiYC5cbiAqIEBuYW1lIGJ1aWxkXG4gKiBAdHlwZSB7c3RyaW5nfVxuICogQGNvbnN0XG4gKi9cbnByb3RvYnVmLmJ1aWxkID0gXCJtaW5pbWFsXCI7XG5cbi8vIFNlcmlhbGl6YXRpb25cbnByb3RvYnVmLldyaXRlciAgICAgICA9IHJlcXVpcmUoXCIuL3dyaXRlclwiKTtcbnByb3RvYnVmLkJ1ZmZlcldyaXRlciA9IHJlcXVpcmUoXCIuL3dyaXRlcl9idWZmZXJcIik7XG5wcm90b2J1Zi5SZWFkZXIgICAgICAgPSByZXF1aXJlKFwiLi9yZWFkZXJcIik7XG5wcm90b2J1Zi5CdWZmZXJSZWFkZXIgPSByZXF1aXJlKFwiLi9yZWFkZXJfYnVmZmVyXCIpO1xuXG4vLyBVdGlsaXR5XG5wcm90b2J1Zi51dGlsICAgICAgICAgPSByZXF1aXJlKFwiLi91dGlsL21pbmltYWxcIik7XG5wcm90b2J1Zi5ycGMgICAgICAgICAgPSByZXF1aXJlKFwiLi9ycGNcIik7XG5wcm90b2J1Zi5yb290cyAgICAgICAgPSByZXF1aXJlKFwiLi9yb290c1wiKTtcbnByb3RvYnVmLmNvbmZpZ3VyZSAgICA9IGNvbmZpZ3VyZTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbi8qKlxuICogUmVjb25maWd1cmVzIHRoZSBsaWJyYXJ5IGFjY29yZGluZyB0byB0aGUgZW52aXJvbm1lbnQuXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICovXG5mdW5jdGlvbiBjb25maWd1cmUoKSB7XG4gICAgcHJvdG9idWYudXRpbC5fY29uZmlndXJlKCk7XG4gICAgcHJvdG9idWYuV3JpdGVyLl9jb25maWd1cmUocHJvdG9idWYuQnVmZmVyV3JpdGVyKTtcbiAgICBwcm90b2J1Zi5SZWFkZXIuX2NvbmZpZ3VyZShwcm90b2J1Zi5CdWZmZXJSZWFkZXIpO1xufVxuXG4vLyBTZXQgdXAgYnVmZmVyIHV0aWxpdHkgYWNjb3JkaW5nIHRvIHRoZSBlbnZpcm9ubWVudFxuY29uZmlndXJlKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/index-minimal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Reader;\n\nvar util      = __webpack_require__(/*! ./util/minimal */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader_buffer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader_buffer.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = __webpack_require__(/*! ./reader */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader.js\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = __webpack_require__(/*! ./util/minimal */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL3NyYy9yZWFkZXJfYnVmZmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7O0FBRUE7QUFDQSxhQUFhLG1CQUFPLENBQUMseUZBQVU7QUFDL0I7O0FBRUEsV0FBVyxtQkFBTyxDQUFDLHFHQUFnQjs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvc3JjL3JlYWRlcl9idWZmZXIuanM/ZmYwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbm1vZHVsZS5leHBvcnRzID0gQnVmZmVyUmVhZGVyO1xuXG4vLyBleHRlbmRzIFJlYWRlclxudmFyIFJlYWRlciA9IHJlcXVpcmUoXCIuL3JlYWRlclwiKTtcbihCdWZmZXJSZWFkZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShSZWFkZXIucHJvdG90eXBlKSkuY29uc3RydWN0b3IgPSBCdWZmZXJSZWFkZXI7XG5cbnZhciB1dGlsID0gcmVxdWlyZShcIi4vdXRpbC9taW5pbWFsXCIpO1xuXG4vKipcbiAqIENvbnN0cnVjdHMgYSBuZXcgYnVmZmVyIHJlYWRlciBpbnN0YW5jZS5cbiAqIEBjbGFzc2Rlc2MgV2lyZSBmb3JtYXQgcmVhZGVyIHVzaW5nIG5vZGUgYnVmZmVycy5cbiAqIEBleHRlbmRzIFJlYWRlclxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0J1ZmZlcn0gYnVmZmVyIEJ1ZmZlciB0byByZWFkIGZyb21cbiAqL1xuZnVuY3Rpb24gQnVmZmVyUmVhZGVyKGJ1ZmZlcikge1xuICAgIFJlYWRlci5jYWxsKHRoaXMsIGJ1ZmZlcik7XG5cbiAgICAvKipcbiAgICAgKiBSZWFkIGJ1ZmZlci5cbiAgICAgKiBAbmFtZSBCdWZmZXJSZWFkZXIjYnVmXG4gICAgICogQHR5cGUge0J1ZmZlcn1cbiAgICAgKi9cbn1cblxuQnVmZmVyUmVhZGVyLl9jb25maWd1cmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAodXRpbC5CdWZmZXIpXG4gICAgICAgIEJ1ZmZlclJlYWRlci5wcm90b3R5cGUuX3NsaWNlID0gdXRpbC5CdWZmZXIucHJvdG90eXBlLnNsaWNlO1xufTtcblxuXG4vKipcbiAqIEBvdmVycmlkZVxuICovXG5CdWZmZXJSZWFkZXIucHJvdG90eXBlLnN0cmluZyA9IGZ1bmN0aW9uIHJlYWRfc3RyaW5nX2J1ZmZlcigpIHtcbiAgICB2YXIgbGVuID0gdGhpcy51aW50MzIoKTsgLy8gbW9kaWZpZXMgcG9zXG4gICAgcmV0dXJuIHRoaXMuYnVmLnV0ZjhTbGljZVxuICAgICAgICA/IHRoaXMuYnVmLnV0ZjhTbGljZSh0aGlzLnBvcywgdGhpcy5wb3MgPSBNYXRoLm1pbih0aGlzLnBvcyArIGxlbiwgdGhpcy5sZW4pKVxuICAgICAgICA6IHRoaXMuYnVmLnRvU3RyaW5nKFwidXRmLThcIiwgdGhpcy5wb3MsIHRoaXMucG9zID0gTWF0aC5taW4odGhpcy5wb3MgKyBsZW4sIHRoaXMubGVuKSk7XG59O1xuXG4vKipcbiAqIFJlYWRzIGEgc2VxdWVuY2Ugb2YgYnl0ZXMgcHJlY2VlZGVkIGJ5IGl0cyBsZW5ndGggYXMgYSB2YXJpbnQuXG4gKiBAbmFtZSBCdWZmZXJSZWFkZXIjYnl0ZXNcbiAqIEBmdW5jdGlvblxuICogQHJldHVybnMge0J1ZmZlcn0gVmFsdWUgcmVhZFxuICovXG5cbkJ1ZmZlclJlYWRlci5fY29uZmlndXJlKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/reader_buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/roots.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/roots.js ***!
  \************************************************************************/
/***/ ((module) => {

eval("\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL3NyYy9yb290cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL3NyYy9yb290cy5qcz84ZGZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLyoqXG4gKiBOYW1lZCByb290cy5cbiAqIFRoaXMgaXMgd2hlcmUgcGJqcyBzdG9yZXMgZ2VuZXJhdGVkIHN0cnVjdHVyZXMgKHRoZSBvcHRpb24gYC1yLCAtLXJvb3RgIHNwZWNpZmllcyBhIG5hbWUpLlxuICogQ2FuIGFsc28gYmUgdXNlZCBtYW51YWxseSB0byBtYWtlIHJvb3RzIGF2YWlsYWJsZSBhY3Jvc3MgbW9kdWxlcy5cbiAqIEBuYW1lIHJvb3RzXG4gKiBAdHlwZSB7T2JqZWN0LjxzdHJpbmcsUm9vdD59XG4gKiBAZXhhbXBsZVxuICogLy8gcGJqcyAtciBteXJvb3QgLW8gY29tcGlsZWQuanMgLi4uXG4gKlxuICogLy8gaW4gYW5vdGhlciBtb2R1bGU6XG4gKiByZXF1aXJlKFwiLi9jb21waWxlZC5qc1wiKTtcbiAqXG4gKiAvLyBpbiBhbnkgc3Vic2VxdWVudCBtb2R1bGU6XG4gKiB2YXIgcm9vdCA9IHByb3RvYnVmLnJvb3RzW1wibXlyb290XCJdO1xuICovXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/roots.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/rpc.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/rpc.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = __webpack_require__(/*! ./rpc/service */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/rpc/service.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL3NyYy9ycGMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlDQUFpQyxzQkFBc0I7QUFDdkQ7QUFDQSxVQUFVO0FBQ1YsV0FBVyxtQ0FBbUMsWUFBWSxJQUFJO0FBQzlELFdBQVcsWUFBWTtBQUN2QixXQUFXLGlCQUFpQjtBQUM1QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsY0FBYztBQUNqRDtBQUNBLFVBQVU7QUFDVixXQUFXLFlBQVk7QUFDdkIsV0FBVyxpQkFBaUI7QUFDNUIsYUFBYTtBQUNiOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxtR0FBZSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvcnBjLmpzPzFlZjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogU3RyZWFtaW5nIFJQQyBoZWxwZXJzLlxuICogQG5hbWVzcGFjZVxuICovXG52YXIgcnBjID0gZXhwb3J0cztcblxuLyoqXG4gKiBSUEMgaW1wbGVtZW50YXRpb24gcGFzc2VkIHRvIHtAbGluayBTZXJ2aWNlI2NyZWF0ZX0gcGVyZm9ybWluZyBhIHNlcnZpY2UgcmVxdWVzdCBvbiBuZXR3b3JrIGxldmVsLCBpLmUuIGJ5IHV0aWxpemluZyBodHRwIHJlcXVlc3RzIG9yIHdlYnNvY2tldHMuXG4gKiBAdHlwZWRlZiBSUENJbXBsXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAcGFyYW0ge01ldGhvZHxycGMuU2VydmljZU1ldGhvZDxNZXNzYWdlPHt9PixNZXNzYWdlPHt9Pj59IG1ldGhvZCBSZWZsZWN0ZWQgb3Igc3RhdGljIG1ldGhvZCBiZWluZyBjYWxsZWRcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gcmVxdWVzdERhdGEgUmVxdWVzdCBkYXRhXG4gKiBAcGFyYW0ge1JQQ0ltcGxDYWxsYmFja30gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiBAZXhhbXBsZVxuICogZnVuY3Rpb24gcnBjSW1wbChtZXRob2QsIHJlcXVlc3REYXRhLCBjYWxsYmFjaykge1xuICogICAgIGlmIChwcm90b2J1Zi51dGlsLmxjRmlyc3QobWV0aG9kLm5hbWUpICE9PSBcIm15TWV0aG9kXCIpIC8vIGNvbXBhdGlibGUgd2l0aCBzdGF0aWMgY29kZVxuICogICAgICAgICB0aHJvdyBFcnJvcihcIm5vIHN1Y2ggbWV0aG9kXCIpO1xuICogICAgIGFzeW5jaHJvbm91c2x5T2J0YWluQVJlc3BvbnNlKHJlcXVlc3REYXRhLCBmdW5jdGlvbihlcnIsIHJlc3BvbnNlRGF0YSkge1xuICogICAgICAgICBjYWxsYmFjayhlcnIsIHJlc3BvbnNlRGF0YSk7XG4gKiAgICAgfSk7XG4gKiB9XG4gKi9cblxuLyoqXG4gKiBOb2RlLXN0eWxlIGNhbGxiYWNrIGFzIHVzZWQgYnkge0BsaW5rIFJQQ0ltcGx9LlxuICogQHR5cGVkZWYgUlBDSW1wbENhbGxiYWNrXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAcGFyYW0ge0Vycm9yfG51bGx9IGVycm9yIEVycm9yLCBpZiBhbnksIG90aGVyd2lzZSBgbnVsbGBcbiAqIEBwYXJhbSB7VWludDhBcnJheXxudWxsfSBbcmVzcG9uc2VdIFJlc3BvbnNlIGRhdGEgb3IgYG51bGxgIHRvIHNpZ25hbCBlbmQgb2Ygc3RyZWFtLCBpZiB0aGVyZSBoYXNuJ3QgYmVlbiBhbiBlcnJvclxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuXG5ycGMuU2VydmljZSA9IHJlcXVpcmUoXCIuL3JwYy9zZXJ2aWNlXCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/rpc/service.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/rpc/service.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Service;\n\nvar util = __webpack_require__(/*! ../util/minimal */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/rpc/service.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/longbits.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/longbits.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = LongBits;\n\nvar util = __webpack_require__(/*! ../util/minimal */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/longbits.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = __webpack_require__(/*! @protobufjs/aspromise */ \"(ssr)/./node_modules/@protobufjs/aspromise/index.js\");\n\n// converts to / from base64 encoded strings\nutil.base64 = __webpack_require__(/*! @protobufjs/base64 */ \"(ssr)/./node_modules/@protobufjs/base64/index.js\");\n\n// base class of rpc.Service\nutil.EventEmitter = __webpack_require__(/*! @protobufjs/eventemitter */ \"(ssr)/./node_modules/@protobufjs/eventemitter/index.js\");\n\n// float handling accross browsers\nutil.float = __webpack_require__(/*! @protobufjs/float */ \"(ssr)/./node_modules/@protobufjs/float/index.js\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = __webpack_require__(/*! @protobufjs/inquire */ \"(ssr)/./node_modules/@protobufjs/inquire/index.js\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = __webpack_require__(/*! @protobufjs/utf8 */ \"(ssr)/./node_modules/@protobufjs/utf8/index.js\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = __webpack_require__(/*! @protobufjs/pool */ \"(ssr)/./node_modules/@protobufjs/pool/index.js\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = __webpack_require__(/*! ./longbits */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/longbits.js\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Writer;\n\nvar util      = __webpack_require__(/*! ./util/minimal */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer_buffer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer_buffer.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = __webpack_require__(/*! ./writer */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer.js\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = __webpack_require__(/*! ./util/minimal */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL3NyYy93cml0ZXJfYnVmZmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7O0FBRUE7QUFDQSxhQUFhLG1CQUFPLENBQUMseUZBQVU7QUFDL0I7O0FBRUEsV0FBVyxtQkFBTyxDQUFDLHFHQUFnQjs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsZUFBZTtBQUM5QztBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvd3JpdGVyX2J1ZmZlci5qcz8xZmEzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBCdWZmZXJXcml0ZXI7XG5cbi8vIGV4dGVuZHMgV3JpdGVyXG52YXIgV3JpdGVyID0gcmVxdWlyZShcIi4vd3JpdGVyXCIpO1xuKEJ1ZmZlcldyaXRlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFdyaXRlci5wcm90b3R5cGUpKS5jb25zdHJ1Y3RvciA9IEJ1ZmZlcldyaXRlcjtcblxudmFyIHV0aWwgPSByZXF1aXJlKFwiLi91dGlsL21pbmltYWxcIik7XG5cbi8qKlxuICogQ29uc3RydWN0cyBhIG5ldyBidWZmZXIgd3JpdGVyIGluc3RhbmNlLlxuICogQGNsYXNzZGVzYyBXaXJlIGZvcm1hdCB3cml0ZXIgdXNpbmcgbm9kZSBidWZmZXJzLlxuICogQGV4dGVuZHMgV3JpdGVyXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gQnVmZmVyV3JpdGVyKCkge1xuICAgIFdyaXRlci5jYWxsKHRoaXMpO1xufVxuXG5CdWZmZXJXcml0ZXIuX2NvbmZpZ3VyZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBBbGxvY2F0ZXMgYSBidWZmZXIgb2YgdGhlIHNwZWNpZmllZCBzaXplLlxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzaXplIEJ1ZmZlciBzaXplXG4gICAgICogQHJldHVybnMge0J1ZmZlcn0gQnVmZmVyXG4gICAgICovXG4gICAgQnVmZmVyV3JpdGVyLmFsbG9jID0gdXRpbC5fQnVmZmVyX2FsbG9jVW5zYWZlO1xuXG4gICAgQnVmZmVyV3JpdGVyLndyaXRlQnl0ZXNCdWZmZXIgPSB1dGlsLkJ1ZmZlciAmJiB1dGlsLkJ1ZmZlci5wcm90b3R5cGUgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIHV0aWwuQnVmZmVyLnByb3RvdHlwZS5zZXQubmFtZSA9PT0gXCJzZXRcIlxuICAgICAgICA/IGZ1bmN0aW9uIHdyaXRlQnl0ZXNCdWZmZXJfc2V0KHZhbCwgYnVmLCBwb3MpIHtcbiAgICAgICAgICBidWYuc2V0KHZhbCwgcG9zKTsgLy8gZmFzdGVyIHRoYW4gY29weSAocmVxdWlyZXMgbm9kZSA+PSA0IHdoZXJlIEJ1ZmZlcnMgZXh0ZW5kIFVpbnQ4QXJyYXkgYW5kIHNldCBpcyBwcm9wZXJseSBpbmhlcml0ZWQpXG4gICAgICAgICAgLy8gYWxzbyB3b3JrcyBmb3IgcGxhaW4gYXJyYXkgdmFsdWVzXG4gICAgICAgIH1cbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgOiBmdW5jdGlvbiB3cml0ZUJ5dGVzQnVmZmVyX2NvcHkodmFsLCBidWYsIHBvcykge1xuICAgICAgICAgIGlmICh2YWwuY29weSkgLy8gQnVmZmVyIHZhbHVlc1xuICAgICAgICAgICAgdmFsLmNvcHkoYnVmLCBwb3MsIDAsIHZhbC5sZW5ndGgpO1xuICAgICAgICAgIGVsc2UgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWwubGVuZ3RoOykgLy8gcGxhaW4gYXJyYXkgdmFsdWVzXG4gICAgICAgICAgICBidWZbcG9zKytdID0gdmFsW2krK107XG4gICAgICAgIH07XG59O1xuXG5cbi8qKlxuICogQG92ZXJyaWRlXG4gKi9cbkJ1ZmZlcldyaXRlci5wcm90b3R5cGUuYnl0ZXMgPSBmdW5jdGlvbiB3cml0ZV9ieXRlc19idWZmZXIodmFsdWUpIHtcbiAgICBpZiAodXRpbC5pc1N0cmluZyh2YWx1ZSkpXG4gICAgICAgIHZhbHVlID0gdXRpbC5fQnVmZmVyX2Zyb20odmFsdWUsIFwiYmFzZTY0XCIpO1xuICAgIHZhciBsZW4gPSB2YWx1ZS5sZW5ndGggPj4+IDA7XG4gICAgdGhpcy51aW50MzIobGVuKTtcbiAgICBpZiAobGVuKVxuICAgICAgICB0aGlzLl9wdXNoKEJ1ZmZlcldyaXRlci53cml0ZUJ5dGVzQnVmZmVyLCBsZW4sIHZhbHVlKTtcbiAgICByZXR1cm4gdGhpcztcbn07XG5cbmZ1bmN0aW9uIHdyaXRlU3RyaW5nQnVmZmVyKHZhbCwgYnVmLCBwb3MpIHtcbiAgICBpZiAodmFsLmxlbmd0aCA8IDQwKSAvLyBwbGFpbiBqcyBpcyBmYXN0ZXIgZm9yIHNob3J0IHN0cmluZ3MgKHByb2JhYmx5IGR1ZSB0byByZWR1bmRhbnQgYXNzZXJ0aW9ucylcbiAgICAgICAgdXRpbC51dGY4LndyaXRlKHZhbCwgYnVmLCBwb3MpO1xuICAgIGVsc2UgaWYgKGJ1Zi51dGY4V3JpdGUpXG4gICAgICAgIGJ1Zi51dGY4V3JpdGUodmFsLCBwb3MpO1xuICAgIGVsc2VcbiAgICAgICAgYnVmLndyaXRlKHZhbCwgcG9zKTtcbn1cblxuLyoqXG4gKiBAb3ZlcnJpZGVcbiAqL1xuQnVmZmVyV3JpdGVyLnByb3RvdHlwZS5zdHJpbmcgPSBmdW5jdGlvbiB3cml0ZV9zdHJpbmdfYnVmZmVyKHZhbHVlKSB7XG4gICAgdmFyIGxlbiA9IHV0aWwuQnVmZmVyLmJ5dGVMZW5ndGgodmFsdWUpO1xuICAgIHRoaXMudWludDMyKGxlbik7XG4gICAgaWYgKGxlbilcbiAgICAgICAgdGhpcy5fcHVzaCh3cml0ZVN0cmluZ0J1ZmZlciwgbGVuLCB2YWx1ZSk7XG4gICAgcmV0dXJuIHRoaXM7XG59O1xuXG5cbi8qKlxuICogRmluaXNoZXMgdGhlIHdyaXRlIG9wZXJhdGlvbi5cbiAqIEBuYW1lIEJ1ZmZlcldyaXRlciNmaW5pc2hcbiAqIEBmdW5jdGlvblxuICogQHJldHVybnMge0J1ZmZlcn0gRmluaXNoZWQgYnVmZmVyXG4gKi9cblxuQnVmZmVyV3JpdGVyLl9jb25maWd1cmUoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/src/writer_buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/cborg.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/cborg.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Token),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokeniser),\n/* harmony export */   Type: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Type),\n/* harmony export */   decode: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   tokensToObject: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/encode.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/decode.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _lib_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n\n\n\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDd0M7QUFDcEM7O0FBRTVDO0FBQ0E7QUFDQSxhQUFhLGtDQUFrQztBQUMvQztBQUNBLGFBQWEsMkNBQTJDO0FBQ3hELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEscUNBQXFDO0FBQ2xEOztBQVVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzPzJkZmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlIH0gZnJvbSAnLi9saWIvZW5jb2RlLmpzJ1xuaW1wb3J0IHsgZGVjb2RlLCBkZWNvZGVGaXJzdCwgVG9rZW5pc2VyLCB0b2tlbnNUb09iamVjdCB9IGZyb20gJy4vbGliL2RlY29kZS5qcydcbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi9saWIvdG9rZW4uanMnXG5cbi8qKlxuICogRXhwb3J0IHRoZSB0eXBlcyB0aGF0IHdlcmUgcHJlc2VudCBpbiB0aGUgb3JpZ2luYWwgbWFudWFsIGNib3JnLmQudHNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuVGFnRGVjb2Rlcn0gVGFnRGVjb2RlclxuICogVGhlcmUgd2FzIG9yaWdpbmFsbHkganVzdCBgVHlwZUVuY29kZXJgIHNvIGRvbid0IGJyZWFrIHR5cGVzIGJ5IHJlbmFtaW5nIG9yIG5vdCBleHBvcnRpbmdcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuT3B0aW9uYWxUeXBlRW5jb2Rlcn0gVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5FbmNvZGVPcHRpb25zfSBFbmNvZGVPcHRpb25zXG4gKi9cblxuZXhwb3J0IHtcbiAgZGVjb2RlLFxuICBkZWNvZGVGaXJzdCxcbiAgVG9rZW5pc2VyIGFzIFRva2VuaXplcixcbiAgdG9rZW5zVG9PYmplY3QsXG4gIGVuY29kZSxcbiAgVG9rZW4sXG4gIFR5cGVcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/cborg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUint16: () => (/* binding */ decodeUint16),\n/* harmony export */   decodeUint32: () => (/* binding */ decodeUint32),\n/* harmony export */   decodeUint64: () => (/* binding */ decodeUint64),\n/* harmony export */   decodeUint8: () => (/* binding */ decodeUint8),\n/* harmony export */   encodeUint: () => (/* binding */ encodeUint),\n/* harmony export */   encodeUintValue: () => (/* binding */ encodeUintValue),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint64: () => (/* binding */ readUint64),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   uintBoundaries: () => (/* binding */ uintBoundaries)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* globals BigInt */\n\n\n\n\nconst uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint8 (data, offset, options) {\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint16 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint32 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nfunction readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nfunction encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/1negint.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/1negint.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNegint16: () => (/* binding */ decodeNegint16),\n/* harmony export */   decodeNegint32: () => (/* binding */ decodeNegint32),\n/* harmony export */   decodeNegint64: () => (/* binding */ decodeNegint64),\n/* harmony export */   decodeNegint8: () => (/* binding */ decodeNegint8),\n/* harmony export */   encodeNegint: () => (/* binding */ encodeNegint)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* eslint-env es2020 */\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint64 (data, pos, _minor, options) {\n  const int = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8xbmVnaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRXdDO0FBQ047QUFDVzs7QUFFN0M7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxjQUFjLGdEQUFjO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLGNBQWMsaURBQWU7QUFDcEQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksY0FBYyxpREFBZTtBQUNwRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsY0FBYyxpREFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNENBQUssQ0FBQywyQ0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQTtBQUNBLEVBQUUsc0RBQW9CO0FBQ3RCOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1qc29uL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMW5lZ2ludC5qcz8zMGY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXMyMDIwICovXG5cbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQ4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCAyKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgLTEgLSB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgNSlcbn1cblxuY29uc3QgbmVnMWIgPSBCaWdJbnQoLTEpXG5jb25zdCBwb3MxYiA9IEJpZ0ludCgxKVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQ2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgaW50ID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgaW50ICE9PSAnYmlnaW50Jykge1xuICAgIGNvbnN0IHZhbHVlID0gLTEgLSBpbnRcbiAgICBpZiAodmFsdWUgPj0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIpIHtcbiAgICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIHZhbHVlLCA5KVxuICAgIH1cbiAgfVxuICBpZiAob3B0aW9ucy5hbGxvd0JpZ0ludCAhPT0gdHJ1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGludGVnZXJzIG91dHNpZGUgb2YgdGhlIHNhZmUgaW50ZWdlciByYW5nZSBhcmUgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgbmVnMWIgLSBCaWdJbnQoaW50KSwgOSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVOZWdpbnQgKGJ1ZiwgdG9rZW4pIHtcbiAgY29uc3QgbmVnaW50ID0gdG9rZW4udmFsdWVcbiAgY29uc3QgdW5zaWduZWQgPSAodHlwZW9mIG5lZ2ludCA9PT0gJ2JpZ2ludCcgPyAobmVnaW50ICogbmVnMWIgLSBwb3MxYikgOiAobmVnaW50ICogLTEgLSAxKSlcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCB0b2tlbi50eXBlLm1ham9yRW5jb2RlZCwgdW5zaWduZWQpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZU5lZ2ludC5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICBjb25zdCBuZWdpbnQgPSB0b2tlbi52YWx1ZVxuICBjb25zdCB1bnNpZ25lZCA9ICh0eXBlb2YgbmVnaW50ID09PSAnYmlnaW50JyA/IChuZWdpbnQgKiBuZWcxYiAtIHBvczFiKSA6IChuZWdpbnQgKiAtMSAtIDEpKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIGhhbmRsZWQgYnkgcXVpY2tFbmNvZGUsIHdlIHNob3VsZG4ndCBnZXQgaGVyZSBidXQgaXQncyBpbmNsdWRlZCBmb3IgY29tcGxldGVuZXNzXG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMF0pIHtcbiAgICByZXR1cm4gMVxuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMV0pIHtcbiAgICByZXR1cm4gMlxuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMl0pIHtcbiAgICByZXR1cm4gM1xuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbM10pIHtcbiAgICByZXR1cm4gNVxuICB9XG4gIHJldHVybiA5XG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rMVxuICogQHBhcmFtIHtUb2tlbn0gdG9rMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlTmVnaW50LmNvbXBhcmVUb2tlbnMgPSBmdW5jdGlvbiBjb21wYXJlVG9rZW5zICh0b2sxLCB0b2syKSB7XG4gIC8vIG9wcG9zaXRlIG9mIHRoZSB1aW50IGNvbXBhcmlzb24gc2luY2Ugd2Ugc3RvcmUgdGhlIHVpbnQgdmVyc2lvbiBpbiBieXRlc1xuICByZXR1cm4gdG9rMS52YWx1ZSA8IHRvazIudmFsdWUgPyAxIDogdG9rMS52YWx1ZSA+IHRvazIudmFsdWUgPyAtMSA6IC8qIGM4IGlnbm9yZSBuZXh0ICovIDBcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/1negint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/2bytes.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/2bytes.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareBytes: () => (/* binding */ compareBytes),\n/* harmony export */   decodeBytes16: () => (/* binding */ decodeBytes16),\n/* harmony export */   decodeBytes32: () => (/* binding */ decodeBytes32),\n/* harmony export */   decodeBytes64: () => (/* binding */ decodeBytes64),\n/* harmony export */   decodeBytes8: () => (/* binding */ decodeBytes8),\n/* harmony export */   decodeBytesCompact: () => (/* binding */ decodeBytesCompact),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, prefix + length)\n  const buf = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.slice)(data, pos + prefix, pos + prefix + length)\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.compare)(b1, b2)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8yYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDdUI7QUFDN0I7QUFDMEI7O0FBRTVEO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxFQUFFLDREQUFnQjtBQUNsQixjQUFjLHFEQUFLO0FBQ25CLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsMkNBQUksVUFBVSwwREFBVTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQSxFQUFFLHNEQUFvQjtBQUN0QjtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3Qjs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQLGtFQUFrRSx1REFBTztBQUN6RSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1qc29uL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMmJ5dGVzLmpzP2Q4MDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0IHsgYXNzZXJ0RW5vdWdoRGF0YSwgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBjb21wYXJlLCBmcm9tU3RyaW5nLCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoZGF0YSwgcG9zLCBwcmVmaXgsIGxlbmd0aCkge1xuICBhc3NlcnRFbm91Z2hEYXRhKGRhdGEsIHBvcywgcHJlZml4ICsgbGVuZ3RoKVxuICBjb25zdCBidWYgPSBzbGljZShkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHByZWZpeCArIGxlbmd0aClcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmJ5dGVzLCBidWYsIHByZWZpeCArIGxlbmd0aClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXNDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXM2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgYnl0ZXMgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogYGVuY29kZWRCeXRlc2AgYWxsb3dzIGZvciBjYWNoaW5nIHdoZW4gd2UgZG8gYSBieXRlIHZlcnNpb24gb2YgYSBzdHJpbmdcbiAqIGZvciBrZXkgc29ydGluZyBwdXJwb3Nlc1xuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5mdW5jdGlvbiB0b2tlbkJ5dGVzICh0b2tlbikge1xuICBpZiAodG9rZW4uZW5jb2RlZEJ5dGVzID09PSB1bmRlZmluZWQpIHtcbiAgICB0b2tlbi5lbmNvZGVkQnl0ZXMgPSB0b2tlbi50eXBlID09PSBUeXBlLnN0cmluZyA/IGZyb21TdHJpbmcodG9rZW4udmFsdWUpIDogdG9rZW4udmFsdWVcbiAgfVxuICAvLyBAdHMtaWdub3JlIGMnbW9uXG4gIHJldHVybiB0b2tlbi5lbmNvZGVkQnl0ZXNcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCeXRlcyAoYnVmLCB0b2tlbikge1xuICBjb25zdCBieXRlcyA9IHRva2VuQnl0ZXModG9rZW4pXG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgdG9rZW4udHlwZS5tYWpvckVuY29kZWQsIGJ5dGVzLmxlbmd0aClcbiAgYnVmLnB1c2goYnl0ZXMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUJ5dGVzLmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIGNvbnN0IGJ5dGVzID0gdG9rZW5CeXRlcyh0b2tlbilcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKGJ5dGVzLmxlbmd0aCkgKyBieXRlcy5sZW5ndGhcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2sxXG4gKiBAcGFyYW0ge1Rva2VufSB0b2syXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVCeXRlcy5jb21wYXJlVG9rZW5zID0gZnVuY3Rpb24gY29tcGFyZVRva2VucyAodG9rMSwgdG9rMikge1xuICByZXR1cm4gY29tcGFyZUJ5dGVzKHRva2VuQnl0ZXModG9rMSksIHRva2VuQnl0ZXModG9rMikpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiMVxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVCeXRlcyAoYjEsIGIyKSB7XG4gIHJldHVybiBiMS5sZW5ndGggPCBiMi5sZW5ndGggPyAtMSA6IGIxLmxlbmd0aCA+IGIyLmxlbmd0aCA/IDEgOiBjb21wYXJlKGIxLCBiMilcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/2bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/3string.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/3string.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString16: () => (/* binding */ decodeString16),\n/* harmony export */   decodeString32: () => (/* binding */ decodeString32),\n/* harmony export */   decodeString64: () => (/* binding */ decodeString64),\n/* harmony export */   decodeString8: () => (/* binding */ decodeString8),\n/* harmony export */   decodeStringCompact: () => (/* binding */ decodeStringCompact),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, totLength)\n  const tok = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.toString)(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.slice)(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nconst encodeString = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8zc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3VCO0FBQzdCO0FBQ087QUFDUTs7QUFFakQ7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNkRBQWdCO0FBQ2xCLGtCQUFrQiw0Q0FBSyxDQUFDLDJDQUFJLFNBQVMsd0RBQVE7QUFDN0M7QUFDQSxvQkFBb0IscURBQUs7QUFDekI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFTyxxQkFBcUIsbURBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzNzdHJpbmcuanM/ZDE1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgeyBhc3NlcnRFbm91Z2hEYXRhLCBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGVuY29kZUJ5dGVzIH0gZnJvbSAnLi8yYnl0ZXMuanMnXG5pbXBvcnQgeyB0b1N0cmluZywgc2xpY2UgfSBmcm9tICcuL2J5dGUtdXRpbHMuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoZGF0YSwgcG9zLCBwcmVmaXgsIGxlbmd0aCwgb3B0aW9ucykge1xuICBjb25zdCB0b3RMZW5ndGggPSBwcmVmaXggKyBsZW5ndGhcbiAgYXNzZXJ0RW5vdWdoRGF0YShkYXRhLCBwb3MsIHRvdExlbmd0aClcbiAgY29uc3QgdG9rID0gbmV3IFRva2VuKFR5cGUuc3RyaW5nLCB0b1N0cmluZyhkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHRvdExlbmd0aCksIHRvdExlbmd0aClcbiAgaWYgKG9wdGlvbnMucmV0YWluU3RyaW5nQnl0ZXMgPT09IHRydWUpIHtcbiAgICB0b2suYnl0ZVZhbHVlID0gc2xpY2UoZGF0YSwgcG9zICsgcHJlZml4LCBwb3MgKyB0b3RMZW5ndGgpXG4gIH1cbiAgcmV0dXJuIHRva1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZ0NvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vciwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmczMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBzdHJpbmcgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwsIG9wdGlvbnMpXG59XG5cbmV4cG9ydCBjb25zdCBlbmNvZGVTdHJpbmcgPSBlbmNvZGVCeXRlc1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/3string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/4array.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/4array.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray16: () => (/* binding */ decodeArray16),\n/* harmony export */   decodeArray32: () => (/* binding */ decodeArray32),\n/* harmony export */   decodeArray64: () => (/* binding */ decodeArray64),\n/* harmony export */   decodeArray8: () => (/* binding */ decodeArray8),\n/* harmony export */   decodeArrayCompact: () => (/* binding */ decodeArrayCompact),\n/* harmony export */   decodeArrayIndefinite: () => (/* binding */ decodeArrayIndefinite),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeArray (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi80YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNOO0FBQ1c7O0FBRTdDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGdEQUFjO0FBQzdDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLGlEQUFlO0FBQzNCO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQLEVBQUUsc0RBQW9CLE1BQU0sMkNBQUk7QUFDaEM7O0FBRUE7QUFDQTtBQUNBLDRCQUE0QixpREFBZTs7QUFFM0M7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1qc29uL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNGFycmF5LmpzPzk4MjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoX2RhdGEsIF9wb3MsIHByZWZpeCwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5hcnJheSwgbGVuZ3RoLCBwcmVmaXgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5Q29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vcilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXk4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXkzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5NjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIGFycmF5IGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheUluZGVmaW5pdGUgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93SW5kZWZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbmRlZmluaXRlIGxlbmd0aCBpdGVtcyBub3QgYWxsb3dlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBJbmZpbml0eSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVBcnJheSAoYnVmLCB0b2tlbikge1xuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIFR5cGUuYXJyYXkubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuLy8gdXNpbmcgYW4gYXJyYXkgYXMgYSBtYXAga2V5LCBhcmUgeW91IHN1cmUgYWJvdXQgdGhpcz8gd2UgY2FuIG9ubHkgc29ydFxuLy8gYnkgbWFwIGxlbmd0aCBoZXJlLCBpdCdzIHVwIHRvIHRoZSBlbmNvZGVyIHRvIGRlY2lkZSB0byBsb29rIGRlZXBlclxuZW5jb2RlQXJyYXkuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUFycmF5LmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIHJldHVybiB1aW50LmVuY29kZVVpbnRWYWx1ZS5lbmNvZGVkU2l6ZSh0b2tlbi52YWx1ZSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/4array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/5map.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/5map.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMap16: () => (/* binding */ decodeMap16),\n/* harmony export */   decodeMap32: () => (/* binding */ decodeMap32),\n/* harmony export */   decodeMap64: () => (/* binding */ decodeMap64),\n/* harmony export */   decodeMap8: () => (/* binding */ decodeMap8),\n/* harmony export */   decodeMapCompact: () => (/* binding */ decodeMapCompact),\n/* harmony export */   decodeMapIndefinite: () => (/* binding */ decodeMapIndefinite),\n/* harmony export */   encodeMap: () => (/* binding */ encodeMap)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeMap (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi81bWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTjtBQUNXOztBQUU3QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUCxFQUFFLHNEQUFvQixNQUFNLDJDQUFJO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzVtYXAuanM/ZTU5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChfZGF0YSwgX3BvcywgcHJlZml4LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm1hcCwgbGVuZ3RoLCBwcmVmaXgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcENvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXA2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgbWFwIGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXBJbmRlZmluaXRlIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5hbGxvd0luZGVmaW5pdGUgPT09IGZhbHNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW5kZWZpbml0ZSBsZW5ndGggaXRlbXMgbm90IGFsbG93ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgSW5maW5pdHkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlTWFwIChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS5tYXAubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuLy8gdXNpbmcgYSBtYXAgYXMgYSBtYXAga2V5LCBhcmUgeW91IHN1cmUgYWJvdXQgdGhpcz8gd2UgY2FuIG9ubHkgc29ydFxuLy8gYnkgbWFwIGxlbmd0aCBoZXJlLCBpdCdzIHVwIHRvIHRoZSBlbmNvZGVyIHRvIGRlY2lkZSB0byBsb29rIGRlZXBlclxuZW5jb2RlTWFwLmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVNYXAuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/5map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/6tag.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/6tag.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTag16: () => (/* binding */ decodeTag16),\n/* harmony export */   decodeTag32: () => (/* binding */ decodeTag32),\n/* harmony export */   decodeTag64: () => (/* binding */ decodeTag64),\n/* harmony export */   decodeTag8: () => (/* binding */ decodeTag8),\n/* harmony export */   decodeTagCompact: () => (/* binding */ decodeTagCompact),\n/* harmony export */   encodeTag: () => (/* binding */ encodeTag)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeTagCompact (_data, _pos, minor, _options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeTag (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi82dGFnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ047O0FBRWxDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxnREFBYztBQUMzQzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxNQUFNLGlEQUFlO0FBQzVDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0saURBQWU7QUFDNUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxpREFBZTtBQUM1Qzs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1AsRUFBRSxzREFBb0IsTUFBTSwyQ0FBSTtBQUNoQzs7QUFFQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzZ0YWcuanM/ODgzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnQ29tcGFjdCAoX2RhdGEsIF9wb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCBtaW5vciwgMSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnRhZywgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDIpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDUpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVGFnIChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS50YWcubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuZW5jb2RlVGFnLmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVUYWcuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/6tag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/7float.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/7float.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBreak: () => (/* binding */ decodeBreak),\n/* harmony export */   decodeFloat16: () => (/* binding */ decodeFloat16),\n/* harmony export */   decodeFloat32: () => (/* binding */ decodeFloat32),\n/* harmony export */   decodeFloat64: () => (/* binding */ decodeFloat64),\n/* harmony export */   decodeUndefined: () => (/* binding */ decodeUndefined),\n/* harmony export */   encodeFloat: () => (/* binding */ encodeFloat)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nfunction encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi83ZmxvYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFd0M7QUFDSztBQUNOOztBQUV2QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QyxJQUFJO0FBQ0osZUFBZSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3pCO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1REFBZSxFQUFFO0FBQzFDO0FBQ0E7QUFDQSx5QkFBeUIsdURBQWUsRUFBRTtBQUMxQztBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsZUFBZTtBQUMxQjtBQUNPO0FBQ1A7O0FBRUE7QUFDQSxjQUFjLDJDQUFJO0FBQ2xCLElBQUk7QUFDSixjQUFjLDJDQUFJO0FBQ2xCLElBQUk7QUFDSixjQUFjLDJDQUFJO0FBQ2xCLElBQUk7QUFDSixjQUFjLDJDQUFJO0FBQ2xCLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU0sT0FBTztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0EsNEJBQTRCLGlEQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1qc29uL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvN2Zsb2F0LmpzPzhlOGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVE9ETzogc2hpZnQgc29tZSBvZiB0aGUgYnl0ZXMgbG9naWMgdG8gYnl0ZXMtdXRpbHMgc28gd2UgY2FuIHVzZSBCdWZmZXJcbi8vIHdoZXJlIHBvc3NpYmxlXG5cbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuaW1wb3J0IHsgZW5jb2RlVWludCB9IGZyb20gJy4vMHVpbnQuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRW5jb2RlT3B0aW9uc30gRW5jb2RlT3B0aW9uc1xuICovXG5cbmNvbnN0IE1JTk9SX0ZBTFNFID0gMjBcbmNvbnN0IE1JTk9SX1RSVUUgPSAyMVxuY29uc3QgTUlOT1JfTlVMTCA9IDIyXG5jb25zdCBNSU5PUl9VTkRFRklORUQgPSAyM1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gX2RhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBfcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVVuZGVmaW5lZCAoX2RhdGEsIF9wb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5hbGxvd1VuZGVmaW5lZCA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSB1bmRlZmluZWQgdmFsdWVzIGFyZSBub3Qgc3VwcG9ydGVkYClcbiAgfSBlbHNlIGlmIChvcHRpb25zLmNvZXJjZVVuZGVmaW5lZFRvTnVsbCA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS5udWxsLCBudWxsLCAxKVxuICB9XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS51bmRlZmluZWQsIHVuZGVmaW5lZCwgMSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCcmVhayAoX2RhdGEsIF9wb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5hbGxvd0luZGVmaW5pdGUgPT09IGZhbHNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW5kZWZpbml0ZSBsZW5ndGggaXRlbXMgbm90IGFsbG93ZWRgKVxuICB9XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5icmVhaywgdW5kZWZpbmVkLCAxKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxuICogQHBhcmFtIHtudW1iZXJ9IGJ5dGVzXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gY3JlYXRlVG9rZW4gKHZhbHVlLCBieXRlcywgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zLmFsbG93TmFOID09PSBmYWxzZSAmJiBOdW1iZXIuaXNOYU4odmFsdWUpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBOYU4gdmFsdWVzIGFyZSBub3Qgc3VwcG9ydGVkYClcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuYWxsb3dJbmZpbml0eSA9PT0gZmFsc2UgJiYgKHZhbHVlID09PSBJbmZpbml0eSB8fCB2YWx1ZSA9PT0gLUluZmluaXR5KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gSW5maW5pdHkgdmFsdWVzIGFyZSBub3Qgc3VwcG9ydGVkYClcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmZsb2F0LCB2YWx1ZSwgYnl0ZXMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUZsb2F0MTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBjcmVhdGVUb2tlbihyZWFkRmxvYXQxNihkYXRhLCBwb3MgKyAxKSwgMywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlRmxvYXQzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIGNyZWF0ZVRva2VuKHJlYWRGbG9hdDMyKGRhdGEsIHBvcyArIDEpLCA1LCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVGbG9hdDY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gY3JlYXRlVG9rZW4ocmVhZEZsb2F0NjQoZGF0YSwgcG9zICsgMSksIDksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBvcHRpb25zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVGbG9hdCAoYnVmLCB0b2tlbiwgb3B0aW9ucykge1xuICBjb25zdCBmbG9hdCA9IHRva2VuLnZhbHVlXG5cbiAgaWYgKGZsb2F0ID09PSBmYWxzZSkge1xuICAgIGJ1Zi5wdXNoKFtUeXBlLmZsb2F0Lm1ham9yRW5jb2RlZCB8IE1JTk9SX0ZBTFNFXSlcbiAgfSBlbHNlIGlmIChmbG9hdCA9PT0gdHJ1ZSkge1xuICAgIGJ1Zi5wdXNoKFtUeXBlLmZsb2F0Lm1ham9yRW5jb2RlZCB8IE1JTk9SX1RSVUVdKVxuICB9IGVsc2UgaWYgKGZsb2F0ID09PSBudWxsKSB7XG4gICAgYnVmLnB1c2goW1R5cGUuZmxvYXQubWFqb3JFbmNvZGVkIHwgTUlOT1JfTlVMTF0pXG4gIH0gZWxzZSBpZiAoZmxvYXQgPT09IHVuZGVmaW5lZCkge1xuICAgIGJ1Zi5wdXNoKFtUeXBlLmZsb2F0Lm1ham9yRW5jb2RlZCB8IE1JTk9SX1VOREVGSU5FRF0pXG4gIH0gZWxzZSB7XG4gICAgbGV0IGRlY29kZWRcbiAgICBsZXQgc3VjY2VzcyA9IGZhbHNlXG4gICAgaWYgKCFvcHRpb25zIHx8IG9wdGlvbnMuZmxvYXQ2NCAhPT0gdHJ1ZSkge1xuICAgICAgZW5jb2RlRmxvYXQxNihmbG9hdClcbiAgICAgIGRlY29kZWQgPSByZWFkRmxvYXQxNih1aThhLCAxKVxuICAgICAgaWYgKGZsb2F0ID09PSBkZWNvZGVkIHx8IE51bWJlci5pc05hTihmbG9hdCkpIHtcbiAgICAgICAgdWk4YVswXSA9IDB4ZjlcbiAgICAgICAgYnVmLnB1c2godWk4YS5zbGljZSgwLCAzKSlcbiAgICAgICAgc3VjY2VzcyA9IHRydWVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVuY29kZUZsb2F0MzIoZmxvYXQpXG4gICAgICAgIGRlY29kZWQgPSByZWFkRmxvYXQzMih1aThhLCAxKVxuICAgICAgICBpZiAoZmxvYXQgPT09IGRlY29kZWQpIHtcbiAgICAgICAgICB1aThhWzBdID0gMHhmYVxuICAgICAgICAgIGJ1Zi5wdXNoKHVpOGEuc2xpY2UoMCwgNSkpXG4gICAgICAgICAgc3VjY2VzcyA9IHRydWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXN1Y2Nlc3MpIHtcbiAgICAgIGVuY29kZUZsb2F0NjQoZmxvYXQpXG4gICAgICBkZWNvZGVkID0gcmVhZEZsb2F0NjQodWk4YSwgMSlcbiAgICAgIHVpOGFbMF0gPSAweGZiXG4gICAgICBidWYucHVzaCh1aThhLnNsaWNlKDAsIDkpKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUZsb2F0LmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuLCBvcHRpb25zKSB7XG4gIGNvbnN0IGZsb2F0ID0gdG9rZW4udmFsdWVcblxuICBpZiAoZmxvYXQgPT09IGZhbHNlIHx8IGZsb2F0ID09PSB0cnVlIHx8IGZsb2F0ID09PSBudWxsIHx8IGZsb2F0ID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gMVxuICB9XG5cbiAgaWYgKCFvcHRpb25zIHx8IG9wdGlvbnMuZmxvYXQ2NCAhPT0gdHJ1ZSkge1xuICAgIGVuY29kZUZsb2F0MTYoZmxvYXQpXG4gICAgbGV0IGRlY29kZWQgPSByZWFkRmxvYXQxNih1aThhLCAxKVxuICAgIGlmIChmbG9hdCA9PT0gZGVjb2RlZCB8fCBOdW1iZXIuaXNOYU4oZmxvYXQpKSB7XG4gICAgICByZXR1cm4gM1xuICAgIH1cbiAgICBlbmNvZGVGbG9hdDMyKGZsb2F0KVxuICAgIGRlY29kZWQgPSByZWFkRmxvYXQzMih1aThhLCAxKVxuICAgIGlmIChmbG9hdCA9PT0gZGVjb2RlZCkge1xuICAgICAgcmV0dXJuIDVcbiAgICB9XG4gIH1cbiAgcmV0dXJuIDlcbn1cblxuY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKDkpXG5jb25zdCBkYXRhVmlldyA9IG5ldyBEYXRhVmlldyhidWZmZXIsIDEpXG5jb25zdCB1aThhID0gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyLCAwKVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbnBcbiAqL1xuZnVuY3Rpb24gZW5jb2RlRmxvYXQxNiAoaW5wKSB7XG4gIGlmIChpbnAgPT09IEluZmluaXR5KSB7XG4gICAgZGF0YVZpZXcuc2V0VWludDE2KDAsIDB4N2MwMCwgZmFsc2UpXG4gIH0gZWxzZSBpZiAoaW5wID09PSAtSW5maW5pdHkpIHtcbiAgICBkYXRhVmlldy5zZXRVaW50MTYoMCwgMHhmYzAwLCBmYWxzZSlcbiAgfSBlbHNlIGlmIChOdW1iZXIuaXNOYU4oaW5wKSkge1xuICAgIGRhdGFWaWV3LnNldFVpbnQxNigwLCAweDdlMDAsIGZhbHNlKVxuICB9IGVsc2Uge1xuICAgIGRhdGFWaWV3LnNldEZsb2F0MzIoMCwgaW5wKVxuICAgIGNvbnN0IHZhbHUzMiA9IGRhdGFWaWV3LmdldFVpbnQzMigwKVxuICAgIGNvbnN0IGV4cG9uZW50ID0gKHZhbHUzMiAmIDB4N2Y4MDAwMDApID4+IDIzXG4gICAgY29uc3QgbWFudGlzc2EgPSB2YWx1MzIgJiAweDdmZmZmZlxuXG4gICAgLyogYzggaWdub3JlIG5leHQgNiAqL1xuICAgIGlmIChleHBvbmVudCA9PT0gMHhmZikge1xuICAgICAgLy8gdG9vIGJpZywgSW5maW5pdHksIGJ1dCB0aGlzIHNob3VsZCBiZSBoYXJkIChpbXBvc3NpYmxlPykgdG8gdHJpZ2dlclxuICAgICAgZGF0YVZpZXcuc2V0VWludDE2KDAsIDB4N2MwMCwgZmFsc2UpXG4gICAgfSBlbHNlIGlmIChleHBvbmVudCA9PT0gMHgwMCkge1xuICAgICAgLy8gMC4wLCAtMC4wIGFuZCBzdWJub3JtYWxzLCBzaG91bGRuJ3QgYmUgcG9zc2libGUgdG8gZ2V0IGhlcmUgYmVjYXVzZSAwLjAgc2hvdWxkIGJlIGNvdW50ZWQgYXMgYW4gaW50XG4gICAgICBkYXRhVmlldy5zZXRVaW50MTYoMCwgKChpbnAgJiAweDgwMDAwMDAwKSA+PiAxNikgfCAobWFudGlzc2EgPj4gMTMpLCBmYWxzZSlcbiAgICB9IGVsc2UgeyAvLyBzdGFuZGFyZCBudW1iZXJzXG4gICAgICAvLyBjaHVua3Mgb2YgbG9naWMgaGVyZSBib3Jyb3dlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9QSksvbGliY2Jvci9ibG9iL2M3OGY0MzcxODI1MzNlM2VmYThkOTYzZmY0Yjk0NWJiNjM1YzIyODQvc3JjL2Nib3IvZW5jb2RpbmcuYyNMMTI3XG4gICAgICBjb25zdCBsb2dpY2FsRXhwb25lbnQgPSBleHBvbmVudCAtIDEyN1xuICAgICAgLy8gTm93IHdlIGtub3cgdGhhdCAyXmV4cG9uZW50IDw9IDAgbG9naWNhbGx5XG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCA2ICovXG4gICAgICBpZiAobG9naWNhbEV4cG9uZW50IDwgLTI0KSB7XG4gICAgICAgIC8qIE5vIHVuYW1iaWd1b3VzIHJlcHJlc2VudGF0aW9uIGV4aXN0cywgdGhpcyBmbG9hdCBpcyBub3QgYSBoYWxmIGZsb2F0XG4gICAgICAgICAgYW5kIGlzIHRvbyBzbWFsbCB0byBiZSByZXByZXNlbnRlZCB1c2luZyBhIGhhbGYsIHJvdW5kIG9mZiB0byB6ZXJvLlxuICAgICAgICAgIENvbnNpc3RlbnQgd2l0aCB0aGUgcmVmZXJlbmNlIGltcGxlbWVudGF0aW9uLiAqL1xuICAgICAgICAvLyBzaG91bGQgYmUgZGlmZmljdWx0IChpbXBvc3NpYmxlPykgdG8gZ2V0IGhlcmUgaW4gSlNcbiAgICAgICAgZGF0YVZpZXcuc2V0VWludDE2KDAsIDApXG4gICAgICB9IGVsc2UgaWYgKGxvZ2ljYWxFeHBvbmVudCA8IC0xNCkge1xuICAgICAgICAvKiBPZmZzZXQgdGhlIHJlbWFpbmluZyBkZWNpbWFsIHBsYWNlcyBieSBzaGlmdGluZyB0aGUgc2lnbmlmaWNhbmQsIHRoZVxuICAgICAgICAgIHZhbHVlIGlzIGxvc3QuIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gZGVjaXNpb24gdGhhdCB3b3JrcyBhcm91bmQgdGhlXG4gICAgICAgICAgYWJzZW5jZSBvZiBzdGFuZGFyZCBoYWxmLWZsb2F0IGluIHRoZSBsYW5ndWFnZS4gKi9cbiAgICAgICAgZGF0YVZpZXcuc2V0VWludDE2KDAsICgodmFsdTMyICYgMHg4MDAwMDAwMCkgPj4gMTYpIHwgLyogc2lnbiBiaXQgKi8gKDEgPDwgKDI0ICsgbG9naWNhbEV4cG9uZW50KSksIGZhbHNlKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGF0YVZpZXcuc2V0VWludDE2KDAsICgodmFsdTMyICYgMHg4MDAwMDAwMCkgPj4gMTYpIHwgKChsb2dpY2FsRXhwb25lbnQgKyAxNSkgPDwgMTApIHwgKG1hbnRpc3NhID4+IDEzKSwgZmFsc2UpXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSB1aThhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5mdW5jdGlvbiByZWFkRmxvYXQxNiAodWk4YSwgcG9zKSB7XG4gIGlmICh1aThhLmxlbmd0aCAtIHBvcyA8IDIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBub3QgZW5vdWdoIGRhdGEgZm9yIGZsb2F0MTZgKVxuICB9XG5cbiAgY29uc3QgaGFsZiA9ICh1aThhW3Bvc10gPDwgOCkgKyB1aThhW3BvcyArIDFdXG4gIGlmIChoYWxmID09PSAweDdjMDApIHtcbiAgICByZXR1cm4gSW5maW5pdHlcbiAgfVxuICBpZiAoaGFsZiA9PT0gMHhmYzAwKSB7XG4gICAgcmV0dXJuIC1JbmZpbml0eVxuICB9XG4gIGlmIChoYWxmID09PSAweDdlMDApIHtcbiAgICByZXR1cm4gTmFOXG4gIH1cbiAgY29uc3QgZXhwID0gKGhhbGYgPj4gMTApICYgMHgxZlxuICBjb25zdCBtYW50ID0gaGFsZiAmIDB4M2ZmXG4gIGxldCB2YWxcbiAgaWYgKGV4cCA9PT0gMCkge1xuICAgIHZhbCA9IG1hbnQgKiAoMiAqKiAtMjQpXG4gIH0gZWxzZSBpZiAoZXhwICE9PSAzMSkge1xuICAgIHZhbCA9IChtYW50ICsgMTAyNCkgKiAoMiAqKiAoZXhwIC0gMjUpKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIH0gZWxzZSB7XG4gICAgLy8gbWF5IG5vdCBiZSBwb3NzaWJsZSB0byBnZXQgaGVyZVxuICAgIHZhbCA9IG1hbnQgPT09IDAgPyBJbmZpbml0eSA6IE5hTlxuICB9XG4gIHJldHVybiAoaGFsZiAmIDB4ODAwMCkgPyAtdmFsIDogdmFsXG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IGlucFxuICovXG5mdW5jdGlvbiBlbmNvZGVGbG9hdDMyIChpbnApIHtcbiAgZGF0YVZpZXcuc2V0RmxvYXQzMigwLCBpbnAsIGZhbHNlKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gdWk4YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZnVuY3Rpb24gcmVhZEZsb2F0MzIgKHVpOGEsIHBvcykge1xuICBpZiAodWk4YS5sZW5ndGggLSBwb3MgPCA0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gbm90IGVub3VnaCBkYXRhIGZvciBmbG9hdDMyYClcbiAgfVxuICBjb25zdCBvZmZzZXQgPSAodWk4YS5ieXRlT2Zmc2V0IHx8IDApICsgcG9zXG4gIHJldHVybiBuZXcgRGF0YVZpZXcodWk4YS5idWZmZXIsIG9mZnNldCwgNCkuZ2V0RmxvYXQzMigwLCBmYWxzZSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gaW5wXG4gKi9cbmZ1bmN0aW9uIGVuY29kZUZsb2F0NjQgKGlucCkge1xuICBkYXRhVmlldy5zZXRGbG9hdDY0KDAsIGlucCwgZmFsc2UpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSB1aThhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5mdW5jdGlvbiByZWFkRmxvYXQ2NCAodWk4YSwgcG9zKSB7XG4gIGlmICh1aThhLmxlbmd0aCAtIHBvcyA8IDgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBub3QgZW5vdWdoIGRhdGEgZm9yIGZsb2F0NjRgKVxuICB9XG4gIGNvbnN0IG9mZnNldCA9ICh1aThhLmJ5dGVPZmZzZXQgfHwgMCkgKyBwb3NcbiAgcmV0dXJuIG5ldyBEYXRhVmlldyh1aThhLmJ1ZmZlciwgb2Zmc2V0LCA4KS5nZXRGbG9hdDY0KDAsIGZhbHNlKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IF90b2sxXG4gKiBAcGFyYW0ge1Rva2VufSBfdG9rMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlRmxvYXQuY29tcGFyZVRva2VucyA9IGVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuLypcbmVuY29kZUZsb2F0LmNvbXBhcmVUb2tlbnMgPSBmdW5jdGlvbiBjb21wYXJlVG9rZW5zIChfdG9rMSwgX3RvazIpIHtcbiAgcmV0dXJuIF90b2sxXG4gIHRocm93IG5ldyBFcnJvcihgJHtlbmNvZGVFcnJQcmVmaXh9IGNhbm5vdCB1c2UgZmxvYXRzIGFzIG1hcCBrZXlzYClcbn1cbiovXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/7float.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/bl.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/bl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ Bl)\n/* harmony export */ });\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js\");\n/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\n\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nclass Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.slice)(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ3NEOztBQUV0RDtBQUNBO0FBQ0E7O0FBRUE7O0FBRU87QUFDUDtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QztBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxREFBSztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLGVBQWUscURBQUs7QUFDcEI7QUFDQSxNQUFNO0FBQ047QUFDQSxhQUFhLHNEQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcz82ZTg0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmwgaXMgYSBsaXN0IG9mIGJ5dGUgY2h1bmtzLCBzaW1pbGFyIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9ydmFnZy9ibCBidXQgZm9yXG4gKiB3cml0aW5nIHJhdGhlciB0aGFuIHJlYWRpbmcuXG4gKiBBIEJsIG9iamVjdCBhY2NlcHRzIHNldCgpIG9wZXJhdGlvbnMgZm9yIGluZGl2aWR1YWwgYnl0ZXMgYW5kIGNvcHlUbygpIGZvclxuICogaW5zZXJ0aW5nIGJ5dGUgYXJyYXlzLiBUaGVzZSB3cml0ZSBvcGVyYXRpb25zIGRvbid0IGF1dG9tYXRpY2FsbHkgaW5jcmVtZW50XG4gKiB0aGUgaW50ZXJuYWwgY3Vyc29yIHNvIGl0cyBcImxlbmd0aFwiIHdvbid0IGJlIGNoYW5nZWQuIEluc3RlYWQsIGluY3JlbWVudCgpXG4gKiBtdXN0IGJlIGNhbGxlZCB0byBleHRlbmQgaXRzIGxlbmd0aCB0byBjb3ZlciB0aGUgaW5zZXJ0ZWQgZGF0YS5cbiAqIFRoZSB0b0J5dGVzKCkgY2FsbCB3aWxsIGNvbnZlcnQgYWxsIGludGVybmFsIG1lbW9yeSB0byBhIHNpbmdsZSBVaW50OEFycmF5IG9mXG4gKiB0aGUgY29ycmVjdCBsZW5ndGgsIHRydW5jYXRpbmcgYW55IGRhdGEgdGhhdCBpcyBzdG9yZWQgYnV0IGhhc24ndCBiZWVuXG4gKiBpbmNsdWRlZCBieSBhbiBpbmNyZW1lbnQoKS5cbiAqIGdldCgpIGNhbiByZXRyaWV2ZSBhIHNpbmdsZSBieXRlLlxuICogQWxsIG9wZXJhdGlvbnMgKGV4Y2VwdCB0b0J5dGVzKCkpIHRha2UgYW4gXCJvZmZzZXRcIiBhcmd1bWVudCB0aGF0IHdpbGwgcGVyZm9ybVxuICogdGhlIHdyaXRlIGF0IHRoZSBvZmZzZXQgX2Zyb20gdGhlIGN1cnJlbnQgY3Vyc29yXy4gRm9yIG1vc3Qgb3BlcmF0aW9ucyB0aGlzXG4gKiB3aWxsIGJlIGAwYCB0byB3cml0ZSBhdCB0aGUgY3VycmVudCBjdXJzb3IgcG9zaXRpb24gYnV0IGl0IGNhbiBiZSBhaGVhZCBvZlxuICogdGhlIGN1cnJlbnQgY3Vyc29yLiBOZWdhdGl2ZSBvZmZzZXRzIHByb2JhYmx5IHdvcmsgYnV0IGFyZSB1bnRlc3RlZC5cbiAqL1xuXG4vLyBUT0RPOiBpcGpzIGRvZXNuJ3Qgc3VwcG9ydCB0aGlzLCBvbmx5IGZvciB0ZXN0IGZpbGVzOiBodHRwczovL2dpdGh1Yi5jb20vbWlrZWFsL2lwanMvYmxvYi9tYXN0ZXIvc3JjL3BhY2thZ2UvdGVzdEZpbGUuanMjTDM5XG5pbXBvcnQgeyBhbGxvYywgY29uY2F0LCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLy8gdGhlIHRzLWlnbm9yZXMgaW4gdGhpcyBmaWxlIGFyZSBhbG1vc3QgYWxsIGZvciB0aGUgYFVpbnQ4QXJyYXl8bnVtYmVyW11gIGR1YWxpdHkgdGhhdCBleGlzdHNcbi8vIGZvciBwZXJmIHJlYXNvbnMuIENvbnNpZGVyIGJldHRlciBhcHByb2FjaGVzIHRvIHRoaXMgb3IgcmVtb3ZpbmcgaXQgZW50aXJlbHksIGl0IGlzIHF1aXRlXG4vLyByaXNreSBiZWNhdXNlIG9mIHNvbWUgYXNzdW1wdGlvbnMgYWJvdXQgc21hbGwgY2h1bmtzID09PSBudW1iZXJbXSBhbmQgZXZlcnl0aGluZyBlbHNlID09PSBVaW50OEFycmF5LlxuXG5jb25zdCBkZWZhdWx0Q2h1bmtTaXplID0gMjU2XG5cbmV4cG9ydCBjbGFzcyBCbCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2NodW5rU2l6ZV1cbiAgICovXG4gIGNvbnN0cnVjdG9yIChjaHVua1NpemUgPSBkZWZhdWx0Q2h1bmtTaXplKSB7XG4gICAgdGhpcy5jaHVua1NpemUgPSBjaHVua1NpemVcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLmN1cnNvciA9IDBcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLm1heEN1cnNvciA9IC0xXG4gICAgLyoqIEB0eXBlIHsoVWludDhBcnJheXxudW1iZXJbXSlbXX0gKi9cbiAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgLy8ga2VlcCB0aGUgZmlyc3QgY2h1bmsgYXJvdW5kIGlmIHdlIGNhbiB0byBzYXZlIGFsbG9jYXRpb25zIGZvciBmdXR1cmUgZW5jb2Rlc1xuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXxudW1iZXJbXXxudWxsfSAqL1xuICAgIHRoaXMuX2luaXRSZXVzZUNodW5rID0gbnVsbFxuICB9XG5cbiAgcmVzZXQgKCkge1xuICAgIHRoaXMuY3Vyc29yID0gMFxuICAgIHRoaXMubWF4Q3Vyc29yID0gLTFcbiAgICBpZiAodGhpcy5jaHVua3MubGVuZ3RoKSB7XG4gICAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgfVxuICAgIGlmICh0aGlzLl9pbml0UmV1c2VDaHVuayAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5jaHVua3MucHVzaCh0aGlzLl9pbml0UmV1c2VDaHVuaylcbiAgICAgIHRoaXMubWF4Q3Vyc29yID0gdGhpcy5faW5pdFJldXNlQ2h1bmsubGVuZ3RoIC0gMVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl8bnVtYmVyW119IGJ5dGVzXG4gICAqL1xuICBwdXNoIChieXRlcykge1xuICAgIGxldCB0b3BDaHVuayA9IHRoaXMuY2h1bmtzW3RoaXMuY2h1bmtzLmxlbmd0aCAtIDFdXG4gICAgY29uc3QgbmV3TWF4ID0gdGhpcy5jdXJzb3IgKyBieXRlcy5sZW5ndGhcbiAgICBpZiAobmV3TWF4IDw9IHRoaXMubWF4Q3Vyc29yICsgMSkge1xuICAgICAgLy8gd2UgaGF2ZSBhdCBsZWFzdCBvbmUgY2h1bmsgYW5kIHdlIGNhbiBmaXQgdGhlc2UgYnl0ZXMgaW50byB0aGF0IGNodW5rXG4gICAgICBjb25zdCBjaHVua1BvcyA9IHRvcENodW5rLmxlbmd0aCAtICh0aGlzLm1heEN1cnNvciAtIHRoaXMuY3Vyc29yKSAtIDFcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHRvcENodW5rLnNldChieXRlcywgY2h1bmtQb3MpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGNhbid0IGZpdCBpdCBpblxuICAgICAgaWYgKHRvcENodW5rKSB7XG4gICAgICAgIC8vIHRyaXAgdGhlIGxhc3QgY2h1bmsgdG8gYGN1cnNvcmAgaWYgd2UgbmVlZCB0b1xuICAgICAgICBjb25zdCBjaHVua1BvcyA9IHRvcENodW5rLmxlbmd0aCAtICh0aGlzLm1heEN1cnNvciAtIHRoaXMuY3Vyc29yKSAtIDFcbiAgICAgICAgaWYgKGNodW5rUG9zIDwgdG9wQ2h1bmsubGVuZ3RoKSB7XG4gICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgIHRoaXMuY2h1bmtzW3RoaXMuY2h1bmtzLmxlbmd0aCAtIDFdID0gdG9wQ2h1bmsuc3ViYXJyYXkoMCwgY2h1bmtQb3MpXG4gICAgICAgICAgdGhpcy5tYXhDdXJzb3IgPSB0aGlzLmN1cnNvciAtIDFcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGJ5dGVzLmxlbmd0aCA8IDY0ICYmIGJ5dGVzLmxlbmd0aCA8IHRoaXMuY2h1bmtTaXplKSB7XG4gICAgICAgIC8vIG1ha2UgYSBuZXcgY2h1bmsgYW5kIGNvcHkgdGhlIG5ldyBvbmUgaW50byBpdFxuICAgICAgICB0b3BDaHVuayA9IGFsbG9jKHRoaXMuY2h1bmtTaXplKVxuICAgICAgICB0aGlzLmNodW5rcy5wdXNoKHRvcENodW5rKVxuICAgICAgICB0aGlzLm1heEN1cnNvciArPSB0b3BDaHVuay5sZW5ndGhcbiAgICAgICAgaWYgKHRoaXMuX2luaXRSZXVzZUNodW5rID09PSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSB0b3BDaHVua1xuICAgICAgICB9XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgdG9wQ2h1bmsuc2V0KGJ5dGVzLCAwKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gcHVzaCB0aGUgbmV3IGJ5dGVzIGluIGFzIGl0cyBvd24gY2h1bmtcbiAgICAgICAgdGhpcy5jaHVua3MucHVzaChieXRlcylcbiAgICAgICAgdGhpcy5tYXhDdXJzb3IgKz0gYnl0ZXMubGVuZ3RoXG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuY3Vyc29yICs9IGJ5dGVzLmxlbmd0aFxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3Jlc2V0XVxuICAgKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAgICovXG4gIHRvQnl0ZXMgKHJlc2V0ID0gZmFsc2UpIHtcbiAgICBsZXQgYnl0c1xuICAgIGlmICh0aGlzLmNodW5rcy5sZW5ndGggPT09IDEpIHtcbiAgICAgIGNvbnN0IGNodW5rID0gdGhpcy5jaHVua3NbMF1cbiAgICAgIGlmIChyZXNldCAmJiB0aGlzLmN1cnNvciA+IGNodW5rLmxlbmd0aCAvIDIpIHtcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGJ5dHMgPSB0aGlzLmN1cnNvciA9PT0gY2h1bmsubGVuZ3RoID8gY2h1bmsgOiBjaHVuay5zdWJhcnJheSgwLCB0aGlzLmN1cnNvcilcbiAgICAgICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSBudWxsXG4gICAgICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYnl0cyA9IHNsaWNlKGNodW5rLCAwLCB0aGlzLmN1cnNvcilcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgYnl0cyA9IGNvbmNhdCh0aGlzLmNodW5rcywgdGhpcy5jdXJzb3IpXG4gICAgfVxuICAgIGlmIChyZXNldCkge1xuICAgICAgdGhpcy5yZXNldCgpXG4gICAgfVxuICAgIHJldHVybiBieXRzXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/bl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   asU8A: () => (/* binding */ asU8A),\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   decodeCodePointsArray: () => (/* binding */ decodeCodePointsArray),\n/* harmony export */   fromArray: () => (/* binding */ fromArray),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   useBuffer: () => (/* binding */ useBuffer)\n/* harmony export */ });\n// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nconst useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nfunction asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nconst toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nconst fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nconst fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nconst slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nconst concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nconst alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nconst toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nconst fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnoughData: () => (/* binding */ assertEnoughData),\n/* harmony export */   decodeErrPrefix: () => (/* binding */ decodeErrPrefix),\n/* harmony export */   encodeErrPrefix: () => (/* binding */ encodeErrPrefix),\n/* harmony export */   uintMinorPrefixBytes: () => (/* binding */ uintMinorPrefixBytes)\n/* harmony export */ });\nconst decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBOztBQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanM/YTQxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWNvZGVFcnJQcmVmaXggPSAnQ0JPUiBkZWNvZGUgZXJyb3I6J1xuY29uc3QgZW5jb2RlRXJyUHJlZml4ID0gJ0NCT1IgZW5jb2RlIGVycm9yOidcblxuY29uc3QgdWludE1pbm9yUHJlZml4Qnl0ZXMgPSBbXVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjNdID0gMVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjRdID0gMlxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjVdID0gM1xudWludE1pbm9yUHJlZml4Qnl0ZXNbMjZdID0gNVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjddID0gOVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG5lZWRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0RW5vdWdoRGF0YSAoZGF0YSwgcG9zLCBuZWVkKSB7XG4gIGlmIChkYXRhLmxlbmd0aCAtIHBvcyA8IG5lZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBub3QgZW5vdWdoIGRhdGEgZm9yIHR5cGVgKVxuICB9XG59XG5cbmV4cG9ydCB7XG4gIGRlY29kZUVyclByZWZpeCxcbiAgZW5jb2RlRXJyUHJlZml4LFxuICB1aW50TWlub3JQcmVmaXhCeXRlcyxcbiAgYXNzZXJ0RW5vdWdoRGF0YVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/decode.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/decode.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokeniser: () => (/* binding */ Tokeniser),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   tokensToObject: () => (/* binding */ tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/jump.js\");\n\n\n\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = _jump_js__WEBPACK_IMPORTED_MODULE_2__.quick[byt]\n    if (token === undefined) {\n      const decoder = _jump_js__WEBPACK_IMPORTED_MODULE_2__.jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/encode.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/encode.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ref: () => (/* binding */ Ref),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeCustom: () => (/* binding */ encodeCustom),\n/* harmony export */   makeCborEncoders: () => (/* binding */ makeCborEncoders),\n/* harmony export */   objectToTokens: () => (/* binding */ objectToTokens)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/is.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _bl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bl.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/bl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/jump.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/7float.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_4__.quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nfunction makeCborEncoders () {\n  const encoders = []\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint.major] = _0uint_js__WEBPACK_IMPORTED_MODULE_6__.encodeUint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint.major] = _1negint_js__WEBPACK_IMPORTED_MODULE_7__.encodeNegint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes.major] = _2bytes_js__WEBPACK_IMPORTED_MODULE_8__.encodeBytes\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string.major] = _3string_js__WEBPACK_IMPORTED_MODULE_9__.encodeString\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array.major] = _4array_js__WEBPACK_IMPORTED_MODULE_10__.encodeArray\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map.major] = _5map_js__WEBPACK_IMPORTED_MODULE_11__.encodeMap\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag.major] = _6tag_js__WEBPACK_IMPORTED_MODULE_12__.encodeTag\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float.major] = _7float_js__WEBPACK_IMPORTED_MODULE_13__.encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null),\n  undefined: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.undefined, undefined),\n  true: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true),\n  false: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false),\n  emptyArray: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, 0),\n  emptyMap: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, obj)\n    } else if (obj >= 0) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.is)(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_5__.asU8A)(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/is.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/is.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   is: () => (/* binding */ is)\n/* harmony export */ });\n// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nfunction is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcz80NTFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaXMgYW4gdW5mb3J0dW5hdGUgcmVwbGFjZW1lbnQgZm9yIEBzaW5kcmVzb3JodXMvaXMgdGhhdCB3ZSBuZWVkIHRvXG4vLyByZS1pbXBsZW1lbnQgZm9yIHBlcmZvcm1hbmNlIHB1cnBvc2VzLiBJbiBwYXJ0aWN1bGFyIHRoZSBpcy5vYnNlcnZhYmxlKClcbi8vIGNoZWNrIGlzIGV4cGVuc2l2ZSwgYW5kIHVubmVjZXNzYXJ5IGZvciBvdXIgcHVycG9zZXMuIFRoZSB2YWx1ZXMgcmV0dXJuZWRcbi8vIGFyZSBjb21wYXRpYmxlIHdpdGggQHNpbmRyZXNvcmh1cy9pcywgaG93ZXZlci5cblxuY29uc3QgdHlwZW9mcyA9IFtcbiAgJ3N0cmluZycsXG4gICdudW1iZXInLFxuICAnYmlnaW50JyxcbiAgJ3N5bWJvbCdcbl1cblxuY29uc3Qgb2JqZWN0VHlwZU5hbWVzID0gW1xuICAnRnVuY3Rpb24nLFxuICAnR2VuZXJhdG9yJyxcbiAgJ0FzeW5jR2VuZXJhdG9yJyxcbiAgJ0dlbmVyYXRvckZ1bmN0aW9uJyxcbiAgJ0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24nLFxuICAnQXN5bmNGdW5jdGlvbicsXG4gICdPYnNlcnZhYmxlJyxcbiAgJ0FycmF5JyxcbiAgJ0J1ZmZlcicsXG4gICdPYmplY3QnLFxuICAnUmVnRXhwJyxcbiAgJ0RhdGUnLFxuICAnRXJyb3InLFxuICAnTWFwJyxcbiAgJ1NldCcsXG4gICdXZWFrTWFwJyxcbiAgJ1dlYWtTZXQnLFxuICAnQXJyYXlCdWZmZXInLFxuICAnU2hhcmVkQXJyYXlCdWZmZXInLFxuICAnRGF0YVZpZXcnLFxuICAnUHJvbWlzZScsXG4gICdVUkwnLFxuICAnSFRNTEVsZW1lbnQnLFxuICAnSW50OEFycmF5JyxcbiAgJ1VpbnQ4QXJyYXknLFxuICAnVWludDhDbGFtcGVkQXJyYXknLFxuICAnSW50MTZBcnJheScsXG4gICdVaW50MTZBcnJheScsXG4gICdJbnQzMkFycmF5JyxcbiAgJ1VpbnQzMkFycmF5JyxcbiAgJ0Zsb2F0MzJBcnJheScsXG4gICdGbG9hdDY0QXJyYXknLFxuICAnQmlnSW50NjRBcnJheScsXG4gICdCaWdVaW50NjRBcnJheSdcbl1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpcyAodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuICdudWxsJ1xuICB9XG4gIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuICd1bmRlZmluZWQnXG4gIH1cbiAgaWYgKHZhbHVlID09PSB0cnVlIHx8IHZhbHVlID09PSBmYWxzZSkge1xuICAgIHJldHVybiAnYm9vbGVhbidcbiAgfVxuICBjb25zdCB0eXBlT2YgPSB0eXBlb2YgdmFsdWVcbiAgaWYgKHR5cGVvZnMuaW5jbHVkZXModHlwZU9mKSkge1xuICAgIHJldHVybiB0eXBlT2ZcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIG5vdCBnb2luZyB0byBib3RoZXIgdGVzdGluZyB0aGlzLCBpdCdzIG5vdCBnb2luZyB0byBiZSB2YWxpZCBhbnl3YXlcbiAgaWYgKHR5cGVPZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiAnRnVuY3Rpb24nXG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuICdBcnJheSdcbiAgfVxuICBpZiAoaXNCdWZmZXIodmFsdWUpKSB7XG4gICAgcmV0dXJuICdCdWZmZXInXG4gIH1cbiAgY29uc3Qgb2JqZWN0VHlwZSA9IGdldE9iamVjdFR5cGUodmFsdWUpXG4gIGlmIChvYmplY3RUeXBlKSB7XG4gICAgcmV0dXJuIG9iamVjdFR5cGVcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gJ09iamVjdCdcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc0J1ZmZlciAodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yICYmIHZhbHVlLmNvbnN0cnVjdG9yLmlzQnVmZmVyICYmIHZhbHVlLmNvbnN0cnVjdG9yLmlzQnVmZmVyLmNhbGwobnVsbCwgdmFsdWUpXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJucyB7c3RyaW5nfHVuZGVmaW5lZH1cbiAqL1xuZnVuY3Rpb24gZ2V0T2JqZWN0VHlwZSAodmFsdWUpIHtcbiAgY29uc3Qgb2JqZWN0VHlwZU5hbWUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLnNsaWNlKDgsIC0xKVxuICBpZiAob2JqZWN0VHlwZU5hbWVzLmluY2x1ZGVzKG9iamVjdFR5cGVOYW1lKSkge1xuICAgIHJldHVybiBvYmplY3RUeXBlTmFtZVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiB1bmRlZmluZWRcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/decode.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/decode.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokenizer: () => (/* binding */ Tokenizer),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst)\n/* harmony export */ });\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../decode.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n\n\n\n\n\n/**\n * @typedef {import('../../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../../interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n    /** @type {string[]} */\n    this.modeStack = ['value']\n    this.lastToken = ''\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  /**\n   * @returns {number}\n   */\n  ch () {\n    return this.data[this._pos]\n  }\n\n  /**\n   * @returns {string}\n   */\n  currentMode () {\n    return this.modeStack[this.modeStack.length - 1]\n  }\n\n  skipWhitespace () {\n    let c = this.ch()\n    // @ts-ignore\n    while (c === 32 /* ' ' */ || c === 9 /* '\\t' */ || c === 13 /* '\\r' */ || c === 10 /* '\\n' */) {\n      c = this.data[++this._pos]\n    }\n  }\n\n  /**\n   * @param {number[]} str\n   */\n  expect (str) {\n    if (this.data.length - this._pos < str.length) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected end of input at position ${this._pos}`)\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this._pos++] !== str[i]) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected token at position ${this._pos}, expected to find '${String.fromCharCode(...str)}'`)\n      }\n    }\n  }\n\n  parseNumber () {\n    const startPos = this._pos\n    let negative = false\n    let float = false\n\n    /**\n     * @param {number[]} chars\n     */\n    const swallow = (chars) => {\n      while (!this.done()) {\n        const ch = this.ch()\n        if (chars.includes(ch)) {\n          this._pos++\n        } else {\n          break\n        }\n      }\n    }\n\n    // lead\n    if (this.ch() === 45) { // '-'\n      negative = true\n      this._pos++\n    }\n    if (this.ch() === 48) { // '0'\n      this._pos++\n      if (this.ch() === 46) { // '.'\n        this._pos++\n        float = true\n      } else {\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, 0, this._pos - startPos)\n      }\n    }\n    swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    if (negative && this._pos === startPos + 1) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected token at position ${this._pos}`)\n    }\n    if (!this.done() && this.ch() === 46) { // '.'\n      if (float) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected token at position ${this._pos}`)\n      }\n      float = true\n      this._pos++\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) { // '[eE]'\n      float = true\n      this._pos++\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) { // '+', '-'\n        this._pos++\n      }\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    }\n    // @ts-ignore\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this._pos))\n    const num = parseFloat(numStr)\n    if (float) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, num, this._pos - startPos)\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(num >= 0 ? _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint : _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, num, this._pos - startPos)\n    }\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(num >= 0 ? _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint : _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, BigInt(numStr), this._pos - startPos)\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parseString () {\n    /* c8 ignore next 4 */\n    if (this.ch() !== 34) { // '\"'\n      // this would be a programming error\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}; this shouldn't happen`)\n    }\n    this._pos++\n\n    // check for simple fast-path, all printable ascii, no escapes\n    // >0x10000 elements may fail fn.apply() (http://stackoverflow.com/a/22747272/680742)\n    for (let i = this._pos, l = 0; i < this.data.length && l < 0x10000; i++, l++) {\n      const ch = this.data[i]\n      if (ch === 92 || ch < 32 || ch >= 128) { // '\\', ' ', control-chars or non-trivial\n        break\n      }\n      if (ch === 34) { // '\"'\n        // @ts-ignore\n        const str = String.fromCharCode.apply(null, this.data.subarray(this._pos, i))\n        this._pos = i + 1\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, str, l)\n      }\n    }\n\n    const startPos = this._pos\n    const chars = []\n\n    const readu4 = () => {\n      if (this._pos + 4 >= this.data.length) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected end of unicode escape sequence at position ${this._pos}`)\n      }\n      let u4 = 0\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch()\n        if (ch >= 48 && ch <= 57) { // '0' && '9'\n          ch -= 48\n        } else if (ch >= 97 && ch <= 102) { // 'a' && 'f'\n          ch = ch - 97 + 10\n        } else if (ch >= 65 && ch <= 70) { // 'A' && 'F'\n          ch = ch - 65 + 10\n        } else {\n          throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected unicode escape character at position ${this._pos}`)\n        }\n        u4 = u4 * 16 + ch\n        this._pos++\n      }\n      return u4\n    }\n\n    // mostly taken from feross/buffer and adjusted to fit\n    const readUtf8Char = () => {\n      const firstByte = this.ch()\n      let codePoint = null\n      /* c8 ignore next 1 */\n      let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n      if (this._pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected unicode sequence at position ${this._pos}`)\n      }\n\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        /* c8 ignore next 6 */\n        // this case is dealt with by the caller function\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = this.data[this._pos + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = this.data[this._pos + 1]\n          thirdByte = this.data[this._pos + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = this.data[this._pos + 1]\n          thirdByte = this.data[this._pos + 2]\n          fourthByte = this.data[this._pos + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n\n      /* c8 ignore next 5 */\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xfffd\n        bytesPerSequence = 1\n      } else if (codePoint > 0xffff) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000\n        chars.push(codePoint >>> 10 & 0x3ff | 0xd800)\n        codePoint = 0xdc00 | codePoint & 0x3ff\n      }\n\n      chars.push(codePoint)\n      this._pos += bytesPerSequence\n    }\n\n    // TODO: could take the approach of a quick first scan for special chars like encoding/json/decode.go#unquoteBytes\n    // and converting all of the ascii chars from the base array in bulk\n    while (!this.done()) {\n      const ch = this.ch()\n      let ch1\n      switch (ch) {\n        case 92: // '\\'\n          this._pos++\n          if (this.done()) {\n            throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected string termination at position ${this._pos}`)\n          }\n          ch1 = this.ch()\n          this._pos++\n          switch (ch1) {\n            case 34: // '\"'\n            case 39: // '\\''\n            case 92: // '\\'\n            case 47: // '/'\n              chars.push(ch1)\n              break\n            case 98: // 'b'\n              chars.push(8)\n              break\n            case 116: // 't'\n              chars.push(9)\n              break\n            case 110: // 'n'\n              chars.push(10)\n              break\n            case 102: // 'f'\n              chars.push(12)\n              break\n            case 114: // 'r'\n              chars.push(13)\n              break\n            case 117: // 'u'\n              chars.push(readu4())\n              break\n            default:\n              throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected string escape character at position ${this._pos}`)\n          }\n          break\n        case 34: // '\"'\n          this._pos++\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_2__.decodeCodePointsArray)(chars), this._pos - startPos)\n        default:\n          if (ch < 32) { // ' '\n            throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} invalid control character at position ${this._pos}`)\n          } else if (ch < 0x80) {\n            chars.push(ch)\n            this._pos++\n          } else {\n            readUtf8Char()\n          }\n      }\n    }\n\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected end of string at position ${this._pos}`)\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parseValue () {\n    switch (this.ch()) {\n      case 123: // '{'\n        this.modeStack.push('obj-start')\n        this._pos++\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, Infinity, 1)\n      case 91: // '['\n        this.modeStack.push('array-start')\n        this._pos++\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, Infinity, 1)\n      case 34: { // '\"'\n        return this.parseString()\n      }\n      case 110: // 'n' / null\n        this.expect([110, 117, 108, 108]) // 'null'\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null, 4)\n      case 102: // 'f' / // false\n        this.expect([102, 97, 108, 115, 101]) // 'false'\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false, 5)\n      case 116: // 't' / // true\n        this.expect([116, 114, 117, 101]) // 'true'\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true, 4)\n      case 45: // '-'\n      case 48: // '0'\n      case 49: // '1'\n      case 50: // '2'\n      case 51: // '3'\n      case 52: // '4'\n      case 53: // '5'\n      case 54: // '6'\n      case 55: // '7'\n      case 56: // '8'\n      case 57: // '9'\n        return this.parseNumber()\n      default:\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}`)\n    }\n  }\n\n  /**\n   * @returns {Token}\n   */\n  next () {\n    this.skipWhitespace()\n    switch (this.currentMode()) {\n      case 'value':\n        this.modeStack.pop()\n        return this.parseValue()\n      case 'array-value': {\n        this.modeStack.pop()\n        if (this.ch() === 93) { // ']'\n          this._pos++\n          this.skipWhitespace()\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break, undefined, 1)\n        }\n        if (this.ch() !== 44) { // ','\n          throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}, was expecting array delimiter but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.modeStack.push('array-value')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      case 'array-start': {\n        this.modeStack.pop()\n        if (this.ch() === 93) { // ']'\n          this._pos++\n          this.skipWhitespace()\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break, undefined, 1)\n        }\n        this.modeStack.push('array-value')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      // @ts-ignore\n      case 'obj-key':\n        if (this.ch() === 125) { // '}'\n          this.modeStack.pop()\n          this._pos++\n          this.skipWhitespace()\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break, undefined, 1)\n        }\n        if (this.ch() !== 44) { // ','\n          throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}, was expecting object delimiter but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.skipWhitespace()\n      case 'obj-start': { // eslint-disable-line no-fallthrough\n        this.modeStack.pop()\n        if (this.ch() === 125) { // '}'\n          this._pos++\n          this.skipWhitespace()\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break, undefined, 1)\n        }\n        const token = this.parseString()\n        this.skipWhitespace()\n        if (this.ch() !== 58) { // ':'\n          throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}, was expecting key/value delimiter ':' but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.modeStack.push('obj-value')\n        return token\n      }\n      case 'obj-value': {\n        this.modeStack.pop()\n        this.modeStack.push('obj-key')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      /* c8 ignore next 2 */\n      default:\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected parse state at position ${this._pos}; this shouldn't happen`)\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options)\n  return (0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decode)(data, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options)\n  return (0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeFirst)(data, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/encode.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/encode.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encode.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('../../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../token').Token} Token\n * @typedef {import('../bl').Bl} Bl\n */\n\nclass JSONEncoder extends Array {\n  constructor () {\n    super()\n    /** @type {{type:Type,elements:number}[]} */\n    this.inRecursive = []\n  }\n\n  /**\n   * @param {Bl} buf\n   */\n  prefix (buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1]\n    if (recurs) {\n      if (recurs.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array) {\n        recurs.elements++\n        if (recurs.elements !== 1) { // >first\n          buf.push([44]) // ','\n        }\n      }\n      if (recurs.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map) {\n        recurs.elements++\n        if (recurs.elements !== 1) { // >first\n          if (recurs.elements % 2 === 1) { // key\n            buf.push([44]) // ','\n          } else {\n            buf.push([58]) // ':'\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint.major] (buf, token) {\n    this.prefix(buf)\n    const is = String(token.value)\n    const isa = []\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i)\n    }\n    buf.push(isa)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint.major] (buf, token) {\n    // @ts-ignore hack\n    this[_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint.major](buf, token)\n  }\n\n  /**\n   * @param {Bl} _buf\n   * @param {Token} _token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes.major] (_buf, _token) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} unsupported type: Uint8Array`)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string.major] (buf, token) {\n    this.prefix(buf)\n    // buf.push(34) // '\"'\n    // encodeUtf8(token.value, byts)\n    // buf.push(34) // '\"'\n    const byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(JSON.stringify(token.value))\n    buf.push(byts.length > 32 ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.asU8A)(byts) : byts)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} _token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.major] (buf, _token) {\n    this.prefix(buf)\n    this.inRecursive.push({ type: _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, elements: 0 })\n    buf.push([91]) // '['\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} _token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.major] (buf, _token) {\n    this.prefix(buf)\n    this.inRecursive.push({ type: _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, elements: 0 })\n    buf.push([123]) // '{'\n  }\n\n  /**\n   * @param {Bl} _buf\n   * @param {Token} _token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.major] (_buf, _token) {}\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.major] (buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop()\n      if (recurs) {\n        if (recurs.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array) {\n          buf.push([93]) // ']'\n        } else if (recurs.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map) {\n          buf.push([125]) // '}'\n        /* c8 ignore next 3 */\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!')\n        }\n        return\n      }\n      /* c8 ignore next 2 */\n      throw new Error('Unexpected break; this should not happen!')\n    }\n    if (token.value === undefined) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} unsupported type: undefined`)\n    }\n\n    this.prefix(buf)\n    if (token.type.name === 'true') {\n      buf.push([116, 114, 117, 101]) // 'true'\n      return\n    } else if (token.type.name === 'false') {\n      buf.push([102, 97, 108, 115, 101]) // 'false'\n      return\n    } else if (token.type.name === 'null') {\n      buf.push([110, 117, 108, 108]) // 'null'\n      return\n    }\n\n    // number\n    const is = String(token.value)\n    const isa = []\n    let dp = false\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i)\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) { // '[.eE]'\n        dp = true\n      }\n    }\n    if (!dp) { // need a decimal point for floats\n      isa.push(46) // '.'\n      isa.push(48) // '0'\n    }\n    buf.push(isa)\n  }\n}\n\n// The below code is mostly taken and modified from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n// function encodeUtf8 (string, byts) {\n//   let codePoint\n//   const length = string.length\n//   let leadSurrogate = null\n\n//   for (let i = 0; i < length; ++i) {\n//     codePoint = string.charCodeAt(i)\n\n//     // is surrogate component\n//     if (codePoint > 0xd7ff && codePoint < 0xe000) {\n//       // last char was a lead\n//       if (!leadSurrogate) {\n//         // no lead yet\n//         /* c8 ignore next 9 */\n//         if (codePoint > 0xdbff) {\n//           // unexpected trail\n//           byts.push(0xef, 0xbf, 0xbd)\n//           continue\n//         } else if (i + 1 === length) {\n//           // unpaired lead\n//           byts.push(0xef, 0xbf, 0xbd)\n//           continue\n//         }\n\n//         // valid lead\n//         leadSurrogate = codePoint\n\n//         continue\n//       }\n\n//       // 2 leads in a row\n//       /* c8 ignore next 5 */\n//       if (codePoint < 0xdc00) {\n//         byts.push(0xef, 0xbf, 0xbd)\n//         leadSurrogate = codePoint\n//         continue\n//       }\n\n//       // valid surrogate pair\n//       codePoint = (leadSurrogate - 0xd800 << 10 | codePoint - 0xdc00) + 0x10000\n//     /* c8 ignore next 4 */\n//     } else if (leadSurrogate) {\n//       // valid bmp char, but last char was a lead\n//       byts.push(0xef, 0xbf, 0xbd)\n//     }\n\n//     leadSurrogate = null\n\n//     // encode utf8\n//     if (codePoint < 0x80) {\n//       // special JSON escapes\n//       switch (codePoint) {\n//         case 8: // '\\b'\n//           byts.push(92, 98) // '\\\\b'\n//           continue\n//         case 9: // '\\t'\n//           byts.push(92, 116) // '\\\\t'\n//           continue\n//         case 10: // '\\n'\n//           byts.push(92, 110) // '\\\\n'\n//           continue\n//         case 12: // '\\f'\n//           byts.push(92, 102) // '\\\\f'\n//           continue\n//         case 13: // '\\r'\n//           byts.push(92, 114) // '\\\\r'\n//           continue\n//         case 34: // '\"'\n//           byts.push(92, 34) // '\\\\\"'\n//           continue\n//         case 92: // '\\\\'\n//           byts.push(92, 92) // '\\\\\\\\'\n//           continue\n//       }\n\n//       byts.push(codePoint)\n//     } else if (codePoint < 0x800) {\n//       /* c8 ignore next 1 */\n//       byts.push(\n//         codePoint >> 0x6 | 0xc0,\n//         codePoint & 0x3f | 0x80\n//       )\n//     } else if (codePoint < 0x10000) {\n//       /* c8 ignore next 1 */\n//       byts.push(\n//         codePoint >> 0xc | 0xe0,\n//         codePoint >> 0x6 & 0x3f | 0x80,\n//         codePoint & 0x3f | 0x80\n//       )\n//     /* c8 ignore next 9 */\n//     } else if (codePoint < 0x110000) {\n//       byts.push(\n//         codePoint >> 0x12 | 0xf0,\n//         codePoint >> 0xc & 0x3f | 0x80,\n//         codePoint >> 0x6 & 0x3f | 0x80,\n//         codePoint & 0x3f | 0x80\n//       )\n//     } else {\n//       /* c8 ignore next 2 */\n//       throw new Error('Invalid code point')\n//     }\n//   }\n// }\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} complex map keys are not supported`)\n  }\n  const keyToken1 = e1[0]\n  const keyToken2 = e2[0]\n  if (keyToken1.type !== _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string || keyToken2.type !== _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} non-string map keys are not supported`)\n  }\n  if (keyToken1 < keyToken2) {\n    return -1\n  }\n  if (keyToken1 > keyToken2) {\n    return 1\n  }\n  /* c8 ignore next 1 */\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} unexpected duplicate map keys, this is not supported`)\n}\n\nconst defaultEncodeOptions = { addBreakTokens: true, mapSorter }\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  // @ts-ignore TokenTypeEncoder[] requires compareTokens() on each encoder, we don't use them here\n  return (0,_encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeCustom)(data, new JSONEncoder(), options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/json.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/json.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokenizer),\n/* harmony export */   decode: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_0__.encode)\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/encode.js\");\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decode.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/decode.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9qc29uL2pzb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9DO0FBQ3dCOztBQUVYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9qc29uL2pzb24uanM/OTY3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGUgfSBmcm9tICcuL2VuY29kZS5qcydcbmltcG9ydCB7IGRlY29kZSwgZGVjb2RlRmlyc3QsIFRva2VuaXplciB9IGZyb20gJy4vZGVjb2RlLmpzJ1xuXG5leHBvcnQgeyBlbmNvZGUsIGRlY29kZSwgZGVjb2RlRmlyc3QsIFRva2VuaXplciB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/jump.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/jump.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jump: () => (/* binding */ jump),\n/* harmony export */   quick: () => (/* binding */ quick),\n/* harmony export */   quickEncodeToken: () => (/* binding */ quickEncodeToken)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/7float.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nconst jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytesCompact\n}\njump[0x58] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeStringCompact\n}\njump[0x78] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayCompact\n}\njump[0x98] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapCompact\n}\njump[0xb8] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTagCompact\n}\njump[0xd8] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag8\njump[0xd9] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag16\njump[0xda] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag32\njump[0xdb] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nconst quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, '', 1)\n// empty list\nquick[0x80] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, 0, 1)\n// empty map\nquick[0xa0] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, 0, 1)\n// false\nquick[0xf4] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false, false, 1)\n// true\nquick[0xf5] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true, true, 1)\n// null\nquick[0xf6] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nfunction quickEncodeToken (token) {\n  switch (token.type) {\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf4])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf5])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf6])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes:\n      if (!token.value.length) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x40])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string:\n      if (token.value === '') {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x60])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint:\n      if (token.value < 24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([Number(token.value)])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint:\n      if (token.value >= -24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([31 - Number(token.value)])\n      }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/jump.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\nclass Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi90b2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLFdBQVcsSUFBSSxVQUFVO0FBQzVDOztBQUVBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQSxlQUFlLHNCQUFzQjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVSxJQUFJLFdBQVc7QUFDN0M7QUFDQTs7QUFFc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliL3Rva2VuLmpzPzE2ODYiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVHlwZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gbWFqb3JcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtib29sZWFufSB0ZXJtaW5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IgKG1ham9yLCBuYW1lLCB0ZXJtaW5hbCkge1xuICAgIHRoaXMubWFqb3IgPSBtYWpvclxuICAgIHRoaXMubWFqb3JFbmNvZGVkID0gbWFqb3IgPDwgNVxuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLnRlcm1pbmFsID0gdGVybWluYWxcbiAgfVxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIHJldHVybiBgVHlwZVske3RoaXMubWFqb3J9XS4ke3RoaXMubmFtZX1gXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtUeXBlfSB0eXBcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGNvbXBhcmUgKHR5cCkge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDEgKi9cbiAgICByZXR1cm4gdGhpcy5tYWpvciA8IHR5cC5tYWpvciA/IC0xIDogdGhpcy5tYWpvciA+IHR5cC5tYWpvciA/IDEgOiAwXG4gIH1cbn1cblxuLy8gY29udmVydCB0byBzdGF0aWMgZmllbGRzIHdoZW4gYmV0dGVyIHN1cHBvcnRlZFxuVHlwZS51aW50ID0gbmV3IFR5cGUoMCwgJ3VpbnQnLCB0cnVlKVxuVHlwZS5uZWdpbnQgPSBuZXcgVHlwZSgxLCAnbmVnaW50JywgdHJ1ZSlcblR5cGUuYnl0ZXMgPSBuZXcgVHlwZSgyLCAnYnl0ZXMnLCB0cnVlKVxuVHlwZS5zdHJpbmcgPSBuZXcgVHlwZSgzLCAnc3RyaW5nJywgdHJ1ZSlcblR5cGUuYXJyYXkgPSBuZXcgVHlwZSg0LCAnYXJyYXknLCBmYWxzZSlcblR5cGUubWFwID0gbmV3IFR5cGUoNSwgJ21hcCcsIGZhbHNlKVxuVHlwZS50YWcgPSBuZXcgVHlwZSg2LCAndGFnJywgZmFsc2UpIC8vIHRlcm1pbmFsP1xuVHlwZS5mbG9hdCA9IG5ldyBUeXBlKDcsICdmbG9hdCcsIHRydWUpXG5UeXBlLmZhbHNlID0gbmV3IFR5cGUoNywgJ2ZhbHNlJywgdHJ1ZSlcblR5cGUudHJ1ZSA9IG5ldyBUeXBlKDcsICd0cnVlJywgdHJ1ZSlcblR5cGUubnVsbCA9IG5ldyBUeXBlKDcsICdudWxsJywgdHJ1ZSlcblR5cGUudW5kZWZpbmVkID0gbmV3IFR5cGUoNywgJ3VuZGVmaW5lZCcsIHRydWUpXG5UeXBlLmJyZWFrID0gbmV3IFR5cGUoNywgJ2JyZWFrJywgdHJ1ZSlcbi8vIFR5cGUuaW5kZWZpbml0ZUxlbmd0aCA9IG5ldyBUeXBlKDAsICdpbmRlZmluaXRlTGVuZ3RoJywgdHJ1ZSlcblxuY2xhc3MgVG9rZW4ge1xuICAvKipcbiAgICogQHBhcmFtIHtUeXBlfSB0eXBlXG4gICAqIEBwYXJhbSB7YW55fSBbdmFsdWVdXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbZW5jb2RlZExlbmd0aF1cbiAgICovXG4gIGNvbnN0cnVjdG9yICh0eXBlLCB2YWx1ZSwgZW5jb2RlZExlbmd0aCkge1xuICAgIHRoaXMudHlwZSA9IHR5cGVcbiAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgICB0aGlzLmVuY29kZWRMZW5ndGggPSBlbmNvZGVkTGVuZ3RoXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmVuY29kZWRCeXRlcyA9IHVuZGVmaW5lZFxuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXx1bmRlZmluZWR9ICovXG4gICAgdGhpcy5ieXRlVmFsdWUgPSB1bmRlZmluZWRcbiAgfVxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIHJldHVybiBgVG9rZW5bJHt0aGlzLnR5cGV9XS4ke3RoaXMudmFsdWV9YFxuICB9XG59XG5cbmV4cG9ydCB7IFR5cGUsIFRva2VuIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base32.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base32.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFvQztBQUM3QixlQUFlLGlEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQixpREFBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLGtCQUFrQixpREFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSx1QkFBdUIsaURBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLGlEQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLDBCQUEwQixpREFBTztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxnQkFBZ0IsaURBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzMi5qcz9lNTY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2InLFxuICAgIG5hbWU6ICdiYXNlMzInLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0InLFxuICAgIG5hbWU6ICdiYXNlMzJ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWQnLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdDJyxcbiAgICBuYW1lOiAnYmFzZTMycGFkdXBwZXInLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dicsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1QnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXhwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ6ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnaCcsXG4gICAgbmFtZTogJ2Jhc2UzMnonLFxuICAgIGFscGhhYmV0OiAneWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjknLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base36.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base36.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGVBQWUsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQiwrQ0FBSztBQUNoQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzNi5qcz9lMzNiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzYgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnaycsXG4gICAgbmFtZTogJ2Jhc2UzNicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzZ1cHBlciA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdLJyxcbiAgICBuYW1lOiAnYmFzZTM2dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMzYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base58.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base58.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGtCQUFrQiwrQ0FBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLCtDQUFLO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1qc29uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzPzFhMjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgICBwcmVmaXg6ICd6JyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gICAgbmFtZTogJ2Jhc2U1OGZsaWNrcicsXG4gICAgcHJlZml4OiAnWicsXG4gICAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNTguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base64.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base64.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'm',\n    name: 'base64',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'M',\n    name: 'base64pad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'u',\n    name: 'base64url',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'U',\n    name: 'base64urlpad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n    bitsPerChar: 6\n});\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1qc29uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTY0LmpzP2Y1NGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTY0ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnbScsXG4gICAgbmFtZTogJ2Jhc2U2NCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJyxcbiAgICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnTScsXG4gICAgbmFtZTogJ2Jhc2U2NHBhZCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPScsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ3UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmwnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXycsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybHBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmxwYWQnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXz0nLFxuICAgIGJpdHNQZXJDaGFyOiA2XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/interface.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/interface.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanM/NjA4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlIGVuY29kZXJzIC8gZGVjb2RlcnMganVzdCBiYXNlIGVuY29kZSAvIGRlY29kZSBiZXR3ZWVuIGJpbmFyeSBhbmRcbi8vIHRleHR1YWwgcmVwcmVzZW50YXRpb24uIFRoZXkgYXJlIHVuYXdhcmUgb2YgbXVsdGliYXNlLlxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/block/interface.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/block/interface.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ibG9jay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jsb2NrL2ludGVyZmFjZS5qcz80YjEyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bytes.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bytes.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixvQkFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2J5dGVzLmpzPzRjYTQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVtcHR5ID0gbmV3IFVpbnQ4QXJyYXkoMCk7XG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoZCkge1xuICAgIHJldHVybiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChoZXgpIHtcbiAgICBjb25zdCBoZXhlcyA9IGhleC5tYXRjaCgvLi4vZyk7XG4gICAgcmV0dXJuIGhleGVzICE9IG51bGwgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhYSwgYmIpIHtcbiAgICBpZiAoYWEgPT09IGJiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoYWEuYnl0ZUxlbmd0aCAhPT0gYmIuYnl0ZUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGlpID0gMDsgaWkgPCBhYS5ieXRlTGVuZ3RoOyBpaSsrKSB7XG4gICAgICAgIGlmIChhYVtpaV0gIT09IGJiW2lpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvZXJjZShvKSB7XG4gICAgaWYgKG8gaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIG8uY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKSB7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH1cbiAgICBpZiAobyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvKTtcbiAgICB9XG4gICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhvKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0JpbmFyeShvKSB7XG4gICAgcmV0dXJuIG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcobyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbVN0cmluZyhzdHIpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYikge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/cid.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/cid.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/codecs/interface.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzP2ExZGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/digest.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkQ7QUFDcEI7QUFDdkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHVCQUF1QixzREFBcUI7QUFDNUMsc0NBQXNDLHNEQUFxQjtBQUMzRDtBQUNBLElBQUksZ0RBQWU7QUFDbkIsSUFBSSxnREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQixpREFBTTtBQUN4QiwrQkFBK0IsOENBQWE7QUFDNUMsaUNBQWlDLDhDQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9kaWdlc3QuanM/MDRjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UsIGVxdWFscyBhcyBlcXVhbEJ5dGVzIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgdmFyaW50IGZyb20gJy4uL3ZhcmludC5qcyc7XG4vKipcbiAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgICBjb25zdCBzaXplT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGNvZGUpO1xuICAgIGNvbnN0IGRpZ2VzdE9mZnNldCA9IHNpemVPZmZzZXQgKyB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoc2l6ZSk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgYnl0ZXMsIDApO1xuICAgIHZhcmludC5lbmNvZGVUbyhzaXplLCBieXRlcywgc2l6ZU9mZnNldCk7XG4gICAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKTtcbn1cbi8qKlxuICogVHVybnMgYnl0ZXMgcmVwcmVzZW50YXRpb24gb2YgbXVsdGloYXNoIGRpZ2VzdCBpbnRvIGFuIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKG11bHRpaGFzaCkge1xuICAgIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gICAgY29uc3QgW2NvZGUsIHNpemVPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcyk7XG4gICAgY29uc3QgW3NpemUsIGRpZ2VzdE9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQpKTtcbiAgICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgICBpZiAoZGlnZXN0LmJ5dGVMZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBkYXRhID0gYjtcbiAgICAgICAgcmV0dXJuIChhLmNvZGUgPT09IGRhdGEuY29kZSAmJlxuICAgICAgICAgICAgYS5zaXplID09PSBkYXRhLnNpemUgJiZcbiAgICAgICAgICAgIGRhdGEuYnl0ZXMgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmXG4gICAgICAgICAgICBlcXVhbEJ5dGVzKGEuYnl0ZXMsIGRhdGEuYnl0ZXMpKTtcbiAgICB9XG59XG4vKipcbiAqIFJlcHJlc2VudHMgYSBtdWx0aWhhc2ggZGlnZXN0IHdoaWNoIGNhcnJpZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlXG4gKiBoYXNoaW5nIGFsZ29yaXRobSBhbmQgYW4gYWN0dWFsIGhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgICBjb2RlO1xuICAgIHNpemU7XG4gICAgZGlnZXN0O1xuICAgIGJ5dGVzO1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBkaWdlc3Q7XG4gICAgICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgICB9XG59XG4vKipcbiAqIFVzZWQgdG8gY2hlY2sgdGhhdCB0aGUgcGFzc2VkIG11bHRpaGFzaCBoYXMgdGhlIHBhc3NlZCBjb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNDb2RlKGRpZ2VzdCwgY29kZSkge1xuICAgIHJldHVybiBkaWdlc3QuY29kZSA9PT0gY29kZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpZ2VzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaGFzaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUN0QztBQUNPLGdCQUFnQixzREFBc0Q7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RkFBNkYscUJBQXFCO0FBQ2xIO0FBQ0E7QUFDQSwwRkFBMEYscUJBQXFCO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGtCQUFrQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSxXQUFXLDhDQUFhO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9oYXNoZXIuanM/YzQ3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSCA9IDIwO1xuZXhwb3J0IGZ1bmN0aW9uIGZyb20oeyBuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoIH0pIHtcbiAgICByZXR1cm4gbmV3IEhhc2hlcihuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoKTtcbn1cbi8qKlxuICogSGFzaGVyIHJlcHJlc2VudHMgYSBoYXNoaW5nIGFsZ29yaXRobSBpbXBsZW1lbnRhdGlvbiB0aGF0IHByb2R1Y2VzIGFzXG4gKiBgTXVsdGloYXNoRGlnZXN0YC5cbiAqL1xuZXhwb3J0IGNsYXNzIEhhc2hlciB7XG4gICAgbmFtZTtcbiAgICBjb2RlO1xuICAgIGVuY29kZTtcbiAgICBtaW5EaWdlc3RMZW5ndGg7XG4gICAgbWF4RGlnZXN0TGVuZ3RoO1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5lbmNvZGUgPSBlbmNvZGU7XG4gICAgICAgIHRoaXMubWluRGlnZXN0TGVuZ3RoID0gbWluRGlnZXN0TGVuZ3RoID8/IERFRkFVTFRfTUlOX0RJR0VTVF9MRU5HVEg7XG4gICAgICAgIHRoaXMubWF4RGlnZXN0TGVuZ3RoID0gbWF4RGlnZXN0TGVuZ3RoO1xuICAgIH1cbiAgICBkaWdlc3QoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnM/LnRydW5jYXRlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnRydW5jYXRlIDwgdGhpcy5taW5EaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWluRGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubWF4RGlnZXN0TGVuZ3RoICE9IG51bGwgJiYgb3B0aW9ucy50cnVuY2F0ZSA+IHRoaXMubWF4RGlnZXN0TGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHRydW5jYXRlIG9wdGlvbiwgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHt0aGlzLm1heERpZ2VzdExlbmd0aH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmVuY29kZShpbnB1dCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVEaWdlc3QocmVzdWx0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQudGhlbihkaWdlc3QgPT4gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgdGhpcy5jb2RlLCBvcHRpb25zPy50cnVuY2F0ZSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgICAgICB9XG4gICAgfVxufVxuLyoqXG4gKiBDcmVhdGUgYSBEaWdlc3QgZnJvbSB0aGUgcGFzc2VkIHVpbnQ4YXJyYXkgYW5kIGNvZGUsIG9wdGlvbmFsbHkgdHJ1bmNhdGluZyBpdFxuICogZmlyc3QuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURpZ2VzdChkaWdlc3QsIGNvZGUsIHRydW5jYXRlKSB7XG4gICAgaWYgKHRydW5jYXRlICE9IG51bGwgJiYgdHJ1bmNhdGUgIT09IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmICh0cnVuY2F0ZSA+IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke2RpZ2VzdC5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIGRpZ2VzdCA9IGRpZ2VzdC5zdWJhcnJheSgwLCB0cnVuY2F0ZSk7XG4gICAgfVxuICAgIHJldHVybiBEaWdlc3QuY3JlYXRlKGNvZGUsIGRpZ2VzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/interface.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pbnRlcmZhY2UuanM/YjM2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjIE11bHRpaGFzaFxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/interface.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/interface.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFDQTtBQUNGO0FBQ0M7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2ludGVyZmFjZS5qcz8yMjIzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYmFzZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaGFzaGVzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvZGVjcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9saW5rL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Jsb2NrL2ludGVyZmFjZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/link/interface.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/link/interface.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1qc29uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanM/ZTU5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/varint.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/varint.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92YXJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNqQztBQUNQLGlCQUFpQix5REFBTTtBQUN2QixrQkFBa0IseURBQU07QUFDeEI7QUFDTztBQUNQLElBQUkseURBQU07QUFDVjtBQUNBO0FBQ087QUFDUCxXQUFXLHlEQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctanNvbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZhcmludC5qcz9jYjY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAnLi92ZW5kb3IvdmFyaW50LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb2Zmc2V0ID0gMCkge1xuICAgIGNvbnN0IGNvZGUgPSB2YXJpbnQuZGVjb2RlKGRhdGEsIG9mZnNldCk7XG4gICAgcmV0dXJuIFtjb2RlLCB2YXJpbnQuZGVjb2RlLmJ5dGVzXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUbyhpbnQsIHRhcmdldCwgb2Zmc2V0ID0gMCkge1xuICAgIHZhcmludC5lbmNvZGUoaW50LCB0YXJnZXQsIG9mZnNldCk7XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGluZ0xlbmd0aChpbnQpIHtcbiAgICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGludCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/vendor/varint.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLWpzb24vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFlBQVksRUFBQztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1qc29uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcz84NjhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgZW5jb2RlXzEgPSBlbmNvZGU7XG52YXIgTVNCID0gMHg4MCwgUkVTVCA9IDB4N0YsIE1TQkFMTCA9IH5SRVNULCBJTlQgPSBNYXRoLnBvdygyLCAzMSk7XG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBudW1cbiAqIEBwYXJhbSB7bnVtYmVyW119IG91dFxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiBlbmNvZGUobnVtLCBvdXQsIG9mZnNldCkge1xuICAgIG91dCA9IG91dCB8fCBbXTtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcbiAgICB2YXIgb2xkT2Zmc2V0ID0gb2Zmc2V0O1xuICAgIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgICAgIG91dFtvZmZzZXQrK10gPSAobnVtICYgMHhGRikgfCBNU0I7XG4gICAgICAgIG51bSAvPSAxMjg7XG4gICAgfVxuICAgIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtID4+Pj0gNztcbiAgICB9XG4gICAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICAgIHJldHVybiBvdXQ7XG59XG52YXIgZGVjb2RlID0gcmVhZDtcbnZhciBNU0IkMSA9IDB4ODAsIFJFU1QkMSA9IDB4N0Y7XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nIHwgYW55W119IGJ1ZlxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiByZWFkKGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICAgIGRvIHtcbiAgICAgICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICAgICAgfVxuICAgICAgICBiID0gYnVmW2NvdW50ZXIrK107XG4gICAgICAgIHJlcyArPSBzaGlmdCA8IDI4XG4gICAgICAgICAgICA/IChiICYgUkVTVCQxKSA8PCBzaGlmdFxuICAgICAgICAgICAgOiAoYiAmIFJFU1QkMSkgKiBNYXRoLnBvdygyLCBzaGlmdCk7XG4gICAgICAgIHNoaWZ0ICs9IDc7XG4gICAgfSB3aGlsZSAoYiA+PSBNU0IkMSk7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHJlYWQuYnl0ZXMgPSBjb3VudGVyIC0gb2Zmc2V0O1xuICAgIHJldHVybiByZXM7XG59XG52YXIgTjEgPSBNYXRoLnBvdygyLCA3KTtcbnZhciBOMiA9IE1hdGgucG93KDIsIDE0KTtcbnZhciBOMyA9IE1hdGgucG93KDIsIDIxKTtcbnZhciBONCA9IE1hdGgucG93KDIsIDI4KTtcbnZhciBONSA9IE1hdGgucG93KDIsIDM1KTtcbnZhciBONiA9IE1hdGgucG93KDIsIDQyKTtcbnZhciBONyA9IE1hdGgucG93KDIsIDQ5KTtcbnZhciBOOCA9IE1hdGgucG93KDIsIDU2KTtcbnZhciBOOSA9IE1hdGgucG93KDIsIDYzKTtcbnZhciBsZW5ndGggPSBmdW5jdGlvbiAoLyoqIEB0eXBlIHtudW1iZXJ9ICovIHZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSA8IE4xID8gMVxuICAgICAgICA6IHZhbHVlIDwgTjIgPyAyXG4gICAgICAgICAgICA6IHZhbHVlIDwgTjMgPyAzXG4gICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE40ID8gNFxuICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjUgPyA1XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjYgPyA2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE43ID8gN1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjggPyA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjkgPyA5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAxMCk7XG59O1xudmFyIHZhcmludCA9IHtcbiAgICBlbmNvZGU6IGVuY29kZV8xLFxuICAgIGRlY29kZTogZGVjb2RlLFxuICAgIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFyaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-json/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@ipld/dag-json/src/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   stringify: () => (/* binding */ format)\n/* harmony export */ });\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/cborg.js\");\n/* harmony import */ var cborg_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cborg/json */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/cborg/lib/json/json.js\");\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/index.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/@ipld/dag-json/node_modules/multiformats/dist/src/bases/base64.js\");\n/* eslint max-depth: [\"error\", 7] */\n\n\n\n\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n/**\n * @template T\n * @typedef {import('multiformats').ToString<T>} ToString\n */\n/**\n * @typedef {import('cborg/interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal. Encoding a CID means replacing it with a `{\"/\":\"<CidString>}`\n * object as per the DAG-JSON spec.\n *\n * @param {any} obj\n * @returns {Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = multiformats__WEBPACK_IMPORTED_MODULE_2__.CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const cidString = cid.toString()\n\n  return [\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.map, Infinity, 1),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string, '/', 1), // key\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string, cidString, cidString.length), // value\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n  ]\n}\n\n/**\n * bytesEncoder will receive all Uint8Arrays (and friends) during encode, it\n * needs to replace it with a `{\"/\":{\"bytes\":\"Base64ByteString\"}}` object as\n * per the DAG-JSON spec.\n *\n * @param {Uint8Array} bytes\n * @returns {Token[]|null}\n */\nfunction bytesEncoder (bytes) {\n  const bytesString = multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64.encode(bytes).slice(1) // no mbase prefix\n  return [\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.map, Infinity, 1),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string, '/', 1), // key\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.map, Infinity, 1), // value\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string, 'bytes', 5), // inner key\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string, bytesString, bytesString.length), // inner value\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n  ]\n}\n\n/**\n * taBytesEncoder wraps bytesEncoder() but for the more exotic typed arrays so\n * that we access the underlying ArrayBuffer data\n *\n * @param {Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array|Float32Array|Float64Array|Uint8ClampedArray|BigInt64Array|BigUint64Array} obj\n * @returns {Token[]|null}\n */\nfunction taBytesEncoder (obj) {\n  return bytesEncoder(new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n}\n\n/**\n * abBytesEncoder wraps bytesEncoder() but for plain ArrayBuffers\n *\n * @param {ArrayBuffer} ab\n * @returns {Token[]|null}\n */\nfunction abBytesEncoder (ab) {\n  return bytesEncoder(new Uint8Array(ab))\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null // process with standard number encoder\n}\n\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Buffer: bytesEncoder,\n    Uint8Array: bytesEncoder,\n    Int8Array: taBytesEncoder,\n    Uint16Array: taBytesEncoder,\n    Int16Array: taBytesEncoder,\n    Uint32Array: taBytesEncoder,\n    Int32Array: taBytesEncoder,\n    Float32Array: taBytesEncoder,\n    Float64Array: taBytesEncoder,\n    Uint8ClampedArray: taBytesEncoder,\n    BigInt64Array: taBytesEncoder,\n    BigUint64Array: taBytesEncoder,\n    DataView: taBytesEncoder,\n    ArrayBuffer: abBytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass DagJsonTokenizer extends cborg_json__WEBPACK_IMPORTED_MODULE_1__.Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {object} [options]\n   */\n  constructor (data, options) {\n    super(data, options)\n    /** @type {Token[]} */\n    this.tokenBuffer = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this.tokenBuffer.length === 0 && super.done()\n  }\n\n  /**\n   * @returns {Token}\n   */\n  _next () {\n    if (this.tokenBuffer.length > 0) {\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/30406\n      return this.tokenBuffer.pop()\n    }\n    return super.next()\n  }\n\n  /**\n   * Implements rules outlined in https://github.com/ipld/specs/pull/356\n   *\n   * @returns {Token}\n   */\n  next () {\n    const token = this._next()\n\n    if (token.type === cborg__WEBPACK_IMPORTED_MODULE_0__.Type.map) {\n      const keyToken = this._next()\n      if (keyToken.type === cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string && keyToken.value === '/') {\n        const valueToken = this._next()\n        if (valueToken.type === cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string) { // *must* be a CID\n          const breakToken = this._next() // swallow the end-of-map token\n          if (breakToken.type !== cborg__WEBPACK_IMPORTED_MODULE_0__.Type.break) {\n            throw new Error('Invalid encoded CID form')\n          }\n          this.tokenBuffer.push(valueToken) // CID.parse will pick this up after our tag token\n          return new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.tag, 42, 0)\n        }\n        if (valueToken.type === cborg__WEBPACK_IMPORTED_MODULE_0__.Type.map) {\n          const innerKeyToken = this._next()\n          if (innerKeyToken.type === cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next()\n            if (innerValueToken.type === cborg__WEBPACK_IMPORTED_MODULE_0__.Type.string) { // *must* be Bytes\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next() // swallow two end-of-map tokens\n                if (breakToken.type !== cborg__WEBPACK_IMPORTED_MODULE_0__.Type.break) {\n                  throw new Error('Invalid encoded Bytes form')\n                }\n              }\n              const bytes = multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64.decode(`m${innerValueToken.value}`)\n              return new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, bytes, innerValueToken.value.length)\n            }\n            this.tokenBuffer.push(innerValueToken) // bail\n          }\n          this.tokenBuffer.push(innerKeyToken) // bail\n        }\n        this.tokenBuffer.push(valueToken) // bail\n      }\n      this.tokenBuffer.push(keyToken) // bail\n    }\n    return token\n  }\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n\n// we're going to get TAG(42)STRING(\"bafy...\") from the tokenizer so we only need\n// to deal with the STRING(\"bafy...\") at this point\ndecodeOptions.tags[42] = multiformats__WEBPACK_IMPORTED_MODULE_2__.CID.parse\n\nconst name = 'dag-json'\nconst code = 0x0129\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nconst encode = (node) => cborg_json__WEBPACK_IMPORTED_MODULE_1__.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nconst decode = (data) => {\n  const buf = toByteView(data)\n  // the tokenizer is stateful so we need a single instance of it\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(buf, decodeOptions) })\n  return cborg_json__WEBPACK_IMPORTED_MODULE_1__.decode(buf, options)\n}\n\n/**\n * @template T\n * @param {T} node\n * @returns {ToString<T>}\n */\nconst format = (node) => utf8Decoder.decode(encode(node))\n\nconst utf8Decoder = new TextDecoder()\n\n/**\n * @template T\n * @param {ToString<T>} data\n * @returns {T}\n */\nconst parse = (data) => decode(utf8Encoder.encode(data))\nconst utf8Encoder = new TextEncoder()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-json/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/@ipld/dag-cbor/src/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/@ipld/dag-cbor/src/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeOptions: () => (/* binding */ decodeOptions),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeOptions: () => (/* binding */ encodeOptions),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   toByteView: () => (/* binding */ toByteView)\n/* harmony export */ });\n/* harmony import */ var cborg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cborg */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/cborg.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/cid.js\");\n\n\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.tag, CID_CBOR_TAG),\n    new cborg__WEBPACK_IMPORTED_MODULE_0__.Token(cborg__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nconst encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nconst decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nconst name = 'dag-cbor'\nconst code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nconst encode = (node) => cborg__WEBPACK_IMPORTED_MODULE_0__.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nconst decode = (data) => cborg__WEBPACK_IMPORTED_MODULE_0__.decode(toByteView(data), _decodeOptions)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1jYm9yL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEI7QUFDUTs7QUFFdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxxREFBcUQ7QUFDbEU7O0FBRUE7QUFDQTtBQUNBLGFBQWEsNERBQTREO0FBQ3pFOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGtDQUFrQztBQUM3QyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlEQUFHO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdDQUFXLENBQUMsdUNBQVU7QUFDOUIsUUFBUSx3Q0FBVyxDQUFDLHVDQUFVO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0EsU0FBUyxpREFBRztBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVPO0FBQ0E7O0FBRVA7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWE7QUFDYjtBQUNPLHlCQUF5Qix5Q0FBWTs7QUFFNUM7QUFDQTtBQUNBLFdBQVcsa0NBQWtDO0FBQzdDLGFBQWE7QUFDYjtBQUNPLHlCQUF5Qix5Q0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctY2Jvci9zcmMvaW5kZXguanM/YzFhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjYm9yZyBmcm9tICdjYm9yZydcbmltcG9ydCB7IENJRCB9IGZyb20gJ211bHRpZm9ybWF0cy9jaWQnXG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9pcGZzL2dvLWlwZnMvaXNzdWVzLzM1NzAjaXNzdWVjb21tZW50LTI3MzkzMTY5MlxuY29uc3QgQ0lEX0NCT1JfVEFHID0gNDJcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NvZGVjcy9pbnRlcmZhY2UnKS5CeXRlVmlldzxUPn0gQnl0ZVZpZXdcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvY29kZWNzL2ludGVyZmFjZScpLkFycmF5QnVmZmVyVmlldzxUPn0gQXJyYXlCdWZmZXJWaWV3XG4gKi9cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtCeXRlVmlldzxUPiB8IEFycmF5QnVmZmVyVmlldzxUPn0gYnVmXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0J5dGVWaWV3IChidWYpIHtcbiAgaWYgKGJ1ZiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1ZiwgMCwgYnVmLmJ5dGVMZW5ndGgpXG4gIH1cblxuICByZXR1cm4gYnVmXG59XG5cbi8qKlxuICogY2lkRW5jb2RlciB3aWxsIHJlY2VpdmUgYWxsIE9iamVjdHMgZHVyaW5nIGVuY29kZSwgaXQgbmVlZHMgdG8gZmlsdGVyIG91dFxuICogYW55dGhpbmcgdGhhdCdzIG5vdCBhIENJRCBhbmQgcmV0dXJuIGBudWxsYCBmb3IgdGhhdCBzbyBpdCdzIGVuY29kZWQgYXNcbiAqIG5vcm1hbC5cbiAqXG4gKiBAcGFyYW0ge2FueX0gb2JqXG4gKiBAcmV0dXJucyB7Y2JvcmcuVG9rZW5bXXxudWxsfVxuICovXG5mdW5jdGlvbiBjaWRFbmNvZGVyIChvYmopIHtcbiAgaWYgKG9iai5hc0NJRCAhPT0gb2JqICYmIG9ialsnLyddICE9PSBvYmouYnl0ZXMpIHtcbiAgICByZXR1cm4gbnVsbCAvLyBhbnkgb3RoZXIga2luZCBvZiBvYmplY3RcbiAgfVxuICBjb25zdCBjaWQgPSBDSUQuYXNDSUQob2JqKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIHZlcnkgdW5saWtlbHkgY2FzZSwgYW5kIGl0J2xsIHByb2JhYmx5IHRocm93IGEgcmVjdXJzaW9uIGVycm9yIGluIGNib3JnXG4gIGlmICghY2lkKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGNpZC5ieXRlcy5ieXRlTGVuZ3RoICsgMSlcbiAgYnl0ZXMuc2V0KGNpZC5ieXRlcywgMSkgLy8gcHJlZml4IGlzIDB4MDAsIGZvciBoaXN0b3JpY2FsIHJlYXNvbnNcbiAgcmV0dXJuIFtcbiAgICBuZXcgY2JvcmcuVG9rZW4oY2JvcmcuVHlwZS50YWcsIENJRF9DQk9SX1RBRyksXG4gICAgbmV3IGNib3JnLlRva2VuKGNib3JnLlR5cGUuYnl0ZXMsIGJ5dGVzKVxuICBdXG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc2RvYy9yZXF1aXJlLXJldHVybnMtY2hlY2tcbi8qKlxuICogSW50ZXJjZXB0IGFsbCBgdW5kZWZpbmVkYCB2YWx1ZXMgZnJvbSBhbiBvYmplY3Qgd2FsayBhbmQgcmVqZWN0IHRoZSBlbnRpcmVcbiAqIG9iamVjdCBpZiB3ZSBmaW5kIG9uZS5cbiAqXG4gKiBAcmV0dXJucyB7bnVsbH1cbiAqL1xuZnVuY3Rpb24gdW5kZWZpbmVkRW5jb2RlciAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignYHVuZGVmaW5lZGAgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgSVBMRCBEYXRhIE1vZGVsIGFuZCBjYW5ub3QgYmUgZW5jb2RlZCcpXG59XG5cbi8qKlxuICogSW50ZXJjZXB0IGFsbCBgbnVtYmVyYCB2YWx1ZXMgZnJvbSBhbiBvYmplY3Qgd2FsayBhbmQgcmVqZWN0IHRoZSBlbnRpcmVcbiAqIG9iamVjdCBpZiB3ZSBmaW5kIHNvbWV0aGluZyB0aGF0IGRvZXNuJ3QgZml0IHRoZSBJUExEIGRhdGEgbW9kZWwgKE5hTiAmXG4gKiBJbmZpbml0eSkuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bVxuICogQHJldHVybnMge251bGx9XG4gKi9cbmZ1bmN0aW9uIG51bWJlckVuY29kZXIgKG51bSkge1xuICBpZiAoTnVtYmVyLmlzTmFOKG51bSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2BOYU5gIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIElQTEQgRGF0YSBNb2RlbCBhbmQgY2Fubm90IGJlIGVuY29kZWQnKVxuICB9XG4gIGlmIChudW0gPT09IEluZmluaXR5IHx8IG51bSA9PT0gLUluZmluaXR5KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdgSW5maW5pdHlgIGFuZCBgLUluZmluaXR5YCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBJUExEIERhdGEgTW9kZWwgYW5kIGNhbm5vdCBiZSBlbmNvZGVkJylcbiAgfVxuICByZXR1cm4gbnVsbFxufVxuXG5jb25zdCBfZW5jb2RlT3B0aW9ucyA9IHtcbiAgZmxvYXQ2NDogdHJ1ZSxcbiAgdHlwZUVuY29kZXJzOiB7XG4gICAgT2JqZWN0OiBjaWRFbmNvZGVyLFxuICAgIHVuZGVmaW5lZDogdW5kZWZpbmVkRW5jb2RlcixcbiAgICBudW1iZXI6IG51bWJlckVuY29kZXJcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZW5jb2RlT3B0aW9ucyA9IHtcbiAgLi4uX2VuY29kZU9wdGlvbnMsXG4gIHR5cGVFbmNvZGVyczoge1xuICAgIC4uLl9lbmNvZGVPcHRpb25zLnR5cGVFbmNvZGVyc1xuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHJldHVybnMge0NJRH1cbiAqL1xuZnVuY3Rpb24gY2lkRGVjb2RlciAoYnl0ZXMpIHtcbiAgaWYgKGJ5dGVzWzBdICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIENJRCBmb3IgQ0JPUiB0YWcgNDI7IGV4cGVjdGVkIGxlYWRpbmcgMHgwMCcpXG4gIH1cbiAgcmV0dXJuIENJRC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoMSkpIC8vIGlnbm9yZSBsZWFkaW5nIDB4MDBcbn1cblxuY29uc3QgX2RlY29kZU9wdGlvbnMgPSB7XG4gIGFsbG93SW5kZWZpbml0ZTogZmFsc2UsXG4gIGNvZXJjZVVuZGVmaW5lZFRvTnVsbDogdHJ1ZSxcbiAgYWxsb3dOYU46IGZhbHNlLFxuICBhbGxvd0luZmluaXR5OiBmYWxzZSxcbiAgYWxsb3dCaWdJbnQ6IHRydWUsIC8vIHRoaXMgd2lsbCBsZWFkIHRvIEJpZ0ludCBmb3IgaW50cyBvdXRzaWRlIG9mXG4gIC8vIHNhZmUtaW50ZWdlciByYW5nZSwgd2hpY2ggbWF5IHN1cnByaXNlIHVzZXJzXG4gIHN0cmljdDogdHJ1ZSxcbiAgdXNlTWFwczogZmFsc2UsXG4gIHJlamVjdER1cGxpY2F0ZU1hcEtleXM6IHRydWUsXG4gIC8qKiBAdHlwZSB7aW1wb3J0KCdjYm9yZycpLlRhZ0RlY29kZXJbXX0gKi9cbiAgdGFnczogW11cbn1cbl9kZWNvZGVPcHRpb25zLnRhZ3NbQ0lEX0NCT1JfVEFHXSA9IGNpZERlY29kZXJcblxuZXhwb3J0IGNvbnN0IGRlY29kZU9wdGlvbnMgPSB7XG4gIC4uLl9kZWNvZGVPcHRpb25zLFxuICB0YWdzOiBfZGVjb2RlT3B0aW9ucy50YWdzLnNsaWNlKClcbn1cblxuZXhwb3J0IGNvbnN0IG5hbWUgPSAnZGFnLWNib3InXG5leHBvcnQgY29uc3QgY29kZSA9IDB4NzFcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtUfSBub2RlXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGUgPSAobm9kZSkgPT4gY2JvcmcuZW5jb2RlKG5vZGUsIF9lbmNvZGVPcHRpb25zKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFQ+IHwgQXJyYXlCdWZmZXJWaWV3PFQ+fSBkYXRhXG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChkYXRhKSA9PiBjYm9yZy5kZWNvZGUodG9CeXRlVmlldyhkYXRhKSwgX2RlY29kZU9wdGlvbnMpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/@ipld/dag-cbor/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/cborg.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/cborg.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Token),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokeniser),\n/* harmony export */   Type: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Type),\n/* harmony export */   decode: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   tokensToObject: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/encode.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/decode.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _lib_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n\n\n\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDd0M7QUFDcEM7O0FBRTVDO0FBQ0E7QUFDQSxhQUFhLGtDQUFrQztBQUMvQztBQUNBLGFBQWEsMkNBQTJDO0FBQ3hELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEscUNBQXFDO0FBQ2xEOztBQVVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzPzQ4M2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlIH0gZnJvbSAnLi9saWIvZW5jb2RlLmpzJ1xuaW1wb3J0IHsgZGVjb2RlLCBkZWNvZGVGaXJzdCwgVG9rZW5pc2VyLCB0b2tlbnNUb09iamVjdCB9IGZyb20gJy4vbGliL2RlY29kZS5qcydcbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi9saWIvdG9rZW4uanMnXG5cbi8qKlxuICogRXhwb3J0IHRoZSB0eXBlcyB0aGF0IHdlcmUgcHJlc2VudCBpbiB0aGUgb3JpZ2luYWwgbWFudWFsIGNib3JnLmQudHNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuVGFnRGVjb2Rlcn0gVGFnRGVjb2RlclxuICogVGhlcmUgd2FzIG9yaWdpbmFsbHkganVzdCBgVHlwZUVuY29kZXJgIHNvIGRvbid0IGJyZWFrIHR5cGVzIGJ5IHJlbmFtaW5nIG9yIG5vdCBleHBvcnRpbmdcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuT3B0aW9uYWxUeXBlRW5jb2Rlcn0gVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5FbmNvZGVPcHRpb25zfSBFbmNvZGVPcHRpb25zXG4gKi9cblxuZXhwb3J0IHtcbiAgZGVjb2RlLFxuICBkZWNvZGVGaXJzdCxcbiAgVG9rZW5pc2VyIGFzIFRva2VuaXplcixcbiAgdG9rZW5zVG9PYmplY3QsXG4gIGVuY29kZSxcbiAgVG9rZW4sXG4gIFR5cGVcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/cborg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUint16: () => (/* binding */ decodeUint16),\n/* harmony export */   decodeUint32: () => (/* binding */ decodeUint32),\n/* harmony export */   decodeUint64: () => (/* binding */ decodeUint64),\n/* harmony export */   decodeUint8: () => (/* binding */ decodeUint8),\n/* harmony export */   encodeUint: () => (/* binding */ encodeUint),\n/* harmony export */   encodeUintValue: () => (/* binding */ encodeUintValue),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint64: () => (/* binding */ readUint64),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   uintBoundaries: () => (/* binding */ uintBoundaries)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n/* globals BigInt */\n\n\n\n\nconst uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint8 (data, offset, options) {\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint16 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint32 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nfunction readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nfunction encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/1negint.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/1negint.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNegint16: () => (/* binding */ decodeNegint16),\n/* harmony export */   decodeNegint32: () => (/* binding */ decodeNegint32),\n/* harmony export */   decodeNegint64: () => (/* binding */ decodeNegint64),\n/* harmony export */   decodeNegint8: () => (/* binding */ decodeNegint8),\n/* harmony export */   encodeNegint: () => (/* binding */ encodeNegint)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n/* eslint-env es2020 */\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint64 (data, pos, _minor, options) {\n  const int = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8xbmVnaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRXdDO0FBQ047QUFDVzs7QUFFN0M7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxjQUFjLGdEQUFjO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLGNBQWMsaURBQWU7QUFDcEQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksY0FBYyxpREFBZTtBQUNwRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsY0FBYyxpREFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNENBQUssQ0FBQywyQ0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQTtBQUNBLEVBQUUsc0RBQW9CO0FBQ3RCOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMW5lZ2ludC5qcz81MDRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXMyMDIwICovXG5cbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQ4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCAyKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgLTEgLSB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU5lZ2ludDMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCAtMSAtIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgNSlcbn1cblxuY29uc3QgbmVnMWIgPSBCaWdJbnQoLTEpXG5jb25zdCBwb3MxYiA9IEJpZ0ludCgxKVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQ2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgaW50ID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgaW50ICE9PSAnYmlnaW50Jykge1xuICAgIGNvbnN0IHZhbHVlID0gLTEgLSBpbnRcbiAgICBpZiAodmFsdWUgPj0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIpIHtcbiAgICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIHZhbHVlLCA5KVxuICAgIH1cbiAgfVxuICBpZiAob3B0aW9ucy5hbGxvd0JpZ0ludCAhPT0gdHJ1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGludGVnZXJzIG91dHNpZGUgb2YgdGhlIHNhZmUgaW50ZWdlciByYW5nZSBhcmUgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgbmVnMWIgLSBCaWdJbnQoaW50KSwgOSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVOZWdpbnQgKGJ1ZiwgdG9rZW4pIHtcbiAgY29uc3QgbmVnaW50ID0gdG9rZW4udmFsdWVcbiAgY29uc3QgdW5zaWduZWQgPSAodHlwZW9mIG5lZ2ludCA9PT0gJ2JpZ2ludCcgPyAobmVnaW50ICogbmVnMWIgLSBwb3MxYikgOiAobmVnaW50ICogLTEgLSAxKSlcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCB0b2tlbi50eXBlLm1ham9yRW5jb2RlZCwgdW5zaWduZWQpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZU5lZ2ludC5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICBjb25zdCBuZWdpbnQgPSB0b2tlbi52YWx1ZVxuICBjb25zdCB1bnNpZ25lZCA9ICh0eXBlb2YgbmVnaW50ID09PSAnYmlnaW50JyA/IChuZWdpbnQgKiBuZWcxYiAtIHBvczFiKSA6IChuZWdpbnQgKiAtMSAtIDEpKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIGhhbmRsZWQgYnkgcXVpY2tFbmNvZGUsIHdlIHNob3VsZG4ndCBnZXQgaGVyZSBidXQgaXQncyBpbmNsdWRlZCBmb3IgY29tcGxldGVuZXNzXG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMF0pIHtcbiAgICByZXR1cm4gMVxuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMV0pIHtcbiAgICByZXR1cm4gMlxuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbMl0pIHtcbiAgICByZXR1cm4gM1xuICB9XG4gIGlmICh1bnNpZ25lZCA8IHVpbnQudWludEJvdW5kYXJpZXNbM10pIHtcbiAgICByZXR1cm4gNVxuICB9XG4gIHJldHVybiA5XG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rMVxuICogQHBhcmFtIHtUb2tlbn0gdG9rMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlTmVnaW50LmNvbXBhcmVUb2tlbnMgPSBmdW5jdGlvbiBjb21wYXJlVG9rZW5zICh0b2sxLCB0b2syKSB7XG4gIC8vIG9wcG9zaXRlIG9mIHRoZSB1aW50IGNvbXBhcmlzb24gc2luY2Ugd2Ugc3RvcmUgdGhlIHVpbnQgdmVyc2lvbiBpbiBieXRlc1xuICByZXR1cm4gdG9rMS52YWx1ZSA8IHRvazIudmFsdWUgPyAxIDogdG9rMS52YWx1ZSA+IHRvazIudmFsdWUgPyAtMSA6IC8qIGM4IGlnbm9yZSBuZXh0ICovIDBcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/1negint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/2bytes.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/2bytes.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareBytes: () => (/* binding */ compareBytes),\n/* harmony export */   decodeBytes16: () => (/* binding */ decodeBytes16),\n/* harmony export */   decodeBytes32: () => (/* binding */ decodeBytes32),\n/* harmony export */   decodeBytes64: () => (/* binding */ decodeBytes64),\n/* harmony export */   decodeBytes8: () => (/* binding */ decodeBytes8),\n/* harmony export */   decodeBytesCompact: () => (/* binding */ decodeBytesCompact),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, prefix + length)\n  const buf = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.slice)(data, pos + prefix, pos + prefix + length)\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.compare)(b1, b2)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8yYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDdUI7QUFDN0I7QUFDMEI7O0FBRTVEO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxFQUFFLDREQUFnQjtBQUNsQixjQUFjLHFEQUFLO0FBQ25CLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsMkNBQUksVUFBVSwwREFBVTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQSxFQUFFLHNEQUFvQjtBQUN0QjtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3Qjs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQLGtFQUFrRSx1REFBTztBQUN6RSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvMmJ5dGVzLmpzPzNhOWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0IHsgYXNzZXJ0RW5vdWdoRGF0YSwgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBjb21wYXJlLCBmcm9tU3RyaW5nLCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoZGF0YSwgcG9zLCBwcmVmaXgsIGxlbmd0aCkge1xuICBhc3NlcnRFbm91Z2hEYXRhKGRhdGEsIHBvcywgcHJlZml4ICsgbGVuZ3RoKVxuICBjb25zdCBidWYgPSBzbGljZShkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHByZWZpeCArIGxlbmd0aClcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmJ5dGVzLCBidWYsIHByZWZpeCArIGxlbmd0aClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXNDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXM2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgYnl0ZXMgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwpXG59XG5cbi8qKlxuICogYGVuY29kZWRCeXRlc2AgYWxsb3dzIGZvciBjYWNoaW5nIHdoZW4gd2UgZG8gYSBieXRlIHZlcnNpb24gb2YgYSBzdHJpbmdcbiAqIGZvciBrZXkgc29ydGluZyBwdXJwb3Nlc1xuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5mdW5jdGlvbiB0b2tlbkJ5dGVzICh0b2tlbikge1xuICBpZiAodG9rZW4uZW5jb2RlZEJ5dGVzID09PSB1bmRlZmluZWQpIHtcbiAgICB0b2tlbi5lbmNvZGVkQnl0ZXMgPSB0b2tlbi50eXBlID09PSBUeXBlLnN0cmluZyA/IGZyb21TdHJpbmcodG9rZW4udmFsdWUpIDogdG9rZW4udmFsdWVcbiAgfVxuICAvLyBAdHMtaWdub3JlIGMnbW9uXG4gIHJldHVybiB0b2tlbi5lbmNvZGVkQnl0ZXNcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCeXRlcyAoYnVmLCB0b2tlbikge1xuICBjb25zdCBieXRlcyA9IHRva2VuQnl0ZXModG9rZW4pXG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgdG9rZW4udHlwZS5tYWpvckVuY29kZWQsIGJ5dGVzLmxlbmd0aClcbiAgYnVmLnB1c2goYnl0ZXMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUJ5dGVzLmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIGNvbnN0IGJ5dGVzID0gdG9rZW5CeXRlcyh0b2tlbilcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKGJ5dGVzLmxlbmd0aCkgKyBieXRlcy5sZW5ndGhcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2sxXG4gKiBAcGFyYW0ge1Rva2VufSB0b2syXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVCeXRlcy5jb21wYXJlVG9rZW5zID0gZnVuY3Rpb24gY29tcGFyZVRva2VucyAodG9rMSwgdG9rMikge1xuICByZXR1cm4gY29tcGFyZUJ5dGVzKHRva2VuQnl0ZXModG9rMSksIHRva2VuQnl0ZXModG9rMikpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiMVxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVCeXRlcyAoYjEsIGIyKSB7XG4gIHJldHVybiBiMS5sZW5ndGggPCBiMi5sZW5ndGggPyAtMSA6IGIxLmxlbmd0aCA+IGIyLmxlbmd0aCA/IDEgOiBjb21wYXJlKGIxLCBiMilcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/2bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/3string.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/3string.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString16: () => (/* binding */ decodeString16),\n/* harmony export */   decodeString32: () => (/* binding */ decodeString32),\n/* harmony export */   decodeString64: () => (/* binding */ decodeString64),\n/* harmony export */   decodeString8: () => (/* binding */ decodeString8),\n/* harmony export */   decodeStringCompact: () => (/* binding */ decodeStringCompact),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, totLength)\n  const tok = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.toString)(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.slice)(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nconst encodeString = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8zc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3VCO0FBQzdCO0FBQ087QUFDUTs7QUFFakQ7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNkRBQWdCO0FBQ2xCLGtCQUFrQiw0Q0FBSyxDQUFDLDJDQUFJLFNBQVMsd0RBQVE7QUFDN0M7QUFDQSxvQkFBb0IscURBQUs7QUFDekI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFTyxxQkFBcUIsbURBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzNzdHJpbmcuanM/NzJjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgeyBhc3NlcnRFbm91Z2hEYXRhLCBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGVuY29kZUJ5dGVzIH0gZnJvbSAnLi8yYnl0ZXMuanMnXG5pbXBvcnQgeyB0b1N0cmluZywgc2xpY2UgfSBmcm9tICcuL2J5dGUtdXRpbHMuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoZGF0YSwgcG9zLCBwcmVmaXgsIGxlbmd0aCwgb3B0aW9ucykge1xuICBjb25zdCB0b3RMZW5ndGggPSBwcmVmaXggKyBsZW5ndGhcbiAgYXNzZXJ0RW5vdWdoRGF0YShkYXRhLCBwb3MsIHRvdExlbmd0aClcbiAgY29uc3QgdG9rID0gbmV3IFRva2VuKFR5cGUuc3RyaW5nLCB0b1N0cmluZyhkYXRhLCBwb3MgKyBwcmVmaXgsIHBvcyArIHRvdExlbmd0aCksIHRvdExlbmd0aClcbiAgaWYgKG9wdGlvbnMucmV0YWluU3RyaW5nQnl0ZXMgPT09IHRydWUpIHtcbiAgICB0b2suYnl0ZVZhbHVlID0gc2xpY2UoZGF0YSwgcG9zICsgcHJlZml4LCBwb3MgKyB0b3RMZW5ndGgpXG4gIH1cbiAgcmV0dXJuIHRva1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZ0NvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vciwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nMTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmczMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBzdHJpbmcgbGVuZ3RocyBub3Qgc3VwcG9ydGVkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDksIGwsIG9wdGlvbnMpXG59XG5cbmV4cG9ydCBjb25zdCBlbmNvZGVTdHJpbmcgPSBlbmNvZGVCeXRlc1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/3string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/4array.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/4array.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray16: () => (/* binding */ decodeArray16),\n/* harmony export */   decodeArray32: () => (/* binding */ decodeArray32),\n/* harmony export */   decodeArray64: () => (/* binding */ decodeArray64),\n/* harmony export */   decodeArray8: () => (/* binding */ decodeArray8),\n/* harmony export */   decodeArrayCompact: () => (/* binding */ decodeArrayCompact),\n/* harmony export */   decodeArrayIndefinite: () => (/* binding */ decodeArrayIndefinite),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeArray (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi80YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNOO0FBQ1c7O0FBRTdDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGdEQUFjO0FBQzdDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLGlEQUFlO0FBQzNCO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQLEVBQUUsc0RBQW9CLE1BQU0sMkNBQUk7QUFDaEM7O0FBRUE7QUFDQTtBQUNBLDRCQUE0QixpREFBZTs7QUFFM0M7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9jYm9yZy9saWIvNGFycmF5LmpzPzQ3NjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoX2RhdGEsIF9wb3MsIHByZWZpeCwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5hcnJheSwgbGVuZ3RoLCBwcmVmaXgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5Q29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vcilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXk4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXkzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5NjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIGFycmF5IGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheUluZGVmaW5pdGUgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmFsbG93SW5kZWZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbmRlZmluaXRlIGxlbmd0aCBpdGVtcyBub3QgYWxsb3dlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBJbmZpbml0eSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVBcnJheSAoYnVmLCB0b2tlbikge1xuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIFR5cGUuYXJyYXkubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuLy8gdXNpbmcgYW4gYXJyYXkgYXMgYSBtYXAga2V5LCBhcmUgeW91IHN1cmUgYWJvdXQgdGhpcz8gd2UgY2FuIG9ubHkgc29ydFxuLy8gYnkgbWFwIGxlbmd0aCBoZXJlLCBpdCdzIHVwIHRvIHRoZSBlbmNvZGVyIHRvIGRlY2lkZSB0byBsb29rIGRlZXBlclxuZW5jb2RlQXJyYXkuY29tcGFyZVRva2VucyA9IHVpbnQuZW5jb2RlVWludC5jb21wYXJlVG9rZW5zXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZUFycmF5LmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIHJldHVybiB1aW50LmVuY29kZVVpbnRWYWx1ZS5lbmNvZGVkU2l6ZSh0b2tlbi52YWx1ZSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/4array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/5map.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/5map.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMap16: () => (/* binding */ decodeMap16),\n/* harmony export */   decodeMap32: () => (/* binding */ decodeMap32),\n/* harmony export */   decodeMap64: () => (/* binding */ decodeMap64),\n/* harmony export */   decodeMap8: () => (/* binding */ decodeMap8),\n/* harmony export */   decodeMapCompact: () => (/* binding */ decodeMapCompact),\n/* harmony export */   decodeMapIndefinite: () => (/* binding */ decodeMapIndefinite),\n/* harmony export */   encodeMap: () => (/* binding */ encodeMap)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeMap (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi81bWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTjtBQUNXOztBQUU3QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUCxFQUFFLHNEQUFvQixNQUFNLDJDQUFJO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzVtYXAuanM/ZWUyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IF9kYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gX3Bvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge1Rva2VufVxuICovXG5mdW5jdGlvbiB0b1Rva2VuIChfZGF0YSwgX3BvcywgcHJlZml4LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm1hcCwgbGVuZ3RoLCBwcmVmaXgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcENvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXA2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgbWFwIGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXBJbmRlZmluaXRlIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5hbGxvd0luZGVmaW5pdGUgPT09IGZhbHNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW5kZWZpbml0ZSBsZW5ndGggaXRlbXMgbm90IGFsbG93ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgSW5maW5pdHkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlTWFwIChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS5tYXAubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuLy8gdXNpbmcgYSBtYXAgYXMgYSBtYXAga2V5LCBhcmUgeW91IHN1cmUgYWJvdXQgdGhpcz8gd2UgY2FuIG9ubHkgc29ydFxuLy8gYnkgbWFwIGxlbmd0aCBoZXJlLCBpdCdzIHVwIHRvIHRoZSBlbmNvZGVyIHRvIGRlY2lkZSB0byBsb29rIGRlZXBlclxuZW5jb2RlTWFwLmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVNYXAuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/5map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/6tag.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/6tag.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTag16: () => (/* binding */ decodeTag16),\n/* harmony export */   decodeTag32: () => (/* binding */ decodeTag32),\n/* harmony export */   decodeTag64: () => (/* binding */ decodeTag64),\n/* harmony export */   decodeTag8: () => (/* binding */ decodeTag8),\n/* harmony export */   decodeTagCompact: () => (/* binding */ decodeTagCompact),\n/* harmony export */   encodeTag: () => (/* binding */ encodeTag)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeTagCompact (_data, _pos, minor, _options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeTag (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi82dGFnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ047O0FBRWxDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxnREFBYztBQUMzQzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxNQUFNLGlEQUFlO0FBQzVDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0saURBQWU7QUFDNUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxpREFBZTtBQUM1Qzs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1AsRUFBRSxzREFBb0IsTUFBTSwyQ0FBSTtBQUNoQzs7QUFFQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliLzZ0YWcuanM/YTIwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnQ29tcGFjdCAoX2RhdGEsIF9wb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCBtaW5vciwgMSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVGFnOCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnRhZywgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDIpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDUpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUudGFnLCB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVGFnIChidWYsIHRva2VuKSB7XG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgVHlwZS50YWcubWFqb3JFbmNvZGVkLCB0b2tlbi52YWx1ZSlcbn1cblxuZW5jb2RlVGFnLmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVUYWcuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgcmV0dXJuIHVpbnQuZW5jb2RlVWludFZhbHVlLmVuY29kZWRTaXplKHRva2VuLnZhbHVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/6tag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/7float.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/7float.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBreak: () => (/* binding */ decodeBreak),\n/* harmony export */   decodeFloat16: () => (/* binding */ decodeFloat16),\n/* harmony export */   decodeFloat32: () => (/* binding */ decodeFloat32),\n/* harmony export */   decodeFloat64: () => (/* binding */ decodeFloat64),\n/* harmony export */   decodeUndefined: () => (/* binding */ decodeUndefined),\n/* harmony export */   encodeFloat: () => (/* binding */ encodeFloat)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nfunction encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/7float.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/bl.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/bl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ Bl)\n/* harmony export */ });\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/byte-utils.js\");\n/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\n\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nclass Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.slice)(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ3NEOztBQUV0RDtBQUNBO0FBQ0E7O0FBRUE7O0FBRU87QUFDUDtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QztBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxREFBSztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLGVBQWUscURBQUs7QUFDcEI7QUFDQSxNQUFNO0FBQ047QUFDQSxhQUFhLHNEQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcz9iODI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmwgaXMgYSBsaXN0IG9mIGJ5dGUgY2h1bmtzLCBzaW1pbGFyIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9ydmFnZy9ibCBidXQgZm9yXG4gKiB3cml0aW5nIHJhdGhlciB0aGFuIHJlYWRpbmcuXG4gKiBBIEJsIG9iamVjdCBhY2NlcHRzIHNldCgpIG9wZXJhdGlvbnMgZm9yIGluZGl2aWR1YWwgYnl0ZXMgYW5kIGNvcHlUbygpIGZvclxuICogaW5zZXJ0aW5nIGJ5dGUgYXJyYXlzLiBUaGVzZSB3cml0ZSBvcGVyYXRpb25zIGRvbid0IGF1dG9tYXRpY2FsbHkgaW5jcmVtZW50XG4gKiB0aGUgaW50ZXJuYWwgY3Vyc29yIHNvIGl0cyBcImxlbmd0aFwiIHdvbid0IGJlIGNoYW5nZWQuIEluc3RlYWQsIGluY3JlbWVudCgpXG4gKiBtdXN0IGJlIGNhbGxlZCB0byBleHRlbmQgaXRzIGxlbmd0aCB0byBjb3ZlciB0aGUgaW5zZXJ0ZWQgZGF0YS5cbiAqIFRoZSB0b0J5dGVzKCkgY2FsbCB3aWxsIGNvbnZlcnQgYWxsIGludGVybmFsIG1lbW9yeSB0byBhIHNpbmdsZSBVaW50OEFycmF5IG9mXG4gKiB0aGUgY29ycmVjdCBsZW5ndGgsIHRydW5jYXRpbmcgYW55IGRhdGEgdGhhdCBpcyBzdG9yZWQgYnV0IGhhc24ndCBiZWVuXG4gKiBpbmNsdWRlZCBieSBhbiBpbmNyZW1lbnQoKS5cbiAqIGdldCgpIGNhbiByZXRyaWV2ZSBhIHNpbmdsZSBieXRlLlxuICogQWxsIG9wZXJhdGlvbnMgKGV4Y2VwdCB0b0J5dGVzKCkpIHRha2UgYW4gXCJvZmZzZXRcIiBhcmd1bWVudCB0aGF0IHdpbGwgcGVyZm9ybVxuICogdGhlIHdyaXRlIGF0IHRoZSBvZmZzZXQgX2Zyb20gdGhlIGN1cnJlbnQgY3Vyc29yXy4gRm9yIG1vc3Qgb3BlcmF0aW9ucyB0aGlzXG4gKiB3aWxsIGJlIGAwYCB0byB3cml0ZSBhdCB0aGUgY3VycmVudCBjdXJzb3IgcG9zaXRpb24gYnV0IGl0IGNhbiBiZSBhaGVhZCBvZlxuICogdGhlIGN1cnJlbnQgY3Vyc29yLiBOZWdhdGl2ZSBvZmZzZXRzIHByb2JhYmx5IHdvcmsgYnV0IGFyZSB1bnRlc3RlZC5cbiAqL1xuXG4vLyBUT0RPOiBpcGpzIGRvZXNuJ3Qgc3VwcG9ydCB0aGlzLCBvbmx5IGZvciB0ZXN0IGZpbGVzOiBodHRwczovL2dpdGh1Yi5jb20vbWlrZWFsL2lwanMvYmxvYi9tYXN0ZXIvc3JjL3BhY2thZ2UvdGVzdEZpbGUuanMjTDM5XG5pbXBvcnQgeyBhbGxvYywgY29uY2F0LCBzbGljZSB9IGZyb20gJy4vYnl0ZS11dGlscy5qcydcblxuLy8gdGhlIHRzLWlnbm9yZXMgaW4gdGhpcyBmaWxlIGFyZSBhbG1vc3QgYWxsIGZvciB0aGUgYFVpbnQ4QXJyYXl8bnVtYmVyW11gIGR1YWxpdHkgdGhhdCBleGlzdHNcbi8vIGZvciBwZXJmIHJlYXNvbnMuIENvbnNpZGVyIGJldHRlciBhcHByb2FjaGVzIHRvIHRoaXMgb3IgcmVtb3ZpbmcgaXQgZW50aXJlbHksIGl0IGlzIHF1aXRlXG4vLyByaXNreSBiZWNhdXNlIG9mIHNvbWUgYXNzdW1wdGlvbnMgYWJvdXQgc21hbGwgY2h1bmtzID09PSBudW1iZXJbXSBhbmQgZXZlcnl0aGluZyBlbHNlID09PSBVaW50OEFycmF5LlxuXG5jb25zdCBkZWZhdWx0Q2h1bmtTaXplID0gMjU2XG5cbmV4cG9ydCBjbGFzcyBCbCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2NodW5rU2l6ZV1cbiAgICovXG4gIGNvbnN0cnVjdG9yIChjaHVua1NpemUgPSBkZWZhdWx0Q2h1bmtTaXplKSB7XG4gICAgdGhpcy5jaHVua1NpemUgPSBjaHVua1NpemVcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLmN1cnNvciA9IDBcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLm1heEN1cnNvciA9IC0xXG4gICAgLyoqIEB0eXBlIHsoVWludDhBcnJheXxudW1iZXJbXSlbXX0gKi9cbiAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgLy8ga2VlcCB0aGUgZmlyc3QgY2h1bmsgYXJvdW5kIGlmIHdlIGNhbiB0byBzYXZlIGFsbG9jYXRpb25zIGZvciBmdXR1cmUgZW5jb2Rlc1xuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXxudW1iZXJbXXxudWxsfSAqL1xuICAgIHRoaXMuX2luaXRSZXVzZUNodW5rID0gbnVsbFxuICB9XG5cbiAgcmVzZXQgKCkge1xuICAgIHRoaXMuY3Vyc29yID0gMFxuICAgIHRoaXMubWF4Q3Vyc29yID0gLTFcbiAgICBpZiAodGhpcy5jaHVua3MubGVuZ3RoKSB7XG4gICAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgfVxuICAgIGlmICh0aGlzLl9pbml0UmV1c2VDaHVuayAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5jaHVua3MucHVzaCh0aGlzLl9pbml0UmV1c2VDaHVuaylcbiAgICAgIHRoaXMubWF4Q3Vyc29yID0gdGhpcy5faW5pdFJldXNlQ2h1bmsubGVuZ3RoIC0gMVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl8bnVtYmVyW119IGJ5dGVzXG4gICAqL1xuICBwdXNoIChieXRlcykge1xuICAgIGxldCB0b3BDaHVuayA9IHRoaXMuY2h1bmtzW3RoaXMuY2h1bmtzLmxlbmd0aCAtIDFdXG4gICAgY29uc3QgbmV3TWF4ID0gdGhpcy5jdXJzb3IgKyBieXRlcy5sZW5ndGhcbiAgICBpZiAobmV3TWF4IDw9IHRoaXMubWF4Q3Vyc29yICsgMSkge1xuICAgICAgLy8gd2UgaGF2ZSBhdCBsZWFzdCBvbmUgY2h1bmsgYW5kIHdlIGNhbiBmaXQgdGhlc2UgYnl0ZXMgaW50byB0aGF0IGNodW5rXG4gICAgICBjb25zdCBjaHVua1BvcyA9IHRvcENodW5rLmxlbmd0aCAtICh0aGlzLm1heEN1cnNvciAtIHRoaXMuY3Vyc29yKSAtIDFcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHRvcENodW5rLnNldChieXRlcywgY2h1bmtQb3MpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGNhbid0IGZpdCBpdCBpblxuICAgICAgaWYgKHRvcENodW5rKSB7XG4gICAgICAgIC8vIHRyaXAgdGhlIGxhc3QgY2h1bmsgdG8gYGN1cnNvcmAgaWYgd2UgbmVlZCB0b1xuICAgICAgICBjb25zdCBjaHVua1BvcyA9IHRvcENodW5rLmxlbmd0aCAtICh0aGlzLm1heEN1cnNvciAtIHRoaXMuY3Vyc29yKSAtIDFcbiAgICAgICAgaWYgKGNodW5rUG9zIDwgdG9wQ2h1bmsubGVuZ3RoKSB7XG4gICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgIHRoaXMuY2h1bmtzW3RoaXMuY2h1bmtzLmxlbmd0aCAtIDFdID0gdG9wQ2h1bmsuc3ViYXJyYXkoMCwgY2h1bmtQb3MpXG4gICAgICAgICAgdGhpcy5tYXhDdXJzb3IgPSB0aGlzLmN1cnNvciAtIDFcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGJ5dGVzLmxlbmd0aCA8IDY0ICYmIGJ5dGVzLmxlbmd0aCA8IHRoaXMuY2h1bmtTaXplKSB7XG4gICAgICAgIC8vIG1ha2UgYSBuZXcgY2h1bmsgYW5kIGNvcHkgdGhlIG5ldyBvbmUgaW50byBpdFxuICAgICAgICB0b3BDaHVuayA9IGFsbG9jKHRoaXMuY2h1bmtTaXplKVxuICAgICAgICB0aGlzLmNodW5rcy5wdXNoKHRvcENodW5rKVxuICAgICAgICB0aGlzLm1heEN1cnNvciArPSB0b3BDaHVuay5sZW5ndGhcbiAgICAgICAgaWYgKHRoaXMuX2luaXRSZXVzZUNodW5rID09PSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSB0b3BDaHVua1xuICAgICAgICB9XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgdG9wQ2h1bmsuc2V0KGJ5dGVzLCAwKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gcHVzaCB0aGUgbmV3IGJ5dGVzIGluIGFzIGl0cyBvd24gY2h1bmtcbiAgICAgICAgdGhpcy5jaHVua3MucHVzaChieXRlcylcbiAgICAgICAgdGhpcy5tYXhDdXJzb3IgKz0gYnl0ZXMubGVuZ3RoXG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuY3Vyc29yICs9IGJ5dGVzLmxlbmd0aFxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3Jlc2V0XVxuICAgKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAgICovXG4gIHRvQnl0ZXMgKHJlc2V0ID0gZmFsc2UpIHtcbiAgICBsZXQgYnl0c1xuICAgIGlmICh0aGlzLmNodW5rcy5sZW5ndGggPT09IDEpIHtcbiAgICAgIGNvbnN0IGNodW5rID0gdGhpcy5jaHVua3NbMF1cbiAgICAgIGlmIChyZXNldCAmJiB0aGlzLmN1cnNvciA+IGNodW5rLmxlbmd0aCAvIDIpIHtcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGJ5dHMgPSB0aGlzLmN1cnNvciA9PT0gY2h1bmsubGVuZ3RoID8gY2h1bmsgOiBjaHVuay5zdWJhcnJheSgwLCB0aGlzLmN1cnNvcilcbiAgICAgICAgdGhpcy5faW5pdFJldXNlQ2h1bmsgPSBudWxsXG4gICAgICAgIHRoaXMuY2h1bmtzID0gW11cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYnl0cyA9IHNsaWNlKGNodW5rLCAwLCB0aGlzLmN1cnNvcilcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgYnl0cyA9IGNvbmNhdCh0aGlzLmNodW5rcywgdGhpcy5jdXJzb3IpXG4gICAgfVxuICAgIGlmIChyZXNldCkge1xuICAgICAgdGhpcy5yZXNldCgpXG4gICAgfVxuICAgIHJldHVybiBieXRzXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/bl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/byte-utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/byte-utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   asU8A: () => (/* binding */ asU8A),\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   decodeCodePointsArray: () => (/* binding */ decodeCodePointsArray),\n/* harmony export */   fromArray: () => (/* binding */ fromArray),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   useBuffer: () => (/* binding */ useBuffer)\n/* harmony export */ });\n// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nconst useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nfunction asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nconst toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nconst fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nconst fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nconst slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nconst concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nconst alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nconst toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nconst fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/byte-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnoughData: () => (/* binding */ assertEnoughData),\n/* harmony export */   decodeErrPrefix: () => (/* binding */ decodeErrPrefix),\n/* harmony export */   encodeErrPrefix: () => (/* binding */ encodeErrPrefix),\n/* harmony export */   uintMinorPrefixBytes: () => (/* binding */ uintMinorPrefixBytes)\n/* harmony export */ });\nconst decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBOztBQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanM/NTcxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWNvZGVFcnJQcmVmaXggPSAnQ0JPUiBkZWNvZGUgZXJyb3I6J1xuY29uc3QgZW5jb2RlRXJyUHJlZml4ID0gJ0NCT1IgZW5jb2RlIGVycm9yOidcblxuY29uc3QgdWludE1pbm9yUHJlZml4Qnl0ZXMgPSBbXVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjNdID0gMVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjRdID0gMlxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjVdID0gM1xudWludE1pbm9yUHJlZml4Qnl0ZXNbMjZdID0gNVxudWludE1pbm9yUHJlZml4Qnl0ZXNbMjddID0gOVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG5lZWRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0RW5vdWdoRGF0YSAoZGF0YSwgcG9zLCBuZWVkKSB7XG4gIGlmIChkYXRhLmxlbmd0aCAtIHBvcyA8IG5lZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBub3QgZW5vdWdoIGRhdGEgZm9yIHR5cGVgKVxuICB9XG59XG5cbmV4cG9ydCB7XG4gIGRlY29kZUVyclByZWZpeCxcbiAgZW5jb2RlRXJyUHJlZml4LFxuICB1aW50TWlub3JQcmVmaXhCeXRlcyxcbiAgYXNzZXJ0RW5vdWdoRGF0YVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/decode.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/decode.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokeniser: () => (/* binding */ Tokeniser),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   tokensToObject: () => (/* binding */ tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/jump.js\");\n\n\n\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = _jump_js__WEBPACK_IMPORTED_MODULE_2__.quick[byt]\n    if (token === undefined) {\n      const decoder = _jump_js__WEBPACK_IMPORTED_MODULE_2__.jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/encode.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/encode.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ref: () => (/* binding */ Ref),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeCustom: () => (/* binding */ encodeCustom),\n/* harmony export */   makeCborEncoders: () => (/* binding */ makeCborEncoders),\n/* harmony export */   objectToTokens: () => (/* binding */ objectToTokens)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/is.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _bl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bl.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/bl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/jump.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/7float.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_4__.quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nfunction makeCborEncoders () {\n  const encoders = []\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint.major] = _0uint_js__WEBPACK_IMPORTED_MODULE_6__.encodeUint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint.major] = _1negint_js__WEBPACK_IMPORTED_MODULE_7__.encodeNegint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes.major] = _2bytes_js__WEBPACK_IMPORTED_MODULE_8__.encodeBytes\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string.major] = _3string_js__WEBPACK_IMPORTED_MODULE_9__.encodeString\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array.major] = _4array_js__WEBPACK_IMPORTED_MODULE_10__.encodeArray\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map.major] = _5map_js__WEBPACK_IMPORTED_MODULE_11__.encodeMap\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag.major] = _6tag_js__WEBPACK_IMPORTED_MODULE_12__.encodeTag\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float.major] = _7float_js__WEBPACK_IMPORTED_MODULE_13__.encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null),\n  undefined: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.undefined, undefined),\n  true: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true),\n  false: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false),\n  emptyArray: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, 0),\n  emptyMap: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, obj)\n    } else if (obj >= 0) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.is)(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_5__.asU8A)(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9lbmNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QjtBQUNZO0FBQ1o7QUFDaUI7QUFDRDtBQUNMOztBQUVBO0FBQ0k7QUFDRjtBQUNFO0FBQ0Y7QUFDSjtBQUNBO0FBQ0k7O0FBRXpDO0FBQ0EsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSw0Q0FBNEM7QUFDekQsYUFBYSxrQ0FBa0M7QUFDL0MsYUFBYSwwQ0FBMEM7QUFDdkQsYUFBYSx5Q0FBeUM7QUFDdEQsYUFBYSw0Q0FBNEM7QUFDekQ7O0FBRUEsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjs7QUFFQSxjQUFjLG9CQUFvQjtBQUMzQjtBQUNQO0FBQ0EsV0FBVywyQ0FBSSxlQUFlLGlEQUFVO0FBQ3hDLFdBQVcsMkNBQUksaUJBQWlCLHFEQUFZO0FBQzVDLFdBQVcsMkNBQUksZ0JBQWdCLG1EQUFXO0FBQzFDLFdBQVcsMkNBQUksaUJBQWlCLHFEQUFZO0FBQzVDLFdBQVcsMkNBQUksZ0JBQWdCLG9EQUFXO0FBQzFDLFdBQVcsMkNBQUksY0FBYyxnREFBUztBQUN0QyxXQUFXLDJDQUFJLGNBQWMsZ0RBQVM7QUFDdEMsV0FBVywyQ0FBSSxnQkFBZ0Isb0RBQVc7QUFDMUM7QUFDQTs7QUFFQTs7QUFFQSxnQkFBZ0Isc0NBQUU7O0FBRWxCLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0IsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsY0FBYztBQUMzQixlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWUscUJBQXFCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDLGFBQWEsY0FBYztBQUMzQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVEQUFlLEVBQUU7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFZLDRDQUFLLENBQUMsMkNBQUk7QUFDdEIsaUJBQWlCLDRDQUFLLENBQUMsMkNBQUk7QUFDM0IsWUFBWSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3RCLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2QixrQkFBa0IsNENBQUssQ0FBQywyQ0FBSTtBQUM1QixnQkFBZ0IsNENBQUssQ0FBQywyQ0FBSTtBQUMxQjs7QUFFQSxZQUFZLHdDQUF3QztBQUNwRDtBQUNBO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUIsYUFBYSxXQUFXO0FBQ3hCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNENBQUssQ0FBQywyQ0FBSTtBQUMzQixNQUFNO0FBQ04saUJBQWlCLDRDQUFLLENBQUMsMkNBQUk7QUFDM0IsTUFBTTtBQUNOLGlCQUFpQiw0Q0FBSyxDQUFDLDJDQUFJO0FBQzNCO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckIsYUFBYSxlQUFlO0FBQzVCLGFBQWEsV0FBVztBQUN4QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRDQUFLLENBQUMsMkNBQUk7QUFDM0IsTUFBTTtBQUNOLGlCQUFpQiw0Q0FBSyxDQUFDLDJDQUFJO0FBQzNCO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckIsYUFBYSxlQUFlO0FBQzVCLGFBQWEsV0FBVztBQUN4QixlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWUsNENBQUssQ0FBQywyQ0FBSTtBQUN6QixHQUFHOztBQUVIO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUIsYUFBYSxXQUFXO0FBQ3hCLGVBQWU7QUFDZjtBQUNBO0FBQ0EsZUFBZSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3pCLEdBQUc7O0FBRUg7QUFDQSxhQUFhLEtBQUs7QUFDbEIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsZUFBZTtBQUM1QixhQUFhLFdBQVc7QUFDeEIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxhQUFhLEtBQUs7QUFDbEIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsZUFBZTtBQUM1QixhQUFhLFdBQVc7QUFDeEIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxhQUFhLEtBQUs7QUFDbEIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsZUFBZTtBQUM1QixhQUFhLFdBQVc7QUFDeEIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxhQUFhLEtBQUs7QUFDbEIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsZUFBZTtBQUM1QixhQUFhLFdBQVc7QUFDeEIsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlLDRDQUFLLENBQUMsMkNBQUk7QUFDekIsR0FBRzs7QUFFSDtBQUNBLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckIsYUFBYSxlQUFlO0FBQzVCLGFBQWEsV0FBVztBQUN4QixlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWUsNENBQUssQ0FBQywyQ0FBSTtBQUN6QixHQUFHOztBQUVIO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUIsYUFBYSxXQUFXO0FBQ3hCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDRDQUFLLENBQUMsMkNBQUksa0NBQWtDLDRDQUFLLENBQUMsMkNBQUk7QUFDeEU7QUFDQSxnQkFBZ0IsNENBQUssQ0FBQywyQ0FBSTtBQUMxQixHQUFHOztBQUVIO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUIsYUFBYSxXQUFXO0FBQ3hCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsNENBQUssQ0FBQywyQ0FBSTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdUJBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDRDQUFLLENBQUMsMkNBQUksNEJBQTRCLDRDQUFLLENBQUMsMkNBQUk7QUFDbEU7QUFDQSxnQkFBZ0IsNENBQUssQ0FBQywyQ0FBSTtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixJQUFJO0FBQ3RCOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLFdBQVcsZUFBZTtBQUMxQixXQUFXLFdBQVc7QUFDdEIsYUFBYTtBQUNiO0FBQ0EsMENBQTBDO0FBQzFDLGNBQWMsMENBQUU7QUFDaEIsMkVBQTJFLHFCQUFxQjtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUUsb0JBQW9CLElBQUk7QUFDaEU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCLFdBQVcsbUJBQW1CO0FBQzlCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxxQkFBcUI7QUFDaEMsV0FBVyxvQkFBb0I7QUFDL0IsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsV0FBVyxvQkFBb0I7QUFDL0IsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNDQUFFO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLFFBQVE7QUFDL0U7QUFDQSxhQUFhLHFEQUFLO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTs7QUFFb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliL2VuY29kZS5qcz85Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzIH0gZnJvbSAnLi9pcy5qcydcbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCB7IEJsIH0gZnJvbSAnLi9ibC5qcydcbmltcG9ydCB7IGVuY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuaW1wb3J0IHsgcXVpY2tFbmNvZGVUb2tlbiB9IGZyb20gJy4vanVtcC5qcydcbmltcG9ydCB7IGFzVThBIH0gZnJvbSAnLi9ieXRlLXV0aWxzLmpzJ1xuXG5pbXBvcnQgeyBlbmNvZGVVaW50IH0gZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGVuY29kZU5lZ2ludCB9IGZyb20gJy4vMW5lZ2ludC5qcydcbmltcG9ydCB7IGVuY29kZUJ5dGVzIH0gZnJvbSAnLi8yYnl0ZXMuanMnXG5pbXBvcnQgeyBlbmNvZGVTdHJpbmcgfSBmcm9tICcuLzNzdHJpbmcuanMnXG5pbXBvcnQgeyBlbmNvZGVBcnJheSB9IGZyb20gJy4vNGFycmF5LmpzJ1xuaW1wb3J0IHsgZW5jb2RlTWFwIH0gZnJvbSAnLi81bWFwLmpzJ1xuaW1wb3J0IHsgZW5jb2RlVGFnIH0gZnJvbSAnLi82dGFnLmpzJ1xuaW1wb3J0IHsgZW5jb2RlRmxvYXQgfSBmcm9tICcuLzdmbG9hdC5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5FbmNvZGVPcHRpb25zfSBFbmNvZGVPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5PcHRpb25hbFR5cGVFbmNvZGVyfSBPcHRpb25hbFR5cGVFbmNvZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5SZWZlcmVuY2V9IFJlZmVyZW5jZVxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuU3RyaWN0VHlwZUVuY29kZXJ9IFN0cmljdFR5cGVFbmNvZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5Ub2tlblR5cGVFbmNvZGVyfSBUb2tlblR5cGVFbmNvZGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5Ub2tlbk9yTmVzdGVkVG9rZW5zfSBUb2tlbk9yTmVzdGVkVG9rZW5zXG4gKi9cblxuLyoqIEB0eXBlIHtFbmNvZGVPcHRpb25zfSAqL1xuY29uc3QgZGVmYXVsdEVuY29kZU9wdGlvbnMgPSB7XG4gIGZsb2F0NjQ6IGZhbHNlLFxuICBtYXBTb3J0ZXIsXG4gIHF1aWNrRW5jb2RlVG9rZW5cbn1cblxuLyoqIEByZXR1cm5zIHtUb2tlblR5cGVFbmNvZGVyW119ICovXG5leHBvcnQgZnVuY3Rpb24gbWFrZUNib3JFbmNvZGVycyAoKSB7XG4gIGNvbnN0IGVuY29kZXJzID0gW11cbiAgZW5jb2RlcnNbVHlwZS51aW50Lm1ham9yXSA9IGVuY29kZVVpbnRcbiAgZW5jb2RlcnNbVHlwZS5uZWdpbnQubWFqb3JdID0gZW5jb2RlTmVnaW50XG4gIGVuY29kZXJzW1R5cGUuYnl0ZXMubWFqb3JdID0gZW5jb2RlQnl0ZXNcbiAgZW5jb2RlcnNbVHlwZS5zdHJpbmcubWFqb3JdID0gZW5jb2RlU3RyaW5nXG4gIGVuY29kZXJzW1R5cGUuYXJyYXkubWFqb3JdID0gZW5jb2RlQXJyYXlcbiAgZW5jb2RlcnNbVHlwZS5tYXAubWFqb3JdID0gZW5jb2RlTWFwXG4gIGVuY29kZXJzW1R5cGUudGFnLm1ham9yXSA9IGVuY29kZVRhZ1xuICBlbmNvZGVyc1tUeXBlLmZsb2F0Lm1ham9yXSA9IGVuY29kZUZsb2F0XG4gIHJldHVybiBlbmNvZGVyc1xufVxuXG5jb25zdCBjYm9yRW5jb2RlcnMgPSBtYWtlQ2JvckVuY29kZXJzKClcblxuY29uc3QgYnVmID0gbmV3IEJsKClcblxuLyoqIEBpbXBsZW1lbnRzIHtSZWZlcmVuY2V9ICovXG5jbGFzcyBSZWYge1xuICAvKipcbiAgICogQHBhcmFtIHtvYmplY3R8YW55W119IG9ialxuICAgKiBAcGFyYW0ge1JlZmVyZW5jZXx1bmRlZmluZWR9IHBhcmVudFxuICAgKi9cbiAgY29uc3RydWN0b3IgKG9iaiwgcGFyZW50KSB7XG4gICAgdGhpcy5vYmogPSBvYmpcbiAgICB0aGlzLnBhcmVudCA9IHBhcmVudFxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7b2JqZWN0fGFueVtdfSBvYmpcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBpbmNsdWRlcyAob2JqKSB7XG4gICAgLyoqIEB0eXBlIHtSZWZlcmVuY2V8dW5kZWZpbmVkfSAqL1xuICAgIGxldCBwID0gdGhpc1xuICAgIGRvIHtcbiAgICAgIGlmIChwLm9iaiA9PT0gb2JqKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfSB3aGlsZSAocCA9IHAucGFyZW50KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V8dW5kZWZpbmVkfSBzdGFja1xuICAgKiBAcGFyYW0ge29iamVjdHxhbnlbXX0gb2JqXG4gICAqIEByZXR1cm5zIHtSZWZlcmVuY2V9XG4gICAqL1xuICBzdGF0aWMgY3JlYXRlQ2hlY2sgKHN0YWNrLCBvYmopIHtcbiAgICBpZiAoc3RhY2sgJiYgc3RhY2suaW5jbHVkZXMob2JqKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2VuY29kZUVyclByZWZpeH0gb2JqZWN0IGNvbnRhaW5zIGNpcmN1bGFyIHJlZmVyZW5jZXNgKVxuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlZihvYmosIHN0YWNrKVxuICB9XG59XG5cbmNvbnN0IHNpbXBsZVRva2VucyA9IHtcbiAgbnVsbDogbmV3IFRva2VuKFR5cGUubnVsbCwgbnVsbCksXG4gIHVuZGVmaW5lZDogbmV3IFRva2VuKFR5cGUudW5kZWZpbmVkLCB1bmRlZmluZWQpLFxuICB0cnVlOiBuZXcgVG9rZW4oVHlwZS50cnVlLCB0cnVlKSxcbiAgZmFsc2U6IG5ldyBUb2tlbihUeXBlLmZhbHNlLCBmYWxzZSksXG4gIGVtcHR5QXJyYXk6IG5ldyBUb2tlbihUeXBlLmFycmF5LCAwKSxcbiAgZW1wdHlNYXA6IG5ldyBUb2tlbihUeXBlLm1hcCwgMClcbn1cblxuLyoqIEB0eXBlIHt7W3R5cGVOYW1lOiBzdHJpbmddOiBTdHJpY3RUeXBlRW5jb2Rlcn19ICovXG5jb25zdCB0eXBlRW5jb2RlcnMgPSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge2FueX0gb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBfdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gX29wdGlvbnNcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V9IFtfcmVmU3RhY2tdXG4gICAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICAgKi9cbiAgbnVtYmVyIChvYmosIF90eXAsIF9vcHRpb25zLCBfcmVmU3RhY2spIHtcbiAgICBpZiAoIU51bWJlci5pc0ludGVnZXIob2JqKSB8fCAhTnVtYmVyLmlzU2FmZUludGVnZXIob2JqKSkge1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmZsb2F0LCBvYmopXG4gICAgfSBlbHNlIGlmIChvYmogPj0gMCkge1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnVpbnQsIG9iailcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgb2JqKVxuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IG9ialxuICAgKiBAcGFyYW0ge3N0cmluZ30gX3R5cFxuICAgKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gICAqIEBwYXJhbSB7UmVmZXJlbmNlfSBbX3JlZlN0YWNrXVxuICAgKiBAcmV0dXJucyB7VG9rZW5Pck5lc3RlZFRva2Vuc31cbiAgICovXG4gIGJpZ2ludCAob2JqLCBfdHlwLCBfb3B0aW9ucywgX3JlZlN0YWNrKSB7XG4gICAgaWYgKG9iaiA+PSBCaWdJbnQoMCkpIHtcbiAgICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS51aW50LCBvYmopXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIG9iailcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7YW55fSBvYmpcbiAgICogQHBhcmFtIHtzdHJpbmd9IF90eXBcbiAgICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICAgKiBAcGFyYW0ge1JlZmVyZW5jZX0gW19yZWZTdGFja11cbiAgICogQHJldHVybnMge1Rva2VuT3JOZXN0ZWRUb2tlbnN9XG4gICAqL1xuICBVaW50OEFycmF5IChvYmosIF90eXAsIF9vcHRpb25zLCBfcmVmU3RhY2spIHtcbiAgICByZXR1cm4gbmV3IFRva2VuKFR5cGUuYnl0ZXMsIG9iailcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IG9ialxuICAgKiBAcGFyYW0ge3N0cmluZ30gX3R5cFxuICAgKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gICAqIEBwYXJhbSB7UmVmZXJlbmNlfSBbX3JlZlN0YWNrXVxuICAgKiBAcmV0dXJucyB7VG9rZW5Pck5lc3RlZFRva2Vuc31cbiAgICovXG4gIHN0cmluZyAob2JqLCBfdHlwLCBfb3B0aW9ucywgX3JlZlN0YWNrKSB7XG4gICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnN0cmluZywgb2JqKVxuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2FueX0gb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBfdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gX29wdGlvbnNcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V9IFtfcmVmU3RhY2tdXG4gICAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICAgKi9cbiAgYm9vbGVhbiAob2JqLCBfdHlwLCBfb3B0aW9ucywgX3JlZlN0YWNrKSB7XG4gICAgcmV0dXJuIG9iaiA/IHNpbXBsZVRva2Vucy50cnVlIDogc2ltcGxlVG9rZW5zLmZhbHNlXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7YW55fSBfb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBfdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gX29wdGlvbnNcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V9IFtfcmVmU3RhY2tdXG4gICAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICAgKi9cbiAgbnVsbCAoX29iaiwgX3R5cCwgX29wdGlvbnMsIF9yZWZTdGFjaykge1xuICAgIHJldHVybiBzaW1wbGVUb2tlbnMubnVsbFxuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2FueX0gX29ialxuICAgKiBAcGFyYW0ge3N0cmluZ30gX3R5cFxuICAgKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gICAqIEBwYXJhbSB7UmVmZXJlbmNlfSBbX3JlZlN0YWNrXVxuICAgKiBAcmV0dXJucyB7VG9rZW5Pck5lc3RlZFRva2Vuc31cbiAgICovXG4gIHVuZGVmaW5lZCAoX29iaiwgX3R5cCwgX29wdGlvbnMsIF9yZWZTdGFjaykge1xuICAgIHJldHVybiBzaW1wbGVUb2tlbnMudW5kZWZpbmVkXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7YW55fSBvYmpcbiAgICogQHBhcmFtIHtzdHJpbmd9IF90eXBcbiAgICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBfb3B0aW9uc1xuICAgKiBAcGFyYW0ge1JlZmVyZW5jZX0gW19yZWZTdGFja11cbiAgICogQHJldHVybnMge1Rva2VuT3JOZXN0ZWRUb2tlbnN9XG4gICAqL1xuICBBcnJheUJ1ZmZlciAob2JqLCBfdHlwLCBfb3B0aW9ucywgX3JlZlN0YWNrKSB7XG4gICAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLmJ5dGVzLCBuZXcgVWludDhBcnJheShvYmopKVxuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2FueX0gb2JqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBfdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gX29wdGlvbnNcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V9IFtfcmVmU3RhY2tdXG4gICAqIEByZXR1cm5zIHtUb2tlbk9yTmVzdGVkVG9rZW5zfVxuICAgKi9cbiAgRGF0YVZpZXcgKG9iaiwgX3R5cCwgX29wdGlvbnMsIF9yZWZTdGFjaykge1xuICAgIHJldHVybiBuZXcgVG9rZW4oVHlwZS5ieXRlcywgbmV3IFVpbnQ4QXJyYXkob2JqLmJ1ZmZlciwgb2JqLmJ5dGVPZmZzZXQsIG9iai5ieXRlTGVuZ3RoKSlcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IG9ialxuICAgKiBAcGFyYW0ge3N0cmluZ30gX3R5cFxuICAgKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtSZWZlcmVuY2V9IFtyZWZTdGFja11cbiAgICogQHJldHVybnMge1Rva2VuT3JOZXN0ZWRUb2tlbnN9XG4gICAqL1xuICBBcnJheSAob2JqLCBfdHlwLCBvcHRpb25zLCByZWZTdGFjaykge1xuICAgIGlmICghb2JqLmxlbmd0aCkge1xuICAgICAgaWYgKG9wdGlvbnMuYWRkQnJlYWtUb2tlbnMgPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIFtzaW1wbGVUb2tlbnMuZW1wdHlBcnJheSwgbmV3IFRva2VuKFR5cGUuYnJlYWspXVxuICAgICAgfVxuICAgICAgcmV0dXJuIHNpbXBsZVRva2Vucy5lbXB0eUFycmF5XG4gICAgfVxuICAgIHJlZlN0YWNrID0gUmVmLmNyZWF0ZUNoZWNrKHJlZlN0YWNrLCBvYmopXG4gICAgY29uc3QgZW50cmllcyA9IFtdXG4gICAgbGV0IGkgPSAwXG4gICAgZm9yIChjb25zdCBlIG9mIG9iaikge1xuICAgICAgZW50cmllc1tpKytdID0gb2JqZWN0VG9Ub2tlbnMoZSwgb3B0aW9ucywgcmVmU3RhY2spXG4gICAgfVxuICAgIGlmIChvcHRpb25zLmFkZEJyZWFrVG9rZW5zKSB7XG4gICAgICByZXR1cm4gW25ldyBUb2tlbihUeXBlLmFycmF5LCBvYmoubGVuZ3RoKSwgZW50cmllcywgbmV3IFRva2VuKFR5cGUuYnJlYWspXVxuICAgIH1cbiAgICByZXR1cm4gW25ldyBUb2tlbihUeXBlLmFycmF5LCBvYmoubGVuZ3RoKSwgZW50cmllc11cbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IG9ialxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwXG4gICAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1JlZmVyZW5jZX0gW3JlZlN0YWNrXVxuICAgKiBAcmV0dXJucyB7VG9rZW5Pck5lc3RlZFRva2Vuc31cbiAgICovXG4gIE9iamVjdCAob2JqLCB0eXAsIG9wdGlvbnMsIHJlZlN0YWNrKSB7XG4gICAgLy8gY291bGQgYmUgYW4gT2JqZWN0IG9yIGEgTWFwXG4gICAgY29uc3QgaXNNYXAgPSB0eXAgIT09ICdPYmplY3QnXG4gICAgLy8gaXQncyBzbGlnaHRseSBxdWlja2VyIHRvIHVzZSBPYmplY3Qua2V5cygpIHRoYW4gT2JqZWN0LmVudHJpZXMoKVxuICAgIGNvbnN0IGtleXMgPSBpc01hcCA/IG9iai5rZXlzKCkgOiBPYmplY3Qua2V5cyhvYmopXG4gICAgY29uc3QgbGVuZ3RoID0gaXNNYXAgPyBvYmouc2l6ZSA6IGtleXMubGVuZ3RoXG4gICAgaWYgKCFsZW5ndGgpIHtcbiAgICAgIGlmIChvcHRpb25zLmFkZEJyZWFrVG9rZW5zID09PSB0cnVlKSB7XG4gICAgICAgIHJldHVybiBbc2ltcGxlVG9rZW5zLmVtcHR5TWFwLCBuZXcgVG9rZW4oVHlwZS5icmVhayldXG4gICAgICB9XG4gICAgICByZXR1cm4gc2ltcGxlVG9rZW5zLmVtcHR5TWFwXG4gICAgfVxuICAgIHJlZlN0YWNrID0gUmVmLmNyZWF0ZUNoZWNrKHJlZlN0YWNrLCBvYmopXG4gICAgLyoqIEB0eXBlIHtUb2tlbk9yTmVzdGVkVG9rZW5zW119ICovXG4gICAgY29uc3QgZW50cmllcyA9IFtdXG4gICAgbGV0IGkgPSAwXG4gICAgZm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xuICAgICAgZW50cmllc1tpKytdID0gW1xuICAgICAgICBvYmplY3RUb1Rva2VucyhrZXksIG9wdGlvbnMsIHJlZlN0YWNrKSxcbiAgICAgICAgb2JqZWN0VG9Ub2tlbnMoaXNNYXAgPyBvYmouZ2V0KGtleSkgOiBvYmpba2V5XSwgb3B0aW9ucywgcmVmU3RhY2spXG4gICAgICBdXG4gICAgfVxuICAgIHNvcnRNYXBFbnRyaWVzKGVudHJpZXMsIG9wdGlvbnMpXG4gICAgaWYgKG9wdGlvbnMuYWRkQnJlYWtUb2tlbnMpIHtcbiAgICAgIHJldHVybiBbbmV3IFRva2VuKFR5cGUubWFwLCBsZW5ndGgpLCBlbnRyaWVzLCBuZXcgVG9rZW4oVHlwZS5icmVhayldXG4gICAgfVxuICAgIHJldHVybiBbbmV3IFRva2VuKFR5cGUubWFwLCBsZW5ndGgpLCBlbnRyaWVzXVxuICB9XG59XG5cbnR5cGVFbmNvZGVycy5NYXAgPSB0eXBlRW5jb2RlcnMuT2JqZWN0XG50eXBlRW5jb2RlcnMuQnVmZmVyID0gdHlwZUVuY29kZXJzLlVpbnQ4QXJyYXlcbmZvciAoY29uc3QgdHlwIG9mICdVaW50OENsYW1wZWQgVWludDE2IFVpbnQzMiBJbnQ4IEludDE2IEludDMyIEJpZ1VpbnQ2NCBCaWdJbnQ2NCBGbG9hdDMyIEZsb2F0NjQnLnNwbGl0KCcgJykpIHtcbiAgdHlwZUVuY29kZXJzW2Ake3R5cH1BcnJheWBdID0gdHlwZUVuY29kZXJzLkRhdGFWaWV3XG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IG9ialxuICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBbb3B0aW9uc11cbiAqIEBwYXJhbSB7UmVmZXJlbmNlfSBbcmVmU3RhY2tdXG4gKiBAcmV0dXJucyB7VG9rZW5Pck5lc3RlZFRva2Vuc31cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9Ub2tlbnMgKG9iaiwgb3B0aW9ucyA9IHt9LCByZWZTdGFjaykge1xuICBjb25zdCB0eXAgPSBpcyhvYmopXG4gIGNvbnN0IGN1c3RvbVR5cGVFbmNvZGVyID0gKG9wdGlvbnMgJiYgb3B0aW9ucy50eXBlRW5jb2RlcnMgJiYgLyoqIEB0eXBlIHtPcHRpb25hbFR5cGVFbmNvZGVyfSAqLyBvcHRpb25zLnR5cGVFbmNvZGVyc1t0eXBdKSB8fCB0eXBlRW5jb2RlcnNbdHlwXVxuICBpZiAodHlwZW9mIGN1c3RvbVR5cGVFbmNvZGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc3QgdG9rZW5zID0gY3VzdG9tVHlwZUVuY29kZXIob2JqLCB0eXAsIG9wdGlvbnMsIHJlZlN0YWNrKVxuICAgIGlmICh0b2tlbnMgIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHRva2Vuc1xuICAgIH1cbiAgfVxuICBjb25zdCB0eXBlRW5jb2RlciA9IHR5cGVFbmNvZGVyc1t0eXBdXG4gIGlmICghdHlwZUVuY29kZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZW5jb2RlRXJyUHJlZml4fSB1bnN1cHBvcnRlZCB0eXBlOiAke3R5cH1gKVxuICB9XG4gIHJldHVybiB0eXBlRW5jb2RlcihvYmosIHR5cCwgb3B0aW9ucywgcmVmU3RhY2spXG59XG5cbi8qXG5DQk9SIGtleSBzb3J0aW5nIGlzIGEgbWVzcy5cblxuVGhlIGNhbm9uaWNhbGlzYXRpb24gcmVjb21tZW5kYXRpb24gZnJvbSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzA0OSNzZWN0aW9uLTMuOVxuaW5jbHVkZXMgdGhlIHdvcmRpbmc6XG5cbj4gVGhlIGtleXMgaW4gZXZlcnkgbWFwIG11c3QgYmUgc29ydGVkIGxvd2VzdCB2YWx1ZSB0byBoaWdoZXN0LlxuPiBTb3J0aW5nIGlzIHBlcmZvcm1lZCBvbiB0aGUgYnl0ZXMgb2YgdGhlIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXlcbj4gZGF0YSBpdGVtcyB3aXRob3V0IHBheWluZyBhdHRlbnRpb24gdG8gdGhlIDMvNSBiaXQgc3BsaXR0aW5nIGZvclxuPiBtYWpvciB0eXBlcy5cbj4gLi4uXG4+ICAqICBJZiB0d28ga2V5cyBoYXZlIGRpZmZlcmVudCBsZW5ndGhzLCB0aGUgc2hvcnRlciBvbmUgc29ydHNcbiAgICAgIGVhcmxpZXI7XG4+ICAqICBJZiB0d28ga2V5cyBoYXZlIHRoZSBzYW1lIGxlbmd0aCwgdGhlIG9uZSB3aXRoIHRoZSBsb3dlciB2YWx1ZVxuICAgICAgaW4gKGJ5dGUtd2lzZSkgbGV4aWNhbCBvcmRlciBzb3J0cyBlYXJsaWVyLlxuXG4xLiBJdCBpcyBub3QgY2xlYXIgd2hhdCBcImJ5dGVzIG9mIHRoZSByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5XCIgbWVhbnM6IGlzIGl0XG4gICB0aGUgQ0JPUiByZXByZXNlbnRhdGlvbiwgb3IgdGhlIGJpbmFyeSByZXByZXNlbnRhdGlvbiBvZiB0aGUgb2JqZWN0IGl0c2VsZj9cbiAgIENvbnNpZGVyIHRoZSBpbnQgYW5kIHVpbnQgZGlmZmVyZW5jZSBoZXJlLlxuMi4gSXQgaXMgbm90IGNsZWFyIHdoYXQgXCJ3aXRob3V0IHBheWluZyBhdHRlbnRpb24gdG9cIiBtZWFuczogZG8gd2UgaW5jbHVkZSBpdFxuICAgYW5kIGNvbXBhcmUgb24gdGhhdD8gT3IgZG8gd2Ugb21pdCB0aGUgc3BlY2lhbCBwcmVmaXggYnl0ZSwgKG1vc3RseSkgdHJlYXRpbmdcbiAgIHRoZSBrZXkgaW4gaXRzIHBsYWluIGJpbmFyeSByZXByZXNlbnRhdGlvbiBmb3JtLlxuXG5UaGUgRklETyAyLjA6IENsaWVudCBUbyBBdXRoZW50aWNhdG9yIFByb3RvY29sIHNwZWMgdGFrZXMgdGhlIG9yaWdpbmFsIENCT1JcbndvcmRpbmcgYW5kIGNsYXJpZmllcyBpdCBhY2NvcmRpbmcgdG8gdGhlaXIgdW5kZXJzdGFuZGluZy5cbmh0dHBzOi8vZmlkb2FsbGlhbmNlLm9yZy9zcGVjcy9maWRvLXYyLjAtcmQtMjAxNzA5MjcvZmlkby1jbGllbnQtdG8tYXV0aGVudGljYXRvci1wcm90b2NvbC12Mi4wLXJkLTIwMTcwOTI3Lmh0bWwjbWVzc2FnZS1lbmNvZGluZ1xuXG4+IFRoZSBrZXlzIGluIGV2ZXJ5IG1hcCBtdXN0IGJlIHNvcnRlZCBsb3dlc3QgdmFsdWUgdG8gaGlnaGVzdC4gU29ydGluZyBpc1xuPiBwZXJmb3JtZWQgb24gdGhlIGJ5dGVzIG9mIHRoZSByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IGRhdGEgaXRlbXMgd2l0aG91dFxuPiBwYXlpbmcgYXR0ZW50aW9uIHRvIHRoZSAzLzUgYml0IHNwbGl0dGluZyBmb3IgbWFqb3IgdHlwZXMuIFRoZSBzb3J0aW5nIHJ1bGVzXG4+IGFyZTpcbj4gICogSWYgdGhlIG1ham9yIHR5cGVzIGFyZSBkaWZmZXJlbnQsIHRoZSBvbmUgd2l0aCB0aGUgbG93ZXIgdmFsdWUgaW4gbnVtZXJpY2FsXG4+ICAgIG9yZGVyIHNvcnRzIGVhcmxpZXIuXG4+ICAqIElmIHR3byBrZXlzIGhhdmUgZGlmZmVyZW50IGxlbmd0aHMsIHRoZSBzaG9ydGVyIG9uZSBzb3J0cyBlYXJsaWVyO1xuPiAgKiBJZiB0d28ga2V5cyBoYXZlIHRoZSBzYW1lIGxlbmd0aCwgdGhlIG9uZSB3aXRoIHRoZSBsb3dlciB2YWx1ZSBpblxuPiAgICAoYnl0ZS13aXNlKSBsZXhpY2FsIG9yZGVyIHNvcnRzIGVhcmxpZXIuXG5cblNvbWUgb3RoZXIgaW1wbGVtZW50YXRpb25zLCBzdWNoIGFzIGJvcmMsIGRvIGEgZnVsbCBlbmNvZGUgdGhlbiBkbyBhXG5sZW5ndGgtZmlyc3QsIGJ5dGUtd2lzZS1zZWNvbmQgY29tcGFyaXNvbjpcbmh0dHBzOi8vZ2l0aHViLmNvbS9kaWduaWZpZWRxdWlyZS9ib3JjL2Jsb2IvYjZiYWU4YjBiY2RlN2MzOTc2YjBmMGYwOTU3MjA4MDk1YzM5MmEzNi9zcmMvZW5jb2Rlci5qcyNMMzU4XG5odHRwczovL2dpdGh1Yi5jb20vZGlnbmlmaWVkcXVpcmUvYm9yYy9ibG9iL2I2YmFlOGIwYmNkZTdjMzk3NmIwZjBmMDk1NzIwODA5NWMzOTJhMzYvc3JjL3V0aWxzLmpzI0wxNDMtTDE1MVxuXG5UaGlzIGhhcyB0aGUgYmVuZWZpdCBvZiBiZWluZyBhYmxlIHRvIGVhc2lseSBoYW5kbGUgYXJiaXRyYXJ5IGtleXMsIGluY2x1ZGluZ1xuY29tcGxleCB0eXBlcyAobWFwcyBhbmQgYXJyYXlzKS5cblxuV2UnbGwgb3B0IGZvciB0aGUgRklETyBhcHByb2FjaCwgc2luY2UgaXQgYWZmb3JkcyBzb21lIGVmZmljaWVzIHNpbmNlIHdlIGRvbid0XG5uZWVkIGEgZnVsbCBlbmNvZGUgb2YgZWFjaCBrZXkgdG8gZGV0ZXJtaW5lIG9yZGVyIGFuZCBjYW4gZGVmZXIgdG8gdGhlIHR5cGVzXG50byBkZXRlcm1pbmUgaG93IHRvIG1vc3QgZWZmaWNpZW50bHkgb3JkZXIgdGhlaXIgdmFsdWVzIChpLmUuIGludCBhbmQgdWludFxub3JkZXJpbmcgY2FuIGJlIGRvbmUgb24gdGhlIG51bWJlcnMsIG5vIG5lZWQgZm9yIGJ5dGUtd2lzZSwgZm9yIGV4YW1wbGUpLlxuXG5SZWNvbW1lbmRhdGlvbjogc3RpY2sgdG8gc2luZ2xlIGtleSB0eXBlcyBvciB5b3UnbGwgZ2V0IGludG8gdHJvdWJsZSwgYW5kIHByZWZlclxuc3RyaW5nIGtleXMgYmVjYXVzZSBpdCdzIG11Y2ggc2ltcGxlciB0aGF0IHdheS5cbiovXG5cbi8qXG4oVVBEQVRFLCBEZWMgMjAyMClcbmh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM4OTQ5IGlzIHRoZSB1cGRhdGVkIENCT1Igc3BlYyBhbmQgY2xhcmlmaWVzIHNvbWVcbm9mIHRoZSBxdWVzdGlvbnMgYWJvdmUgd2l0aCBhIG5ldyByZWNvbW1lbmRhdGlvbiBmb3Igc29ydGluZyBvcmRlciBiZWluZyBtdWNoXG5jbG9zZXIgdG8gd2hhdCB3b3VsZCBiZSBleHBlY3RlZCBpbiBvdGhlciBlbnZpcm9ubWVudHMgKGkuZS4gbm8gbGVuZ3RoLWZpcnN0XG53ZWlyZG5lc3MpLlxuVGhpcyBuZXcgc29ydGluZyBvcmRlciBpcyBub3QgeWV0IGltcGxlbWVudGVkIGhlcmUgYnV0IGNvdWxkIGJlIGFkZGVkIGFzIGFuXG5vcHRpb24uIFwiRGV0ZXJtaW5pc21cIiAoY2Fub25pY2l0eSkgaXMgc3lzdGVtIGRlcGVuZGVudCBhbmQgaXQncyBkaWZmaWN1bHQgdG9cbmNoYW5nZSBleGlzdGluZyBzeXN0ZW1zIHRoYXQgYXJlIGJ1aWx0IHdpdGggZXhpc3RpbmcgZXhwZWN0YXRpb25zLiBTbyBpZiBhIG5ld1xub3JkZXJpbmcgaXMgaW50cm9kdWNlZCBoZXJlLCB0aGUgb2xkIG5lZWRzIHRvIGJlIGtlcHQgYXMgd2VsbCB3aXRoIHRoZSB1c2VyXG5oYXZpbmcgdGhlIG9wdGlvbi5cbiovXG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbk9yTmVzdGVkVG9rZW5zW119IGVudHJpZXNcbiAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gb3B0aW9uc1xuICovXG5mdW5jdGlvbiBzb3J0TWFwRW50cmllcyAoZW50cmllcywgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5tYXBTb3J0ZXIpIHtcbiAgICBlbnRyaWVzLnNvcnQob3B0aW9ucy5tYXBTb3J0ZXIpXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0geyhUb2tlbnxUb2tlbltdKVtdfSBlMVxuICogQHBhcmFtIHsoVG9rZW58VG9rZW5bXSlbXX0gZTJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIG1hcFNvcnRlciAoZTEsIGUyKSB7XG4gIC8vIHRoZSBrZXkgcG9zaXRpb24gKFswXSkgY291bGQgaGF2ZSBhIHNpbmdsZSB0b2tlbiBvciBhbiBhcnJheVxuICAvLyBhbG1vc3QgYWx3YXlzIGl0J2xsIGJlIGEgc2luZ2xlIHRva2VuIGJ1dCBjb21wbGV4IGtleSBtaWdodCBnZXQgaW52b2x2ZWRcbiAgLyogYzggaWdub3JlIG5leHQgMiAqL1xuICBjb25zdCBrZXlUb2tlbjEgPSBBcnJheS5pc0FycmF5KGUxWzBdKSA/IGUxWzBdWzBdIDogZTFbMF1cbiAgY29uc3Qga2V5VG9rZW4yID0gQXJyYXkuaXNBcnJheShlMlswXSkgPyBlMlswXVswXSA6IGUyWzBdXG5cbiAgLy8gZGlmZmVyZW50IGtleSB0eXBlc1xuICBpZiAoa2V5VG9rZW4xLnR5cGUgIT09IGtleVRva2VuMi50eXBlKSB7XG4gICAgcmV0dXJuIGtleVRva2VuMS50eXBlLmNvbXBhcmUoa2V5VG9rZW4yLnR5cGUpXG4gIH1cblxuICBjb25zdCBtYWpvciA9IGtleVRva2VuMS50eXBlLm1ham9yXG4gIC8vIFRPRE86IGhhbmRsZSBjYXNlIHdoZXJlIGNtcCA9PT0gMCBidXQgdGhlcmUgYXJlIG1vcmUga2V5VG9rZW4gZS4gY29tcGxleCB0eXBlKVxuICBjb25zdCB0Y21wID0gY2JvckVuY29kZXJzW21ham9yXS5jb21wYXJlVG9rZW5zKGtleVRva2VuMSwga2V5VG9rZW4yKVxuICAvKiBjOCBpZ25vcmUgbmV4dCA1ICovXG4gIGlmICh0Y21wID09PSAwKSB7XG4gICAgLy8gZHVwbGljYXRlIGtleSBvciBjb21wbGV4IHR5cGUgd2hlcmUgdGhlIGZpcnN0IHRva2VuIG1hdGNoZWQsXG4gICAgLy8gaS5lLiBhIG1hcCBvciBhcnJheSBhbmQgd2UncmUgb25seSBjb21wYXJpbmcgdGhlIG9wZW5pbmcgdG9rZW5cbiAgICBjb25zb2xlLndhcm4oJ1dBUk5JTkc6IGNvbXBsZXgga2V5IHR5cGVzIHVzZWQsIENCT1Iga2V5IHNvcnRpbmcgZ3VhcmFudGVlcyBhcmUgZ29uZScpXG4gIH1cbiAgcmV0dXJuIHRjbXBcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JsfSBidWZcbiAqIEBwYXJhbSB7VG9rZW5Pck5lc3RlZFRva2Vuc30gdG9rZW5zXG4gKiBAcGFyYW0ge1Rva2VuVHlwZUVuY29kZXJbXX0gZW5jb2RlcnNcbiAqIEBwYXJhbSB7RW5jb2RlT3B0aW9uc30gb3B0aW9uc1xuICovXG5mdW5jdGlvbiB0b2tlbnNUb0VuY29kZWQgKGJ1ZiwgdG9rZW5zLCBlbmNvZGVycywgb3B0aW9ucykge1xuICBpZiAoQXJyYXkuaXNBcnJheSh0b2tlbnMpKSB7XG4gICAgZm9yIChjb25zdCB0b2tlbiBvZiB0b2tlbnMpIHtcbiAgICAgIHRva2Vuc1RvRW5jb2RlZChidWYsIHRva2VuLCBlbmNvZGVycywgb3B0aW9ucylcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZW5jb2RlcnNbdG9rZW5zLnR5cGUubWFqb3JdKGJ1ZiwgdG9rZW5zLCBvcHRpb25zKVxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IGRhdGFcbiAqIEBwYXJhbSB7VG9rZW5UeXBlRW5jb2RlcltdfSBlbmNvZGVyc1xuICogQHBhcmFtIHtFbmNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQ3VzdG9tIChkYXRhLCBlbmNvZGVycywgb3B0aW9ucykge1xuICBjb25zdCB0b2tlbnMgPSBvYmplY3RUb1Rva2VucyhkYXRhLCBvcHRpb25zKVxuICBpZiAoIUFycmF5LmlzQXJyYXkodG9rZW5zKSAmJiBvcHRpb25zLnF1aWNrRW5jb2RlVG9rZW4pIHtcbiAgICBjb25zdCBxdWlja0J5dGVzID0gb3B0aW9ucy5xdWlja0VuY29kZVRva2VuKHRva2VucylcbiAgICBpZiAocXVpY2tCeXRlcykge1xuICAgICAgcmV0dXJuIHF1aWNrQnl0ZXNcbiAgICB9XG4gICAgY29uc3QgZW5jb2RlciA9IGVuY29kZXJzW3Rva2Vucy50eXBlLm1ham9yXVxuICAgIGlmIChlbmNvZGVyLmVuY29kZWRTaXplKSB7XG4gICAgICBjb25zdCBzaXplID0gZW5jb2Rlci5lbmNvZGVkU2l6ZSh0b2tlbnMsIG9wdGlvbnMpXG4gICAgICBjb25zdCBidWYgPSBuZXcgQmwoc2l6ZSlcbiAgICAgIGVuY29kZXIoYnVmLCB0b2tlbnMsIG9wdGlvbnMpXG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gICAgICAvLyB0aGlzIHdvdWxkIGJlIGEgcHJvYmxlbSB3aXRoIGVuY29kZWRTaXplKCkgZnVuY3Rpb25zXG4gICAgICBpZiAoYnVmLmNodW5rcy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIGVycm9yOiBwcmUtY2FsY3VsYXRlZCBsZW5ndGggZm9yICR7dG9rZW5zfSB3YXMgd3JvbmdgKVxuICAgICAgfVxuICAgICAgcmV0dXJuIGFzVThBKGJ1Zi5jaHVua3NbMF0pXG4gICAgfVxuICB9XG4gIGJ1Zi5yZXNldCgpXG4gIHRva2Vuc1RvRW5jb2RlZChidWYsIHRva2VucywgZW5jb2RlcnMsIG9wdGlvbnMpXG4gIHJldHVybiBidWYudG9CeXRlcyh0cnVlKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBkYXRhXG4gKiBAcGFyYW0ge0VuY29kZU9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZSAoZGF0YSwgb3B0aW9ucykge1xuICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdEVuY29kZU9wdGlvbnMsIG9wdGlvbnMpXG4gIHJldHVybiBlbmNvZGVDdXN0b20oZGF0YSwgY2JvckVuY29kZXJzLCBvcHRpb25zKVxufVxuXG5leHBvcnQgeyBvYmplY3RUb1Rva2VucywgZW5jb2RlLCBlbmNvZGVDdXN0b20sIFJlZiB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/is.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/is.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   is: () => (/* binding */ is)\n/* harmony export */ });\n// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nfunction is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcz80NDY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaXMgYW4gdW5mb3J0dW5hdGUgcmVwbGFjZW1lbnQgZm9yIEBzaW5kcmVzb3JodXMvaXMgdGhhdCB3ZSBuZWVkIHRvXG4vLyByZS1pbXBsZW1lbnQgZm9yIHBlcmZvcm1hbmNlIHB1cnBvc2VzLiBJbiBwYXJ0aWN1bGFyIHRoZSBpcy5vYnNlcnZhYmxlKClcbi8vIGNoZWNrIGlzIGV4cGVuc2l2ZSwgYW5kIHVubmVjZXNzYXJ5IGZvciBvdXIgcHVycG9zZXMuIFRoZSB2YWx1ZXMgcmV0dXJuZWRcbi8vIGFyZSBjb21wYXRpYmxlIHdpdGggQHNpbmRyZXNvcmh1cy9pcywgaG93ZXZlci5cblxuY29uc3QgdHlwZW9mcyA9IFtcbiAgJ3N0cmluZycsXG4gICdudW1iZXInLFxuICAnYmlnaW50JyxcbiAgJ3N5bWJvbCdcbl1cblxuY29uc3Qgb2JqZWN0VHlwZU5hbWVzID0gW1xuICAnRnVuY3Rpb24nLFxuICAnR2VuZXJhdG9yJyxcbiAgJ0FzeW5jR2VuZXJhdG9yJyxcbiAgJ0dlbmVyYXRvckZ1bmN0aW9uJyxcbiAgJ0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24nLFxuICAnQXN5bmNGdW5jdGlvbicsXG4gICdPYnNlcnZhYmxlJyxcbiAgJ0FycmF5JyxcbiAgJ0J1ZmZlcicsXG4gICdPYmplY3QnLFxuICAnUmVnRXhwJyxcbiAgJ0RhdGUnLFxuICAnRXJyb3InLFxuICAnTWFwJyxcbiAgJ1NldCcsXG4gICdXZWFrTWFwJyxcbiAgJ1dlYWtTZXQnLFxuICAnQXJyYXlCdWZmZXInLFxuICAnU2hhcmVkQXJyYXlCdWZmZXInLFxuICAnRGF0YVZpZXcnLFxuICAnUHJvbWlzZScsXG4gICdVUkwnLFxuICAnSFRNTEVsZW1lbnQnLFxuICAnSW50OEFycmF5JyxcbiAgJ1VpbnQ4QXJyYXknLFxuICAnVWludDhDbGFtcGVkQXJyYXknLFxuICAnSW50MTZBcnJheScsXG4gICdVaW50MTZBcnJheScsXG4gICdJbnQzMkFycmF5JyxcbiAgJ1VpbnQzMkFycmF5JyxcbiAgJ0Zsb2F0MzJBcnJheScsXG4gICdGbG9hdDY0QXJyYXknLFxuICAnQmlnSW50NjRBcnJheScsXG4gICdCaWdVaW50NjRBcnJheSdcbl1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpcyAodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuICdudWxsJ1xuICB9XG4gIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuICd1bmRlZmluZWQnXG4gIH1cbiAgaWYgKHZhbHVlID09PSB0cnVlIHx8IHZhbHVlID09PSBmYWxzZSkge1xuICAgIHJldHVybiAnYm9vbGVhbidcbiAgfVxuICBjb25zdCB0eXBlT2YgPSB0eXBlb2YgdmFsdWVcbiAgaWYgKHR5cGVvZnMuaW5jbHVkZXModHlwZU9mKSkge1xuICAgIHJldHVybiB0eXBlT2ZcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCA0ICovXG4gIC8vIG5vdCBnb2luZyB0byBib3RoZXIgdGVzdGluZyB0aGlzLCBpdCdzIG5vdCBnb2luZyB0byBiZSB2YWxpZCBhbnl3YXlcbiAgaWYgKHR5cGVPZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiAnRnVuY3Rpb24nXG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuICdBcnJheSdcbiAgfVxuICBpZiAoaXNCdWZmZXIodmFsdWUpKSB7XG4gICAgcmV0dXJuICdCdWZmZXInXG4gIH1cbiAgY29uc3Qgb2JqZWN0VHlwZSA9IGdldE9iamVjdFR5cGUodmFsdWUpXG4gIGlmIChvYmplY3RUeXBlKSB7XG4gICAgcmV0dXJuIG9iamVjdFR5cGVcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gJ09iamVjdCdcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc0J1ZmZlciAodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yICYmIHZhbHVlLmNvbnN0cnVjdG9yLmlzQnVmZmVyICYmIHZhbHVlLmNvbnN0cnVjdG9yLmlzQnVmZmVyLmNhbGwobnVsbCwgdmFsdWUpXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJucyB7c3RyaW5nfHVuZGVmaW5lZH1cbiAqL1xuZnVuY3Rpb24gZ2V0T2JqZWN0VHlwZSAodmFsdWUpIHtcbiAgY29uc3Qgb2JqZWN0VHlwZU5hbWUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLnNsaWNlKDgsIC0xKVxuICBpZiAob2JqZWN0VHlwZU5hbWVzLmluY2x1ZGVzKG9iamVjdFR5cGVOYW1lKSkge1xuICAgIHJldHVybiBvYmplY3RUeXBlTmFtZVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiB1bmRlZmluZWRcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/jump.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/jump.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jump: () => (/* binding */ jump),\n/* harmony export */   quick: () => (/* binding */ quick),\n/* harmony export */   quickEncodeToken: () => (/* binding */ quickEncodeToken)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/7float.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nconst jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytesCompact\n}\njump[0x58] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeStringCompact\n}\njump[0x78] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayCompact\n}\njump[0x98] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapCompact\n}\njump[0xb8] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTagCompact\n}\njump[0xd8] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag8\njump[0xd9] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag16\njump[0xda] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag32\njump[0xdb] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nconst quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, '', 1)\n// empty list\nquick[0x80] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, 0, 1)\n// empty map\nquick[0xa0] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, 0, 1)\n// false\nquick[0xf4] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false, false, 1)\n// true\nquick[0xf5] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true, true, 1)\n// null\nquick[0xf6] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nfunction quickEncodeToken (token) {\n  switch (token.type) {\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf4])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf5])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf6])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes:\n      if (!token.value.length) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x40])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string:\n      if (token.value === '') {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x60])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint:\n      if (token.value < 24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([Number(token.value)])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint:\n      if (token.value >= -24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([31 - Number(token.value)])\n      }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/jump.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\nclass Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi90b2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLFdBQVcsSUFBSSxVQUFVO0FBQzVDOztBQUVBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQSxlQUFlLHNCQUFzQjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVSxJQUFJLFdBQVc7QUFDN0M7QUFDQTs7QUFFc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvY2JvcmcvbGliL3Rva2VuLmpzP2QyNjgiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVHlwZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gbWFqb3JcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtib29sZWFufSB0ZXJtaW5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IgKG1ham9yLCBuYW1lLCB0ZXJtaW5hbCkge1xuICAgIHRoaXMubWFqb3IgPSBtYWpvclxuICAgIHRoaXMubWFqb3JFbmNvZGVkID0gbWFqb3IgPDwgNVxuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLnRlcm1pbmFsID0gdGVybWluYWxcbiAgfVxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIHJldHVybiBgVHlwZVske3RoaXMubWFqb3J9XS4ke3RoaXMubmFtZX1gXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtUeXBlfSB0eXBcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGNvbXBhcmUgKHR5cCkge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDEgKi9cbiAgICByZXR1cm4gdGhpcy5tYWpvciA8IHR5cC5tYWpvciA/IC0xIDogdGhpcy5tYWpvciA+IHR5cC5tYWpvciA/IDEgOiAwXG4gIH1cbn1cblxuLy8gY29udmVydCB0byBzdGF0aWMgZmllbGRzIHdoZW4gYmV0dGVyIHN1cHBvcnRlZFxuVHlwZS51aW50ID0gbmV3IFR5cGUoMCwgJ3VpbnQnLCB0cnVlKVxuVHlwZS5uZWdpbnQgPSBuZXcgVHlwZSgxLCAnbmVnaW50JywgdHJ1ZSlcblR5cGUuYnl0ZXMgPSBuZXcgVHlwZSgyLCAnYnl0ZXMnLCB0cnVlKVxuVHlwZS5zdHJpbmcgPSBuZXcgVHlwZSgzLCAnc3RyaW5nJywgdHJ1ZSlcblR5cGUuYXJyYXkgPSBuZXcgVHlwZSg0LCAnYXJyYXknLCBmYWxzZSlcblR5cGUubWFwID0gbmV3IFR5cGUoNSwgJ21hcCcsIGZhbHNlKVxuVHlwZS50YWcgPSBuZXcgVHlwZSg2LCAndGFnJywgZmFsc2UpIC8vIHRlcm1pbmFsP1xuVHlwZS5mbG9hdCA9IG5ldyBUeXBlKDcsICdmbG9hdCcsIHRydWUpXG5UeXBlLmZhbHNlID0gbmV3IFR5cGUoNywgJ2ZhbHNlJywgdHJ1ZSlcblR5cGUudHJ1ZSA9IG5ldyBUeXBlKDcsICd0cnVlJywgdHJ1ZSlcblR5cGUubnVsbCA9IG5ldyBUeXBlKDcsICdudWxsJywgdHJ1ZSlcblR5cGUudW5kZWZpbmVkID0gbmV3IFR5cGUoNywgJ3VuZGVmaW5lZCcsIHRydWUpXG5UeXBlLmJyZWFrID0gbmV3IFR5cGUoNywgJ2JyZWFrJywgdHJ1ZSlcbi8vIFR5cGUuaW5kZWZpbml0ZUxlbmd0aCA9IG5ldyBUeXBlKDAsICdpbmRlZmluaXRlTGVuZ3RoJywgdHJ1ZSlcblxuY2xhc3MgVG9rZW4ge1xuICAvKipcbiAgICogQHBhcmFtIHtUeXBlfSB0eXBlXG4gICAqIEBwYXJhbSB7YW55fSBbdmFsdWVdXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbZW5jb2RlZExlbmd0aF1cbiAgICovXG4gIGNvbnN0cnVjdG9yICh0eXBlLCB2YWx1ZSwgZW5jb2RlZExlbmd0aCkge1xuICAgIHRoaXMudHlwZSA9IHR5cGVcbiAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgICB0aGlzLmVuY29kZWRMZW5ndGggPSBlbmNvZGVkTGVuZ3RoXG4gICAgLyoqIEB0eXBlIHtVaW50OEFycmF5fHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmVuY29kZWRCeXRlcyA9IHVuZGVmaW5lZFxuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXx1bmRlZmluZWR9ICovXG4gICAgdGhpcy5ieXRlVmFsdWUgPSB1bmRlZmluZWRcbiAgfVxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIHJldHVybiBgVG9rZW5bJHt0aGlzLnR5cGV9XS4ke3RoaXMudmFsdWV9YFxuICB9XG59XG5cbmV4cG9ydCB7IFR5cGUsIFRva2VuIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/cborg/lib/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base32.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base32.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFvQztBQUM3QixlQUFlLGlEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQixpREFBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLGtCQUFrQixpREFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSx1QkFBdUIsaURBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLGlEQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLDBCQUEwQixpREFBTztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxnQkFBZ0IsaURBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzMi5qcz81YmEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2InLFxuICAgIG5hbWU6ICdiYXNlMzInLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0InLFxuICAgIG5hbWU6ICdiYXNlMzJ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWQnLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdDJyxcbiAgICBuYW1lOiAnYmFzZTMycGFkdXBwZXInLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dicsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1QnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXhwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ6ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnaCcsXG4gICAgbmFtZTogJ2Jhc2UzMnonLFxuICAgIGFscGhhYmV0OiAneWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjknLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base36.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base36.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGVBQWUsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQiwrQ0FBSztBQUNoQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzNi5qcz80M2M1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzYgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnaycsXG4gICAgbmFtZTogJ2Jhc2UzNicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzZ1cHBlciA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdLJyxcbiAgICBuYW1lOiAnYmFzZTM2dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMzYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base58.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base58.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCLGtCQUFrQiwrQ0FBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLCtDQUFLO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzPzc0Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgICBwcmVmaXg6ICd6JyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gICAgbmFtZTogJ2Jhc2U1OGZsaWNrcicsXG4gICAgcHJlZml4OiAnWicsXG4gICAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNTguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base64.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base64.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'm',\n    name: 'base64',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'M',\n    name: 'base64pad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'u',\n    name: 'base64url',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'U',\n    name: 'base64urlpad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n    bitsPerChar: 6\n});\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTY0LmpzPzg2ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTY0ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnbScsXG4gICAgbmFtZTogJ2Jhc2U2NCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJyxcbiAgICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnTScsXG4gICAgbmFtZTogJ2Jhc2U2NHBhZCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPScsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ3UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmwnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXycsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybHBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmxwYWQnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXz0nLFxuICAgIGJpdHNQZXJDaGFyOiA2XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/interface.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/interface.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanM/MWE0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlIGVuY29kZXJzIC8gZGVjb2RlcnMganVzdCBiYXNlIGVuY29kZSAvIGRlY29kZSBiZXR3ZWVuIGJpbmFyeSBhbmRcbi8vIHRleHR1YWwgcmVwcmVzZW50YXRpb24uIFRoZXkgYXJlIHVuYXdhcmUgb2YgbXVsdGliYXNlLlxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/block/interface.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/block/interface.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ibG9jay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jsb2NrL2ludGVyZmFjZS5qcz9mMTdkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixvQkFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2J5dGVzLmpzP2E3NWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVtcHR5ID0gbmV3IFVpbnQ4QXJyYXkoMCk7XG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoZCkge1xuICAgIHJldHVybiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChoZXgpIHtcbiAgICBjb25zdCBoZXhlcyA9IGhleC5tYXRjaCgvLi4vZyk7XG4gICAgcmV0dXJuIGhleGVzICE9IG51bGwgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhYSwgYmIpIHtcbiAgICBpZiAoYWEgPT09IGJiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoYWEuYnl0ZUxlbmd0aCAhPT0gYmIuYnl0ZUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGlpID0gMDsgaWkgPCBhYS5ieXRlTGVuZ3RoOyBpaSsrKSB7XG4gICAgICAgIGlmIChhYVtpaV0gIT09IGJiW2lpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvZXJjZShvKSB7XG4gICAgaWYgKG8gaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIG8uY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKSB7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH1cbiAgICBpZiAobyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvKTtcbiAgICB9XG4gICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhvKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0JpbmFyeShvKSB7XG4gICAgcmV0dXJuIG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcobyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbVN0cmluZyhzdHIpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYikge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/cid.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/cid.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/interface.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzPzE4NGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/raw.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/raw.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js\");\n\nconst name = 'raw';\nconst code = 0x55;\nfunction encode(node) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\n}\nfunction decode(data) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n}\n//# sourceMappingURL=raw.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvcmF3LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFDO0FBQzlCO0FBQ0E7QUFDQTtBQUNQLFdBQVcsaURBQU07QUFDakI7QUFDTztBQUNQLFdBQVcsaURBQU07QUFDakI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL3Jhdy5qcz85YTg0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmV4cG9ydCBjb25zdCBuYW1lID0gJ3Jhdyc7XG5leHBvcnQgY29uc3QgY29kZSA9IDB4NTU7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKG5vZGUpIHtcbiAgICByZXR1cm4gY29lcmNlKG5vZGUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhKSB7XG4gICAgcmV0dXJuIGNvZXJjZShkYXRhKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhdy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/digest.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkQ7QUFDcEI7QUFDdkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHVCQUF1QixzREFBcUI7QUFDNUMsc0NBQXNDLHNEQUFxQjtBQUMzRDtBQUNBLElBQUksZ0RBQWU7QUFDbkIsSUFBSSxnREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQixpREFBTTtBQUN4QiwrQkFBK0IsOENBQWE7QUFDNUMsaUNBQWlDLDhDQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9kaWdlc3QuanM/ODM4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UsIGVxdWFscyBhcyBlcXVhbEJ5dGVzIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgdmFyaW50IGZyb20gJy4uL3ZhcmludC5qcyc7XG4vKipcbiAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgICBjb25zdCBzaXplT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGNvZGUpO1xuICAgIGNvbnN0IGRpZ2VzdE9mZnNldCA9IHNpemVPZmZzZXQgKyB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoc2l6ZSk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgYnl0ZXMsIDApO1xuICAgIHZhcmludC5lbmNvZGVUbyhzaXplLCBieXRlcywgc2l6ZU9mZnNldCk7XG4gICAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKTtcbn1cbi8qKlxuICogVHVybnMgYnl0ZXMgcmVwcmVzZW50YXRpb24gb2YgbXVsdGloYXNoIGRpZ2VzdCBpbnRvIGFuIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKG11bHRpaGFzaCkge1xuICAgIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gICAgY29uc3QgW2NvZGUsIHNpemVPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcyk7XG4gICAgY29uc3QgW3NpemUsIGRpZ2VzdE9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQpKTtcbiAgICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgICBpZiAoZGlnZXN0LmJ5dGVMZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBkYXRhID0gYjtcbiAgICAgICAgcmV0dXJuIChhLmNvZGUgPT09IGRhdGEuY29kZSAmJlxuICAgICAgICAgICAgYS5zaXplID09PSBkYXRhLnNpemUgJiZcbiAgICAgICAgICAgIGRhdGEuYnl0ZXMgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmXG4gICAgICAgICAgICBlcXVhbEJ5dGVzKGEuYnl0ZXMsIGRhdGEuYnl0ZXMpKTtcbiAgICB9XG59XG4vKipcbiAqIFJlcHJlc2VudHMgYSBtdWx0aWhhc2ggZGlnZXN0IHdoaWNoIGNhcnJpZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlXG4gKiBoYXNoaW5nIGFsZ29yaXRobSBhbmQgYW4gYWN0dWFsIGhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgICBjb2RlO1xuICAgIHNpemU7XG4gICAgZGlnZXN0O1xuICAgIGJ5dGVzO1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBkaWdlc3Q7XG4gICAgICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgICB9XG59XG4vKipcbiAqIFVzZWQgdG8gY2hlY2sgdGhhdCB0aGUgcGFzc2VkIG11bHRpaGFzaCBoYXMgdGhlIHBhc3NlZCBjb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNDb2RlKGRpZ2VzdCwgY29kZSkge1xuICAgIHJldHVybiBkaWdlc3QuY29kZSA9PT0gY29kZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpZ2VzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaGFzaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUN0QztBQUNPLGdCQUFnQixzREFBc0Q7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RkFBNkYscUJBQXFCO0FBQ2xIO0FBQ0E7QUFDQSwwRkFBMEYscUJBQXFCO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGtCQUFrQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSxXQUFXLDhDQUFhO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9oYXNoZXIuanM/ZjQ3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSCA9IDIwO1xuZXhwb3J0IGZ1bmN0aW9uIGZyb20oeyBuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoIH0pIHtcbiAgICByZXR1cm4gbmV3IEhhc2hlcihuYW1lLCBjb2RlLCBlbmNvZGUsIG1pbkRpZ2VzdExlbmd0aCwgbWF4RGlnZXN0TGVuZ3RoKTtcbn1cbi8qKlxuICogSGFzaGVyIHJlcHJlc2VudHMgYSBoYXNoaW5nIGFsZ29yaXRobSBpbXBsZW1lbnRhdGlvbiB0aGF0IHByb2R1Y2VzIGFzXG4gKiBgTXVsdGloYXNoRGlnZXN0YC5cbiAqL1xuZXhwb3J0IGNsYXNzIEhhc2hlciB7XG4gICAgbmFtZTtcbiAgICBjb2RlO1xuICAgIGVuY29kZTtcbiAgICBtaW5EaWdlc3RMZW5ndGg7XG4gICAgbWF4RGlnZXN0TGVuZ3RoO1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5lbmNvZGUgPSBlbmNvZGU7XG4gICAgICAgIHRoaXMubWluRGlnZXN0TGVuZ3RoID0gbWluRGlnZXN0TGVuZ3RoID8/IERFRkFVTFRfTUlOX0RJR0VTVF9MRU5HVEg7XG4gICAgICAgIHRoaXMubWF4RGlnZXN0TGVuZ3RoID0gbWF4RGlnZXN0TGVuZ3RoO1xuICAgIH1cbiAgICBkaWdlc3QoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnM/LnRydW5jYXRlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnRydW5jYXRlIDwgdGhpcy5taW5EaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWluRGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubWF4RGlnZXN0TGVuZ3RoICE9IG51bGwgJiYgb3B0aW9ucy50cnVuY2F0ZSA+IHRoaXMubWF4RGlnZXN0TGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHRydW5jYXRlIG9wdGlvbiwgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHt0aGlzLm1heERpZ2VzdExlbmd0aH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmVuY29kZShpbnB1dCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVEaWdlc3QocmVzdWx0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQudGhlbihkaWdlc3QgPT4gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgdGhpcy5jb2RlLCBvcHRpb25zPy50cnVuY2F0ZSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgICAgICB9XG4gICAgfVxufVxuLyoqXG4gKiBDcmVhdGUgYSBEaWdlc3QgZnJvbSB0aGUgcGFzc2VkIHVpbnQ4YXJyYXkgYW5kIGNvZGUsIG9wdGlvbmFsbHkgdHJ1bmNhdGluZyBpdFxuICogZmlyc3QuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURpZ2VzdChkaWdlc3QsIGNvZGUsIHRydW5jYXRlKSB7XG4gICAgaWYgKHRydW5jYXRlICE9IG51bGwgJiYgdHJ1bmNhdGUgIT09IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmICh0cnVuY2F0ZSA+IGRpZ2VzdC5ieXRlTGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke2RpZ2VzdC5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIGRpZ2VzdCA9IGRpZ2VzdC5zdWJhcnJheSgwLCB0cnVuY2F0ZSk7XG4gICAgfVxuICAgIHJldHVybiBEaWdlc3QuY3JlYXRlKGNvZGUsIGRpZ2VzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/identity.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/identity.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/digest.js\");\n\n\nconst code = 0x0;\nconst name = 'identity';\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nfunction digest(input, options) {\n    if (options?.truncate != null && options.truncate !== input.byteLength) {\n        if (options.truncate < 0 || options.truncate > input.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${input.byteLength}`);\n        }\n        input = input.subarray(0, options.truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\n}\nconst identity = { code, name, encode, digest };\n//# sourceMappingURL=identity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaWRlbnRpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFDdEM7QUFDQTtBQUNBLGVBQWUsNkNBQU07QUFDckI7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGlCQUFpQjtBQUN2RztBQUNBO0FBQ0E7QUFDQSxXQUFXLDhDQUFhO0FBQ3hCO0FBQ08sbUJBQW1CO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaWRlbnRpdHkuanM/MWE5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgY29kZSA9IDB4MDtcbmNvbnN0IG5hbWUgPSAnaWRlbnRpdHknO1xuY29uc3QgZW5jb2RlID0gY29lcmNlO1xuZnVuY3Rpb24gZGlnZXN0KGlucHV0LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnM/LnRydW5jYXRlICE9IG51bGwgJiYgb3B0aW9ucy50cnVuY2F0ZSAhPT0gaW5wdXQuYnl0ZUxlbmd0aCkge1xuICAgICAgICBpZiAob3B0aW9ucy50cnVuY2F0ZSA8IDAgfHwgb3B0aW9ucy50cnVuY2F0ZSA+IGlucHV0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7aW5wdXQuYnl0ZUxlbmd0aH1gKTtcbiAgICAgICAgfVxuICAgICAgICBpbnB1dCA9IGlucHV0LnN1YmFycmF5KDAsIG9wdGlvbnMudHJ1bmNhdGUpO1xuICAgIH1cbiAgICByZXR1cm4gRGlnZXN0LmNyZWF0ZShjb2RlLCBlbmNvZGUoaW5wdXQpKTtcbn1cbmV4cG9ydCBjb25zdCBpZGVudGl0eSA9IHsgY29kZSwgbmFtZSwgZW5jb2RlLCBkaWdlc3QgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlkZW50aXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/interface.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pbnRlcmZhY2UuanM/ZjU3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjIE11bHRpaGFzaFxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/sha2.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/sha2.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/hasher.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: (input) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256').update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: input => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha512').update(input).digest())\n});\n//# sourceMappingURL=sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvc2hhMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0QjtBQUNTO0FBQ0Y7QUFDNUIsZUFBZSxnREFBSTtBQUMxQjtBQUNBO0FBQ0EsdUJBQXVCLGlEQUFNLENBQUMsOENBQWlCO0FBQy9DLENBQUM7QUFDTSxlQUFlLGdEQUFJO0FBQzFCO0FBQ0E7QUFDQSxxQkFBcUIsaURBQU0sQ0FBQyw4Q0FBaUI7QUFDN0MsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvc2hhMi5qcz82ODFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbmltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCB7IGZyb20gfSBmcm9tICcuL2hhc2hlci5qcyc7XG5leHBvcnQgY29uc3Qgc2hhMjU2ID0gZnJvbSh7XG4gICAgbmFtZTogJ3NoYTItMjU2JyxcbiAgICBjb2RlOiAweDEyLFxuICAgIGVuY29kZTogKGlucHV0KSA9PiBjb2VyY2UoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG59KTtcbmV4cG9ydCBjb25zdCBzaGE1MTIgPSBmcm9tKHtcbiAgICBuYW1lOiAnc2hhMi01MTInLFxuICAgIGNvZGU6IDB4MTMsXG4gICAgZW5jb2RlOiBpbnB1dCA9PiBjb2VyY2UoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTUxMicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE1BQU07QUFDbEI7QUFDQSxZQUFZLFNBQVM7QUFDckI7QUFDQSwrQkFBK0IsZ0JBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0Esb0NBQW9DLHNCQUFzQjtBQUMxRDtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxtQ0FBbUM7QUFDbkU7QUFDQTtBQUNBLGdDQUFnQyxtREFBbUQ7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw2QkFBNkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0Esa0RBQWtELGdCQUFnQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsc0NBQXNDLHNCQUFzQjtBQUM1RCxXQUFXLE1BQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw4QkFBOEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29DO0FBQ0w7QUFDYztBQUNBO0FBQ1A7QUFDdEM7QUFDK0I7QUFDZTtBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW5kZXguanM/YzhjZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxuICpcbiAqIFRoaXMgbGlicmFyeSBkZWZpbmVzIGNvbW1vbiBpbnRlcmZhY2VzIGFuZCBsb3cgbGV2ZWwgYnVpbGRpbmcgYmxvY2tzIGZvciB2YXJpb3VzIGludGVycmVsYXRlZCBtdWx0aWZvcm1hdCB0ZWNobm9sb2dpZXMgKG11bHRpY29kZWMsIG11bHRpaGFzaCwgbXVsdGliYXNlLCBhbmQgQ0lEKS4gVGhleSBjYW4gYmUgdXNlZCB0byBpbXBsZW1lbnQgY3VzdG9tIGJhc2UgZW5jb2RlcnMgLyBkZWNvZGVycyAvIGNvZGVjcywgY29kZWMgZW5jb2RlcnMgL2RlY29kZXJzIGFuZCBtdWx0aWhhc2ggaGFzaGVycyB0aGF0IGNvbXBseSB0byB0aGUgaW50ZXJmYWNlIHRoYXQgbGF5ZXJzIGFib3ZlIGFzc3VtZS5cbiAqXG4gKiBUaGlzIGxpYnJhcnkgcHJvdmlkZXMgaW1wbGVtZW50YXRpb25zIGZvciBtb3N0IGJhc2ljcyBhbmQgbWFueSBvdGhlcnMgY2FuIGJlIGZvdW5kIGluIGxpbmtlZCByZXBvc2l0b3JpZXMuXG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCdcbiAqIGltcG9ydCAqIGFzIGpzb24gZnJvbSAnbXVsdGlmb3JtYXRzL2NvZGVjcy9qc29uJ1xuICogaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuICpcbiAqIGNvbnN0IGJ5dGVzID0ganNvbi5lbmNvZGUoeyBoZWxsbzogJ3dvcmxkJyB9KVxuICpcbiAqIGNvbnN0IGhhc2ggPSBhd2FpdCBzaGEyNTYuZGlnZXN0KGJ5dGVzKVxuICogY29uc3QgY2lkID0gQ0lELmNyZWF0ZSgxLCBqc29uLmNvZGUsIGhhc2gpXG4gKiAvLz4gQ0lEKGJhZ2FhaWVyYXNvcmRzNG5qY3RzNnZzN3F2ZGpmY3ZnbnVtZTRocW9oZjY1enNmZ3VwcnFwaHMzaWN3ZWEpXG4gKiBgYGBcbiAqXG4gKiAjIyBDcmVhdGluZyBCbG9ja3NcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBpbXBvcnQgKiBhcyBCbG9jayBmcm9tICdtdWx0aWZvcm1hdHMvYmxvY2snXG4gKiBpbXBvcnQgKiBhcyBjb2RlYyBmcm9tICdAaXBsZC9kYWctY2JvcidcbiAqIGltcG9ydCB7IHNoYTI1NiBhcyBoYXNoZXIgfSBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTInXG4gKlxuICogY29uc3QgdmFsdWUgPSB7IGhlbGxvOiAnd29ybGQnIH1cbiAqXG4gKiAvLyBlbmNvZGUgYSBibG9ja1xuICogbGV0IGJsb2NrID0gYXdhaXQgQmxvY2suZW5jb2RlKHsgdmFsdWUsIGNvZGVjLCBoYXNoZXIgfSlcbiAqXG4gKiBibG9jay52YWx1ZSAvLyB7IGhlbGxvOiAnd29ybGQnIH1cbiAqIGJsb2NrLmJ5dGVzIC8vIFVpbnQ4QXJyYXlcbiAqIGJsb2NrLmNpZCAgIC8vIENJRCgpIHcvIHNoYTItMjU2IGhhc2ggYWRkcmVzcyBhbmQgZGFnLWNib3IgY29kZWNcbiAqXG4gKiAvLyB5b3UgY2FuIGFsc28gZGVjb2RlIGJsb2NrcyBmcm9tIHRoZWlyIGJpbmFyeSBzdGF0ZVxuICogYmxvY2sgPSBhd2FpdCBCbG9jay5kZWNvZGUoeyBieXRlczogYmxvY2suYnl0ZXMsIGNvZGVjLCBoYXNoZXIgfSlcbiAqXG4gKiAvLyBpZiB5b3UgaGF2ZSB0aGUgY2lkIHlvdSBjYW4gYWxzbyB2ZXJpZnkgdGhlIGhhc2ggb24gZGVjb2RlXG4gKiBibG9jayA9IGF3YWl0IEJsb2NrLmNyZWF0ZSh7IGJ5dGVzOiBibG9jay5ieXRlcywgY2lkOiBibG9jay5jaWQsIGNvZGVjLCBoYXNoZXIgfSlcbiAqIGBgYFxuICpcbiAqICMjIE11bHRpYmFzZSBFbmNvZGVycyAvIERlY29kZXJzIC8gQ29kZWNzXG4gKlxuICogQ0lEcyBjYW4gYmUgc2VyaWFsaXplZCB0byBzdHJpbmcgcmVwcmVzZW50YXRpb24gdXNpbmcgbXVsdGliYXNlIGVuY29kZXJzIHRoYXQgaW1wbGVtZW50IFtgTXVsdGliYXNlRW5jb2RlcmBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9iYXNlcy9pbnRlcmZhY2UudHMpIGludGVyZmFjZS4gVGhpcyBsaWJyYXJ5IHByb3ZpZGVzIHF1aXRlIGEgZmV3IGltcGxlbWVudGF0aW9ucyB0aGF0IGNhbiBiZSBpbXBvcnRlZDpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBpbXBvcnQgeyBiYXNlNjQgfSBmcm9tIFwibXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U2NFwiXG4gKiBjaWQudG9TdHJpbmcoYmFzZTY0LmVuY29kZXIpXG4gKiAvLz4gJ21BWUFFRWlDVG9qbHhxUlRsNnN2d3FOSlJWTTJqQ2NQQnh5KzdtUlRVZkdEenkyZ1ZpQSdcbiAqIGBgYFxuICpcbiAqIFBhcnNpbmcgQ0lEIHN0cmluZyBzZXJpYWxpemVkIENJRHMgcmVxdWlyZXMgbXVsdGliYXNlIGRlY29kZXIgdGhhdCBpbXBsZW1lbnRzIFtgTXVsdGliYXNlRGVjb2RlcmBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9iYXNlcy9pbnRlcmZhY2UudHMpIGludGVyZmFjZS4gVGhpcyBsaWJyYXJ5IHByb3ZpZGVzIGEgZGVjb2RlciBmb3IgZXZlcnkgZW5jb2RlciBpdCBwcm92aWRlczpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBDSUQucGFyc2UoJ21BWUFFRWlDVG9qbHhxUlRsNnN2d3FOSlJWTTJqQ2NQQnh5KzdtUlRVZkdEenkyZ1ZpQScsIGJhc2U2NC5kZWNvZGVyKVxuICogLy8+IENJRChiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhKVxuICogYGBgXG4gKlxuICogRHVhbCBvZiBtdWx0aWJhc2UgZW5jb2RlciAmIGRlY29kZXIgaXMgZGVmaW5lZCBhcyBtdWx0aWJhc2UgY29kZWMgYW5kIGl0IGV4cG9zZXNcbiAqIHRoZW0gYXMgYGVuY29kZXJgIGFuZCBgZGVjb2RlcmAgcHJvcGVydGllcy4gRm9yIGFkZGVkIGNvbnZlbmllbmNlIGNvZGVjcyBhbHNvXG4gKiBpbXBsZW1lbnQgYE11bHRpYmFzZUVuY29kZXJgIGFuZCBgTXVsdGliYXNlRGVjb2RlcmAgaW50ZXJmYWNlcyBzbyB0aGV5IGNvdWxkIGJlXG4gKiB1c2VkIGFzIGVpdGhlciBvciBib3RoOlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGNpZC50b1N0cmluZyhiYXNlNjQpXG4gKiBDSUQucGFyc2UoY2lkLnRvU3RyaW5nKGJhc2U2NCksIGJhc2U2NClcbiAqIGBgYFxuICpcbiAqICoqTm90ZToqKiBDSUQgaW1wbGVtZW50YXRpb24gY29tZXMgYnVuZGxlZCB3aXRoIGBiYXNlMzJgIGFuZCBgYmFzZTU4YnRjYFxuICogbXVsdGliYXNlIGNvZGVjcyBzbyB0aGF0IENJRHMgY2FuIGJlIGJhc2Ugc2VyaWFsaXplZCB0byAodmVyc2lvbiBzcGVjaWZpYylcbiAqIGRlZmF1bHQgYmFzZSBlbmNvZGluZyBhbmQgcGFyc2VkIHdpdGhvdXQgaGF2aW5nIHRvIHN1cHBseSBiYXNlIGVuY29kZXJzL2RlY29kZXJzOlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGNvbnN0IHYxID0gQ0lELnBhcnNlKCdiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhJylcbiAqIHYxLnRvU3RyaW5nKClcbiAqIC8vPiAnYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYSdcbiAqXG4gKiBjb25zdCB2MCA9IENJRC5wYXJzZSgnUW1kZlRiQnFCUFE3Vk54WkVZRWoxNFZtUnVaQmtxRmJpd1Jlb2dKZ1MxelIxbicpXG4gKiB2MC50b1N0cmluZygpXG4gKiAvLz4gJ1FtZGZUYkJxQlBRN1ZOeFpFWUVqMTRWbVJ1WkJrcUZiaXdSZW9nSmdTMXpSMW4nXG4gKiB2MC50b1YxKCkudG9TdHJpbmcoKVxuICogLy8+ICdiYWZ5YmVpaGR3ZGNlZmdoNGRxa2p2Njd1emNtdzdvamVlNnhlZHpkZXRvanV6amV2dGVueHF1dnlrdSdcbiAqIGBgYFxuICpcbiAqICMjIE11bHRpY29kZWMgRW5jb2RlcnMgLyBEZWNvZGVycyAvIENvZGVjc1xuICpcbiAqIFRoaXMgbGlicmFyeSBkZWZpbmVzIFtgQmxvY2tFbmNvZGVyYCwgYEJsb2NrRGVjb2RlcmAgYW5kIGBCbG9ja0NvZGVjYCBpbnRlcmZhY2VzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvY29kZWNzL2ludGVyZmFjZS50cykuXG4gKiBDb2RlYyBpbXBsZW1lbnRhdGlvbnMgc2hvdWxkIGNvbmZvcm0gdG8gdGhlIGBCbG9ja0NvZGVjYCBpbnRlcmZhY2Ugd2hpY2ggaW1wbGVtZW50cyBib3RoIGBCbG9ja0VuY29kZXJgIGFuZCBgQmxvY2tEZWNvZGVyYC5cbiAqIEhlcmUgaXMgYW4gZXhhbXBsZSBpbXBsZW1lbnRhdGlvbiBvZiBKU09OIGBCbG9ja0NvZGVjYC5cbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBleHBvcnQgY29uc3QgeyBuYW1lLCBjb2RlLCBlbmNvZGUsIGRlY29kZSB9ID0ge1xuICogICBuYW1lOiAnanNvbicsXG4gKiAgIGNvZGU6IDB4MDIwMCxcbiAqICAgZW5jb2RlOiBqc29uID0+IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShKU09OLnN0cmluZ2lmeShqc29uKSksXG4gKiAgIGRlY29kZTogYnl0ZXMgPT4gSlNPTi5wYXJzZShuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYnl0ZXMpKVxuICogfVxuICogYGBgXG4gKlxuICogIyMgTXVsdGloYXNoIEhhc2hlcnNcbiAqXG4gKiBUaGlzIGxpYnJhcnkgZGVmaW5lcyBbYE11bHRpaGFzaEhhc2hlcmAgYW5kIGBNdWx0aWhhc2hEaWdlc3RgIGludGVyZmFjZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL2Jsb2IvbWFzdGVyL3NyYy9oYXNoZXMvaW50ZXJmYWNlLnRzKSBhbmQgY29udmluaWVudCBmdW5jdGlvbiBmb3IgaW1wbGVtZW50aW5nIHRoZW06XG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0ICogYXMgaGFzaGVyIGZyb20gJ211bHRpZm9ybWF0cy9oYXNoZXMvaGFzaGVyJ1xuICpcbiAqIGNvbnN0IHNoYTI1NiA9IGhhc2hlci5mcm9tKHtcbiAqICAgLy8gQXMgcGVyIG11bHRpZm9ybWF0cyB0YWJsZVxuICogICAvLyBodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL211bHRpY29kZWMvYmxvYi9tYXN0ZXIvdGFibGUuY3N2I0w5XG4gKiAgIG5hbWU6ICdzaGEyLTI1NicsXG4gKiAgIGNvZGU6IDB4MTIsXG4gKlxuICogICBlbmNvZGU6IChpbnB1dCkgPT4gbmV3IFVpbnQ4QXJyYXkoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG4gKiB9KVxuICpcbiAqIGNvbnN0IGhhc2ggPSBhd2FpdCBzaGEyNTYuZGlnZXN0KGpzb24uZW5jb2RlKHsgaGVsbG86ICd3b3JsZCcgfSkpXG4gKiBDSUQuY3JlYXRlKDEsIGpzb24uY29kZSwgaGFzaClcbiAqXG4gKiAvLz4gQ0lEKGJhZ2FhaWVyYXNvcmRzNG5qY3RzNnZzN3F2ZGpmY3ZnbnVtZTRocW9oZjY1enNmZ3VwcnFwaHMzaWN3ZWEpXG4gKiBgYGBcbiAqXG4gKiAjIyBUcmF2ZXJzYWxcbiAqXG4gKiBUaGlzIGxpYnJhcnkgY29udGFpbnMgaGlnaGVyLW9yZGVyIGZ1bmN0aW9ucyBmb3IgdHJhdmVyc2luZyBncmFwaHMgb2YgZGF0YSBlYXNpbHkuXG4gKlxuICogYHdhbGsoKWAgd2Fsa3MgdGhyb3VnaCB0aGUgbGlua3MgaW4gZWFjaCBibG9jayBvZiBhIERBRyBjYWxsaW5nIGEgdXNlci1zdXBwbGllZCBsb2FkZXIgZnVuY3Rpb24gZm9yIGVhY2ggb25lLCBpbiBkZXB0aC1maXJzdCBvcmRlciB3aXRoIG5vIGR1cGxpY2F0ZSBibG9jayB2aXNpdHMuIFRoZSBsb2FkZXIgc2hvdWxkIHJldHVybiBhIGBCbG9ja2Agb2JqZWN0IGFuZCBjYW4gYmUgdXNlZCB0byBpbnNwZWN0IGFuZCBjb2xsZWN0IGJsb2NrIG9yZGVyaW5nIGZvciBhIGZ1bGwgREFHIHdhbGsuIFRoZSBsb2FkZXIgc2hvdWxkIGB0aHJvd2Agb24gZXJyb3IsIGFuZCByZXR1cm4gYG51bGxgIGlmIGEgYmxvY2sgc2hvdWxkIGJlIHNraXBwZWQgYnkgYHdhbGsoKWAuXG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0IHsgd2FsayB9IGZyb20gJ211bHRpZm9ybWF0cy90cmF2ZXJzYWwnXG4gKiBpbXBvcnQgKiBhcyBCbG9jayBmcm9tICdtdWx0aWZvcm1hdHMvYmxvY2snXG4gKiBpbXBvcnQgKiBhcyBjb2RlYyBmcm9tICdtdWx0aWZvcm1hdHMvY29kZWNzL2pzb24nXG4gKiBpbXBvcnQgeyBzaGEyNTYgYXMgaGFzaGVyIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuICpcbiAqIC8vIGJ1aWxkIGEgREFHIChhIHNpbmdsZSBibG9jayBmb3IgdGhpcyBzaW1wbGUgZXhhbXBsZSlcbiAqIGNvbnN0IHZhbHVlID0geyBoZWxsbzogJ3dvcmxkJyB9XG4gKiBjb25zdCBibG9jayA9IGF3YWl0IEJsb2NrLmVuY29kZSh7IHZhbHVlLCBjb2RlYywgaGFzaGVyIH0pXG4gKiBjb25zdCB7IGNpZCB9ID0gYmxvY2tcbiAqIGNvbnNvbGUubG9nKGNpZClcbiAqIC8vPiBDSUQoYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYSlcbiAqXG4gKiAvLyBjcmVhdGUgYSBsb2FkZXIgZnVuY3Rpb24gdGhhdCBhbHNvIGNvbGxlY3RzIENJRHMgb2YgYmxvY2tzIGluXG4gKiAvLyB0aGVpciB0cmF2ZXJzYWwgb3JkZXJcbiAqIGNvbnN0IGxvYWQgPSAoY2lkLCBibG9ja3MpID0+IGFzeW5jIChjaWQpID0+IHtcbiAqICAgLy8gZmV0Y2ggYSBibG9jayB1c2luZyBpdHMgY2lkXG4gKiAgIC8vIGUuZy46IGNvbnN0IGJsb2NrID0gYXdhaXQgZmV0Y2hCbG9ja0J5Q0lEKGNpZClcbiAqICAgYmxvY2tzLnB1c2goY2lkKVxuICogICByZXR1cm4gYmxvY2tcbiAqIH1cbiAqXG4gKiAvLyBjb2xsZWN0IGJsb2NrcyBpbiB0aGlzIERBRyBzdGFydGluZyBmcm9tIHRoZSByb290IGBjaWRgXG4gKiBjb25zdCBibG9ja3MgPSBbXVxuICogYXdhaXQgd2Fsayh7IGNpZCwgbG9hZDogbG9hZChjaWQsIGJsb2NrcykgfSlcbiAqXG4gKiBjb25zb2xlLmxvZyhibG9ja3MpXG4gKiAvLz4gW0NJRChiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhKV1cbiAqIGBgYFxuICpcbiAqICMjIExlZ2FjeSBpbnRlcmZhY2VcbiAqXG4gKiBbYGJsb2NrY29kZWMtdG8taXBsZC1mb3JtYXRgXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1ibG9ja2NvZGVjLXRvLWlwbGQtZm9ybWF0KSBjb252ZXJ0cyBhIG11bHRpZm9ybWF0cyBbYEJsb2NrQ29kZWNgXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvY29kZWNzL2ludGVyZmFjZS50cyNMMjEpIGludG8gYW5cbiAqIFtgaW50ZXJmYWNlLWlwbGQtZm9ybWF0YF0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvaW50ZXJmYWNlLWlwbGQtZm9ybWF0KSBmb3IgdXNlIHdpdGggdGhlIFtgaXBsZGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9pcGxkL2lwbGQpIHBhY2thZ2UuIFRoaXMgY2FuIGhlbHAgYnJpZGdlIElQTEQgY29kZWNzIGltcGxlbWVudGVkIHVzaW5nIHRoZSBzdHJ1Y3R1cmUgYW5kIGludGVyZmFjZXMgZGVmaW5lZCBoZXJlIHRvIGV4aXN0aW5nIGNvZGUgdGhhdCBhc3N1bWVzLCBvciByZXF1aXJlcyBgaW50ZXJmYWNlLWlwbGQtZm9ybWF0YC4gVGhpcyBicmlkZ2UgYWxzbyBpbmNsdWRlcyB0aGUgcmVsZXZhbnQgVHlwZVNjcmlwdCBkZWZpbml0aW9ucy5cbiAqXG4gKiAjIyBJbXBsZW1lbnRhdGlvbnNcbiAqXG4gKiBCeSBkZWZhdWx0LCBubyBiYXNlIGVuY29kaW5ncyAob3RoZXIgdGhhbiBiYXNlMzIgJiBiYXNlNThidGMpLCBoYXNoIGZ1bmN0aW9ucyxcbiAqIG9yIGNvZGVjIGltcGxlbWVudGF0aW9ucyBhcmUgZXhwb3NlZCBieSBgbXVsdGlmb3JtYXRzYCwgeW91IG5lZWQgdG9cbiAqIGltcG9ydCB0aGUgb25lcyB5b3UgbmVlZCB5b3Vyc2VsZi5cbiAqXG4gKiAjIyMgTXVsdGliYXNlIGNvZGVjc1xuICpcbiAqIHwgYmFzZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGltcG9ydCAgICAgICAgICAgICAgICAgICAgICB8IHJlcG8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IGBiYXNlMTZgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2UxNmAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvYmFzZXMpIHxcbiAqIHwgYGJhc2UzMmAsIGBiYXNlMzJwYWRgLCBgYmFzZTMyaGV4YCwgYGJhc2UzMmhleHBhZGAsIGBiYXNlMzJ6YCB8IGBtdWx0aWZvcm1hdHMvYmFzZXMvYmFzZTMyYCB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9iYXNlcykgfFxuICogfCBgYmFzZTY0YCwgYGJhc2U2NHBhZGAsIGBiYXNlNjR1cmxgLCBgYmFzZTY0dXJscGFkYCAgICAgICAgICAgIHwgYG11bHRpZm9ybWF0cy9iYXNlcy9iYXNlNjRgIHwgW211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL3RyZWUvbWFzdGVyL2Jhc2VzKSB8XG4gKiB8IGBiYXNlNThidGNgLCBgYmFzZTU4ZmxpY2s0YCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U1OGAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvYmFzZXMpIHxcbiAqXG4gKiBPdGhlciAobGVzcyB1c2VmdWwpIGJhc2VzIGltcGxlbWVudGVkIGluIFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9iYXNlcykgaW5jbHVkZTogYGJhc2UyYCwgYGJhc2U4YCwgYGJhc2UxMGAsIGBiYXNlMzZgIGFuZCBgYmFzZTI1NmVtb2ppYC5cbiAqXG4gKiAjIyMgTXVsdGloYXNoIGhhc2hlcnNcbiAqXG4gKiB8IGhhc2hlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpbXBvcnQgICAgICAgICAgICAgICAgICAgICAgICAgfCByZXBvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHxcbiAqIHwgYHNoYTItMjU2YCwgYHNoYTItNTEyYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGBtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTJgICAgICB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvaGFzaGVzKSAgICAgICAgICAgICB8XG4gKiB8IGBzaGEzLTIyNGAsIGBzaGEzLTI1NmAsIGBzaGEzLTM4NGAsYHNoYTMtNTEyYCwgYHNoYWtlLTEyOGAsIGBzaGFrZS0yNTZgLCBga2VjY2FrLTIyNGAsIGBrZWNjYWstMjU2YCwgYGtlY2Nhay0zODRgLCBga2VjY2FrLTUxMmAgfCBgQG11bHRpZm9ybWF0cy9zaGEzYCAgICAgICAgICAgfCBbbXVsdGlmb3JtYXRzL2pzLXNoYTNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtc2hhMykgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCBgaWRlbnRpdHlgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYG11bHRpZm9ybWF0cy9oYXNoZXMvaWRlbnRpdHlgIHwgW211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL3RyZWUvbWFzdGVyL3NyYy9oYXNoZXMvaWRlbnRpdHkuanMpIHxcbiAqIHwgYG11cm11cjMtMTI4YCwgYG11cm11cjMtMzJgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGBAbXVsdGlmb3JtYXRzL211cm11cjNgICAgICAgICB8IFttdWx0aWZvcm1hdHMvanMtbXVybXVyM10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdXJtdXIzKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBibGFrZTJiLSpgLCBgYmxha2Uycy0qYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgQG11bHRpZm9ybWF0cy9ibGFrZTJgICAgICAgICAgfCBbbXVsdGlmb3JtYXRzL2pzLWJsYWtlMl0oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1ibGFrZTIpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICpcbiAqICMjIyBJUExEIGNvZGVjcyAobXVsdGljb2RlYylcbiAqXG4gKiB8IGNvZGVjICAgICAgfCBpbXBvcnQgICAgICAgICAgICAgICAgICAgICB8IHJlcG8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IC0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IGByYXdgICAgICAgfCBgbXVsdGlmb3JtYXRzL2NvZGVjcy9yYXdgICB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvY29kZWNzKSB8XG4gKiB8IGBqc29uYCAgICAgfCBgbXVsdGlmb3JtYXRzL2NvZGVjcy9qc29uYCB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvY29kZWNzKSB8XG4gKiB8IGBkYWctY2JvcmAgfCBgQGlwbGQvZGFnLWNib3JgICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1jYm9yXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1kYWctY2JvcikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctanNvbmAgfCBgQGlwbGQvZGFnLWpzb25gICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1qc29uXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9qcy1kYWctanNvbikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctcGJgICAgfCBgQGlwbGQvZGFnLXBiYCAgICAgICAgICAgICB8IFtpcGxkL2pzLWRhZy1wYl0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvanMtZGFnLXBiKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGBkYWctam9zZWAgfCBgZGFnLWpvc2VgICAgICAgICAgICAgICAgICB8IFtjZXJhbWljbmV0d29yay9qcy1kYWctam9zZV0oaHR0cHM6Ly9naXRodWIuY29tL2NlcmFtaWNuZXR3b3JrL2pzLWRhZy1qb3NlKSAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKi9cbmltcG9ydCAqIGFzIGJ5dGVzIGZyb20gJy4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnLi9jaWQuanMnO1xuaW1wb3J0ICogYXMgZGlnZXN0IGZyb20gJy4vaGFzaGVzL2RpZ2VzdC5qcyc7XG5pbXBvcnQgKiBhcyBoYXNoZXIgZnJvbSAnLi9oYXNoZXMvaGFzaGVyLmpzJztcbmltcG9ydCAqIGFzIHZhcmludCBmcm9tICcuL3ZhcmludC5qcyc7XG4vLyBUaGlzIHdheSBUUyB3aWxsIGFsc28gZXhwb3NlIGFsbCB0aGUgdHlwZXMgZnJvbSBtb2R1bGVcbmV4cG9ydCAqIGZyb20gJy4vaW50ZXJmYWNlLmpzJztcbmV4cG9ydCB7IENJRCwgaGFzaGVyLCBkaWdlc3QsIHZhcmludCwgYnl0ZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/interface.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/interface.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFDQTtBQUNGO0FBQ0M7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2ludGVyZmFjZS5qcz82NjczIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYmFzZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaGFzaGVzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvZGVjcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9saW5rL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Jsb2NrL2ludGVyZmFjZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createLegacy: () => (/* binding */ createLegacy),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   format: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.format),\n/* harmony export */   fromJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.fromJSON),\n/* harmony export */   isLink: () => (/* binding */ isLink),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   toJSON: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.toJSON)\n/* harmony export */ });\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link/interface.js\");\n\n// This way TS will also expose all the types from module\n\nconst DAG_PB_CODE = 0x70;\n// eslint-disable-next-line\nconst SHA_256_CODE = 0x12;\n/**\n * Simplified version of `create` for CIDv0.\n */\nfunction createLegacy(digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(0, DAG_PB_CODE, digest);\n}\n/**\n * Simplified version of `create` for CIDv1.\n *\n * @param code - Content encoding format code.\n * @param digest - Miltihash of the content.\n */\nfunction create(code, digest) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(1, code, digest);\n}\n/**\n * Type predicate returns true if value is the link.\n */\nfunction isLink(value) {\n    if (value == null) {\n        return false;\n    }\n    const withSlash = value;\n    if (withSlash['/'] != null && withSlash['/'] === withSlash.bytes) {\n        return true;\n    }\n    const withAsCID = value;\n    if (withAsCID.asCID === value) {\n        return true;\n    }\n    return false;\n}\n/**\n * Takes cid in a string representation and creates an instance. If `base`\n * decoder is not provided will use a default from the configuration. It will\n * throw an error if encoding of the CID is not compatible with supplied (or\n * a default decoder).\n */\nfunction parse(source, base) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.parse(source, base);\n}\n\n/**\n * Decoded a CID from its binary representation. The byte array must contain\n * only the CID with no additional bytes.\n *\n * An error will be thrown if the bytes provided do not contain a valid\n * binary representation of a CID.\n */\nfunction decode(bytes) {\n    return _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID.decode(bytes);\n}\n//# sourceMappingURL=link.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBeUQ7QUFDekQ7QUFDb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdDQUFHO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsd0NBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsd0NBQUc7QUFDZDtBQUNvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyx3Q0FBRztBQUNkO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2xpbmsuanM/NWEzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDSUQsIGZvcm1hdCwgdG9KU09OLCBmcm9tSlNPTiB9IGZyb20gJy4vY2lkLmpzJztcbi8vIFRoaXMgd2F5IFRTIHdpbGwgYWxzbyBleHBvc2UgYWxsIHRoZSB0eXBlcyBmcm9tIG1vZHVsZVxuZXhwb3J0ICogZnJvbSAnLi9saW5rL2ludGVyZmFjZS5qcyc7XG5jb25zdCBEQUdfUEJfQ09ERSA9IDB4NzA7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbmNvbnN0IFNIQV8yNTZfQ09ERSA9IDB4MTI7XG4vKipcbiAqIFNpbXBsaWZpZWQgdmVyc2lvbiBvZiBgY3JlYXRlYCBmb3IgQ0lEdjAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMZWdhY3koZGlnZXN0KSB7XG4gICAgcmV0dXJuIENJRC5jcmVhdGUoMCwgREFHX1BCX0NPREUsIGRpZ2VzdCk7XG59XG4vKipcbiAqIFNpbXBsaWZpZWQgdmVyc2lvbiBvZiBgY3JlYXRlYCBmb3IgQ0lEdjEuXG4gKlxuICogQHBhcmFtIGNvZGUgLSBDb250ZW50IGVuY29kaW5nIGZvcm1hdCBjb2RlLlxuICogQHBhcmFtIGRpZ2VzdCAtIE1pbHRpaGFzaCBvZiB0aGUgY29udGVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZShjb2RlLCBkaWdlc3QpIHtcbiAgICByZXR1cm4gQ0lELmNyZWF0ZSgxLCBjb2RlLCBkaWdlc3QpO1xufVxuLyoqXG4gKiBUeXBlIHByZWRpY2F0ZSByZXR1cm5zIHRydWUgaWYgdmFsdWUgaXMgdGhlIGxpbmsuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0xpbmsodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHdpdGhTbGFzaCA9IHZhbHVlO1xuICAgIGlmICh3aXRoU2xhc2hbJy8nXSAhPSBudWxsICYmIHdpdGhTbGFzaFsnLyddID09PSB3aXRoU2xhc2guYnl0ZXMpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNvbnN0IHdpdGhBc0NJRCA9IHZhbHVlO1xuICAgIGlmICh3aXRoQXNDSUQuYXNDSUQgPT09IHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIFRha2VzIGNpZCBpbiBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBhbmQgY3JlYXRlcyBhbiBpbnN0YW5jZS4gSWYgYGJhc2VgXG4gKiBkZWNvZGVyIGlzIG5vdCBwcm92aWRlZCB3aWxsIHVzZSBhIGRlZmF1bHQgZnJvbSB0aGUgY29uZmlndXJhdGlvbi4gSXQgd2lsbFxuICogdGhyb3cgYW4gZXJyb3IgaWYgZW5jb2Rpbmcgb2YgdGhlIENJRCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIHN1cHBsaWVkIChvclxuICogYSBkZWZhdWx0IGRlY29kZXIpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2Uoc291cmNlLCBiYXNlKSB7XG4gICAgcmV0dXJuIENJRC5wYXJzZShzb3VyY2UsIGJhc2UpO1xufVxuZXhwb3J0IHsgZm9ybWF0LCB0b0pTT04sIGZyb21KU09OIH07XG4vKipcbiAqIERlY29kZWQgYSBDSUQgZnJvbSBpdHMgYmluYXJ5IHJlcHJlc2VudGF0aW9uLiBUaGUgYnl0ZSBhcnJheSBtdXN0IGNvbnRhaW5cbiAqIG9ubHkgdGhlIENJRCB3aXRoIG5vIGFkZGl0aW9uYWwgYnl0ZXMuXG4gKlxuICogQW4gZXJyb3Igd2lsbCBiZSB0aHJvd24gaWYgdGhlIGJ5dGVzIHByb3ZpZGVkIGRvIG5vdCBjb250YWluIGEgdmFsaWRcbiAqIGJpbmFyeSByZXByZXNlbnRhdGlvbiBvZiBhIENJRC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShieXRlcykge1xuICAgIHJldHVybiBDSUQuZGVjb2RlKGJ5dGVzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpbmsuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link/interface.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link/interface.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanM/MWU3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/varint.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/varint.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92YXJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNqQztBQUNQLGlCQUFpQix5REFBTTtBQUN2QixrQkFBa0IseURBQU07QUFDeEI7QUFDTztBQUNQLElBQUkseURBQU07QUFDVjtBQUNBO0FBQ087QUFDUCxXQUFXLHlEQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZhcmludC5qcz82OTBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAnLi92ZW5kb3IvdmFyaW50LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb2Zmc2V0ID0gMCkge1xuICAgIGNvbnN0IGNvZGUgPSB2YXJpbnQuZGVjb2RlKGRhdGEsIG9mZnNldCk7XG4gICAgcmV0dXJuIFtjb2RlLCB2YXJpbnQuZGVjb2RlLmJ5dGVzXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUbyhpbnQsIHRhcmdldCwgb2Zmc2V0ID0gMCkge1xuICAgIHZhcmludC5lbmNvZGUoaW50LCB0YXJnZXQsIG9mZnNldCk7XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGluZ0xlbmd0aChpbnQpIHtcbiAgICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGludCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/vendor/varint.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFlBQVksRUFBQztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcz80ZWEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgZW5jb2RlXzEgPSBlbmNvZGU7XG52YXIgTVNCID0gMHg4MCwgUkVTVCA9IDB4N0YsIE1TQkFMTCA9IH5SRVNULCBJTlQgPSBNYXRoLnBvdygyLCAzMSk7XG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBudW1cbiAqIEBwYXJhbSB7bnVtYmVyW119IG91dFxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiBlbmNvZGUobnVtLCBvdXQsIG9mZnNldCkge1xuICAgIG91dCA9IG91dCB8fCBbXTtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcbiAgICB2YXIgb2xkT2Zmc2V0ID0gb2Zmc2V0O1xuICAgIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgICAgIG91dFtvZmZzZXQrK10gPSAobnVtICYgMHhGRikgfCBNU0I7XG4gICAgICAgIG51bSAvPSAxMjg7XG4gICAgfVxuICAgIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtID4+Pj0gNztcbiAgICB9XG4gICAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICAgIHJldHVybiBvdXQ7XG59XG52YXIgZGVjb2RlID0gcmVhZDtcbnZhciBNU0IkMSA9IDB4ODAsIFJFU1QkMSA9IDB4N0Y7XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nIHwgYW55W119IGJ1ZlxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiByZWFkKGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICAgIGRvIHtcbiAgICAgICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICAgICAgfVxuICAgICAgICBiID0gYnVmW2NvdW50ZXIrK107XG4gICAgICAgIHJlcyArPSBzaGlmdCA8IDI4XG4gICAgICAgICAgICA/IChiICYgUkVTVCQxKSA8PCBzaGlmdFxuICAgICAgICAgICAgOiAoYiAmIFJFU1QkMSkgKiBNYXRoLnBvdygyLCBzaGlmdCk7XG4gICAgICAgIHNoaWZ0ICs9IDc7XG4gICAgfSB3aGlsZSAoYiA+PSBNU0IkMSk7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHJlYWQuYnl0ZXMgPSBjb3VudGVyIC0gb2Zmc2V0O1xuICAgIHJldHVybiByZXM7XG59XG52YXIgTjEgPSBNYXRoLnBvdygyLCA3KTtcbnZhciBOMiA9IE1hdGgucG93KDIsIDE0KTtcbnZhciBOMyA9IE1hdGgucG93KDIsIDIxKTtcbnZhciBONCA9IE1hdGgucG93KDIsIDI4KTtcbnZhciBONSA9IE1hdGgucG93KDIsIDM1KTtcbnZhciBONiA9IE1hdGgucG93KDIsIDQyKTtcbnZhciBONyA9IE1hdGgucG93KDIsIDQ5KTtcbnZhciBOOCA9IE1hdGgucG93KDIsIDU2KTtcbnZhciBOOSA9IE1hdGgucG93KDIsIDYzKTtcbnZhciBsZW5ndGggPSBmdW5jdGlvbiAoLyoqIEB0eXBlIHtudW1iZXJ9ICovIHZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSA8IE4xID8gMVxuICAgICAgICA6IHZhbHVlIDwgTjIgPyAyXG4gICAgICAgICAgICA6IHZhbHVlIDwgTjMgPyAzXG4gICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE40ID8gNFxuICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjUgPyA1XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjYgPyA2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE43ID8gN1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjggPyA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjkgPyA5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAxMCk7XG59O1xudmFyIHZhcmludCA9IHtcbiAgICBlbmNvZGU6IGVuY29kZV8xLFxuICAgIGRlY29kZTogZGVjb2RlLFxuICAgIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFyaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/codec/cbor.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/codec/cbor.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   format: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.format),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/dag-cbor */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/@ipld/dag-cbor/src/index.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../schema.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/schema.js\");\n/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../formatter.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/formatter.js\");\n/* harmony import */ var _signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../signature.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n/* harmony import */ var _view_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../view.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/view.js\");\n\n\n\n\n\n\n\nconst name = \"dag-ucan\"\nconst code = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.code\n\n/**\n * Creates a UCAN view from the underlying data model. Please note that this\n * function does no verification of the model and it is callers responsibility\n * to ensure that:\n *\n * 1. Data model is correct contains all the field etc...\n * 2. Payload of the signature will match paylodad when model is serialized\n *    with DAG-JSON.\n *\n * In other words you should never use this function unless you've parsed or\n * decoded a valid UCAN and want to wrap it into a view.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.FromModel<C>} model\n * @returns {UCAN.View<C>}\n */\nconst from = model => new CBORView(model)\n\n/**\n * Encodes given UCAN (in either IPLD or JWT representation) and encodes it into\n * corresponding bytes representation. UCAN in IPLD representation is encoded as\n * DAG-CBOR which JWT representation is encoded as raw bytes of JWT string.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.Model<C>} model\n * @returns {UCAN.ByteView<UCAN.Model<C>>}\n */\nconst encode = model => {\n  const { fct, nnc, nbf, ...payload } = (0,_schema_js__WEBPACK_IMPORTED_MODULE_2__.readPayload)(model)\n\n  return /** @type {Uint8Array} */ (\n    _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.encode({\n      // leave out optionals unless they are set\n      ...(fct.length > 0 && { fct }),\n      ...(nnc != null && { nnc }),\n      ...(nbf && { nbf }),\n      ...payload,\n      // add version and signature\n      v: (0,_schema_js__WEBPACK_IMPORTED_MODULE_2__.readVersion)(model.v, \"v\"),\n      s: encodeSignature(model.s, \"s\"),\n    })\n  )\n}\n\n/**\n * @param {UCAN.Signature} signature\n * @param {string} context\n */\nconst encodeSignature = (signature, context) => {\n  try {\n    return _signature_js__WEBPACK_IMPORTED_MODULE_4__.encode(signature)\n  } catch (cause) {\n    throw new Error(\n      `Expected signature ${context}, instead got ${JSON.stringify(signature)}`,\n      // @ts-expect-error - types don't know about second arg\n      { cause }\n    )\n  }\n}\n\n/**\n * Decodes UCAN in primary CBOR representation. It does not validate UCAN, it's\n * signature or proof chain. This is to say decoded UCAN may be invalid.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.ByteView<UCAN.Model<C>>} bytes\n * @returns {UCAN.View<C>}\n */\nconst decode = bytes => {\n  const model = _ipld_dag_cbor__WEBPACK_IMPORTED_MODULE_1__.decode(bytes)\n  return new CBORView({\n    ...(0,_schema_js__WEBPACK_IMPORTED_MODULE_2__.readPayload)(model),\n    v: (0,_schema_js__WEBPACK_IMPORTED_MODULE_2__.readVersion)(model.v, \"v\"),\n    s: (0,_schema_js__WEBPACK_IMPORTED_MODULE_2__.readSignature)(model.s),\n  })\n}\n\n\n\n/**\n * @template {UCAN.Capabilities} C\n * @extends {View<C>}\n */\nclass CBORView extends _view_js__WEBPACK_IMPORTED_MODULE_5__.View {\n  /** @type {UCAN.MulticodecCode<typeof code, \"CBOR\">} */\n  get code() {\n    return code\n  }\n  format() {\n    return (0,_formatter_js__WEBPACK_IMPORTED_MODULE_3__.format)(this.model)\n  }\n  encode() {\n    return encode(this.model)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vc3JjL2NvZGVjL2Nib3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ0k7QUFDZ0M7QUFDOUI7QUFDSTtBQUNYOztBQUUxQjtBQUNBLGFBQWEsZ0RBQVM7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQW1CO0FBQ2pDLFdBQVcsbUJBQW1CO0FBQzlCLGFBQWE7QUFDYjtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFtQjtBQUNqQyxXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxVQUFVLDRCQUE0QixFQUFFLHVEQUFXOztBQUVuRCxvQkFBb0IsWUFBWTtBQUNoQyxJQUFJLGtEQUFXO0FBQ2Y7QUFDQSw4QkFBOEIsS0FBSztBQUNuQywyQkFBMkIsS0FBSztBQUNoQyxtQkFBbUIsS0FBSztBQUN4QjtBQUNBO0FBQ0EsU0FBUyx1REFBVztBQUNwQjtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0IsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaURBQWdCO0FBQzNCLElBQUk7QUFDSjtBQUNBLDRCQUE0QixRQUFRLGdCQUFnQiwwQkFBMEI7QUFDOUU7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakMsV0FBVyw4QkFBOEI7QUFDekMsYUFBYTtBQUNiO0FBQ087QUFDUCxnQkFBZ0Isa0RBQVc7QUFDM0I7QUFDQSxPQUFPLHVEQUFXO0FBQ2xCLE9BQU8sdURBQVc7QUFDbEIsT0FBTyx5REFBYTtBQUNwQixHQUFHO0FBQ0g7O0FBRWlCOztBQUVqQjtBQUNBLGNBQWMsbUJBQW1CO0FBQ2pDLGFBQWE7QUFDYjtBQUNBLHVCQUF1QiwwQ0FBSTtBQUMzQixhQUFhLDBDQUEwQztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcscURBQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL3NyYy9jb2RlYy9jYm9yLmpzPzJiZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVUNBTiBmcm9tIFwiLi4vdWNhbi5qc1wiXG5pbXBvcnQgKiBhcyBDQk9SIGZyb20gXCJAaXBsZC9kYWctY2JvclwiXG5pbXBvcnQgeyByZWFkUGF5bG9hZCwgcmVhZFZlcnNpb24sIHJlYWRTaWduYXR1cmUgfSBmcm9tIFwiLi4vc2NoZW1hLmpzXCJcbmltcG9ydCB7IGZvcm1hdCB9IGZyb20gXCIuLi9mb3JtYXR0ZXIuanNcIlxuaW1wb3J0ICogYXMgU2lnbmF0dXJlIGZyb20gXCIuLi9zaWduYXR1cmUuanNcIlxuaW1wb3J0IHsgVmlldyB9IGZyb20gXCIuLi92aWV3LmpzXCJcblxuZXhwb3J0IGNvbnN0IG5hbWUgPSBcImRhZy11Y2FuXCJcbmV4cG9ydCBjb25zdCBjb2RlID0gQ0JPUi5jb2RlXG5cbi8qKlxuICogQ3JlYXRlcyBhIFVDQU4gdmlldyBmcm9tIHRoZSB1bmRlcmx5aW5nIGRhdGEgbW9kZWwuIFBsZWFzZSBub3RlIHRoYXQgdGhpc1xuICogZnVuY3Rpb24gZG9lcyBubyB2ZXJpZmljYXRpb24gb2YgdGhlIG1vZGVsIGFuZCBpdCBpcyBjYWxsZXJzIHJlc3BvbnNpYmlsaXR5XG4gKiB0byBlbnN1cmUgdGhhdDpcbiAqXG4gKiAxLiBEYXRhIG1vZGVsIGlzIGNvcnJlY3QgY29udGFpbnMgYWxsIHRoZSBmaWVsZCBldGMuLi5cbiAqIDIuIFBheWxvYWQgb2YgdGhlIHNpZ25hdHVyZSB3aWxsIG1hdGNoIHBheWxvZGFkIHdoZW4gbW9kZWwgaXMgc2VyaWFsaXplZFxuICogICAgd2l0aCBEQUctSlNPTi5cbiAqXG4gKiBJbiBvdGhlciB3b3JkcyB5b3Ugc2hvdWxkIG5ldmVyIHVzZSB0aGlzIGZ1bmN0aW9uIHVubGVzcyB5b3UndmUgcGFyc2VkIG9yXG4gKiBkZWNvZGVkIGEgdmFsaWQgVUNBTiBhbmQgd2FudCB0byB3cmFwIGl0IGludG8gYSB2aWV3LlxuICpcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5DYXBhYmlsaXRpZXN9IENcbiAqIEBwYXJhbSB7VUNBTi5Gcm9tTW9kZWw8Qz59IG1vZGVsXG4gKiBAcmV0dXJucyB7VUNBTi5WaWV3PEM+fVxuICovXG5leHBvcnQgY29uc3QgZnJvbSA9IG1vZGVsID0+IG5ldyBDQk9SVmlldyhtb2RlbClcblxuLyoqXG4gKiBFbmNvZGVzIGdpdmVuIFVDQU4gKGluIGVpdGhlciBJUExEIG9yIEpXVCByZXByZXNlbnRhdGlvbikgYW5kIGVuY29kZXMgaXQgaW50b1xuICogY29ycmVzcG9uZGluZyBieXRlcyByZXByZXNlbnRhdGlvbi4gVUNBTiBpbiBJUExEIHJlcHJlc2VudGF0aW9uIGlzIGVuY29kZWQgYXNcbiAqIERBRy1DQk9SIHdoaWNoIEpXVCByZXByZXNlbnRhdGlvbiBpcyBlbmNvZGVkIGFzIHJhdyBieXRlcyBvZiBKV1Qgc3RyaW5nLlxuICpcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5DYXBhYmlsaXRpZXN9IENcbiAqIEBwYXJhbSB7VUNBTi5Nb2RlbDxDPn0gbW9kZWxcbiAqIEByZXR1cm5zIHtVQ0FOLkJ5dGVWaWV3PFVDQU4uTW9kZWw8Qz4+fVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0gbW9kZWwgPT4ge1xuICBjb25zdCB7IGZjdCwgbm5jLCBuYmYsIC4uLnBheWxvYWQgfSA9IHJlYWRQYXlsb2FkKG1vZGVsKVxuXG4gIHJldHVybiAvKiogQHR5cGUge1VpbnQ4QXJyYXl9ICovIChcbiAgICBDQk9SLmVuY29kZSh7XG4gICAgICAvLyBsZWF2ZSBvdXQgb3B0aW9uYWxzIHVubGVzcyB0aGV5IGFyZSBzZXRcbiAgICAgIC4uLihmY3QubGVuZ3RoID4gMCAmJiB7IGZjdCB9KSxcbiAgICAgIC4uLihubmMgIT0gbnVsbCAmJiB7IG5uYyB9KSxcbiAgICAgIC4uLihuYmYgJiYgeyBuYmYgfSksXG4gICAgICAuLi5wYXlsb2FkLFxuICAgICAgLy8gYWRkIHZlcnNpb24gYW5kIHNpZ25hdHVyZVxuICAgICAgdjogcmVhZFZlcnNpb24obW9kZWwudiwgXCJ2XCIpLFxuICAgICAgczogZW5jb2RlU2lnbmF0dXJlKG1vZGVsLnMsIFwic1wiKSxcbiAgICB9KVxuICApXG59XG5cbi8qKlxuICogQHBhcmFtIHtVQ0FOLlNpZ25hdHVyZX0gc2lnbmF0dXJlXG4gKiBAcGFyYW0ge3N0cmluZ30gY29udGV4dFxuICovXG5jb25zdCBlbmNvZGVTaWduYXR1cmUgPSAoc2lnbmF0dXJlLCBjb250ZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIFNpZ25hdHVyZS5lbmNvZGUoc2lnbmF0dXJlKVxuICB9IGNhdGNoIChjYXVzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBFeHBlY3RlZCBzaWduYXR1cmUgJHtjb250ZXh0fSwgaW5zdGVhZCBnb3QgJHtKU09OLnN0cmluZ2lmeShzaWduYXR1cmUpfWAsXG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gdHlwZXMgZG9uJ3Qga25vdyBhYm91dCBzZWNvbmQgYXJnXG4gICAgICB7IGNhdXNlIH1cbiAgICApXG4gIH1cbn1cblxuLyoqXG4gKiBEZWNvZGVzIFVDQU4gaW4gcHJpbWFyeSBDQk9SIHJlcHJlc2VudGF0aW9uLiBJdCBkb2VzIG5vdCB2YWxpZGF0ZSBVQ0FOLCBpdCdzXG4gKiBzaWduYXR1cmUgb3IgcHJvb2YgY2hhaW4uIFRoaXMgaXMgdG8gc2F5IGRlY29kZWQgVUNBTiBtYXkgYmUgaW52YWxpZC5cbiAqXG4gKiBAdGVtcGxhdGUge1VDQU4uQ2FwYWJpbGl0aWVzfSBDXG4gKiBAcGFyYW0ge1VDQU4uQnl0ZVZpZXc8VUNBTi5Nb2RlbDxDPj59IGJ5dGVzXG4gKiBAcmV0dXJucyB7VUNBTi5WaWV3PEM+fVxuICovXG5leHBvcnQgY29uc3QgZGVjb2RlID0gYnl0ZXMgPT4ge1xuICBjb25zdCBtb2RlbCA9IENCT1IuZGVjb2RlKGJ5dGVzKVxuICByZXR1cm4gbmV3IENCT1JWaWV3KHtcbiAgICAuLi5yZWFkUGF5bG9hZChtb2RlbCksXG4gICAgdjogcmVhZFZlcnNpb24obW9kZWwudiwgXCJ2XCIpLFxuICAgIHM6IHJlYWRTaWduYXR1cmUobW9kZWwucyksXG4gIH0pXG59XG5cbmV4cG9ydCB7IGZvcm1hdCB9XG5cbi8qKlxuICogQHRlbXBsYXRlIHtVQ0FOLkNhcGFiaWxpdGllc30gQ1xuICogQGV4dGVuZHMge1ZpZXc8Qz59XG4gKi9cbmNsYXNzIENCT1JWaWV3IGV4dGVuZHMgVmlldyB7XG4gIC8qKiBAdHlwZSB7VUNBTi5NdWx0aWNvZGVjQ29kZTx0eXBlb2YgY29kZSwgXCJDQk9SXCI+fSAqL1xuICBnZXQgY29kZSgpIHtcbiAgICByZXR1cm4gY29kZVxuICB9XG4gIGZvcm1hdCgpIHtcbiAgICByZXR1cm4gZm9ybWF0KHRoaXMubW9kZWwpXG4gIH1cbiAgZW5jb2RlKCkge1xuICAgIHJldHVybiBlbmNvZGUodGhpcy5tb2RlbClcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/codec/cbor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/codec/jwt.js":
/*!******************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/codec/jwt.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* reexport safe */ multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_3__.code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utf8.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/utf8.js\");\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/parser.js\");\n/* harmony import */ var multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/codecs/raw */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/raw.js\");\n/* harmony import */ var _view_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../view.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/view.js\");\n\n\n\n\n\n\n\nconst name = \"dag-ucan\"\n\n/**\n * Creates a UCAN view from the underlying data model. Please note that this\n * function does no verification of the model and it is callers responsibility\n * to ensure that:\n *\n * 1. Data model is correct contains all the field etc...\n * 2. Payload of the signature will match paylodad when model is serialized\n *    with DAG-JSON.\n *\n * In other words you should never use this function unless you've parsed or\n * decoded a valid UCAN and want to wrap it into a view.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.FromJWT<C>} model\n * @returns {UCAN.View<C>}\n */\nconst from = model => new JWTView(model)\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {UCAN.ByteView<UCAN.FromJWT<C>>} bytes\n * @returns {UCAN.View<C>}\n */\nconst decode = bytes => {\n  const jwt = /** @type {UCAN.JWT<C>} */ (_utf8_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes))\n\n  return new JWTView({ ...(0,_parser_js__WEBPACK_IMPORTED_MODULE_2__.parse)(jwt), jwt })\n}\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {UCAN.FromJWT<C>} model\n * @returns {UCAN.ByteView<UCAN.UCAN<C>>}\n */\nconst encode = ({ jwt }) => _utf8_js__WEBPACK_IMPORTED_MODULE_1__.encode(jwt)\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {UCAN.FromJWT<C>} model\n * @returns {UCAN.JWT<C>}\n */\nconst format = ({ jwt }) => jwt\n\n/**\n * @template {UCAN.Capabilities} C\n * @extends {View<C>}\n */\nclass JWTView extends _view_js__WEBPACK_IMPORTED_MODULE_4__.View {\n  /**\n   * @param {UCAN.FromJWT<C>} model\n   */\n  constructor(model) {\n    super(model)\n    this.model = model\n  }\n  /** @type {UCAN.MulticodecCode<typeof code, \"Raw\">} */\n  get code() {\n    return multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_3__.code\n  }\n  format() {\n    return format(this.model)\n  }\n  encode() {\n    return encode(this.model)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vc3JjL2NvZGVjL2p3dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFrQztBQUNBO0FBQ0U7QUFDVTtBQUNiOztBQUVsQjtBQUNSOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQW1CO0FBQ2pDLFdBQVcsaUJBQWlCO0FBQzVCLGFBQWE7QUFDYjtBQUNPOztBQUVQO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakMsV0FBVyxnQ0FBZ0M7QUFDM0MsYUFBYTtBQUNiO0FBQ087QUFDUCx5QkFBeUIsYUFBYSxJQUFJLDRDQUFXOztBQUVyRCx1QkFBdUIsR0FBRyxpREFBSyxZQUFZO0FBQzNDOztBQUVBO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakMsV0FBVyxpQkFBaUI7QUFDNUIsYUFBYTtBQUNiO0FBQ08sa0JBQWtCLEtBQUssS0FBSyw0Q0FBVzs7QUFFOUM7QUFDQSxjQUFjLG1CQUFtQjtBQUNqQyxXQUFXLGlCQUFpQjtBQUM1QixhQUFhO0FBQ2I7QUFDTyxrQkFBa0IsS0FBSzs7QUFFOUI7QUFDQSxjQUFjLG1CQUFtQjtBQUNqQyxhQUFhO0FBQ2I7QUFDQSxzQkFBc0IsMENBQUk7QUFDMUI7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5Q0FBeUM7QUFDdEQ7QUFDQSxXQUFXLHlEQUFJO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL3NyYy9jb2RlYy9qd3QuanM/MDRhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVQ0FOIGZyb20gXCIuLi91Y2FuLmpzXCJcbmltcG9ydCAqIGFzIFVURjggZnJvbSBcIi4uL3V0ZjguanNcIlxuaW1wb3J0IHsgcGFyc2UgfSBmcm9tIFwiLi4vcGFyc2VyLmpzXCJcbmltcG9ydCB7IGNvZGUgfSBmcm9tIFwibXVsdGlmb3JtYXRzL2NvZGVjcy9yYXdcIlxuaW1wb3J0IHsgVmlldyB9IGZyb20gXCIuLi92aWV3LmpzXCJcblxuZXhwb3J0IHsgY29kZSB9XG5leHBvcnQgY29uc3QgbmFtZSA9IFwiZGFnLXVjYW5cIlxuXG4vKipcbiAqIENyZWF0ZXMgYSBVQ0FOIHZpZXcgZnJvbSB0aGUgdW5kZXJseWluZyBkYXRhIG1vZGVsLiBQbGVhc2Ugbm90ZSB0aGF0IHRoaXNcbiAqIGZ1bmN0aW9uIGRvZXMgbm8gdmVyaWZpY2F0aW9uIG9mIHRoZSBtb2RlbCBhbmQgaXQgaXMgY2FsbGVycyByZXNwb25zaWJpbGl0eVxuICogdG8gZW5zdXJlIHRoYXQ6XG4gKlxuICogMS4gRGF0YSBtb2RlbCBpcyBjb3JyZWN0IGNvbnRhaW5zIGFsbCB0aGUgZmllbGQgZXRjLi4uXG4gKiAyLiBQYXlsb2FkIG9mIHRoZSBzaWduYXR1cmUgd2lsbCBtYXRjaCBwYXlsb2RhZCB3aGVuIG1vZGVsIGlzIHNlcmlhbGl6ZWRcbiAqICAgIHdpdGggREFHLUpTT04uXG4gKlxuICogSW4gb3RoZXIgd29yZHMgeW91IHNob3VsZCBuZXZlciB1c2UgdGhpcyBmdW5jdGlvbiB1bmxlc3MgeW91J3ZlIHBhcnNlZCBvclxuICogZGVjb2RlZCBhIHZhbGlkIFVDQU4gYW5kIHdhbnQgdG8gd3JhcCBpdCBpbnRvIGEgdmlldy5cbiAqXG4gKiBAdGVtcGxhdGUge1VDQU4uQ2FwYWJpbGl0aWVzfSBDXG4gKiBAcGFyYW0ge1VDQU4uRnJvbUpXVDxDPn0gbW9kZWxcbiAqIEByZXR1cm5zIHtVQ0FOLlZpZXc8Qz59XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tID0gbW9kZWwgPT4gbmV3IEpXVFZpZXcobW9kZWwpXG5cbi8qKlxuICogQHRlbXBsYXRlIHtVQ0FOLkNhcGFiaWxpdGllc30gQ1xuICogQHBhcmFtIHtVQ0FOLkJ5dGVWaWV3PFVDQU4uRnJvbUpXVDxDPj59IGJ5dGVzXG4gKiBAcmV0dXJucyB7VUNBTi5WaWV3PEM+fVxuICovXG5leHBvcnQgY29uc3QgZGVjb2RlID0gYnl0ZXMgPT4ge1xuICBjb25zdCBqd3QgPSAvKiogQHR5cGUge1VDQU4uSldUPEM+fSAqLyAoVVRGOC5kZWNvZGUoYnl0ZXMpKVxuXG4gIHJldHVybiBuZXcgSldUVmlldyh7IC4uLnBhcnNlKGp3dCksIGp3dCB9KVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5DYXBhYmlsaXRpZXN9IENcbiAqIEBwYXJhbSB7VUNBTi5Gcm9tSldUPEM+fSBtb2RlbFxuICogQHJldHVybnMge1VDQU4uQnl0ZVZpZXc8VUNBTi5VQ0FOPEM+Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9ICh7IGp3dCB9KSA9PiBVVEY4LmVuY29kZShqd3QpXG5cbi8qKlxuICogQHRlbXBsYXRlIHtVQ0FOLkNhcGFiaWxpdGllc30gQ1xuICogQHBhcmFtIHtVQ0FOLkZyb21KV1Q8Qz59IG1vZGVsXG4gKiBAcmV0dXJucyB7VUNBTi5KV1Q8Qz59XG4gKi9cbmV4cG9ydCBjb25zdCBmb3JtYXQgPSAoeyBqd3QgfSkgPT4gand0XG5cbi8qKlxuICogQHRlbXBsYXRlIHtVQ0FOLkNhcGFiaWxpdGllc30gQ1xuICogQGV4dGVuZHMge1ZpZXc8Qz59XG4gKi9cbmNsYXNzIEpXVFZpZXcgZXh0ZW5kcyBWaWV3IHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7VUNBTi5Gcm9tSldUPEM+fSBtb2RlbFxuICAgKi9cbiAgY29uc3RydWN0b3IobW9kZWwpIHtcbiAgICBzdXBlcihtb2RlbClcbiAgICB0aGlzLm1vZGVsID0gbW9kZWxcbiAgfVxuICAvKiogQHR5cGUge1VDQU4uTXVsdGljb2RlY0NvZGU8dHlwZW9mIGNvZGUsIFwiUmF3XCI+fSAqL1xuICBnZXQgY29kZSgpIHtcbiAgICByZXR1cm4gY29kZVxuICB9XG4gIGZvcm1hdCgpIHtcbiAgICByZXR1cm4gZm9ybWF0KHRoaXMubW9kZWwpXG4gIH1cbiAgZW5jb2RlKCkge1xuICAgIHJldHVybiBlbmNvZGUodGhpcy5tb2RlbClcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/codec/jwt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/did.js":
/*!************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/did.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLS12381G1: () => (/* binding */ BLS12381G1),\n/* harmony export */   BLS12381G2: () => (/* binding */ BLS12381G2),\n/* harmony export */   DID_CORE: () => (/* binding */ DID_CORE),\n/* harmony export */   ED25519: () => (/* binding */ ED25519),\n/* harmony export */   P256: () => (/* binding */ P256),\n/* harmony export */   P384: () => (/* binding */ P384),\n/* harmony export */   P521: () => (/* binding */ P521),\n/* harmony export */   RSA: () => (/* binding */ RSA),\n/* harmony export */   SECP256K1: () => (/* binding */ SECP256K1),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/index.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utf8.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/utf8.js\");\n\n\n\n\n\nconst DID_PREFIX = \"did:\"\nconst DID_PREFIX_SIZE = DID_PREFIX.length\nconst DID_KEY_PREFIX = `did:key:`\nconst DID_KEY_PREFIX_SIZE = DID_KEY_PREFIX.length\n\nconst ED25519 = 0xed\nconst RSA = 0x1205\nconst P256 = 0x1200\nconst P384 = 0x1201\nconst P521 = 0x1202\nconst SECP256K1 = 0xe7\nconst BLS12381G1 = 0xea\nconst BLS12381G2 = 0xeb\nconst DID_CORE = 0x0d1d\nconst METHOD_OFFSET = multiformats__WEBPACK_IMPORTED_MODULE_2__.varint.encodingLength(DID_CORE)\n\n/**\n * @typedef {typeof ED25519|typeof RSA|typeof P256|typeof P384|typeof P521|typeof DID_CORE} Code\n */\n\n/**\n * Parses a DID string into a DID buffer view\n *\n * @template {UCAN.DID} ID\n * @param {ID|UCAN.ToString<unknown>} did\n * @returns {UCAN.PrincipalView<ID>}\n */\nconst parse = did => {\n  if (!did.startsWith(DID_PREFIX)) {\n    throw new RangeError(`Invalid DID \"${did}\", must start with 'did:'`)\n  } else if (did.startsWith(DID_KEY_PREFIX)) {\n    const key = multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__.base58btc.decode(did.slice(DID_KEY_PREFIX_SIZE))\n    return decode(key)\n  } else {\n    const suffix = _utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(did.slice(DID_PREFIX_SIZE))\n    const bytes = new Uint8Array(suffix.byteLength + METHOD_OFFSET)\n    multiformats__WEBPACK_IMPORTED_MODULE_2__.varint.encodeTo(DID_CORE, bytes)\n    bytes.set(suffix, METHOD_OFFSET)\n    return new DID(bytes)\n  }\n}\n\n/**\n * @template {UCAN.DID} ID\n * @param {UCAN.Principal<ID>} id\n * @returns {ID}\n */\nconst format = id => id.did()\n\n/**\n * @template {UCAN.DID} ID\n * @param {UCAN.PrincipalView<ID>|UCAN.ByteView<UCAN.Principal<ID>>|UCAN.Principal<ID>|ID|UCAN.ToJSONString<unknown>} principal\n * @returns {UCAN.PrincipalView<ID>}\n */\nconst from = principal => {\n  if (principal instanceof DID) {\n    return principal\n  } else if (principal instanceof Uint8Array) {\n    return decode(principal)\n  } else if (typeof principal === \"string\") {\n    return parse(principal)\n  } else {\n    return parse(principal.did())\n  }\n}\n\n/**\n * @template {UCAN.DID} ID\n * @param {UCAN.ByteView<UCAN.Principal<ID>>} bytes\n * @returns {UCAN.PrincipalView<ID>}\n */\nconst decode = bytes => {\n  const [code] = multiformats__WEBPACK_IMPORTED_MODULE_2__.varint.decode(bytes)\n  const { buffer, byteOffset, byteLength } = bytes\n  switch (code) {\n    case P256:\n      if (bytes.length > 35) {\n        throw new RangeError(`Only p256-pub compressed is supported.`)\n      }\n    case ED25519:\n    case RSA:\n    case P384:\n    case P521:\n    case BLS12381G1:\n    case BLS12381G2:\n    case SECP256K1:\n      return /** @type {UCAN.PrincipalView<any>} */ (\n        new DIDKey(buffer, byteOffset, byteLength)\n      )\n    case DID_CORE:\n      return new DID(buffer, byteOffset, byteLength)\n    default:\n      throw new RangeError(\n        `Unsupported DID encoding, unknown multicode 0x${code.toString(16)}.`\n      )\n  }\n}\n\n/**\n * @template {UCAN.DID} ID\n * @param {UCAN.Principal<ID>} principal\n * @returns {UCAN.PrincipalView<ID>}\n */\nconst encode = principal => parse(principal.did())\n\n/**\n * @template {UCAN.DID} ID\n * @implements {UCAN.PrincipalView<ID>}\n * @extends {Uint8Array}\n */\nclass DID extends Uint8Array {\n  /**\n   * @returns {ID}\n   */\n  did() {\n    const bytes = new Uint8Array(this.buffer, this.byteOffset + METHOD_OFFSET)\n    return /** @type {ID} */ (`did:${_utf8_js__WEBPACK_IMPORTED_MODULE_3__.decode(bytes)}`)\n  }\n\n  toJSON() {\n    return this.did()\n  }\n}\n\n/**\n * @implements {UCAN.PrincipalView<UCAN.DID<\"key\">>}\n * @extends {DID<UCAN.DID<\"key\">>}\n */\nclass DIDKey extends DID {\n  /**\n   * @return {`did:key:${string}`}\n   */\n  did() {\n    return `did:key:${multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__.base58btc.encode(this)}`\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vc3JjL2RpZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaUM7QUFDb0I7QUFDaEI7QUFDSjs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1Asc0JBQXNCLCtEQUFxQjs7QUFFM0M7QUFDQSxhQUFhLCtFQUErRTtBQUM1Rjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFVBQVU7QUFDeEIsV0FBVywyQkFBMkI7QUFDdEMsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLHlDQUF5QyxJQUFJO0FBQzdDLElBQUk7QUFDSixnQkFBZ0IsZ0VBQVM7QUFDekI7QUFDQSxJQUFJO0FBQ0osbUJBQW1CLDRDQUFXO0FBQzlCO0FBQ0EsSUFBSSx5REFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsVUFBVTtBQUN4QixXQUFXLG9CQUFvQjtBQUMvQixhQUFhO0FBQ2I7QUFDTzs7QUFFUDtBQUNBLGNBQWMsVUFBVTtBQUN4QixXQUFXLDJHQUEyRztBQUN0SCxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCLFdBQVcsbUNBQW1DO0FBQzlDLGFBQWE7QUFDYjtBQUNPO0FBQ1AsaUJBQWlCLHVEQUFhO0FBQzlCLFVBQVUsaUNBQWlDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELGtCQUFrQjtBQUMzRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFVBQVU7QUFDeEIsV0FBVyxvQkFBb0I7QUFDL0IsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQSxjQUFjLFVBQVU7QUFDeEIsZ0JBQWdCO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLElBQUksV0FBVyw0Q0FBVyxRQUFRO0FBQ3hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxjQUFjLFdBQVcsT0FBTztBQUNoQztBQUNBO0FBQ0Esc0JBQXNCLGdFQUFTLGNBQWM7QUFDN0M7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL3NyYy9kaWQuanM/ZjMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVQ0FOIGZyb20gXCIuL3VjYW4uanNcIlxuaW1wb3J0IHsgYmFzZTU4YnRjIH0gZnJvbSBcIm11bHRpZm9ybWF0cy9iYXNlcy9iYXNlNThcIlxuaW1wb3J0IHsgdmFyaW50IH0gZnJvbSBcIm11bHRpZm9ybWF0c1wiXG5pbXBvcnQgKiBhcyBVVEY4IGZyb20gXCIuL3V0ZjguanNcIlxuXG5jb25zdCBESURfUFJFRklYID0gXCJkaWQ6XCJcbmNvbnN0IERJRF9QUkVGSVhfU0laRSA9IERJRF9QUkVGSVgubGVuZ3RoXG5jb25zdCBESURfS0VZX1BSRUZJWCA9IGBkaWQ6a2V5OmBcbmNvbnN0IERJRF9LRVlfUFJFRklYX1NJWkUgPSBESURfS0VZX1BSRUZJWC5sZW5ndGhcblxuZXhwb3J0IGNvbnN0IEVEMjU1MTkgPSAweGVkXG5leHBvcnQgY29uc3QgUlNBID0gMHgxMjA1XG5leHBvcnQgY29uc3QgUDI1NiA9IDB4MTIwMFxuZXhwb3J0IGNvbnN0IFAzODQgPSAweDEyMDFcbmV4cG9ydCBjb25zdCBQNTIxID0gMHgxMjAyXG5leHBvcnQgY29uc3QgU0VDUDI1NksxID0gMHhlN1xuZXhwb3J0IGNvbnN0IEJMUzEyMzgxRzEgPSAweGVhXG5leHBvcnQgY29uc3QgQkxTMTIzODFHMiA9IDB4ZWJcbmV4cG9ydCBjb25zdCBESURfQ09SRSA9IDB4MGQxZFxuY29uc3QgTUVUSE9EX09GRlNFVCA9IHZhcmludC5lbmNvZGluZ0xlbmd0aChESURfQ09SRSlcblxuLyoqXG4gKiBAdHlwZWRlZiB7dHlwZW9mIEVEMjU1MTl8dHlwZW9mIFJTQXx0eXBlb2YgUDI1Nnx0eXBlb2YgUDM4NHx0eXBlb2YgUDUyMXx0eXBlb2YgRElEX0NPUkV9IENvZGVcbiAqL1xuXG4vKipcbiAqIFBhcnNlcyBhIERJRCBzdHJpbmcgaW50byBhIERJRCBidWZmZXIgdmlld1xuICpcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5ESUR9IElEXG4gKiBAcGFyYW0ge0lEfFVDQU4uVG9TdHJpbmc8dW5rbm93bj59IGRpZFxuICogQHJldHVybnMge1VDQU4uUHJpbmNpcGFsVmlldzxJRD59XG4gKi9cbmV4cG9ydCBjb25zdCBwYXJzZSA9IGRpZCA9PiB7XG4gIGlmICghZGlkLnN0YXJ0c1dpdGgoRElEX1BSRUZJWCkpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihgSW52YWxpZCBESUQgXCIke2RpZH1cIiwgbXVzdCBzdGFydCB3aXRoICdkaWQ6J2ApXG4gIH0gZWxzZSBpZiAoZGlkLnN0YXJ0c1dpdGgoRElEX0tFWV9QUkVGSVgpKSB7XG4gICAgY29uc3Qga2V5ID0gYmFzZTU4YnRjLmRlY29kZShkaWQuc2xpY2UoRElEX0tFWV9QUkVGSVhfU0laRSkpXG4gICAgcmV0dXJuIGRlY29kZShrZXkpXG4gIH0gZWxzZSB7XG4gICAgY29uc3Qgc3VmZml4ID0gVVRGOC5lbmNvZGUoZGlkLnNsaWNlKERJRF9QUkVGSVhfU0laRSkpXG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShzdWZmaXguYnl0ZUxlbmd0aCArIE1FVEhPRF9PRkZTRVQpXG4gICAgdmFyaW50LmVuY29kZVRvKERJRF9DT1JFLCBieXRlcylcbiAgICBieXRlcy5zZXQoc3VmZml4LCBNRVRIT0RfT0ZGU0VUKVxuICAgIHJldHVybiBuZXcgRElEKGJ5dGVzKVxuICB9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtVQ0FOLkRJRH0gSURcbiAqIEBwYXJhbSB7VUNBTi5QcmluY2lwYWw8SUQ+fSBpZFxuICogQHJldHVybnMge0lEfVxuICovXG5leHBvcnQgY29uc3QgZm9ybWF0ID0gaWQgPT4gaWQuZGlkKClcblxuLyoqXG4gKiBAdGVtcGxhdGUge1VDQU4uRElEfSBJRFxuICogQHBhcmFtIHtVQ0FOLlByaW5jaXBhbFZpZXc8SUQ+fFVDQU4uQnl0ZVZpZXc8VUNBTi5QcmluY2lwYWw8SUQ+PnxVQ0FOLlByaW5jaXBhbDxJRD58SUR8VUNBTi5Ub0pTT05TdHJpbmc8dW5rbm93bj59IHByaW5jaXBhbFxuICogQHJldHVybnMge1VDQU4uUHJpbmNpcGFsVmlldzxJRD59XG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tID0gcHJpbmNpcGFsID0+IHtcbiAgaWYgKHByaW5jaXBhbCBpbnN0YW5jZW9mIERJRCkge1xuICAgIHJldHVybiBwcmluY2lwYWxcbiAgfSBlbHNlIGlmIChwcmluY2lwYWwgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgcmV0dXJuIGRlY29kZShwcmluY2lwYWwpXG4gIH0gZWxzZSBpZiAodHlwZW9mIHByaW5jaXBhbCA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBwYXJzZShwcmluY2lwYWwpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHBhcnNlKHByaW5jaXBhbC5kaWQoKSlcbiAgfVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5ESUR9IElEXG4gKiBAcGFyYW0ge1VDQU4uQnl0ZVZpZXc8VUNBTi5QcmluY2lwYWw8SUQ+Pn0gYnl0ZXNcbiAqIEByZXR1cm5zIHtVQ0FOLlByaW5jaXBhbFZpZXc8SUQ+fVxuICovXG5leHBvcnQgY29uc3QgZGVjb2RlID0gYnl0ZXMgPT4ge1xuICBjb25zdCBbY29kZV0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKVxuICBjb25zdCB7IGJ1ZmZlciwgYnl0ZU9mZnNldCwgYnl0ZUxlbmd0aCB9ID0gYnl0ZXNcbiAgc3dpdGNoIChjb2RlKSB7XG4gICAgY2FzZSBQMjU2OlxuICAgICAgaWYgKGJ5dGVzLmxlbmd0aCA+IDM1KSB7XG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKGBPbmx5IHAyNTYtcHViIGNvbXByZXNzZWQgaXMgc3VwcG9ydGVkLmApXG4gICAgICB9XG4gICAgY2FzZSBFRDI1NTE5OlxuICAgIGNhc2UgUlNBOlxuICAgIGNhc2UgUDM4NDpcbiAgICBjYXNlIFA1MjE6XG4gICAgY2FzZSBCTFMxMjM4MUcxOlxuICAgIGNhc2UgQkxTMTIzODFHMjpcbiAgICBjYXNlIFNFQ1AyNTZLMTpcbiAgICAgIHJldHVybiAvKiogQHR5cGUge1VDQU4uUHJpbmNpcGFsVmlldzxhbnk+fSAqLyAoXG4gICAgICAgIG5ldyBESURLZXkoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKVxuICAgICAgKVxuICAgIGNhc2UgRElEX0NPUkU6XG4gICAgICByZXR1cm4gbmV3IERJRChidWZmZXIsIGJ5dGVPZmZzZXQsIGJ5dGVMZW5ndGgpXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFxuICAgICAgICBgVW5zdXBwb3J0ZWQgRElEIGVuY29kaW5nLCB1bmtub3duIG11bHRpY29kZSAweCR7Y29kZS50b1N0cmluZygxNil9LmBcbiAgICAgIClcbiAgfVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5ESUR9IElEXG4gKiBAcGFyYW0ge1VDQU4uUHJpbmNpcGFsPElEPn0gcHJpbmNpcGFsXG4gKiBAcmV0dXJucyB7VUNBTi5QcmluY2lwYWxWaWV3PElEPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IHByaW5jaXBhbCA9PiBwYXJzZShwcmluY2lwYWwuZGlkKCkpXG5cbi8qKlxuICogQHRlbXBsYXRlIHtVQ0FOLkRJRH0gSURcbiAqIEBpbXBsZW1lbnRzIHtVQ0FOLlByaW5jaXBhbFZpZXc8SUQ+fVxuICogQGV4dGVuZHMge1VpbnQ4QXJyYXl9XG4gKi9cbmNsYXNzIERJRCBleHRlbmRzIFVpbnQ4QXJyYXkge1xuICAvKipcbiAgICogQHJldHVybnMge0lEfVxuICAgKi9cbiAgZGlkKCkge1xuICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIsIHRoaXMuYnl0ZU9mZnNldCArIE1FVEhPRF9PRkZTRVQpXG4gICAgcmV0dXJuIC8qKiBAdHlwZSB7SUR9ICovIChgZGlkOiR7VVRGOC5kZWNvZGUoYnl0ZXMpfWApXG4gIH1cblxuICB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHRoaXMuZGlkKClcbiAgfVxufVxuXG4vKipcbiAqIEBpbXBsZW1lbnRzIHtVQ0FOLlByaW5jaXBhbFZpZXc8VUNBTi5ESUQ8XCJrZXlcIj4+fVxuICogQGV4dGVuZHMge0RJRDxVQ0FOLkRJRDxcImtleVwiPj59XG4gKi9cbmNsYXNzIERJREtleSBleHRlbmRzIERJRCB7XG4gIC8qKlxuICAgKiBAcmV0dXJuIHtgZGlkOmtleToke3N0cmluZ31gfVxuICAgKi9cbiAgZGlkKCkge1xuICAgIHJldHVybiBgZGlkOmtleToke2Jhc2U1OGJ0Yy5lbmNvZGUodGhpcyl9YFxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/formatter.js":
/*!******************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/formatter.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   formatHeader: () => (/* binding */ formatHeader),\n/* harmony export */   formatPayload: () => (/* binding */ formatPayload),\n/* harmony export */   formatSignPayload: () => (/* binding */ formatSignPayload),\n/* harmony export */   formatSignature: () => (/* binding */ formatSignature)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var _did_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./did.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _ipld_dag_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ipld/dag-json */ \"(ssr)/./node_modules/@ipld/dag-json/src/index.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./signature.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n\n\n\n\n\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {UCAN.Model<C>} model\n * @returns {UCAN.JWT<C>}\n */\nconst format = model => {\n  const header = formatHeader(model.v, model.s.algorithm)\n  const payload = formatPayload(model)\n  const signature = formatSignature(model.s)\n  return /** @type {UCAN.JWT<C>} */ (`${header}.${payload}.${signature}`)\n}\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {UCAN.Payload<C>} payload\n * @param {UCAN.Version} version\n * @param {string} alg\n */\nconst formatSignPayload = (payload, version, alg) =>\n  `${formatHeader(version, alg)}.${formatPayload(payload)}`\n\n/**\n * @param {UCAN.Version} version\n * @param {string} alg\n */\nconst formatHeader = (version, alg) =>\n  multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseEncode(encodeHeader(version, alg))\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {UCAN.Payload<C>} data\n */\nconst formatPayload = data => multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseEncode(encodePayload(data))\n\n/**\n * @param {UCAN.Signature<string>} signature\n */\nconst formatSignature = signature => multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseEncode(signature.raw)\n\n/**\n * @param {UCAN.Version} v\n * @param {string} alg\n * @returns {UCAN.ByteView<UCAN.JWTHeader>}\n */\nconst encodeHeader = (v, alg) =>\n  _ipld_dag_json__WEBPACK_IMPORTED_MODULE_2__.encode({\n    alg,\n    ucv: v,\n    typ: \"JWT\",\n  })\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {UCAN.Payload<C>} data\n * @returns {UCAN.ByteView<UCAN.JWTPayload<C>>}\n */\nconst encodePayload = data =>\n  _ipld_dag_json__WEBPACK_IMPORTED_MODULE_2__.encode({\n    iss: _did_js__WEBPACK_IMPORTED_MODULE_1__.format(data.iss),\n    aud: _did_js__WEBPACK_IMPORTED_MODULE_1__.format(data.aud),\n    att: data.att,\n    exp: data.exp,\n    prf: data.prf.map(encodeProof),\n    // leave out optionals and empty fields\n    ...(data.fct.length > 0 && { fct: data.fct }),\n    ...(data.nnc && { nnc: data.nnc }),\n    ...(data.nbf && { nbf: data.nbf }),\n  })\n\n/**\n * @param {UCAN.Link} proof\n * @returns {UCAN.ToString<UCAN.Link>}\n */\nconst encodeProof = proof =>\n  /** @type {UCAN.ToString<UCAN.Link>} */ (proof.toString())\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vc3JjL2Zvcm1hdHRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlDO0FBQ0Y7QUFDTztBQUNlO0FBQ1Y7O0FBRTNDO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakMsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGFBQWEsT0FBTyxPQUFPLEdBQUcsUUFBUSxHQUFHLFVBQVU7QUFDdkU7O0FBRUE7QUFDQSxjQUFjLG1CQUFtQjtBQUNqQyxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLGNBQWM7QUFDekIsV0FBVyxRQUFRO0FBQ25CO0FBQ087QUFDUCxLQUFLLDJCQUEyQixHQUFHLHVCQUF1Qjs7QUFFMUQ7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxRQUFRO0FBQ25CO0FBQ087QUFDUCxFQUFFLGdFQUFTOztBQUVYO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakMsV0FBVyxpQkFBaUI7QUFDNUI7QUFDTyw4QkFBOEIsZ0VBQVM7O0FBRTlDO0FBQ0EsV0FBVyx3QkFBd0I7QUFDbkM7QUFDTyxxQ0FBcUMsZ0VBQVM7O0FBRXJEO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBLEVBQUUsa0RBQVc7QUFDYjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakMsV0FBVyxpQkFBaUI7QUFDNUIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxFQUFFLGtEQUFXO0FBQ2IsU0FBUywyQ0FBVTtBQUNuQixTQUFTLDJDQUFVO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGVBQWU7QUFDaEQsc0JBQXNCLGVBQWU7QUFDckMsc0JBQXNCLGVBQWU7QUFDckMsR0FBRzs7QUFFSDtBQUNBLFdBQVcsV0FBVztBQUN0QixhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWEsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vc3JjL2Zvcm1hdHRlci5qcz8wN2MwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFVDQU4gZnJvbSBcIi4vdWNhbi5qc1wiXG5pbXBvcnQgKiBhcyBESUQgZnJvbSBcIi4vZGlkLmpzXCJcbmltcG9ydCAqIGFzIGpzb24gZnJvbSBcIkBpcGxkL2RhZy1qc29uXCJcbmltcG9ydCB7IGJhc2U2NHVybCB9IGZyb20gXCJtdWx0aWZvcm1hdHMvYmFzZXMvYmFzZTY0XCJcbmltcG9ydCAqIGFzIFNpZ25hdHVyZSBmcm9tIFwiLi9zaWduYXR1cmUuanNcIlxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5DYXBhYmlsaXRpZXN9IENcbiAqIEBwYXJhbSB7VUNBTi5Nb2RlbDxDPn0gbW9kZWxcbiAqIEByZXR1cm5zIHtVQ0FOLkpXVDxDPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGZvcm1hdCA9IG1vZGVsID0+IHtcbiAgY29uc3QgaGVhZGVyID0gZm9ybWF0SGVhZGVyKG1vZGVsLnYsIG1vZGVsLnMuYWxnb3JpdGhtKVxuICBjb25zdCBwYXlsb2FkID0gZm9ybWF0UGF5bG9hZChtb2RlbClcbiAgY29uc3Qgc2lnbmF0dXJlID0gZm9ybWF0U2lnbmF0dXJlKG1vZGVsLnMpXG4gIHJldHVybiAvKiogQHR5cGUge1VDQU4uSldUPEM+fSAqLyAoYCR7aGVhZGVyfS4ke3BheWxvYWR9LiR7c2lnbmF0dXJlfWApXG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtVQ0FOLkNhcGFiaWxpdGllc30gQ1xuICogQHBhcmFtIHtVQ0FOLlBheWxvYWQ8Qz59IHBheWxvYWRcbiAqIEBwYXJhbSB7VUNBTi5WZXJzaW9ufSB2ZXJzaW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gYWxnXG4gKi9cbmV4cG9ydCBjb25zdCBmb3JtYXRTaWduUGF5bG9hZCA9IChwYXlsb2FkLCB2ZXJzaW9uLCBhbGcpID0+XG4gIGAke2Zvcm1hdEhlYWRlcih2ZXJzaW9uLCBhbGcpfS4ke2Zvcm1hdFBheWxvYWQocGF5bG9hZCl9YFxuXG4vKipcbiAqIEBwYXJhbSB7VUNBTi5WZXJzaW9ufSB2ZXJzaW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gYWxnXG4gKi9cbmV4cG9ydCBjb25zdCBmb3JtYXRIZWFkZXIgPSAodmVyc2lvbiwgYWxnKSA9PlxuICBiYXNlNjR1cmwuYmFzZUVuY29kZShlbmNvZGVIZWFkZXIodmVyc2lvbiwgYWxnKSlcblxuLyoqXG4gKiBAdGVtcGxhdGUge1VDQU4uQ2FwYWJpbGl0aWVzfSBDXG4gKiBAcGFyYW0ge1VDQU4uUGF5bG9hZDxDPn0gZGF0YVxuICovXG5leHBvcnQgY29uc3QgZm9ybWF0UGF5bG9hZCA9IGRhdGEgPT4gYmFzZTY0dXJsLmJhc2VFbmNvZGUoZW5jb2RlUGF5bG9hZChkYXRhKSlcblxuLyoqXG4gKiBAcGFyYW0ge1VDQU4uU2lnbmF0dXJlPHN0cmluZz59IHNpZ25hdHVyZVxuICovXG5leHBvcnQgY29uc3QgZm9ybWF0U2lnbmF0dXJlID0gc2lnbmF0dXJlID0+IGJhc2U2NHVybC5iYXNlRW5jb2RlKHNpZ25hdHVyZS5yYXcpXG5cbi8qKlxuICogQHBhcmFtIHtVQ0FOLlZlcnNpb259IHZcbiAqIEBwYXJhbSB7c3RyaW5nfSBhbGdcbiAqIEByZXR1cm5zIHtVQ0FOLkJ5dGVWaWV3PFVDQU4uSldUSGVhZGVyPn1cbiAqL1xuY29uc3QgZW5jb2RlSGVhZGVyID0gKHYsIGFsZykgPT5cbiAganNvbi5lbmNvZGUoe1xuICAgIGFsZyxcbiAgICB1Y3Y6IHYsXG4gICAgdHlwOiBcIkpXVFwiLFxuICB9KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5DYXBhYmlsaXRpZXN9IENcbiAqIEBwYXJhbSB7VUNBTi5QYXlsb2FkPEM+fSBkYXRhXG4gKiBAcmV0dXJucyB7VUNBTi5CeXRlVmlldzxVQ0FOLkpXVFBheWxvYWQ8Qz4+fVxuICovXG5jb25zdCBlbmNvZGVQYXlsb2FkID0gZGF0YSA9PlxuICBqc29uLmVuY29kZSh7XG4gICAgaXNzOiBESUQuZm9ybWF0KGRhdGEuaXNzKSxcbiAgICBhdWQ6IERJRC5mb3JtYXQoZGF0YS5hdWQpLFxuICAgIGF0dDogZGF0YS5hdHQsXG4gICAgZXhwOiBkYXRhLmV4cCxcbiAgICBwcmY6IGRhdGEucHJmLm1hcChlbmNvZGVQcm9vZiksXG4gICAgLy8gbGVhdmUgb3V0IG9wdGlvbmFscyBhbmQgZW1wdHkgZmllbGRzXG4gICAgLi4uKGRhdGEuZmN0Lmxlbmd0aCA+IDAgJiYgeyBmY3Q6IGRhdGEuZmN0IH0pLFxuICAgIC4uLihkYXRhLm5uYyAmJiB7IG5uYzogZGF0YS5ubmMgfSksXG4gICAgLi4uKGRhdGEubmJmICYmIHsgbmJmOiBkYXRhLm5iZiB9KSxcbiAgfSlcblxuLyoqXG4gKiBAcGFyYW0ge1VDQU4uTGlua30gcHJvb2ZcbiAqIEByZXR1cm5zIHtVQ0FOLlRvU3RyaW5nPFVDQU4uTGluaz59XG4gKi9cbmNvbnN0IGVuY29kZVByb29mID0gcHJvb2YgPT5cbiAgLyoqIEB0eXBlIHtVQ0FOLlRvU3RyaW5nPFVDQU4uTGluaz59ICovIChwcm9vZi50b1N0cmluZygpKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/formatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/lib.js":
/*!************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/lib.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION),\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   isExpired: () => (/* binding */ isExpired),\n/* harmony export */   isTooEarly: () => (/* binding */ isTooEarly),\n/* harmony export */   issue: () => (/* binding */ issue),\n/* harmony export */   link: () => (/* binding */ link),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   now: () => (/* binding */ now),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature),\n/* harmony export */   write: () => (/* binding */ write)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var _codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codec/cbor.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/codec/cbor.js\");\n/* harmony import */ var _codec_jwt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codec/jwt.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/codec/jwt.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utf8.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/utf8.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/schema.js\");\n/* harmony import */ var _did_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./did.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parser.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/parser.js\");\n/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./formatter.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/formatter.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var multiformats_link__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! multiformats/link */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst VERSION = \"0.9.1\"\nconst name = \"dag-ucan\"\nconst code = /** @type {UCAN.Code} */ (_codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.code)\n\n/**\n * We cast sha256 to workaround typescripts limited inference problem when using\n * sha256 as default. If hasher is omitted type `A` should match sha256.code\n * but TS fails to deduce that.\n * @type {UCAN.MultihashHasher<any>}\n */\nconst defaultHasher = multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_8__.sha256\n\n/**\n * Encodes given UCAN (in either IPLD or JWT representation) and encodes it into\n * corresponding bytes representation. UCAN in IPLD representation is encoded as\n * DAG-CBOR which JWT representation is encoded as raw bytes of JWT string.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.UCAN<C>} ucan\n * @returns {UCAN.ByteView<UCAN.UCAN<C>>}\n */\nconst encode = ucan => (ucan.jwt ? _codec_jwt_js__WEBPACK_IMPORTED_MODULE_2__.encode(ucan) : _codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.encode(ucan))\n\n/**\n * Decodes binary encoded UCAN. It assumes UCAN is in primary IPLD\n * representation and attempts to decode it with DAG-CBOR, if that\n * fails it falls back to secondary representation and parses it as\n * a JWT.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.ByteView<UCAN.UCAN<C>>} bytes\n * @returns {UCAN.View<C>}\n */\nconst decode = bytes => {\n  try {\n    return _codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes)\n  } catch (_) {\n    return _codec_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode(/** @type {UCAN.ByteView<UCAN.FromJWT<C>>} */ (bytes))\n  }\n}\n\n/**\n * Convenience function to create a CID for the given UCAN. If UCAN is\n * in JWT representation get CID with RAW multicodec, while UCANs in IPLD\n * representation get UCAN multicodec code.\n *\n * @template {UCAN.Capabilities} C\n * @template {number} [A=typeof sha256.code] - Multihash code\n * @param {UCAN.View<C>} ucan\n * @param {{hasher?: UCAN.MultihashHasher<A>}} [options]\n */\nconst link = async (ucan, options) => {\n  const { cid } = await write(ucan, options)\n  return cid\n}\n\n/**\n * @template {UCAN.Capabilities} C\n * @template {number} [A=typeof sha256.code] - Multihash code\n * @param {UCAN.UCAN<C>} ucan\n * @param {{hasher?: UCAN.MultihashHasher<A>}} options\n * @returns {Promise<UCAN.Block<C, UCAN.Code, A>>}\n */\nconst write = async (ucan, { hasher = defaultHasher } = {}) => {\n  const [code, bytes] = ucan.jwt\n    ? [/** @type {UCAN.Code} */ (_codec_jwt_js__WEBPACK_IMPORTED_MODULE_2__.code), _codec_jwt_js__WEBPACK_IMPORTED_MODULE_2__.encode(ucan)]\n    : [/** @type {UCAN.Code} */ (_codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.code), _codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.encode(ucan)]\n  const digest = await hasher.digest(bytes)\n\n  return {\n    bytes,\n    cid: (0,multiformats_link__WEBPACK_IMPORTED_MODULE_9__.create)(code, digest),\n    data: ucan,\n  }\n}\n\n/**\n * Parses UCAN formatted as JWT string. Returns UCAN view in IPLD representation\n * when serializing it back would produce original string, otherwise returns UCAN\n * view in secondary JWT representation which is not as compact, but it retains\n * key order and whitespaces so it could be formatted back to same JWT string.\n * View will have `type` field with either `\"IPLD\"` or `\"JWT\"` value telling\n * in which representation UCAN is.\n *\n * Note: Parsing does not perform validation of capabilities or semantics of the\n * UCAN, it only ensures structure is spec compliant and throws `ParseError`\n * if it is not.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.JWT<C>|string} jwt\n * @returns {UCAN.View<C>}\n */\nconst parse = jwt => {\n  const model = (0,_parser_js__WEBPACK_IMPORTED_MODULE_6__.parse)(jwt)\n\n  // If formatting UCAN produces same jwt string we can use IPLD representation\n  // otherwise we need to fallback to raw representation. This decision will\n  // affect how we `encode` the UCAN.\n  return _codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.format(model) === jwt\n    ? _codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.from(model)\n    : _codec_jwt_js__WEBPACK_IMPORTED_MODULE_2__.from({ ...model, jwt: /** @type {UCAN.JWT<C>} */ (jwt) })\n}\n\n/**\n * Takes UCAN object and formats it into JWT string.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.UCAN<C>} ucan\n * @returns {UCAN.JWT<C>}\n */\nconst format = ucan => (ucan.jwt ? _codec_jwt_js__WEBPACK_IMPORTED_MODULE_2__.format(ucan) : _codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.format(ucan))\n\n/**\n * Creates a new signed token with a given `options.issuer`. If expiration is\n * not set it defaults to 30 seconds from now. Returns UCAN in primary - IPLD\n * representation.\n *\n * @template {number} A\n * @template {UCAN.Capabilities} C\n * @param {UCAN.UCANOptions<C, A>} options\n * @returns {Promise<UCAN.View<C>>}\n */\nconst issue = async ({\n  issuer,\n  audience,\n  capabilities,\n  lifetimeInSeconds = 30,\n  expiration = now() + lifetimeInSeconds,\n  notBefore,\n  facts = [],\n  proofs = [],\n  nonce,\n}) => {\n  const v = VERSION\n  const data = (0,_schema_js__WEBPACK_IMPORTED_MODULE_4__.readPayload)({\n    iss: (0,_did_js__WEBPACK_IMPORTED_MODULE_5__.parse)(issuer.did()),\n    aud: (0,_did_js__WEBPACK_IMPORTED_MODULE_5__.parse)(audience.did()),\n    att: capabilities,\n    fct: facts,\n    exp: expiration,\n    nbf: notBefore,\n    prf: proofs,\n    nnc: nonce,\n  })\n  const payload = encodeSignaturePayload(data, v, issuer.signatureAlgorithm)\n\n  return _codec_cbor_js__WEBPACK_IMPORTED_MODULE_1__.from({\n    ...data,\n    v,\n    s: await issuer.sign(payload),\n  })\n}\n\n/**\n *\n * @param {UCAN.Payload} payload\n * @param {UCAN.Version} version\n * @param {string} algorithm\n * @returns\n */\nconst encodeSignaturePayload = (payload, version, algorithm) =>\n  _utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode((0,_formatter_js__WEBPACK_IMPORTED_MODULE_7__.formatSignPayload)(payload, version, algorithm))\n\n/**\n * Verifies UCAN signature.\n *\n * @param {UCAN.View} ucan\n * @param {UCAN.Verifier} verifier\n */\nconst verifySignature = (ucan, verifier) =>\n  (0,_did_js__WEBPACK_IMPORTED_MODULE_5__.format)(ucan.issuer) === verifier.did() &&\n  verifier.verify(\n    encodeSignaturePayload(ucan.model, ucan.model.v, ucan.signature.algorithm),\n    ucan.signature\n  )\n\n/**\n * Check if a UCAN is expired.\n *\n * @param {UCAN.View} ucan\n */\nconst isExpired = ucan => ucan.expiration <= now()\n\n/**\n * Check if a UCAN is not active yet.\n * @param {UCAN.View} ucan\n */\nconst isTooEarly = ucan =>\n  ucan.notBefore != null && now() <= ucan.notBefore\n\n/**\n * Returns UTC Unix timestamp for comparing it against time window of the UCAN.\n */\nconst now = () => Math.floor(Date.now() / 1000)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/parser.js":
/*!***************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/parser.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseHeader: () => (/* binding */ parseHeader),\n/* harmony export */   parsePayload: () => (/* binding */ parsePayload)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var _ipld_dag_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ipld/dag-json */ \"(ssr)/./node_modules/@ipld/dag-json/src/index.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/schema.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./signature.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n\n\n\n\n\n\n/**\n * Parse JWT formatted UCAN. Note than no validation takes place here.\n *\n * @template {UCAN.Capabilities} C\n * @param {UCAN.JWT<C>|string} jwt\n * @returns {UCAN.Model<C>}\n */\nconst parse = jwt => {\n  const segments = jwt.split(\".\")\n  const [header, payload, signature] =\n    segments.length === 3\n      ? segments\n      : _schema_js__WEBPACK_IMPORTED_MODULE_2__[\"throw\"](\n          `Can't parse UCAN: ${jwt}: Expected JWT format: 3 dot-separated base64url-encoded values.`\n        )\n\n  const { ucv, alg } = parseHeader(header)\n\n  return {\n    ...parsePayload(payload),\n    v: ucv,\n    s: (0,_signature_js__WEBPACK_IMPORTED_MODULE_4__.createNamed)(alg, multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseDecode(signature)),\n  }\n}\n\n/**\n * @param {string} header\n */\nconst parseHeader = header => {\n  const { ucv, alg, typ } = _ipld_dag_json__WEBPACK_IMPORTED_MODULE_1__.decode(multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseDecode(header))\n\n  return {\n    typ: _schema_js__WEBPACK_IMPORTED_MODULE_2__.readLiteral(typ, \"JWT\", \"typ\"),\n    ucv: _schema_js__WEBPACK_IMPORTED_MODULE_2__.readVersion(ucv, \"ucv\"),\n    alg: _schema_js__WEBPACK_IMPORTED_MODULE_2__.readString(alg, \"alg\"),\n  }\n}\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {string} source\n * @returns {UCAN.Payload<C>}\n */\nconst parsePayload = source => {\n  /** @type {Record<string, unknown>} */\n  const payload = _ipld_dag_json__WEBPACK_IMPORTED_MODULE_1__.decode(multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64url.baseDecode(source))\n  return _schema_js__WEBPACK_IMPORTED_MODULE_2__.readJWTPayload(payload)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vc3JjL3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFpQztBQUNLO0FBQ0Q7QUFDZ0I7QUFDVTs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakMsV0FBVyxvQkFBb0I7QUFDL0IsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0RBQVk7QUFDcEIsK0JBQStCLElBQUk7QUFDbkM7O0FBRUEsVUFBVSxXQUFXOztBQUVyQjtBQUNBO0FBQ0E7QUFDQSxPQUFPLDBEQUFlLE1BQU0sZ0VBQVM7QUFDckM7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1AsVUFBVSxnQkFBZ0IsRUFBRSxrREFBVyxDQUFDLGdFQUFTOztBQUVqRDtBQUNBLFNBQVMsbURBQWtCO0FBQzNCLFNBQVMsbURBQWtCO0FBQzNCLFNBQVMsa0RBQWlCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLG1CQUFtQjtBQUNqQyxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLHlCQUF5QjtBQUN0QyxrQkFBa0Isa0RBQVcsQ0FBQyxnRUFBUztBQUN2QyxTQUFTLHNEQUFxQjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL3NyYy9wYXJzZXIuanM/NGRjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVQ0FOIGZyb20gXCIuL3VjYW4uanNcIlxuaW1wb3J0ICogYXMganNvbiBmcm9tIFwiQGlwbGQvZGFnLWpzb25cIlxuaW1wb3J0ICogYXMgU2NoZW1hIGZyb20gXCIuL3NjaGVtYS5qc1wiXG5pbXBvcnQgeyBiYXNlNjR1cmwgfSBmcm9tIFwibXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U2NFwiXG5pbXBvcnQgeyBjcmVhdGVOYW1lZCBhcyBjcmVhdGVTaWduYXR1cmUgfSBmcm9tIFwiLi9zaWduYXR1cmUuanNcIlxuXG4vKipcbiAqIFBhcnNlIEpXVCBmb3JtYXR0ZWQgVUNBTi4gTm90ZSB0aGFuIG5vIHZhbGlkYXRpb24gdGFrZXMgcGxhY2UgaGVyZS5cbiAqXG4gKiBAdGVtcGxhdGUge1VDQU4uQ2FwYWJpbGl0aWVzfSBDXG4gKiBAcGFyYW0ge1VDQU4uSldUPEM+fHN0cmluZ30gand0XG4gKiBAcmV0dXJucyB7VUNBTi5Nb2RlbDxDPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHBhcnNlID0gand0ID0+IHtcbiAgY29uc3Qgc2VnbWVudHMgPSBqd3Quc3BsaXQoXCIuXCIpXG4gIGNvbnN0IFtoZWFkZXIsIHBheWxvYWQsIHNpZ25hdHVyZV0gPVxuICAgIHNlZ21lbnRzLmxlbmd0aCA9PT0gM1xuICAgICAgPyBzZWdtZW50c1xuICAgICAgOiBTY2hlbWEudGhyb3coXG4gICAgICAgICAgYENhbid0IHBhcnNlIFVDQU46ICR7and0fTogRXhwZWN0ZWQgSldUIGZvcm1hdDogMyBkb3Qtc2VwYXJhdGVkIGJhc2U2NHVybC1lbmNvZGVkIHZhbHVlcy5gXG4gICAgICAgIClcblxuICBjb25zdCB7IHVjdiwgYWxnIH0gPSBwYXJzZUhlYWRlcihoZWFkZXIpXG5cbiAgcmV0dXJuIHtcbiAgICAuLi5wYXJzZVBheWxvYWQocGF5bG9hZCksXG4gICAgdjogdWN2LFxuICAgIHM6IGNyZWF0ZVNpZ25hdHVyZShhbGcsIGJhc2U2NHVybC5iYXNlRGVjb2RlKHNpZ25hdHVyZSkpLFxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IGhlYWRlclxuICovXG5leHBvcnQgY29uc3QgcGFyc2VIZWFkZXIgPSBoZWFkZXIgPT4ge1xuICBjb25zdCB7IHVjdiwgYWxnLCB0eXAgfSA9IGpzb24uZGVjb2RlKGJhc2U2NHVybC5iYXNlRGVjb2RlKGhlYWRlcikpXG5cbiAgcmV0dXJuIHtcbiAgICB0eXA6IFNjaGVtYS5yZWFkTGl0ZXJhbCh0eXAsIFwiSldUXCIsIFwidHlwXCIpLFxuICAgIHVjdjogU2NoZW1hLnJlYWRWZXJzaW9uKHVjdiwgXCJ1Y3ZcIiksXG4gICAgYWxnOiBTY2hlbWEucmVhZFN0cmluZyhhbGcsIFwiYWxnXCIpLFxuICB9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtVQ0FOLkNhcGFiaWxpdGllc30gQ1xuICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZVxuICogQHJldHVybnMge1VDQU4uUGF5bG9hZDxDPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHBhcnNlUGF5bG9hZCA9IHNvdXJjZSA9PiB7XG4gIC8qKiBAdHlwZSB7UmVjb3JkPHN0cmluZywgdW5rbm93bj59ICovXG4gIGNvbnN0IHBheWxvYWQgPSBqc29uLmRlY29kZShiYXNlNjR1cmwuYmFzZURlY29kZShzb3VyY2UpKVxuICByZXR1cm4gU2NoZW1hLnJlYWRKV1RQYXlsb2FkKHBheWxvYWQpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/schema.js":
/*!***************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/schema.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParseError: () => (/* binding */ ParseError),\n/* harmony export */   asCapability: () => (/* binding */ asCapability),\n/* harmony export */   fail: () => (/* binding */ fail),\n/* harmony export */   readArray: () => (/* binding */ readArray),\n/* harmony export */   readBytes: () => (/* binding */ readBytes),\n/* harmony export */   readCapabilities: () => (/* binding */ readCapabilities),\n/* harmony export */   readCapability: () => (/* binding */ readCapability),\n/* harmony export */   readFact: () => (/* binding */ readFact),\n/* harmony export */   readInt: () => (/* binding */ readInt),\n/* harmony export */   readJWTPayload: () => (/* binding */ readJWTPayload),\n/* harmony export */   readLiteral: () => (/* binding */ readLiteral),\n/* harmony export */   readNullable: () => (/* binding */ readNullable),\n/* harmony export */   readOptional: () => (/* binding */ readOptional),\n/* harmony export */   readOptionalArray: () => (/* binding */ readOptionalArray),\n/* harmony export */   readPayload: () => (/* binding */ readPayload),\n/* harmony export */   readPrincipal: () => (/* binding */ readPrincipal),\n/* harmony export */   readProof: () => (/* binding */ readProof),\n/* harmony export */   readSignature: () => (/* binding */ readSignature),\n/* harmony export */   readString: () => (/* binding */ readString),\n/* harmony export */   readStringPrincipal: () => (/* binding */ readStringPrincipal),\n/* harmony export */   readStringProof: () => (/* binding */ readStringProof),\n/* harmony export */   readStruct: () => (/* binding */ readStruct),\n/* harmony export */   readVersion: () => (/* binding */ readVersion),\n/* harmony export */   \"throw\": () => (/* binding */ fail)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utf8.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/utf8.js\");\n/* harmony import */ var multiformats_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/link */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/link.js\");\n/* harmony import */ var multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/hashes/identity */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/hashes/identity.js\");\n/* harmony import */ var _did_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./did.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/codecs/raw */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/codecs/raw.js\");\n/* harmony import */ var _signature_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./signature.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\");\n\n\n\n\n\n\n\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {Record<string, unknown>|UCAN.Payload<C>} data\n * @returns {UCAN.Payload<C>}\n */\nconst readPayload = data =>\n  readPayloadWith(data, {\n    readPrincipal,\n    readProof,\n  })\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {Record<string, unknown>|UCAN.Payload<C>} data\n * @returns {UCAN.Payload<C>}\n */\nconst readJWTPayload = data =>\n  readPayloadWith(data, {\n    readPrincipal: readStringPrincipal,\n    readProof: readStringProof,\n  })\n/**\n *\n * @template {UCAN.Capabilities} C\n * @param {Record<string, unknown>|UCAN.Payload<C>} data\n * @param {object} readers\n * @param {(source:unknown, context:string) => UCAN.Principal} readers.readPrincipal\n * @param {(source:unknown, context:string) => UCAN.Link} readers.readProof\n * @returns {UCAN.Payload<C>}\n */\nconst readPayloadWith = (data, { readPrincipal, readProof }) => ({\n  iss: readPrincipal(data.iss, \"iss\"),\n  aud: readPrincipal(data.aud, \"aud\"),\n  att: readCapabilities(data.att, \"att\"),\n  prf: readOptionalArray(data.prf, readProof, \"prf\") || [],\n  exp: readNullable(data.exp === Infinity ? null : data.exp, readInt, \"exp\"),\n  nbf: readOptional(data.nbf, readInt, \"nbf\"),\n  fct: readOptionalArray(data.fct, readFact, \"fct\") || [],\n  nnc: readOptional(data.nnc, readString, \"nnc\"),\n})\n\n/**\n * @template {unknown} T\n * @template {number} A\n * @param {UCAN.ByteView<UCAN.Signature<T, A>>|unknown} source\n */\nconst readSignature = source => {\n  if (source instanceof Uint8Array) {\n    return _signature_js__WEBPACK_IMPORTED_MODULE_6__.decode(source)\n  } else {\n    throw new TypeError(\n      `Can only decode Uint8Array into a Signature, instead got ${JSON.stringify(\n        source\n      )}`\n    )\n  }\n}\n\n/**\n * @param {unknown} input\n * @param {string} name\n * @returns {number}\n */\nconst readInt = (input, name) =>\n  Number.isInteger(input)\n    ? /** @type {number} */ (input)\n    : ParseError.throw(\n        `Expected ${name} to be integer, instead got ${JSON.stringify(input)}`\n      )\n\n/**\n * @param {unknown} input\n * @param {string} context\n */\n\nconst readCapability = (input, context) =>\n  readStruct(input, asCapability, context)\n\n/**\n * @template {UCAN.Capabilities} C\n * @param {unknown|C} input\n * @param {string} context\n * @returns {C}\n */\nconst readCapabilities = (input, context) =>\n  /** @type {C} */ (readArray(input, readCapability, context))\n\n/**\n * @template {UCAN.Capability} C\n * @param {object & {can?:unknown, with?:unknown}|C} input\n * @returns {C}\n */\nconst asCapability = input =>\n  /** @type {C} */ ({\n    ...input,\n    can: readAbility(input.can),\n    with: readResource(input.with),\n  })\n\n/**\n * @param {unknown} input\n */\nconst readAbility = input =>\n  typeof input !== \"string\"\n    ? ParseError.throw(\n        `Capability has invalid 'can: ${JSON.stringify(\n          input\n        )}', value must be a string`\n      )\n    : input.slice(1, -1).includes(\"/\")\n    ? /** @type {UCAN.Ability} */ (input.toLocaleLowerCase())\n    : input === \"*\"\n    ? input\n    : ParseError.throw(\n        `Capability has invalid 'can: \"${input}\"', value must have at least one path segment`\n      )\n\n/**\n * @param {unknown} input\n */\nconst readResource = input =>\n  typeof input !== \"string\"\n    ? ParseError.throw(\n        `Capability has invalid 'with: ${JSON.stringify(\n          input\n        )}', value must be a string`\n      )\n    : parseURL(input) ||\n      ParseError.throw(\n        `Capability has invalid 'with: \"${input}\"', value must be a valid URI string`\n      )\n\n/**\n * @param {string} input\n */\nconst parseURL = input => {\n  try {\n    new URL(input)\n    return input\n  } catch (_) {\n    return null\n  }\n}\n/**\n * @template T\n * @param {unknown} input\n * @param {(input:unknown, context:string) => T} read\n * @param {string} context\n * @returns {T[]}\n */\nconst readArray = (input, read, context) =>\n  Array.isArray(input)\n    ? input.map((element, n) => read(element, `${context}[${n}]`))\n    : ParseError.throw(`${context} must be an array`)\n\n/**\n * @template T\n * @param {unknown} input\n * @param {(input:unknown, context: string) => T} reader\n * @param {string} context\n * @returns {T[]|undefined}\n */\nconst readOptionalArray = (input, reader, context) =>\n  input === undefined ? input : readArray(input, reader, context)\n\n/**\n * @template T\n * @param {unknown} input\n * @param {(input:object) => T} reader\n * @param {string} context\n * @returns {T}\n */\nconst readStruct = (input, reader, context) =>\n  input != null && typeof input === \"object\"\n    ? reader(input)\n    : ParseError.throw(\n        `${context} must be of type object, instead got ${input}`\n      )\n\n/**\n * @param {unknown} input\n * @param {string} context\n * @returns {UCAN.Fact}\n */\nconst readFact = (input, context) => readStruct(input, Object, context)\n\n/**\n * @param {unknown} source\n * @param {string} context\n * @returns {UCAN.Link}\n */\nconst readProof = (source, context) =>\n  multiformats_link__WEBPACK_IMPORTED_MODULE_2__.isLink(source)\n    ? /** @type {UCAN.Link} */ (source)\n    : fail(\n        `Expected ${context} to be IPLD link, instead got ${JSON.stringify(\n          source\n        )}`\n      )\n\n/**\n * @param {unknown} source\n * @param {string} context\n * @returns {UCAN.Link}\n */\nconst readStringProof = (source, context) =>\n  parseProof(readString(source, context))\n\n/**\n * @param {string} source\n * @returns {UCAN.Link}\n */\nconst parseProof = source => {\n  // First we attempt to read proof as CID, if we fail fallback to reading it as\n  // an inline proof.\n  try {\n    return multiformats_link__WEBPACK_IMPORTED_MODULE_2__.parse(source)\n  } catch (error) {\n    return multiformats_link__WEBPACK_IMPORTED_MODULE_2__.create(multiformats_codecs_raw__WEBPACK_IMPORTED_MODULE_5__.code, multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_3__.identity.digest(_utf8_js__WEBPACK_IMPORTED_MODULE_1__.encode(source)))\n  }\n}\n\n/**\n * @param {unknown} input\n * @param {string} context\n */\nconst readPrincipal = (input, context) =>\n  _did_js__WEBPACK_IMPORTED_MODULE_4__.decode(readBytes(input, context))\n\n/**\n * @param {unknown} source\n * @param {string} context\n */\nconst readStringPrincipal = (source, context) =>\n  _did_js__WEBPACK_IMPORTED_MODULE_4__.parse(readString(source, context))\n\n/**\n * @template T\n * @param {unknown} source\n * @param {(source:unknown, context:string) => T} read\n * @param {string} [context]\n * @returns {T|undefined}\n */\nconst readOptional = (source, read, context = \"Field\") =>\n  source !== undefined ? read(source, context) : undefined\n\n/**\n * @template T\n * @param {unknown} source\n * @param {(source:unknown, context:string) => T} read\n * @param {string} context\n * @returns {T|null}\n */\nconst readNullable = (source, read, context) =>\n  source === null ? null : read(source, context)\n\n/**\n * @param {unknown} source\n * @param {string} [context]\n * @returns {string}\n */\nconst readString = (source, context = \"Field\") =>\n  typeof source === \"string\"\n    ? source\n    : fail(`${context} has invalid value ${source}`)\n\n/**\n *\n * @param {unknown} source\n * @param {string} context\n * @returns {Uint8Array}\n */\nconst readBytes = (source, context) =>\n  source instanceof Uint8Array\n    ? source\n    : fail(\n        `Expected ${context} to be Uint8Array, instead got ${JSON.stringify(\n          source\n        )}`\n      )\n\n/**\n * @param {unknown} input\n * @param {string} context\n * @returns {UCAN.Version}\n */\nconst readVersion = (input, context) =>\n  /\\d+\\.\\d+\\.\\d+/.test(/** @type {string} */ (input))\n    ? /** @type {UCAN.Version} */ (input)\n    : ParseError.throw(`Invalid version '${context}: ${JSON.stringify(input)}'`)\n\n/**\n * @template {string|number|boolean|null} T\n * @param {unknown} input\n * @param {T} literal\n * @param {string} context\n * @returns {T}\n */\nconst readLiteral = (input, literal, context) =>\n  input === literal\n    ? literal\n    : ParseError.throw(\n        `Expected ${context} to be a ${JSON.stringify(\n          literal\n        )} instead got ${JSON.stringify(input)}`\n      )\n\nclass ParseError extends TypeError {\n  get name() {\n    return \"ParseError\"\n  }\n  /**\n   * @param {string} message\n   * @returns {never}\n   */\n  static throw(message) {\n    throw new this(message)\n  }\n}\n\n/**\n * @param {string} reason\n */\nconst fail = reason => ParseError.throw(reason)\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js":
/*!******************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/signature.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLS12381G1: () => (/* binding */ BLS12381G1),\n/* harmony export */   BLS12381G2: () => (/* binding */ BLS12381G2),\n/* harmony export */   EIP191: () => (/* binding */ EIP191),\n/* harmony export */   ES256: () => (/* binding */ ES256),\n/* harmony export */   ES256K: () => (/* binding */ ES256K),\n/* harmony export */   ES384: () => (/* binding */ ES384),\n/* harmony export */   ES512: () => (/* binding */ ES512),\n/* harmony export */   EdDSA: () => (/* binding */ EdDSA),\n/* harmony export */   NON_STANDARD: () => (/* binding */ NON_STANDARD),\n/* harmony export */   RS256: () => (/* binding */ RS256),\n/* harmony export */   Signature: () => (/* binding */ Signature),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createNamed: () => (/* binding */ createNamed),\n/* harmony export */   createNonStandard: () => (/* binding */ createNonStandard),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   nameCode: () => (/* binding */ nameCode),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   toJSON: () => (/* binding */ toJSON),\n/* harmony export */   view: () => (/* binding */ view)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/index.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/@ipld/dag-ucan/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utf8.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/utf8.js\");\n\n\n\n\n\nconst NON_STANDARD = 0xd000\nconst ES256K = 0xd0e7\nconst BLS12381G1 = 0xd0ea\nconst BLS12381G2 = 0xd0eb\nconst EdDSA = 0xd0ed\nconst ES256 = 0xd01200\nconst ES384 = 0xd01201\nconst ES512 = 0xd01202\nconst RS256 = 0xd01205\nconst EIP191 = 0xd191\n\n/**\n * @param {number} code\n * @returns {string}\n */\nconst codeName = code => {\n  switch (code) {\n    case ES256K:\n      return \"ES256K\"\n    case BLS12381G1:\n      return \"BLS12381G1\"\n    case BLS12381G2:\n      return \"BLS12381G2\"\n    case EdDSA:\n      return \"EdDSA\"\n    case ES256:\n      return \"ES256\"\n    case ES384:\n      return \"ES384\"\n    case ES512:\n      return \"ES512\"\n    case RS256:\n      return \"RS256\"\n    case EIP191:\n      return \"EIP191\"\n    default:\n      throw new RangeError(\n        `Unknown signature algorithm code 0x${code.toString(16)}`\n      )\n  }\n}\n\n/**\n *\n * @param {string} name\n */\nconst nameCode = name => {\n  switch (name) {\n    case \"ES256K\":\n      return ES256K\n    case \"BLS12381G1\":\n      return BLS12381G1\n    case \"BLS12381G2\":\n      return BLS12381G2\n    case \"EdDSA\":\n      return EdDSA\n    case \"ES256\":\n      return ES256\n    case \"ES384\":\n      return ES384\n    case \"ES512\":\n      return ES512\n    case \"RS256\":\n      return RS256\n    case \"EIP191\":\n      return EIP191\n    default:\n      return NON_STANDARD\n  }\n}\n\n/**\n * @template {unknown} T\n * @template {number} A\n * @implements {UCAN.SignatureView<T, A>}\n */\nclass Signature extends Uint8Array {\n  get code() {\n    const [code] = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.decode(this)\n    Object.defineProperties(this, { code: { value: code } })\n    return /** @type {A} */ (code)\n  }\n\n  get size() {\n    const value = size(this)\n    Object.defineProperties(this, { size: { value } })\n    return value\n  }\n  get algorithm() {\n    const value = algorithm(this)\n    Object.defineProperties(this, { algorithm: { value } })\n    return value\n  }\n\n  get raw() {\n    const { buffer, byteOffset, size, code } = this\n    const codeSize = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(code)\n    const rawSize = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(size)\n    const value = new Uint8Array(buffer, byteOffset + codeSize + rawSize, size)\n    Object.defineProperties(this, { raw: { value } })\n    return value\n  }\n\n  /**\n   * Verify that this signature was created by the given key.\n   *\n   * @param {UCAN.Crypto.Verifier<A>} signer\n   * @param {UCAN.ByteView<T>} payload\n   */\n  async verify(signer, payload) {\n    try {\n      if ((await signer.verify(payload, this)) === true) {\n        return { ok: {} }\n      } else {\n        throw new Error(\"Invalid signature\")\n      }\n    } catch (cause) {\n      return { error: /** @type {Error} */ (cause) }\n    }\n  }\n\n  toJSON() {\n    return toJSON(this)\n  }\n}\n\n/**\n * @param {UCAN.Signature} signature\n */\nconst algorithm = signature => {\n  const { code, raw, buffer, byteOffset } = signature\n  if (code === NON_STANDARD) {\n    const offset =\n      raw.byteLength +\n      multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(code) +\n      multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(raw.byteLength)\n    const bytes = new Uint8Array(buffer, byteOffset + offset)\n    return _utf8_js__WEBPACK_IMPORTED_MODULE_3__.decode(bytes)\n  } else {\n    return codeName(code)\n  }\n}\n\n/**\n * @param {UCAN.Signature} signature\n */\nconst size = signature => {\n  const offset = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(signature.code)\n  const [size] = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.decode(\n    new Uint8Array(signature.buffer, signature.byteOffset + offset)\n  )\n  return size\n}\n\n/**\n * @template {unknown} T\n * @template {number} A\n * @param {A} code\n * @param {Uint8Array} raw\n * @returns {UCAN.SignatureView<T, A>}\n */\nconst create = (code, raw) => {\n  const _ = codeName(code)\n  const codeSize = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(code)\n  const rawSize = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(raw.byteLength)\n\n  /** @type {Signature<T, A>} */\n  const signature = new Signature(codeSize + rawSize + raw.byteLength)\n  multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodeTo(code, signature)\n  multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodeTo(raw.byteLength, signature, codeSize)\n  signature.set(raw, codeSize + rawSize)\n  Object.defineProperties(signature, {\n    code: { value: code },\n    size: { value: raw.byteLength },\n  })\n  return signature\n}\n\n/**\n * @template {unknown} T\n * @param {string} name\n * @param {Uint8Array} raw\n * @return {UCAN.SignatureView<T>}\n */\nconst createNamed = (name, raw) => {\n  const code = nameCode(name)\n  return code === NON_STANDARD\n    ? createNonStandard(name, raw)\n    : create(code, raw)\n}\n\n/**\n * @template {unknown} T\n * @param {string} name\n * @param {Uint8Array} raw\n * @return {UCAN.SignatureView<T, typeof NON_STANDARD>}\n */\nconst createNonStandard = (name, raw) => {\n  const code = NON_STANDARD\n  const codeSize = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(code)\n  const rawSize = multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodingLength(raw.byteLength)\n  const nameBytes = _utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(name)\n  /** @type {Signature<T, typeof NON_STANDARD>} */\n  const signature = new Signature(\n    codeSize + rawSize + raw.byteLength + nameBytes.byteLength\n  )\n  multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodeTo(code, signature)\n  multiformats__WEBPACK_IMPORTED_MODULE_1__.varint.encodeTo(raw.byteLength, signature, codeSize)\n  signature.set(raw, codeSize + rawSize)\n  signature.set(nameBytes, codeSize + rawSize + raw.byteLength)\n\n  return signature\n}\n\n/**\n * @template {unknown} T\n * @template {number} A\n * @param {UCAN.ByteView<UCAN.Signature<T, A>>} bytes\n * @returns {UCAN.SignatureView<T, A>}\n */\nconst view = bytes =>\n  new Signature(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n\n/**\n * @template {unknown} T\n * @template {number} A\n * @param {UCAN.ByteView<UCAN.Signature<T, A>>} bytes\n * @returns {UCAN.SignatureView<T, A>}\n */\nconst decode = bytes => {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError(\n      `Can only decode Uint8Array into a Signature, instead got ${JSON.stringify(\n        bytes\n      )}`\n    )\n  }\n\n  /** @type {UCAN.SignatureView<T, A>} */\n  const signature = view(bytes)\n  const { code, algorithm, raw } = signature\n  return signature\n}\n\n/**\n * @template {unknown} T\n * @template {number} A\n * @param {UCAN.Signature<T, A>} signature\n * @returns {UCAN.ByteView<UCAN.Signature<T, A>>}\n */\nconst encode = signature => decode(signature)\n\n/**\n * @template {unknown} T\n * @template {number} A\n * @template {string} [Prefix=\"u\"]\n * @param {UCAN.Signature<T, A>} signature\n * @param {UCAN.MultibaseEncoder<Prefix>} [base]\n * @returns {UCAN.ToString<UCAN.Signature<T, A>>}\n */\nconst format = (signature, base) => (base || multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url).encode(signature)\n\n/**\n * @template {unknown} T\n * @template {number} A\n * @template {string} [Prefix=\"u\"]\n * @param {UCAN.ToString<UCAN.Signature<T, A>>} signature\n * @param {UCAN.MultibaseDecoder<Prefix>} [base]\n * @returns {UCAN.SignatureView<T, A>}\n */\nconst parse = (signature, base) =>\n  /** @type {UCAN.SignatureView<T, A>} */ (\n    decode((base || multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64url).decode(signature))\n  )\n\n/**\n * @template {UCAN.Signature} Signature\n * @param {Signature} signature\n * @returns {UCAN.SignatureJSON<Signature>}\n */\nconst toJSON = signature => ({\n  \"/\": { bytes: multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64.baseEncode(signature) },\n})\n\n/**\n * @template {unknown} T\n * @template {UCAN.SigAlg} A\n * @param {UCAN.SignatureJSON<UCAN.Signature<T, A>>} json\n * @returns {UCAN.SignatureView<T, A>}\n */\nconst fromJSON = json => decode(multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_2__.base64.baseDecode(json[\"/\"].bytes))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js":
/*!*************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/ucan.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/utf8.js":
/*!*************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/utf8.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decoder: () => (/* binding */ decoder),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encoder: () => (/* binding */ encoder)\n/* harmony export */ });\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\n/**\n * @template T\n * @param {import('./ucan').ToString<T>} text\n * @returns {import('./ucan').ByteView<T>}\n */\nconst encode = text => encoder.encode(text)\n\n/**\n * @template T\n * @param {import('./ucan').ByteView<T>} bytes\n * @returns {import('./ucan').ToString<T>}\n */\nconst decode = bytes => decoder.decode(bytes)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vc3JjL3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPO0FBQ0E7O0FBRVA7QUFDQTtBQUNBLFdBQVcsOEJBQThCO0FBQ3pDLGFBQWE7QUFDYjtBQUNPOztBQUVQO0FBQ0E7QUFDQSxXQUFXLDhCQUE4QjtBQUN6QyxhQUFhO0FBQ2I7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy11Y2FuL3NyYy91dGY4LmpzPzdmNGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuZXhwb3J0IGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi91Y2FuJykuVG9TdHJpbmc8VD59IHRleHRcbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4vdWNhbicpLkJ5dGVWaWV3PFQ+fVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0gdGV4dCA9PiBlbmNvZGVyLmVuY29kZSh0ZXh0KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi91Y2FuJykuQnl0ZVZpZXc8VD59IGJ5dGVzXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL3VjYW4nKS5Ub1N0cmluZzxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IGJ5dGVzID0+IGRlY29kZXIuZGVjb2RlKGJ5dGVzKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/dag-ucan/src/view.js":
/*!*************************************************!*\
  !*** ./node_modules/@ipld/dag-ucan/src/view.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   View: () => (/* binding */ View)\n/* harmony export */ });\n/* harmony import */ var _ucan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucan.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/ucan.js\");\n/* harmony import */ var _did_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./did.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/did.js\");\n/* harmony import */ var _ipld_dag_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ipld/dag-json */ \"(ssr)/./node_modules/@ipld/dag-json/src/index.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utf8.js */ \"(ssr)/./node_modules/@ipld/dag-ucan/src/utf8.js\");\n\n\n\n\n\n/**\n * @param {unknown} data\n */\nconst toJSON = data => JSON.parse((0,_utf8_js__WEBPACK_IMPORTED_MODULE_3__.decode)((0,_ipld_dag_json__WEBPACK_IMPORTED_MODULE_2__.encode)(data)))\n\n/**\n * @template {UCAN.Capabilities} C\n */\nclass View {\n  /**\n   * @param {UCAN.UCAN<C>} model\n   */\n  constructor(model) {\n    /** @readonly */\n    this.model = model\n  }\n\n  get version() {\n    return this.model.v\n  }\n\n  get issuer() {\n    return _did_js__WEBPACK_IMPORTED_MODULE_1__.from(this.model.iss)\n  }\n\n  get audience() {\n    return _did_js__WEBPACK_IMPORTED_MODULE_1__.from(this.model.aud)\n  }\n\n  /**\n   * @returns {C}\n   */\n  get capabilities() {\n    return this.model.att\n  }\n\n  /**\n   * @returns {number}\n   */\n  get expiration() {\n    const { exp } = this.model\n    return exp === null ? Infinity : exp\n  }\n\n  /**\n   * @returns {undefined|number}\n   */\n  get notBefore() {\n    return this.model.nbf\n  }\n\n  /**\n   * @returns {undefined|string}\n   */\n\n  get nonce() {\n    return this.model.nnc\n  }\n\n  /**\n   * @returns {UCAN.Fact[]}\n   */\n  get facts() {\n    return this.model.fct\n  }\n\n  /**\n   * @returns {UCAN.Link[]}\n   */\n\n  get proofs() {\n    return this.model.prf\n  }\n\n  get signature() {\n    return this.model.s\n  }\n\n  // compatibility with UCAN.UCAN\n  get jwt() {\n    return this.model.jwt\n  }\n  get s() {\n    return this.model.s\n  }\n  get v() {\n    return this.model.v\n  }\n  get iss() {\n    return this.model.iss\n  }\n  get aud() {\n    return this.model.aud\n  }\n  get att() {\n    return this.model.att\n  }\n  get exp() {\n    return this.model.exp\n  }\n  get nbf() {\n    return this.model.nbf\n  }\n  get nnc() {\n    return this.model.nnc\n  }\n  get fct() {\n    return this.model.fct\n  }\n  get prf() {\n    return this.model.prf\n  }\n\n  /**\n   * @returns {UCAN.ToJSON<UCAN.UCAN<C>, UCAN.UCANJSON<this>>}\n   */\n  toJSON() {\n    const { v, iss, aud, s, att, prf, exp, fct, nnc, nbf } = this.model\n\n    return {\n      iss,\n      aud,\n      v,\n      s,\n      exp,\n      ...toJSON({\n        att,\n        prf,\n        ...(fct.length > 0 && { fct }),\n      }),\n      ...(nnc != null && { nnc }),\n      ...(nbf && { nbf }),\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvZGFnLXVjYW4vc3JjL3ZpZXcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBaUM7QUFDRjtBQUNzQjtBQUNMOztBQUVoRDtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGtDQUFrQyxnREFBVSxDQUFDLHNEQUFVOztBQUV2RDtBQUNBLGNBQWMsbUJBQW1CO0FBQ2pDO0FBQ087QUFDUDtBQUNBLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcseUNBQVE7QUFDbkI7O0FBRUE7QUFDQSxXQUFXLHlDQUFRO0FBQ25COztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxZQUFZLE1BQU07QUFDbEI7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsWUFBWSwrQ0FBK0M7O0FBRTNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxLQUFLO0FBQ3JDLE9BQU87QUFDUCwyQkFBMkIsS0FBSztBQUNoQyxtQkFBbUIsS0FBSztBQUN4QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctdWNhbi9zcmMvdmlldy5qcz85MjczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFVDQU4gZnJvbSBcIi4vdWNhbi5qc1wiXG5pbXBvcnQgKiBhcyBESUQgZnJvbSBcIi4vZGlkLmpzXCJcbmltcG9ydCB7IGVuY29kZSBhcyBlbmNvZGVKU09OIH0gZnJvbSBcIkBpcGxkL2RhZy1qc29uXCJcbmltcG9ydCB7IGRlY29kZSBhcyBkZWNvZGVVVEY4IH0gZnJvbSBcIi4vdXRmOC5qc1wiXG5cbi8qKlxuICogQHBhcmFtIHt1bmtub3dufSBkYXRhXG4gKi9cbmNvbnN0IHRvSlNPTiA9IGRhdGEgPT4gSlNPTi5wYXJzZShkZWNvZGVVVEY4KGVuY29kZUpTT04oZGF0YSkpKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7VUNBTi5DYXBhYmlsaXRpZXN9IENcbiAqL1xuZXhwb3J0IGNsYXNzIFZpZXcge1xuICAvKipcbiAgICogQHBhcmFtIHtVQ0FOLlVDQU48Qz59IG1vZGVsXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihtb2RlbCkge1xuICAgIC8qKiBAcmVhZG9ubHkgKi9cbiAgICB0aGlzLm1vZGVsID0gbW9kZWxcbiAgfVxuXG4gIGdldCB2ZXJzaW9uKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLnZcbiAgfVxuXG4gIGdldCBpc3N1ZXIoKSB7XG4gICAgcmV0dXJuIERJRC5mcm9tKHRoaXMubW9kZWwuaXNzKVxuICB9XG5cbiAgZ2V0IGF1ZGllbmNlKCkge1xuICAgIHJldHVybiBESUQuZnJvbSh0aGlzLm1vZGVsLmF1ZClcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7Q31cbiAgICovXG4gIGdldCBjYXBhYmlsaXRpZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuYXR0XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGdldCBleHBpcmF0aW9uKCkge1xuICAgIGNvbnN0IHsgZXhwIH0gPSB0aGlzLm1vZGVsXG4gICAgcmV0dXJuIGV4cCA9PT0gbnVsbCA/IEluZmluaXR5IDogZXhwXG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge3VuZGVmaW5lZHxudW1iZXJ9XG4gICAqL1xuICBnZXQgbm90QmVmb3JlKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLm5iZlxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHt1bmRlZmluZWR8c3RyaW5nfVxuICAgKi9cblxuICBnZXQgbm9uY2UoKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwubm5jXG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge1VDQU4uRmFjdFtdfVxuICAgKi9cbiAgZ2V0IGZhY3RzKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLmZjdFxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtVQ0FOLkxpbmtbXX1cbiAgICovXG5cbiAgZ2V0IHByb29mcygpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5wcmZcbiAgfVxuXG4gIGdldCBzaWduYXR1cmUoKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuc1xuICB9XG5cbiAgLy8gY29tcGF0aWJpbGl0eSB3aXRoIFVDQU4uVUNBTlxuICBnZXQgand0KCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLmp3dFxuICB9XG4gIGdldCBzKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLnNcbiAgfVxuICBnZXQgdigpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC52XG4gIH1cbiAgZ2V0IGlzcygpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5pc3NcbiAgfVxuICBnZXQgYXVkKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLmF1ZFxuICB9XG4gIGdldCBhdHQoKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuYXR0XG4gIH1cbiAgZ2V0IGV4cCgpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5leHBcbiAgfVxuICBnZXQgbmJmKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLm5iZlxuICB9XG4gIGdldCBubmMoKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwubm5jXG4gIH1cbiAgZ2V0IGZjdCgpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5mY3RcbiAgfVxuICBnZXQgcHJmKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLnByZlxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtVQ0FOLlRvSlNPTjxVQ0FOLlVDQU48Qz4sIFVDQU4uVUNBTkpTT048dGhpcz4+fVxuICAgKi9cbiAgdG9KU09OKCkge1xuICAgIGNvbnN0IHsgdiwgaXNzLCBhdWQsIHMsIGF0dCwgcHJmLCBleHAsIGZjdCwgbm5jLCBuYmYgfSA9IHRoaXMubW9kZWxcblxuICAgIHJldHVybiB7XG4gICAgICBpc3MsXG4gICAgICBhdWQsXG4gICAgICB2LFxuICAgICAgcyxcbiAgICAgIGV4cCxcbiAgICAgIC4uLnRvSlNPTih7XG4gICAgICAgIGF0dCxcbiAgICAgICAgcHJmLFxuICAgICAgICAuLi4oZmN0Lmxlbmd0aCA+IDAgJiYgeyBmY3QgfSksXG4gICAgICB9KSxcbiAgICAgIC4uLihubmMgIT0gbnVsbCAmJiB7IG5uYyB9KSxcbiAgICAgIC4uLihuYmYgJiYgeyBuYmYgfSksXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/dag-ucan/src/view.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/gen/unixfs.js":
/*!*************************************************!*\
  !*** ./node_modules/@ipld/unixfs/gen/unixfs.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Data: () => (/* binding */ Data),\n/* harmony export */   Metadata: () => (/* binding */ Metadata),\n/* harmony export */   UnixTime: () => (/* binding */ UnixTime),\n/* harmony export */   \"default\": () => (/* binding */ $root)\n/* harmony export */ });\n/* harmony import */ var protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protobufjs/minimal.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/protobufjs/minimal.js\");\n/*eslint-disable*/\n\n\n// Common aliases\nconst $Reader = protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__.Reader, $Writer = protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__.Writer, $util = protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__.util;\n\n// Exported root namespace\nconst $root = protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__.roots.unixfs || (protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__.roots.unixfs = {});\n\nconst Data = $root.Data = (() => {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\nconst UnixTime = $root.UnixTime = (() => {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\nconst Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, protobufjs_minimal_js__WEBPACK_IMPORTED_MODULE_0__.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/gen/unixfs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   createLink: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.createLink),\n/* harmony export */   createNode: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.createNode),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   prepare: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.prepare),\n/* harmony export */   validate: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.validate)\n/* harmony export */ });\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _pb_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pb-decode.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/pb-decode.js\");\n/* harmony import */ var _pb_encode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pb-encode.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/pb-encode.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/util.js\");\n\n\n\n\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\nconst name = 'dag-pb'\nconst code = 0x70\n\n/**\n * @param {PBNode} node\n * @returns {ByteView<PBNode>}\n */\nfunction encode (node) {\n  ;(0,_util_js__WEBPACK_IMPORTED_MODULE_3__.validate)(node)\n\n  const pbn = {}\n  if (node.Links) {\n    pbn.Links = node.Links.map((l) => {\n      const link = {}\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes // cid -> bytes\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n  if (node.Data) {\n    pbn.Data = node.Data\n  }\n\n  return (0,_pb_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeNode)(pbn)\n}\n\n/**\n * @param {ByteView<PBNode> | ArrayBufferView<PBNode>} bytes\n * @returns {PBNode}\n */\nfunction decode (bytes) {\n  const buf = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.toByteView)(bytes)\n  const pbn = (0,_pb_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeNode)(buf)\n\n  const node = {}\n\n  if (pbn.Data) {\n    node.Data = pbn.Data\n  }\n\n  if (pbn.Links) {\n    node.Links = pbn.Links.map((l) => {\n      const link = {}\n      try {\n        link.Hash = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.decode(l.Hash)\n      } catch {\n        // ignore parse fail\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID')\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n\n  return node\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctcGIvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNLO0FBQ0E7QUFDc0M7O0FBRWpGO0FBQ0E7QUFDQSxhQUFhLHFEQUFxRDtBQUNsRTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSw0REFBNEQ7QUFDekU7O0FBRUE7QUFDQSxhQUFhLGlDQUFpQztBQUM5QyxhQUFhLGlDQUFpQztBQUM5Qzs7QUFFTztBQUNBOztBQUVQO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AsRUFBRSxtREFBUTs7QUFFVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMseURBQVU7QUFDbkI7O0FBRUE7QUFDQSxXQUFXLDRDQUE0QztBQUN2RCxhQUFhO0FBQ2I7QUFDTztBQUNQLGNBQWMsb0RBQVU7QUFDeEIsY0FBYyx5REFBVTs7QUFFeEI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlEQUFHO0FBQ3ZCLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1wYi9zcmMvaW5kZXguanM/Yzg2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDSUQgfSBmcm9tICdtdWx0aWZvcm1hdHMvY2lkJ1xuaW1wb3J0IHsgZGVjb2RlTm9kZSB9IGZyb20gJy4vcGItZGVjb2RlLmpzJ1xuaW1wb3J0IHsgZW5jb2RlTm9kZSB9IGZyb20gJy4vcGItZW5jb2RlLmpzJ1xuaW1wb3J0IHsgcHJlcGFyZSwgdmFsaWRhdGUsIGNyZWF0ZU5vZGUsIGNyZWF0ZUxpbmssIHRvQnl0ZVZpZXcgfSBmcm9tICcuL3V0aWwuanMnXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ211bHRpZm9ybWF0cy9jb2RlY3MvaW50ZXJmYWNlJykuQnl0ZVZpZXc8VD59IEJ5dGVWaWV3XG4gKi9cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NvZGVjcy9pbnRlcmZhY2UnKS5BcnJheUJ1ZmZlclZpZXc8VD59IEFycmF5QnVmZmVyVmlld1xuICovXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UuanMnKS5QQkxpbmt9IFBCTGlua1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UuanMnKS5QQk5vZGV9IFBCTm9kZVxuICovXG5cbmV4cG9ydCBjb25zdCBuYW1lID0gJ2RhZy1wYidcbmV4cG9ydCBjb25zdCBjb2RlID0gMHg3MFxuXG4vKipcbiAqIEBwYXJhbSB7UEJOb2RlfSBub2RlXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8UEJOb2RlPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZSAobm9kZSkge1xuICB2YWxpZGF0ZShub2RlKVxuXG4gIGNvbnN0IHBibiA9IHt9XG4gIGlmIChub2RlLkxpbmtzKSB7XG4gICAgcGJuLkxpbmtzID0gbm9kZS5MaW5rcy5tYXAoKGwpID0+IHtcbiAgICAgIGNvbnN0IGxpbmsgPSB7fVxuICAgICAgaWYgKGwuSGFzaCkge1xuICAgICAgICBsaW5rLkhhc2ggPSBsLkhhc2guYnl0ZXMgLy8gY2lkIC0+IGJ5dGVzXG4gICAgICB9XG4gICAgICBpZiAobC5OYW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbGluay5OYW1lID0gbC5OYW1lXG4gICAgICB9XG4gICAgICBpZiAobC5Uc2l6ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGxpbmsuVHNpemUgPSBsLlRzaXplXG4gICAgICB9XG4gICAgICByZXR1cm4gbGlua1xuICAgIH0pXG4gIH1cbiAgaWYgKG5vZGUuRGF0YSkge1xuICAgIHBibi5EYXRhID0gbm9kZS5EYXRhXG4gIH1cblxuICByZXR1cm4gZW5jb2RlTm9kZShwYm4pXG59XG5cbi8qKlxuICogQHBhcmFtIHtCeXRlVmlldzxQQk5vZGU+IHwgQXJyYXlCdWZmZXJWaWV3PFBCTm9kZT59IGJ5dGVzXG4gKiBAcmV0dXJucyB7UEJOb2RlfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlIChieXRlcykge1xuICBjb25zdCBidWYgPSB0b0J5dGVWaWV3KGJ5dGVzKVxuICBjb25zdCBwYm4gPSBkZWNvZGVOb2RlKGJ1ZilcblxuICBjb25zdCBub2RlID0ge31cblxuICBpZiAocGJuLkRhdGEpIHtcbiAgICBub2RlLkRhdGEgPSBwYm4uRGF0YVxuICB9XG5cbiAgaWYgKHBibi5MaW5rcykge1xuICAgIG5vZGUuTGlua3MgPSBwYm4uTGlua3MubWFwKChsKSA9PiB7XG4gICAgICBjb25zdCBsaW5rID0ge31cbiAgICAgIHRyeSB7XG4gICAgICAgIGxpbmsuSGFzaCA9IENJRC5kZWNvZGUobC5IYXNoKVxuICAgICAgfSBjYXRjaCB7XG4gICAgICAgIC8vIGlnbm9yZSBwYXJzZSBmYWlsXG4gICAgICB9XG4gICAgICBpZiAoIWxpbmsuSGFzaCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgSGFzaCBmaWVsZCBmb3VuZCBpbiBsaW5rLCBleHBlY3RlZCBDSUQnKVxuICAgICAgfVxuICAgICAgaWYgKGwuTmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGxpbmsuTmFtZSA9IGwuTmFtZVxuICAgICAgfVxuICAgICAgaWYgKGwuVHNpemUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBsaW5rLlRzaXplID0gbC5Uc2l6ZVxuICAgICAgfVxuICAgICAgcmV0dXJuIGxpbmtcbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIG5vZGVcbn1cblxuZXhwb3J0IHsgcHJlcGFyZSwgdmFsaWRhdGUsIGNyZWF0ZU5vZGUsIGNyZWF0ZUxpbmsgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/pb-decode.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/pb-decode.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNode: () => (/* binding */ decodeNode)\n/* harmony export */ });\nconst textDecoder = new TextDecoder()\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[number, number]}\n */\nfunction decodeVarint (bytes, offset) {\n  let v = 0\n\n  for (let shift = 0; ; shift += 7) {\n    /* c8 ignore next 3 */\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow')\n    }\n    /* c8 ignore next 3 */\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data')\n    }\n\n    const b = bytes[offset++]\n    v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * (2 ** shift)\n    if (b < 0x80) {\n      break\n    }\n  }\n  return [v, offset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[Uint8Array, number]}\n */\nfunction decodeBytes (bytes, offset) {\n  let byteLen\n  ;[byteLen, offset] = decodeVarint(bytes, offset)\n  const postOffset = offset + byteLen\n\n  /* c8 ignore next 3 */\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length')\n  }\n  /* c8 ignore next 3 */\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data')\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} index\n * @returns {[number, number, number]}\n */\nfunction decodeKey (bytes, index) {\n  let wire\n  ;[wire, index] = decodeVarint(bytes, index)\n  // [wireType, fieldNum, newIndex]\n  return [wire & 0x7, wire >> 3, index]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBLink}\n */\nfunction decodeLink (bytes) {\n  /** @type {RawPBLink} */\n  const link = {}\n  const l = bytes.length\n  let index = 0\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`)\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash')\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash')\n      }\n\n      [link.Hash, index] = decodeBytes(bytes, index)\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`)\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name')\n      }\n\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      link.Name = textDecoder.decode(byts)\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section')\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`)\n      }\n\n      [link.Tsize, index] = decodeVarint(bytes, index)\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data')\n  }\n\n  return link\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBNode}\n */\nfunction decodeNode (bytes) {\n  const l = bytes.length\n  let index = 0\n  /** @type {RawPBLink[]|void} */\n  let links = undefined // eslint-disable-line no-undef-init\n  let linksBeforeData = false\n  /** @type {Uint8Array|void} */\n  let data = undefined // eslint-disable-line no-undef-init\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`)\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section')\n      }\n\n      [data, index] = decodeBytes(bytes, index)\n      if (links) {\n        linksBeforeData = true\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) { // interleaved Links/Data/Links\n        throw new Error('protobuf: (PBNode) duplicate Links section')\n      } else if (!links) {\n        links = []\n      }\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      links.push(decodeLink(byts))\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data')\n  }\n\n  /** @type {RawPBNode} */\n  const node = {}\n  if (data) {\n    node.Data = data\n  }\n  node.Links = links || []\n  return node\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/pb-decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/pb-encode.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/pb-encode.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeNode: () => (/* binding */ encodeNode)\n/* harmony export */ });\nconst textEncoder = new TextEncoder()\nconst maxInt32 = 2 ** 32\nconst maxUInt32 = 2 ** 31\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n// the encoders work backward from the end of the bytes array\n\n/**\n * encodeLink() is passed a slice of the parent byte array that ends where this\n * link needs to end, so it packs to the right-most part of the passed `bytes`\n *\n * @param {RawPBLink} link\n * @param {Uint8Array} bytes\n * @returns {number}\n */\nfunction encodeLink (link, bytes) {\n  let i = bytes.length\n\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative')\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding')\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1\n    bytes[i] = 0x18\n  }\n\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name)\n    i -= nameBytes.length\n    bytes.set(nameBytes, i)\n    i = encodeVarint(bytes, i, nameBytes.length) - 1\n    bytes[i] = 0x12\n  }\n\n  if (link.Hash) {\n    i -= link.Hash.length\n    bytes.set(link.Hash, i)\n    i = encodeVarint(bytes, i, link.Hash.length) - 1\n    bytes[i] = 0xa\n  }\n\n  return bytes.length - i\n}\n\n/**\n * Encodes a PBNode into a new byte array of precisely the correct size\n *\n * @param {RawPBNode} node\n * @returns {Uint8Array}\n */\nfunction encodeNode (node) {\n  const size = sizeNode(node)\n  const bytes = new Uint8Array(size)\n  let i = size\n\n  if (node.Data) {\n    i -= node.Data.length\n    bytes.set(node.Data, i)\n    i = encodeVarint(bytes, i, node.Data.length) - 1\n    bytes[i] = 0xa\n  }\n\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i))\n      i -= size\n      i = encodeVarint(bytes, i, size) - 1\n      bytes[i] = 0x12\n    }\n  }\n\n  return bytes\n}\n\n/**\n * work out exactly how many bytes this link takes up\n *\n * @param {RawPBLink} link\n * @returns\n */\nfunction sizeLink (link) {\n  let n = 0\n\n  if (link.Hash) {\n    const l = link.Hash.length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize)\n  }\n\n  return n\n}\n\n/**\n * Work out exactly how many bytes this node takes up\n *\n * @param {RawPBNode} node\n * @returns {number}\n */\nfunction sizeNode (node) {\n  let n = 0\n\n  if (node.Data) {\n    const l = node.Data.length\n    n += 1 + l + sov(l)\n  }\n\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link)\n      n += 1 + l + sov(l)\n    }\n  }\n\n  return n\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @param {number} v\n * @returns {number}\n */\nfunction encodeVarint (bytes, offset, v) {\n  offset -= sov(v)\n  const base = offset\n\n  while (v >= maxUInt32) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v /= 128\n  }\n\n  while (v >= 128) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v >>>= 7\n  }\n\n  bytes[offset] = v\n\n  return base\n}\n\n/**\n * size of varint\n *\n * @param {number} x\n * @returns {number}\n */\nfunction sov (x) {\n  if (x % 2 === 0) {\n    x++\n  }\n  return Math.floor((len64(x) + 6) / 7)\n}\n\n/**\n * golang math/bits, how many bits does it take to represent this integer?\n *\n * @param {number} x\n * @returns {number}\n */\nfunction len64 (x) {\n  let n = 0\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32)\n    n = 32\n  }\n  if (x >= (1 << 16)) {\n    x >>>= 16\n    n += 16\n  }\n  if (x >= (1 << 8)) {\n    x >>>= 8\n    n += 8\n  }\n  return n + len8tab[x]\n}\n\n// golang math/bits\nconst len8tab = [\n  0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/pb-encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/util.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/util.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLink: () => (/* binding */ createLink),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   prepare: () => (/* binding */ prepare),\n/* harmony export */   toByteView: () => (/* binding */ toByteView),\n/* harmony export */   validate: () => (/* binding */ validate)\n/* harmony export */ });\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/cid.js\");\n\n\n/* eslint-disable complexity, no-nested-ternary */\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\nconst pbNodeProperties = ['Data', 'Links']\nconst pbLinkProperties = ['Hash', 'Name', 'Tsize']\n\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {PBLink} a\n * @param {PBLink} b\n * @returns {number}\n */\nfunction linkComparator (a, b) {\n  if (a === b) {\n    return 0\n  }\n\n  const abuf = a.Name ? textEncoder.encode(a.Name) : []\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : []\n\n  let x = abuf.length\n  let y = bbuf.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i]\n      y = bbuf[i]\n      break\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0\n}\n\n/**\n * @param {any} node\n * @param {string[]} properties\n * @returns {boolean}\n */\nfunction hasOnlyProperties (node, properties) {\n  return !Object.keys(node).some((p) => !properties.includes(p))\n}\n\n/**\n * Converts a CID, or a PBLink-like object to a PBLink\n *\n * @param {any} link\n * @returns {PBLink}\n */\nfunction asLink (link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(link)\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n    return { Hash }\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  const pbl = {}\n\n  if (link.Hash) {\n    let cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(link.Hash)\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.parse(link.Hash)\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.decode(link.Hash)\n        }\n      }\n    } catch (/** @type {any} */ e) {\n      throw new TypeError(`Invalid DAG-PB form: ${e.message}`)\n    }\n\n    if (cid) {\n      pbl.Hash = cid\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize\n  }\n\n  return pbl\n}\n\n/**\n * @param {any} node\n * @returns {PBNode}\n */\nfunction prepare (node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node }\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  /** @type {PBNode} */\n  const pbn = {}\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data)\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink)\n      pbn.Links.sort(linkComparator)\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  } else {\n    pbn.Links = []\n  }\n\n  return pbn\n}\n\n/**\n * @param {PBNode} node\n */\nfunction validate (node) {\n  /*\n  type PBLink struct {\n    Hash optional Link\n    Name optional String\n    Tsize optional Int\n  }\n\n  type PBNode struct {\n    Links [PBLink]\n    Data optional Bytes\n  }\n  */\n  // @ts-ignore private property for TS\n  if (!node || typeof node !== 'object' || Array.isArray(node) || node instanceof Uint8Array || (node['/'] && node['/'] === node.bytes)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)')\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be bytes)')\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be a list)')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i]\n    // @ts-ignore private property for TS\n    if (!link || typeof link !== 'object' || Array.isArray(link) || link instanceof Uint8Array || (link['/'] && link['/'] === link.bytes)) {\n      throw new TypeError('Invalid DAG-PB form (bad link)')\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link)')\n    }\n\n    if (link.Hash === undefined) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)')\n    }\n\n    // @ts-ignore private property for TS\n    if (link.Hash == null || !link.Hash['/'] || link.Hash['/'] !== link.Hash.bytes) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)')\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)')\n    }\n\n    if (link.Tsize !== undefined) {\n      if (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)')\n      }\n      if (link.Tsize < 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize cannot be negative)')\n      }\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)')\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {PBLink[]} [links]\n * @returns {PBNode}\n */\nfunction createNode (data, links = []) {\n  return prepare({ Data: data, Links: links })\n}\n\n/**\n * @param {string} name\n * @param {number} size\n * @param {CID} cid\n * @returns {PBLink}\n */\nfunction createLink (name, size, cid) {\n  return asLink({ Hash: cid, Name: name, Tsize: size })\n}\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctcGIvc3JjL3V0aWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNDOztBQUV0Qzs7QUFFQTtBQUNBLGFBQWEsaUNBQWlDO0FBQzlDLGFBQWEsaUNBQWlDO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxhQUFhLHFEQUFxRDtBQUNsRTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSw0REFBNEQ7QUFDekU7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHdDQUF3QyxTQUFTO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLFdBQVcsVUFBVTtBQUNyQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaURBQUc7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLGNBQWMsaURBQUc7QUFDakI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlEQUFHO0FBQ25CLFVBQVU7QUFDVixnQkFBZ0IsaURBQUc7QUFDbkI7QUFDQTtBQUNBLE1BQU0sa0JBQWtCLEtBQUs7QUFDN0Isa0RBQWtELFVBQVU7QUFDNUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLFFBQVE7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsdUJBQXVCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsVUFBVTtBQUNyQixhQUFhO0FBQ2I7QUFDTztBQUNQLG1CQUFtQiwwQkFBMEI7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQLGtCQUFrQixvQ0FBb0M7QUFDdEQ7O0FBRUE7QUFDQTtBQUNBLFdBQVcsa0NBQWtDO0FBQzdDLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvbm9kZV9tb2R1bGVzL0BpcGxkL2RhZy1wYi9zcmMvdXRpbC5qcz85MTBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENJRCB9IGZyb20gJ211bHRpZm9ybWF0cy9jaWQnXG5cbi8qIGVzbGludC1kaXNhYmxlIGNvbXBsZXhpdHksIG5vLW5lc3RlZC10ZXJuYXJ5ICovXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UuanMnKS5QQkxpbmt9IFBCTGlua1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UuanMnKS5QQk5vZGV9IFBCTm9kZVxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ211bHRpZm9ybWF0cy9jb2RlY3MvaW50ZXJmYWNlJykuQnl0ZVZpZXc8VD59IEJ5dGVWaWV3XG4gKi9cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NvZGVjcy9pbnRlcmZhY2UnKS5BcnJheUJ1ZmZlclZpZXc8VD59IEFycmF5QnVmZmVyVmlld1xuICovXG5cbmNvbnN0IHBiTm9kZVByb3BlcnRpZXMgPSBbJ0RhdGEnLCAnTGlua3MnXVxuY29uc3QgcGJMaW5rUHJvcGVydGllcyA9IFsnSGFzaCcsICdOYW1lJywgJ1RzaXplJ11cblxuY29uc3QgdGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuXG4vKipcbiAqIEBwYXJhbSB7UEJMaW5rfSBhXG4gKiBAcGFyYW0ge1BCTGlua30gYlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZnVuY3Rpb24gbGlua0NvbXBhcmF0b3IgKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHtcbiAgICByZXR1cm4gMFxuICB9XG5cbiAgY29uc3QgYWJ1ZiA9IGEuTmFtZSA/IHRleHRFbmNvZGVyLmVuY29kZShhLk5hbWUpIDogW11cbiAgY29uc3QgYmJ1ZiA9IGIuTmFtZSA/IHRleHRFbmNvZGVyLmVuY29kZShiLk5hbWUpIDogW11cblxuICBsZXQgeCA9IGFidWYubGVuZ3RoXG4gIGxldCB5ID0gYmJ1Zi5sZW5ndGhcblxuICBmb3IgKGxldCBpID0gMCwgbGVuID0gTWF0aC5taW4oeCwgeSk7IGkgPCBsZW47ICsraSkge1xuICAgIGlmIChhYnVmW2ldICE9PSBiYnVmW2ldKSB7XG4gICAgICB4ID0gYWJ1ZltpXVxuICAgICAgeSA9IGJidWZbaV1cbiAgICAgIGJyZWFrXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHggPCB5ID8gLTEgOiB5IDwgeCA/IDEgOiAwXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IG5vZGVcbiAqIEBwYXJhbSB7c3RyaW5nW119IHByb3BlcnRpZXNcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBoYXNPbmx5UHJvcGVydGllcyAobm9kZSwgcHJvcGVydGllcykge1xuICByZXR1cm4gIU9iamVjdC5rZXlzKG5vZGUpLnNvbWUoKHApID0+ICFwcm9wZXJ0aWVzLmluY2x1ZGVzKHApKVxufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgQ0lELCBvciBhIFBCTGluay1saWtlIG9iamVjdCB0byBhIFBCTGlua1xuICpcbiAqIEBwYXJhbSB7YW55fSBsaW5rXG4gKiBAcmV0dXJucyB7UEJMaW5rfVxuICovXG5mdW5jdGlvbiBhc0xpbmsgKGxpbmspIHtcbiAgaWYgKHR5cGVvZiBsaW5rLmFzQ0lEID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IEhhc2ggPSBDSUQuYXNDSUQobGluaylcbiAgICBpZiAoIUhhc2gpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0nKVxuICAgIH1cbiAgICByZXR1cm4geyBIYXNoIH1cbiAgfVxuXG4gIGlmICh0eXBlb2YgbGluayAhPT0gJ29iamVjdCcgfHwgQXJyYXkuaXNBcnJheShsaW5rKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0nKVxuICB9XG5cbiAgY29uc3QgcGJsID0ge31cblxuICBpZiAobGluay5IYXNoKSB7XG4gICAgbGV0IGNpZCA9IENJRC5hc0NJRChsaW5rLkhhc2gpXG4gICAgdHJ5IHtcbiAgICAgIGlmICghY2lkKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbGluay5IYXNoID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGNpZCA9IENJRC5wYXJzZShsaW5rLkhhc2gpXG4gICAgICAgIH0gZWxzZSBpZiAobGluay5IYXNoIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgIGNpZCA9IENJRC5kZWNvZGUobGluay5IYXNoKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoLyoqIEB0eXBlIHthbnl9ICovIGUpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEludmFsaWQgREFHLVBCIGZvcm06ICR7ZS5tZXNzYWdlfWApXG4gICAgfVxuXG4gICAgaWYgKGNpZCkge1xuICAgICAgcGJsLkhhc2ggPSBjaWRcbiAgICB9XG4gIH1cblxuICBpZiAoIXBibC5IYXNoKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBEQUctUEIgZm9ybScpXG4gIH1cblxuICBpZiAodHlwZW9mIGxpbmsuTmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICBwYmwuTmFtZSA9IGxpbmsuTmFtZVxuICB9XG5cbiAgaWYgKHR5cGVvZiBsaW5rLlRzaXplID09PSAnbnVtYmVyJykge1xuICAgIHBibC5Uc2l6ZSA9IGxpbmsuVHNpemVcbiAgfVxuXG4gIHJldHVybiBwYmxcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gbm9kZVxuICogQHJldHVybnMge1BCTm9kZX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByZXBhcmUgKG5vZGUpIHtcbiAgaWYgKG5vZGUgaW5zdGFuY2VvZiBVaW50OEFycmF5IHx8IHR5cGVvZiBub2RlID09PSAnc3RyaW5nJykge1xuICAgIG5vZGUgPSB7IERhdGE6IG5vZGUgfVxuICB9XG5cbiAgaWYgKHR5cGVvZiBub2RlICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KG5vZGUpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBEQUctUEIgZm9ybScpXG4gIH1cblxuICAvKiogQHR5cGUge1BCTm9kZX0gKi9cbiAgY29uc3QgcGJuID0ge31cblxuICBpZiAobm9kZS5EYXRhICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAodHlwZW9mIG5vZGUuRGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHBibi5EYXRhID0gdGV4dEVuY29kZXIuZW5jb2RlKG5vZGUuRGF0YSlcbiAgICB9IGVsc2UgaWYgKG5vZGUuRGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgIHBibi5EYXRhID0gbm9kZS5EYXRhXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0nKVxuICAgIH1cbiAgfVxuXG4gIGlmIChub2RlLkxpbmtzICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShub2RlLkxpbmtzKSkge1xuICAgICAgcGJuLkxpbmtzID0gbm9kZS5MaW5rcy5tYXAoYXNMaW5rKVxuICAgICAgcGJuLkxpbmtzLnNvcnQobGlua0NvbXBhcmF0b3IpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0nKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBwYm4uTGlua3MgPSBbXVxuICB9XG5cbiAgcmV0dXJuIHBiblxufVxuXG4vKipcbiAqIEBwYXJhbSB7UEJOb2RlfSBub2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZSAobm9kZSkge1xuICAvKlxuICB0eXBlIFBCTGluayBzdHJ1Y3Qge1xuICAgIEhhc2ggb3B0aW9uYWwgTGlua1xuICAgIE5hbWUgb3B0aW9uYWwgU3RyaW5nXG4gICAgVHNpemUgb3B0aW9uYWwgSW50XG4gIH1cblxuICB0eXBlIFBCTm9kZSBzdHJ1Y3Qge1xuICAgIExpbmtzIFtQQkxpbmtdXG4gICAgRGF0YSBvcHRpb25hbCBCeXRlc1xuICB9XG4gICovXG4gIC8vIEB0cy1pZ25vcmUgcHJpdmF0ZSBwcm9wZXJ0eSBmb3IgVFNcbiAgaWYgKCFub2RlIHx8IHR5cGVvZiBub2RlICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KG5vZGUpIHx8IG5vZGUgaW5zdGFuY2VvZiBVaW50OEFycmF5IHx8IChub2RlWycvJ10gJiYgbm9kZVsnLyddID09PSBub2RlLmJ5dGVzKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0nKVxuICB9XG5cbiAgaWYgKCFoYXNPbmx5UHJvcGVydGllcyhub2RlLCBwYk5vZGVQcm9wZXJ0aWVzKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0gKGV4dHJhbmVvdXMgcHJvcGVydGllcyknKVxuICB9XG5cbiAgaWYgKG5vZGUuRGF0YSAhPT0gdW5kZWZpbmVkICYmICEobm9kZS5EYXRhIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIERBRy1QQiBmb3JtIChEYXRhIG11c3QgYmUgYnl0ZXMpJylcbiAgfVxuXG4gIGlmICghQXJyYXkuaXNBcnJheShub2RlLkxpbmtzKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0gKExpbmtzIG11c3QgYmUgYSBsaXN0KScpXG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGUuTGlua3MubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBsaW5rID0gbm9kZS5MaW5rc1tpXVxuICAgIC8vIEB0cy1pZ25vcmUgcHJpdmF0ZSBwcm9wZXJ0eSBmb3IgVFNcbiAgICBpZiAoIWxpbmsgfHwgdHlwZW9mIGxpbmsgIT09ICdvYmplY3QnIHx8IEFycmF5LmlzQXJyYXkobGluaykgfHwgbGluayBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgfHwgKGxpbmtbJy8nXSAmJiBsaW5rWycvJ10gPT09IGxpbmsuYnl0ZXMpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIERBRy1QQiBmb3JtIChiYWQgbGluayknKVxuICAgIH1cblxuICAgIGlmICghaGFzT25seVByb3BlcnRpZXMobGluaywgcGJMaW5rUHJvcGVydGllcykpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0gKGV4dHJhbmVvdXMgcHJvcGVydGllcyBvbiBsaW5rKScpXG4gICAgfVxuXG4gICAgaWYgKGxpbmsuSGFzaCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIERBRy1QQiBmb3JtIChsaW5rIG11c3QgaGF2ZSBhIEhhc2gpJylcbiAgICB9XG5cbiAgICAvLyBAdHMtaWdub3JlIHByaXZhdGUgcHJvcGVydHkgZm9yIFRTXG4gICAgaWYgKGxpbmsuSGFzaCA9PSBudWxsIHx8ICFsaW5rLkhhc2hbJy8nXSB8fCBsaW5rLkhhc2hbJy8nXSAhPT0gbGluay5IYXNoLmJ5dGVzKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIERBRy1QQiBmb3JtIChsaW5rIEhhc2ggbXVzdCBiZSBhIENJRCknKVxuICAgIH1cblxuICAgIGlmIChsaW5rLk5hbWUgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgbGluay5OYW1lICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBEQUctUEIgZm9ybSAobGluayBOYW1lIG11c3QgYmUgYSBzdHJpbmcpJylcbiAgICB9XG5cbiAgICBpZiAobGluay5Uc2l6ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpZiAodHlwZW9mIGxpbmsuVHNpemUgIT09ICdudW1iZXInIHx8IGxpbmsuVHNpemUgJSAxICE9PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgREFHLVBCIGZvcm0gKGxpbmsgVHNpemUgbXVzdCBiZSBhbiBpbnRlZ2VyKScpXG4gICAgICB9XG4gICAgICBpZiAobGluay5Uc2l6ZSA8IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBEQUctUEIgZm9ybSAobGluayBUc2l6ZSBjYW5ub3QgYmUgbmVnYXRpdmUpJylcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaSA+IDAgJiYgbGlua0NvbXBhcmF0b3IobGluaywgbm9kZS5MaW5rc1tpIC0gMV0pID09PSAtMSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBEQUctUEIgZm9ybSAobGlua3MgbXVzdCBiZSBzb3J0ZWQgYnkgTmFtZSBieXRlcyknKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtQQkxpbmtbXX0gW2xpbmtzXVxuICogQHJldHVybnMge1BCTm9kZX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5vZGUgKGRhdGEsIGxpbmtzID0gW10pIHtcbiAgcmV0dXJuIHByZXBhcmUoeyBEYXRhOiBkYXRhLCBMaW5rczogbGlua3MgfSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHBhcmFtIHtudW1iZXJ9IHNpemVcbiAqIEBwYXJhbSB7Q0lEfSBjaWRcbiAqIEByZXR1cm5zIHtQQkxpbmt9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMaW5rIChuYW1lLCBzaXplLCBjaWQpIHtcbiAgcmV0dXJuIGFzTGluayh7IEhhc2g6IGNpZCwgTmFtZTogbmFtZSwgVHNpemU6IHNpemUgfSlcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtCeXRlVmlldzxUPiB8IEFycmF5QnVmZmVyVmlldzxUPn0gYnVmXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0J5dGVWaWV3IChidWYpIHtcbiAgaWYgKGJ1ZiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1ZiwgMCwgYnVmLmJ5dGVMZW5ndGgpXG4gIH1cblxuICByZXR1cm4gYnVmXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/@multiformats/murmur3/src/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/@multiformats/murmur3/src/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   murmur3128: () => (/* binding */ murmur3128),\n/* harmony export */   murmur332: () => (/* binding */ murmur332),\n/* harmony export */   murmur364: () => (/* binding */ murmur364)\n/* harmony export */ });\n/* harmony import */ var multiformats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/index.js\");\n/* harmony import */ var multiformats_hashes_hasher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/hashes/hasher */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var murmurhash3js_revisited__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! murmurhash3js-revisited */ \"(ssr)/./node_modules/murmurhash3js-revisited/index.js\");\n\n\n// @ts-expect-error no types\n\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nfunction fromNumberTo32BitBuf (number) {\n  const bytes = new Array(4)\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n  return new Uint8Array(bytes)\n}\n\nconst murmur332 = (0,multiformats_hashes_hasher__WEBPACK_IMPORTED_MODULE_1__.from)({\n  name: 'murmur3-32',\n  code: 0x23,\n  encode: (input) => fromNumberTo32BitBuf(murmurhash3js_revisited__WEBPACK_IMPORTED_MODULE_2__.x86.hash32(input))\n})\n\nconst murmur3128 = (0,multiformats_hashes_hasher__WEBPACK_IMPORTED_MODULE_1__.from)({\n  name: 'murmur3-128',\n  code: 0x22,\n  encode: (input) => multiformats__WEBPACK_IMPORTED_MODULE_0__.bytes.fromHex(murmurhash3js_revisited__WEBPACK_IMPORTED_MODULE_2__.x64.hash128(input))\n})\n\n// A special-use 0x22 that truncates 64 bits, specifically for use in the UnixFS HAMT\nconst murmur364 = (0,multiformats_hashes_hasher__WEBPACK_IMPORTED_MODULE_1__.from)({\n  name: 'murmur3-x64-64',\n  code: 0x22,\n  encode: (input) => multiformats__WEBPACK_IMPORTED_MODULE_0__.bytes.fromHex(murmurhash3js_revisited__WEBPACK_IMPORTED_MODULE_2__.x64.hash128(input)).subarray(0, 8)\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211cm11cjMvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvQztBQUNhO0FBQ2pEO0FBQ3lDOztBQUV6QztBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLE9BQU87QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTyxrQkFBa0IsZ0VBQUk7QUFDN0I7QUFDQTtBQUNBLDBDQUEwQyx3REFBTztBQUNqRCxDQUFDOztBQUVNLG1CQUFtQixnRUFBSTtBQUM5QjtBQUNBO0FBQ0EscUJBQXFCLHVEQUFhLENBQUMsd0RBQU87QUFDMUMsQ0FBQzs7QUFFRDtBQUNPLGtCQUFrQixnRUFBSTtBQUM3QjtBQUNBO0FBQ0EscUJBQXFCLHVEQUFhLENBQUMsd0RBQU87QUFDMUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdXJtdXIzL3NyYy9pbmRleC5qcz9iZWE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ5dGVzIH0gZnJvbSAnbXVsdGlmb3JtYXRzJ1xuaW1wb3J0IHsgZnJvbSB9IGZyb20gJ211bHRpZm9ybWF0cy9oYXNoZXMvaGFzaGVyJ1xuLy8gQHRzLWV4cGVjdC1lcnJvciBubyB0eXBlc1xuaW1wb3J0IG11ciBmcm9tICdtdXJtdXJoYXNoM2pzLXJldmlzaXRlZCdcblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gbnVtYmVyXG4gKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAqL1xuZnVuY3Rpb24gZnJvbU51bWJlclRvMzJCaXRCdWYgKG51bWJlcikge1xuICBjb25zdCBieXRlcyA9IG5ldyBBcnJheSg0KVxuICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKykge1xuICAgIGJ5dGVzW2ldID0gbnVtYmVyICYgMHhmZlxuICAgIG51bWJlciA9IG51bWJlciA+PiA4XG4gIH1cbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ5dGVzKVxufVxuXG5leHBvcnQgY29uc3QgbXVybXVyMzMyID0gZnJvbSh7XG4gIG5hbWU6ICdtdXJtdXIzLTMyJyxcbiAgY29kZTogMHgyMyxcbiAgZW5jb2RlOiAoaW5wdXQpID0+IGZyb21OdW1iZXJUbzMyQml0QnVmKG11ci54ODYuaGFzaDMyKGlucHV0KSlcbn0pXG5cbmV4cG9ydCBjb25zdCBtdXJtdXIzMTI4ID0gZnJvbSh7XG4gIG5hbWU6ICdtdXJtdXIzLTEyOCcsXG4gIGNvZGU6IDB4MjIsXG4gIGVuY29kZTogKGlucHV0KSA9PiBieXRlcy5mcm9tSGV4KG11ci54NjQuaGFzaDEyOChpbnB1dCkpXG59KVxuXG4vLyBBIHNwZWNpYWwtdXNlIDB4MjIgdGhhdCB0cnVuY2F0ZXMgNjQgYml0cywgc3BlY2lmaWNhbGx5IGZvciB1c2UgaW4gdGhlIFVuaXhGUyBIQU1UXG5leHBvcnQgY29uc3QgbXVybXVyMzY0ID0gZnJvbSh7XG4gIG5hbWU6ICdtdXJtdXIzLXg2NC02NCcsXG4gIGNvZGU6IDB4MjIsXG4gIGVuY29kZTogKGlucHV0KSA9PiBieXRlcy5mcm9tSGV4KG11ci54NjQuaGFzaDEyOChpbnB1dCkpLnN1YmFycmF5KDAsIDgpXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/@multiformats/murmur3/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base32.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base32.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsaURBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHVCQUF1QixpREFBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSwwQkFBMEIsaURBQU87QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sZ0JBQWdCLGlEQUFPO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzPzU4ODMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTMyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnYicsXG4gICAgbmFtZTogJ2Jhc2UzMicsXG4gICAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnQicsXG4gICAgbmFtZTogJ2Jhc2UzMnVwcGVyJyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnYycsXG4gICAgbmFtZTogJ2Jhc2UzMnBhZCcsXG4gICAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2Nz0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2Nz0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXggPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd2JyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4dXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdWJyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVYnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWQgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd0JyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4cGFkJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2PScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWPScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnogPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdoJyxcbiAgICBuYW1lOiAnYmFzZTMyeicsXG4gICAgYWxwaGFiZXQ6ICd5Ym5kcmZnOGVqa21jcHF4b3QxdXdpc3phMzQ1aDc2OScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTMyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base36.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base36.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixlQUFlLCtDQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsK0NBQUs7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzPzg3NDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzNiA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdrJyxcbiAgICBuYW1lOiAnYmFzZTM2JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzNnVwcGVyID0gYmFzZVgoe1xuICAgIHByZWZpeDogJ0snLFxuICAgIG5hbWU6ICdiYXNlMzZ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzNi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base58.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base58.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixrQkFBa0IsK0NBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQiwrQ0FBSztBQUNqQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlNTguanM/NTIxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlWCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTU4YnRjID0gYmFzZVgoe1xuICAgIG5hbWU6ICdiYXNlNThidGMnLFxuICAgIHByZWZpeDogJ3onLFxuICAgIGFscGhhYmV0OiAnMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGZsaWNrciA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4ZmxpY2tyJyxcbiAgICBwcmVmaXg6ICdaJyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OWFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXpBQkNERUZHSEpLTE1OUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U1OC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/interface.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/interface.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ1U7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2ludGVyZmFjZS5qcz82ZmJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEJhc2UgZW5jb2RlcnMgLyBkZWNvZGVycyBqdXN0IGJhc2UgZW5jb2RlIC8gZGVjb2RlIGJldHdlZW4gYmluYXJ5IGFuZFxuLy8gdGV4dHVhbCByZXByZXNlbnRhdGlvbi4gVGhleSBhcmUgdW5hd2FyZSBvZiBtdWx0aWJhc2UuXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/block.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/block.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Block: () => (/* binding */ Block),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createUnsafe: () => (/* binding */ createUnsafe),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/index.js\");\n\nfunction readonly({ enumerable = true, configurable = false } = {}) {\n    return { enumerable, configurable, writable: false };\n}\nfunction* linksWithin(path, value) {\n    if (value != null && typeof value === 'object') {\n        if (Array.isArray(value)) {\n            for (const [index, element] of value.entries()) {\n                const elementPath = [...path, index];\n                const cid = _index_js__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(element);\n                if (cid != null) {\n                    yield [elementPath.join('/'), cid];\n                }\n                else if (typeof element === 'object') {\n                    yield* links(element, elementPath);\n                }\n            }\n        }\n        else {\n            const cid = _index_js__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(value);\n            if (cid != null) {\n                yield [path.join('/'), cid];\n            }\n            else {\n                yield* links(value, path);\n            }\n        }\n    }\n}\nfunction* links(source, base) {\n    if (source == null || source instanceof Uint8Array) {\n        return;\n    }\n    const cid = _index_js__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(source);\n    if (cid != null) {\n        yield [base.join('/'), cid];\n    }\n    for (const [key, value] of Object.entries(source)) {\n        const path = [...base, key];\n        yield* linksWithin(path, value);\n    }\n}\nfunction* treeWithin(path, value) {\n    if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n            const elementPath = [...path, index];\n            yield elementPath.join('/');\n            if (typeof element === 'object' && (_index_js__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(element) == null)) {\n                yield* tree(element, elementPath);\n            }\n        }\n    }\n    else {\n        yield* tree(value, path);\n    }\n}\nfunction* tree(source, base) {\n    if (source == null || typeof source !== 'object') {\n        return;\n    }\n    for (const [key, value] of Object.entries(source)) {\n        const path = [...base, key];\n        yield path.join('/');\n        if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && (_index_js__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(value) == null)) {\n            yield* treeWithin(path, value);\n        }\n    }\n}\nfunction get(source, path) {\n    let node = source;\n    for (const [index, key] of path.entries()) {\n        node = node[key];\n        if (node == null) {\n            throw new Error(`Object has no property at ${path.slice(0, index + 1).map(part => `[${JSON.stringify(part)}]`).join('')}`);\n        }\n        const cid = _index_js__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(node);\n        if (cid != null) {\n            return { value: cid, remaining: path.slice(index + 1).join('/') };\n        }\n    }\n    return { value: node };\n}\n/**\n * @template T - Logical type of the data encoded in the block\n * @template C - multicodec code corresponding to codec used to encode the block\n * @template A - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template V - CID version\n */\nclass Block {\n    cid;\n    bytes;\n    value;\n    asBlock;\n    constructor({ cid, bytes, value }) {\n        if (cid == null || bytes == null || typeof value === 'undefined') {\n            throw new Error('Missing required argument');\n        }\n        this.cid = cid;\n        this.bytes = bytes;\n        this.value = value;\n        this.asBlock = this;\n        // Mark all the properties immutable\n        Object.defineProperties(this, {\n            cid: readonly(),\n            bytes: readonly(),\n            value: readonly(),\n            asBlock: readonly()\n        });\n    }\n    links() {\n        return links(this.value, []);\n    }\n    tree() {\n        return tree(this.value, []);\n    }\n    get(path = '/') {\n        return get(this.value, path.split('/').filter(Boolean));\n    }\n}\n/**\n * @template T - Logical type of the data encoded in the block\n * @template Code - multicodec code corresponding to codec used to encode the block\n * @template Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n */\nasync function encode({ value, codec, hasher }) {\n    if (typeof value === 'undefined') {\n        throw new Error('Missing required argument \"value\"');\n    }\n    if (codec == null || hasher == null) {\n        throw new Error('Missing required argument: codec or hasher');\n    }\n    const bytes = codec.encode(value);\n    const hash = await hasher.digest(bytes);\n    const cid = _index_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(1, codec.code, hash);\n    return new Block({ value, bytes, cid });\n}\n/**\n * @template T - Logical type of the data encoded in the block\n * @template Code - multicodec code corresponding to codec used to encode the block\n * @template Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n */\nasync function decode({ bytes, codec, hasher }) {\n    if (bytes == null) {\n        throw new Error('Missing required argument \"bytes\"');\n    }\n    if (codec == null || hasher == null) {\n        throw new Error('Missing required argument: codec or hasher');\n    }\n    const value = codec.decode(bytes);\n    const hash = await hasher.digest(bytes);\n    const cid = _index_js__WEBPACK_IMPORTED_MODULE_0__.CID.create(1, codec.code, hash);\n    return new Block({ value, bytes, cid });\n}\n/**\n * @template T - Logical type of the data encoded in the block\n * @template Code - multicodec code corresponding to codec used to encode the block\n * @template Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template V - CID version\n */\nfunction createUnsafe({ bytes, cid, value: maybeValue, codec }) {\n    const value = maybeValue !== undefined\n        ? maybeValue\n        : (codec?.decode(bytes));\n    if (value === undefined) {\n        throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n    }\n    return new Block({\n        cid: cid,\n        bytes,\n        value\n    });\n}\n/**\n * @template T - Logical type of the data encoded in the block\n * @template Code - multicodec code corresponding to codec used to encode the block\n * @template Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template V - CID version\n */\nasync function create({ bytes, cid, hasher, codec }) {\n    if (bytes == null) {\n        throw new Error('Missing required argument \"bytes\"');\n    }\n    if (hasher == null) {\n        throw new Error('Missing required argument \"hasher\"');\n    }\n    const value = codec.decode(bytes);\n    const hash = await hasher.digest(bytes);\n    if (!_index_js__WEBPACK_IMPORTED_MODULE_0__.bytes.equals(cid.multihash.bytes, hash.bytes)) {\n        throw new Error('CID hash does not match bytes');\n    }\n    return createUnsafe({\n        bytes,\n        cid,\n        value,\n        codec\n    });\n}\n//# sourceMappingURL=block.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/block.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/block/interface.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/block/interface.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmxvY2svaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmxvY2svaW50ZXJmYWNlLmpzP2UyNjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bytes.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bytes.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanM/OWMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1wdHkgPSBuZXcgVWludDhBcnJheSgwKTtcbmV4cG9ydCBmdW5jdGlvbiB0b0hleChkKSB7XG4gICAgcmV0dXJuIGQucmVkdWNlKChoZXgsIGJ5dGUpID0+IGhleCArIGJ5dGUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyksICcnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tSGV4KGhleCkge1xuICAgIGNvbnN0IGhleGVzID0gaGV4Lm1hdGNoKC8uLi9nKTtcbiAgICByZXR1cm4gaGV4ZXMgIT0gbnVsbCA/IG5ldyBVaW50OEFycmF5KGhleGVzLm1hcChiID0+IHBhcnNlSW50KGIsIDE2KSkpIDogZW1wdHk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGFhLCBiYikge1xuICAgIGlmIChhYSA9PT0gYmIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChhYS5ieXRlTGVuZ3RoICE9PSBiYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGFhLmJ5dGVMZW5ndGg7IGlpKyspIHtcbiAgICAgICAgaWYgKGFhW2lpXSAhPT0gYmJbaWldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29lcmNlKG8pIHtcbiAgICBpZiAobyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgby5jb25zdHJ1Y3Rvci5uYW1lID09PSAnVWludDhBcnJheScpIHtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfVxuICAgIGlmIChvIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KG8pO1xuICAgIH1cbiAgICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KG8pKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvLmJ1ZmZlciwgby5ieXRlT2Zmc2V0LCBvLmJ5dGVMZW5ndGgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmluYXJ5KG8pIHtcbiAgICByZXR1cm4gbyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IEFycmF5QnVmZmVyLmlzVmlldyhvKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU3RyaW5nKHN0cikge1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1N0cmluZyhiKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/cid.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/cid.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        case _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix: {\n            const decoder = base ?? _bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36;\n            return [_bases_base36_js__WEBPACK_IMPORTED_MODULE_1__.base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/codecs/interface.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9pbnRlcmZhY2UuanM/ZmMxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/digest.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   hasCode: () => (/* binding */ hasCode)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nfunction hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJEO0FBQ3BCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsc0RBQXFCO0FBQzVDLHNDQUFzQyxzREFBcUI7QUFDM0Q7QUFDQSxJQUFJLGdEQUFlO0FBQ25CLElBQUksZ0RBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IsaURBQU07QUFDeEIsK0JBQStCLDhDQUFhO0FBQzVDLGlDQUFpQyw4Q0FBYTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlEQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcz9iMGEzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSwgZXF1YWxzIGFzIGVxdWFsQnl0ZXMgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJztcbi8qKlxuICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoY29kZSwgZGlnZXN0KSB7XG4gICAgY29uc3Qgc2l6ZSA9IGRpZ2VzdC5ieXRlTGVuZ3RoO1xuICAgIGNvbnN0IHNpemVPZmZzZXQgPSB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoY29kZSk7XG4gICAgY29uc3QgZGlnZXN0T2Zmc2V0ID0gc2l6ZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGRpZ2VzdE9mZnNldCArIHNpemUpO1xuICAgIHZhcmludC5lbmNvZGVUbyhjb2RlLCBieXRlcywgMCk7XG4gICAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KTtcbiAgICBieXRlcy5zZXQoZGlnZXN0LCBkaWdlc3RPZmZzZXQpO1xuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuLyoqXG4gKiBUdXJucyBieXRlcyByZXByZXNlbnRhdGlvbiBvZiBtdWx0aWhhc2ggZGlnZXN0IGludG8gYW4gaW5zdGFuY2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUobXVsdGloYXNoKSB7XG4gICAgY29uc3QgYnl0ZXMgPSBjb2VyY2UobXVsdGloYXNoKTtcbiAgICBjb25zdCBbY29kZSwgc2l6ZU9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKTtcbiAgICBjb25zdCBbc2l6ZSwgZGlnZXN0T2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoc2l6ZU9mZnNldCkpO1xuICAgIGNvbnN0IGRpZ2VzdCA9IGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQgKyBkaWdlc3RPZmZzZXQpO1xuICAgIGlmIChkaWdlc3QuYnl0ZUxlbmd0aCAhPT0gc2l6ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luY29ycmVjdCBsZW5ndGgnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBiO1xuICAgICAgICByZXR1cm4gKGEuY29kZSA9PT0gZGF0YS5jb2RlICYmXG4gICAgICAgICAgICBhLnNpemUgPT09IGRhdGEuc2l6ZSAmJlxuICAgICAgICAgICAgZGF0YS5ieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICAgICAgICAgIGVxdWFsQnl0ZXMoYS5ieXRlcywgZGF0YS5ieXRlcykpO1xuICAgIH1cbn1cbi8qKlxuICogUmVwcmVzZW50cyBhIG11bHRpaGFzaCBkaWdlc3Qgd2hpY2ggY2FycmllcyBpbmZvcm1hdGlvbiBhYm91dCB0aGVcbiAqIGhhc2hpbmcgYWxnb3JpdGhtIGFuZCBhbiBhY3R1YWwgaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBEaWdlc3Qge1xuICAgIGNvZGU7XG4gICAgc2l6ZTtcbiAgICBkaWdlc3Q7XG4gICAgYnl0ZXM7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLmRpZ2VzdCA9IGRpZ2VzdDtcbiAgICAgICAgdGhpcy5ieXRlcyA9IGJ5dGVzO1xuICAgIH1cbn1cbi8qKlxuICogVXNlZCB0byBjaGVjayB0aGF0IHRoZSBwYXNzZWQgbXVsdGloYXNoIGhhcyB0aGUgcGFzc2VkIGNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0NvZGUoZGlnZXN0LCBjb2RlKSB7XG4gICAgcmV0dXJuIGRpZ2VzdC5jb2RlID09PSBjb2RlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlnZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nfunction from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDdEM7QUFDTyxnQkFBZ0Isc0RBQXNEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkZBQTZGLHFCQUFxQjtBQUNsSDtBQUNBO0FBQ0EsMEZBQTBGLHFCQUFxQjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixrQkFBa0I7QUFDeEc7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBYTtBQUN4QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcz83YjZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5jb25zdCBERUZBVUxUX01JTl9ESUdFU1RfTEVOR1RIID0gMjA7XG5leHBvcnQgZnVuY3Rpb24gZnJvbSh7IG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGggfSkge1xuICAgIHJldHVybiBuZXcgSGFzaGVyKG5hbWUsIGNvZGUsIGVuY29kZSwgbWluRGlnZXN0TGVuZ3RoLCBtYXhEaWdlc3RMZW5ndGgpO1xufVxuLyoqXG4gKiBIYXNoZXIgcmVwcmVzZW50cyBhIGhhc2hpbmcgYWxnb3JpdGhtIGltcGxlbWVudGF0aW9uIHRoYXQgcHJvZHVjZXMgYXNcbiAqIGBNdWx0aWhhc2hEaWdlc3RgLlxuICovXG5leHBvcnQgY2xhc3MgSGFzaGVyIHtcbiAgICBuYW1lO1xuICAgIGNvZGU7XG4gICAgZW5jb2RlO1xuICAgIG1pbkRpZ2VzdExlbmd0aDtcbiAgICBtYXhEaWdlc3RMZW5ndGg7XG4gICAgY29uc3RydWN0b3IobmFtZSwgY29kZSwgZW5jb2RlLCBtaW5EaWdlc3RMZW5ndGgsIG1heERpZ2VzdExlbmd0aCkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLmVuY29kZSA9IGVuY29kZTtcbiAgICAgICAgdGhpcy5taW5EaWdlc3RMZW5ndGggPSBtaW5EaWdlc3RMZW5ndGggPz8gREVGQVVMVF9NSU5fRElHRVNUX0xFTkdUSDtcbiAgICAgICAgdGhpcy5tYXhEaWdlc3RMZW5ndGggPSBtYXhEaWdlc3RMZW5ndGg7XG4gICAgfVxuICAgIGRpZ2VzdChpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucz8udHJ1bmNhdGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMudHJ1bmNhdGUgPCB0aGlzLm1pbkRpZ2VzdExlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvICR7dGhpcy5taW5EaWdlc3RMZW5ndGh9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5tYXhEaWdlc3RMZW5ndGggIT0gbnVsbCAmJiBvcHRpb25zLnRydW5jYXRlID4gdGhpcy5tYXhEaWdlc3RMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHJ1bmNhdGUgb3B0aW9uLCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke3RoaXMubWF4RGlnZXN0TGVuZ3RofWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZW5jb2RlKGlucHV0KTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZURpZ2VzdChyZXN1bHQsIHRoaXMuY29kZSwgb3B0aW9ucz8udHJ1bmNhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50aGVuKGRpZ2VzdCA9PiBjcmVhdGVEaWdlc3QoZGlnZXN0LCB0aGlzLmNvZGUsIG9wdGlvbnM/LnRydW5jYXRlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlJyk7XG4gICAgICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZSBhIERpZ2VzdCBmcm9tIHRoZSBwYXNzZWQgdWludDhhcnJheSBhbmQgY29kZSwgb3B0aW9uYWxseSB0cnVuY2F0aW5nIGl0XG4gKiBmaXJzdC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlnZXN0KGRpZ2VzdCwgY29kZSwgdHJ1bmNhdGUpIHtcbiAgICBpZiAodHJ1bmNhdGUgIT0gbnVsbCAmJiB0cnVuY2F0ZSAhPT0gZGlnZXN0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgaWYgKHRydW5jYXRlID4gZGlnZXN0LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0cnVuY2F0ZSBvcHRpb24sIG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7ZGlnZXN0LmJ5dGVMZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgZGlnZXN0ID0gZGlnZXN0LnN1YmFycmF5KDAsIHRydW5jYXRlKTtcbiAgICB9XG4gICAgcmV0dXJuIERpZ2VzdC5jcmVhdGUoY29kZSwgZGlnZXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/interface.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2ludGVyZmFjZS5qcz9jMTEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICMgTXVsdGloYXNoXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/sha2.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/sha2.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/hasher.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: (input) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256').update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: input => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha512').update(input).digest())\n});\n//# sourceMappingURL=sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL3NoYTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEI7QUFDUztBQUNGO0FBQzVCLGVBQWUsZ0RBQUk7QUFDMUI7QUFDQTtBQUNBLHVCQUF1QixpREFBTSxDQUFDLDhDQUFpQjtBQUMvQyxDQUFDO0FBQ00sZUFBZSxnREFBSTtBQUMxQjtBQUNBO0FBQ0EscUJBQXFCLGlEQUFNLENBQUMsOENBQWlCO0FBQzdDLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9zaGEyLmpzP2FiZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vaGFzaGVyLmpzJztcbmV4cG9ydCBjb25zdCBzaGEyNTYgPSBmcm9tKHtcbiAgICBuYW1lOiAnc2hhMi0yNTYnLFxuICAgIGNvZGU6IDB4MTIsXG4gICAgZW5jb2RlOiAoaW5wdXQpID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pO1xuZXhwb3J0IGNvbnN0IHNoYTUxMiA9IGZyb20oe1xuICAgIG5hbWU6ICdzaGEyLTUxMicsXG4gICAgY29kZTogMHgxMyxcbiAgICBlbmNvZGU6IGlucHV0ID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhNTEyJykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/interface.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/interface.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ0E7QUFDRjtBQUNDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW50ZXJmYWNlLmpzP2YyMDUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9iYXNlcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9oYXNoZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY29kZWNzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpbmsvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmxvY2svaW50ZXJmYWNlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/link/interface.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/link/interface.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9saW5rL2ludGVyZmFjZS5qcz9hYTA1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/varint.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/varint.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDakM7QUFDUCxpQkFBaUIseURBQU07QUFDdkIsa0JBQWtCLHlEQUFNO0FBQ3hCO0FBQ087QUFDUCxJQUFJLHlEQUFNO0FBQ1Y7QUFDQTtBQUNPO0FBQ1AsV0FBVyx5REFBTTtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzPzA0OGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhcmludCBmcm9tICcuL3ZlbmRvci92YXJpbnQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgY29kZSA9IHZhcmludC5kZWNvZGUoZGF0YSwgb2Zmc2V0KTtcbiAgICByZXR1cm4gW2NvZGUsIHZhcmludC5kZWNvZGUuYnl0ZXNdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRvKGludCwgdGFyZ2V0LCBvZmZzZXQgPSAwKSB7XG4gICAgdmFyaW50LmVuY29kZShpbnQsIHRhcmdldCwgb2Zmc2V0KTtcbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kaW5nTGVuZ3RoKGludCkge1xuICAgIHJldHVybiB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoaW50KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhcmludC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/vendor/varint.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxZQUFZLEVBQUM7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy92ZW5kb3IvdmFyaW50LmpzP2VlMjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBlbmNvZGVfMSA9IGVuY29kZTtcbnZhciBNU0IgPSAweDgwLCBSRVNUID0gMHg3RiwgTVNCQUxMID0gflJFU1QsIElOVCA9IE1hdGgucG93KDIsIDMxKTtcbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bVxuICogQHBhcmFtIHtudW1iZXJbXX0gb3V0XG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKi9cbmZ1bmN0aW9uIGVuY29kZShudW0sIG91dCwgb2Zmc2V0KSB7XG4gICAgb3V0ID0gb3V0IHx8IFtdO1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuICAgIHZhciBvbGRPZmZzZXQgPSBvZmZzZXQ7XG4gICAgd2hpbGUgKG51bSA+PSBJTlQpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtIC89IDEyODtcbiAgICB9XG4gICAgd2hpbGUgKG51bSAmIE1TQkFMTCkge1xuICAgICAgICBvdXRbb2Zmc2V0KytdID0gKG51bSAmIDB4RkYpIHwgTVNCO1xuICAgICAgICBudW0gPj4+PSA3O1xuICAgIH1cbiAgICBvdXRbb2Zmc2V0XSA9IG51bSB8IDA7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGVuY29kZS5ieXRlcyA9IG9mZnNldCAtIG9sZE9mZnNldCArIDE7XG4gICAgcmV0dXJuIG91dDtcbn1cbnZhciBkZWNvZGUgPSByZWFkO1xudmFyIE1TQiQxID0gMHg4MCwgUkVTVCQxID0gMHg3Rjtcbi8qKlxuICogQHBhcmFtIHtzdHJpbmcgfCBhbnlbXX0gYnVmXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKi9cbmZ1bmN0aW9uIHJlYWQoYnVmLCBvZmZzZXQpIHtcbiAgICB2YXIgcmVzID0gMCwgb2Zmc2V0ID0gb2Zmc2V0IHx8IDAsIHNoaWZ0ID0gMCwgY291bnRlciA9IG9mZnNldCwgYiwgbCA9IGJ1Zi5sZW5ndGg7XG4gICAgZG8ge1xuICAgICAgICBpZiAoY291bnRlciA+PSBsKSB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICByZWFkLmJ5dGVzID0gMDtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdDb3VsZCBub3QgZGVjb2RlIHZhcmludCcpO1xuICAgICAgICB9XG4gICAgICAgIGIgPSBidWZbY291bnRlcisrXTtcbiAgICAgICAgcmVzICs9IHNoaWZ0IDwgMjhcbiAgICAgICAgICAgID8gKGIgJiBSRVNUJDEpIDw8IHNoaWZ0XG4gICAgICAgICAgICA6IChiICYgUkVTVCQxKSAqIE1hdGgucG93KDIsIHNoaWZ0KTtcbiAgICAgICAgc2hpZnQgKz0gNztcbiAgICB9IHdoaWxlIChiID49IE1TQiQxKTtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmVhZC5ieXRlcyA9IGNvdW50ZXIgLSBvZmZzZXQ7XG4gICAgcmV0dXJuIHJlcztcbn1cbnZhciBOMSA9IE1hdGgucG93KDIsIDcpO1xudmFyIE4yID0gTWF0aC5wb3coMiwgMTQpO1xudmFyIE4zID0gTWF0aC5wb3coMiwgMjEpO1xudmFyIE40ID0gTWF0aC5wb3coMiwgMjgpO1xudmFyIE41ID0gTWF0aC5wb3coMiwgMzUpO1xudmFyIE42ID0gTWF0aC5wb3coMiwgNDIpO1xudmFyIE43ID0gTWF0aC5wb3coMiwgNDkpO1xudmFyIE44ID0gTWF0aC5wb3coMiwgNTYpO1xudmFyIE45ID0gTWF0aC5wb3coMiwgNjMpO1xudmFyIGxlbmd0aCA9IGZ1bmN0aW9uICgvKiogQHR5cGUge251bWJlcn0gKi8gdmFsdWUpIHtcbiAgICByZXR1cm4gKHZhbHVlIDwgTjEgPyAxXG4gICAgICAgIDogdmFsdWUgPCBOMiA/IDJcbiAgICAgICAgICAgIDogdmFsdWUgPCBOMyA/IDNcbiAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjQgPyA0XG4gICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONSA/IDVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONiA/IDZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjcgPyA3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBOOCA/IDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBOOSA/IDlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IDEwKTtcbn07XG52YXIgdmFyaW50ID0ge1xuICAgIGVuY29kZTogZW5jb2RlXzEsXG4gICAgZGVjb2RlOiBkZWNvZGUsXG4gICAgZW5jb2RpbmdMZW5ndGg6IGxlbmd0aFxufTtcbnZhciBfYnJycF92YXJpbnQgPSB2YXJpbnQ7XG5leHBvcnQgZGVmYXVsdCBfYnJycF92YXJpbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/api.js":
/*!**********************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/api.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// @ts-nocheck\n\n/**\n * This is file is shadowed by api.ts and only exists so JS could import it to\n * refer to types without encountering runtime errors\n * @see https://github.com/microsoft/TypeScript/issues/41825\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9hcGkuanMiLCJtYXBwaW5ncyI6IjtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvc3JjL2FwaS5qcz8xZWE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5cbi8qKlxuICogVGhpcyBpcyBmaWxlIGlzIHNoYWRvd2VkIGJ5IGFwaS50cyBhbmQgb25seSBleGlzdHMgc28gSlMgY291bGQgaW1wb3J0IGl0IHRvXG4gKiByZWZlciB0byB0eXBlcyB3aXRob3V0IGVuY291bnRlcmluZyBydW50aW1lIGVycm9yc1xuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzQxODI1XG4gKi9cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/codec.js":
/*!************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/codec.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_DIRECTORY_MODE: () => (/* binding */ DEFAULT_DIRECTORY_MODE),\n/* harmony export */   DEFAULT_FILE_MODE: () => (/* binding */ DEFAULT_FILE_MODE),\n/* harmony export */   NodeType: () => (/* reexport safe */ _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType),\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   createAdvancedFile: () => (/* binding */ createAdvancedFile),\n/* harmony export */   createComplexFile: () => (/* binding */ createComplexFile),\n/* harmony export */   createDirectoryShard: () => (/* binding */ createDirectoryShard),\n/* harmony export */   createEmptyFile: () => (/* binding */ createEmptyFile),\n/* harmony export */   createFileChunk: () => (/* binding */ createFileChunk),\n/* harmony export */   createFileShard: () => (/* binding */ createFileShard),\n/* harmony export */   createFlatDirectory: () => (/* binding */ createFlatDirectory),\n/* harmony export */   createRaw: () => (/* binding */ createRaw),\n/* harmony export */   createShardedDirectory: () => (/* binding */ createShardedDirectory),\n/* harmony export */   createSimpleFile: () => (/* binding */ createSimpleFile),\n/* harmony export */   createSymlink: () => (/* binding */ createSymlink),\n/* harmony export */   cumulativeContentByteLength: () => (/* binding */ cumulativeContentByteLength),\n/* harmony export */   cumulativeDagByteLength: () => (/* binding */ cumulativeDagByteLength),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeMetadata: () => (/* binding */ decodeMetadata),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeAdvancedFile: () => (/* binding */ encodeAdvancedFile),\n/* harmony export */   encodeComplexFile: () => (/* binding */ encodeComplexFile),\n/* harmony export */   encodeDirectory: () => (/* binding */ encodeDirectory),\n/* harmony export */   encodeDirectoryMetadata: () => (/* binding */ encodeDirectoryMetadata),\n/* harmony export */   encodeFile: () => (/* binding */ encodeFile),\n/* harmony export */   encodeFileChunk: () => (/* binding */ encodeFileChunk),\n/* harmony export */   encodeFileShard: () => (/* binding */ encodeFileShard),\n/* harmony export */   encodeHAMTShard: () => (/* binding */ encodeHAMTShard),\n/* harmony export */   encodeLink: () => (/* binding */ encodeLink),\n/* harmony export */   encodeMetadata: () => (/* binding */ encodeMetadata),\n/* harmony export */   encodeMode: () => (/* binding */ encodeMode),\n/* harmony export */   encodeRaw: () => (/* binding */ encodeRaw),\n/* harmony export */   encodeSimpleFile: () => (/* binding */ encodeSimpleFile),\n/* harmony export */   encodeSymlink: () => (/* binding */ encodeSymlink),\n/* harmony export */   filesize: () => (/* binding */ filesize),\n/* harmony export */   matchFile: () => (/* binding */ matchFile),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _ipld_dag_pb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ipld/dag-pb */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/index.js\");\n/* harmony import */ var _unixfs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./unixfs.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/unixfs.js\");\n/* harmony import */ var _gen_unixfs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gen/unixfs.js */ \"(ssr)/./node_modules/@ipld/unixfs/gen/unixfs.js\");\n\n\n\n\n\n\n\n/** @type {ReadonlyArray<any>} */\nconst EMPTY = Object.freeze([])\nconst EMPTY_BUFFER = new Uint8Array(0)\n\nconst BLANK = Object.freeze({})\nconst DEFAULT_FILE_MODE = parseInt(\"0644\", 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt(\"0755\", 8)\n\nconst code = _ipld_dag_pb__WEBPACK_IMPORTED_MODULE_0__.code\nconst name = \"UnixFS\"\n\n/**\n * @param {UnixFS.IData} data\n * @param {ReadonlyArray<UnixFS.PBLink>} links\n */\nconst encodePB = (data, links) => {\n  Object(globalThis).debug && console.log({ data, links })\n\n  return _ipld_dag_pb__WEBPACK_IMPORTED_MODULE_0__.encode(\n    // We run through prepare as links need to be sorted by name which it will\n    // do.\n    _ipld_dag_pb__WEBPACK_IMPORTED_MODULE_0__.prepare({\n      Data: _gen_unixfs_js__WEBPACK_IMPORTED_MODULE_2__.Data.encode(data).finish(),\n      // We can cast to mutable array as we know no mutation occurs there\n      Links:\n        /** @type {PB.PBLink[]} */ (links),\n    })\n  )\n}\n\n/**\n * @param {Uint8Array} content\n * @returns {UnixFS.Raw}\n */\nconst createRaw = content => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Raw,\n  content,\n})\n\n/**\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.SimpleFile}\n */\nconst createEmptyFile = metadata =>\n  createSimpleFile(EMPTY_BUFFER, metadata)\n\n/**\n * @param {Uint8Array} content\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.SimpleFile}\n */\nconst createSimpleFile = (content, metadata) => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n  layout: \"simple\",\n  content,\n  metadata: decodeMetadata(metadata),\n})\n\n/**\n * @param {Uint8Array} content\n * @returns {UnixFS.FileChunk}\n */\nconst createFileChunk = content => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n  layout: \"simple\",\n  content,\n})\n\n/**\n * @param {UnixFS.FileLink[]} parts\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.AdvancedFile}\n */\nconst createAdvancedFile = (parts, metadata) => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n  layout: \"advanced\",\n  parts,\n  metadata: decodeMetadata(metadata),\n})\n\n/**\n * @param {UnixFS.FileLink[]} parts\n * @returns {UnixFS.FileShard}\n */\nconst createFileShard = parts => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n  layout: \"advanced\",\n  parts,\n})\n\n/**\n * @deprecated\n * @param {Uint8Array} content\n * @param {UnixFS.FileLink[]} parts\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.ComplexFile}\n */\nconst createComplexFile = (content, parts, metadata) => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n  layout: \"complex\",\n  content,\n  parts,\n  metadata: decodeMetadata(metadata),\n})\n\n/**\n * @param {UnixFS.DirectoryEntryLink[]} entries\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.FlatDirectory}\n */\nconst createFlatDirectory = (entries, metadata) => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Directory,\n  metadata: decodeMetadata(metadata),\n  entries,\n})\n\n/**\n * @param {UnixFS.ShardedDirectoryLink[]} entries\n * @param {Uint8Array} bitfield\n * @param {number} fanout\n * @param {number} hashType\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.ShardedDirectory}\n */\nconst createShardedDirectory = (\n  entries,\n  bitfield,\n  fanout,\n  hashType,\n  metadata = BLANK\n) => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.HAMTShard,\n  bitfield,\n  fanout: readFanout(fanout),\n  hashType: readInt(hashType),\n  entries,\n  metadata: decodeMetadata(metadata),\n})\n\n/**\n * @param {UnixFS.ShardedDirectoryLink[]} entries\n * @param {Uint8Array} bitfield\n * @param {number} fanout\n * @param {number} hashType\n * @returns {UnixFS.DirectoryShard}\n */\nconst createDirectoryShard = (entries, bitfield, fanout, hashType) => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.HAMTShard,\n  bitfield,\n  fanout: readFanout(fanout),\n  hashType: readInt(hashType),\n  entries,\n})\n\n/**\n *\n * @param {Uint8Array} content\n * @returns {UnixFS.ByteView<UnixFS.Raw>}\n */\nconst encodeRaw = content =>\n  encodePB(\n    {\n      Type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Raw,\n      // TODO:\n      Data: content.byteLength > 0 ? content : undefined,\n      filesize: content.byteLength,\n      // @ts-ignore\n      blocksizes: EMPTY,\n    },\n    []\n  )\n\n/**\n * @param {UnixFS.File|UnixFS.FileChunk|UnixFS.FileShard} node\n * @param {boolean} [ignoreMetadata]\n * @returns {UnixFS.ByteView<UnixFS.SimpleFile|UnixFS.AdvancedFile|UnixFS.ComplexFile>}\n */\nconst encodeFile = (node, ignoreMetadata = false) => {\n  const metadata = ignoreMetadata ? BLANK : Object(node).metadata\n  switch (node.layout) {\n    case \"simple\":\n      return encodeSimpleFile(node.content, metadata)\n    case \"advanced\":\n      return encodeAdvancedFile(node.parts, metadata)\n    case \"complex\":\n      return encodeComplexFile(node.content, node.parts, metadata)\n    default:\n      throw new TypeError(\n        `File with unknown layout \"${Object(node).layout}\" was passed`\n      )\n  }\n}\n\n/**\n * @param {Uint8Array} content\n * @returns {UnixFS.ByteView<UnixFS.FileChunk>}\n */\nconst encodeFileChunk = content => encodeSimpleFile(content, BLANK)\n\n/**\n * @param {ReadonlyArray<UnixFS.FileLink>} parts\n * @returns {UnixFS.ByteView<UnixFS.FileShard>}\n */\nconst encodeFileShard = parts =>\n  encodePB(\n    {\n      Type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n      blocksizes: parts.map(contentByteLength),\n      filesize: cumulativeContentByteLength(parts),\n    },\n    parts.map(encodeLink)\n  )\n\n/**\n * @param {ReadonlyArray<UnixFS.FileLink>} parts\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.ByteView<UnixFS.AdvancedFile>}\n */\nconst encodeAdvancedFile = (parts, metadata = BLANK) =>\n  encodePB(\n    {\n      Type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n      blocksizes: parts.map(contentByteLength),\n      filesize: cumulativeContentByteLength(parts),\n\n      ...encodeMetadata(metadata),\n    },\n    parts.map(encodeLink)\n  )\n\n/**\n * @param {UnixFS.DAGLink} dag\n * @returns {UnixFS.PBLink}\n */\nconst encodeLink = dag => ({\n  Name: \"\",\n  Tsize: dag.dagByteLength,\n  // @ts-ignore - @see https://github.com/multiformats/js-multiformats/pull/161\n  Hash: dag.cid,\n})\n\n/**\n * @param {Uint8Array} content\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.ByteView<UnixFS.SimpleFile>}\n */\n\nconst encodeSimpleFile = (content, metadata = BLANK) =>\n  encodePB(\n    {\n      Type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n      // adding empty file to both go-ipfs and js-ipfs produces block in\n      // which `Data` is omitted but filesize and blocksizes are present.\n      // For the sake of hash consistency we do the same.\n      Data: content.byteLength > 0 ? content : undefined,\n      filesize: content.byteLength,\n      blocksizes: [],\n      ...encodeMetadata(metadata),\n    },\n    []\n  )\n\n/**\n *\n * @param {Uint8Array} content\n * @param {ReadonlyArray<UnixFS.FileLink>} parts\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.ByteView<UnixFS.ComplexFile>}\n */\nconst encodeComplexFile = (content, parts, metadata = BLANK) =>\n  encodePB(\n    {\n      Type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File,\n      Data: content,\n      filesize: content.byteLength + cumulativeContentByteLength(parts),\n      blocksizes: parts.map(contentByteLength),\n    },\n    parts.map(encodeLink)\n  )\n\n/**\n * @param {UnixFS.FlatDirectory} node\n * @returns {UnixFS.ByteView<UnixFS.FlatDirectory>}\n */\nconst encodeDirectory = node =>\n  encodePB(\n    {\n      Type: node.type,\n      ...encodeDirectoryMetadata(node.metadata || BLANK),\n    },\n    node.entries.map(encodeNamedLink)\n  )\n\n/**\n * @param {UnixFS.ShardedDirectory|UnixFS.DirectoryShard} node\n * @returns {UnixFS.ByteView<UnixFS.ShardedDirectory>}\n */\nconst encodeHAMTShard = ({\n  bitfield,\n  fanout,\n  hashType,\n  entries,\n  metadata = BLANK,\n}) =>\n  encodePB(\n    {\n      Type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.HAMTShard,\n      Data: bitfield.byteLength > 0 ? bitfield : undefined,\n      fanout: readFanout(fanout),\n      hashType: readInt(hashType),\n\n      ...encodeDirectoryMetadata(metadata),\n    },\n    entries.map(encodeNamedLink)\n  )\n\n/**\n * @param {number} n\n * @returns {number}\n */\nconst readFanout = n => {\n  if (Math.log2(n) % 1 === 0) {\n    return n\n  } else {\n    throw new TypeError(\n      `Expected hamt size to be a power of two instead got ${n}`\n    )\n  }\n}\n\n/**\n * @param {number} n\n * @returns {number}\n */\n\nconst readInt = n => {\n  if (Number.isInteger(n)) {\n    return n\n  } else {\n    throw new TypeError(`Expected an integer value instead got ${n}`)\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n */\nconst readData = bytes => (bytes.byteLength > 0 ? bytes : undefined)\n\n/**\n * @param {Uint8Array} path\n * @param {UnixFS.Metadata} [metadata]\n * @returns {UnixFS.Symlink}\n */\nconst createSymlink = (path, metadata = BLANK) => ({\n  type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Symlink,\n  content: path,\n  metadata: decodeMetadata(metadata),\n})\n\n/**\n * @param {UnixFS.Symlink} node\n * @param {boolean} [ignoreMetadata]\n * @returns {UnixFS.ByteView<UnixFS.Symlink>}\n */\nconst encodeSymlink = (node, ignoreMetadata = false) => {\n  const metadata = ignoreMetadata ? BLANK : Object(node).metadata\n  // We do not include filesize on symlinks because that is what go-ipfs does\n  // when doing `ipfs add mysymlink`. js-ipfs on the other hand seems to store\n  // it, here we choose to follow go-ipfs\n  // @see https://explore.ipld.io/#/explore/QmPZ1CTc5fYErTH2XXDGrfsPsHicYXtkZeVojGycwAfm3v\n  // @see https://github.com/ipfs/js-ipfs-unixfs/issues/195\n  return encodePB(\n    {\n      Type: _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Symlink,\n      Data: node.content,\n      ...encodeMetadata(metadata || BLANK),\n    },\n    []\n  )\n}\n\n/**\n * @template {UnixFS.Node} T\n * @param {T} node\n * @param {boolean} root\n */\nconst encode = (node, root = true) => {\n  switch (node.type) {\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Raw:\n      return encodeRaw(node.content)\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File:\n      return encodeFile(node)\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Directory:\n      return encodeDirectory(node)\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.HAMTShard:\n      return encodeHAMTShard(node)\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Symlink:\n      return encodeSymlink(node)\n    default:\n      throw new Error(`Unknown node type ${Object(node).type}`)\n  }\n}\n\n/**\n * @param {UnixFS.ByteView<UnixFS.Node>} bytes\n * @returns {UnixFS.Node}\n */\nconst decode = bytes => {\n  const pb = _ipld_dag_pb__WEBPACK_IMPORTED_MODULE_0__.decode(bytes)\n  const message = _gen_unixfs_js__WEBPACK_IMPORTED_MODULE_2__.Data.decode(/** @type {Uint8Array} */ (pb.Data))\n\n  const {\n    Type: type,\n    Data: data,\n    mtime,\n    mode,\n    blocksizes,\n    ...rest\n  } = _gen_unixfs_js__WEBPACK_IMPORTED_MODULE_2__.Data.toObject(message, {\n    defaults: false,\n    arrays: true,\n    longs: Number,\n    objects: false,\n  })\n  const metadata = {\n    ...(mode && { mode }),\n    ...decodeMtime(mtime),\n  }\n  /** @type {UnixFS.PBLink[]} */\n  const links = pb.Links\n\n  switch (message.Type) {\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Raw:\n      return createRaw(data)\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File:\n      if (links.length === 0) {\n        return new SimpleFileView(data, metadata)\n      } else if (data.byteLength === 0) {\n        return new AdvancedFileView(\n          decodeFileLinks(rest.blocksizes, links),\n          metadata\n        )\n      } else {\n        return new ComplexFileView(\n          data,\n          decodeFileLinks(rest.blocksizes, links),\n          metadata\n        )\n      }\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Directory:\n      return createFlatDirectory(decodeDirectoryLinks(links), metadata)\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.HAMTShard:\n      return createShardedDirectory(\n        decodeDirectoryLinks(links),\n        data || EMPTY_BUFFER,\n        rest.fanout,\n        rest.hashType,\n        metadata\n      )\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Symlink:\n      return createSymlink(data, metadata)\n    default:\n      throw new TypeError(`Unsupported node type ${message.Type}`)\n  }\n}\n\n/**\n * @param {UnixFS.UnixTime|undefined} mtime\n */\nconst decodeMtime = mtime =>\n  mtime == null\n    ? undefined\n    : {\n        mtime: { secs: mtime.Seconds, nsecs: mtime.FractionalNanoseconds || 0 },\n      }\n\n/**\n * @param {NodeType} type\n * @param {number[]|undefined} blocksizes\n */\nconst decodeBlocksizes = (type, blocksizes) => {\n  switch (type) {\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File:\n      return blocksizes && blocksizes.length > 0 ? { blocksizes } : undefined\n    default:\n      return undefined\n  }\n}\n\n/**\n *\n * @param {number[]} blocksizes\n * @param {UnixFS.PBLink[]} links\n * @returns {UnixFS.FileLink[]}\n */\n\nconst decodeFileLinks = (blocksizes, links) => {\n  const parts = []\n  const length = blocksizes.length\n  let n = 0\n  while (n < length) {\n    parts.push(\n      /** @type {UnixFS.FileLink} */ ({\n        cid: links[n].Hash,\n        dagByteLength: links[n].Tsize || 0,\n        contentByteLength: blocksizes[n],\n      })\n    )\n  }\n  return parts\n}\n\n/**\n * @param {UnixFS.PBLink[]} links\n * @returns {UnixFS.DirectoryEntryLink[]}\n */\nconst decodeDirectoryLinks = links =>\n  links.map(\n    link =>\n      /** @type {UnixFS.DirectoryEntryLink} */ ({\n        cid: link.Hash,\n        name: link.Name || \"\",\n        dagByteLength: link.Tsize || 0,\n      })\n  )\n\n/**\n * @param {ReadonlyArray<UnixFS.FileLink>} links\n * @returns {number}\n */\nconst cumulativeContentByteLength = links =>\n  links.reduce((size, link) => size + link.contentByteLength, 0)\n\n/**\n * @param {Uint8Array} root\n * @param {ReadonlyArray<UnixFS.DAGLink>} links\n * @returns {number}\n */\nconst cumulativeDagByteLength = (root, links) =>\n  links.reduce((size, link) => size + link.dagByteLength, root.byteLength)\n\n/**\n *\n * @param {UnixFS.FileLink} link\n */\nconst contentByteLength = link => link.contentByteLength\n\n/**\n * @param {UnixFS.NamedDAGLink<unknown>} link\n * @returns {UnixFS.PBLink}\n */\nconst encodeNamedLink = ({ name, dagByteLength, cid }) => ({\n  Name: name,\n  Tsize: dagByteLength,\n  Hash: cid,\n})\n\n/**\n * @param {UnixFS.Metadata} metadata\n */\nconst encodeDirectoryMetadata = metadata =>\n  encodeMetadata(metadata, DEFAULT_DIRECTORY_MODE)\n\n/**\n * @param {UnixFS.Metadata} metadata\n * @param {UnixFS.Mode} defaultMode\n */\nconst encodeMetadata = (\n  { mode, mtime },\n  defaultMode = DEFAULT_FILE_MODE\n) => ({\n  mode: mode != null ? encodeMode(mode, defaultMode) : undefined,\n  mtime: mtime != null ? encodeMTime(mtime) : undefined,\n})\n\n/**\n * @param {UnixFS.Metadata} [data]\n */\nconst decodeMetadata = data =>\n  data == null\n    ? BLANK\n    : {\n        ...(data.mode == null ? undefined : { mode: decodeMode(data.mode) }),\n        ...(data.mtime == null ? undefined : { mtime: data.mtime }),\n      }\n\n/**\n * @param {UnixFS.MTime} mtime\n */\nconst encodeMTime = mtime => {\n  return mtime == null\n    ? undefined\n    : mtime.nsecs !== 0\n    ? { Seconds: mtime.secs, FractionalNanoseconds: mtime.nsecs }\n    : { Seconds: mtime.secs }\n}\n\n/**\n * @param {number} specifiedMode\n * @param {number} defaultMode\n */\nconst encodeMode = (specifiedMode, defaultMode) => {\n  const mode = specifiedMode == null ? undefined : decodeMode(specifiedMode)\n  return mode === defaultMode || mode == null ? undefined : mode\n}\n\n/**\n * @param {UnixFS.Mode} mode\n * @returns {UnixFS.Mode}\n */\nconst decodeMode = mode => (mode & 0xfff) | (mode & 0xfffff000)\n\n/**\n * @param {{content?: Uint8Array, parts?: ReadonlyArray<UnixFS.FileLink>, metadata?: UnixFS.Metadata }} node\n * @returns {UnixFS.SimpleFile|UnixFS.AdvancedFile|UnixFS.ComplexFile}\n */\nconst matchFile = ({\n  content = EMPTY_BUFFER,\n  parts = EMPTY,\n  metadata = BLANK,\n  ...rest\n}) => {\n  if (parts.length === 0) {\n    return new SimpleFileView(content, metadata)\n  } else if (content.byteLength === 0) {\n    return new AdvancedFileView(parts, metadata)\n  } else {\n    return new ComplexFileView(content, parts, metadata)\n  }\n}\n\n/**\n * @implements {UnixFS.SimpleFile}\n */\nclass SimpleFileView {\n  /**\n   * @param {Uint8Array} content\n   * @param {UnixFS.Metadata} metadata\n   */\n  constructor(content, metadata) {\n    this.content = content\n    this.metadata = metadata\n    /**\n     * @readonly\n     * @type {\"simple\"}\n     */\n    this.layout = \"simple\"\n    /**\n     * @readonly\n     * @type {NodeType.File}\n     */\n    this.type = _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File\n  }\n\n  get filesize() {\n    return this.content.byteLength\n  }\n\n  encode() {\n    return encodeSimpleFile(this.content, this.metadata)\n  }\n}\n\n/**\n * @implements {UnixFS.AdvancedFile}\n */\nclass AdvancedFileView {\n  /**\n   * @param {ReadonlyArray<UnixFS.FileLink>} parts\n   * @param {UnixFS.Metadata} metadata\n   */\n  constructor(parts, metadata) {\n    this.parts = parts\n    this.metadata = metadata\n  }\n  /** @type {\"advanced\"} */\n  get layout() {\n    return \"advanced\"\n  }\n\n  /**\n   * @returns {NodeType.File}\n   */\n  get type() {\n    return _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File\n  }\n  get fileSize() {\n    return cumulativeContentByteLength(this.parts)\n  }\n  get blockSizes() {\n    return this.parts.map(contentByteLength)\n  }\n\n  encode() {\n    return encodeAdvancedFile(this.parts, this.metadata)\n  }\n}\n\n/**\n * @implements {UnixFS.ComplexFile}\n */\nclass ComplexFileView {\n  /**\n   * @param {Uint8Array} content\n   * @param {ReadonlyArray<UnixFS.FileLink>} parts\n   * @param {UnixFS.Metadata} metadata\n   */\n  constructor(content, parts, metadata) {\n    this.content = content\n    this.parts = parts\n    this.metadata = metadata\n  }\n  /** @type {\"complex\"} */\n  get layout() {\n    return \"complex\"\n  }\n\n  /**\n   * @returns {NodeType.File}\n   */\n  get type() {\n    return _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File\n  }\n  get fileSize() {\n    return this.content.byteLength + cumulativeContentByteLength(this.parts)\n  }\n  get blockSizes() {\n    return this.parts.map(contentByteLength)\n  }\n\n  encode() {\n    return encodeComplexFile(this.content, this.parts, this.metadata)\n  }\n}\n\n/**\n * @param {UnixFS.File|UnixFS.Raw|UnixFS.FileChunk|UnixFS.FileShard|UnixFS.Symlink} node\n * @returns {number}\n */\nconst filesize = node => {\n  switch (node.type) {\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Raw:\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.Symlink:\n      return node.content.byteLength\n    case _unixfs_js__WEBPACK_IMPORTED_MODULE_1__.NodeType.File:\n      switch (node.layout) {\n        case \"simple\":\n          return node.content.byteLength\n        case \"advanced\":\n          return cumulativeContentByteLength(node.parts)\n        case \"complex\":\n          return (\n            node.content.byteLength + cumulativeContentByteLength(node.parts)\n          )\n      }\n    default:\n      return 0\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/directory.js":
/*!****************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/directory.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   configure: () => (/* binding */ configure),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   defaults: () => (/* binding */ defaults),\n/* harmony export */   fork: () => (/* binding */ fork),\n/* harmony export */   links: () => (/* binding */ links),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\n/* harmony import */ var _directory_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directory/api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/directory/api.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file.js\");\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/codec.js\");\n\n\n\n\n\nconst configure = _file_js__WEBPACK_IMPORTED_MODULE_1__.configure\nconst defaults = _file_js__WEBPACK_IMPORTED_MODULE_1__.defaults\n\n/**\n * @template [Layout=unknown]\n * @param {API.Options<Layout>} config\n * @returns {API.View<Layout>}\n */\nconst create = ({ writer, settings = defaults(), metadata = {} }) =>\n  new DirectoryWriter({\n    writer,\n    metadata,\n    settings,\n    entries: new Map(),\n    closed: false,\n  })\n\n/**\n * @template {unknown} L\n * @template {{ state: API.State<L> }} View\n * @param {View} view\n * @param {string} name\n * @param {API.EntryLink} link\n * @param {API.WriteOptions} options\n */\nconst set = (view, name, link, { overwrite = false } = {}) => {\n  const writable = asWritable(view.state)\n  if (name.includes(\"/\")) {\n    throw new Error(\n      `Directory entry name \"${name}\" contains forbidden \"/\" character`\n    )\n  }\n  if (!overwrite && writable.entries.has(name)) {\n    throw new Error(`Directory already contains entry with name \"${name}\"`)\n  } else {\n    writable.entries.set(name, link)\n    return view\n  }\n}\n\n/**\n * @template {unknown} L\n * @template {{ state: API.State<L> }} View\n * @param {View} view\n * @param {string} name\n */\nconst remove = (view, name) => {\n  const writer = asWritable(view.state)\n  writer.entries.delete(name)\n  return view\n}\n\n/**\n * @template {API.State} Writer\n * @param {Writer} writer\n * @returns {Writer}\n */\nconst asWritable = writer => {\n  if (!writer.closed) {\n    return writer\n  } else {\n    throw new Error(\n      `Can not change written directory, but you can .fork() and make changes to it`\n    )\n  }\n}\n\n/**\n * @template {unknown} Layout\n * @param {{ state: API.State<Layout> }} view\n * @param {API.CloseOptions} options\n * @returns {Promise<UnixFS.DirectoryLink>}\n */\nconst close = async (\n  view,\n  { closeWriter = false, releaseLock = false } = {}\n) => {\n  const { writer, settings, metadata } = asWritable(view.state)\n  view.state.closed = true\n  const entries = [...links(view)]\n  const node = _codec_js__WEBPACK_IMPORTED_MODULE_2__.createFlatDirectory(entries, metadata)\n  const bytes = _codec_js__WEBPACK_IMPORTED_MODULE_2__.encodeDirectory(node)\n  const digest = await settings.hasher.digest(bytes)\n  /** @type {UnixFS.Link<UnixFS.Directory>} */\n  const cid = settings.linker.createLink(_codec_js__WEBPACK_IMPORTED_MODULE_2__.code, digest)\n\n  // we make sure that writer has some capacity for this write. If it\n  // does not we await.\n  if ((writer.desiredSize || 0) <= 0) {\n    await writer.ready\n  }\n  // once writer has some capacity we write a block, however we do not\n  // await completion as we don't care when it's taken off the stream.\n  writer.write({ cid, bytes })\n\n  if (closeWriter) {\n    await writer.close()\n  } else if (releaseLock) {\n    writer.releaseLock()\n  }\n\n  return {\n    cid,\n    dagByteLength: _codec_js__WEBPACK_IMPORTED_MODULE_2__.cumulativeDagByteLength(bytes, entries),\n  }\n}\n\n/**\n * @template {unknown} Layout\n * @param {{ state: API.State<Layout> }} view\n * @returns {IterableIterator<UnixFS.DirectoryEntryLink>}\n */\nconst links = function* ({ state }) {\n  for (const [name, { dagByteLength, cid }] of state.entries) {\n    yield /** @type {UnixFS.DirectoryEntryLink} */ ({\n      name,\n      dagByteLength,\n      cid,\n    })\n  }\n}\n\n/**\n * @template L1, L2\n * @param {API.View<L1>} state\n * @param {Partial<API.Options<L1|L2>>} options\n * @returns {API.View<L1|L2>}\n */\nconst fork = (\n  { state },\n  {\n    writer = state.writer,\n    metadata = state.metadata,\n    settings = state.settings,\n  } = {}\n) =>\n  new DirectoryWriter({\n    writer,\n    metadata,\n    settings,\n    entries: new Map(state.entries.entries()),\n    closed: false,\n  })\n\n/**\n * @template [Layout=unknown]\n * @implements {API.View<Layout>}\n */\nclass DirectoryWriter {\n  /**\n   * @param {API.State<Layout>} state\n   */\n  constructor(state) {\n    this.state = state\n  }\n  get writer() {\n    return this.state.writer\n  }\n  get settings() {\n    return this.state.settings\n  }\n\n  links() {\n    return links(this)\n  }\n\n  /**\n   * @param {string} name\n   * @param {UnixFS.FileLink | UnixFS.DirectoryLink} link\n   * @param {API.WriteOptions} [options]\n   */\n\n  set(name, link, options) {\n    return set(this, name, link, options)\n  }\n\n  /**\n   * @param {string} name\n   */\n  remove(name) {\n    return remove(this, name)\n  }\n\n  /**\n   * @template L\n   * @param {Partial<API.Options<L>>} [options]\n   * @returns {API.View<Layout|L>}\n   */\n  fork(options) {\n    return fork(this, options)\n  }\n\n  /**\n   * @param {API.CloseOptions} [options]\n   * @returns {Promise<UnixFS.DirectoryLink>}\n   */\n  close(options) {\n    return close(this, options)\n  }\n\n  entries() {\n    return this.state.entries.entries()\n  }\n  /**\n   * @param {string} name\n   */\n  has(name) {\n    return this.state.entries.has(name)\n  }\n  get size() {\n    return this.state.entries.size\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/directory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/directory/api.js":
/*!********************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/directory/api.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// @ts-nocheck\n\n/**\n * This is file is shadowed by api.ts and only exists so JS could import it to\n * refer to types without encountering runtime errors\n * @see https://github.com/microsoft/TypeScript/issues/41825\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9kaXJlY3RvcnkvYXBpLmpzIiwibWFwcGluZ3MiOiI7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9kaXJlY3RvcnkvYXBpLmpzPzBkMzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcblxuLyoqXG4gKiBUaGlzIGlzIGZpbGUgaXMgc2hhZG93ZWQgYnkgYXBpLnRzIGFuZCBvbmx5IGV4aXN0cyBzbyBKUyBjb3VsZCBpbXBvcnQgaXQgdG9cbiAqIHJlZmVyIHRvIHR5cGVzIHdpdGhvdXQgZW5jb3VudGVyaW5nIHJ1bnRpbWUgZXJyb3JzXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvVHlwZVNjcmlwdC9pc3N1ZXMvNDE4MjVcbiAqL1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/directory/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file.js":
/*!***********************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnixFSLeaf: () => (/* binding */ UnixFSLeaf),\n/* harmony export */   UnixFSRawLeaf: () => (/* binding */ UnixFSRawLeaf),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   configure: () => (/* binding */ configure),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   defaults: () => (/* binding */ defaults),\n/* harmony export */   write: () => (/* binding */ write)\n/* harmony export */ });\n/* harmony import */ var _file_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./file/api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/api.js\");\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/codec.js\");\n/* harmony import */ var _file_writer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./file/writer.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/writer.js\");\n/* harmony import */ var actor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! actor */ \"(ssr)/./node_modules/actor/src/lib.js\");\n/* harmony import */ var _writer_util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./writer/util.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/writer/util.js\");\n/* harmony import */ var _file_chunker_fixed_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./file/chunker/fixed.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/fixed.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _file_layout_balanced_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./file/layout/balanced.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/layout/balanced.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @returns {API.EncoderSettings}\n */\nconst defaults = () => ({\n  chunker: _file_chunker_fixed_js__WEBPACK_IMPORTED_MODULE_5__,\n  fileChunkEncoder: UnixFSLeaf,\n  smallFileEncoder: UnixFSLeaf,\n  fileEncoder: _codec_js__WEBPACK_IMPORTED_MODULE_1__,\n  fileLayout: _file_layout_balanced_js__WEBPACK_IMPORTED_MODULE_8__.withWidth(174),\n  hasher: multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256,\n  linker: { createLink: multiformats_cid__WEBPACK_IMPORTED_MODULE_7__.CID.createV1 },\n})\n\n/**\n * @template {unknown} Layout\n * @param {Partial<API.EncoderSettings<Layout>>} config\n * @returns {API.EncoderSettings<Layout>}\n */\nconst configure = config => ({\n  ...defaults(),\n  ...config,\n})\n\nconst UnixFSLeaf = {\n  code: _codec_js__WEBPACK_IMPORTED_MODULE_1__.code,\n  name: _codec_js__WEBPACK_IMPORTED_MODULE_1__.name,\n  encode: _codec_js__WEBPACK_IMPORTED_MODULE_1__.encodeFileChunk,\n}\n\nconst UnixFSRawLeaf = {\n  code: _codec_js__WEBPACK_IMPORTED_MODULE_1__.code,\n  name: _codec_js__WEBPACK_IMPORTED_MODULE_1__.name,\n  encode: _codec_js__WEBPACK_IMPORTED_MODULE_1__.encodeRaw,\n}\n\n/**\n * @template Layout\n * @param {API.Options<Layout>} options\n * @returns {API.View<Layout>}\n */\nconst create = ({ writer, metadata = {}, settings = defaults() }) =>\n  new FileWriterView(_file_writer_js__WEBPACK_IMPORTED_MODULE_2__.init(writer, metadata, configure(settings)))\n\n/**\n * @template T\n * @param {API.View<T>} view\n * @param {Uint8Array} bytes\n * @return {Promise<API.View<T>>}\n */\n\nconst write = async (view, bytes) => {\n  await perform(view, actor__WEBPACK_IMPORTED_MODULE_3__.send({ type: \"write\", bytes }))\n  return view\n}\n\n/**\n * @template T\n * @param {API.View<T>} view\n * @param {API.CloseOptions} options\n */\nconst close = async (\n  view,\n  { releaseLock = false, closeWriter = false } = {}\n) => {\n  await perform(view, actor__WEBPACK_IMPORTED_MODULE_3__.send({ type: \"close\" }))\n  const { state } = view\n  if (state.status === \"linked\") {\n    if (closeWriter) {\n      await view.state.writer.close()\n    } else if (releaseLock) {\n      view.state.writer.releaseLock()\n    }\n    return state.link\n    /* c8 ignore next 5 */\n  } else {\n    (0,_writer_util_js__WEBPACK_IMPORTED_MODULE_4__.panic)(\n      `Expected writer to be in 'linked' state after close, but it is in \"${state.status}\" instead`\n    )\n  }\n}\n\n/**\n * @template T\n * @param {API.View<T>} view\n * @param {Task.Effect<Writer.Message>} effect\n */\nconst perform = (view, effect) =>\n  actor__WEBPACK_IMPORTED_MODULE_3__.fork(\n    actor__WEBPACK_IMPORTED_MODULE_3__.loop(effect, message => {\n      const { state, effect } = _file_writer_js__WEBPACK_IMPORTED_MODULE_2__.update(message, view.state)\n      view.state = state\n      return effect\n    })\n  )\n\n/**\n * @template Layout\n * @implements {API.View<Layout>}\n */\nclass FileWriterView {\n  /**\n   * @param {Writer.State<Layout>} state\n   */\n  constructor(state) {\n    this.state = state\n  }\n  get writer() {\n    return this.state.writer\n  }\n  get settings() {\n    return this.state.config\n  }\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {Promise<API.View<Layout>>}\n   */\n  write(bytes) {\n    return write(this, bytes)\n  }\n  /**\n   * @param {API.CloseOptions} [options]\n   * @returns {Promise<UnixFS.FileLink>}\n   */\n  close(options) {\n    return close(this, options)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDQTtBQUNNO0FBQ2I7QUFDVztBQUNZO0FBQ0g7QUFDWDtBQUNlOztBQUV4Qjs7QUFFN0I7QUFDQSxhQUFhO0FBQ2I7QUFDTztBQUNQLFdBQVcsbURBQVM7QUFDcEI7QUFDQTtBQUNBLGVBQWUsc0NBQU07QUFDckIsY0FBYywrREFBa0I7QUFDaEMsVUFBVSw0REFBTTtBQUNoQixZQUFZLFlBQVksaURBQUcsV0FBVztBQUN0QyxDQUFDOztBQUVEO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCLFdBQVcsc0NBQXNDO0FBQ2pELGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLENBQUM7O0FBRU07QUFDUCxRQUFRLDJDQUFXO0FBQ25CLFFBQVEsMkNBQVc7QUFDbkIsVUFBVSxzREFBc0I7QUFDaEM7O0FBRU87QUFDUCxRQUFRLDJDQUFXO0FBQ25CLFFBQVEsMkNBQVc7QUFDbkIsVUFBVSxnREFBZ0I7QUFDMUI7O0FBRUE7QUFDQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDLGFBQWE7QUFDYjtBQUNPLGtCQUFrQixxQkFBcUIseUJBQXlCO0FBQ3ZFLHFCQUFxQixpREFBVzs7QUFFaEM7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLFlBQVk7QUFDdkIsWUFBWTtBQUNaOztBQUVPO0FBQ1Asc0JBQXNCLHVDQUFTLEdBQUcsc0JBQXNCO0FBQ3hEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLGtCQUFrQjtBQUM3QjtBQUNPO0FBQ1A7QUFDQSxJQUFJLDJDQUEyQztBQUMvQztBQUNBLHNCQUFzQix1Q0FBUyxHQUFHLGVBQWU7QUFDakQsVUFBVSxRQUFRO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixJQUFJLHNEQUFLO0FBQ1QsNEVBQTRFLGFBQWE7QUFDekY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEIsV0FBVyw2QkFBNkI7QUFDeEM7QUFDQTtBQUNBLEVBQUUsdUNBQVM7QUFDWCxJQUFJLHVDQUFTO0FBQ2IsY0FBYyxnQkFBZ0IsRUFBRSxtREFBYTtBQUM3QztBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0JBQWtCO0FBQy9CLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlLmpzP2ZlNjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVBJIGZyb20gXCIuL2ZpbGUvYXBpLmpzXCJcbmltcG9ydCAqIGFzIFVuaXhGUyBmcm9tIFwiLi9jb2RlYy5qc1wiXG5pbXBvcnQgKiBhcyBXcml0ZXIgZnJvbSBcIi4vZmlsZS93cml0ZXIuanNcIlxuaW1wb3J0ICogYXMgVGFzayBmcm9tIFwiYWN0b3JcIlxuaW1wb3J0IHsgcGFuaWMgfSBmcm9tIFwiLi93cml0ZXIvdXRpbC5qc1wiXG5pbXBvcnQgKiBhcyBGaXhlZFNpemUgZnJvbSBcIi4vZmlsZS9jaHVua2VyL2ZpeGVkLmpzXCJcbmltcG9ydCB7IHNoYTI1NiB9IGZyb20gXCJtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTJcIlxuaW1wb3J0IHsgQ0lEIH0gZnJvbSBcIm11bHRpZm9ybWF0cy9jaWRcIlxuaW1wb3J0ICogYXMgQmFsYW5jZWQgZnJvbSBcIi4vZmlsZS9sYXlvdXQvYmFsYW5jZWQuanNcIlxuXG5leHBvcnQgKiBmcm9tIFwiLi9maWxlL2FwaS5qc1wiXG5cbi8qKlxuICogQHJldHVybnMge0FQSS5FbmNvZGVyU2V0dGluZ3N9XG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0cyA9ICgpID0+ICh7XG4gIGNodW5rZXI6IEZpeGVkU2l6ZSxcbiAgZmlsZUNodW5rRW5jb2RlcjogVW5peEZTTGVhZixcbiAgc21hbGxGaWxlRW5jb2RlcjogVW5peEZTTGVhZixcbiAgZmlsZUVuY29kZXI6IFVuaXhGUyxcbiAgZmlsZUxheW91dDogQmFsYW5jZWQud2l0aFdpZHRoKDE3NCksXG4gIGhhc2hlcjogc2hhMjU2LFxuICBsaW5rZXI6IHsgY3JlYXRlTGluazogQ0lELmNyZWF0ZVYxIH0sXG59KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7dW5rbm93bn0gTGF5b3V0XG4gKiBAcGFyYW0ge1BhcnRpYWw8QVBJLkVuY29kZXJTZXR0aW5nczxMYXlvdXQ+Pn0gY29uZmlnXG4gKiBAcmV0dXJucyB7QVBJLkVuY29kZXJTZXR0aW5nczxMYXlvdXQ+fVxuICovXG5leHBvcnQgY29uc3QgY29uZmlndXJlID0gY29uZmlnID0+ICh7XG4gIC4uLmRlZmF1bHRzKCksXG4gIC4uLmNvbmZpZyxcbn0pXG5cbmV4cG9ydCBjb25zdCBVbml4RlNMZWFmID0ge1xuICBjb2RlOiBVbml4RlMuY29kZSxcbiAgbmFtZTogVW5peEZTLm5hbWUsXG4gIGVuY29kZTogVW5peEZTLmVuY29kZUZpbGVDaHVuayxcbn1cblxuZXhwb3J0IGNvbnN0IFVuaXhGU1Jhd0xlYWYgPSB7XG4gIGNvZGU6IFVuaXhGUy5jb2RlLFxuICBuYW1lOiBVbml4RlMubmFtZSxcbiAgZW5jb2RlOiBVbml4RlMuZW5jb2RlUmF3LFxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBMYXlvdXRcbiAqIEBwYXJhbSB7QVBJLk9wdGlvbnM8TGF5b3V0Pn0gb3B0aW9uc1xuICogQHJldHVybnMge0FQSS5WaWV3PExheW91dD59XG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAoeyB3cml0ZXIsIG1ldGFkYXRhID0ge30sIHNldHRpbmdzID0gZGVmYXVsdHMoKSB9KSA9PlxuICBuZXcgRmlsZVdyaXRlclZpZXcoV3JpdGVyLmluaXQod3JpdGVyLCBtZXRhZGF0YSwgY29uZmlndXJlKHNldHRpbmdzKSkpXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7QVBJLlZpZXc8VD59IHZpZXdcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm4ge1Byb21pc2U8QVBJLlZpZXc8VD4+fVxuICovXG5cbmV4cG9ydCBjb25zdCB3cml0ZSA9IGFzeW5jICh2aWV3LCBieXRlcykgPT4ge1xuICBhd2FpdCBwZXJmb3JtKHZpZXcsIFRhc2suc2VuZCh7IHR5cGU6IFwid3JpdGVcIiwgYnl0ZXMgfSkpXG4gIHJldHVybiB2aWV3XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7QVBJLlZpZXc8VD59IHZpZXdcbiAqIEBwYXJhbSB7QVBJLkNsb3NlT3B0aW9uc30gb3B0aW9uc1xuICovXG5leHBvcnQgY29uc3QgY2xvc2UgPSBhc3luYyAoXG4gIHZpZXcsXG4gIHsgcmVsZWFzZUxvY2sgPSBmYWxzZSwgY2xvc2VXcml0ZXIgPSBmYWxzZSB9ID0ge31cbikgPT4ge1xuICBhd2FpdCBwZXJmb3JtKHZpZXcsIFRhc2suc2VuZCh7IHR5cGU6IFwiY2xvc2VcIiB9KSlcbiAgY29uc3QgeyBzdGF0ZSB9ID0gdmlld1xuICBpZiAoc3RhdGUuc3RhdHVzID09PSBcImxpbmtlZFwiKSB7XG4gICAgaWYgKGNsb3NlV3JpdGVyKSB7XG4gICAgICBhd2FpdCB2aWV3LnN0YXRlLndyaXRlci5jbG9zZSgpXG4gICAgfSBlbHNlIGlmIChyZWxlYXNlTG9jaykge1xuICAgICAgdmlldy5zdGF0ZS53cml0ZXIucmVsZWFzZUxvY2soKVxuICAgIH1cbiAgICByZXR1cm4gc3RhdGUubGlua1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDUgKi9cbiAgfSBlbHNlIHtcbiAgICBwYW5pYyhcbiAgICAgIGBFeHBlY3RlZCB3cml0ZXIgdG8gYmUgaW4gJ2xpbmtlZCcgc3RhdGUgYWZ0ZXIgY2xvc2UsIGJ1dCBpdCBpcyBpbiBcIiR7c3RhdGUuc3RhdHVzfVwiIGluc3RlYWRgXG4gICAgKVxuICB9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7QVBJLlZpZXc8VD59IHZpZXdcbiAqIEBwYXJhbSB7VGFzay5FZmZlY3Q8V3JpdGVyLk1lc3NhZ2U+fSBlZmZlY3RcbiAqL1xuY29uc3QgcGVyZm9ybSA9ICh2aWV3LCBlZmZlY3QpID0+XG4gIFRhc2suZm9yayhcbiAgICBUYXNrLmxvb3AoZWZmZWN0LCBtZXNzYWdlID0+IHtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIGVmZmVjdCB9ID0gV3JpdGVyLnVwZGF0ZShtZXNzYWdlLCB2aWV3LnN0YXRlKVxuICAgICAgdmlldy5zdGF0ZSA9IHN0YXRlXG4gICAgICByZXR1cm4gZWZmZWN0XG4gICAgfSlcbiAgKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBMYXlvdXRcbiAqIEBpbXBsZW1lbnRzIHtBUEkuVmlldzxMYXlvdXQ+fVxuICovXG5jbGFzcyBGaWxlV3JpdGVyVmlldyB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge1dyaXRlci5TdGF0ZTxMYXlvdXQ+fSBzdGF0ZVxuICAgKi9cbiAgY29uc3RydWN0b3Ioc3RhdGUpIHtcbiAgICB0aGlzLnN0YXRlID0gc3RhdGVcbiAgfVxuICBnZXQgd3JpdGVyKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLndyaXRlclxuICB9XG4gIGdldCBzZXR0aW5ncygpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5jb25maWdcbiAgfVxuICAvKipcbiAgICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBUEkuVmlldzxMYXlvdXQ+Pn1cbiAgICovXG4gIHdyaXRlKGJ5dGVzKSB7XG4gICAgcmV0dXJuIHdyaXRlKHRoaXMsIGJ5dGVzKVxuICB9XG4gIC8qKlxuICAgKiBAcGFyYW0ge0FQSS5DbG9zZU9wdGlvbnN9IFtvcHRpb25zXVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxVbml4RlMuRmlsZUxpbms+fVxuICAgKi9cbiAgY2xvc2Uob3B0aW9ucykge1xuICAgIHJldHVybiBjbG9zZSh0aGlzLCBvcHRpb25zKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/api.js":
/*!***************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/api.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// @ts-nocheck\n\n/**\n * This is file is shadowed by api.ts and only exists so JS could import it to\n * refer to types without encountering runtime errors\n * @see https://github.com/microsoft/TypeScript/issues/41825\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2FwaS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9zcmMvZmlsZS9hcGkuanM/ZWZmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuXG4vKipcbiAqIFRoaXMgaXMgZmlsZSBpcyBzaGFkb3dlZCBieSBhcGkudHMgYW5kIG9ubHkgZXhpc3RzIHNvIEpTIGNvdWxkIGltcG9ydCBpdCB0b1xuICogcmVmZXIgdG8gdHlwZXMgd2l0aG91dCBlbmNvdW50ZXJpbmcgcnVudGltZSBlcnJvcnNcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9UeXBlU2NyaXB0L2lzc3Vlcy80MTgyNVxuICovXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/chunker.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/chunker.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   open: () => (/* binding */ open),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   write: () => (/* binding */ write)\n/* harmony export */ });\n/* harmony import */ var _chunker_buffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunker/buffer.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/buffer.js\");\n/* harmony import */ var _chunker_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunker/api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/api.js\");\n/* harmony import */ var _writer_util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../writer/util.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/writer/util.js\");\n\n\n\n\n\n/**\n * @typedef {{\n * chunker: Chunker.Chunker\n * }} Config\n *\n *\n * @typedef {{\n * buffer: BufferQueue.View\n * config: Config\n * }} Chunker\n *\n * @typedef {Chunker & {chunks: Chunker.Chunk[]}} ChunkerWithChunks\n */\n\n/**\n * @param {Config} config\n * @returns {Chunker}\n */\nconst open = config => ({\n  config,\n  buffer: _chunker_buffer_js__WEBPACK_IMPORTED_MODULE_0__.empty(),\n})\n\n/**\n * @param {Chunker} state\n * @param {Uint8Array} bytes\n * @returns {ChunkerWithChunks}\n */\nconst write = (state, bytes) =>\n  bytes.byteLength > 0\n    ? split(state.config, state.buffer.push(bytes), false)\n    : { ...state, chunks: _writer_util_js__WEBPACK_IMPORTED_MODULE_2__.EMPTY }\n\n/**\n * @param {Chunker} state\n * @returns {ChunkerWithChunks}\n */\nconst close = state => split(state.config, state.buffer, true)\n\n/**\n * @param {Config} config\n * @param {BufferQueue.View} buffer\n * @param {boolean} end\n * @returns {ChunkerWithChunks}\n */\n\nconst split = (config, buffer, end) => {\n  const chunker = config.chunker\n  const chunks = []\n\n  let offset = 0\n  for (const size of chunker.cut(chunker.context, buffer, end)) {\n    // We may be splitting empty buffer in which case there will be no chunks\n    // in it so we make sure that we do not emit empty buffer.\n    if (size > 0) {\n      const chunk = buffer.subarray(offset, offset + size)\n      chunks.push(chunk)\n      offset += size\n    }\n  }\n\n  return { config, chunks, buffer: buffer.subarray(offset) }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2NodW5rZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrRDtBQUNQO0FBQ0Y7QUFDVDs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxhQUFhLFdBQVcsMEJBQTBCO0FBQ2xEOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSxVQUFVLHFEQUFpQjtBQUMzQixDQUFDOztBQUVEO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQSxRQUFRLGtCQUFrQixrREFBSzs7QUFFL0I7QUFDQSxXQUFXLFNBQVM7QUFDcEIsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxrQkFBa0I7QUFDN0IsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjs7QUFFTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsV0FBVztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2NodW5rZXIuanM/YjM1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBCdWZmZXJRdWV1ZSBmcm9tIFwiLi9jaHVua2VyL2J1ZmZlci5qc1wiXG5pbXBvcnQgKiBhcyBDaHVua2VyIGZyb20gXCIuL2NodW5rZXIvYXBpLmpzXCJcbmltcG9ydCB7IEVNUFRZIH0gZnJvbSBcIi4uL3dyaXRlci91dGlsLmpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL2NodW5rZXIvYXBpLmpzXCJcblxuLyoqXG4gKiBAdHlwZWRlZiB7e1xuICogY2h1bmtlcjogQ2h1bmtlci5DaHVua2VyXG4gKiB9fSBDb25maWdcbiAqXG4gKlxuICogQHR5cGVkZWYge3tcbiAqIGJ1ZmZlcjogQnVmZmVyUXVldWUuVmlld1xuICogY29uZmlnOiBDb25maWdcbiAqIH19IENodW5rZXJcbiAqXG4gKiBAdHlwZWRlZiB7Q2h1bmtlciAmIHtjaHVua3M6IENodW5rZXIuQ2h1bmtbXX19IENodW5rZXJXaXRoQ2h1bmtzXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge0NvbmZpZ30gY29uZmlnXG4gKiBAcmV0dXJucyB7Q2h1bmtlcn1cbiAqL1xuZXhwb3J0IGNvbnN0IG9wZW4gPSBjb25maWcgPT4gKHtcbiAgY29uZmlnLFxuICBidWZmZXI6IEJ1ZmZlclF1ZXVlLmVtcHR5KCksXG59KVxuXG4vKipcbiAqIEBwYXJhbSB7Q2h1bmtlcn0gc3RhdGVcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm5zIHtDaHVua2VyV2l0aENodW5rc31cbiAqL1xuZXhwb3J0IGNvbnN0IHdyaXRlID0gKHN0YXRlLCBieXRlcykgPT5cbiAgYnl0ZXMuYnl0ZUxlbmd0aCA+IDBcbiAgICA/IHNwbGl0KHN0YXRlLmNvbmZpZywgc3RhdGUuYnVmZmVyLnB1c2goYnl0ZXMpLCBmYWxzZSlcbiAgICA6IHsgLi4uc3RhdGUsIGNodW5rczogRU1QVFkgfVxuXG4vKipcbiAqIEBwYXJhbSB7Q2h1bmtlcn0gc3RhdGVcbiAqIEByZXR1cm5zIHtDaHVua2VyV2l0aENodW5rc31cbiAqL1xuZXhwb3J0IGNvbnN0IGNsb3NlID0gc3RhdGUgPT4gc3BsaXQoc3RhdGUuY29uZmlnLCBzdGF0ZS5idWZmZXIsIHRydWUpXG5cbi8qKlxuICogQHBhcmFtIHtDb25maWd9IGNvbmZpZ1xuICogQHBhcmFtIHtCdWZmZXJRdWV1ZS5WaWV3fSBidWZmZXJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gZW5kXG4gKiBAcmV0dXJucyB7Q2h1bmtlcldpdGhDaHVua3N9XG4gKi9cblxuZXhwb3J0IGNvbnN0IHNwbGl0ID0gKGNvbmZpZywgYnVmZmVyLCBlbmQpID0+IHtcbiAgY29uc3QgY2h1bmtlciA9IGNvbmZpZy5jaHVua2VyXG4gIGNvbnN0IGNodW5rcyA9IFtdXG5cbiAgbGV0IG9mZnNldCA9IDBcbiAgZm9yIChjb25zdCBzaXplIG9mIGNodW5rZXIuY3V0KGNodW5rZXIuY29udGV4dCwgYnVmZmVyLCBlbmQpKSB7XG4gICAgLy8gV2UgbWF5IGJlIHNwbGl0dGluZyBlbXB0eSBidWZmZXIgaW4gd2hpY2ggY2FzZSB0aGVyZSB3aWxsIGJlIG5vIGNodW5rc1xuICAgIC8vIGluIGl0IHNvIHdlIG1ha2Ugc3VyZSB0aGF0IHdlIGRvIG5vdCBlbWl0IGVtcHR5IGJ1ZmZlci5cbiAgICBpZiAoc2l6ZSA+IDApIHtcbiAgICAgIGNvbnN0IGNodW5rID0gYnVmZmVyLnN1YmFycmF5KG9mZnNldCwgb2Zmc2V0ICsgc2l6ZSlcbiAgICAgIGNodW5rcy5wdXNoKGNodW5rKVxuICAgICAgb2Zmc2V0ICs9IHNpemVcbiAgICB9XG4gIH1cblxuICByZXR1cm4geyBjb25maWcsIGNodW5rcywgYnVmZmVyOiBidWZmZXIuc3ViYXJyYXkob2Zmc2V0KSB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/chunker.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/api.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/chunker/api.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// @ts-nocheck\n\n/**\n * This is file is shadowed by api.ts and only exists so JS could import it to\n * refer to types without encountering runtime errors\n * @see https://github.com/microsoft/TypeScript/issues/41825\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2NodW5rZXIvYXBpLmpzIiwibWFwcGluZ3MiOiI7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2NodW5rZXIvYXBpLmpzPzVjODIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcblxuLyoqXG4gKiBUaGlzIGlzIGZpbGUgaXMgc2hhZG93ZWQgYnkgYXBpLnRzIGFuZCBvbmx5IGV4aXN0cyBzbyBKUyBjb3VsZCBpbXBvcnQgaXQgdG9cbiAqIHJlZmVyIHRvIHR5cGVzIHdpdGhvdXQgZW5jb3VudGVyaW5nIHJ1bnRpbWUgZXJyb3JzXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvVHlwZVNjcmlwdC9pc3N1ZXMvNDE4MjVcbiAqL1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/buffer.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/chunker/buffer.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copyTo: () => (/* binding */ copyTo),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   iterate: () => (/* binding */ iterate),\n/* harmony export */   push: () => (/* binding */ push),\n/* harmony export */   slice: () => (/* binding */ slice)\n/* harmony export */ });\n/* harmony import */ var _indexed_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./indexed.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/indexed.js\");\n\n\n/**\n * @typedef {{\n * readonly byteOffset: number\n * readonly byteLength: number\n * readonly segments: Uint8Array[]\n * }} BufferSlice\n */\n\n/** @typedef {BufferView} View */\nconst empty = () => new BufferView()\n\n/**\n * @param {Uint8Array[]} segments\n * @param {number} byteOffset\n * @param {number} byteLength\n */\nconst create = (\n  segments,\n  byteOffset = 0,\n  byteLength = totalByteLength(segments)\n) => new BufferView(segments, byteOffset, byteLength)\n\n/**\n *\n * @param {Uint8Array[]} segments\n * @returns\n */\nconst totalByteLength = segments => {\n  let byteLength = 0\n  for (const segment of segments) {\n    byteLength += segment.byteLength\n  }\n  return byteLength\n}\n\n/**\n * @param {BufferSlice} buffer\n * @param {number} [startOffset]\n * @param {number} [endOffset]\n */\nconst slice = (\n  buffer,\n  startOffset = 0,\n  endOffset = buffer.byteLength\n) => {\n  const segments = []\n  const start = startOffset < 0 ? buffer.byteLength - startOffset : startOffset\n  const end = endOffset < 0 ? buffer.byteLength - endOffset : endOffset\n\n  // If start at 0 offset and end is past buffer range it is effectively\n  // as same buffer.\n  if (start === 0 && end >= buffer.byteLength) {\n    return buffer\n  }\n\n  // If range is not within the current buffer just create an empty slice.\n  if (start > end || start > buffer.byteLength || end <= 0) {\n    return empty()\n  }\n\n  let byteLength = 0\n  let offset = 0\n  for (const segment of buffer.segments) {\n    const nextOffset = offset + segment.byteLength\n    // Have not found a start yet\n    if (byteLength === 0) {\n      // If end offset is within the current segment we know start is also,\n      // because it preceeds the end & we had not found start yet.\n      // In such case we create a view with only single segment of bytes\n      // in the range.\n      if (end <= nextOffset) {\n        const range = segment.subarray(start - offset, end - offset)\n        segments.push(range)\n        byteLength = range.byteLength\n        break\n      }\n      // If start offeset falls with in current range (but not the end)\n      // we save matching buffer slice and update byteLength.\n      else if (start < nextOffset) {\n        const range =\n          start === offset ? segment : segment.subarray(start - offset)\n        segments.push(range)\n        byteLength = range.byteLength\n      }\n    }\n    // Otherwise we already started collecting matching segments and are looking\n    // for the end end of the slice. If it is with in the current range capture\n    // the segment and create a view.\n    else if (end <= nextOffset) {\n      const range =\n        end === nextOffset ? segment : segment.subarray(0, end - offset)\n      segments.push(range)\n      byteLength += range.byteLength\n      break\n    }\n    // If end is past current range we just save the segment and continue.\n    else {\n      segments.push(segment)\n      byteLength += segment.byteLength\n    }\n\n    offset = nextOffset\n  }\n\n  return new BufferView(segments, buffer.byteOffset + start, byteLength)\n}\n\n/**\n * @param {BufferSlice} buffer\n * @param {Uint8Array} part\n */\n\nconst push = (buffer, part) => {\n  if (part.byteLength > 0) {\n    // We MUTATE here but that is ok because it is out of bound for the passed\n    // buffer view so there will be no visible side effects.\n    buffer.segments.push(part)\n    return new BufferView(\n      buffer.segments,\n      buffer.byteOffset,\n      buffer.byteLength + part.byteLength\n    )\n  } else {\n    return buffer\n  }\n}\n\n/**\n * @param {BufferSlice} buffer\n * @param {number} n\n */\nconst get = (buffer, n) => {\n  if (n < buffer.byteLength) {\n    let offset = 0\n    for (const segment of buffer.segments) {\n      if (n < offset + segment.byteLength) {\n        return segment[n - offset]\n      } else {\n        offset += segment.byteLength\n      }\n    }\n  }\n\n  return undefined\n}\n\n/**\n *\n * @param {BufferView} buffer\n * @param {Uint8Array} target\n * @param {number} byteOffset\n */\nconst copyTo = (buffer, target, byteOffset) => {\n  let offset = byteOffset\n  for (const segment of buffer.segments) {\n    target.set(segment, offset)\n    offset += segment.byteLength\n  }\n\n  return target\n}\n\n/**\n *\n * @param {BufferView} buffer\n */\nfunction* iterate(buffer) {\n  for (const part of buffer.segments) {\n    yield* part\n  }\n}\n\n/**\n * @extends {Indexed<number>}\n */\nclass BufferView extends _indexed_js__WEBPACK_IMPORTED_MODULE_0__.Indexed {\n  /**\n   * @param {Uint8Array[]} segments\n   * @param {number} byteOffset\n   * @param {number} byteLength\n   */\n  constructor(segments = [], byteOffset = 0, byteLength = 0) {\n    super()\n    /** @hide */\n    this.segments = segments\n    /** @readonly */\n    this.byteLength = byteLength\n    /** @readonly */\n    this.length = byteLength\n    /** @readonly */\n    this.byteOffset = byteOffset\n  }\n\n  [Symbol.iterator]() {\n    return iterate(this)\n  }\n\n  /**\n   * @param {number} [start]\n   * @param {number} [end]\n   */\n  slice(start, end) {\n    return /** @type {BufferView} */ (slice(this, start, end))\n  }\n\n  /**\n   * @param {number} [start]\n   * @param {number} [end]\n   */\n  subarray(start, end) {\n    return /** @type {BufferView} */ (slice(this, start, end))\n  }\n\n  /**\n   *\n   * @param {Uint8Array} bytes\n   */\n  push(bytes) {\n    return /** @type {BufferView} */ (push(this, bytes))\n  }\n\n  /**\n   * @param {number} n\n   */\n  get(n) {\n    return get(this, n)\n  }\n\n  /**\n   *\n   * @param {Uint8Array} target\n   * @param {number} offset\n   */\n  copyTo(target, offset) {\n    return copyTo(this, target, offset)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/fixed.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/chunker/fixed.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   context: () => (/* binding */ context),\n/* harmony export */   cut: () => (/* binding */ cut),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   type: () => (/* binding */ type),\n/* harmony export */   withMaxChunkSize: () => (/* binding */ withMaxChunkSize)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/api.js\");\n\n\nconst name = \"fixed\"\n/**\n * @typedef {Object} FixedSize\n * @property {number} maxChunkSize\n */\n\n/** @type {FixedSize} */\nconst context = {\n  maxChunkSize: 262144,\n}\n\nconst type = \"Stateless\"\n\n/**\n * @param {number} maxChunkSize\n * @returns {API.StatelessChunker<FixedSize>}\n */\nconst withMaxChunkSize = maxChunkSize => ({\n  type: \"Stateless\",\n  context: { maxChunkSize },\n  name,\n  cut,\n})\n\n/**\n * @param {FixedSize} maxChunkSize\n * @param {API.Chunk} buffer\n * @param {boolean} end\n * @returns {number[]}\n */\nconst cut = ({ maxChunkSize }, { byteLength }, end) => {\n  // number of fixed size chunks that would fit\n  const n = (byteLength / maxChunkSize) | 0\n  const chunks = new Array(n).fill(maxChunkSize)\n  const lastChunkSize = end ? byteLength - n * maxChunkSize : 0\n  if (lastChunkSize > 0) {\n    chunks.push(lastChunkSize)\n  }\n  return chunks\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2NodW5rZXIvZml4ZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStCOztBQUV4QjtBQUNQO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0Qjs7QUFFQSxXQUFXLFdBQVc7QUFDZjtBQUNQO0FBQ0E7O0FBRU87O0FBRVA7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLFdBQVcsV0FBVztBQUN0QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNPLGVBQWUsY0FBYyxJQUFJLFlBQVk7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Nwci13ZWIvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2NodW5rZXIvZml4ZWQuanM/ZDc3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBUEkgZnJvbSBcIi4vYXBpLmpzXCJcblxuZXhwb3J0IGNvbnN0IG5hbWUgPSBcImZpeGVkXCJcbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gRml4ZWRTaXplXG4gKiBAcHJvcGVydHkge251bWJlcn0gbWF4Q2h1bmtTaXplXG4gKi9cblxuLyoqIEB0eXBlIHtGaXhlZFNpemV9ICovXG5leHBvcnQgY29uc3QgY29udGV4dCA9IHtcbiAgbWF4Q2h1bmtTaXplOiAyNjIxNDQsXG59XG5cbmV4cG9ydCBjb25zdCB0eXBlID0gXCJTdGF0ZWxlc3NcIlxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBtYXhDaHVua1NpemVcbiAqIEByZXR1cm5zIHtBUEkuU3RhdGVsZXNzQ2h1bmtlcjxGaXhlZFNpemU+fVxuICovXG5leHBvcnQgY29uc3Qgd2l0aE1heENodW5rU2l6ZSA9IG1heENodW5rU2l6ZSA9PiAoe1xuICB0eXBlOiBcIlN0YXRlbGVzc1wiLFxuICBjb250ZXh0OiB7IG1heENodW5rU2l6ZSB9LFxuICBuYW1lLFxuICBjdXQsXG59KVxuXG4vKipcbiAqIEBwYXJhbSB7Rml4ZWRTaXplfSBtYXhDaHVua1NpemVcbiAqIEBwYXJhbSB7QVBJLkNodW5rfSBidWZmZXJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gZW5kXG4gKiBAcmV0dXJucyB7bnVtYmVyW119XG4gKi9cbmV4cG9ydCBjb25zdCBjdXQgPSAoeyBtYXhDaHVua1NpemUgfSwgeyBieXRlTGVuZ3RoIH0sIGVuZCkgPT4ge1xuICAvLyBudW1iZXIgb2YgZml4ZWQgc2l6ZSBjaHVua3MgdGhhdCB3b3VsZCBmaXRcbiAgY29uc3QgbiA9IChieXRlTGVuZ3RoIC8gbWF4Q2h1bmtTaXplKSB8IDBcbiAgY29uc3QgY2h1bmtzID0gbmV3IEFycmF5KG4pLmZpbGwobWF4Q2h1bmtTaXplKVxuICBjb25zdCBsYXN0Q2h1bmtTaXplID0gZW5kID8gYnl0ZUxlbmd0aCAtIG4gKiBtYXhDaHVua1NpemUgOiAwXG4gIGlmIChsYXN0Q2h1bmtTaXplID4gMCkge1xuICAgIGNodW5rcy5wdXNoKGxhc3RDaHVua1NpemUpXG4gIH1cbiAgcmV0dXJuIGNodW5rc1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/fixed.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/indexed.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/chunker/indexed.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Indexed: () => (/* binding */ Indexed)\n/* harmony export */ });\nfunction Indexed() {}\n\nObject.defineProperties(Indexed, {\n  prototype: {\n    value: new Proxy(Object.prototype, {\n      /**\n       * @param {object} target\n       * @param {PropertyKey} property\n       * @param {{get(key:PropertyKey): any}} receiver\n       */\n      get(target, property, receiver) {\n        return typeof property === \"symbol\"\n          ? Reflect.get(target, property, receiver)\n          : receiver.get(property)\n      },\n    }),\n  },\n})\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2NodW5rZXIvaW5kZXhlZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsYUFBYTtBQUM5QixrQkFBa0IsNEJBQTRCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVpQiIsInNvdXJjZXMiOlsid2VicGFjazovL29jcHItd2ViLy4vbm9kZV9tb2R1bGVzL0BpcGxkL3VuaXhmcy9zcmMvZmlsZS9jaHVua2VyL2luZGV4ZWQuanM/MDQ0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBJbmRleGVkKCkge31cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoSW5kZXhlZCwge1xuICBwcm90b3R5cGU6IHtcbiAgICB2YWx1ZTogbmV3IFByb3h5KE9iamVjdC5wcm90b3R5cGUsIHtcbiAgICAgIC8qKlxuICAgICAgICogQHBhcmFtIHtvYmplY3R9IHRhcmdldFxuICAgICAgICogQHBhcmFtIHtQcm9wZXJ0eUtleX0gcHJvcGVydHlcbiAgICAgICAqIEBwYXJhbSB7e2dldChrZXk6UHJvcGVydHlLZXkpOiBhbnl9fSByZWNlaXZlclxuICAgICAgICovXG4gICAgICBnZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBwcm9wZXJ0eSA9PT0gXCJzeW1ib2xcIlxuICAgICAgICAgID8gUmVmbGVjdC5nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpXG4gICAgICAgICAgOiByZWNlaXZlci5nZXQocHJvcGVydHkpXG4gICAgICB9LFxuICAgIH0pLFxuICB9LFxufSlcblxuZXhwb3J0IHsgSW5kZXhlZCB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/indexed.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/layout/api.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/layout/api.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// @ts-nocheck\n\n/**\n * This is file is shadowed by api.ts and only exists so JS could import it to\n * refer to types without encountering runtime errors\n * @see https://github.com/microsoft/TypeScript/issues/41825\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2xheW91dC9hcGkuanMiLCJtYXBwaW5ncyI6IjtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvc3JjL2ZpbGUvbGF5b3V0L2FwaS5qcz83YjFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5cbi8qKlxuICogVGhpcyBpcyBmaWxlIGlzIHNoYWRvd2VkIGJ5IGFwaS50cyBhbmQgb25seSBleGlzdHMgc28gSlMgY291bGQgaW1wb3J0IGl0IHRvXG4gKiByZWZlciB0byB0eXBlcyB3aXRob3V0IGVuY291bnRlcmluZyBydW50aW1lIGVycm9yc1xuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzQxODI1XG4gKi9cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/layout/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/layout/balanced.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/layout/balanced.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   defaults: () => (/* binding */ defaults),\n/* harmony export */   flush: () => (/* binding */ flush),\n/* harmony export */   open: () => (/* binding */ open),\n/* harmony export */   withWidth: () => (/* binding */ withWidth),\n/* harmony export */   write: () => (/* binding */ write)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/layout/api.js\");\n/* harmony import */ var _chunker_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../chunker/api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/chunker/api.js\");\n\n\n\n/**\n * Type representing a state of the balanced tree. First row hold leaves coming\n * into a builder, once number of leaves in the stack reaches `maxChildren` they\n * are moved into `RootNode` instance which is pushed into the next row of nodes.\n * If next row now contains `maxChildren` nodes from there are again moved into\n * a new `RootNode` and pushed into next row etc...\n *\n * For illustration let's assume we have `maxChildren: 3`, after 3 leafs were\n * added tree will have following layout\n *\n * ```\n *           (root1)\n *              |\n *    ----------------------\n *    |         |          |\n * (leaf1)   (leaf2)    (leaf3)\n * ```\n *\n * Which in our model before flushing is represented as follows:\n *\n * ```js\n * {\n *    width: 3\n *    leafIndex: [leaf1, leaf2, leaf3]\n *    nodeIndex: []\n *    nodes: []\n * }\n * ```\n *\n * After flushing 3 leaves (which is width) are moved into a `RootNode` that\n * is added to `nodes` array (and returned so that caller can create a block).\n * Additionally position of the added node is captured in the `index` at an\n * appropriate depth `0` (that is because we don't count leaves into depth).\n *\n * ```js\n * {\n *    width: 3\n *    leafIndex: []\n *    nodeIndex: [[0]]\n *    nodes: [new RootNode([leaf1, leaf2, leaf3])]\n * }\n * ```\n *\n * Increasing number of leaves to 10 would produce following tree layout\n *\n *```\n *                                                         (root7)\n *                                                           |\n *                                    ------------------------------------------\n *                                    |                                        |\n *                                 (root4)                                  (root6)\n *                                    |                                        |\n *            -------------------------------------------------                |\n *            |                       |                       |                |\n *         (root1)                 (root2)                 (root3)          (root5)\n *            |                       |                       |                |\n *    --------|--------       --------|--------       --------|--------        |\n *    |       |       |       |       |       |       |       |       |        |\n * (leaf1) (leaf2) (leaf3) (leaf4) (leaf5) (leaf6) (leaf7) (leaf8) (leaf9) (leaf10)\n * ```\n *\n * Which in our model will look as follows (note we do not have root5 - root7\n * in model because they are build once width is reached or once builder is\n * closed)\n *\n * ```js\n * {\n *    width: 3\n *    leafIndex: [leaf10]\n *    nodeIndex: [\n *      [0, 1, 2], // [r1, r2, r3]\n *      [3]        // [r4]\n *     ]\n *    nodes: [\n *      new Node([leaf1, leaf2, leaf3]), // r1\n *      new Node([leaf4, leaf5, leaf6]), // r2\n *      new Node([leaf7, leaf8, leaf9]), // r3\n *      new Node([ // r4\n *         new Node([leaf1, leaf2, leaf3]), // r1\n *         new Node([leaf4, leaf5, leaf6]), // r2\n *         new Node([leaf7, leaf8, leaf9]), // r3\n *      ])\n *    ]\n * }\n * ```\n *\n * @typedef {{\n * width: number\n * head: Chunker.Chunk | null\n * leafIndex: number[]\n * nodeIndex: number[][]\n * lastID: number\n * }} Balanced\n */\n\nclass Node {\n  /**\n   *\n   * @param {number} id\n   * @param {number[]} children\n   * @param {Layout.Metadata} [metadata]\n   */\n  constructor(id, children, metadata) {\n    this.id = id\n    this.children = children\n    this.metadata = metadata\n  }\n}\n\n/**\n * @typedef Options\n * @property {number} width - Max children per node.\n *\n * @param {number} width\n * @returns {Layout.LayoutEngine<Balanced>}\n */\nconst withWidth = width => ({\n  open: () => open({ width }),\n  write,\n  close,\n})\n\nconst defaults = { width: 174 }\n\n/**\n * @param {Options} options\n * @returns {Balanced}\n */\nconst open = ({ width } = defaults) => ({\n  width,\n\n  head: null,\n  leafIndex: [],\n  nodeIndex: [],\n  lastID: 0,\n})\n\n/**\n *\n * @param {Balanced} layout\n * @param {Chunker.Chunk[]} chunks\n * @returns {Layout.WriteResult<Balanced>}\n */\nconst write = (layout, chunks) => {\n  if (chunks.length === 0) {\n    return { layout, nodes: EMPTY, leaves: EMPTY }\n  } else {\n    let { lastID } = layout\n    // We need to hold on to the first chunk until we either get a second chunk\n    // (at which point we know our layout will have branches) or until we close\n    // (at which point our layout will be single leaf or node depneding on\n    // metadata)\n    const [head, slices] = layout.head\n      ? // If we had a head we have more then two chunks (we already checked\n        // chunks weren't empty) so we process head along with other chunks.\n        [null, (chunks.unshift(layout.head), chunks)]\n      : // If we have no head no leaves and got only one chunk we have to save it\n      // until we can decide what to do with it.\n      chunks.length === 1 && layout.leafIndex.length === 0\n      ? [chunks[0], EMPTY]\n      : // Otherwise we have no head but got enough chunks to know we'll have a\n        // node.\n        [null, chunks]\n\n    if (slices.length === 0) {\n      return { layout: { ...layout, head }, nodes: EMPTY, leaves: EMPTY }\n    } else {\n      const leafIndex = [...layout.leafIndex]\n      const leaves = []\n      for (const chunk of slices) {\n        const leaf = { id: ++lastID, content: chunk }\n        leaves.push(leaf)\n        leafIndex.push(leaf.id)\n      }\n\n      if (leafIndex.length > layout.width) {\n        return flush({ ...layout, leafIndex, head, lastID }, leaves)\n      } else {\n        return {\n          layout: { ...layout, head, leafIndex, lastID },\n          leaves,\n          nodes: EMPTY,\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {Balanced} state\n * @param {Layout.Leaf[]} leaves\n * @param {Layout.Branch[]} [nodes]\n * @param {boolean} [close]\n * @returns {Layout.WriteResult<Balanced>}\n */\nconst flush = (state, leaves = EMPTY, nodes = [], close = false) => {\n  let { lastID } = state\n  const nodeIndex = state.nodeIndex.map(row => [...row])\n  const leafIndex = [...state.leafIndex]\n  const { width } = state\n\n  // Move leaves into nodes\n  while (leafIndex.length > width || (leafIndex.length > 0 && close)) {\n    grow(nodeIndex, 1)\n    const node = new Node(++lastID, leafIndex.splice(0, width))\n    nodeIndex[0].push(node.id)\n    nodes.push(node)\n  }\n\n  let depth = 0\n  while (depth < nodeIndex.length) {\n    const row = nodeIndex[depth]\n    depth++\n\n    while (\n      row.length > width ||\n      (row.length > 0 && close && depth < nodeIndex.length)\n    ) {\n      const node = new Node(++lastID, row.splice(0, width))\n      grow(nodeIndex, depth + 1)\n      nodeIndex[depth].push(node.id)\n      nodes.push(node)\n    }\n  }\n\n  return { layout: { ...state, lastID, leafIndex, nodeIndex }, leaves, nodes }\n}\n\n/**\n * @param {Balanced} layout\n * @param {Layout.Metadata} [metadata]\n * @returns {Layout.CloseResult}\n */\nconst close = (layout, metadata) => {\n  const state = layout\n  if (layout.head) {\n    return {\n      root: { id: 1, content: layout.head, metadata },\n      leaves: EMPTY,\n      nodes: EMPTY,\n    }\n  } else if (layout.leafIndex.length === 0) {\n    return {\n      root: { id: 1, metadata },\n      leaves: EMPTY,\n      nodes: EMPTY,\n    }\n  } else {\n    // Flush with width 1 so all the items will be propagate up the tree\n    // and height of `depth-1` so we propagate nodes all but from the top\n    // most level\n    const { nodes, layout } = flush(state, EMPTY, [], true)\n\n    const { nodeIndex } = layout\n    const height = nodeIndex.length - 1\n\n    const top = nodeIndex[height]\n    if (top.length === 1) {\n      const root = nodes[nodes.length - 1]\n      nodes.length = nodes.length - 1\n      return { root, nodes, leaves: EMPTY }\n    } else {\n      const root = new Node(layout.lastID + 1, top, metadata)\n      return { root, nodes, leaves: EMPTY }\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T[][]} index\n * @param {number} length\n */\nconst grow = (index, length) => {\n  while (index.length < length) {\n    index.push([])\n  }\n  return index\n}\n\n/** @type {never[]} */\nconst EMPTY = []\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/layout/balanced.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/layout/queue.js":
/*!************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/layout/queue.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLink: () => (/* binding */ addLink),\n/* harmony export */   addLinks: () => (/* binding */ addLinks),\n/* harmony export */   addNode: () => (/* binding */ addNode),\n/* harmony export */   addNodes: () => (/* binding */ addNodes),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   mutable: () => (/* binding */ mutable)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/layout/api.js\");\n/* harmony import */ var _queue_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queue/api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/layout/queue/api.js\");\n\n\n\n\n/**\n * @returns {Queue.Result}\n */\nconst empty = () => ({\n  mutable: false,\n  needs: {},\n  nodes: {},\n  links: {},\n  linked: [],\n})\n\nconst mutable = () => ({\n  mutable: true,\n  needs: {},\n  nodes: {},\n  links: {},\n  linked: EMPTY,\n})\n\n/**\n * Adds given layout node to the layout queue. If links for all of the node\n * children are available correspnoding linked node is added (removing links\n * form the queue) otherwise `nood` is added to the wait queue until all the\n * needed links are added.\n *\n *\n * @param {Layout.Branch} node\n * @param {Queue.Queue} queue\n * @returns {Queue.Result}\n */\nconst addNode = (node, queue) => addNodes([node], queue)\n\n/**\n *\n * @param {Layout.Branch[]} newNodes\n * @param {Queue.Queue} input\n * @returns {Queue.Result}\n */\nconst addNodes = (newNodes, input) => {\n  let queue = patch(input, {})\n  for (const node of newNodes) {\n    const { ready, has, wants } = collect(node.children, queue.links)\n    // If node isn't waiting on any of the children it's ready to be linked\n    // so we add linked node diretly.\n    if (wants.length === 0) {\n      queue = patch(queue, {\n        links: assign(undefined, has),\n        linked: [{ id: node.id, links: ready }],\n      })\n    } else {\n      queue = patch(queue, {\n        needs: assign(node.id, wants),\n        nodes: {\n          [node.id]: {\n            children: node.children,\n            count: wants.length,\n          },\n        },\n      })\n    }\n  }\n\n  return queue\n}\n\n/**\n * Adds link to the queue. If queue contains a node that needs this link it gets\n * updated. Either it's gets linked (when it was blocked only on this link) or\n * it's want could is reduced. If no node needed this link it just gets stored\n * for the future node that will need it.\n *\n *\n * @param {Queue.NodeID} id\n * @param {Queue.Link} link\n * @param {Queue.Queue} queue\n * @returns {Queue.Result}\n */\n\nconst addLink = (id, link, queue) => {\n  const nodeID = queue.needs[id]\n  const node = queue.nodes[nodeID]\n  // We have node than needs this link.\n  if (node != null) {\n    // This is the only link it needed so we materialize the node and remove\n    // links and needs associated with it.\n    if (node.count === 1) {\n      const { ready, has } = collect(node.children, {\n        ...queue.links,\n        [id]: link,\n      })\n\n      return patch(queue, {\n        needs: { [id]: undefined },\n        links: assign(undefined, has),\n        nodes: { [nodeID]: undefined },\n        linked: [{ id: nodeID, links: ready }],\n      })\n    }\n    // If node needs more links we just reduce a want count and remove this\n    // need.\n    else {\n      return patch(queue, {\n        needs: { [id]: undefined },\n        links: { [id]: link },\n        nodes: {\n          [nodeID]: {\n            ...node,\n            count: node.count - 1,\n          },\n        },\n      })\n    }\n  }\n  // If we have no one waiting for this link just add it to the queue\n  else {\n    return patch(queue, {\n      links: { [id]: link },\n    })\n  }\n}\n\n/**\n *\n * @param {Queue.Queue} queue\n * @param {Queue.Delta} delta\n */\n\nconst patch = (queue, { needs, nodes, links, linked }) => {\n  const result = queue.mutable ? queue : { ...queue }\n  const original = queue.mutable ? BLANK : undefined\n\n  if (needs) {\n    result.needs = patchDict(queue.needs, needs, original)\n  }\n\n  if (nodes) {\n    result.nodes = patchDict(queue.nodes, nodes, original)\n  }\n\n  if (links) {\n    result.links = patchDict(queue.links, links, original)\n  }\n\n  result.linked = linked\n    ? append(queue.linked || EMPTY, linked, EMPTY)\n    : queue.linked || []\n\n  return /** @type {Queue.Result} */ (result)\n}\n\n/**\n * @template V\n * @template {PropertyKey} K\n * @param {V} value\n * @param {K[]} keys\n * @returns {Record<K, V>}\n */\n\nconst assign = (value, keys) => {\n  const delta = /** @type {Record<K, V>} */ ({})\n  for (const key of keys) {\n    delta[key] = value\n  }\n\n  return delta\n}\n\n/**\n * @template {PropertyKey} K\n * @template V\n * @param {Record<K, V>} target\n *\n * @param {Record<K, V|void>} delta\n * @param {Record<K, V>} original\n * @returns {Record<K, V>}\n */\n\nconst patchDict = (target, delta, original = target) => {\n  const result = target === original ? { ...target } : target\n  for (const entry of Object.entries(delta)) {\n    const [id, value] = /** @type {[K, V|void]} */ (entry)\n    if (value == null) {\n      delete result[id]\n    } else {\n      result[id] = value\n    }\n  }\n\n  return result\n}\n/**\n *\n * @param {Iterable<[Queue.NodeID, Queue.Link]>} entries\n * @param {Queue.Queue} queue\n * @returns {Queue.Queue}\n */\nconst addLinks = (entries, queue) => {\n  for (const [id, link] of entries) {\n    queue = addLink(id, link, queue)\n  }\n  return queue\n}\n\n/**\n * @param {Queue.Queue} queue\n */\n\nconst isEmpty = queue =>\n  Object.keys(queue.nodes).length === 0 && Object.keys(queue.links).length === 0\n\n/**\n * @template T\n * @param {T[]} target\n * @param {T[]} items\n * @param {T[]} original\n */\nconst append = (target, items, original = target) => {\n  if (target === original) {\n    return [...target, ...items]\n  } else {\n    for (const item of items) {\n      target.push(item)\n    }\n    return target\n  }\n}\n\n/**\n * @param {Queue.NodeID[]} children\n * @param {Record<Queue.NodeID, Queue.Link>} source\n * @returns {{has:Queue.NodeID[], wants:Queue.NodeID[], ready:Queue.Link[]}}\n */\nconst collect = (children, source) => {\n  const has = []\n  const wants = []\n  const ready = []\n  for (const child of children) {\n    const link = source[child]\n    if (link) {\n      has.push(child)\n      ready.push(link)\n    } else {\n      wants.push(child)\n    }\n  }\n\n  return { has, wants, ready }\n}\n\nconst EMPTY = /** @type {never[]} */ (Object.freeze([]))\n\nconst BLANK = /** @type {Record<never, never>} */ (Object.freeze({}))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/layout/queue.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/layout/queue/api.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/layout/queue/api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// @ts-nocheck\n\n/**\n * This is file is shadowed by api.ts and only exists so JS could import it to\n * refer to types without encountering runtime errors\n * @see https://github.com/microsoft/TypeScript/issues/41825\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9maWxlL2xheW91dC9xdWV1ZS9hcGkuanMiLCJtYXBwaW5ncyI6IjtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvc3JjL2ZpbGUvbGF5b3V0L3F1ZXVlL2FwaS5qcz9hNmU4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5cbi8qKlxuICogVGhpcyBpcyBmaWxlIGlzIHNoYWRvd2VkIGJ5IGFwaS50cyBhbmQgb25seSBleGlzdHMgc28gSlMgY291bGQgaW1wb3J0IGl0IHRvXG4gKiByZWZlciB0byB0eXBlcyB3aXRob3V0IGVuY291bnRlcmluZyBydW50aW1lIGVycm9yc1xuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzQxODI1XG4gKi9cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/layout/queue/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/file/writer.js":
/*!******************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/file/writer.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   encodeBranch: () => (/* binding */ encodeBranch),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   link: () => (/* binding */ link),\n/* harmony export */   update: () => (/* binding */ update),\n/* harmony export */   write: () => (/* binding */ write),\n/* harmony export */   writeBlock: () => (/* binding */ writeBlock)\n/* harmony export */ });\n/* harmony import */ var actor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! actor */ \"(ssr)/./node_modules/actor/src/lib.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/api.js\");\n/* harmony import */ var _layout_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout/api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/layout/api.js\");\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../codec.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/codec.js\");\n/* harmony import */ var _chunker_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunker.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/chunker.js\");\n/* harmony import */ var _writer_util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../writer/util.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/writer/util.js\");\n/* harmony import */ var _layout_queue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layout/queue.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file/layout/queue.js\");\n\n\n\n\n\n\n\n\n/**\n * @template Layout\n * @typedef {{\n * readonly status: 'open'\n * readonly metadata: UnixFS.Metadata\n * readonly config: API.EncoderSettings<Layout>\n * readonly writer: API.BlockWriter\n * chunker: Chunker.Chunker\n * layout: Layout\n * nodeQueue: Queue.Queue\n * }} Open\n */\n/**\n * @template Layout\n * @typedef {{\n * readonly status: 'closed'\n * readonly metadata: UnixFS.Metadata\n * readonly config: API.EncoderSettings<Layout>\n * readonly writer: API.BlockWriter\n * readonly rootID: Layout.NodeID\n * readonly end?: Task.Fork<void, never>\n * chunker?: null\n * layout?: null\n * nodeQueue: Queue.Queue\n * }} Closed\n */\n/**\n * @template Layout\n * @typedef {{\n * readonly status: 'linked'\n * readonly metadata: UnixFS.Metadata\n * readonly config: API.EncoderSettings<Layout>\n * readonly writer: API.BlockWriter\n * readonly link: Layout.Link\n * chunker?: null\n * layout?: null\n * nodeQueue: Queue.Queue\n * }} Linked\n */\n\n/**\n * @template Layout\n * @typedef {Open<Layout>|Closed<Layout>|Linked<Layout>} State\n */\n\n/**\n * @template {object} Layout\n * @typedef {{\n * state: State<Layout>\n * effect: Task.Effect<Message>\n * }} Update\n */\n/**\n * @typedef {never\n * |{type:\"write\", bytes:Uint8Array}\n * |{type:\"link\", link:API.EncodedFile}\n * |{type:\"block\"}\n * |{type: \"close\"}\n * |{type: \"end\"}\n * } Message\n */\n\n/**\n * @template Layout\n * @param {Message} message\n * @param {State<Layout>} state\n */\nconst update = (message, state) => {\n  switch (message.type) {\n    case \"write\":\n      return write(state, message.bytes)\n    case \"link\":\n      return link(state, message.link)\n    /* c8 ignore next 2 */\n    case \"block\":\n      return { state, effect: actor__WEBPACK_IMPORTED_MODULE_0__.none() }\n    case \"close\":\n      return close(state)\n    case \"end\":\n      return { state, effect: actor__WEBPACK_IMPORTED_MODULE_0__.none() }\n    default:\n      return (0,_writer_util_js__WEBPACK_IMPORTED_MODULE_5__.unreachable)`File Writer got unknown message ${message}`\n  }\n}\n\n/**\n * @template Layout\n * @param {API.BlockWriter} writer\n * @param {UnixFS.Metadata} metadata\n * @param {API.EncoderSettings} config\n * @returns {State<Layout>}\n */\nconst init = (writer, metadata, config) => {\n  return {\n    status: \"open\",\n    metadata,\n    config,\n    writer,\n    chunker: _chunker_js__WEBPACK_IMPORTED_MODULE_4__.open({ chunker: config.chunker }),\n    layout: config.fileLayout.open(),\n    // Note: Writing in large slices e.g. 1GiB at a time creates large queues\n    // with around `16353` items. Immutable version ends up copying it every\n    // time state of the queue changes, which introduces significant overhead.\n    // To avoid this overhead we use mutable implementation which is API\n    // compatible but makes in place updates.\n    // TODO: We should consider using Persistent bit-partitioned vector tries\n    // instead of arrays which would provide immutable interface with neglegable\n    // overhead.\n    // @see https://github.com/Gozala/vectrie\n    nodeQueue: _layout_queue_js__WEBPACK_IMPORTED_MODULE_6__.mutable(),\n  }\n}\n/**\n * @template Layout\n * @param {State<Layout>} state\n * @param {Uint8Array} bytes\n * @returns {Update<Layout>}\n */\nconst write = (state, bytes) => {\n  if (state.status === \"open\") {\n    // Chunk up provided bytes\n    const { chunks, ...chunker } = _chunker_js__WEBPACK_IMPORTED_MODULE_4__.write(state.chunker, bytes)\n\n    // Pass chunks to layout engine to produce nodes\n    const { nodes, leaves, layout } = state.config.fileLayout.write(\n      state.layout,\n      chunks\n    )\n\n    const { linked, ...nodeQueue } = _layout_queue_js__WEBPACK_IMPORTED_MODULE_6__.addNodes(nodes, state.nodeQueue)\n\n    // Create leaf encode tasks for all new leaves\n    const tasks = [\n      ...encodeLeaves(leaves, state.config),\n      ...encodeBranches(linked, state.config),\n    ]\n\n    return {\n      state: {\n        ...state,\n        chunker,\n        layout,\n        nodeQueue,\n      },\n      effect: actor__WEBPACK_IMPORTED_MODULE_0__.listen({\n        link: actor__WEBPACK_IMPORTED_MODULE_0__.effects(tasks),\n      }),\n    }\n  } else {\n    return (0,_writer_util_js__WEBPACK_IMPORTED_MODULE_5__.panic)(\"Unable to perform write on closed file\")\n  }\n}\n\n/**\n * @template Layout\n * @param {State<Layout>} state\n * @param {API.EncodedFile} entry\n * @returns {Update<Layout>}\n */\nconst link = (state, { id, link, block }) => {\n  let { linked, ...nodeQueue } = _layout_queue_js__WEBPACK_IMPORTED_MODULE_6__.addLink(id, link, state.nodeQueue)\n\n  const tasks = encodeBranches(linked, state.config)\n\n  /** @type {State<Layout>} */\n  const newState =\n    state.status === \"closed\" && id === state.rootID\n      ? {\n          ...state,\n          status: \"linked\",\n          link,\n          nodeQueue,\n        }\n      : { ...state, nodeQueue }\n\n  // If we just linked a root and there is a **suspended** \"end\" task we create\n  // a task to resume it.\n  const end =\n    state.status === \"closed\" && id === state.rootID && state.end\n      ? state.end.resume()\n      : actor__WEBPACK_IMPORTED_MODULE_0__.none()\n\n  return {\n    state: newState,\n    effect: actor__WEBPACK_IMPORTED_MODULE_0__.listen({\n      link: actor__WEBPACK_IMPORTED_MODULE_0__.effects(tasks),\n      block: writeBlock(state.writer, block),\n      end,\n    }),\n  }\n}\n\n/**\n * @template Layout\n * @param {State<Layout>} state\n * @returns {Update<Layout>}\n */\nconst close = state => {\n  if (state.status === \"open\") {\n    const { chunks } = _chunker_js__WEBPACK_IMPORTED_MODULE_4__.close(state.chunker)\n    const { layout, ...write } = state.config.fileLayout.write(\n      state.layout,\n      chunks\n    )\n\n    const { root, ...close } = state.config.fileLayout.close(\n      layout,\n      state.metadata\n    )\n\n    const [nodes, leaves] = isLeafNode(root)\n      ? [\n          [...write.nodes, ...close.nodes],\n          [...write.leaves, ...close.leaves, root],\n        ]\n      : [\n          [...write.nodes, ...close.nodes, root],\n          [...write.leaves, ...close.leaves],\n        ]\n\n    const { linked, ...nodeQueue } = _layout_queue_js__WEBPACK_IMPORTED_MODULE_6__.addNodes(nodes, state.nodeQueue)\n\n    const tasks = [\n      ...encodeLeaves(leaves, state.config),\n      ...encodeBranches(linked, state.config),\n    ]\n\n    // We want to keep run loop around until root node is linked. To\n    // accomplish this we fork a task that suspends itself, which we will\n    // resume when root is linked (see link function).\n    // Below we join this forked task in our effect, this way effect is not\n    // complete until task forked task is, which will do once we link the\n    // root.\n    const fork = actor__WEBPACK_IMPORTED_MODULE_0__.fork(actor__WEBPACK_IMPORTED_MODULE_0__.suspend())\n\n    return {\n      state: {\n        ...state,\n        chunker: null,\n        layout: null,\n        rootID: root.id,\n        status: \"closed\",\n        end: fork,\n        nodeQueue,\n      },\n      effect: actor__WEBPACK_IMPORTED_MODULE_0__.listen({\n        link: actor__WEBPACK_IMPORTED_MODULE_0__.effects(tasks),\n        end: actor__WEBPACK_IMPORTED_MODULE_0__.join(fork),\n      }),\n    }\n  } else {\n    return { state, effect: actor__WEBPACK_IMPORTED_MODULE_0__.none() }\n  }\n}\n\n/**\n * Creates concurrent leaf encode tasks. Each one will have an ID corresponding\n * to index in the queue.\n *\n * @param {Layout.Leaf[]} leaves\n * @param {API.EncoderSettings} config\n */\nconst encodeLeaves = (leaves, config) =>\n  leaves.map(leaf => encodeLeaf(config, leaf, config.fileChunkEncoder))\n\n/**\n * @param {API.EncoderSettings} config\n * @param {Layout.Leaf} leaf\n * @param {API.FileChunkEncoder} encoder\n * @returns {Task.Task<API.EncodedFile, never>}\n */\nconst encodeLeaf = function* ({ hasher, linker }, { id, content }, encoder) {\n  const bytes = encoder.encode(content ? asUint8Array(content) : _writer_util_js__WEBPACK_IMPORTED_MODULE_5__.EMPTY_BUFFER)\n  const hash = yield* actor__WEBPACK_IMPORTED_MODULE_0__.wait(hasher.digest(bytes))\n  const cid = linker.createLink(encoder.code, hash)\n\n  const block = { cid, bytes }\n  const link = /** @type {UnixFS.FileLink} */ ({\n    cid,\n    contentByteLength: content ? content.byteLength : 0,\n    dagByteLength: bytes.byteLength,\n  })\n\n  return { id, block, link }\n}\n\n/**\n * @param {Queue.LinkedNode[]} nodes\n * @param {API.EncoderSettings} config\n */\nconst encodeBranches = (nodes, config) =>\n  nodes.map(node => encodeBranch(config, node))\n\n/**\n * @template Layout\n * @param {API.EncoderSettings<Layout>} config\n * @param {Queue.LinkedNode} node\n * @param {UnixFS.Metadata} [metadata]\n * @returns {Task.Task<API.EncodedFile>}\n */\nconst encodeBranch = function* (config, { id, links }, metadata) {\n  const bytes = config.fileEncoder.encode({\n    type: _codec_js__WEBPACK_IMPORTED_MODULE_3__.NodeType.File,\n    layout: \"advanced\",\n    parts: links,\n    metadata,\n  })\n  const hash = yield* actor__WEBPACK_IMPORTED_MODULE_0__.wait(Promise.resolve(config.hasher.digest(bytes)))\n  const cid = config.linker.createLink(config.fileEncoder.code, hash)\n  const block = { bytes, cid }\n  const link = /** @type {UnixFS.FileLink} */ ({\n    cid,\n    contentByteLength: _codec_js__WEBPACK_IMPORTED_MODULE_3__.cumulativeContentByteLength(links),\n    dagByteLength: _codec_js__WEBPACK_IMPORTED_MODULE_3__.cumulativeDagByteLength(bytes, links),\n  })\n\n  return { id, block, link }\n}\n\n/**\n * @param {API.BlockWriter} writer\n * @param {UnixFS.Block} block\n * @returns {Task.Task<void, never>}\n */\n\nconst writeBlock = function* (writer, block) {\n  if ((writer.desiredSize || 0) <= 0) {\n    yield* actor__WEBPACK_IMPORTED_MODULE_0__.wait(writer.ready)\n  }\n  writer.write(block)\n}\n\n/**\n *\n * @param {Uint8Array|Chunker.Chunk} buffer\n * @returns\n */\n\nconst asUint8Array = buffer =>\n  buffer instanceof Uint8Array\n    ? buffer\n    : buffer.copyTo(new Uint8Array(buffer.byteLength), 0)\n\n/**\n * @param {Layout.Node} node\n * @returns {node is Layout.Leaf}\n */\nconst isLeafNode = node => node.children == null\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/file/writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/lib.js":
/*!**********************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/lib.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLOCK_SIZE_LIMIT: () => (/* binding */ BLOCK_SIZE_LIMIT),\n/* harmony export */   NodeType: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_3__.NodeType),\n/* harmony export */   UnixFSLeaf: () => (/* reexport safe */ _file_js__WEBPACK_IMPORTED_MODULE_1__.UnixFSLeaf),\n/* harmony export */   UnixFSRawLeaf: () => (/* reexport safe */ _file_js__WEBPACK_IMPORTED_MODULE_1__.UnixFSRawLeaf),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   closeDirectory: () => (/* reexport safe */ _directory_js__WEBPACK_IMPORTED_MODULE_2__.close),\n/* harmony export */   closeFile: () => (/* reexport safe */ _file_js__WEBPACK_IMPORTED_MODULE_1__.close),\n/* harmony export */   closeShardedDirectory: () => (/* reexport safe */ _sharded_directory_js__WEBPACK_IMPORTED_MODULE_4__.close),\n/* harmony export */   code: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_3__.code),\n/* harmony export */   configure: () => (/* reexport safe */ _file_js__WEBPACK_IMPORTED_MODULE_1__.configure),\n/* harmony export */   createDirectoryWriter: () => (/* reexport safe */ _directory_js__WEBPACK_IMPORTED_MODULE_2__.create),\n/* harmony export */   createFileWriter: () => (/* reexport safe */ _file_js__WEBPACK_IMPORTED_MODULE_1__.create),\n/* harmony export */   createShardedDirectoryWriter: () => (/* reexport safe */ _sharded_directory_js__WEBPACK_IMPORTED_MODULE_4__.create),\n/* harmony export */   createWriter: () => (/* binding */ createWriter),\n/* harmony export */   decode: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_3__.decode),\n/* harmony export */   defaultCapacity: () => (/* binding */ defaultCapacity),\n/* harmony export */   defaults: () => (/* reexport safe */ _file_js__WEBPACK_IMPORTED_MODULE_1__.defaults),\n/* harmony export */   encode: () => (/* reexport safe */ _codec_js__WEBPACK_IMPORTED_MODULE_3__.encode),\n/* harmony export */   forkDirectory: () => (/* reexport safe */ _directory_js__WEBPACK_IMPORTED_MODULE_2__.fork),\n/* harmony export */   forkShardedDirectory: () => (/* reexport safe */ _sharded_directory_js__WEBPACK_IMPORTED_MODULE_4__.fork),\n/* harmony export */   remove: () => (/* reexport safe */ _directory_js__WEBPACK_IMPORTED_MODULE_2__.remove),\n/* harmony export */   set: () => (/* reexport safe */ _directory_js__WEBPACK_IMPORTED_MODULE_2__.set),\n/* harmony export */   withCapacity: () => (/* binding */ withCapacity),\n/* harmony export */   write: () => (/* reexport safe */ _file_js__WEBPACK_IMPORTED_MODULE_1__.write)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/api.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file.js\");\n/* harmony import */ var _directory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./directory.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/directory.js\");\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/codec.js\");\n/* harmony import */ var _sharded_directory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sharded-directory.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/sharded-directory.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @template [Layout=unknown]\n * @param {API.Options<Layout>} options\n * @returns {API.View<Layout>}\n */\nconst createWriter = ({ writable, settings = _file_js__WEBPACK_IMPORTED_MODULE_1__.defaults() }) =>\n  new FileSystemWriter({\n    writer: writable.getWriter(),\n    settings,\n  })\n\n/**\n * @template {{writer:API.BlockWriter}} View\n * @param {View} view\n * @param {API.CloseOptions} options\n */\nconst close = async (\n  view,\n  { releaseLock = true, closeWriter = true } = {}\n) => {\n  if (closeWriter) {\n    await view.writer.close()\n  } else if (releaseLock) {\n    view.writer.releaseLock()\n  }\n\n  return view\n}\n\n/**\n * @template [Layout=unknown]\n * @implemets {API.View<Layout>}\n */\nclass FileSystemWriter {\n  /**\n   * @param {object} options\n   * @param {API.BlockWriter} options.writer\n   * @param {Partial<API.EncoderSettings<Layout>>} options.settings\n   */\n  constructor({ writer, settings }) {\n    this.writer = writer\n    this.settings = _file_js__WEBPACK_IMPORTED_MODULE_1__.configure(settings)\n  }\n\n  /**\n   * @template [L=unknown]\n   * @param {API.WriterOptions<L|Layout>} config\n   */\n  createFileWriter({ settings = this.settings, metadata } = {}) {\n    return _file_js__WEBPACK_IMPORTED_MODULE_1__.create({\n      writer: this.writer,\n      settings,\n      metadata,\n    })\n  }\n\n  /**\n   * @template [L=unknown]\n   * @param {API.WriterOptions<L|Layout>} config\n   */\n  createDirectoryWriter({ settings = this.settings, metadata } = {}) {\n    return _directory_js__WEBPACK_IMPORTED_MODULE_2__.create({\n      writer: this.writer,\n      settings,\n      metadata,\n    })\n  }\n\n  /**\n   * @param {API.CloseOptions} [options]\n   */\n  close(options) {\n    return close(this, options)\n  }\n}\n\n// BlockSizeLimit specifies the maximum size an imported block can have.\n// @see https://github.com/ipfs/go-unixfs/blob/68c015a6f317ed5e21a4870f7c423a4b38b90a96/importer/helpers/helpers.go#L7-L8\nconst BLOCK_SIZE_LIMIT = 1048576 // 1 MB\nconst defaultCapacity = BLOCK_SIZE_LIMIT * 100\n\n/**\n * Creates `QueuingStrategy` that can fit blocks with total size up to given\n * byteLength.\n *\n * @param {number} byteLength\n * @returns {Required<QueuingStrategy<API.Block>>}\n */\nconst withCapacity = (byteLength = defaultCapacity) => ({\n  highWaterMark: byteLength,\n  size: block => block.bytes.length,\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy9saWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBK0I7QUFDRTtBQUNVOztBQUVuQjs7QUFFbUM7QUFTekM7QUFPSztBQUtROztBQUUvQjtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEMsYUFBYTtBQUNiO0FBQ08sd0JBQXdCLHFCQUFxQiw4Q0FBYSxJQUFJO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QyxXQUFXLE1BQU07QUFDakIsV0FBVyxrQkFBa0I7QUFDN0I7QUFDTztBQUNQO0FBQ0EsSUFBSSx5Q0FBeUM7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLGlCQUFpQjtBQUM5QixhQUFhLHNDQUFzQztBQUNuRDtBQUNBLGdCQUFnQixrQkFBa0I7QUFDbEM7QUFDQSxvQkFBb0IsK0NBQWM7QUFDbEM7O0FBRUE7QUFDQTtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0EscUJBQXFCLHFDQUFxQyxJQUFJO0FBQzlELFdBQVcsNENBQVc7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQSxhQUFhLDZCQUE2QjtBQUMxQztBQUNBLDBCQUEwQixxQ0FBcUMsSUFBSTtBQUNuRSxXQUFXLGlEQUFnQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDTztBQUNBOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvc3JjL2xpYi5qcz9iZjk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFQSSBmcm9tIFwiLi9hcGkuanNcIlxuaW1wb3J0ICogYXMgRmlsZSBmcm9tIFwiLi9maWxlLmpzXCJcbmltcG9ydCAqIGFzIERpcmVjdG9yeSBmcm9tIFwiLi9kaXJlY3RvcnkuanNcIlxuXG5leHBvcnQgKiBmcm9tIFwiLi9hcGkuanNcIlxuXG5leHBvcnQgeyBlbmNvZGUsIGRlY29kZSwgTm9kZVR5cGUsIGNvZGUgfSBmcm9tIFwiLi9jb2RlYy5qc1wiXG5leHBvcnQge1xuICBjcmVhdGUgYXMgY3JlYXRlRmlsZVdyaXRlcixcbiAgY2xvc2UgYXMgY2xvc2VGaWxlLFxuICB3cml0ZSxcbiAgY29uZmlndXJlLFxuICBkZWZhdWx0cyxcbiAgVW5peEZTTGVhZixcbiAgVW5peEZTUmF3TGVhZixcbn0gZnJvbSBcIi4vZmlsZS5qc1wiXG5leHBvcnQge1xuICBjcmVhdGUgYXMgY3JlYXRlRGlyZWN0b3J5V3JpdGVyLFxuICBjbG9zZSBhcyBjbG9zZURpcmVjdG9yeSxcbiAgZm9yayBhcyBmb3JrRGlyZWN0b3J5LFxuICBzZXQsXG4gIHJlbW92ZSxcbn0gZnJvbSBcIi4vZGlyZWN0b3J5LmpzXCJcbmV4cG9ydCB7XG4gIGNyZWF0ZSBhcyBjcmVhdGVTaGFyZGVkRGlyZWN0b3J5V3JpdGVyLFxuICBjbG9zZSBhcyBjbG9zZVNoYXJkZWREaXJlY3RvcnksXG4gIGZvcmsgYXMgZm9ya1NoYXJkZWREaXJlY3RvcnksXG59IGZyb20gXCIuL3NoYXJkZWQtZGlyZWN0b3J5LmpzXCJcblxuLyoqXG4gKiBAdGVtcGxhdGUgW0xheW91dD11bmtub3duXVxuICogQHBhcmFtIHtBUEkuT3B0aW9uczxMYXlvdXQ+fSBvcHRpb25zXG4gKiBAcmV0dXJucyB7QVBJLlZpZXc8TGF5b3V0Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVdyaXRlciA9ICh7IHdyaXRhYmxlLCBzZXR0aW5ncyA9IEZpbGUuZGVmYXVsdHMoKSB9KSA9PlxuICBuZXcgRmlsZVN5c3RlbVdyaXRlcih7XG4gICAgd3JpdGVyOiB3cml0YWJsZS5nZXRXcml0ZXIoKSxcbiAgICBzZXR0aW5ncyxcbiAgfSlcblxuLyoqXG4gKiBAdGVtcGxhdGUge3t3cml0ZXI6QVBJLkJsb2NrV3JpdGVyfX0gVmlld1xuICogQHBhcmFtIHtWaWV3fSB2aWV3XG4gKiBAcGFyYW0ge0FQSS5DbG9zZU9wdGlvbnN9IG9wdGlvbnNcbiAqL1xuZXhwb3J0IGNvbnN0IGNsb3NlID0gYXN5bmMgKFxuICB2aWV3LFxuICB7IHJlbGVhc2VMb2NrID0gdHJ1ZSwgY2xvc2VXcml0ZXIgPSB0cnVlIH0gPSB7fVxuKSA9PiB7XG4gIGlmIChjbG9zZVdyaXRlcikge1xuICAgIGF3YWl0IHZpZXcud3JpdGVyLmNsb3NlKClcbiAgfSBlbHNlIGlmIChyZWxlYXNlTG9jaykge1xuICAgIHZpZXcud3JpdGVyLnJlbGVhc2VMb2NrKClcbiAgfVxuXG4gIHJldHVybiB2aWV3XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFtMYXlvdXQ9dW5rbm93bl1cbiAqIEBpbXBsZW1ldHMge0FQSS5WaWV3PExheW91dD59XG4gKi9cbmNsYXNzIEZpbGVTeXN0ZW1Xcml0ZXIge1xuICAvKipcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtBUEkuQmxvY2tXcml0ZXJ9IG9wdGlvbnMud3JpdGVyXG4gICAqIEBwYXJhbSB7UGFydGlhbDxBUEkuRW5jb2RlclNldHRpbmdzPExheW91dD4+fSBvcHRpb25zLnNldHRpbmdzXG4gICAqL1xuICBjb25zdHJ1Y3Rvcih7IHdyaXRlciwgc2V0dGluZ3MgfSkge1xuICAgIHRoaXMud3JpdGVyID0gd3JpdGVyXG4gICAgdGhpcy5zZXR0aW5ncyA9IEZpbGUuY29uZmlndXJlKHNldHRpbmdzKVxuICB9XG5cbiAgLyoqXG4gICAqIEB0ZW1wbGF0ZSBbTD11bmtub3duXVxuICAgKiBAcGFyYW0ge0FQSS5Xcml0ZXJPcHRpb25zPEx8TGF5b3V0Pn0gY29uZmlnXG4gICAqL1xuICBjcmVhdGVGaWxlV3JpdGVyKHsgc2V0dGluZ3MgPSB0aGlzLnNldHRpbmdzLCBtZXRhZGF0YSB9ID0ge30pIHtcbiAgICByZXR1cm4gRmlsZS5jcmVhdGUoe1xuICAgICAgd3JpdGVyOiB0aGlzLndyaXRlcixcbiAgICAgIHNldHRpbmdzLFxuICAgICAgbWV0YWRhdGEsXG4gICAgfSlcbiAgfVxuXG4gIC8qKlxuICAgKiBAdGVtcGxhdGUgW0w9dW5rbm93bl1cbiAgICogQHBhcmFtIHtBUEkuV3JpdGVyT3B0aW9uczxMfExheW91dD59IGNvbmZpZ1xuICAgKi9cbiAgY3JlYXRlRGlyZWN0b3J5V3JpdGVyKHsgc2V0dGluZ3MgPSB0aGlzLnNldHRpbmdzLCBtZXRhZGF0YSB9ID0ge30pIHtcbiAgICByZXR1cm4gRGlyZWN0b3J5LmNyZWF0ZSh7XG4gICAgICB3cml0ZXI6IHRoaXMud3JpdGVyLFxuICAgICAgc2V0dGluZ3MsXG4gICAgICBtZXRhZGF0YSxcbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7QVBJLkNsb3NlT3B0aW9uc30gW29wdGlvbnNdXG4gICAqL1xuICBjbG9zZShvcHRpb25zKSB7XG4gICAgcmV0dXJuIGNsb3NlKHRoaXMsIG9wdGlvbnMpXG4gIH1cbn1cblxuLy8gQmxvY2tTaXplTGltaXQgc3BlY2lmaWVzIHRoZSBtYXhpbXVtIHNpemUgYW4gaW1wb3J0ZWQgYmxvY2sgY2FuIGhhdmUuXG4vLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pcGZzL2dvLXVuaXhmcy9ibG9iLzY4YzAxNWE2ZjMxN2VkNWUyMWE0ODcwZjdjNDIzYTRiMzhiOTBhOTYvaW1wb3J0ZXIvaGVscGVycy9oZWxwZXJzLmdvI0w3LUw4XG5leHBvcnQgY29uc3QgQkxPQ0tfU0laRV9MSU1JVCA9IDEwNDg1NzYgLy8gMSBNQlxuZXhwb3J0IGNvbnN0IGRlZmF1bHRDYXBhY2l0eSA9IEJMT0NLX1NJWkVfTElNSVQgKiAxMDBcblxuLyoqXG4gKiBDcmVhdGVzIGBRdWV1aW5nU3RyYXRlZ3lgIHRoYXQgY2FuIGZpdCBibG9ja3Mgd2l0aCB0b3RhbCBzaXplIHVwIHRvIGdpdmVuXG4gKiBieXRlTGVuZ3RoLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBieXRlTGVuZ3RoXG4gKiBAcmV0dXJucyB7UmVxdWlyZWQ8UXVldWluZ1N0cmF0ZWd5PEFQSS5CbG9jaz4+fVxuICovXG5leHBvcnQgY29uc3Qgd2l0aENhcGFjaXR5ID0gKGJ5dGVMZW5ndGggPSBkZWZhdWx0Q2FwYWNpdHkpID0+ICh7XG4gIGhpZ2hXYXRlck1hcms6IGJ5dGVMZW5ndGgsXG4gIHNpemU6IGJsb2NrID0+IGJsb2NrLmJ5dGVzLmxlbmd0aCxcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/sharded-directory.js":
/*!************************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/sharded-directory.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   configure: () => (/* binding */ configure),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   defaults: () => (/* binding */ defaults),\n/* harmony export */   fork: () => (/* binding */ fork),\n/* harmony export */   remove: () => (/* reexport safe */ _directory_js__WEBPACK_IMPORTED_MODULE_8__.remove),\n/* harmony export */   set: () => (/* reexport safe */ _directory_js__WEBPACK_IMPORTED_MODULE_8__.set)\n/* harmony export */ });\n/* harmony import */ var _perma_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @perma/map */ \"(ssr)/./node_modules/@perma/map/src/lib.js\");\n/* harmony import */ var _perma_map_unixfs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @perma/map/unixfs */ \"(ssr)/./node_modules/@perma/map/src/unixfs.js\");\n/* harmony import */ var _ipld_dag_pb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ipld/dag-pb */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/@ipld/dag-pb/src/index.js\");\n/* harmony import */ var _multiformats_murmur3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @multiformats/murmur3 */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/@multiformats/murmur3/src/index.js\");\n/* harmony import */ var multiformats_block__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/block */ \"(ssr)/./node_modules/@ipld/unixfs/node_modules/multiformats/dist/src/block.js\");\n/* harmony import */ var _directory_api_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./directory/api.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/directory/api.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./file.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/file.js\");\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/codec.js\");\n/* harmony import */ var _directory_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./directory.js */ \"(ssr)/./node_modules/@ipld/unixfs/src/directory.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst configure = _file_js__WEBPACK_IMPORTED_MODULE_6__.configure\nconst defaults = _file_js__WEBPACK_IMPORTED_MODULE_6__.defaults\n\n/**\n * @template [Layout=unknown]\n * @param {API.Options<Layout>} config\n * @returns {API.View<Layout>}\n */\nconst create = ({ writer, settings = defaults(), metadata = {} }) =>\n  new HAMTDirectoryWriter({\n    writer,\n    metadata,\n    settings,\n    entries: new HashMap(),\n    closed: false,\n  })\n\n/**\n * @template {API.State} Writer\n * @param {Writer} writer\n * @returns {Writer}\n */\nconst asWritable = writer => {\n  if (!writer.closed) {\n    return writer\n  } else {\n    throw new Error(\"Can not change written HAMT directory, but you can .fork() and make changes to it\")\n  }\n}\n\n/**\n * @template {unknown} Layout\n * @param {{ state: API.State<Layout> }} view\n * @param {API.CloseOptions} options\n * @returns {Promise<UnixFS.DirectoryLink>}\n */\nconst close = async (\n  view,\n  { closeWriter = false, releaseLock = false } = {}\n) => {\n  const { writer, settings, metadata } = asWritable(view.state)\n  view.state.closed = true\n\n  const { entries } = view.state\n  /* c8 ignore next 3 */\n  if (!(entries instanceof HashMap)) {\n    throw new Error(`not a HAMT: ${entries}`)\n  }\n\n  const hamt = entries.builder.build()\n  const blocks = iterateBlocks(hamt, hamt.root, settings)\n\n  /** @type {UnixFS.BlockView<UnixFS.DirectoryShard>?} */\n  let root = null\n  for await (const block of blocks) {\n    root = block\n    // we make sure that writer has some capacity for this write. If it\n    // does not we await.\n    if ((writer.desiredSize || 0) <= 0) {\n      await writer.ready\n    }\n    // once writer has some capacity we write a block, however we do not\n    // await completion as we don't care when it's taken off the stream.\n    writer.write(block)\n  }\n  /* c8 ignore next */\n  if (root == null) throw new Error(\"no root block yielded\")\n\n  if (closeWriter) {\n    await writer.close()\n  } else if (releaseLock) {\n    writer.releaseLock()\n  }\n\n  return {\n    cid: root.cid,\n    dagByteLength: _codec_js__WEBPACK_IMPORTED_MODULE_7__.cumulativeDagByteLength(root.bytes, root.value.entries),\n  }\n}\n\n/**\n * @template {unknown} Layout\n * @param {UnixFSPermaMap.PersistentHashMap<API.EntryLink>} hamt\n * @param {UnixFSPermaMap.BitmapIndexedNode<API.EntryLink>} node\n * @param {API.EncoderSettings<Layout>} settings\n * @returns {AsyncIterableIterator<UnixFS.BlockView<UnixFS.DirectoryShard>>}\n */\nconst iterateBlocks = async function* (hamt, node, settings) {\n  /** @type {UnixFS.DirectoryEntryLink[]} */\n  const entries = []\n  for (const ent of _perma_map_unixfs__WEBPACK_IMPORTED_MODULE_1__.iterate(node)) {\n    if ('key' in ent) {\n      entries.push(/** @type {UnixFS.DirectoryEntryLink} */ ({\n        name: `${ent.prefix ?? ''}${ent.key ?? ''}`,\n        dagByteLength: ent.value.dagByteLength,\n        cid: ent.value.cid,\n      }))\n    } else {\n      /** @type {UnixFS.BlockView<UnixFS.DirectoryShard>?} */\n      let root = null\n      for await (const block of iterateBlocks(hamt, ent.node, settings)) {\n        yield block\n        root = block\n      }\n      /* c8 ignore next */\n      if (root == null) throw new Error(\"no root block yielded\")\n\n      entries.push(/** @type {UnixFS.ShardedDirectoryLink} */ ({\n        name: ent.prefix,\n        dagByteLength: _codec_js__WEBPACK_IMPORTED_MODULE_7__.cumulativeDagByteLength(root.bytes, root.value.entries),\n        cid: root.cid\n      }))\n    }\n  }\n\n  const shard = _codec_js__WEBPACK_IMPORTED_MODULE_7__.createDirectoryShard(\n    entries,\n    _perma_map_unixfs__WEBPACK_IMPORTED_MODULE_1__.bitField(node),\n    _perma_map_unixfs__WEBPACK_IMPORTED_MODULE_1__.tableSize(hamt),\n    _multiformats_murmur3__WEBPACK_IMPORTED_MODULE_3__.murmur364.code\n  )\n  yield await encodeHAMTShardBlock(shard, settings)\n}\n\n/**\n * @template {unknown} Layout\n * @param {UnixFS.DirectoryShard} shard\n * @param {API.EncoderSettings<Layout>} settings\n * @returns {Promise<UnixFS.BlockView<UnixFS.DirectoryShard>>}\n */\nasync function encodeHAMTShardBlock (shard, settings) {\n  const bytes = _codec_js__WEBPACK_IMPORTED_MODULE_7__.encodeHAMTShard(shard)\n  const hash = await settings.hasher.digest(bytes)\n  const cid = settings.linker.createLink(_ipld_dag_pb__WEBPACK_IMPORTED_MODULE_2__.code, hash)\n  // @ts-ignore Link is not CID\n  return new multiformats_block__WEBPACK_IMPORTED_MODULE_4__.Block({ cid, bytes, value: shard })\n}\n\n/**\n * @template L1, L2\n * @param {API.View<L1>} state\n * @param {Partial<API.Options<L1|L2>>} options\n * @returns {API.View<L1|L2>}\n */\nconst fork = (\n  { state },\n  {\n    writer = state.writer,\n    metadata = state.metadata,\n    settings = state.settings,\n  } = {}\n) =>\n  new HAMTDirectoryWriter({\n    writer,\n    metadata,\n    settings,\n    entries: new HashMap(_perma_map_unixfs__WEBPACK_IMPORTED_MODULE_1__.from(state.entries.entries()).createBuilder()),\n    closed: false,\n  })\n\n/**\n * @template [Layout=unknown]\n * @implements {API.View<Layout>}\n */\nclass HAMTDirectoryWriter {\n  /**\n   * @param {API.State<Layout>} state\n   */\n  constructor(state) {\n    this.state = state\n  }\n  get writer() {\n    return this.state.writer\n  }\n  get settings() {\n    return this.state.settings\n  }\n\n  /**\n   * @param {string} name\n   * @param {UnixFS.FileLink | UnixFS.DirectoryLink} link\n   * @param {API.WriteOptions} [options]\n   */\n\n  set(name, link, options) {\n    return (0,_directory_js__WEBPACK_IMPORTED_MODULE_8__.set)(this, name, link, options)\n  }\n\n  /**\n   * @param {string} name\n   */\n  remove(name) {\n    return (0,_directory_js__WEBPACK_IMPORTED_MODULE_8__.remove)(this, name)\n  }\n\n  /**\n   * @template L\n   * @param {Partial<API.Options<L>>} [options]\n   * @returns {API.View<Layout|L>}\n   */\n  fork(options) {\n    return fork(this, options)\n  }\n\n  /**\n   * @param {API.CloseOptions} [options]\n   * @returns {Promise<UnixFS.DirectoryLink>}\n   */\n  close(options) {\n    return close(this, options)\n  }\n\n  entries() {\n    return this.state.entries.entries()\n  }\n  /**\n   * @param {string} name\n   */\n  has(name) {\n    return this.state.entries.has(name)\n  }\n  get size() {\n    return this.state.entries.size\n  }\n}\n\n/**\n * @implements {Map<string, API.EntryLink>}\n */\nclass HashMap extends Map {\n  /**\n   * @param {UnixFSPermaMap.HashMapBuilder} [builder]\n   */\n  constructor (builder = _perma_map_unixfs__WEBPACK_IMPORTED_MODULE_1__.builder()) {\n    super()\n    /** @type {UnixFSPermaMap.HashMapBuilder} */\n    this.builder = builder\n  }\n\n  clear() {\n    this.builder = _perma_map_unixfs__WEBPACK_IMPORTED_MODULE_1__.builder()\n  }\n\n  /**\n   * @param {string} key\n   */\n  delete(key) {\n    const { root } = this.builder\n    this.builder.delete(key)\n    return this.builder.root !== root\n  }\n\n  /**\n   * @param {(value: API.EntryLink, key: string, map: Map<string, API.EntryLink>) => void} callbackfn\n   * @param {any} [thisArg]\n   */\n  forEach(callbackfn, thisArg = this) {\n    for (const [k, v] of this.builder.root.entries()) {\n      callbackfn.call(thisArg, v, k, this)\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  get(key) {\n    return _perma_map__WEBPACK_IMPORTED_MODULE_0__.get(this.builder, key)\n  }\n\n  /**\n   * @param {string} key\n   */\n  has(key) {\n    return _perma_map__WEBPACK_IMPORTED_MODULE_0__.has(this.builder, key)\n  }\n\n  /**\n   * @param {string} key \n   * @param {API.EntryLink} value \n   */\n  set(key, value) {\n    this.builder.set(key, value)\n    return this\n  }\n\n  get size () {\n    return this.builder.size\n  }\n\n  [Symbol.iterator]() {\n    return this.builder.root.entries()\n  }\n\n  entries() {\n    return this.builder.root.entries()\n  }\n\n  keys() {\n    return this.builder.root.keys()\n  }\n\n  values() {\n    return this.builder.root.values()\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/sharded-directory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/unixfs.js":
/*!*************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/unixfs.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeType: () => (/* binding */ NodeType)\n/* harmony export */ });\n/* harmony import */ var _gen_unixfs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gen/unixfs.js */ \"(ssr)/./node_modules/@ipld/unixfs/gen/unixfs.js\");\n// @ts-nocheck\n\n/**\n * This is file is shadowed by api.ts and only exists so JS could import it to\n * refer to types without encountering runtime errors\n * @see https://github.com/microsoft/TypeScript/issues/41825\n */\n\n\nconst NodeType = _gen_unixfs_js__WEBPACK_IMPORTED_MODULE_0__.Data.DataType\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy91bml4ZnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QztBQUNoQyxpQkFBaUIsZ0RBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvc3JjL3VuaXhmcy5qcz9kMTdiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5cbi8qKlxuICogVGhpcyBpcyBmaWxlIGlzIHNoYWRvd2VkIGJ5IGFwaS50cyBhbmQgb25seSBleGlzdHMgc28gSlMgY291bGQgaW1wb3J0IGl0IHRvXG4gKiByZWZlciB0byB0eXBlcyB3aXRob3V0IGVuY291bnRlcmluZyBydW50aW1lIGVycm9yc1xuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzQxODI1XG4gKi9cblxuaW1wb3J0IHsgRGF0YSB9IGZyb20gXCIuLi9nZW4vdW5peGZzLmpzXCJcbmV4cG9ydCBjb25zdCBOb2RlVHlwZSA9IERhdGEuRGF0YVR5cGVcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/unixfs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ipld/unixfs/src/writer/util.js":
/*!******************************************************!*\
  !*** ./node_modules/@ipld/unixfs/src/writer/util.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EMPTY: () => (/* binding */ EMPTY),\n/* harmony export */   EMPTY_BUFFER: () => (/* binding */ EMPTY_BUFFER),\n/* harmony export */   panic: () => (/* binding */ panic),\n/* harmony export */   unreachable: () => (/* binding */ unreachable)\n/* harmony export */ });\n/**\n * @param {string} reason\n * @returns {never}\n */\nconst panic = reason => {\n  throw new Error(reason)\n}\n\n/**\n * @param {{ raw: readonly string[] | ArrayLike<string>}} template\n * @param {never} [subject]\n * @param {unknown[]} substitutions\n * @returns {never}\n */\nconst unreachable = (template, subject, ...substitutions) =>\n  panic(String.raw(template, JSON.stringify(subject), ...substitutions))\n\nconst EMPTY_BUFFER = new Uint8Array(0)\n/** @type {any[]} */\nconst EMPTY = []\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlwbGQvdW5peGZzL3NyYy93cml0ZXIvdXRpbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsYUFBYSw2Q0FBNkM7QUFDMUQsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsV0FBVztBQUN0QixhQUFhO0FBQ2I7QUFDTztBQUNQOztBQUVPO0FBQ1AsV0FBVyxPQUFPO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vY3ByLXdlYi8uL25vZGVfbW9kdWxlcy9AaXBsZC91bml4ZnMvc3JjL3dyaXRlci91dGlsLmpzPzBmNTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVhc29uXG4gKiBAcmV0dXJucyB7bmV2ZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBwYW5pYyA9IHJlYXNvbiA9PiB7XG4gIHRocm93IG5ldyBFcnJvcihyZWFzb24pXG59XG5cbi8qKlxuICogQHBhcmFtIHt7IHJhdzogcmVhZG9ubHkgc3RyaW5nW10gfCBBcnJheUxpa2U8c3RyaW5nPn19IHRlbXBsYXRlXG4gKiBAcGFyYW0ge25ldmVyfSBbc3ViamVjdF1cbiAqIEBwYXJhbSB7dW5rbm93bltdfSBzdWJzdGl0dXRpb25zXG4gKiBAcmV0dXJucyB7bmV2ZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCB1bnJlYWNoYWJsZSA9ICh0ZW1wbGF0ZSwgc3ViamVjdCwgLi4uc3Vic3RpdHV0aW9ucykgPT5cbiAgcGFuaWMoU3RyaW5nLnJhdyh0ZW1wbGF0ZSwgSlNPTi5zdHJpbmdpZnkoc3ViamVjdCksIC4uLnN1YnN0aXR1dGlvbnMpKVxuXG5leHBvcnQgY29uc3QgRU1QVFlfQlVGRkVSID0gbmV3IFVpbnQ4QXJyYXkoMClcbi8qKiBAdHlwZSB7YW55W119ICovXG5leHBvcnQgY29uc3QgRU1QVFkgPSBbXVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ipld/unixfs/src/writer/util.js\n");

/***/ })

};
;